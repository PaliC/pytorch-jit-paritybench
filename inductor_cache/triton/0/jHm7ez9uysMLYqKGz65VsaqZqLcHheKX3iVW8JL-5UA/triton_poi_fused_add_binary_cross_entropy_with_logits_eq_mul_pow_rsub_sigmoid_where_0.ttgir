#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2.500000e-01> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<7.500000e-01> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.addptr %9, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc9)
    %11 = tt.load %10, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = arith.mulf %8, %cst : tensor<256xf32, #blocked> loc(#loc11)
    %13 = arith.subf %cst_0, %8 : tensor<256xf32, #blocked> loc(#loc12)
    %14 = arith.mulf %13, %cst_1 : tensor<256xf32, #blocked> loc(#loc13)
    %15 = arith.addf %12, %14 : tensor<256xf32, #blocked> loc(#loc14)
    %16 = arith.cmpf oeq, %8, %cst_0 : tensor<256xf32, #blocked> loc(#loc15)
    %17 = arith.subf %cst_2, %11 : tensor<256xf32, #blocked> loc(#loc40)
    %18 = math.exp %17 : tensor<256xf32, #blocked> loc(#loc41)
    %19 = arith.addf %18, %cst_0 : tensor<256xf32, #blocked> loc(#loc42)
    %20 = arith.divf %cst_0, %19 : tensor<256xf32, #blocked> loc(#loc43)
    %21 = arith.subf %cst_0, %20 : tensor<256xf32, #blocked> loc(#loc21)
    %22 = arith.select %16, %20, %21 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc22)
    %23 = arith.subf %cst_0, %22 : tensor<256xf32, #blocked> loc(#loc23)
    %24 = arith.mulf %23, %23 : tensor<256xf32, #blocked> loc(#loc24)
    %25 = arith.mulf %15, %24 : tensor<256xf32, #blocked> loc(#loc25)
    %26 = arith.mulf %13, %11 : tensor<256xf32, #blocked> loc(#loc26)
    %27 = arith.cmpf olt, %cst_2, %11 : tensor<256xf32, #blocked> loc(#loc44)
    %28 = arith.select %27, %cst_2, %11 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc45)
    %29 = math.absf %11 : tensor<256xf32, #blocked> loc(#loc30)
    %30 = arith.subf %cst_2, %29 : tensor<256xf32, #blocked> loc(#loc31)
    %31 = math.exp %30 : tensor<256xf32, #blocked> loc(#loc32)
    %32 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc33)
    %33 = arith.subf %28, %32 : tensor<256xf32, #blocked> loc(#loc34)
    %34 = arith.subf %26, %33 : tensor<256xf32, #blocked> loc(#loc35)
    %35 = arith.mulf %25, %34 : tensor<256xf32, #blocked> loc(#loc36)
    %36 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc37)
    %37 = tt.addptr %36, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc37)
    tt.store %37, %35, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":21:28)
#loc3 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":21:33)
#loc4 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":22:36)
#loc5 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":22:23)
#loc6 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":23:21)
#loc7 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":25:30)
#loc8 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":25:35)
#loc9 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":26:30)
#loc10 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":26:35)
#loc11 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":28:18)
#loc12 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":30:18)
#loc13 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":32:18)
#loc14 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":33:18)
#loc15 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":34:19)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc17 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":35:23)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc21 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":36:19)
#loc22 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":37:34)
#loc23 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":38:19)
#loc24 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":39:20)
#loc25 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":40:19)
#loc26 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":41:19)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc28 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":43:42)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc30 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":44:24)
#loc31 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":45:13)
#loc32 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":46:24)
#loc33 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":47:28)
#loc34 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":48:20)
#loc35 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":49:20)
#loc36 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":50:20)
#loc37 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":51:25)
#loc38 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":51:37)
#loc39 = loc("inductor_cache/nw/cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py":51:4)
#loc40 = loc(callsite(#loc16 at #loc17))
#loc41 = loc(callsite(#loc18 at #loc17))
#loc42 = loc(callsite(#loc19 at #loc17))
#loc43 = loc(callsite(#loc20 at #loc17))
#loc44 = loc(callsite(#loc27 at #loc28))
#loc45 = loc(callsite(#loc29 at #loc28))
