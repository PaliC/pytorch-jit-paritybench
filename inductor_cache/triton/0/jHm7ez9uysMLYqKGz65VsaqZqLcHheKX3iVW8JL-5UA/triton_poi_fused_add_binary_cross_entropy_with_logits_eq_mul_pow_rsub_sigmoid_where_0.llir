; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %11) #2, !dbg !18
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !18
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !18
  %19 = bitcast i32 %17 to float, !dbg !18
  %20 = bitcast i32 %18 to float, !dbg !18
  %21 = fsub float 0.000000e+00, %19, !dbg !19
  %22 = fsub float 0.000000e+00, %20, !dbg !19
  %23 = fmul float %21, 0x3FF7154760000000, !dbg !23
  %24 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %23) #2, !dbg !23
  %25 = fmul float %22, 0x3FF7154760000000, !dbg !23
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #2, !dbg !23
  %27 = fadd float %24, 1.000000e+00, !dbg !24
  %28 = fadd float %26, 1.000000e+00, !dbg !24
  %29 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %27) #2, !dbg !25
  %30 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %28) #2, !dbg !25
  %31 = tail call float @llvm.fabs.f32(float %19), !dbg !26
  %32 = tail call float @llvm.fabs.f32(float %20), !dbg !26
  %33 = fsub float 0.000000e+00, %31, !dbg !27
  %34 = fsub float 0.000000e+00, %32, !dbg !27
  %35 = fmul float %33, 0x3FF7154760000000, !dbg !28
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #2, !dbg !28
  %37 = fmul float %34, 0x3FF7154760000000, !dbg !28
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #2, !dbg !28
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not.i = icmp eq i32 %39, 0, !dbg !29
  %40 = tail call float @llvm.nvvm.add.rz.ftz.f(float %36, float 1.000000e+00) #2, !dbg !29
  %41 = tail call float @llvm.nvvm.add.rz.f(float %36, float 1.000000e+00) #2, !dbg !29
  %.01.i = select i1 %.not.i, float %41, float %40, !dbg !29
  %42 = bitcast float %.01.i to i32, !dbg !29
  %43 = add i32 %42, -1061158912, !dbg !29
  %44 = and i32 %43, -8388608, !dbg !29
  %45 = bitcast float %36 to i32, !dbg !29
  %46 = sub i32 %45, %44, !dbg !29
  %47 = bitcast i32 %46 to float, !dbg !29
  %48 = sub i32 1082130432, %44, !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not14.i = icmp eq i32 %50, 0, !dbg !29
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %49, float -1.000000e+00) #2, !dbg !29
  %52 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %49, float -1.000000e+00) #2, !dbg !29
  %.09.i = select i1 %.not14.i, float %52, float %51, !dbg !29
  %53 = fadd float %.09.i, %47, !dbg !29
  %54 = sitofp i32 %44 to float, !dbg !29
  %55 = fmul float %54, 0x3E80000000000000, !dbg !29
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not15.i = icmp eq i32 %56, 0, !dbg !29
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %53, float 0x3FBB000240000000) #2, !dbg !29
  %58 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %53, float 0x3FBB000240000000) #2, !dbg !29
  %.012.i = select i1 %.not15.i, float %58, float %57, !dbg !29
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not16.i = icmp eq i32 %59, 0, !dbg !29
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %53, float 0xBFC0EF1C00000000) #2, !dbg !29
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %53, float 0xBFC0EF1C00000000) #2, !dbg !29
  %.010.i = select i1 %.not16.i, float %61, float %60, !dbg !29
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not17.i = icmp eq i32 %62, 0, !dbg !29
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %53, float 0x3FC28C8EA0000000) #2, !dbg !29
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %53, float 0x3FC28C8EA0000000) #2, !dbg !29
  %.06.i = select i1 %.not17.i, float %64, float %63, !dbg !29
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not18.i = icmp eq i32 %65, 0, !dbg !29
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %53, float 0xBFC54D1BA0000000) #2, !dbg !29
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %53, float 0xBFC54D1BA0000000) #2, !dbg !29
  %.02.i = select i1 %.not18.i, float %67, float %66, !dbg !29
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not19.i = icmp eq i32 %68, 0, !dbg !29
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %53, float 0x3FC995F3C0000000) #2, !dbg !29
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %53, float 0x3FC995F3C0000000) #2, !dbg !29
  %.0.i = select i1 %.not19.i, float %70, float %69, !dbg !29
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not20.i = icmp eq i32 %71, 0, !dbg !29
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %53, float 0xBFD0000840000000) #2, !dbg !29
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %53, float 0xBFD0000840000000) #2, !dbg !29
  %.011.i = select i1 %.not20.i, float %73, float %72, !dbg !29
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not21.i = icmp eq i32 %74, 0, !dbg !29
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %53, float 0x3FD5555CC0000000) #2, !dbg !29
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %53, float 0x3FD5555CC0000000) #2, !dbg !29
  %.08.i = select i1 %.not21.i, float %76, float %75, !dbg !29
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not22.i = icmp eq i32 %77, 0, !dbg !29
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %53, float -5.000000e-01) #2, !dbg !29
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %53, float -5.000000e-01) #2, !dbg !29
  %.07.i = select i1 %.not22.i, float %79, float %78, !dbg !29
  %80 = fmul float %53, %.07.i, !dbg !29
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not23.i = icmp eq i32 %81, 0, !dbg !29
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %80, float %53, float %53) #2, !dbg !29
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %80, float %53, float %53) #2, !dbg !29
  %.05.i = select i1 %.not23.i, float %83, float %82, !dbg !29
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not24.i = icmp eq i32 %84, 0, !dbg !29
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !29
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %55, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !29
  %.04.i = select i1 %.not24.i, float %86, float %85, !dbg !29
  %87 = icmp ugt i32 %45, 2139095039, !dbg !29
  br i1 %87, label %88, label %__nv_log1pf.exit, !dbg !29

88:                                               ; preds = %4
  %89 = icmp sgt i32 %45, -1082130432, !dbg !29
  br i1 %89, label %__nv_fmaf_rn.exit.i, label %93, !dbg !29

__nv_fmaf_rn.exit.i:                              ; preds = %88
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not25.i = icmp eq i32 %90, 0, !dbg !29
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %.03.i = select i1 %.not25.i, float %92, float %91, !dbg !29
  br label %93, !dbg !29

93:                                               ; preds = %__nv_fmaf_rn.exit.i, %88
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %88 ], !dbg !29
  %94 = fcmp oeq float %36, 0.000000e+00, !dbg !29
  %r.1.i = select i1 %94, float -0.000000e+00, float %r.0.i, !dbg !29
  br label %__nv_log1pf.exit, !dbg !29

__nv_log1pf.exit:                                 ; preds = %4, %93
  %r.2.i = phi float [ %r.1.i, %93 ], [ %.04.i, %4 ], !dbg !29
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not.i1 = icmp eq i32 %95, 0, !dbg !29
  %96 = tail call float @llvm.nvvm.add.rz.ftz.f(float %38, float 1.000000e+00) #2, !dbg !29
  %97 = tail call float @llvm.nvvm.add.rz.f(float %38, float 1.000000e+00) #2, !dbg !29
  %.01.i2 = select i1 %.not.i1, float %97, float %96, !dbg !29
  %98 = bitcast float %.01.i2 to i32, !dbg !29
  %99 = add i32 %98, -1061158912, !dbg !29
  %100 = and i32 %99, -8388608, !dbg !29
  %101 = bitcast float %38 to i32, !dbg !29
  %102 = sub i32 %101, %100, !dbg !29
  %103 = bitcast i32 %102 to float, !dbg !29
  %104 = sub i32 1082130432, %100, !dbg !29
  %105 = bitcast i32 %104 to float, !dbg !29
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not14.i3 = icmp eq i32 %106, 0, !dbg !29
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %105, float -1.000000e+00) #2, !dbg !29
  %108 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %105, float -1.000000e+00) #2, !dbg !29
  %.09.i4 = select i1 %.not14.i3, float %108, float %107, !dbg !29
  %109 = fadd float %.09.i4, %103, !dbg !29
  %110 = sitofp i32 %100 to float, !dbg !29
  %111 = fmul float %110, 0x3E80000000000000, !dbg !29
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not15.i5 = icmp eq i32 %112, 0, !dbg !29
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %109, float 0x3FBB000240000000) #2, !dbg !29
  %114 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %109, float 0x3FBB000240000000) #2, !dbg !29
  %.012.i6 = select i1 %.not15.i5, float %114, float %113, !dbg !29
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not16.i7 = icmp eq i32 %115, 0, !dbg !29
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i6, float %109, float 0xBFC0EF1C00000000) #2, !dbg !29
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i6, float %109, float 0xBFC0EF1C00000000) #2, !dbg !29
  %.010.i8 = select i1 %.not16.i7, float %117, float %116, !dbg !29
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not17.i9 = icmp eq i32 %118, 0, !dbg !29
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i8, float %109, float 0x3FC28C8EA0000000) #2, !dbg !29
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i8, float %109, float 0x3FC28C8EA0000000) #2, !dbg !29
  %.06.i10 = select i1 %.not17.i9, float %120, float %119, !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not18.i11 = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %109, float 0xBFC54D1BA0000000) #2, !dbg !29
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %109, float 0xBFC54D1BA0000000) #2, !dbg !29
  %.02.i12 = select i1 %.not18.i11, float %123, float %122, !dbg !29
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not19.i13 = icmp eq i32 %124, 0, !dbg !29
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float %109, float 0x3FC995F3C0000000) #2, !dbg !29
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float %109, float 0x3FC995F3C0000000) #2, !dbg !29
  %.0.i14 = select i1 %.not19.i13, float %126, float %125, !dbg !29
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not20.i15 = icmp eq i32 %127, 0, !dbg !29
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %109, float 0xBFD0000840000000) #2, !dbg !29
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %109, float 0xBFD0000840000000) #2, !dbg !29
  %.011.i16 = select i1 %.not20.i15, float %129, float %128, !dbg !29
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not21.i17 = icmp eq i32 %130, 0, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i16, float %109, float 0x3FD5555CC0000000) #2, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i16, float %109, float 0x3FD5555CC0000000) #2, !dbg !29
  %.08.i18 = select i1 %.not21.i17, float %132, float %131, !dbg !29
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not22.i19 = icmp eq i32 %133, 0, !dbg !29
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i18, float %109, float -5.000000e-01) #2, !dbg !29
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i18, float %109, float -5.000000e-01) #2, !dbg !29
  %.07.i20 = select i1 %.not22.i19, float %135, float %134, !dbg !29
  %136 = fmul float %109, %.07.i20, !dbg !29
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not23.i21 = icmp eq i32 %137, 0, !dbg !29
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float %109, float %109) #2, !dbg !29
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %136, float %109, float %109) #2, !dbg !29
  %.05.i22 = select i1 %.not23.i21, float %139, float %138, !dbg !29
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not24.i23 = icmp eq i32 %140, 0, !dbg !29
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float 0x3FE62E4300000000, float %.05.i22) #2, !dbg !29
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %111, float 0x3FE62E4300000000, float %.05.i22) #2, !dbg !29
  %.04.i24 = select i1 %.not24.i23, float %142, float %141, !dbg !29
  %143 = icmp ugt i32 %101, 2139095039, !dbg !29
  br i1 %143, label %144, label %__nv_log1pf.exit31, !dbg !29

144:                                              ; preds = %__nv_log1pf.exit
  %145 = icmp sgt i32 %101, -1082130432, !dbg !29
  br i1 %145, label %__nv_fmaf_rn.exit.i28, label %149, !dbg !29

__nv_fmaf_rn.exit.i28:                            ; preds = %144
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !29
  %.not25.i29 = icmp eq i32 %146, 0, !dbg !29
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %38, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %38, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !29
  %.03.i30 = select i1 %.not25.i29, float %148, float %147, !dbg !29
  br label %149, !dbg !29

149:                                              ; preds = %__nv_fmaf_rn.exit.i28, %144
  %r.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i28 ], [ %.04.i24, %144 ], !dbg !29
  %150 = fcmp oeq float %38, 0.000000e+00, !dbg !29
  %r.1.i27 = select i1 %150, float -0.000000e+00, float %r.0.i26, !dbg !29
  br label %__nv_log1pf.exit31, !dbg !29

__nv_log1pf.exit31:                               ; preds = %__nv_log1pf.exit, %149
  %r.2.i25 = phi float [ %r.1.i27, %149 ], [ %.04.i24, %__nv_log1pf.exit ], !dbg !29
  %151 = fcmp ogt float %20, 0.000000e+00, !dbg !30
  %152 = select i1 %151, float 0.000000e+00, float %20, !dbg !34
  %153 = fcmp ogt float %19, 0.000000e+00, !dbg !30
  %154 = select i1 %153, float 0.000000e+00, float %19, !dbg !34
  %155 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %156 = bitcast i32 %155 to float, !dbg !16
  %157 = fsub float 1.000000e+00, %156, !dbg !35
  %158 = fmul float %157, %20, !dbg !36
  %159 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %160 = bitcast i32 %159 to float, !dbg !16
  %161 = fsub float 1.000000e+00, %160, !dbg !35
  %162 = fmul float %161, %19, !dbg !36
  %163 = fmul float %156, 2.500000e-01, !dbg !37
  %164 = fmul float %157, 7.500000e-01, !dbg !38
  %165 = fadd float %163, %164, !dbg !39
  %166 = fcmp oeq float %156, 1.000000e+00, !dbg !40
  %167 = fsub float 1.000000e+00, %30, !dbg !41
  %168 = select i1 %166, float %30, float %167, !dbg !42
  %169 = fsub float 1.000000e+00, %168, !dbg !43
  %170 = fmul float %169, %169, !dbg !44
  %171 = fmul float %165, %170, !dbg !45
  %172 = fmul float %160, 2.500000e-01, !dbg !37
  %173 = fmul float %161, 7.500000e-01, !dbg !38
  %174 = fadd float %172, %173, !dbg !39
  %175 = fcmp oeq float %160, 1.000000e+00, !dbg !40
  %176 = fsub float 1.000000e+00, %29, !dbg !41
  %177 = select i1 %175, float %29, float %176, !dbg !42
  %178 = fsub float 1.000000e+00, %177, !dbg !43
  %179 = fmul float %178, %178, !dbg !44
  %180 = fmul float %174, %179, !dbg !45
  %181 = fsub float %154, %r.2.i, !dbg !46
  %182 = fsub float %152, %r.2.i25, !dbg !46
  %183 = fsub float %162, %181, !dbg !47
  %184 = fsub float %158, %182, !dbg !47
  %185 = fmul float %180, %183, !dbg !48
  %186 = fmul float %171, %184, !dbg !48
  %187 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !49
  %188 = bitcast float %185 to i32, !dbg !50
  %189 = bitcast float %186 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %188, i32 %189, ptr addrspace(1) %187, i1 %11) #2, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnwoy24sihiterwr7utw4syzwajosivf3jqk67wkde2257ecz5an.py", directory: "inductor_cache/nw")
!4 = !{ptr @triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0", linkageName: "triton_poi_fused_add_binary_cross_entropy_with_logits_eq_mul_pow_rsub_sigmoid_where_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 47, column: 30, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 35, column: 23, scope: !7)
!23 = !DILocation(line: 47, column: 29, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 47, column: 20, scope: !20, inlinedAt: !22)
!25 = !DILocation(line: 47, column: 16, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 44, column: 24, scope: !7)
!27 = !DILocation(line: 45, column: 13, scope: !7)
!28 = !DILocation(line: 46, column: 24, scope: !7)
!29 = !DILocation(line: 47, column: 28, scope: !7)
!30 = !DILocation(line: 110, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 43, column: 42, scope: !7)
!34 = !DILocation(line: 113, column: 29, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 30, column: 18, scope: !7)
!36 = !DILocation(line: 41, column: 19, scope: !7)
!37 = !DILocation(line: 28, column: 18, scope: !7)
!38 = !DILocation(line: 32, column: 18, scope: !7)
!39 = !DILocation(line: 33, column: 18, scope: !7)
!40 = !DILocation(line: 34, column: 19, scope: !7)
!41 = !DILocation(line: 36, column: 19, scope: !7)
!42 = !DILocation(line: 37, column: 34, scope: !7)
!43 = !DILocation(line: 38, column: 19, scope: !7)
!44 = !DILocation(line: 39, column: 20, scope: !7)
!45 = !DILocation(line: 40, column: 19, scope: !7)
!46 = !DILocation(line: 48, column: 20, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 50, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 25, scope: !7)
!50 = !DILocation(line: 51, column: 37, scope: !7)
!51 = !DILocation(line: 51, column: 4, scope: !7)
