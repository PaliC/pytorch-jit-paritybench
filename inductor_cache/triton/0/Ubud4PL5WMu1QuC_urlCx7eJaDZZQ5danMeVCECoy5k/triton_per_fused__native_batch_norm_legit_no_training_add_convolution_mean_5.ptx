//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_11
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<90>;
	.reg .f32 	%f<64>;
	.reg .b64 	%rd<44>;
	.loc	1 19 0                          // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_0];
	ld.param.u64 	%rd32, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_1];
$L__tmp0:
	.loc	1 24 28                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd33, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_2];
	.loc	1 27 26                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:27:26
	mov.u32 	%r59, %tid.x;
	shl.b32 	%r60, %r59, 2;
	ld.param.u64 	%rd34, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_3];
	and.b32  	%r61, %r60, 1020;
	ld.param.u64 	%rd35, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_4];
	.loc	1 32 19                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:32:19
	shr.s32 	%r62, %r1, 31;
	shr.u32 	%r63, %r62, 27;
	add.s32 	%r64, %r1, %r63;
	and.b32  	%r65, %r64, -32;
	sub.s32 	%r66, %r1, %r65;
	ld.param.u64 	%rd36, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_5];
	.loc	1 33 44                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:44
	shl.b32 	%r67, %r1, 10;
	ld.param.u64 	%rd37, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_6];
	.loc	1 33 39                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:39
	or.b32  	%r68, %r67, %r61;
	ld.param.u64 	%rd38, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_7];
	ld.param.u64 	%rd39, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_8];
	.loc	1 33 34                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:34
	mul.wide.s32 	%rd40, %r68, 4;
	add.s64 	%rd1, %rd31, %rd40;
	ld.param.u64 	%rd41, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_5_param_9];
	mov.pred 	%p1, -1;
	.loc	1 33 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:49
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:34:30
	mul.wide.s32 	%rd42, %r66, 4;
	add.s64 	%rd2, %rd34, %rd42;
	.loc	1 34 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 34                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:34
	add.s64 	%rd6, %rd32, %rd40;
	.loc	1 35 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:36:30
	add.s64 	%rd7, %rd35, %rd42;
	.loc	1 36 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:36:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 30                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:37:30
	add.s64 	%rd11, %rd36, %rd42;
	.loc	1 37 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:37:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 38 30                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:38:30
	add.s64 	%rd15, %rd37, %rd42;
	.loc	1 38 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:38:35
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r25;
	.loc	1 39 31                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:39:31
	add.s64 	%rd19, %rd38, %rd42;
	.loc	1 39 36                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:39:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:40:31
	add.s64 	%rd23, %rd39, %rd42;
	.loc	1 40 36                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:40:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 45 19                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:45:19
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 46 27                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:46:27
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 35 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:49
	mov.b32 	%f4, %r13;
	.loc	1 36 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:36:35
	mov.b32 	%f5, %r17;
	.loc	1 42 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:42:18
	add.f32 	%f6, %f4, %f5;
	.loc	1 37 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:37:35
	mov.b32 	%f7, %r21;
	.loc	1 43 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:43:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 35 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:49
	mov.b32 	%f9, %r12;
	.loc	1 42 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:42:18
	add.f32 	%f10, %f9, %f5;
	.loc	1 43 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:43:18
	sub.f32 	%f11, %f10, %f7;
	.loc	1 35 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:49
	mov.b32 	%f12, %r11;
	.loc	1 42 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:42:18
	add.f32 	%f13, %f12, %f5;
	.loc	1 43 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:43:18
	sub.f32 	%f14, %f13, %f7;
	.loc	1 35 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:35:49
	mov.b32 	%f15, %r10;
	.loc	1 42 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:42:18
	add.f32 	%f16, %f15, %f5;
	.loc	1 43 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:43:18
	sub.f32 	%f17, %f16, %f7;
	.loc	1 33 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:49
	mov.b32 	%f18, %r5;
	.loc	1 34 35                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:34:35
	mov.b32 	%f19, %r9;
	.loc	1 41 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:41:18
	add.f32 	%f20, %f18, %f19;
	.loc	1 33 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:49
	mov.b32 	%f21, %r4;
	.loc	1 41 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:41:18
	add.f32 	%f22, %f21, %f19;
	.loc	1 33 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:49
	mov.b32 	%f23, %r3;
	.loc	1 41 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:41:18
	add.f32 	%f24, %f23, %f19;
	.loc	1 33 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:33:49
	mov.b32 	%f25, %r2;
	.loc	1 41 18                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:41:18
	add.f32 	%f26, %f25, %f19;
	.loc	1 40 36                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:40:36
	mov.b32 	%f27, %r33;
	.loc	1 39 36                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:39:36
	mov.b32 	%f28, %r29;
	.loc	1 27 26                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:27:26
	and.b32  	%r69, %r59, 31;
	.loc	1 48 20                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:48:20
	mov.b32 	%r36, %f3;
	mov.b32 	%r35, 1065353216;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f29, %r34;
	.loc	1 51 19                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:51:19
	mul.f32 	%f30, %f17, %f29;
	mul.f32 	%f31, %f14, %f29;
	mul.f32 	%f32, %f11, %f29;
	mul.f32 	%f33, %f8, %f29;
	.loc	1 53 20                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:53:20
	fma.rn.f32 	%f34, %f30, %f28, %f27;
	fma.rn.f32 	%f35, %f31, %f28, %f27;
	fma.rn.f32 	%f36, %f32, %f28, %f27;
	fma.rn.f32 	%f37, %f33, %f28, %f27;
	.loc	1 54 19                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:54:19
	add.f32 	%f38, %f26, %f34;
	add.f32 	%f39, %f24, %f35;
	add.f32 	%f40, %f22, %f36;
	add.f32 	%f41, %f20, %f37;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f38, %f39;
	add.f32 	%f43, %f40, %f42;
	add.f32 	%f44, %f41, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f44;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f45, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f46;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f47, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f48;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f49, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f50;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f51, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f52;
	shfl.sync.bfly.b32	%r79, %r78, 1, 31, -1;
	mov.b32 	%f53, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p27, %r69, 0;
	shr.u32 	%r80, %r59, 3;
	and.b32  	%r81, %r80, 28;
	mov.u32 	%r82, global_smem;
	add.s32 	%r37, %r82, %r81;
	mov.b32 	%r38, %f54;
	// begin inline asm
	@%p27 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p28, %r59, 8;
	add.s32 	%r40, %r82, %r60;
	// begin inline asm
	@%p28 ld.shared.b32 %r39, [ %r40 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r39;
	shfl.sync.bfly.b32	%r83, %r39, 4, 31, -1;
	mov.b32 	%f56, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f57;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f58, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f59;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f60, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r88, %r59, 7;
	setp.eq.s32 	%p34, %r88, 0;
	and.pred  	%p29, %p28, %p34;
	mov.b32 	%r42, %f61;
	// begin inline asm
	@%p29 st.shared.b32 [ %r40 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f62, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f63, %f62, 0f00000000;
$L__tmp3:
	.loc	1 58 20                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:58:20
	mov.b32 	%r44, %f63;
	mov.b32 	%r45, 1149239296;
	// begin inline asm
	div.full.f32 %r58, %r44, %r45;
	// end inline asm
	.loc	1 59 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:59:49
	mov.b32 	%r46, %f26;
	mov.b32 	%r47, %f24;
	mov.b32 	%r48, %f22;
	mov.b32 	%r49, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	.loc	1 60 49                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:60:49
	mov.b32 	%r50, %f16;
	mov.b32 	%r51, %f13;
	mov.b32 	%r52, %f10;
	mov.b32 	%r53, %f6;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r50, %r51, %r52, %r53 };
	// end inline asm
	.loc	1 61 25                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:61:25
	add.s64 	%rd29, %rd41, %rd40;
	.loc	1 61 47                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:61:47
	mov.b32 	%r54, %f38;
	mov.b32 	%r55, %f39;
	mov.b32 	%r56, %f40;
	mov.b32 	%r57, %f41;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd29 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 62 4                          // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:62:4
	bar.sync 	0;
	.loc	1 63 28                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:63:28
	mul.wide.s32 	%rd43, %r1, 4;
	add.s64 	%rd30, %rd33, %rd43;
	.loc	1 63 40                         // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:63:40
	and.b32  	%r89, %r59, 255;
	setp.eq.s32 	%p33, %r89, 0;
	// begin inline asm
	@%p33 st.global.b32 [ %rd30 + 0 ], { %r58 };
	// end inline asm
	.loc	1 63 4                          // cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py:63:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vc/cvcntszlgjsbw4gaztxkqu3niwbumbjsqejhkdv5au4wtirub7uc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 245                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xee DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 99
.b8 110
.b8 116
.b8 115
.b8 122
.b8 108
.b8 103
.b8 106
.b8 115
.b8 98
.b8 119
.b8 52
.b8 103
.b8 97
.b8 122
.b8 116
.b8 120
.b8 107
.b8 113
.b8 117
.b8 51
.b8 110
.b8 105
.b8 119
.b8 98
.b8 117
.b8 109
.b8 98
.b8 106
.b8 115
.b8 113
.b8 101
.b8 106
.b8 104
.b8 107
.b8 100
.b8 118
.b8 53
.b8 97
.b8 117
.b8 52
.b8 119
.b8 116
.b8 105
.b8 114
.b8 117
.b8 98
.b8 55
.b8 117
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb2:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
