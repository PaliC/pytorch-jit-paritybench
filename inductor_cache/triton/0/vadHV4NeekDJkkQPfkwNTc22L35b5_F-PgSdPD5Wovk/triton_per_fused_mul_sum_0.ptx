//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mul_sum_0 // -- Begin function triton_per_fused_mul_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mul_sum_0
.visible .entry triton_per_fused_mul_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sum_0_param_5,
	.param .u32 triton_per_fused_mul_sum_0_param_6,
	.param .u32 triton_per_fused_mul_sum_0_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<75>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_mul_sum_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_mul_sum_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd9, [triton_per_fused_mul_sum_0_param_2];
	ld.param.u64 	%rd10, [triton_per_fused_mul_sum_0_param_3];
	.loc	1 26 34                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:26:34
	mov.u32 	%r32, %tid.x;
	and.b32  	%r33, %r32, 31;
	ld.param.u64 	%rd11, [triton_per_fused_mul_sum_0_param_4];
	ld.param.u64 	%rd12, [triton_per_fused_mul_sum_0_param_5];
	and.b32  	%r34, %r32, 63;
	.loc	1 31 38                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:31:38
	shl.b32 	%r35, %r1, 6;
	.loc	1 31 35                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:31:35
	or.b32  	%r36, %r35, %r34;
	.loc	1 31 30                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:31:30
	mul.wide.s32 	%rd13, %r36, 4;
	add.s64 	%rd1, %rd7, %rd13;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f3, %r2;
	.loc	1 32 30                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:32:30
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 32 43                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:32:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 33 30                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:33:30
	add.s64 	%rd3, %rd9, %rd13;
	.loc	1 33 43                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:33:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.f32 	%f6, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f7, %f6, %f3;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f7, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f8, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r10, %f8;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f9, %r8;
$L__tmp2:
	.loc	1 35 18                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:35:18
	mul.f32 	%f10, %f9, %f4;
	.loc	1 36 18                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:36:18
	mul.f32 	%f11, %f4, %f5;
	.loc	1 37 18                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:37:18
	mul.f32 	%f12, %f11, %f10;
	.loc	1 39 33                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:39:33
	selp.f32 	%f13, %f12, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f13;
	shfl.sync.bfly.b32	%r38, %r37, 16, 31, -1;
	mov.b32 	%f14, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f15;
	shfl.sync.bfly.b32	%r40, %r39, 8, 31, -1;
	mov.b32 	%f16, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f17;
	shfl.sync.bfly.b32	%r42, %r41, 4, 31, -1;
	mov.b32 	%f18, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f19;
	shfl.sync.bfly.b32	%r44, %r43, 2, 31, -1;
	mov.b32 	%f20, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f21;
	shfl.sync.bfly.b32	%r46, %r45, 1, 31, -1;
	mov.b32 	%f22, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r33, 0;
	shr.u32 	%r47, %r32, 3;
	and.b32  	%r48, %r47, 4;
	mov.u32 	%r49, global_smem;
	add.s32 	%r11, %r49, %r48;
	mov.b32 	%r12, %f23;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r32, 2;
	shl.b32 	%r50, %r32, 2;
	add.s32 	%r14, %r49, %r50;
	// begin inline asm
	@%p8 ld.shared.b32 %r13, [ %r14 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r13;
	shfl.sync.bfly.b32	%r51, %r13, 1, 31, -1;
	mov.b32 	%f25, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r52, %r32, 1;
	setp.eq.b32 	%p19, %r52, 1;
	not.pred 	%p20, %p19;
	and.pred  	%p9, %p8, %p20;
	mov.b32 	%r16, %f26;
	// begin inline asm
	@%p9 st.shared.b32 [ %r14 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r29, [global_smem];
$L__tmp4:
	.loc	1 41 19                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:41:19
	mul.f32 	%f27, %f10, %f10;
	.loc	1 43 35                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:43:35
	selp.f32 	%f28, %f27, 0f00000000, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r53, %f28;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f29, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f30;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f31, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f32;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f33, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f34;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f35, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f36;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f37, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f38;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r19, [ %r14 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r19;
	shfl.sync.bfly.b32	%r63, %r19, 1, 31, -1;
	mov.b32 	%f40, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f41;
	// begin inline asm
	@%p9 st.shared.b32 [ %r14 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r30, [global_smem];
$L__tmp6:
	.loc	1 45 19                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:45:19
	mul.f32 	%f42, %f11, %f11;
	.loc	1 47 35                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:47:35
	selp.f32 	%f43, %f42, 0f00000000, %p1;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r64, %f43;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f44, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f45;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f46, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f47;
	shfl.sync.bfly.b32	%r69, %r68, 4, 31, -1;
	mov.b32 	%f48, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f49;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	mov.b32 	%f50, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f51;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f52, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f53;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r25, [ %r14 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r25;
	shfl.sync.bfly.b32	%r74, %r25, 1, 31, -1;
	mov.b32 	%f55, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f56;
	// begin inline asm
	@%p9 st.shared.b32 [ %r14 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r31, [global_smem];
$L__tmp8:
	.loc	1 49 25                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:49:25
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd4, %rd10, %rd14;
	.loc	1 49 37                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:49:37
	setp.eq.s32 	%p21, %r34, 0;
	and.pred  	%p16, %p21, %p1;
	// begin inline asm
	@%p16 st.global.b32 [ %rd4 + 0 ], { %r29 };
	// end inline asm
	.loc	1 50 25                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:50:25
	add.s64 	%rd5, %rd11, %rd14;
	.loc	1 50 37                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:50:37
	// begin inline asm
	@%p16 st.global.b32 [ %rd5 + 0 ], { %r30 };
	// end inline asm
	.loc	1 51 25                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:51:25
	add.s64 	%rd6, %rd12, %rd14;
	.loc	1 51 37                         // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:51:37
	// begin inline asm
	@%p16 st.global.b32 [ %rd6 + 0 ], { %r31 };
	// end inline asm
	.loc	1 51 4                          // cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py:51:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gz/cgzuw4f24pbudqi2th5fvkcxwmbysaott7ajeqcvhq4gskyx6wzw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 243                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xec DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 122
.b8 117
.b8 119
.b8 52
.b8 102
.b8 50
.b8 52
.b8 112
.b8 98
.b8 117
.b8 100
.b8 113
.b8 105
.b8 50
.b8 116
.b8 104
.b8 53
.b8 102
.b8 118
.b8 107
.b8 99
.b8 120
.b8 119
.b8 109
.b8 98
.b8 121
.b8 115
.b8 97
.b8 111
.b8 116
.b8 116
.b8 55
.b8 97
.b8 106
.b8 101
.b8 113
.b8 99
.b8 118
.b8 104
.b8 113
.b8 52
.b8 103
.b8 115
.b8 107
.b8 121
.b8 120
.b8 54
.b8 119
.b8 122
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x80:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x95:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xad:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
