//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_embedding_1 // -- Begin function triton_poi_fused_add_embedding_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_3[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_3[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 111, 114, 47, 99, 111, 114, 54, 102, 105, 120, 99, 98, 106, 110, 98, 51, 52, 51, 51, 122, 102, 53, 119, 99, 54, 51, 121, 110, 108, 104, 114, 98, 101, 119, 121, 115, 112, 110, 111, 117, 105, 114, 101, 103, 112, 101, 115, 50, 107, 117, 113, 54, 99, 116, 55, 46, 112, 121};
.global .align 1 .b8 assertMessage_3[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 55, 32, 60, 32, 49, 51};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 111, 114, 47, 99, 111, 114, 54, 102, 105, 120, 99, 98, 106, 110, 98, 51, 52, 51, 51, 122, 102, 53, 119, 99, 54, 51, 121, 110, 108, 104, 114, 98, 101, 119, 121, 115, 112, 110, 111, 117, 105, 114, 101, 103, 112, 101, 115, 50, 107, 117, 113, 54, 99, 116, 55, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 57, 32, 60, 32, 51, 50};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 111, 114, 47, 99, 111, 114, 54, 102, 105, 120, 99, 98, 106, 110, 98, 51, 52, 51, 51, 122, 102, 53, 119, 99, 54, 51, 121, 110, 108, 104, 114, 98, 101, 119, 121, 115, 112, 110, 111, 117, 105, 114, 101, 103, 112, 101, 115, 50, 107, 117, 113, 54, 99, 116, 55, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 49, 32, 60, 32, 55};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 111, 114, 47, 99, 111, 114, 54, 102, 105, 120, 99, 98, 106, 110, 98, 51, 52, 51, 51, 122, 102, 53, 119, 99, 54, 51, 121, 110, 108, 104, 114, 98, 101, 119, 121, 115, 112, 110, 111, 117, 105, 114, 101, 103, 112, 101, 115, 50, 107, 117, 113, 54, 99, 116, 55, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 50, 52};
                                        // @triton_poi_fused_add_embedding_1
.visible .entry triton_poi_fused_add_embedding_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_1_param_5,
	.param .u32 triton_poi_fused_add_embedding_1_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<82>;
	.loc	1 19 0                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:19:0

// %bb.0:
	ld.param.u64 	%rd30, [triton_poi_fused_add_embedding_1_param_0];
$L__tmp0:
	.loc	1 21 28                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:21:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:21:33
	shl.b32 	%r11, %r10, 8;
	.loc	1 22 36                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:22:36
	mov.u32 	%r12, %tid.x;
	shl.b32 	%r13, %r12, 1;
	and.b32  	%r14, %r13, 254;
	.loc	1 22 23                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:22:23
	or.b32  	%r1, %r11, %r14;
	.loc	1 23 21                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:23:21
	setp.gt.s32 	%p9, %r1, 255;
	setp.lt.s32 	%p8, %r1, 256;
	.loc	1 24 21                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:24:21
	shr.s32 	%r15, %r1, 31;
	shr.u32 	%r16, %r15, 30;
	add.s32 	%r17, %r1, %r16;
	shr.s32 	%r3, %r17, 2;
	.loc	1 24 26                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:24:26
	shr.u32 	%r18, %r3, 30;
	add.s32 	%r19, %r3, %r18;
	and.b32  	%r20, %r19, -4;
	sub.s32 	%r21, %r3, %r20;
	.loc	1 25 19                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:25:19
	bfe.s32 	%r22, %r10, 23, 1;
	shr.u32 	%r23, %r22, 28;
	add.s32 	%r24, %r1, %r23;
	.loc	1 28 43                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:28:43
	and.b32  	%r25, %r24, -16;
	.loc	1 28 35                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:28:35
	add.s32 	%r26, %r25, %r21;
	.loc	1 28 40                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:28:40
	add.s32 	%r27, %r26, 12;
	.loc	1 28 30                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:28:30
	mul.wide.s32 	%rd31, %r27, 8;
	add.s64 	%rd15, %rd30, %rd31;
	.loc	1 28 48                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:28:48
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd16 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 29 39                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:29:39
	add.s32 	%r28, %r26, 8;
	.loc	1 29 30                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:29:30
	mul.wide.s32 	%rd32, %r28, 8;
	add.s64 	%rd19, %rd30, %rd32;
	.loc	1 29 47                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:29:47
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 30 40                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:30:40
	add.s32 	%r29, %r26, 4;
	.loc	1 30 31                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:30:31
	mul.wide.s32 	%rd33, %r29, 8;
	add.s64 	%rd23, %rd30, %rd33;
	.loc	1 30 48                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:30:48
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:31:31
	mul.wide.s32 	%rd34, %r26, 8;
	add.s64 	%rd27, %rd30, %rd34;
	.loc	1 31 44                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:31:44
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 33 18                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:33:18
	add.s64 	%rd35, %rd14, 24;
	.loc	1 34 18                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:34:18
	setp.lt.s64 	%p10, %rd14, 0;
	.loc	1 35 32                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:35:32
	selp.b64 	%rd4, %rd35, %rd14, %p10;
	.loc	1 36 37                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:36:37
	setp.lt.u64 	%p11, %rd4, 24;
	.loc	1 36 61                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:36:61
	or.pred  	%p12, %p9, %p11;
	@%p12 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 61                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:0:61
	ld.param.u64 	%rd9, [triton_poi_fused_add_embedding_1_param_1];
	.loc	1 26 19                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:26:19
	shl.b32 	%r32, %r3, 2;
	sub.s32 	%r33, %r1, %r32;
	.loc	1 36 61                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:36:61
	bar.sync 	0;
	.loc	1 37 30                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:37:30
	shl.b64 	%rd37, %rd4, 4;
	add.s64 	%rd38, %rd9, %rd37;
	mul.wide.s32 	%rd39, %r33, 4;
	add.s64 	%rd36, %rd38, %rd39;
	.loc	1 37 44                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:37:44
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p8 ld.global.v2.b32 { %r30, %r31 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:39:18
	add.s64 	%rd40, %rd18, 7;
	.loc	1 40 19                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:40:19
	setp.lt.s64 	%p15, %rd18, 0;
	.loc	1 41 34                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:41:34
	selp.b64 	%rd6, %rd40, %rd18, %p15;
	.loc	1 42 38                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:42:38
	setp.lt.u64 	%p16, %rd6, 7;
	.loc	1 42 62                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:42:62
	or.pred  	%p17, %p9, %p16;
	@%p17 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 62                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:0:62
	ld.param.u64 	%rd10, [triton_poi_fused_add_embedding_1_param_2];
	cvt.s64.s32 	%rd5, %r33;
	.loc	1 42 62                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:42:62
	bar.sync 	0;
	.loc	1 43 31                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:43:31
	shl.b64 	%rd42, %rd6, 4;
	add.s64 	%rd43, %rd10, %rd42;
	shl.b64 	%rd44, %rd5, 2;
	add.s64 	%rd41, %rd43, %rd44;
	.loc	1 43 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:43:46
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p8 ld.global.v2.b32 { %r34, %r35 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 48 35                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:48:35
	shr.u64 	%rd45, %rd22, 58;
	and.b64  	%rd46, %rd45, 32;
	add.s64 	%rd7, %rd46, %rd22;
	.loc	1 49 38                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:49:38
	setp.lt.u64 	%p20, %rd7, 32;
	.loc	1 49 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:49:63
	or.pred  	%p21, %p9, %p20;
	@%p21 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	.loc	1 0 63                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:0:63
	ld.param.u64 	%rd11, [triton_poi_fused_add_embedding_1_param_3];
	.loc	1 49 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:49:63
	bar.sync 	0;
	.loc	1 50 31                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:50:31
	shl.b64 	%rd48, %rd7, 4;
	add.s64 	%rd49, %rd11, %rd48;
	add.s64 	%rd47, %rd49, %rd44;
	.loc	1 50 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:50:46
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p8 ld.global.v2.b32 { %r36, %r37 }, [ %rd47 + 0 ];
	// end inline asm
	.loc	1 53 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:53:20
	add.s64 	%rd51, %rd26, 13;
	.loc	1 54 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:54:20
	setp.lt.s64 	%p24, %rd26, 0;
	.loc	1 55 35                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:55:35
	selp.b64 	%rd8, %rd51, %rd26, %p24;
	.loc	1 56 38                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:56:38
	setp.lt.u64 	%p25, %rd8, 13;
	.loc	1 56 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:56:63
	or.pred  	%p26, %p9, %p25;
	@%p26 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	.loc	1 0 63                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:0:63
	ld.param.u64 	%rd13, [triton_poi_fused_add_embedding_1_param_5];
	ld.param.u64 	%rd12, [triton_poi_fused_add_embedding_1_param_4];
	.loc	1 37 44                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:37:44
	mov.b32 	%f1, %r31;
	.loc	1 43 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:43:46
	mov.b32 	%f2, %r35;
	.loc	1 44 19                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:44:19
	add.f32 	%f3, %f1, %f2;
	.loc	1 50 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:50:46
	mov.b32 	%f4, %r37;
	.loc	1 51 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:51:20
	add.f32 	%f5, %f3, %f4;
	.loc	1 37 44                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:37:44
	mov.b32 	%f6, %r30;
	.loc	1 43 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:43:46
	mov.b32 	%f7, %r34;
	.loc	1 44 19                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:44:19
	add.f32 	%f8, %f6, %f7;
	.loc	1 50 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:50:46
	mov.b32 	%f9, %r36;
	.loc	1 51 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:51:20
	add.f32 	%f10, %f8, %f9;
	.loc	1 56 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:56:63
	bar.sync 	0;
	.loc	1 57 31                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:57:31
	shl.b64 	%rd54, %rd8, 4;
	add.s64 	%rd55, %rd12, %rd54;
	add.s64 	%rd52, %rd55, %rd44;
	.loc	1 57 46                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:57:46
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p8 ld.global.v2.b32 { %r38, %r39 }, [ %rd52 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r38;
	mov.b32 	%f12, %r39;
	.loc	1 58 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:58:20
	add.f32 	%f13, %f10, %f11;
	add.f32 	%f14, %f5, %f12;
	.loc	1 60 20                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:60:20
	add.f32 	%f15, %f13, 0f00000000;
	add.f32 	%f16, %f14, 0f00000000;
	.loc	1 61 25                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:61:25
	mul.wide.s32 	%rd57, %r1, 4;
	add.s64 	%rd53, %rd13, %rd57;
	.loc	1 61 37                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:61:37
	mov.b32 	%r40, %f15;
	mov.b32 	%r41, %f16;
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd53 + 0 ], { %r40, %r41 };
	// end inline asm
	.loc	1 61 4                          // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:61:4
	ret;
$L__BB0_1:
	.loc	1 36 61                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:36:61
	mov.u64 	%rd76, assertMessage_0;
	cvta.global.u64 	%rd77, %rd76;
	mov.u64 	%rd78, assertFile_0;
	cvta.global.u64 	%rd79, %rd78;
	mov.u64 	%rd80, assertFunc_0;
	cvta.global.u64 	%rd81, %rd80;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd77;
	.param .b64 param1;
	st.param.b64 	[param1], %rd79;
	.param .b32 param2;
	st.param.b32 	[param2], 36;
	.param .b64 param3;
	st.param.b64 	[param3], %rd81;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_3:
	.loc	1 42 62                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:42:62
	mov.u64 	%rd70, assertMessage_1;
	cvta.global.u64 	%rd71, %rd70;
	mov.u64 	%rd72, assertFile_1;
	cvta.global.u64 	%rd73, %rd72;
	mov.u64 	%rd74, assertFunc_1;
	cvta.global.u64 	%rd75, %rd74;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd71;
	.param .b64 param1;
	st.param.b64 	[param1], %rd73;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd75;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_5:
	.loc	1 49 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:49:63
	mov.u64 	%rd64, assertMessage_2;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, assertFile_2;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFunc_2;
	cvta.global.u64 	%rd69, %rd68;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd65;
	.param .b64 param1;
	st.param.b64 	[param1], %rd67;
	.param .b32 param2;
	st.param.b32 	[param2], 49;
	.param .b64 param3;
	st.param.b64 	[param3], %rd69;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_7:
	.loc	1 56 63                         // cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py:56:63
	mov.u64 	%rd58, assertMessage_3;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, assertFile_3;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, assertFunc_3;
	cvta.global.u64 	%rd63, %rd62;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd59;
	.param .b64 param1;
	st.param.b64 	[param1], %rd61;
	.param .b32 param2;
	st.param.b32 	[param2], 56;
	.param .b64 param3;
	st.param.b64 	[param3], %rd63;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/or/cor6fixcbjnb3433zf5wc63ynlhrbewyspnouiregpes2kuq6ct7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 114
.b8 54
.b8 102
.b8 105
.b8 120
.b8 99
.b8 98
.b8 106
.b8 110
.b8 98
.b8 51
.b8 52
.b8 51
.b8 51
.b8 122
.b8 102
.b8 53
.b8 119
.b8 99
.b8 54
.b8 51
.b8 121
.b8 110
.b8 108
.b8 104
.b8 114
.b8 98
.b8 101
.b8 119
.b8 121
.b8 115
.b8 112
.b8 110
.b8 111
.b8 117
.b8 105
.b8 114
.b8 101
.b8 103
.b8 112
.b8 101
.b8 115
.b8 50
.b8 107
.b8 117
.b8 113
.b8 54
.b8 99
.b8 116
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
