#loc = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool3d_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.250000e-01> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<21> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<20> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<17> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<32> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<128xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_10 = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_10 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_9 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_9 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_9 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_8 : tensor<128xi32> loc(#loc10)
    %10 = arith.muli %6, %cst_9 : tensor<128xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_7 : tensor<128xi32> loc(#loc12)
    %12 = arith.addi %10, %11 : tensor<128xi32> loc(#loc13)
    %13 = arith.muli %9, %cst_6 : tensor<128xi32> loc(#loc14)
    %14 = arith.addi %12, %13 : tensor<128xi32> loc(#loc15)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc16)
    %16 = tt.addptr %15, %14 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc16)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %10, %cst_5 : tensor<128xi32> loc(#loc18)
    %19 = arith.addi %18, %11 : tensor<128xi32> loc(#loc19)
    %20 = arith.addi %19, %13 : tensor<128xi32> loc(#loc20)
    %21 = tt.addptr %15, %20 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc21)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc22)
    %23 = arith.addi %10, %cst_8 : tensor<128xi32> loc(#loc23)
    %24 = arith.addi %23, %11 : tensor<128xi32> loc(#loc24)
    %25 = arith.addi %24, %13 : tensor<128xi32> loc(#loc25)
    %26 = tt.addptr %15, %25 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc26)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc27)
    %28 = arith.addi %10, %cst_4 : tensor<128xi32> loc(#loc28)
    %29 = arith.addi %28, %11 : tensor<128xi32> loc(#loc29)
    %30 = arith.addi %29, %13 : tensor<128xi32> loc(#loc30)
    %31 = tt.addptr %15, %30 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc31)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc32)
    %33 = arith.addi %10, %cst_3 : tensor<128xi32> loc(#loc33)
    %34 = arith.addi %33, %11 : tensor<128xi32> loc(#loc34)
    %35 = arith.addi %34, %13 : tensor<128xi32> loc(#loc35)
    %36 = tt.addptr %15, %35 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc36)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc37)
    %38 = arith.addi %10, %cst_2 : tensor<128xi32> loc(#loc38)
    %39 = arith.addi %38, %11 : tensor<128xi32> loc(#loc39)
    %40 = arith.addi %39, %13 : tensor<128xi32> loc(#loc40)
    %41 = tt.addptr %15, %40 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc41)
    %42 = tt.load %41, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc42)
    %43 = arith.addi %10, %cst_1 : tensor<128xi32> loc(#loc43)
    %44 = arith.addi %43, %11 : tensor<128xi32> loc(#loc44)
    %45 = arith.addi %44, %13 : tensor<128xi32> loc(#loc45)
    %46 = tt.addptr %15, %45 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc46)
    %47 = tt.load %46, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc47)
    %48 = arith.addi %10, %cst_0 : tensor<128xi32> loc(#loc48)
    %49 = arith.addi %48, %11 : tensor<128xi32> loc(#loc49)
    %50 = arith.addi %49, %13 : tensor<128xi32> loc(#loc50)
    %51 = tt.addptr %15, %50 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc51)
    %52 = tt.load %51, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc52)
    %53 = arith.addf %22, %17 : tensor<128xf32> loc(#loc53)
    %54 = arith.addf %27, %53 : tensor<128xf32> loc(#loc54)
    %55 = arith.addf %32, %54 : tensor<128xf32> loc(#loc55)
    %56 = arith.addf %37, %55 : tensor<128xf32> loc(#loc56)
    %57 = arith.addf %42, %56 : tensor<128xf32> loc(#loc57)
    %58 = arith.addf %47, %57 : tensor<128xf32> loc(#loc58)
    %59 = arith.addf %52, %58 : tensor<128xf32> loc(#loc59)
    %60 = arith.mulf %59, %cst : tensor<128xf32> loc(#loc60)
    %61 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc61)
    %62 = tt.addptr %61, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc61)
    tt.store %62, %60, %5 : tensor<128x!tt.ptr<f32>> loc(#loc62)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":21:28)
#loc3 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":21:33)
#loc4 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":22:36)
#loc5 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":22:23)
#loc6 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":23:21)
#loc7 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":24:19)
#loc8 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":25:21)
#loc9 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":25:26)
#loc10 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":26:19)
#loc11 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:32)
#loc12 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:39)
#loc13 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:37)
#loc14 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:47)
#loc15 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:44)
#loc16 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:30)
#loc17 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":28:52)
#loc18 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":29:34)
#loc19 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":29:41)
#loc20 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":29:48)
#loc21 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":29:30)
#loc22 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":29:56)
#loc23 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":30:34)
#loc24 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":30:41)
#loc25 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":30:48)
#loc26 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":30:30)
#loc27 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":30:56)
#loc28 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":31:34)
#loc29 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":31:41)
#loc30 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":31:48)
#loc31 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":31:30)
#loc32 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":31:56)
#loc33 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":32:35)
#loc34 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":32:42)
#loc35 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":32:49)
#loc36 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":32:30)
#loc37 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":32:57)
#loc38 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":33:35)
#loc39 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":33:42)
#loc40 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":33:49)
#loc41 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":33:30)
#loc42 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":33:57)
#loc43 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":34:36)
#loc44 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":34:43)
#loc45 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":34:50)
#loc46 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":34:31)
#loc47 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":34:58)
#loc48 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":35:36)
#loc49 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":35:43)
#loc50 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":35:50)
#loc51 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":35:31)
#loc52 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":35:58)
#loc53 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":36:18)
#loc54 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":37:18)
#loc55 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":38:18)
#loc56 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":39:18)
#loc57 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":40:19)
#loc58 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":41:20)
#loc59 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":42:20)
#loc60 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":44:20)
#loc61 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":45:25)
#loc62 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":45:37)
#loc63 = loc("inductor_cache/2x/c2xvsi4yenl6w4e4a2a45vkfgxstwlivai6umtl3vu7rd2uzh64m.py":45:4)
