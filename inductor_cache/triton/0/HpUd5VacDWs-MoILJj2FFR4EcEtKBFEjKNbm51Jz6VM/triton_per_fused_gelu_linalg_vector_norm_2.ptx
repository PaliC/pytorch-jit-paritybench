//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_gelu_linalg_vector_norm_2 // -- Begin function triton_per_fused_gelu_linalg_vector_norm_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_gelu_linalg_vector_norm_2
.visible .entry triton_per_fused_gelu_linalg_vector_norm_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_linalg_vector_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_linalg_vector_norm_2_param_1,
	.param .u32 triton_per_fused_gelu_linalg_vector_norm_2_param_2,
	.param .u32 triton_per_fused_gelu_linalg_vector_norm_2_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<134>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_gelu_linalg_vector_norm_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:23:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:23:33
	shl.b32 	%r1, %r8, 3;
	.loc	1 24 44                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r13, %r2, 1;
	and.b32  	%r4, %r13, 6;
	.loc	1 24 23                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:23
	or.b32  	%r6, %r1, %r4;
	.loc	1 25 21                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:25:21
	setp.lt.s32 	%p1, %r6, 64;
	.loc	1 31 19                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:31:19
	shr.s32 	%r15, %r6, 31;
	shr.u32 	%r16, %r15, 28;
	add.s32 	%r17, %r6, %r16;
	.loc	1 30 19                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:30:19
	and.b32  	%r18, %r17, -16;
	sub.s32 	%r19, %r6, %r18;
	.loc	1 33 38                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:38
	shl.b32 	%r20, %r2, 2;
	and.b32  	%r21, %r20, 240;
	.loc	1 33 35                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:35
	add.s32 	%r22, %r19, %r21;
	.loc	1 33 47                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:47
	shl.b32 	%r23, %r17, 4;
	and.b32  	%r24, %r23, -256;
	.loc	1 33 43                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:43
	add.s32 	%r25, %r22, %r24;
	.loc	1 33 30                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:30
	mul.wide.s32 	%rd4, %r25, 4;
	add.s64 	%rd2, %rd3, %rd4;
	mov.b32 	%r11, 0;
	.loc	1 33 52                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:52
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r9, %r11;
	@!%p1 mov.u32 %r10, %r11;
	// end inline asm
	mov.b32 	%f38, %r9;
	mov.b32 	%f39, %r10;
	.loc	1 37 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:37:18
	mul.f32 	%f3, %f38, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	abs.ftz.f32 	%f5, %f3;
	setp.ge.f32 	%p4, %f5, 0f3F8060FE;
	mov.f32 	%f122, 0f3789CA3C;
	mov.f32 	%f121, 0fB9F560B9;
	mov.f32 	%f120, 0f3BAC840B;
	mov.f32 	%f119, 0fBD0C8162;
	mov.f32 	%f118, 0f3E1CF906;
	mov.f32 	%f117, 0f3F6A937E;
	mov.f32 	%f116, 0f3F20D842;
	mov.f32 	%f123, %f5;
	@%p4 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 25                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:25
	mov.f32 	%f122, 0f38B1E96A;
	mov.f32 	%f121, 0fBA574D20;
	mov.f32 	%f120, 0f3BAAD5EA;
	mov.f32 	%f119, 0fBCDC1BE7;
	mov.f32 	%f118, 0f3DE718AF;
	mov.f32 	%f117, 0fBEC093AC;
	mov.f32 	%f116, 0f3E0375D3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	mul.f32 	%f123, %f3, %f3;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mul.f32 	%f4, %f39, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p5, %f5, 0f3F8060FE;
	fma.rn.ftz.f32 	%f47, %f122, %f123, %f121;
	fma.rn.ftz.f32 	%f48, %f47, %f123, %f120;
	fma.rn.ftz.f32 	%f49, %f48, %f123, %f119;
	fma.rn.ftz.f32 	%f50, %f49, %f123, %f118;
	fma.rn.ftz.f32 	%f51, %f50, %f123, %f117;
	fma.rn.ftz.f32 	%f52, %f51, %f123, %f116;
	neg.f32 	%f53, %f123;
	selp.f32 	%f54, %f53, %f3, %p4;
	fma.rn.ftz.f32 	%f124, %f52, %f54, %f54;
	mov.f32 	%f115, 0f3F800000;
	@%p5 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f55, %f124;
	sub.f32 	%f57, %f115, %f55;
	mov.b32 	%r26, %f57;
	mov.b32 	%r27, %f3;
	and.b32  	%r28, %r27, -2147483648;
	or.b32  	%r29, %r28, %r26;
	mov.b32 	%f124, %r29;
$L__BB0_4:                              // %__nv_erff.exit
	abs.ftz.f32 	%f18, %f4;
	setp.ge.f32 	%p7, %f18, 0f3F8060FE;
	mov.f32 	%f131, 0f3789CA3C;
	mov.f32 	%f130, 0fB9F560B9;
	mov.f32 	%f129, 0f3BAC840B;
	mov.f32 	%f128, 0fBD0C8162;
	mov.f32 	%f127, 0f3E1CF906;
	mov.f32 	%f126, 0f3F6A937E;
	mov.f32 	%f125, 0f3F20D842;
	mov.f32 	%f132, %f18;
	@%p7 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f132, %f4, %f4;
	mov.f32 	%f131, 0f38B1E96A;
	mov.f32 	%f130, 0fBA574D20;
	mov.f32 	%f129, 0f3BAAD5EA;
	mov.f32 	%f128, 0fBCDC1BE7;
	mov.f32 	%f127, 0f3DE718AF;
	mov.f32 	%f126, 0fBEC093AC;
	mov.f32 	%f125, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i7
	.loc	1 0 25                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:25
	ld.param.u64 	%rd1, [triton_per_fused_gelu_linalg_vector_norm_2_param_0];
	and.b32  	%r3, %r2, 31;
	and.b32  	%r5, %r2, 7;
	shr.u32 	%r7, %r2, 5;
	mul.f32 	%f1, %f38, 0f3F000000;
	mul.f32 	%f2, %f39, 0f3F000000;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p8, %f18, 0f3F8060FE;
	fma.rn.ftz.f32 	%f72, %f131, %f132, %f130;
	fma.rn.ftz.f32 	%f73, %f72, %f132, %f129;
	fma.rn.ftz.f32 	%f74, %f73, %f132, %f128;
	fma.rn.ftz.f32 	%f75, %f74, %f132, %f127;
	fma.rn.ftz.f32 	%f76, %f75, %f132, %f126;
	fma.rn.ftz.f32 	%f77, %f76, %f132, %f125;
	neg.f32 	%f78, %f132;
	selp.f32 	%f79, %f78, %f4, %p7;
	fma.rn.ftz.f32 	%f133, %f77, %f79, %f79;
	@%p8 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f80, %f133;
	sub.f32 	%f82, %f115, %f80;
	mov.b32 	%r30, %f82;
	mov.b32 	%r31, %f4;
	and.b32  	%r32, %r31, -2147483648;
	or.b32  	%r33, %r32, %r30;
	mov.b32 	%f133, %r33;
$L__BB0_8:                              // %__nv_erff.exit26
	.loc	1 40 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:40:18
	add.f32 	%f83, %f124, 0f3F800000;
	add.f32 	%f84, %f133, 0f3F800000;
	.loc	1 41 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:41:18
	mul.f32 	%f85, %f1, %f83;
	mul.f32 	%f86, %f2, %f84;
	.loc	1 42 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:42:18
	mul.f32 	%f87, %f85, %f85;
	mul.f32 	%f88, %f86, %f86;
	.loc	1 44 35                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:44:35
	selp.f32 	%f89, %f87, 0f00000000, %p1;
	selp.f32 	%f90, %f88, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f89;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f91, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f89, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f92;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f93, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f94;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f95, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f90;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f97, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f90, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f98;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f99, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f100;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f101, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p10, %r3, 4;
	and.b32  	%r58, %r7, 1;
	shl.b32 	%r59, %r4, 3;
	shl.b32 	%r60, %r58, 2;
	or.b32  	%r61, %r59, %r60;
	mov.u32 	%r62, global_smem;
	add.s32 	%r34, %r62, %r61;
	mov.b32 	%r35, %f96;
	// begin inline asm
	@%p10 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 8;
	mov.b32 	%r37, %f102;
	// begin inline asm
	@%p10 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r2, 16;
	add.s32 	%r39, %r62, %r20;
	// begin inline asm
	@%p12 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f103, %r38;
	shfl.sync.bfly.b32	%r64, %r38, 1, 31, -1;
	mov.b32 	%f104, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r65, %r2, 1;
	setp.eq.b32 	%p17, %r65, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p13, %p12, %p18;
	mov.b32 	%r41, %f105;
	// begin inline asm
	@%p13 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r66, %r62, %r59;
	ld.shared.u32 	%r43, [%r66];
	ld.shared.u32 	%r44, [%r66+8];
$L__tmp2:
	.loc	1 46 27                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:46:27
	bar.sync 	0;
	shl.b32 	%r67, %r4, 2;
	sub.s32 	%r42, %r66, %r67;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.v2.b32 [ %r42 + 0 ], { %r43, %r44 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r68, %r5, 2;
	add.s32 	%r69, %r62, %r68;
	ld.shared.f32 	%f106, [%r69];
	sqrt.approx.ftz.f32 	%f107, %f106;
	.loc	1 24 23                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:23
	or.b32  	%r70, %r1, %r5;
	.loc	1 25 21                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:25:21
	setp.lt.s32 	%p19, %r70, 64;
	.loc	1 47 4                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:47:4
	bar.sync 	0;
	.loc	1 48 28                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:28
	mul.wide.s32 	%rd6, %r70, 4;
	add.s64 	%rd5, %rd1, %rd6;
	.loc	1 48 40                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:40
	shr.u32 	%r71, %r3, 3;
	or.b32  	%r72, %r60, %r71;
	setp.eq.s32 	%p20, %r72, 0;
	mov.b32 	%r45, %f107;
	and.pred  	%p15, %p20, %p19;
	// begin inline asm
	@%p15 st.global.b32 [ %rd5 + 0 ], { %r45 };
	// end inline asm
	.loc	1 48 4                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mk/cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 107
.b8 55
.b8 114
.b8 119
.b8 108
.b8 107
.b8 119
.b8 121
.b8 50
.b8 117
.b8 107
.b8 105
.b8 110
.b8 98
.b8 107
.b8 117
.b8 111
.b8 55
.b8 54
.b8 104
.b8 120
.b8 122
.b8 112
.b8 112
.b8 113
.b8 52
.b8 118
.b8 104
.b8 55
.b8 104
.b8 105
.b8 51
.b8 122
.b8 114
.b8 103
.b8 53
.b8 104
.b8 118
.b8 50
.b8 119
.b8 111
.b8 53
.b8 111
.b8 122
.b8 103
.b8 97
.b8 108
.b8 52
.b8 101
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
