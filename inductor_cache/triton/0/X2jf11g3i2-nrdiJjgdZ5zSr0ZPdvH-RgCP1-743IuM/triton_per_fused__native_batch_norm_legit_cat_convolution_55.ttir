#loc = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":39:57)
#loc21 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":46:59)
#loc44 = loc(callsite(#loc1 at #loc14))
#loc48 = loc(callsite(#loc1 at #loc21))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_cat_convolution_55(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":19:0)) attributes {noinline = false} {
    %c81920_i32 = arith.constant 81920 : i32 loc(#loc1)
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %0, %c64_i32 : i32 loc(#loc4)
    %3 = arith.divsi %0, %c64_i32 : i32 loc(#loc5)
    %4 = arith.muli %0, %c256_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<256xi32> loc(#loc7)
    %6 = arith.addi %1, %5 : tensor<256xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %arg2, %2 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.broadcast %12 : tensor<1xf32> -> tensor<256xf32> loc(#loc12)
    %14 = arith.addf %9, %13 : tensor<256xf32> loc(#loc12)
    %15 = "tt.reduce"(%14) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc14)), %arg8: f32 loc(callsite(#loc1 at #loc14))):
      %44 = arith.addf %arg7, %arg8 : f32 loc(#loc52)
      tt.reduce.return %44 : f32 loc(#loc43)
    }) : (tensor<256xf32>) -> f32 loc(#loc43)
    %16 = arith.addf %15, %cst_1 : f32 loc(#loc46)
    %17 = arith.divf %16, %cst_0 : f32 loc(#loc18)
    %18 = tt.splat %17 : f32 -> tensor<1xf32> loc(#loc18)
    %19 = tt.splat %17 : f32 -> tensor<256xf32> loc(#loc19)
    %20 = arith.subf %14, %19 : tensor<256xf32> loc(#loc19)
    %21 = arith.mulf %20, %20 : tensor<256xf32> loc(#loc20)
    %22 = "tt.reduce"(%21) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc21)), %arg8: f32 loc(callsite(#loc1 at #loc21))):
      %44 = arith.addf %arg7, %arg8 : f32 loc(#loc53)
      tt.reduce.return %44 : f32 loc(#loc47)
    }) : (tensor<256xf32>) -> f32 loc(#loc47)
    %23 = arith.addf %22, %cst_1 : f32 loc(#loc49)
    %24 = arith.divf %23, %cst_0 : f32 loc(#loc23)
    %25 = arith.addf %24, %cst : f32 loc(#loc24)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc25)
    %27 = tt.splat %26 : f32 -> tensor<1xf32> loc(#loc25)
    %28 = tt.splat %26 : f32 -> tensor<256xf32> loc(#loc26)
    %29 = arith.mulf %20, %28 : tensor<256xf32> loc(#loc26)
    %30 = arith.cmpf ogt, %cst_2, %29 : tensor<256xf32> loc(#loc50)
    %31 = arith.select %30, %cst_2, %29 : tensor<256xi1>, tensor<256xf32> loc(#loc51)
    tt.store %8, %14 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    gpu.barrier loc(#loc31)
    %32 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc32)
    tt.store %33, %27 : tensor<1x!tt.ptr<f32>> loc(#loc33)
    %34 = arith.muli %2, %c256_i32 : i32 loc(#loc34)
    %35 = tt.splat %34 : i32 -> tensor<256xi32> loc(#loc35)
    %36 = arith.addi %1, %35 : tensor<256xi32> loc(#loc35)
    %37 = arith.muli %3, %c81920_i32 : i32 loc(#loc36)
    %38 = tt.splat %37 : i32 -> tensor<256xi32> loc(#loc37)
    %39 = arith.addi %36, %38 : tensor<256xi32> loc(#loc37)
    %40 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc38)
    %41 = tt.addptr %40, %39 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc38)
    tt.store %41, %31 : tensor<256x!tt.ptr<f32>> loc(#loc39)
    %42 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc40)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc40)
    tt.store %43, %18 : tensor<1x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":24:28)
#loc3 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":27:26)
#loc4 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":32:19)
#loc5 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":33:19)
#loc6 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":34:43)
#loc7 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":34:39)
#loc8 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":34:34)
#loc9 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":34:48)
#loc10 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":35:30)
#loc11 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":35:35)
#loc12 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":36:18)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc17 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":39:44)
#loc18 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":42:19)
#loc19 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":43:19)
#loc20 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":44:20)
#loc22 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":46:45)
#loc23 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":48:20)
#loc24 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":50:20)
#loc25 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":51:28)
#loc26 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":53:20)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":55:42)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":56:48)
#loc31 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":57:4)
#loc32 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":58:28)
#loc33 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":58:40)
#loc34 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:34)
#loc35 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:30)
#loc36 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:45)
#loc37 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:39)
#loc38 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:25)
#loc39 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":59:57)
#loc40 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":60:25)
#loc41 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":60:37)
#loc42 = loc("inductor_cache/5a/c5ayb7ttxd4qts3aek7dldtwujqmtlkjjqjkekydjgdvisfft24w.py":60:4)
#loc43 = loc(callsite(#loc13 at #loc14))
#loc45 = loc(callsite(#loc15 at #loc13))
#loc46 = loc(callsite(#loc16 at #loc17))
#loc47 = loc(callsite(#loc13 at #loc21))
#loc49 = loc(callsite(#loc16 at #loc22))
#loc50 = loc(callsite(#loc27 at #loc28))
#loc51 = loc(callsite(#loc29 at #loc28))
#loc52 = loc(callsite(#loc45 at #loc14))
#loc53 = loc(callsite(#loc45 at #loc21))
