//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__weight_norm_interface_convolution_6 // -- Begin function triton_poi_fused__weight_norm_interface_convolution_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__weight_norm_interface_convolution_6
.visible .entry triton_poi_fused__weight_norm_interface_convolution_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_6_param_4,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_6_param_5,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_6_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused__weight_norm_interface_convolution_6_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused__weight_norm_interface_convolution_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:22:33
	shl.b32 	%r22, %r1, 7;
	ld.param.u64 	%rd9, [triton_poi_fused__weight_norm_interface_convolution_6_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused__weight_norm_interface_convolution_6_param_3];
	.loc	1 23 44                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:23:44
	mov.u32 	%r23, %tid.x;
	and.b32  	%r24, %r23, 1;
	ld.param.u64 	%rd11, [triton_poi_fused__weight_norm_interface_convolution_6_param_4];
	shl.b32 	%r25, %r23, 1;
	and.b32  	%r26, %r25, 126;
	and.b32  	%r27, %r23, 127;
	bfe.u32 	%r28, %r23, 1, 6;
	or.b32  	%r29, %r28, 64;
	.loc	1 23 23                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:23:23
	or.b32  	%r30, %r22, %r26;
	or.b32  	%r31, %r22, %r27;
	or.b32  	%r32, %r22, %r28;
	or.b32  	%r33, %r22, %r29;
	.loc	1 24 21                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:24:21
	setp.lt.s32 	%p11, %r30, 96;
	setp.lt.s32 	%p4, %r31, 96;
	setp.lt.s32 	%p12, %r32, 96;
	setp.lt.s32 	%p13, %r33, 96;
	.loc	1 25 28                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:25:33
	shl.b32 	%r34, %r2, 1;
	.loc	1 26 44                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:26:44
	bfe.u32 	%r35, %r23, 6, 1;
	.loc	1 26 23                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:26:23
	or.b32  	%r36, %r34, %r35;
	or.b32  	%r37, %r34, %r24;
	.loc	1 27 21                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:27:21
	setp.lt.s32 	%p14, %r36, 25;
	setp.lt.s32 	%p15, %r37, 25;
	.loc	1 30 19                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:30:19
	mul.hi.s32 	%r39, %r30, 715827883;
	shr.u32 	%r40, %r39, 31;
	add.s32 	%r41, %r39, %r40;
	.loc	1 29 19                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:29:19
	mul.lo.s32 	%r42, %r41, 6;
	sub.s32 	%r43, %r30, %r42;
	.loc	1 30 19                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:30:19
	mul.hi.s32 	%r44, %r31, 715827883;
	shr.u32 	%r45, %r44, 31;
	add.s32 	%r46, %r44, %r45;
	.loc	1 32 35                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:32:35
	mad.lo.s32 	%r47, %r36, 6, %r43;
	.loc	1 32 42                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:32:42
	mad.lo.s32 	%r48, %r41, 150, %r47;
	.loc	1 32 30                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:32:30
	mul.wide.s32 	%rd12, %r48, 4;
	add.s64 	%rd1, %rd7, %rd12;
	.loc	1 32 59                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:32:59
	and.pred  	%p1, %p11, %p14;
	and.pred  	%p8, %p12, %p15;
	and.pred  	%p9, %p13, %p15;
	.loc	1 32 51                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:32:51
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r8;
	shl.b32 	%r49, %r23, 2;
	and.b32  	%r50, %r49, 252;
	or.b32  	%r51, %r50, %r35;
	mov.u32 	%r52, global_smem;
	shl.b32 	%r53, %r51, 2;
	shl.b32 	%r54, %r50, 1;
	add.s32 	%r55, %r52, %r54;
	add.s32 	%r5, %r55, %r53;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r56, %r25, 252;
	add.s32 	%r57, %r52, %r56;
	shl.b32 	%r58, %r27, 2;
	add.s32 	%r59, %r57, %r58;
	ld.shared.f32 	%f3, [%r59];
	or.b32  	%r60, %r25, 256;
	and.b32  	%r61, %r60, 508;
	add.s32 	%r62, %r52, %r61;
	add.s32 	%r63, %r62, %r58;
	ld.shared.f32 	%f4, [%r63+512];
	.loc	1 33 30                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:33:30
	mul.wide.s32 	%rd13, %r46, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 33 35                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:33:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:34:30
	add.s64 	%rd3, %rd9, %rd13;
	.loc	1 34 35                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:34:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:35:18
	// begin inline asm
	div.full.f32 %r15, %r12, %r13;
	// end inline asm
	.loc	1 36 18                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:36:18
	bar.sync 	0;
	shl.b32 	%r64, %r27, 3;
	add.s32 	%r14, %r52, %r64;
	// begin inline asm
	@%p2 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r65, %r28, 3;
	add.s32 	%r66, %r52, %r65;
	ld.shared.f32 	%f5, [%r66];
	shl.b32 	%r67, %r29, 3;
	add.s32 	%r68, %r52, %r67;
	ld.shared.f32 	%f6, [%r68];
	bar.sync 	0;
	sub.s32 	%r16, %r14, %r58;
	// begin inline asm
	@%p2 st.shared.b32 [ %r16 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r69, %r26, 2;
	add.s32 	%r70, %r52, %r69;
	ld.shared.v2.f32 	{%f7, %f8}, [%r70];
	mul.f32 	%f9, %f3, %f5;
	mul.f32 	%f10, %f4, %f6;
	mul.f32 	%f11, %f7, %f1;
	mul.f32 	%f12, %f8, %f2;
	.loc	1 37 30                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:37:30
	mad.lo.s32 	%r71, %r32, 25, %r37;
	mad.lo.s32 	%r72, %r33, 25, %r37;
	.loc	1 37 25                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:37:25
	mul.wide.s32 	%rd14, %r71, 4;
	add.s64 	%rd4, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r72, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 37 44                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:37:44
	mov.b32 	%r18, %f9;
	// begin inline asm
	@%p8 st.global.b32 [ %rd4 + 0 ], { %r18 };
	// end inline asm
	mov.b32 	%r19, %f10;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r19 };
	// end inline asm
	.loc	1 38 25                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:38:25
	add.s64 	%rd6, %rd11, %rd12;
	.loc	1 38 52                         // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:38:52
	mov.b32 	%r20, %f11;
	mov.b32 	%r21, %f12;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 38 4                          // cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b5/cb5v2a2rybe6rgv4bmwkxzy6w64c5mz3pmkyajhdhuphrbccbl4x.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 53
.b8 118
.b8 50
.b8 97
.b8 50
.b8 114
.b8 121
.b8 98
.b8 101
.b8 54
.b8 114
.b8 103
.b8 118
.b8 52
.b8 98
.b8 109
.b8 119
.b8 107
.b8 120
.b8 122
.b8 121
.b8 54
.b8 119
.b8 54
.b8 52
.b8 99
.b8 53
.b8 109
.b8 122
.b8 51
.b8 112
.b8 109
.b8 107
.b8 121
.b8 97
.b8 106
.b8 104
.b8 100
.b8 104
.b8 117
.b8 112
.b8 104
.b8 114
.b8 98
.b8 99
.b8 99
.b8 98
.b8 108
.b8 52
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
