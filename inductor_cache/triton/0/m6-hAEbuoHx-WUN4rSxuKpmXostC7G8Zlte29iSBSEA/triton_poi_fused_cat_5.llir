; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) nocapture readnone %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 768, !dbg !14
  %18 = sdiv i32 %16, 16, !dbg !15
  %.frozen1 = freeze i32 %16, !dbg !16
  %19 = sdiv i32 %.frozen1, 192, !dbg !16
  %.frozen = freeze i32 %16, !dbg !17
  %20 = sdiv i32 %.frozen, 4, !dbg !17
  %21 = srem i32 %20, 4, !dbg !18
  %22 = mul i32 %20, 4, !dbg !19
  %.decomposed = sub i32 %.frozen, %22, !dbg !19
  %23 = mul i32 %19, 192, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %23, !dbg !20
  %24 = shl nsw i32 %19, 6, !dbg !21
  %25 = add nsw i32 %24, %srem.decomposed, !dbg !22
  %26 = sext i32 %25 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !24
  %29 = insertelement <2 x i32> %28, i32 %18, i64 1, !dbg !24
  %30 = srem <2 x i32> %29, <i32 16, i32 12>, !dbg !24
  %31 = extractelement <2 x i32> %30, i64 1, !dbg !25
  %32 = icmp slt i32 %31, 4, !dbg !26
  %33 = and i1 %17, %32, !dbg !27
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %33, i32 0, i1 %33) #1, !dbg !28
  %35 = and i32 %31, -4, !dbg !29
  %36 = icmp eq i32 %35, 4, !dbg !29
  %37 = shl nsw i32 %31, 4, !dbg !25
  %38 = insertelement <2 x i32> <i32 poison, i32 -8>, i32 %24, i64 0, !dbg !25
  %39 = add nsw <2 x i32> %38, %30, !dbg !25
  %40 = extractelement <2 x i32> %39, i64 0, !dbg !30
  %41 = add nsw i32 %40, -64, !dbg !31
  %42 = add nsw i32 %41, %37, !dbg !32
  %43 = sext i32 %42 to i64, !dbg !33
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !33
  %45 = and i1 %17, %36, !dbg !34
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %45, i32 0, i1 %45) #1, !dbg !35
  %47 = icmp sgt i32 %31, 7, !dbg !36
  %48 = extractelement <2 x i32> %39, i64 1, !dbg !37
  %49 = shl nsw i32 %48, 4, !dbg !37
  %50 = add nsw i32 %40, %49, !dbg !30
  %51 = sext i32 %50 to i64, !dbg !38
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !38
  %53 = and i1 %17, %47, !dbg !39
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %53, i32 0, i1 %53) #1, !dbg !40
  %55 = bitcast i32 %54 to float, !dbg !40
  %56 = shl nsw i32 %19, 2, !dbg !41
  %57 = add nsw i32 %48, %56, !dbg !42
  %58 = sext i32 %57 to i64, !dbg !43
  %59 = getelementptr float, ptr addrspace(1) %5, i64 %58, !dbg !43
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %53, i32 0, i1 %53) #1, !dbg !44
  %61 = bitcast i32 %60 to float, !dbg !44
  %62 = fsub float %61, %61, !dbg !45
  %63 = sext i32 %.decomposed to i64, !dbg !46
  %64 = getelementptr float, ptr addrspace(1) %7, i64 %63, !dbg !46
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %53, i32 0, i1 %53) #1, !dbg !47
  %66 = bitcast i32 %65 to float, !dbg !47
  %67 = fmul float %62, %66, !dbg !48
  %68 = fadd float %67, %61, !dbg !49
  %69 = fsub float %68, %55, !dbg !50
  %70 = sext i32 %21 to i64, !dbg !51
  %71 = getelementptr float, ptr addrspace(1) %8, i64 %70, !dbg !51
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %53, i32 0, i1 %53) #1, !dbg !52
  %73 = bitcast i32 %72 to float, !dbg !52
  %74 = fmul float %69, %73, !dbg !53
  %75 = fadd float %74, %55, !dbg !54
  %76 = sext i32 %16 to i64, !dbg !55
  %77 = getelementptr float, ptr addrspace(1) %9, i64 %76, !dbg !55
  %78 = bitcast float %75 to i32, !dbg !56
  %79 = select i1 %47, i32 %78, i32 0, !dbg !57
  %80 = select i1 %36, i32 %46, i32 %79, !dbg !58
  %81 = select i1 %32, i32 %34, i32 %80, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %77, i1 %17) #1, !dbg !56
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvonduyqjysm2afucqrzorkybjks4oxen5lutfwguhyn62e324mp.py", directory: "inductor_cache/vo")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 27, column: 26, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 35, column: 35, scope: !7)
!21 = !DILocation(line: 35, column: 48, scope: !7)
!22 = !DILocation(line: 35, column: 45, scope: !7)
!23 = !DILocation(line: 35, column: 30, scope: !7)
!24 = !DILocation(line: 26, column: 19, scope: !7)
!25 = !DILocation(line: 40, column: 40, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 60, scope: !7)
!28 = !DILocation(line: 35, column: 53, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 44, column: 53, scope: !7)
!31 = !DILocation(line: 40, column: 36, scope: !7)
!32 = !DILocation(line: 40, column: 53, scope: !7)
!33 = !DILocation(line: 40, column: 31, scope: !7)
!34 = !DILocation(line: 40, column: 68, scope: !7)
!35 = !DILocation(line: 40, column: 61, scope: !7)
!36 = !DILocation(line: 41, column: 20, scope: !7)
!37 = !DILocation(line: 44, column: 40, scope: !7)
!38 = !DILocation(line: 44, column: 31, scope: !7)
!39 = !DILocation(line: 44, column: 69, scope: !7)
!40 = !DILocation(line: 44, column: 61, scope: !7)
!41 = !DILocation(line: 54, column: 33, scope: !7)
!42 = !DILocation(line: 54, column: 39, scope: !7)
!43 = !DILocation(line: 54, column: 31, scope: !7)
!44 = !DILocation(line: 54, column: 52, scope: !7)
!45 = !DILocation(line: 59, column: 20, scope: !7)
!46 = !DILocation(line: 60, column: 31, scope: !7)
!47 = !DILocation(line: 60, column: 36, scope: !7)
!48 = !DILocation(line: 61, column: 20, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 63, column: 20, scope: !7)
!51 = !DILocation(line: 64, column: 31, scope: !7)
!52 = !DILocation(line: 64, column: 36, scope: !7)
!53 = !DILocation(line: 65, column: 20, scope: !7)
!54 = !DILocation(line: 66, column: 20, scope: !7)
!55 = !DILocation(line: 71, column: 25, scope: !7)
!56 = !DILocation(line: 71, column: 37, scope: !7)
!57 = !DILocation(line: 68, column: 35, scope: !7)
!58 = !DILocation(line: 69, column: 34, scope: !7)
!59 = !DILocation(line: 70, column: 33, scope: !7)
!60 = !DILocation(line: 71, column: 4, scope: !7)
