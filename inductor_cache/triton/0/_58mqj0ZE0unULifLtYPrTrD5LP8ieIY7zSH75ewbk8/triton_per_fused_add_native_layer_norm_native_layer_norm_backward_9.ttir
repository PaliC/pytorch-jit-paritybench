#loc = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":45:59)
#loc32 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":53:59)
#loc49 = loc(callsite(#loc1 at #loc24))
#loc53 = loc(callsite(#loc1 at #loc32))
module {
  tt.func public @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.00260416674 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_1 = arith.constant 3.840000e+02 : f32 loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_4 = arith.constant dense<384> : tensor<512xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_4 : tensor<512xi32> loc(#loc4)
    %3 = arith.muli %0, %c384_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<512xi32> loc(#loc6)
    %5 = arith.addi %1, %4 : tensor<512xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc7)
    %8 = tt.load %7, %2, %cst_3 : tensor<512x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc9)
    %11 = tt.load %10, %2, %cst_3 : tensor<512x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc11)
    %14 = tt.load %13, %2, %cst_3 : tensor<512x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %1 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc13)
    %17 = tt.load %16, %2, %cst_3 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %1 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc15)
    %20 = tt.load %19, %2, %cst_3 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %1 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc17)
    %23 = tt.load %22, %2, %cst_3 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.addf %8, %11 : tensor<512xf32> loc(#loc19)
    %25 = arith.addf %14, %17 : tensor<512xf32> loc(#loc20)
    %26 = arith.addf %24, %25 : tensor<512xf32> loc(#loc21)
    %27 = arith.select %2, %26, %cst_3 : tensor<512xi1>, tensor<512xf32> loc(#loc22)
    %28 = "tt.reduce"(%27) <{axis = 0 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc24)), %arg12: f32 loc(callsite(#loc1 at #loc24))):
      %52 = arith.addf %arg11, %arg12 : f32 loc(#loc55)
      tt.reduce.return %52 : f32 loc(#loc48)
    }) : (tensor<512xf32>) -> f32 loc(#loc48)
    %29 = arith.addf %28, %cst_2 : f32 loc(#loc51)
    %30 = arith.divf %29, %cst_1 : f32 loc(#loc28)
    %31 = tt.splat %30 : f32 -> tensor<512xf32> loc(#loc29)
    %32 = arith.subf %26, %31 : tensor<512xf32> loc(#loc29)
    %33 = arith.mulf %32, %32 : tensor<512xf32> loc(#loc30)
    %34 = arith.select %2, %33, %cst_3 : tensor<512xi1>, tensor<512xf32> loc(#loc31)
    %35 = "tt.reduce"(%34) <{axis = 0 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc32)), %arg12: f32 loc(callsite(#loc1 at #loc32))):
      %52 = arith.addf %arg11, %arg12 : f32 loc(#loc56)
      tt.reduce.return %52 : f32 loc(#loc52)
    }) : (tensor<512xf32>) -> f32 loc(#loc52)
    %36 = arith.addf %35, %cst_2 : f32 loc(#loc54)
    %37 = arith.divf %36, %cst_1 : f32 loc(#loc34)
    %38 = arith.addf %37, %cst_0 : f32 loc(#loc35)
    %39 = tt.extern_elementwise %38 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc36)
    %40 = tt.splat %39 : f32 -> tensor<512xf32> loc(#loc37)
    %41 = arith.mulf %32, %40 : tensor<512xf32> loc(#loc37)
    %42 = arith.mulf %41, %20 : tensor<512xf32> loc(#loc38)
    %43 = arith.addf %42, %23 : tensor<512xf32> loc(#loc39)
    %44 = arith.mulf %39, %cst : f32 loc(#loc40)
    %45 = tt.splat %44 : f32 -> tensor<1xf32> loc(#loc40)
    %46 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc41)
    %47 = tt.addptr %46, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc41)
    tt.store %47, %41, %2 : tensor<512x!tt.ptr<f32>> loc(#loc42)
    %48 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc43)
    %49 = tt.addptr %48, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc43)
    tt.store %49, %43, %2 : tensor<512x!tt.ptr<f32>> loc(#loc44)
    %50 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc45)
    tt.store %51, %45 : tensor<1x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":24:28)
#loc3 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":27:26)
#loc4 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":29:21)
#loc5 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":32:39)
#loc6 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":32:35)
#loc7 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":32:30)
#loc8 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":32:44)
#loc9 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":33:30)
#loc10 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":33:44)
#loc11 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":34:30)
#loc12 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":34:44)
#loc13 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":35:30)
#loc14 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":35:35)
#loc15 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":36:31)
#loc16 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":36:36)
#loc17 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":37:31)
#loc18 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":37:36)
#loc19 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":38:18)
#loc20 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":39:18)
#loc21 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":40:18)
#loc22 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":44:35)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc27 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":45:45)
#loc28 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":48:20)
#loc29 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":49:19)
#loc30 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":50:20)
#loc31 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":52:35)
#loc33 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":53:45)
#loc34 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":56:20)
#loc35 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":58:20)
#loc36 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":59:28)
#loc37 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":60:20)
#loc38 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":61:20)
#loc39 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":62:20)
#loc40 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":64:20)
#loc41 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":65:25)
#loc42 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":65:46)
#loc43 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":66:25)
#loc44 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":66:46)
#loc45 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":67:25)
#loc46 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":67:37)
#loc47 = loc("inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py":67:4)
#loc48 = loc(callsite(#loc23 at #loc24))
#loc50 = loc(callsite(#loc25 at #loc23))
#loc51 = loc(callsite(#loc26 at #loc27))
#loc52 = loc(callsite(#loc23 at #loc32))
#loc54 = loc(callsite(#loc26 at #loc33))
#loc55 = loc(callsite(#loc50 at #loc24))
#loc56 = loc(callsite(#loc50 at #loc32))
