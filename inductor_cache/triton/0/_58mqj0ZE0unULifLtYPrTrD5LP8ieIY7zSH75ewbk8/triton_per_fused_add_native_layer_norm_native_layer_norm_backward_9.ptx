//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_9,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b32 	%r<113>;
	.reg .f32 	%f<97>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_1];
$L__tmp0:
	.loc	1 24 28                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_2];
	.loc	1 27 26                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:27:26
	mov.u32 	%r77, %tid.x;
	and.b32  	%r78, %r77, 31;
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_3];
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_4];
	shl.b32 	%r79, %r77, 2;
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_5];
	and.b32  	%r80, %r79, 508;
	ld.param.u64 	%rd16, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_6];
	.loc	1 29 21                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:29:21
	setp.lt.u32 	%p1, %r80, 384;
	ld.param.u64 	%rd17, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_7];
	ld.param.u64 	%rd18, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_9_param_8];
	.loc	1 32 35                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:35
	mad.lo.s32 	%r81, %r1, 384, %r80;
	.loc	1 32 30                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:30
	mul.wide.s32 	%rd19, %r81, 4;
	add.s64 	%rd1, %rd10, %rd19;
	mov.b32 	%r6, 0;
	.loc	1 32 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:33:30
	add.s64 	%rd2, %rd11, %rd19;
	.loc	1 33 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:33:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 30                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:34:30
	add.s64 	%rd3, %rd12, %rd19;
	.loc	1 34 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:34:44
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 35 30                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:35:30
	mul.wide.u32 	%rd20, %r80, 4;
	add.s64 	%rd4, %rd13, %rd20;
	.loc	1 35 35                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:35:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 36 31                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:36:31
	add.s64 	%rd5, %rd14, %rd20;
	.loc	1 36 36                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:36:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	.loc	1 37 31                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:37:31
	add.s64 	%rd6, %rd15, %rd20;
	.loc	1 37 36                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:37:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r45, %r6;
	// end inline asm
	.loc	1 32 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:44
	mov.b32 	%f1, %r20;
	mov.b32 	%f2, %r4;
	.loc	1 33 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:33:44
	mov.b32 	%f3, %r28;
	mov.b32 	%f4, %r12;
	.loc	1 38 18                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:38:18
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 32 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:44
	mov.b32 	%f7, %r21;
	mov.b32 	%f8, %r5;
	.loc	1 33 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:33:44
	mov.b32 	%f9, %r29;
	mov.b32 	%f10, %r13;
	.loc	1 38 18                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:38:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 32 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:32:44
	mov.b32 	%f13, %r3;
	mov.b32 	%f14, %r2;
	.loc	1 33 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:33:44
	mov.b32 	%f15, %r11;
	mov.b32 	%f16, %r10;
	.loc	1 34 44                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:34:44
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r18;
	.loc	1 35 35                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:35:35
	mov.b32 	%f19, %r27;
	mov.b32 	%f20, %r26;
	.loc	1 38 18                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:38:18
	add.f32 	%f21, %f14, %f16;
	add.f32 	%f22, %f13, %f15;
	.loc	1 39 18                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:39:18
	add.f32 	%f23, %f18, %f20;
	add.f32 	%f24, %f17, %f19;
	.loc	1 40 18                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:40:18
	add.f32 	%f25, %f22, %f24;
	add.f32 	%f26, %f21, %f23;
	add.f32 	%f27, %f5, %f6;
	add.f32 	%f28, %f11, %f12;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f26, %f25;
	add.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f28, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f32;
	shfl.sync.bfly.b32	%r83, %r82, 16, 31, -1;
	mov.b32 	%f33, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f34;
	shfl.sync.bfly.b32	%r85, %r84, 8, 31, -1;
	mov.b32 	%f35, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f36;
	shfl.sync.bfly.b32	%r87, %r86, 4, 31, -1;
	mov.b32 	%f37, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f38;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f39, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f40;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f41, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p31, %r78, 0;
	shr.u32 	%r92, %r77, 3;
	and.b32  	%r93, %r92, 12;
	mov.u32 	%r94, global_smem;
	add.s32 	%r50, %r94, %r93;
	mov.b32 	%r51, %f42;
	// begin inline asm
	@%p31 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p32, %r77, 4;
	add.s32 	%r53, %r94, %r79;
	// begin inline asm
	@%p32 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r52;
	shfl.sync.bfly.b32	%r95, %r52, 2, 31, -1;
	mov.b32 	%f44, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f45;
	shfl.sync.bfly.b32	%r97, %r96, 1, 31, -1;
	mov.b32 	%f46, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r98, %r77, 3;
	setp.eq.s32 	%p40, %r98, 0;
	and.pred  	%p33, %p32, %p40;
	mov.b32 	%r55, %f47;
	// begin inline asm
	@%p33 st.shared.b32 [ %r53 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f48, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f49, %f48, 0f00000000;
$L__tmp3:
	.loc	1 48 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:48:20
	mov.b32 	%r57, %f49;
	mov.b32 	%r58, 1136656384;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f50, %r56;
	.loc	1 49 19                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:49:19
	sub.f32 	%f51, %f26, %f50;
	sub.f32 	%f52, %f25, %f50;
	sub.f32 	%f53, %f27, %f50;
	sub.f32 	%f54, %f28, %f50;
	.loc	1 50 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:50:20
	mul.f32 	%f55, %f52, %f52;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f56, %f51, %f51, %f55;
	fma.rn.f32 	%f57, %f53, %f53, %f56;
	fma.rn.f32 	%f58, %f54, %f54, %f57;
	selp.f32 	%f59, %f58, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f59;
	shfl.sync.bfly.b32	%r100, %r99, 16, 31, -1;
	mov.b32 	%f60, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f61;
	shfl.sync.bfly.b32	%r102, %r101, 8, 31, -1;
	mov.b32 	%f62, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f63;
	shfl.sync.bfly.b32	%r104, %r103, 4, 31, -1;
	mov.b32 	%f64, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f65;
	shfl.sync.bfly.b32	%r106, %r105, 2, 31, -1;
	mov.b32 	%f66, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f67;
	shfl.sync.bfly.b32	%r108, %r107, 1, 31, -1;
	mov.b32 	%f68, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f69;
	// begin inline asm
	@%p31 st.shared.b32 [ %r50 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p32 ld.shared.b32 %r61, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f70, %r61;
	shfl.sync.bfly.b32	%r109, %r61, 2, 31, -1;
	mov.b32 	%f71, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f72;
	shfl.sync.bfly.b32	%r111, %r110, 1, 31, -1;
	mov.b32 	%f73, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f74;
	// begin inline asm
	@%p33 st.shared.b32 [ %r53 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f75, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f76, %f75, 0f00000000;
$L__tmp6:
	.loc	1 56 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:56:20
	mov.b32 	%r66, %f76;
	// begin inline asm
	div.full.f32 %r65, %r66, %r58;
	// end inline asm
	mov.b32 	%f77, %r65;
	.loc	1 58 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:58:20
	add.f32 	%f78, %f77, 0f3727C5AC;
	.loc	1 59 28                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:59:28
	rsqrt.approx.ftz.f32 	%f79, %f78;
	.loc	1 37 36                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:37:36
	mov.b32 	%f80, %r45;
	mov.b32 	%f81, %r44;
	mov.b32 	%f82, %r43;
	mov.b32 	%f83, %r42;
	.loc	1 36 36                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:36:36
	mov.b32 	%f84, %r37;
	mov.b32 	%f85, %r36;
	mov.b32 	%f86, %r35;
	mov.b32 	%f87, %r34;
	.loc	1 60 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:60:20
	mul.f32 	%f88, %f51, %f79;
	mul.f32 	%f89, %f52, %f79;
	mul.f32 	%f90, %f53, %f79;
	mul.f32 	%f91, %f54, %f79;
	.loc	1 62 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:62:20
	fma.rn.f32 	%f92, %f88, %f87, %f83;
	fma.rn.f32 	%f93, %f89, %f86, %f82;
	fma.rn.f32 	%f94, %f90, %f85, %f81;
	fma.rn.f32 	%f95, %f91, %f84, %f80;
	.loc	1 64 20                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:64:20
	mul.f32 	%f96, %f79, 0f3B2AAAAB;
	.loc	1 65 25                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:65:25
	add.s64 	%rd7, %rd16, %rd19;
	.loc	1 65 46                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:65:46
	mov.b32 	%r68, %f88;
	mov.b32 	%r69, %f89;
	mov.b32 	%r70, %f90;
	mov.b32 	%r71, %f91;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	.loc	1 66 25                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:66:25
	add.s64 	%rd8, %rd17, %rd19;
	.loc	1 66 46                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:66:46
	mov.b32 	%r72, %f92;
	mov.b32 	%r73, %f93;
	mov.b32 	%r74, %f94;
	mov.b32 	%r75, %f95;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r72, %r73, %r74, %r75 };
	// end inline asm
	.loc	1 67 25                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:67:25
	mul.wide.s32 	%rd21, %r1, 4;
	add.s64 	%rd9, %rd18, %rd21;
	.loc	1 67 37                         // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:67:37
	and.b32  	%r112, %r77, 127;
	setp.eq.s32 	%p39, %r112, 0;
	mov.b32 	%r76, %f96;
	// begin inline asm
	@%p39 st.global.b32 [ %rd9 + 0 ], { %r76 };
	// end inline asm
	.loc	1 67 4                          // ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py:67:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ei/ceih53ckwqer4jl3uprl2rwajeykp7lgcvqo2npzrrpipmvfjqxu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 284                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x115 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 105
.b8 104
.b8 53
.b8 51
.b8 99
.b8 107
.b8 119
.b8 113
.b8 101
.b8 114
.b8 52
.b8 106
.b8 108
.b8 51
.b8 117
.b8 112
.b8 114
.b8 108
.b8 50
.b8 114
.b8 119
.b8 97
.b8 106
.b8 101
.b8 121
.b8 107
.b8 112
.b8 55
.b8 108
.b8 103
.b8 99
.b8 118
.b8 113
.b8 111
.b8 50
.b8 110
.b8 112
.b8 122
.b8 114
.b8 114
.b8 112
.b8 105
.b8 112
.b8 109
.b8 118
.b8 102
.b8 106
.b8 113
.b8 120
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xee:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x106:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
