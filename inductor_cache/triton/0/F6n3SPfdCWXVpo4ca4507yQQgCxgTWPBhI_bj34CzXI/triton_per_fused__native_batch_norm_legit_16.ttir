#loc = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0)
#loc1 = loc(unknown)
#loc12 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":36:24)
#loc19 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":44:26)
#loc31 = loc(callsite(#loc1 at #loc12))
#loc34 = loc(callsite(#loc1 at #loc19))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_16(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x64xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x64xi32> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_1 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %12 = arith.select %10, %11, %cst_1 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc10)
    %13 = "tt.reduce"(%12) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc12)), %arg6: f32 loc(callsite(#loc1 at #loc12))):
      %29 = arith.addf %arg5, %arg6 : f32 loc(#loc35)
      tt.reduce.return %29 : f32 loc(#loc30)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc30)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc14)
    %15 = arith.divf %14, %cst_0 : tensor<1x1xf32> loc(#loc15)
    %16 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc16)
    %17 = arith.subf %11, %16 : tensor<1x64xf32> loc(#loc16)
    %18 = arith.mulf %17, %17 : tensor<1x64xf32> loc(#loc17)
    %19 = arith.select %10, %18, %cst_1 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc18)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc19)), %arg6: f32 loc(callsite(#loc1 at #loc19))):
      %29 = arith.addf %arg5, %arg6 : f32 loc(#loc36)
      tt.reduce.return %29 : f32 loc(#loc33)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc33)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc20)
    %22 = arith.divf %21, %cst_0 : tensor<1x1xf32> loc(#loc21)
    %23 = arith.addf %22, %cst : tensor<1x1xf32> loc(#loc22)
    %24 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc23)
    gpu.barrier loc(#loc24)
    %25 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc25)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    tt.store %26, %24, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc27)
    %28 = tt.splat %27 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    tt.store %28, %15, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":23:28)
#loc3 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":25:21)
#loc4 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":26:26)
#loc5 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":26:34)
#loc6 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":31:38)
#loc7 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":31:35)
#loc8 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":31:30)
#loc9 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":31:43)
#loc10 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":35:33)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc14 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":36:27)
#loc15 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":39:19)
#loc16 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":40:19)
#loc17 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":41:20)
#loc18 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":43:35)
#loc20 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":44:29)
#loc21 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":46:20)
#loc22 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":48:20)
#loc23 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":49:28)
#loc24 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":50:4)
#loc25 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":51:28)
#loc26 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":51:40)
#loc27 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":52:25)
#loc28 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":52:37)
#loc29 = loc("inductor_cache/tg/ctgux4sdqz4gjbhiksrffs7wns6hdwua7mtkpsgndco7zahvdhyw.py":52:4)
#loc30 = loc(callsite(#loc11 at #loc12))
#loc32 = loc(callsite(#loc13 at #loc11))
#loc33 = loc(callsite(#loc11 at #loc19))
#loc35 = loc(callsite(#loc32 at #loc12))
#loc36 = loc(callsite(#loc32 at #loc19))
