//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_index_mul_sum_0 // -- Begin function triton_poi_fused_index_mul_sum_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_8[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_8[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_8[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 55, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_7[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_7[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_7[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 54, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_6[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_6[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_6[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_5[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_5[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_5[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_4[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_4[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_4[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_3[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_3[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_3[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 48, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 50, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 109, 47, 99, 106, 109, 55, 50, 114, 118, 51, 51, 109, 114, 102, 102, 115, 53, 122, 109, 53, 108, 99, 110, 104, 111, 115, 97, 51, 53, 100, 104, 50, 98, 54, 113, 108, 104, 119, 111, 110, 99, 114, 55, 100, 109, 114, 52, 115, 111, 121, 54, 108, 51, 50, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 52};
                                        // @triton_poi_fused_index_mul_sum_0
.visible .entry triton_poi_fused_index_mul_sum_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_mul_sum_0_param_5,
	.param .u32 triton_poi_fused_index_mul_sum_0_param_6
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<36>;
	.reg .b32 	%r<22>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<153>;
	.loc	1 19 0                          // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:19:0

// %bb.0:
	ld.param.u64 	%rd31, [triton_poi_fused_index_mul_sum_0_param_0];
$L__tmp0:
	.loc	1 21 28                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:21:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:21:33
	shl.b32 	%r7, %r6, 2;
	ld.param.u64 	%rd48, [triton_poi_fused_index_mul_sum_0_param_2];
	.loc	1 22 36                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:22:36
	mov.u32 	%r1, %tid.x;
	and.b32  	%r8, %r1, 3;
	ld.param.u64 	%rd35, [triton_poi_fused_index_mul_sum_0_param_4];
	.loc	1 22 23                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:22:23
	or.b32  	%r9, %r7, %r8;
	.loc	1 23 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:23:21
	setp.lt.s32 	%p2, %r9, 4;
	mov.pred 	%p9, -1;
	.loc	1 25 19                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:25:19
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p9 ld.global.b64 { %rd30 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:27:30
	mul.wide.s32 	%rd49, %r9, 8;
	add.s64 	%rd33, %rd48, %rd49;
	.loc	1 27 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:27:35
	// begin inline asm
	mov.u64 %rd32, 0x0;
	@%p2 ld.global.b64 { %rd32 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 28 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:28:20
	// begin inline asm
	mov.u64 %rd34, 0x0;
	@%p9 ld.global.b64 { %rd34 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:30:31
	add.s64 	%rd37, %rd31, 8;
	.loc	1 30 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:30:20
	// begin inline asm
	mov.u64 %rd36, 0x0;
	@%p9 ld.global.b64 { %rd36 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:32:31
	add.s64 	%rd39, %rd35, 8;
	.loc	1 32 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:32:20
	// begin inline asm
	mov.u64 %rd38, 0x0;
	@%p9 ld.global.b64 { %rd38 }, [ %rd39 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:34:31
	add.s64 	%rd41, %rd31, 16;
	.loc	1 34 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:34:20
	// begin inline asm
	mov.u64 %rd40, 0x0;
	@%p9 ld.global.b64 { %rd40 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:36:31
	add.s64 	%rd43, %rd35, 16;
	.loc	1 36 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:36:20
	// begin inline asm
	mov.u64 %rd42, 0x0;
	@%p9 ld.global.b64 { %rd42 }, [ %rd43 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:38:31
	add.s64 	%rd45, %rd31, 24;
	.loc	1 38 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:38:20
	// begin inline asm
	mov.u64 %rd44, 0x0;
	@%p9 ld.global.b64 { %rd44 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:40:31
	add.s64 	%rd47, %rd35, 24;
	.loc	1 40 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:40:20
	// begin inline asm
	mov.u64 %rd46, 0x0;
	@%p9 ld.global.b64 { %rd46 }, [ %rd47 + 0 ];
	// end inline asm
	.loc	1 45 32                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:45:32
	shr.u64 	%rd50, %rd30, 61;
	and.b64  	%rd51, %rd50, 4;
	add.s64 	%rd10, %rd51, %rd30;
	.loc	1 46 36                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:46:36
	setp.lt.u64 	%p10, %rd10, 4;
	.loc	1 46 47                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:46:47
	@%p10 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 47                          // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:0:47
	ld.param.u64 	%rd27, [triton_poi_fused_index_mul_sum_0_param_1];
	cvt.s64.s32 	%rd1, %r9;
	cvt.u32.u64 	%r10, %rd1;
	.loc	1 23 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:23:21
	setp.gt.s32 	%p12, %r10, 3;
	.loc	1 46 47                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:46:47
	bar.sync 	0;
	.loc	1 47 30                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:47:30
	shl.b64 	%rd54, %rd10, 3;
	add.s64 	%rd53, %rd27, %rd54;
	.loc	1 47 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:47:37
	// begin inline asm
	mov.u64 %rd52, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd52 }, [ %rd53 + 0 ];
	// end inline asm
	.loc	1 51 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:51:35
	shr.u64 	%rd55, %rd32, 61;
	and.b64  	%rd56, %rd55, 4;
	add.s64 	%rd12, %rd56, %rd32;
	.loc	1 52 38                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:52:38
	setp.lt.u64 	%p13, %rd12, 4;
	.loc	1 52 62                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:52:62
	or.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 62                          // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:0:62
	ld.param.u64 	%rd28, [triton_poi_fused_index_mul_sum_0_param_3];
	.loc	1 23 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:23:21
	setp.lt.s32 	%p15, %r10, 4;
	.loc	1 52 62                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:52:62
	bar.sync 	0;
	.loc	1 53 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:53:31
	shl.b64 	%rd58, %rd12, 4;
	add.s64 	%rd57, %rd28, %rd58;
	.loc	1 53 41                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:53:41
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r11 }, [ %rd57 + 0 ];
	// end inline asm
	.loc	1 57 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:57:35
	shr.u64 	%rd59, %rd34, 61;
	and.b64  	%rd60, %rd59, 4;
	add.s64 	%rd14, %rd60, %rd34;
	.loc	1 58 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:58:37
	setp.lt.u64 	%p16, %rd14, 4;
	.loc	1 58 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:58:49
	@%p16 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	bar.sync 	0;
	.loc	1 59 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:59:31
	shl.b64 	%rd63, %rd14, 3;
	add.s64 	%rd62, %rd27, %rd63;
	.loc	1 59 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:59:39
	// begin inline asm
	mov.u64 %rd61, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd61 }, [ %rd62 + 0 ];
	// end inline asm
	.loc	1 64 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:64:35
	shr.u64 	%rd64, %rd36, 61;
	and.b64  	%rd65, %rd64, 4;
	add.s64 	%rd16, %rd65, %rd36;
	.loc	1 65 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:65:37
	setp.lt.u64 	%p18, %rd16, 4;
	.loc	1 65 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:65:49
	@%p18 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	bar.sync 	0;
	.loc	1 66 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:66:31
	shl.b64 	%rd69, %rd16, 3;
	add.s64 	%rd67, %rd27, %rd69;
	.loc	1 66 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:66:39
	// begin inline asm
	mov.u64 %rd66, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd66 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 68 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:68:31
	add.s64 	%rd68, %rd57, 4;
	.loc	1 68 45                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:68:45
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r13 }, [ %rd68 + 0 ];
	// end inline asm
	.loc	1 72 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:72:35
	shr.u64 	%rd70, %rd38, 61;
	and.b64  	%rd71, %rd70, 4;
	add.s64 	%rd18, %rd71, %rd38;
	.loc	1 73 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:73:37
	setp.lt.u64 	%p21, %rd18, 4;
	.loc	1 73 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:73:49
	@%p21 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:
	bar.sync 	0;
	.loc	1 74 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:74:31
	shl.b64 	%rd74, %rd18, 3;
	add.s64 	%rd73, %rd27, %rd74;
	.loc	1 74 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:74:39
	// begin inline asm
	mov.u64 %rd72, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd72 }, [ %rd73 + 0 ];
	// end inline asm
	.loc	1 80 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:80:35
	shr.u64 	%rd75, %rd40, 61;
	and.b64  	%rd76, %rd75, 4;
	add.s64 	%rd20, %rd76, %rd40;
	.loc	1 81 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:81:37
	setp.lt.u64 	%p23, %rd20, 4;
	.loc	1 81 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:81:49
	@%p23 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_11;
$L__BB0_12:
	bar.sync 	0;
	.loc	1 82 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:82:31
	shl.b64 	%rd80, %rd20, 3;
	add.s64 	%rd78, %rd27, %rd80;
	.loc	1 82 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:82:39
	// begin inline asm
	mov.u64 %rd77, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd77 }, [ %rd78 + 0 ];
	// end inline asm
	.loc	1 84 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:84:31
	add.s64 	%rd79, %rd57, 8;
	.loc	1 84 45                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:84:45
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r15 }, [ %rd79 + 0 ];
	// end inline asm
	.loc	1 88 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:88:35
	shr.u64 	%rd81, %rd42, 61;
	and.b64  	%rd82, %rd81, 4;
	add.s64 	%rd22, %rd82, %rd42;
	.loc	1 89 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:89:37
	setp.lt.u64 	%p26, %rd22, 4;
	.loc	1 89 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:89:49
	@%p26 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_13;
$L__BB0_14:
	bar.sync 	0;
	.loc	1 90 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:90:31
	shl.b64 	%rd85, %rd22, 3;
	add.s64 	%rd84, %rd27, %rd85;
	.loc	1 90 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:90:39
	// begin inline asm
	mov.u64 %rd83, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd83 }, [ %rd84 + 0 ];
	// end inline asm
	.loc	1 96 35                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:96:35
	shr.u64 	%rd86, %rd44, 61;
	and.b64  	%rd87, %rd86, 4;
	add.s64 	%rd24, %rd87, %rd44;
	.loc	1 97 37                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:97:37
	setp.lt.u64 	%p28, %rd24, 4;
	.loc	1 97 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:97:49
	@%p28 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_15;
$L__BB0_16:
	bar.sync 	0;
	.loc	1 98 31                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:98:31
	shl.b64 	%rd91, %rd24, 3;
	add.s64 	%rd89, %rd27, %rd91;
	.loc	1 98 39                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:98:39
	// begin inline asm
	mov.u64 %rd88, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd88 }, [ %rd89 + 0 ];
	// end inline asm
	.loc	1 100 31                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:100:31
	add.s64 	%rd90, %rd57, 12;
	.loc	1 100 45                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:100:45
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r17 }, [ %rd90 + 0 ];
	// end inline asm
	.loc	1 104 35                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:104:35
	shr.u64 	%rd92, %rd46, 61;
	and.b64  	%rd93, %rd92, 4;
	add.s64 	%rd26, %rd93, %rd46;
	.loc	1 105 37                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:105:37
	setp.lt.u64 	%p31, %rd26, 4;
	.loc	1 105 49                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:105:49
	@%p31 bra 	$L__BB0_18;
	bra.uni 	$L__BB0_17;
$L__BB0_18:
	.loc	1 0 49                          // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:0:49
	ld.param.u64 	%rd29, [triton_poi_fused_index_mul_sum_0_param_5];
	.loc	1 83 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:83:21
	cvt.rn.f32.s64 	%f1, %rd77;
	cvt.rn.f32.s64 	%f2, %rd88;
	.loc	1 84 45                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:84:45
	mov.b32 	%f3, %r15;
	mov.b32 	%f4, %r17;
	.loc	1 48 19                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:48:19
	cvt.rn.f32.s64 	%f5, %rd66;
	cvt.rn.f32.s64 	%f6, %rd52;
	.loc	1 53 41                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:53:41
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r11;
	.loc	1 60 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:60:21
	cvt.rn.f32.s64 	%f9, %rd61;
	cvt.rn.f32.s64 	%f10, %rd72;
	.loc	1 54 19                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:54:19
	mul.f32 	%f11, %f6, %f8;
	mul.f32 	%f12, %f5, %f7;
	.loc	1 61 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:61:20
	mul.f32 	%f13, %f12, %f10;
	.loc	1 77 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:77:20
	fma.rn.f32 	%f14, %f11, %f9, %f13;
	.loc	1 22 36                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:22:36
	and.b32  	%r21, %r1, 28;
	.loc	1 105 49                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:105:49
	bar.sync 	0;
	.loc	1 106 31                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:106:31
	shl.b64 	%rd97, %rd26, 3;
	add.s64 	%rd95, %rd27, %rd97;
	.loc	1 106 39                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:106:39
	// begin inline asm
	mov.u64 %rd94, 0x0;
	@%p9 ld.global.L1::evict_last.b64 { %rd94 }, [ %rd95 + 0 ];
	// end inline asm
	.loc	1 85 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:85:20
	mul.f32 	%f15, %f2, %f4;
	mul.f32 	%f16, %f1, %f3;
	.loc	1 91 21                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:91:21
	cvt.rn.f32.s64 	%f17, %rd94;
	cvt.rn.f32.s64 	%f18, %rd83;
	.loc	1 93 20                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:93:20
	fma.rn.f32 	%f19, %f16, %f18, %f14;
	.loc	1 109 20                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:109:20
	fma.rn.f32 	%f20, %f15, %f17, %f19;
	.loc	1 110 25                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:110:25
	shl.b64 	%rd98, %rd1, 2;
	add.s64 	%rd96, %rd29, %rd98;
	.loc	1 110 37                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:110:37
	setp.eq.s32 	%p35, %r21, 0;
	mov.b32 	%r19, %f20;
	and.pred  	%p33, %p35, %p15;
	// begin inline asm
	@%p33 st.global.b32 [ %rd96 + 0 ], { %r19 };
	// end inline asm
	.loc	1 110 4                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:110:4
	ret;
$L__BB0_1:
	.loc	1 46 47                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:46:47
	mov.u64 	%rd147, assertMessage_0;
	cvta.global.u64 	%rd148, %rd147;
	mov.u64 	%rd149, assertFile_0;
	cvta.global.u64 	%rd150, %rd149;
	mov.u64 	%rd151, assertFunc_0;
	cvta.global.u64 	%rd152, %rd151;
	{ // callseq 8, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd148;
	.param .b64 param1;
	st.param.b64 	[param1], %rd150;
	.param .b32 param2;
	st.param.b32 	[param2], 46;
	.param .b64 param3;
	st.param.b64 	[param3], %rd152;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 8
	trap;
$L__BB0_3:
	.loc	1 52 62                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:52:62
	mov.u64 	%rd141, assertMessage_1;
	cvta.global.u64 	%rd142, %rd141;
	mov.u64 	%rd143, assertFile_1;
	cvta.global.u64 	%rd144, %rd143;
	mov.u64 	%rd145, assertFunc_1;
	cvta.global.u64 	%rd146, %rd145;
	{ // callseq 7, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd142;
	.param .b64 param1;
	st.param.b64 	[param1], %rd144;
	.param .b32 param2;
	st.param.b32 	[param2], 52;
	.param .b64 param3;
	st.param.b64 	[param3], %rd146;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 7
	trap;
$L__BB0_5:
	.loc	1 58 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:58:49
	mov.u64 	%rd135, assertMessage_2;
	cvta.global.u64 	%rd136, %rd135;
	mov.u64 	%rd137, assertFile_2;
	cvta.global.u64 	%rd138, %rd137;
	mov.u64 	%rd139, assertFunc_2;
	cvta.global.u64 	%rd140, %rd139;
	{ // callseq 6, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd136;
	.param .b64 param1;
	st.param.b64 	[param1], %rd138;
	.param .b32 param2;
	st.param.b32 	[param2], 58;
	.param .b64 param3;
	st.param.b64 	[param3], %rd140;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 6
	trap;
$L__BB0_7:
	.loc	1 65 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:65:49
	mov.u64 	%rd129, assertMessage_3;
	cvta.global.u64 	%rd130, %rd129;
	mov.u64 	%rd131, assertFile_3;
	cvta.global.u64 	%rd132, %rd131;
	mov.u64 	%rd133, assertFunc_3;
	cvta.global.u64 	%rd134, %rd133;
	{ // callseq 5, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd130;
	.param .b64 param1;
	st.param.b64 	[param1], %rd132;
	.param .b32 param2;
	st.param.b32 	[param2], 65;
	.param .b64 param3;
	st.param.b64 	[param3], %rd134;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 5
	trap;
$L__BB0_9:
	.loc	1 73 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:73:49
	mov.u64 	%rd123, assertMessage_4;
	cvta.global.u64 	%rd124, %rd123;
	mov.u64 	%rd125, assertFile_4;
	cvta.global.u64 	%rd126, %rd125;
	mov.u64 	%rd127, assertFunc_4;
	cvta.global.u64 	%rd128, %rd127;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd124;
	.param .b64 param1;
	st.param.b64 	[param1], %rd126;
	.param .b32 param2;
	st.param.b32 	[param2], 73;
	.param .b64 param3;
	st.param.b64 	[param3], %rd128;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__BB0_11:
	.loc	1 81 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:81:49
	mov.u64 	%rd117, assertMessage_5;
	cvta.global.u64 	%rd118, %rd117;
	mov.u64 	%rd119, assertFile_5;
	cvta.global.u64 	%rd120, %rd119;
	mov.u64 	%rd121, assertFunc_5;
	cvta.global.u64 	%rd122, %rd121;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd118;
	.param .b64 param1;
	st.param.b64 	[param1], %rd120;
	.param .b32 param2;
	st.param.b32 	[param2], 81;
	.param .b64 param3;
	st.param.b64 	[param3], %rd122;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_13:
	.loc	1 89 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:89:49
	mov.u64 	%rd111, assertMessage_6;
	cvta.global.u64 	%rd112, %rd111;
	mov.u64 	%rd113, assertFile_6;
	cvta.global.u64 	%rd114, %rd113;
	mov.u64 	%rd115, assertFunc_6;
	cvta.global.u64 	%rd116, %rd115;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd112;
	.param .b64 param1;
	st.param.b64 	[param1], %rd114;
	.param .b32 param2;
	st.param.b32 	[param2], 89;
	.param .b64 param3;
	st.param.b64 	[param3], %rd116;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_15:
	.loc	1 97 49                         // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:97:49
	mov.u64 	%rd105, assertMessage_7;
	cvta.global.u64 	%rd106, %rd105;
	mov.u64 	%rd107, assertFile_7;
	cvta.global.u64 	%rd108, %rd107;
	mov.u64 	%rd109, assertFunc_7;
	cvta.global.u64 	%rd110, %rd109;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd106;
	.param .b64 param1;
	st.param.b64 	[param1], %rd108;
	.param .b32 param2;
	st.param.b32 	[param2], 97;
	.param .b64 param3;
	st.param.b64 	[param3], %rd110;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_17:
	.loc	1 105 49                        // cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py:105:49
	mov.u64 	%rd99, assertMessage_8;
	cvta.global.u64 	%rd100, %rd99;
	mov.u64 	%rd101, assertFile_8;
	cvta.global.u64 	%rd102, %rd101;
	mov.u64 	%rd103, assertFunc_8;
	cvta.global.u64 	%rd104, %rd103;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd100;
	.param .b64 param1;
	st.param.b64 	[param1], %rd102;
	.param .b32 param2;
	st.param.b32 	[param2], 105;
	.param .b64 param3;
	st.param.b64 	[param3], %rd104;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jm/cjm72rv33mrffs5zm5lcnhosa35dh2b6qlhwoncr7dmr4soy6l32.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 109
.b8 55
.b8 50
.b8 114
.b8 118
.b8 51
.b8 51
.b8 109
.b8 114
.b8 102
.b8 102
.b8 115
.b8 53
.b8 122
.b8 109
.b8 53
.b8 108
.b8 99
.b8 110
.b8 104
.b8 111
.b8 115
.b8 97
.b8 51
.b8 53
.b8 100
.b8 104
.b8 50
.b8 98
.b8 54
.b8 113
.b8 108
.b8 104
.b8 119
.b8 111
.b8 110
.b8 99
.b8 114
.b8 55
.b8 100
.b8 109
.b8 114
.b8 52
.b8 115
.b8 111
.b8 121
.b8 54
.b8 108
.b8 51
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
