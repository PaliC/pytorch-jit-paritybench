#loc = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-52> : tensor<1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<65> : tensor<1024xi32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1024xi32> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1024xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_6 = arith.constant dense<212992> : tensor<1024xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<1024xi32> loc(#loc1)
    %cst_8 = arith.constant dense<128> : tensor<1024xi32> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<1024xi32> loc(#loc1)
    %cst_10 = arith.constant dense<52> : tensor<1024xi64> loc(#loc1)
    %cst_11 = arith.constant dense<57344> : tensor<1024xi32> loc(#loc1)
    %cst_12 = arith.constant dense<32> : tensor<1024xi32> loc(#loc1)
    %cst_13 = arith.constant dense<56> : tensor<1024xi32> loc(#loc1)
    %cst_14 = arith.constant dense<1024> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_14 : tensor<1024xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_13 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_12 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_12 : tensor<1024xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_12 : tensor<1024xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_11 : tensor<1024xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_14 : tensor<1024xi32> loc(#loc12)
    %12 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.addptr %12, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc13)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc15)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc17)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc19)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc20)
    %24 = arith.extsi %6 : tensor<1024xi32> to tensor<1024xi64> loc(#loc21)
    %25 = arith.cmpi slt, %24, %cst_10 : tensor<1024xi64> loc(#loc21)
    %26 = arith.muli %7, %cst_9 : tensor<1024xi32> loc(#loc22)
    %27 = arith.muli %9, %cst_8 : tensor<1024xi32> loc(#loc23)
    %28 = arith.addi %26, %27 : tensor<1024xi32> loc(#loc24)
    %29 = arith.muli %6, %cst_7 : tensor<1024xi32> loc(#loc25)
    %30 = arith.addi %28, %29 : tensor<1024xi32> loc(#loc26)
    %31 = arith.muli %10, %cst_6 : tensor<1024xi32> loc(#loc27)
    %32 = arith.addi %30, %31 : tensor<1024xi32> loc(#loc28)
    %33 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc29)
    %34 = tt.addptr %33, %32 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc29)
    %35 = tt.load %34, %25, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc30)
    %36 = arith.addi %26, %cst_4 : tensor<1024xi32> loc(#loc31)
    %37 = arith.addi %36, %27 : tensor<1024xi32> loc(#loc32)
    %38 = arith.addi %37, %29 : tensor<1024xi32> loc(#loc33)
    %39 = arith.addi %38, %31 : tensor<1024xi32> loc(#loc34)
    %40 = tt.addptr %33, %39 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc35)
    %41 = tt.load %40, %25, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc36)
    %42 = arith.cmpf ogt, %41, %35 : tensor<1024xf32> loc(#loc83)
    %43 = arith.cmpf une, %41, %41 : tensor<1024xf32> loc(#loc84)
    %44 = arith.ori %42, %43 : tensor<1024xi1> loc(#loc85)
    %45 = arith.select %44, %41, %35 : tensor<1024xi1>, tensor<1024xf32> loc(#loc86)
    %46 = arith.addi %26, %cst_3 : tensor<1024xi32> loc(#loc42)
    %47 = arith.addi %46, %27 : tensor<1024xi32> loc(#loc43)
    %48 = arith.addi %47, %29 : tensor<1024xi32> loc(#loc44)
    %49 = arith.addi %48, %31 : tensor<1024xi32> loc(#loc45)
    %50 = tt.addptr %33, %49 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc46)
    %51 = tt.load %50, %25, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc47)
    %52 = arith.cmpf ogt, %51, %45 : tensor<1024xf32> loc(#loc87)
    %53 = arith.cmpf une, %51, %51 : tensor<1024xf32> loc(#loc88)
    %54 = arith.ori %52, %53 : tensor<1024xi1> loc(#loc89)
    %55 = arith.select %54, %51, %45 : tensor<1024xi1>, tensor<1024xf32> loc(#loc90)
    %56 = arith.addi %26, %cst_2 : tensor<1024xi32> loc(#loc49)
    %57 = arith.addi %56, %27 : tensor<1024xi32> loc(#loc50)
    %58 = arith.addi %57, %29 : tensor<1024xi32> loc(#loc51)
    %59 = arith.addi %58, %31 : tensor<1024xi32> loc(#loc52)
    %60 = tt.addptr %33, %59 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc53)
    %61 = tt.load %60, %25, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc54)
    %62 = arith.cmpf ogt, %61, %55 : tensor<1024xf32> loc(#loc91)
    %63 = arith.cmpf une, %61, %61 : tensor<1024xf32> loc(#loc92)
    %64 = arith.ori %62, %63 : tensor<1024xi1> loc(#loc93)
    %65 = arith.select %64, %61, %55 : tensor<1024xi1>, tensor<1024xf32> loc(#loc94)
    %66 = arith.cmpi sge, %24, %cst_10 : tensor<1024xi64> loc(#loc56)
    %67 = arith.addi %6, %cst_1 : tensor<1024xi32> loc(#loc57)
    %68 = arith.muli %67, %cst_14 : tensor<1024xi32> loc(#loc58)
    %69 = arith.addi %11, %68 : tensor<1024xi32> loc(#loc59)
    %70 = arith.muli %10, %cst_7 : tensor<1024xi32> loc(#loc60)
    %71 = arith.addi %69, %70 : tensor<1024xi32> loc(#loc61)
    %72 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc62)
    %73 = tt.addptr %72, %71 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc62)
    %74 = tt.load %73, %66, %cst_5 : tensor<1024x!tt.ptr<f32>> loc(#loc63)
    %75 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc64)
    %76 = tt.addptr %75, %67 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc64)
    %77 = tt.load %76, %66, %cst_5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc65)
    %78 = arith.addf %74, %77 : tensor<1024xf32> loc(#loc66)
    %79 = arith.select %66, %78, %cst_5 : tensor<1024xi1>, tensor<1024xf32> loc(#loc67)
    %80 = arith.select %25, %65, %79 : tensor<1024xi1>, tensor<1024xf32> loc(#loc95)
    %81 = arith.subf %80, %14 : tensor<1024xf32> loc(#loc70)
    %82 = arith.addf %17, %cst_0 : tensor<1024xf32> loc(#loc71)
    %83 = tt.extern_elementwise %82 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024xf32>) -> tensor<1024xf32> loc(#loc72)
    %84 = arith.divf %cst, %83 : tensor<1024xf32> loc(#loc73)
    %85 = arith.mulf %81, %84 : tensor<1024xf32> loc(#loc74)
    %86 = arith.mulf %85, %20 : tensor<1024xf32> loc(#loc75)
    %87 = arith.addf %86, %23 : tensor<1024xf32> loc(#loc76)
    %88 = arith.cmpf ogt, %cst_5, %87 : tensor<1024xf32> loc(#loc96)
    %89 = arith.select %88, %cst_5, %87 : tensor<1024xi1>, tensor<1024xf32> loc(#loc97)
    %90 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc78)
    %91 = tt.addptr %90, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc78)
    tt.store %91, %80 : tensor<1024x!tt.ptr<f32>> loc(#loc79)
    %92 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc80)
    %93 = tt.addptr %92, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc80)
    tt.store %93, %89 : tensor<1024x!tt.ptr<f32>> loc(#loc81)
    tt.return loc(#loc82)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":21:28)
#loc3 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":21:33)
#loc4 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":22:36)
#loc5 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":22:23)
#loc6 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":24:21)
#loc7 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":24:29)
#loc8 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":25:19)
#loc9 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":26:21)
#loc10 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":26:27)
#loc11 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":27:19)
#loc12 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":28:19)
#loc13 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":30:31)
#loc14 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":30:36)
#loc15 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":31:31)
#loc16 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":31:36)
#loc17 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":32:31)
#loc18 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":32:36)
#loc19 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":33:31)
#loc20 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":33:36)
#loc21 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":38:18)
#loc22 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:32)
#loc23 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:41)
#loc24 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:37)
#loc25 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:52)
#loc26 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:46)
#loc27 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:65)
#loc28 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:58)
#loc29 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:30)
#loc30 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":39:70)
#loc31 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:34)
#loc32 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:41)
#loc33 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:50)
#loc34 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:62)
#loc35 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:30)
#loc36 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":40:74)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc38 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":41:40)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc42 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:35)
#loc43 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:42)
#loc44 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:51)
#loc45 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:63)
#loc46 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:30)
#loc47 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":42:75)
#loc48 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":43:40)
#loc49 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:36)
#loc50 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:43)
#loc51 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:52)
#loc52 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:64)
#loc53 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:31)
#loc54 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":44:76)
#loc55 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":45:42)
#loc56 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":48:20)
#loc57 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:50)
#loc58 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:42)
#loc59 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:36)
#loc60 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:61)
#loc61 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:56)
#loc62 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:31)
#loc63 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":51:66)
#loc64 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":52:31)
#loc65 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":52:44)
#loc66 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":53:20)
#loc67 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":55:35)
#loc68 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":56:34)
#loc69 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":47:34)
#loc70 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":57:20)
#loc71 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":59:20)
#loc72 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":60:27)
#loc73 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":62:20)
#loc74 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":65:20)
#loc75 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":66:20)
#loc76 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":67:20)
#loc77 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":69:42)
#loc78 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":70:25)
#loc79 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":70:37)
#loc80 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":71:25)
#loc81 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":71:37)
#loc82 = loc("inductor_cache/xh/cxhpemzyemm3ftrnegq5kjjkrwxhcxnt524v7im722lx6xc4cdee.py":71:4)
#loc83 = loc(callsite(#loc37 at #loc38))
#loc84 = loc(callsite(#loc39 at #loc38))
#loc85 = loc(callsite(#loc40 at #loc38))
#loc86 = loc(callsite(#loc41 at #loc38))
#loc87 = loc(callsite(#loc37 at #loc48))
#loc88 = loc(callsite(#loc39 at #loc48))
#loc89 = loc(callsite(#loc40 at #loc48))
#loc90 = loc(callsite(#loc41 at #loc48))
#loc91 = loc(callsite(#loc37 at #loc55))
#loc92 = loc(callsite(#loc39 at #loc55))
#loc93 = loc(callsite(#loc40 at #loc55))
#loc94 = loc(callsite(#loc41 at #loc55))
#loc95 = loc(fused[#loc68, #loc69])
#loc96 = loc(callsite(#loc37 at #loc77))
#loc97 = loc(callsite(#loc41 at #loc77))
