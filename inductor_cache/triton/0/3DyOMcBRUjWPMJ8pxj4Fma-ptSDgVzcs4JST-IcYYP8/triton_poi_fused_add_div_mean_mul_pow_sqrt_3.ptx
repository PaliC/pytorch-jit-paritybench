//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mean_mul_pow_sqrt_3 // -- Begin function triton_poi_fused_add_div_mean_mul_pow_sqrt_3
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_div_mean_mul_pow_sqrt_3
.visible .entry triton_poi_fused_add_div_mean_mul_pow_sqrt_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_4,
	.param .u32 triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_5
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:21:33
	shl.b32 	%r32, %r1, 6;
	ld.param.u64 	%rd14, [triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_3];
	.loc	1 22 36                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:22:36
	mov.u32 	%r33, %tid.x;
	shl.b32 	%r34, %r33, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_add_div_mean_mul_pow_sqrt_3_param_4];
	and.b32  	%r35, %r34, 62;
	.loc	1 22 23                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:22:23
	or.b32  	%r36, %r32, %r35;
	.loc	1 23 21                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:23:21
	setp.lt.s32 	%p1, %r36, 64;
	.loc	1 25 21                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:25:21
	shr.s32 	%r38, %r36, 31;
	shr.u32 	%r39, %r38, 30;
	add.s32 	%r40, %r36, %r39;
	shr.s32 	%r41, %r40, 2;
	.loc	1 25 26                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:25:26
	shr.u32 	%r42, %r41, 30;
	add.s32 	%r43, %r41, %r42;
	and.b32  	%r44, %r43, -4;
	sub.s32 	%r45, %r41, %r44;
	.loc	1 26 19                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:26:19
	and.b32  	%r46, %r40, -4;
	sub.s32 	%r47, %r36, %r46;
	.loc	1 27 19                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:27:19
	bfe.s32 	%r48, %r1, 25, 1;
	shr.u32 	%r49, %r48, 28;
	add.s32 	%r50, %r36, %r49;
	.loc	1 28 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:28:30
	mul.wide.s32 	%rd17, %r36, 4;
	add.s64 	%rd1, %rd12, %rd17;
	.loc	1 28 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:28:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:29:30
	mul.wide.s32 	%rd18, %r45, 4;
	add.s64 	%rd2, %rd13, %rd18;
	.loc	1 29 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:30:30
	add.s64 	%rd4, %rd14, %rd17;
	.loc	1 30 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:30:35
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.v2.b32 { %r25, %r28 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 38                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:31:38
	and.b32  	%r51, %r50, -16;
	.loc	1 31 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:31:35
	add.s32 	%r52, %r51, %r47;
	.loc	1 31 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:31:30
	mul.wide.s32 	%rd19, %r52, 4;
	add.s64 	%rd5, %rd14, %rd19;
	.loc	1 31 43                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:31:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	mov.b32 	%f2, %r9;
	.loc	1 32 39                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:32:39
	add.s32 	%r53, %r52, 4;
	.loc	1 32 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:32:30
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd6, %rd14, %rd20;
	.loc	1 32 47                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:32:47
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 33 39                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:33:39
	add.s32 	%r54, %r52, 8;
	.loc	1 33 30                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:33:30
	mul.wide.s32 	%rd21, %r54, 4;
	add.s64 	%rd7, %rd14, %rd21;
	.loc	1 33 47                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:33:47
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r12;
	mov.b32 	%f6, %r13;
	.loc	1 34 41                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:34:41
	add.s32 	%r55, %r52, 12;
	.loc	1 34 31                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:34:31
	mul.wide.s32 	%rd22, %r55, 4;
	add.s64 	%rd8, %rd14, %rd22;
	.loc	1 34 49                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:34:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r15;
	.loc	1 35 31                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:35:31
	add.s64 	%rd9, %rd15, %rd18;
	.loc	1 35 36                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:35:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:37:18
	mul.f32 	%f9, %f3, %f3;
	mul.f32 	%f10, %f4, %f4;
	.loc	1 38 18                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:38:18
	fma.rn.f32 	%f11, %f1, %f1, %f9;
	fma.rn.f32 	%f12, %f2, %f2, %f10;
	.loc	1 40 19                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:40:19
	fma.rn.f32 	%f13, %f5, %f5, %f11;
	fma.rn.f32 	%f14, %f6, %f6, %f12;
	.loc	1 42 20                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:42:20
	fma.rn.f32 	%f15, %f7, %f7, %f13;
	fma.rn.f32 	%f16, %f8, %f8, %f14;
	.loc	1 44 20                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:44:20
	mov.b32 	%r19, %f15;
	mov.b32 	%r20, 1082130432;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f17, %r18;
	mov.b32 	%r22, %f16;
	// begin inline asm
	div.full.f32 %r21, %r22, %r20;
	// end inline asm
	mov.b32 	%f18, %r21;
	.loc	1 46 20                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:46:20
	add.f32 	%f19, %f17, 0f358637BD;
	add.f32 	%f20, %f18, 0f358637BD;
	.loc	1 47 27                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:47:27
	sqrt.approx.ftz.f32 	%f21, %f19;
	sqrt.approx.ftz.f32 	%f22, %f20;
	.loc	1 35 36                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:35:36
	mov.b32 	%f23, %r17;
	mov.b32 	%f24, %r16;
	.loc	1 29 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:29:35
	mov.b32 	%f25, %r5;
	mov.b32 	%f26, %r4;
	.loc	1 28 35                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:28:35
	mov.b32 	%f27, %r3;
	mov.b32 	%f28, %r2;
	.loc	1 48 19                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:48:19
	mov.b32 	%r26, %f21;
	// begin inline asm
	div.full.f32 %r24, %r25, %r26;
	// end inline asm
	mov.b32 	%f29, %r24;
	mov.b32 	%r29, %f22;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f30, %r27;
	.loc	1 50 20                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:50:20
	fma.rn.f32 	%f31, %f29, %f26, %f24;
	fma.rn.f32 	%f32, %f30, %f25, %f23;
	.loc	1 51 19                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:51:19
	add.f32 	%f33, %f31, %f28;
	add.f32 	%f34, %f32, %f27;
	.loc	1 52 25                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:52:25
	add.s64 	%rd11, %rd16, %rd17;
	.loc	1 52 37                         // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:52:37
	mov.b32 	%r30, %f33;
	mov.b32 	%r31, %f34;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 52 4                          // cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py:52:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mw/cmwappexbp5hkbczxr3mvaoqwxpysy4qz2g2s3f463dsmpglyxbz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 119
.b8 97
.b8 112
.b8 112
.b8 101
.b8 120
.b8 98
.b8 112
.b8 53
.b8 104
.b8 107
.b8 98
.b8 99
.b8 122
.b8 120
.b8 114
.b8 51
.b8 109
.b8 118
.b8 97
.b8 111
.b8 113
.b8 119
.b8 120
.b8 112
.b8 121
.b8 115
.b8 121
.b8 52
.b8 113
.b8 122
.b8 50
.b8 103
.b8 50
.b8 115
.b8 51
.b8 102
.b8 52
.b8 54
.b8 51
.b8 100
.b8 115
.b8 109
.b8 112
.b8 103
.b8 108
.b8 121
.b8 120
.b8 98
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
