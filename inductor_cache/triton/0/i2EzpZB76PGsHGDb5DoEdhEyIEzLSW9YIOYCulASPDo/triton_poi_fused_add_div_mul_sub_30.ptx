//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mul_sub_30 // -- Begin function triton_poi_fused_add_div_mul_sub_30
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_div_mul_sub_30
.visible .entry triton_poi_fused_add_div_mul_sub_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_sub_30_param_5,
	.param .u32 triton_poi_fused_add_div_mul_sub_30_param_6,
	.param .u32 triton_poi_fused_add_div_mul_sub_30_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<166>;
	.reg .f32 	%f<45>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:19:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_poi_fused_add_div_mul_sub_30_param_0];
	ld.param.u64 	%rd26, [triton_poi_fused_add_div_mul_sub_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:22:33
	shl.b32 	%r91, %r1, 6;
	ld.param.u64 	%rd27, [triton_poi_fused_add_div_mul_sub_30_param_2];
	ld.param.u64 	%rd28, [triton_poi_fused_add_div_mul_sub_30_param_3];
	.loc	1 23 44                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:23:44
	mov.u32 	%r92, %tid.x;
	ld.param.u64 	%rd29, [triton_poi_fused_add_div_mul_sub_30_param_4];
	bfe.u32 	%r93, %r92, 2, 5;
	ld.param.u64 	%rd30, [triton_poi_fused_add_div_mul_sub_30_param_5];
	shl.b32 	%r94, %r92, 2;
	and.b32  	%r95, %r94, 12;
	and.b32  	%r96, %r94, 60;
	.loc	1 23 23                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:23:23
	or.b32  	%r97, %r91, %r93;
	or.b32  	%r98, %r97, 32;
	or.b32  	%r99, %r91, %r96;
	.loc	1 24 21                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:24:21
	setp.lt.s32 	%p1, %r97, 1536;
	setp.lt.s32 	%p5, %r98, 1536;
	setp.lt.s32 	%p33, %r99, 1536;
	.loc	1 25 28                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:25:33
	shl.b32 	%r100, %r2, 4;
	.loc	1 26 44                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:26:44
	bfe.u32 	%r101, %r92, 4, 3;
	.loc	1 26 23                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:26:23
	or.b32  	%r102, %r100, %r95;
	or.b32  	%r103, %r100, %r101;
	or.b32  	%r104, %r103, 8;
	.loc	1 27 21                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:27:21
	setp.lt.s32 	%p34, %r102, 16;
	setp.lt.s32 	%p35, %r103, 16;
	setp.lt.s32 	%p36, %r104, 16;
	.loc	1 31 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:31:19
	mul.hi.s32 	%r106, %r97, 715827883;
	shr.u32 	%r107, %r106, 31;
	shr.s32 	%r108, %r106, 6;
	add.s32 	%r109, %r108, %r107;
	.loc	1 28 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:28:19
	mul.lo.s32 	%r110, %r109, 384;
	sub.s32 	%r111, %r97, %r110;
	.loc	1 31 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:31:19
	mul.hi.s32 	%r113, %r98, 715827883;
	shr.u32 	%r114, %r113, 31;
	shr.s32 	%r115, %r113, 6;
	add.s32 	%r116, %r115, %r114;
	.loc	1 28 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:28:19
	mul.lo.s32 	%r117, %r116, 384;
	sub.s32 	%r118, %r98, %r117;
	.loc	1 31 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:31:19
	mul.hi.s32 	%r120, %r99, 715827883;
	shr.u32 	%r121, %r120, 31;
	shr.s32 	%r122, %r120, 6;
	add.s32 	%r123, %r122, %r121;
	.loc	1 28 19                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:28:19
	mul.lo.s32 	%r124, %r123, 384;
	sub.s32 	%r125, %r99, %r124;
	.loc	1 32 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:32:30
	mul.wide.s32 	%rd31, %r111, 4;
	add.s64 	%rd1, %rd25, %rd31;
	mul.wide.s32 	%rd32, %r118, 4;
	add.s64 	%rd5, %rd25, %rd32;
	.loc	1 32 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:32:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r10;
	.loc	1 33 38                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:38
	shl.b32 	%r126, %r97, 4;
	shl.b32 	%r127, %r98, 4;
	.loc	1 33 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:35
	add.s32 	%r128, %r102, %r126;
	add.s32 	%r129, %r102, %r127;
	.loc	1 33 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:30
	mul.wide.s32 	%rd33, %r128, 4;
	add.s64 	%rd9, %rd26, %rd33;
	mul.wide.s32 	%rd34, %r129, 4;
	add.s64 	%rd10, %rd26, %rd34;
	.loc	1 33 51                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:51
	and.pred  	%p9, %p1, %p34;
	and.pred  	%p10, %p5, %p34;
	and.pred  	%p31, %p33, %p35;
	and.pred  	%p32, %p36, %p33;
	.loc	1 33 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:33:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r12;
	mov.b32 	%f5, %r13;
	mov.b32 	%f6, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r15;
	mov.b32 	%f8, %r16;
	mov.b32 	%f9, %r17;
	mov.b32 	%f10, %r18;
	.loc	1 34 38                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:38
	shl.b32 	%r130, %r109, 4;
	shl.b32 	%r131, %r116, 4;
	.loc	1 34 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:35
	add.s32 	%r132, %r130, %r102;
	add.s32 	%r133, %r102, %r131;
	.loc	1 34 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:30
	mul.wide.s32 	%rd35, %r132, 4;
	add.s64 	%rd11, %rd27, %rd35;
	mul.wide.s32 	%rd36, %r133, 4;
	add.s64 	%rd12, %rd27, %rd36;
	.loc	1 34 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:34:43
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r19;
	mov.b32 	%f12, %r20;
	mov.b32 	%f13, %r21;
	mov.b32 	%f14, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r23;
	mov.b32 	%f16, %r24;
	mov.b32 	%f17, %r25;
	mov.b32 	%f18, %r26;
	.loc	1 35 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:35:30
	add.s64 	%rd13, %rd28, %rd35;
	add.s64 	%rd14, %rd28, %rd36;
	.loc	1 35 43                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:35:43
	// begin inline asm
	mov.u32 %r45, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r54, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r45, %r48, %r51, %r54 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r66, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r57, %r60, %r63, %r66 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:36:30
	add.s64 	%rd15, %rd29, %rd31;
	add.s64 	%rd19, %rd29, %rd32;
	.loc	1 36 35                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:36:35
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r36 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r38;
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r39 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r40 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r41 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r42 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r42;
	.loc	1 37 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:37:18
	sub.f32 	%f21, %f3, %f11;
	sub.f32 	%f22, %f4, %f12;
	sub.f32 	%f23, %f5, %f13;
	sub.f32 	%f24, %f6, %f14;
	sub.f32 	%f25, %f7, %f15;
	sub.f32 	%f26, %f8, %f16;
	sub.f32 	%f27, %f9, %f17;
	sub.f32 	%f28, %f10, %f18;
	.loc	1 38 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:38:18
	mov.b32 	%r44, %f21;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f29, %r43;
	mov.b32 	%r47, %f22;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f30, %r46;
	mov.b32 	%r50, %f23;
	// begin inline asm
	div.full.f32 %r49, %r50, %r51;
	// end inline asm
	mov.b32 	%f31, %r49;
	mov.b32 	%r53, %f24;
	// begin inline asm
	div.full.f32 %r52, %r53, %r54;
	// end inline asm
	mov.b32 	%f32, %r52;
	mov.b32 	%r56, %f25;
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f33, %r55;
	mov.b32 	%r59, %f26;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f34, %r58;
	mov.b32 	%r62, %f27;
	// begin inline asm
	div.full.f32 %r61, %r62, %r63;
	// end inline asm
	mov.b32 	%f35, %r61;
	mov.b32 	%r65, %f28;
	// begin inline asm
	div.full.f32 %r64, %r65, %r66;
	// end inline asm
	mov.b32 	%f36, %r64;
	.loc	1 40 18                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:40:18
	fma.rn.f32 	%f37, %f29, %f1, %f19;
	fma.rn.f32 	%f38, %f30, %f1, %f19;
	fma.rn.f32 	%f39, %f31, %f1, %f19;
	fma.rn.f32 	%f40, %f32, %f1, %f19;
	fma.rn.f32 	%f41, %f33, %f2, %f20;
	fma.rn.f32 	%f42, %f34, %f2, %f20;
	fma.rn.f32 	%f43, %f35, %f2, %f20;
	fma.rn.f32 	%f44, %f36, %f2, %f20;
	.loc	1 41 30                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:30
	mad.lo.s32 	%r134, %r123, 6144, %r125;
	.loc	1 41 39                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:39
	mad.lo.s32 	%r135, %r103, 384, %r134;
	add.s32 	%r136, %r135, 3072;
	.loc	1 41 25                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:25
	mul.wide.s32 	%rd37, %r135, 4;
	add.s64 	%rd23, %rd30, %rd37;
	mul.wide.s32 	%rd38, %r136, 4;
	add.s64 	%rd24, %rd30, %rd38;
	.loc	1 41 55                         // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:55
	shl.b32 	%r137, %r92, 8;
	and.b32  	%r138, %r137, 768;
	or.b32  	%r139, %r138, %r93;
	and.b32  	%r140, %r94, 508;
	shr.u32 	%r141, %r138, 2;
	mov.u32 	%r142, global_smem;
	add.s32 	%r143, %r142, %r141;
	shl.b32 	%r144, %r139, 2;
	add.s32 	%r67, %r143, %r144;
	mov.b32 	%r68, %f37;
	mov.pred 	%p23, -1;
	// begin inline asm
	@%p23 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	or.b32  	%r145, %r138, 64;
	shr.u32 	%r146, %r145, 2;
	add.s32 	%r147, %r142, %r146;
	add.s32 	%r148, %r147, %r144;
	add.s32 	%r69, %r148, 256;
	mov.b32 	%r70, %f38;
	// begin inline asm
	@%p23 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	or.b32  	%r149, %r138, 128;
	shr.u32 	%r150, %r149, 2;
	add.s32 	%r151, %r142, %r150;
	add.s32 	%r152, %r151, %r144;
	add.s32 	%r71, %r152, 512;
	mov.b32 	%r72, %f39;
	// begin inline asm
	@%p23 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	or.b32  	%r153, %r138, 192;
	shr.u32 	%r154, %r153, 2;
	add.s32 	%r155, %r142, %r154;
	add.s32 	%r156, %r155, %r144;
	add.s32 	%r73, %r156, 768;
	mov.b32 	%r74, %f40;
	// begin inline asm
	@%p23 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r67, 128;
	mov.b32 	%r76, %f41;
	// begin inline asm
	@%p23 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r148, 384;
	mov.b32 	%r78, %f42;
	// begin inline asm
	@%p23 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r152, 640;
	mov.b32 	%r80, %f43;
	// begin inline asm
	@%p23 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r156, 896;
	mov.b32 	%r82, %f44;
	// begin inline asm
	@%p23 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r157, %r92, 112;
	add.s32 	%r158, %r142, %r157;
	shl.b32 	%r159, %r140, 2;
	add.s32 	%r160, %r158, %r159;
	or.b32  	%r161, %r140, 512;
	shr.u32 	%r162, %r161, 2;
	and.b32  	%r163, %r162, 240;
	add.s32 	%r164, %r142, %r163;
	add.s32 	%r165, %r164, %r159;
	ld.shared.v4.u32 	{%r87, %r88, %r89, %r90}, [%r165+2048];
	ld.shared.v4.u32 	{%r83, %r84, %r85, %r86}, [%r160];
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd23 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd24 + 0 ], { %r87, %r88, %r89, %r90 };
	// end inline asm
	.loc	1 41 4                          // cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vy/cvyithxfccjcivacam5aovzjfak26scmtvqt7lqmxqylruxdyrzk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 121
.b8 105
.b8 116
.b8 104
.b8 120
.b8 102
.b8 99
.b8 99
.b8 106
.b8 99
.b8 105
.b8 118
.b8 97
.b8 99
.b8 97
.b8 109
.b8 53
.b8 97
.b8 111
.b8 118
.b8 122
.b8 106
.b8 102
.b8 97
.b8 107
.b8 50
.b8 54
.b8 115
.b8 99
.b8 109
.b8 116
.b8 118
.b8 113
.b8 116
.b8 55
.b8 108
.b8 113
.b8 109
.b8 120
.b8 113
.b8 121
.b8 108
.b8 114
.b8 117
.b8 120
.b8 100
.b8 121
.b8 114
.b8 122
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
