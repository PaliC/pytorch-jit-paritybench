; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_reflection_pad2d_10(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = or disjoint i32 %9, 512, !dbg !13
  %14 = srem i32 %9, 512, !dbg !14
  %15 = srem i32 %10, 512, !dbg !14
  %16 = srem i32 %11, 512, !dbg !14
  %17 = srem i32 %12, 512, !dbg !14
  %18 = sdiv i32 %9, 51200, !dbg !15
  %19 = sdiv i32 %13, 51200, !dbg !15
  %20 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %21 = shufflevector <2 x i32> %20, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %22 = sdiv <2 x i32> %21, <i32 5120, i32 512>, !dbg !16
  %23 = srem <2 x i32> %22, splat (i32 10), !dbg !17
  %24 = add nsw <2 x i32> %23, splat (i32 -1), !dbg !18
  %25 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %24, i1 true), !dbg !19
  %26 = add nsw <2 x i32> %25, splat (i32 -7), !dbg !20
  %27 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %26, i1 true), !dbg !21
  %28 = mul nsw <2 x i32> %27, <i32 -4096, i32 -512>, !dbg !22
  %29 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !16
  %30 = shufflevector <2 x i32> %29, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %31 = sdiv <2 x i32> %30, <i32 5120, i32 512>, !dbg !16
  %32 = srem <2 x i32> %31, splat (i32 10), !dbg !17
  %33 = add nsw <2 x i32> %32, splat (i32 -1), !dbg !18
  %34 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %33, i1 true), !dbg !19
  %35 = add nsw <2 x i32> %34, splat (i32 -7), !dbg !20
  %36 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %35, i1 true), !dbg !21
  %37 = mul nsw <2 x i32> %36, <i32 -4096, i32 -512>, !dbg !22
  %38 = shl nsw i32 %18, 15, !dbg !23
  %39 = shl nsw i32 %19, 15, !dbg !23
  %40 = or disjoint i32 %38, 32256, !dbg !24
  %41 = add nsw i32 %40, %14, !dbg !25
  %42 = extractelement <2 x i32> %28, i64 0, !dbg !26
  %43 = add i32 %41, %42, !dbg !26
  %44 = extractelement <2 x i32> %28, i64 1, !dbg !27
  %45 = add i32 %43, %44, !dbg !27
  %46 = add nsw i32 %40, %15, !dbg !25
  %47 = add i32 %46, %42, !dbg !26
  %48 = add i32 %47, %44, !dbg !27
  %49 = add nsw i32 %40, %16, !dbg !25
  %50 = add i32 %49, %42, !dbg !26
  %51 = add i32 %50, %44, !dbg !27
  %52 = add nsw i32 %40, %17, !dbg !25
  %53 = add i32 %52, %42, !dbg !26
  %54 = add i32 %53, %44, !dbg !27
  %55 = or disjoint i32 %39, 32256, !dbg !24
  %56 = add nsw i32 %55, %14, !dbg !25
  %57 = extractelement <2 x i32> %37, i64 0, !dbg !26
  %58 = add i32 %56, %57, !dbg !26
  %59 = extractelement <2 x i32> %37, i64 1, !dbg !27
  %60 = add i32 %58, %59, !dbg !27
  %61 = add nsw i32 %55, %15, !dbg !25
  %62 = add i32 %61, %57, !dbg !26
  %63 = add i32 %62, %59, !dbg !27
  %64 = add nsw i32 %55, %16, !dbg !25
  %65 = add i32 %64, %57, !dbg !26
  %66 = add i32 %65, %59, !dbg !27
  %67 = add nsw i32 %55, %17, !dbg !25
  %68 = add i32 %67, %57, !dbg !26
  %69 = add i32 %68, %59, !dbg !27
  %70 = sext i32 %45 to i64, !dbg !28
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !28
  %72 = sext i32 %48 to i64, !dbg !28
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !28
  %74 = sext i32 %51 to i64, !dbg !28
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !28
  %76 = sext i32 %54 to i64, !dbg !28
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !28
  %78 = sext i32 %60 to i64, !dbg !28
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !28
  %80 = sext i32 %63 to i64, !dbg !28
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !28
  %82 = sext i32 %66 to i64, !dbg !28
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !28
  %84 = sext i32 %69 to i64, !dbg !28
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !28
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 true) #2, !dbg !29
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 true) #2, !dbg !29
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #2, !dbg !29
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 true) #2, !dbg !29
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #2, !dbg !29
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 true) #2, !dbg !29
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %83, i1 true) #2, !dbg !29
  %93 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 true) #2, !dbg !29
  %94 = sext i32 %9 to i64, !dbg !30
  %95 = getelementptr float, ptr addrspace(1) %1, i64 %94, !dbg !30
  %96 = sext i32 %13 to i64, !dbg !30
  %97 = getelementptr float, ptr addrspace(1) %1, i64 %96, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %86, i32 %87, i32 %88, i32 %89, ptr addrspace(1) %95, i1 true) #2, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %90, i32 %91, i32 %92, i32 %93, ptr addrspace(1) %97, i1 true) #2, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cso3wtb3ygj56xdiox2gvmcncvvmcqkfjjwke5cl6odagnqppou3.py", directory: "inductor_cache/so")
!4 = !{ptr @triton_poi_fused_reflection_pad2d_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_reflection_pad2d_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_reflection_pad2d_10", linkageName: "triton_poi_fused_reflection_pad2d_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 29, scope: !7)
!18 = !DILocation(line: 29, column: 90, scope: !7)
!19 = !DILocation(line: 29, column: 83, scope: !7)
!20 = !DILocation(line: 29, column: 71, scope: !7)
!21 = !DILocation(line: 29, column: 64, scope: !7)
!22 = !DILocation(line: 29, column: 52, scope: !7)
!23 = !DILocation(line: 29, column: 158, scope: !7)
!24 = !DILocation(line: 29, column: 38, scope: !7)
!25 = !DILocation(line: 29, column: 44, scope: !7)
!26 = !DILocation(line: 29, column: 99, scope: !7)
!27 = !DILocation(line: 29, column: 152, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 163, scope: !7)
!30 = !DILocation(line: 30, column: 25, scope: !7)
!31 = !DILocation(line: 30, column: 36, scope: !7)
!32 = !DILocation(line: 30, column: 4, scope: !7)
