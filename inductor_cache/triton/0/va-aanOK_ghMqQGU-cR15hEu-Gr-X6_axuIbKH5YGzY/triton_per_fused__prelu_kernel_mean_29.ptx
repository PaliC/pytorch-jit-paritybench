//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__prelu_kernel_mean_29 // -- Begin function triton_per_fused__prelu_kernel_mean_29
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__prelu_kernel_mean_29
.visible .entry triton_per_fused__prelu_kernel_mean_29(
	.param .u64 .ptr .global .align 1 triton_per_fused__prelu_kernel_mean_29_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__prelu_kernel_mean_29_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__prelu_kernel_mean_29_param_2,
	.param .u32 triton_per_fused__prelu_kernel_mean_29_param_3,
	.param .u32 triton_per_fused__prelu_kernel_mean_29_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<60>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused__prelu_kernel_mean_29_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__prelu_kernel_mean_29_param_1];
$L__tmp0:
	.loc	1 23 28                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:23:33
	shl.b32 	%r43, %r1, 5;
	ld.param.u64 	%rd7, [triton_per_fused__prelu_kernel_mean_29_param_2];
	.loc	1 24 44                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:24:44
	mov.u32 	%r44, %tid.x;
	and.b32  	%r45, %r44, 24;
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 28;
	and.b32  	%r48, %r44, 31;
	.loc	1 24 23                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:24:23
	or.b32  	%r49, %r43, %r47;
	or.b32  	%r50, %r43, %r48;
	.loc	1 25 21                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:25:21
	setp.lt.s32 	%p1, %r49, 512;
	setp.lt.s32 	%p20, %r50, 512;
	.loc	1 31 19                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:31:19
	shr.s32 	%r52, %r49, 31;
	shr.u32 	%r53, %r52, 25;
	add.s32 	%r54, %r49, %r53;
	.loc	1 30 19                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:30:19
	and.b32  	%r55, %r54, -128;
	sub.s32 	%r56, %r49, %r55;
	.loc	1 33 39                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:39
	shl.b32 	%r57, %r44, 4;
	and.b32  	%r58, %r57, 3968;
	.loc	1 33 49                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:49
	shl.b32 	%r59, %r54, 6;
	and.b32  	%r60, %r59, -8192;
	.loc	1 33 35                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:35
	add.s32 	%r61, %r60, %r56;
	.loc	1 33 44                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:44
	add.s32 	%r62, %r61, %r58;
	add.s32 	%r63, %r62, 4096;
	.loc	1 33 30                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:30
	mul.wide.s32 	%rd8, %r62, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r63, 4;
	add.s64 	%rd2, %rd6, %rd9;
	mov.b32 	%r6, 0;
	.loc	1 33 54                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 34 30                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:34:30
	mul.wide.s32 	%rd10, %r56, 4;
	add.s64 	%rd3, %rd7, %rd10;
	.loc	1 34 35                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 36 18                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:36:18
	setp.gt.f32 	%p21, %f1, 0f00000000;
	setp.gt.f32 	%p22, %f2, 0f00000000;
	setp.gt.f32 	%p23, %f3, 0f00000000;
	setp.gt.f32 	%p24, %f4, 0f00000000;
	setp.gt.f32 	%p25, %f5, 0f00000000;
	setp.gt.f32 	%p26, %f6, 0f00000000;
	setp.gt.f32 	%p27, %f7, 0f00000000;
	setp.gt.f32 	%p28, %f8, 0f00000000;
	.loc	1 37 18                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:37:18
	mul.f32 	%f13, %f1, %f9;
	mul.f32 	%f14, %f2, %f10;
	mul.f32 	%f15, %f3, %f11;
	mul.f32 	%f16, %f4, %f12;
	mul.f32 	%f17, %f5, %f9;
	mul.f32 	%f18, %f6, %f10;
	mul.f32 	%f19, %f7, %f11;
	mul.f32 	%f20, %f8, %f12;
	.loc	1 38 32                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:38:32
	selp.f32 	%f21, %f1, %f13, %p21;
	selp.f32 	%f22, %f2, %f14, %p22;
	selp.f32 	%f23, %f3, %f15, %p23;
	selp.f32 	%f24, %f4, %f16, %p24;
	selp.f32 	%f25, %f5, %f17, %p25;
	selp.f32 	%f26, %f6, %f18, %p26;
	selp.f32 	%f27, %f7, %f19, %p27;
	selp.f32 	%f28, %f8, %f20, %p28;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f21, %f25;
	selp.f32 	%f30, %f29, 0f00000000, %p1;
	add.f32 	%f31, %f22, %f26;
	selp.f32 	%f32, %f31, 0f00000000, %p1;
	add.f32 	%f33, %f23, %f27;
	selp.f32 	%f34, %f33, 0f00000000, %p1;
	add.f32 	%f35, %f24, %f28;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f30;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f37, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f30, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f38;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f39, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f32;
	shfl.sync.bfly.b32	%r69, %r68, 16, 31, -1;
	mov.b32 	%f41, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f32, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f42;
	shfl.sync.bfly.b32	%r71, %r70, 8, 31, -1;
	mov.b32 	%f43, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f34;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f45, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f34, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f46;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f47, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f36;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f49, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f36, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f50;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f51, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p12, %r45, 0;
	bfe.u32 	%r80, %r44, 5, 3;
	shl.b32 	%r81, %r80, 2;
	shl.b32 	%r82, %r47, 5;
	or.b32  	%r83, %r82, %r81;
	mov.u32 	%r84, global_smem;
	add.s32 	%r22, %r84, %r83;
	mov.b32 	%r23, %f40;
	// begin inline asm
	@%p12 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r22, 32;
	mov.b32 	%r25, %f44;
	// begin inline asm
	@%p12 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	add.s32 	%r26, %r22, 64;
	mov.b32 	%r27, %f48;
	// begin inline asm
	@%p12 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r22, 96;
	mov.b32 	%r29, %f52;
	// begin inline asm
	@%p12 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p16, %r44, 256;
	add.s32 	%r31, %r84, %r46;
	// begin inline asm
	@%p16 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r30;
	shfl.sync.bfly.b32	%r85, %r30, 4, 31, -1;
	mov.b32 	%f54, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f55;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f56, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f57;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f58, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r90, %r44, 7;
	setp.eq.s32 	%p29, %r90, 0;
	and.pred  	%p17, %p16, %p29;
	mov.b32 	%r33, %f59;
	// begin inline asm
	@%p17 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r91, %r84, %r82;
	ld.shared.u32 	%r35, [%r91];
	ld.shared.u32 	%r36, [%r91+32];
	ld.shared.u32 	%r37, [%r91+64];
	ld.shared.u32 	%r38, [%r91+96];
$L__tmp2:
	.loc	1 43 19                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:43:19
	bar.sync 	0;
	shl.b32 	%r92, %r47, 2;
	add.s32 	%r34, %r84, %r92;
	mov.pred 	%p18, -1;
	// begin inline asm
	@%p18 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r93, %r48, 2;
	add.s32 	%r94, %r84, %r93;
	ld.shared.u32 	%r40, [%r94];
	mov.b32 	%r41, 1115684864;
	// begin inline asm
	div.full.f32 %r42, %r40, %r41;
	// end inline asm
	.loc	1 44 4                          // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:44:4
	bar.sync 	0;
	.loc	1 45 28                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:45:28
	mul.wide.s32 	%rd11, %r50, 4;
	add.s64 	%rd4, %rd5, %rd11;
	.loc	1 45 40                         // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:45:40
	setp.eq.s32 	%p30, %r80, 0;
	and.pred  	%p19, %p30, %p20;
	// begin inline asm
	@%p19 st.global.b32 [ %rd4 + 0 ], { %r42 };
	// end inline asm
	.loc	1 45 4                          // cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py:45:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wz/cwzeedwqtte5tyc6hw2e3n52we4tfqtddjszyi4ywp2rgbp7ftnt.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 183                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 122
.b8 101
.b8 101
.b8 100
.b8 119
.b8 113
.b8 116
.b8 116
.b8 101
.b8 53
.b8 116
.b8 121
.b8 99
.b8 54
.b8 104
.b8 119
.b8 50
.b8 101
.b8 51
.b8 110
.b8 53
.b8 50
.b8 119
.b8 101
.b8 52
.b8 116
.b8 102
.b8 113
.b8 116
.b8 100
.b8 100
.b8 106
.b8 115
.b8 122
.b8 121
.b8 105
.b8 52
.b8 121
.b8 119
.b8 112
.b8 50
.b8 114
.b8 103
.b8 98
.b8 112
.b8 55
.b8 102
.b8 116
.b8 110
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x29 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 112
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
