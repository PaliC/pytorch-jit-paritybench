#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":19:0)
#loc1 = loc(unknown)
#loc21 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":40:58)
#loc30 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":44:59)
#loc49 = loc(callsite(#loc1 at #loc21))
#loc56 = loc(callsite(#loc1 at #loc30))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_clamp_div_maximum_minimum_mul_ne_rsub_sigmoid_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<-1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc6)
    %7 = arith.subf %cst_1, %3 : tensor<256xf32, #blocked> loc(#loc40)
    %8 = math.exp %7 : tensor<256xf32, #blocked> loc(#loc41)
    %9 = arith.addf %8, %cst_2 : tensor<256xf32, #blocked> loc(#loc42)
    %10 = arith.divf %cst_2, %9 : tensor<256xf32, #blocked> loc(#loc43)
    %11 = arith.cmpf olt, %10, %6 : tensor<256xf32, #blocked> loc(#loc44)
    %12 = arith.cmpf une, %10, %10 : tensor<256xf32, #blocked> loc(#loc45)
    %13 = arith.ori %11, %12 : tensor<256xi1, #blocked> loc(#loc46)
    %14 = arith.select %13, %10, %6 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc47)
    %15 = arith.cmpf une, %6, %cst_3 : tensor<256xf32, #blocked> loc(#loc17)
    %16 = arith.uitofp %15 : tensor<256xi1, #blocked> to tensor<256xf32, #blocked> loc(#loc18)
    %17 = arith.mulf %14, %16 : tensor<256xf32, #blocked> loc(#loc19)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc21)), %arg5: f32 loc(callsite(#loc1 at #loc21))):
      %35 = arith.addf %arg4, %arg5 : f32 loc(#loc62)
      tt.reduce.return %35 : f32 loc(#loc48)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc48)
    %19 = arith.addf %18, %cst_0 : f32 loc(#loc51)
    %20 = arith.cmpf ogt, %10, %6 : tensor<256xf32, #blocked> loc(#loc52)
    %21 = arith.ori %20, %12 : tensor<256xi1, #blocked> loc(#loc53)
    %22 = arith.select %21, %10, %6 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc54)
    %23 = arith.mulf %22, %16 : tensor<256xf32, #blocked> loc(#loc29)
    %24 = "tt.reduce"(%23) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc30)), %arg5: f32 loc(callsite(#loc1 at #loc30))):
      %35 = arith.addf %arg4, %arg5 : f32 loc(#loc63)
      tt.reduce.return %35 : f32 loc(#loc55)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc55)
    %25 = arith.addf %24, %cst_0 : f32 loc(#loc57)
    %26 = arith.cmpf ogt, %25, %cst : f32 loc(#loc58)
    %27 = arith.cmpf une, %25, %25 : f32 loc(#loc59)
    %28 = arith.ori %26, %27 : i1 loc(#loc60)
    %29 = arith.select %28, %25, %cst : f32 loc(#loc61)
    %30 = arith.divf %19, %29 : f32 loc(#loc34)
    %31 = arith.subf %cst, %30 : f32 loc(#loc35)
    %32 = tt.splat %31 : f32 -> tensor<1xf32, #blocked1> loc(#loc35)
    gpu.barrier loc(#loc36)
    %33 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc37)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc37)
    tt.store %34, %32 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":27:26)
#loc3 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":31:30)
#loc4 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":31:35)
#loc5 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":32:30)
#loc6 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":32:35)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc8 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":33:22)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc13 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":34:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc17 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":36:19)
#loc18 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":37:19)
#loc19 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":38:18)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc24 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":40:45)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc26 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":41:41)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc29 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":42:20)
#loc31 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":44:45)
#loc32 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":46:42)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":47:20)
#loc35 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":48:20)
#loc36 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":49:4)
#loc37 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":50:28)
#loc38 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":50:63)
#loc39 = loc("inductor_cache/72/c72oq4dzajknb3dechl4pia2uqptf2qiadwy2c3lrgyeicwlmhp3.py":50:4)
#loc40 = loc(callsite(#loc7 at #loc8))
#loc41 = loc(callsite(#loc9 at #loc8))
#loc42 = loc(callsite(#loc10 at #loc8))
#loc43 = loc(callsite(#loc11 at #loc8))
#loc44 = loc(callsite(#loc12 at #loc13))
#loc45 = loc(callsite(#loc14 at #loc13))
#loc46 = loc(callsite(#loc15 at #loc13))
#loc47 = loc(callsite(#loc16 at #loc13))
#loc48 = loc(callsite(#loc20 at #loc21))
#loc50 = loc(callsite(#loc22 at #loc20))
#loc51 = loc(callsite(#loc23 at #loc24))
#loc52 = loc(callsite(#loc25 at #loc26))
#loc53 = loc(callsite(#loc27 at #loc26))
#loc54 = loc(callsite(#loc28 at #loc26))
#loc55 = loc(callsite(#loc20 at #loc30))
#loc57 = loc(callsite(#loc23 at #loc31))
#loc58 = loc(callsite(#loc25 at #loc32))
#loc59 = loc(callsite(#loc33 at #loc32))
#loc60 = loc(callsite(#loc27 at #loc32))
#loc61 = loc(callsite(#loc28 at #loc32))
#loc62 = loc(callsite(#loc50 at #loc21))
#loc63 = loc(callsite(#loc50 at #loc30))
