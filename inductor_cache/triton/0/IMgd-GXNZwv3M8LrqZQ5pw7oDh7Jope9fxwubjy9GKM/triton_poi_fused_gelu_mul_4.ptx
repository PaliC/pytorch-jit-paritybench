//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_gelu_mul_4 // -- Begin function triton_poi_fused_gelu_mul_4
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_gelu_mul_4
.visible .entry triton_poi_fused_gelu_mul_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_gelu_mul_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_gelu_mul_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_gelu_mul_4_param_2,
	.param .u32 triton_poi_fused_gelu_mul_4_param_3,
	.param .u32 triton_poi_fused_gelu_mul_4_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<119>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_gelu_mul_4_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_gelu_mul_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:22:33
	shl.b32 	%r14, %r8, 4;
	.loc	1 23 44                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:23:44
	mov.u32 	%r1, %tid.x;
	shl.b32 	%r2, %r1, 1;
	and.b32  	%r15, %r2, 2;
	and.b32  	%r16, %r2, 14;
	bfe.u32 	%r17, %r1, 1, 4;
	.loc	1 23 23                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:23:23
	or.b32  	%r18, %r14, %r16;
	or.b32  	%r3, %r14, %r17;
	.loc	1 24 21                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:24:21
	setp.lt.s32 	%p4, %r18, 16;
	setp.lt.s32 	%p5, %r3, 16;
	.loc	1 25 28                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:25:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:25:33
	shl.b32 	%r19, %r9, 2;
	.loc	1 26 44                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:26:44
	bfe.u32 	%r4, %r1, 3, 2;
	.loc	1 26 23                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:26:23
	or.b32  	%r20, %r19, %r4;
	or.b32  	%r5, %r19, %r15;
	.loc	1 27 21                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:27:21
	setp.lt.s32 	%p6, %r20, 4;
	setp.lt.s32 	%p7, %r5, 4;
	.loc	1 30 19                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:30:19
	shr.s32 	%r22, %r18, 31;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r18, %r23;
	.loc	1 29 19                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:29:19
	and.b32  	%r25, %r24, -4;
	sub.s32 	%r26, %r18, %r25;
	bfe.s32 	%r27, %r8, 27, 1;
	shr.u32 	%r28, %r27, 30;
	add.s32 	%r29, %r3, %r28;
	and.b32  	%r30, %r29, 1073741820;
	sub.s32 	%r31, %r3, %r30;
	.loc	1 32 37                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:37
	shl.b32 	%r32, %r20, 2;
	.loc	1 32 35                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:35
	add.s32 	%r33, %r32, %r26;
	.loc	1 32 45                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:45
	shl.b32 	%r34, %r24, 2;
	and.b32  	%r35, %r34, -16;
	.loc	1 32 42                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:42
	add.s32 	%r36, %r33, %r35;
	.loc	1 32 30                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:30
	mul.wide.s32 	%rd6, %r36, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 32 58                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:58
	and.pred  	%p2, %p4, %p6;
	and.pred  	%p16, %p5, %p7;
	.loc	1 32 50                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:32:50
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r11;
	.loc	1 33 37                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:33:37
	shl.b32 	%r37, %r31, 2;
	.loc	1 33 35                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:33:35
	add.s32 	%r38, %r37, %r5;
	.loc	1 33 30                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:33:30
	mul.wide.s32 	%rd7, %r38, 4;
	add.s64 	%rd3, %rd5, %rd7;
	.loc	1 33 42                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:33:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p16 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 37 18                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:37:18
	mul.f32 	%f3, %f1, 0f3F3504F3;
	.loc	1 38 25                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:38:25
	abs.ftz.f32 	%f5, %f3;
	setp.ge.f32 	%p8, %f5, 0f3F8060FE;
	mov.f32 	%f107, 0f3789CA3C;
	mov.f32 	%f106, 0fB9F560B9;
	mov.f32 	%f105, 0f3BAC840B;
	mov.f32 	%f104, 0fBD0C8162;
	mov.f32 	%f103, 0f3E1CF906;
	mov.f32 	%f102, 0f3F6A937E;
	mov.f32 	%f101, 0f3F20D842;
	mov.f32 	%f108, %f5;
	@%p8 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 25                          // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:0:25
	mov.f32 	%f107, 0f38B1E96A;
	mov.f32 	%f106, 0fBA574D20;
	mov.f32 	%f105, 0f3BAAD5EA;
	mov.f32 	%f104, 0fBCDC1BE7;
	mov.f32 	%f103, 0f3DE718AF;
	mov.f32 	%f102, 0fBEC093AC;
	mov.f32 	%f101, 0f3E0375D3;
	.loc	1 38 25                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:38:25
	mul.f32 	%f108, %f3, %f3;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:0:0
	mul.f32 	%f4, %f2, 0f3F3504F3;
	.loc	1 38 25                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:38:25
	setp.ltu.f32 	%p9, %f5, 0f3F8060FE;
	fma.rn.ftz.f32 	%f45, %f107, %f108, %f106;
	fma.rn.ftz.f32 	%f46, %f45, %f108, %f105;
	fma.rn.ftz.f32 	%f47, %f46, %f108, %f104;
	fma.rn.ftz.f32 	%f48, %f47, %f108, %f103;
	fma.rn.ftz.f32 	%f49, %f48, %f108, %f102;
	fma.rn.ftz.f32 	%f50, %f49, %f108, %f101;
	neg.f32 	%f51, %f108;
	selp.f32 	%f52, %f51, %f3, %p8;
	fma.rn.ftz.f32 	%f109, %f50, %f52, %f52;
	mov.f32 	%f100, 0f3F800000;
	@%p9 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f53, %f109;
	sub.f32 	%f55, %f100, %f53;
	mov.b32 	%r39, %f55;
	mov.b32 	%r40, %f3;
	and.b32  	%r41, %r40, -2147483648;
	or.b32  	%r42, %r41, %r39;
	mov.b32 	%f109, %r42;
$L__BB0_4:                              // %__nv_erff.exit
	abs.ftz.f32 	%f18, %f4;
	setp.ge.f32 	%p11, %f18, 0f3F8060FE;
	mov.f32 	%f116, 0f3789CA3C;
	mov.f32 	%f115, 0fB9F560B9;
	mov.f32 	%f114, 0f3BAC840B;
	mov.f32 	%f113, 0fBD0C8162;
	mov.f32 	%f112, 0f3E1CF906;
	mov.f32 	%f111, 0f3F6A937E;
	mov.f32 	%f110, 0f3F20D842;
	mov.f32 	%f117, %f18;
	@%p11 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f117, %f4, %f4;
	mov.f32 	%f116, 0f38B1E96A;
	mov.f32 	%f115, 0fBA574D20;
	mov.f32 	%f114, 0f3BAAD5EA;
	mov.f32 	%f113, 0fBCDC1BE7;
	mov.f32 	%f112, 0f3DE718AF;
	mov.f32 	%f111, 0fBEC093AC;
	mov.f32 	%f110, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i5
	.loc	1 0 25                          // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:0:25
	ld.param.u64 	%rd1, [triton_poi_fused_gelu_mul_4_param_2];
	.loc	1 38 25                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:38:25
	setp.ltu.f32 	%p12, %f18, 0f3F8060FE;
	fma.rn.ftz.f32 	%f70, %f116, %f117, %f115;
	fma.rn.ftz.f32 	%f71, %f70, %f117, %f114;
	fma.rn.ftz.f32 	%f72, %f71, %f117, %f113;
	fma.rn.ftz.f32 	%f73, %f72, %f117, %f112;
	fma.rn.ftz.f32 	%f74, %f73, %f117, %f111;
	fma.rn.ftz.f32 	%f75, %f74, %f117, %f110;
	neg.f32 	%f76, %f117;
	selp.f32 	%f77, %f76, %f4, %p11;
	fma.rn.ftz.f32 	%f118, %f75, %f77, %f77;
	@%p12 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f78, %f118;
	sub.f32 	%f80, %f100, %f78;
	mov.b32 	%r43, %f80;
	mov.b32 	%r44, %f4;
	and.b32  	%r45, %r44, -2147483648;
	or.b32  	%r46, %r45, %r43;
	mov.b32 	%f118, %r46;
$L__BB0_8:                              // %__nv_erff.exit24
	.loc	1 35 18                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:35:18
	mul.f32 	%f81, %f2, 0f3F000000;
	mul.f32 	%f82, %f1, 0f3F000000;
	.loc	1 33 42                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:33:42
	mov.b32 	%f83, %r13;
	mov.b32 	%f84, %r12;
	.loc	1 40 18                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:40:18
	add.f32 	%f85, %f109, 0f3F800000;
	add.f32 	%f86, %f118, 0f3F800000;
	.loc	1 41 18                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:41:18
	mul.f32 	%f87, %f82, %f85;
	mul.f32 	%f88, %f81, %f86;
	shl.b32 	%r53, %r1, 3;
	and.b32  	%r54, %r53, 56;
	or.b32  	%r55, %r54, %r4;
	and.b32  	%r56, %r2, 62;
	shr.u32 	%r57, %r54, 2;
	add.s32 	%r58, %r57, %r55;
	shl.b32 	%r59, %r58, 2;
	mov.u32 	%r60, global_smem;
	add.s32 	%r47, %r60, %r59;
	mov.b32 	%r48, %f87;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	or.b32  	%r61, %r54, 4;
	shr.u32 	%r62, %r61, 2;
	add.s32 	%r63, %r62, %r55;
	shl.b32 	%r64, %r63, 2;
	add.s32 	%r65, %r60, %r64;
	add.s32 	%r49, %r65, 16;
	mov.b32 	%r50, %f88;
	// begin inline asm
	@%p14 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r66, %r2, 2, 4;
	add.s32 	%r67, %r66, %r56;
	shl.b32 	%r68, %r67, 2;
	add.s32 	%r69, %r60, %r68;
	ld.shared.f32 	%f89, [%r69];
	ld.shared.f32 	%f90, [%r69+4];
	.loc	1 42 19                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:42:19
	mul.f32 	%f91, %f89, %f84;
	mul.f32 	%f92, %f90, %f83;
	.loc	1 43 32                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:43:32
	shl.b32 	%r70, %r3, 2;
	.loc	1 43 30                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:43:30
	add.s32 	%r71, %r5, %r70;
	.loc	1 43 25                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:43:25
	mul.wide.s32 	%rd9, %r71, 4;
	add.s64 	%rd8, %rd1, %rd9;
	.loc	1 43 44                         // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:43:44
	mov.b32 	%r51, %f91;
	mov.b32 	%r52, %f92;
	// begin inline asm
	@%p16 st.global.v2.b32 [ %rd8 + 0 ], { %r51, %r52 };
	// end inline asm
	.loc	1 43 4                          // c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py:43:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3f/c3ftgbwj6f22h46oclsxdqg7x3ts5qmdskcm4kh4t5ehx3q5em5h.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 102
.b8 116
.b8 103
.b8 98
.b8 119
.b8 106
.b8 54
.b8 102
.b8 50
.b8 50
.b8 104
.b8 52
.b8 54
.b8 111
.b8 99
.b8 108
.b8 115
.b8 120
.b8 100
.b8 113
.b8 103
.b8 55
.b8 120
.b8 51
.b8 116
.b8 115
.b8 53
.b8 113
.b8 109
.b8 100
.b8 115
.b8 107
.b8 99
.b8 109
.b8 52
.b8 107
.b8 104
.b8 52
.b8 116
.b8 53
.b8 101
.b8 104
.b8 120
.b8 51
.b8 113
.b8 53
.b8 101
.b8 109
.b8 53
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
