//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_5,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_6,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<87>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd4, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_5];
	ld.param.u64 	%rd3, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_0];
	ld.param.u64 	%rd10, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:22:33
	shl.b32 	%r1, %r8, 6;
	ld.param.u64 	%rd11, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_2];
	.loc	1 23 44                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:23:44
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd12, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_3];
	shl.b32 	%r37, %r2, 2;
	ld.param.u64 	%rd13, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_3_param_4];
	and.b32  	%r3, %r37, 60;
	.loc	1 23 23                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:23:23
	or.b32  	%r4, %r1, %r3;
	.loc	1 24 21                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:24:21
	setp.lt.s32 	%p5, %r4, 6144;
	.loc	1 25 33                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:25:33
	bfe.u32 	%r38, %r2, 4, 3;
	.loc	1 27 19                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:27:19
	mul.hi.s32 	%r40, %r4, 715827883;
	shr.u32 	%r41, %r40, 31;
	shr.s32 	%r42, %r40, 7;
	add.s32 	%r43, %r42, %r41;
	.loc	1 26 19                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:26:19
	mul.lo.s32 	%r44, %r43, 768;
	sub.s32 	%r45, %r4, %r44;
	.loc	1 28 30                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:28:30
	mul.wide.s32 	%rd14, %r45, 4;
	add.s64 	%rd5, %rd10, %rd14;
	.loc	1 28 35                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:28:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r12;
	mov.b32 	%f3, %r11;
	mov.b32 	%f2, %r10;
	mov.b32 	%f1, %r9;
	.loc	1 29 30                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:29:30
	add.s64 	%rd6, %rd11, %rd14;
	.loc	1 29 35                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:29:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r13;
	mov.b32 	%f30, %r14;
	mov.b32 	%f31, %r15;
	mov.b32 	%f32, %r16;
	.loc	1 30 31                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:30:31
	add.s64 	%rd7, %rd12, %rd14;
	.loc	1 30 36                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:30:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r20;
	mov.b32 	%f7, %r19;
	mov.b32 	%f6, %r18;
	mov.b32 	%f5, %r17;
	.loc	1 31 31                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:31:31
	add.s64 	%rd8, %rd13, %rd14;
	.loc	1 31 36                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:31:36
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r24;
	mov.b32 	%f11, %r23;
	mov.b32 	%f10, %r22;
	mov.b32 	%f9, %r21;
	.loc	1 41 22                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:41:22
	add.f32 	%f33, %f29, 0f3A83126F;
	add.f32 	%f34, %f30, 0f3A83126F;
	add.f32 	%f35, %f31, 0f3A83126F;
	add.f32 	%f36, %f32, 0f3A83126F;
	.loc	1 42 30                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:42:30
	sqrt.approx.ftz.f32 	%f37, %f33;
	sqrt.approx.ftz.f32 	%f38, %f34;
	sqrt.approx.ftz.f32 	%f39, %f35;
	sqrt.approx.ftz.f32 	%f40, %f36;
	.loc	1 44 22                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:44:22
	mov.b32 	%r27, %f37;
	mov.b32 	%r26, 1065353216;
	// begin inline asm
	div.full.f32 %r25, %r26, %r27;
	// end inline asm
	mov.b32 	%f13, %r25;
	mov.b32 	%r30, %f38;
	// begin inline asm
	div.full.f32 %r28, %r26, %r30;
	// end inline asm
	mov.b32 	%f14, %r28;
	mov.b32 	%r33, %f39;
	// begin inline asm
	div.full.f32 %r31, %r26, %r33;
	// end inline asm
	mov.b32 	%f15, %r31;
	mov.b32 	%r36, %f40;
	// begin inline asm
	div.full.f32 %r34, %r26, %r36;
	// end inline asm
	mov.b32 	%f16, %r34;
	.loc	1 34 36                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:34:36
	mad.lo.s32 	%r46, %r43, 97536, %r4;
	mad.lo.s32 	%r105, %r38, 768, %r46;
	mov.f32 	%f83, 0f00000000;
	mov.u64 	%rd19, -8;
	mov.f32 	%f84, %f83;
	mov.f32 	%f85, %f83;
	mov.f32 	%f86, %f83;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 38 34                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:38:34
	mul.wide.s32 	%rd16, %r105, 4;
	add.s64 	%rd15, %rd3, %rd16;
	mov.b32 	%r51, 0;
	.loc	1 38 59                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:38:59
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p5 ld.global.L1::evict_first.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd15 + 0 ];
	@!%p5 mov.u32 %r47, %r51;
	@!%p5 mov.u32 %r48, %r51;
	@!%p5 mov.u32 %r49, %r51;
	@!%p5 mov.u32 %r50, %r51;
	// end inline asm
	mov.b32 	%f41, %r47;
	mov.b32 	%f42, %r48;
	mov.b32 	%f43, %r49;
	mov.b32 	%f44, %r50;
	.loc	1 39 22                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:39:22
	sub.f32 	%f45, %f44, %f4;
	sub.f32 	%f46, %f43, %f3;
	sub.f32 	%f47, %f42, %f2;
	sub.f32 	%f48, %f41, %f1;
	.loc	1 47 23                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:47:23
	mul.f32 	%f49, %f13, %f48;
	mul.f32 	%f50, %f14, %f47;
	mul.f32 	%f51, %f15, %f46;
	mul.f32 	%f52, %f16, %f45;
	.loc	1 49 24                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:49:24
	fma.rn.f32 	%f53, %f52, %f8, %f12;
	fma.rn.f32 	%f54, %f51, %f7, %f11;
	fma.rn.f32 	%f55, %f50, %f6, %f10;
	fma.rn.f32 	%f56, %f49, %f5, %f9;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p14, %f56, 0f00000000;
	setp.lt.f32 	%p15, %f55, 0f00000000;
	setp.lt.f32 	%p16, %f54, 0f00000000;
	setp.lt.f32 	%p17, %f53, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f57, 0f00000000, %f53, %p17;
	selp.f32 	%f58, 0f00000000, %f54, %p16;
	selp.f32 	%f59, 0f00000000, %f55, %p15;
	selp.f32 	%f60, 0f00000000, %f56, %p14;
$L__tmp2:
	.loc	1 53 25                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:53:25
	add.f32 	%f61, %f83, %f60;
	add.f32 	%f62, %f84, %f59;
	add.f32 	%f63, %f85, %f58;
	add.f32 	%f64, %f86, %f57;
	.loc	1 54 48                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:54:48
	selp.f32 	%f86, %f64, %f86, %p5;
	selp.f32 	%f85, %f63, %f85, %p5;
	selp.f32 	%f84, %f62, %f84, %p5;
	selp.f32 	%f83, %f61, %f83, %p5;
	.loc	1 34 36                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:34:36
	add.s64 	%rd19, %rd19, 8;
	add.s32 	%r105, %r105, 6144;
	setp.lt.u64 	%p18, %rd19, 120;
	@%p18 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:23:44
	and.b32  	%r77, %r2, 63;
	.loc	1 23 23                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:23:23
	or.b32  	%r78, %r1, %r77;
	.loc	1 24 21                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:24:21
	setp.lt.s32 	%p29, %r78, 6144;
	.loc	1 23 44                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:23:44
	and.b32  	%r79, %r2, 16;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f83;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f65, %r81;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f83, %f65;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f84;
	shfl.sync.bfly.b32	%r83, %r82, 16, 31, -1;
	mov.b32 	%f67, %r83;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f84, %f67;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f85;
	shfl.sync.bfly.b32	%r85, %r84, 16, 31, -1;
	mov.b32 	%f69, %r85;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f70, %f85, %f69;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f86;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f71, %r87;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f72, %f86, %f71;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p19, %r79, 0;
	shr.u32 	%r88, %r2, 3;
	and.b32  	%r89, %r88, 12;
	shl.b32 	%r90, %r3, 4;
	or.b32  	%r91, %r90, %r89;
	mov.u32 	%r92, global_smem;
	add.s32 	%r55, %r92, %r91;
	mov.b32 	%r56, %f66;
	// begin inline asm
	@%p19 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r55, 16;
	mov.b32 	%r58, %f68;
	// begin inline asm
	@%p19 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r55, 32;
	mov.b32 	%r60, %f70;
	// begin inline asm
	@%p19 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r55, 48;
	mov.b32 	%r62, %f72;
	// begin inline asm
	@%p19 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r2, 256;
	add.s32 	%r64, %r92, %r37;
	// begin inline asm
	@%p23 ld.shared.b32 %r63, [ %r64 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r63;
	shfl.sync.bfly.b32	%r94, %r63, 2, 31, -1;
	mov.b32 	%f74, %r94;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f75;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f76, %r96;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r97, %r2, 3;
	setp.eq.s32 	%p30, %r97, 0;
	and.pred  	%p24, %p23, %p30;
	mov.b32 	%r66, %f77;
	// begin inline asm
	@%p24 st.shared.b32 [ %r64 + 0 ], %r66;
	// end inline asm
	add.s32 	%r68, %r64, 512;
	// begin inline asm
	@%p23 ld.shared.b32 %r67, [ %r68 + 0 ];
	// end inline asm
	mov.b32 	%f78, %r67;
	shfl.sync.bfly.b32	%r98, %r67, 2, 31, -1;
	mov.b32 	%f79, %r98;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f80;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f81, %r100;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f82;
	// begin inline asm
	@%p24 st.shared.b32 [ %r68 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r101, %r92, %r90;
	ld.shared.u32 	%r72, [%r101];
	ld.shared.u32 	%r73, [%r101+16];
	ld.shared.u32 	%r74, [%r101+32];
	ld.shared.u32 	%r75, [%r101+48];
$L__tmp4:
	.loc	1 55 30                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:55:30
	bar.sync 	0;
	mad.lo.s32 	%r71, %r3, -12, %r101;
	mov.pred 	%p27, -1;
	// begin inline asm
	@%p27 st.shared.v4.b32 [ %r71 + 0 ], { %r72, %r73, %r74, %r75 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r102, %r77, 2;
	add.s32 	%r103, %r92, %r102;
	ld.shared.u32 	%r76, [%r103];
	.loc	1 56 25                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:56:25
	mul.wide.s32 	%rd18, %r78, 4;
	add.s64 	%rd17, %rd4, %rd18;
	.loc	1 56 37                         // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:56:37
	and.b32  	%r104, %r2, 64;
	setp.eq.s32 	%p31, %r104, 0;
	and.pred  	%p28, %p31, %p29;
	// begin inline asm
	@%p28 st.global.b32 [ %rd17 + 0 ], { %r76 };
	// end inline asm
	.loc	1 56 4                          // ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py:56:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tb/ctbaelwvxqpno3q2yrbcogdunyghdz5eyslona5ldnpox2k3qxc2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 98
.b8 97
.b8 101
.b8 108
.b8 119
.b8 118
.b8 120
.b8 113
.b8 112
.b8 110
.b8 111
.b8 51
.b8 113
.b8 50
.b8 121
.b8 114
.b8 98
.b8 99
.b8 111
.b8 103
.b8 100
.b8 117
.b8 110
.b8 121
.b8 103
.b8 104
.b8 100
.b8 122
.b8 53
.b8 101
.b8 121
.b8 115
.b8 108
.b8 111
.b8 110
.b8 97
.b8 53
.b8 108
.b8 100
.b8 110
.b8 112
.b8 111
.b8 120
.b8 50
.b8 107
.b8 51
.b8 113
.b8 120
.b8 99
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 46                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
