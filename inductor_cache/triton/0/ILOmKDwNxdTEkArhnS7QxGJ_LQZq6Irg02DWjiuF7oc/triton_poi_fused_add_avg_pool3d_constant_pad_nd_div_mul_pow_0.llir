; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sdiv i32 %9, 16, !dbg !15
  %12 = srem i32 %11, 4, !dbg !16
  %13 = sext i32 %9 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !17
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %10) #4, !dbg !18
  %16 = icmp sgt i32 %12, 1, !dbg !19
  %17 = add i32 %9, -32, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !21
  %20 = and i1 %10, %16, !dbg !22
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %19, i1 %20, i32 0, i1 %20, i32 0, i1 %20) #4, !dbg !23
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !23
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !23
  %24 = bitcast i32 %22 to float, !dbg !23
  %25 = bitcast i32 %23 to float, !dbg !23
  %26 = fmul float %24, %24, !dbg !24
  %27 = fmul float %25, %25, !dbg !24
  %28 = select i1 %16, float %26, float 0.000000e+00, !dbg !25
  %29 = select i1 %16, float %27, float 0.000000e+00, !dbg !25
  %30 = icmp sgt i32 %12, 0, !dbg !26
  %31 = add i32 %9, -16, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !28
  %34 = and i1 %10, %30, !dbg !29
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #4, !dbg !30
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !30
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !30
  %38 = bitcast i32 %36 to float, !dbg !30
  %39 = bitcast i32 %37 to float, !dbg !30
  %40 = fmul float %38, %38, !dbg !31
  %41 = fmul float %39, %39, !dbg !31
  %42 = select i1 %30, float %40, float 0.000000e+00, !dbg !32
  %43 = select i1 %30, float %41, float 0.000000e+00, !dbg !32
  %44 = fadd float %28, %42, !dbg !33
  %45 = fadd float %29, %43, !dbg !33
  %46 = icmp sgt i32 %12, -1, !dbg !34
  %47 = and i1 %10, %46, !dbg !35
  %48 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %14, i1 %47, i32 0, i1 %47, i32 0, i1 %47) #4, !dbg !36
  %49 = extractvalue { i32, i32 } %48, 0, !dbg !36
  %50 = extractvalue { i32, i32 } %48, 1, !dbg !36
  %51 = bitcast i32 %49 to float, !dbg !36
  %52 = bitcast i32 %50 to float, !dbg !36
  %53 = fmul float %51, %51, !dbg !37
  %54 = fmul float %52, %52, !dbg !37
  %55 = select i1 %46, float %53, float 0.000000e+00, !dbg !38
  %56 = select i1 %46, float %54, float 0.000000e+00, !dbg !38
  %57 = fadd float %55, %44, !dbg !39
  %58 = fadd float %56, %45, !dbg !39
  %59 = add nsw i32 %12, 1, !dbg !40
  %60 = icmp ult i32 %59, 4, !dbg !40
  %61 = add i32 %9, 16, !dbg !41
  %62 = sext i32 %61 to i64, !dbg !42
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %62, !dbg !42
  %64 = and i1 %10, %60, !dbg !43
  %65 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %63, i1 %64, i32 0, i1 %64, i32 0, i1 %64) #4, !dbg !44
  %66 = extractvalue { i32, i32 } %65, 0, !dbg !44
  %67 = extractvalue { i32, i32 } %65, 1, !dbg !44
  %68 = bitcast i32 %66 to float, !dbg !44
  %69 = bitcast i32 %67 to float, !dbg !44
  %70 = fmul float %68, %68, !dbg !45
  %71 = fmul float %69, %69, !dbg !45
  %72 = select i1 %60, float %70, float 0.000000e+00, !dbg !46
  %73 = select i1 %60, float %71, float 0.000000e+00, !dbg !46
  %74 = fadd float %72, %57, !dbg !47
  %75 = fadd float %73, %58, !dbg !47
  %76 = add nsw i32 %12, 2, !dbg !48
  %77 = icmp ult i32 %76, 4, !dbg !48
  %78 = add i32 %9, 32, !dbg !49
  %79 = sext i32 %78 to i64, !dbg !50
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !50
  %81 = and i1 %10, %77, !dbg !51
  %82 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %80, i1 %81, i32 0, i1 %81, i32 0, i1 %81) #4, !dbg !52
  %83 = extractvalue { i32, i32 } %82, 0, !dbg !52
  %84 = extractvalue { i32, i32 } %82, 1, !dbg !52
  %85 = bitcast i32 %83 to float, !dbg !52
  %86 = bitcast i32 %84 to float, !dbg !52
  %87 = fmul float %85, %85, !dbg !53
  %88 = fmul float %86, %86, !dbg !53
  %89 = select i1 %77, float %87, float 0.000000e+00, !dbg !54
  %90 = select i1 %77, float %88, float 0.000000e+00, !dbg !54
  %91 = fadd float %89, %74, !dbg !55
  %92 = fadd float %90, %75, !dbg !55
  %93 = fmul float %91, 0x3FC99999A0000000, !dbg !56
  %94 = fmul float %92, 0x3FC99999A0000000, !dbg !56
  %95 = fmul float %93, 0x3F1A36E2E0000000, !dbg !57
  %96 = fmul float %94, 0x3F1A36E2E0000000, !dbg !57
  %97 = fadd float %95, 1.000000e+00, !dbg !58
  %98 = fadd float %96, 1.000000e+00, !dbg !58
  %99 = tail call float @llvm.nvvm.trunc.f(float 3.750000e-01) #4, !dbg !59
  %100 = fmul float %99, 2.000000e+00, !dbg !59
  %101 = fsub float 7.500000e-01, %100, !dbg !59
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not.i = icmp eq i32 %102, 0, !dbg !59
  %103 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #4, !dbg !59
  %104 = tail call float @llvm.nvvm.fabs.f(float %101) #4, !dbg !59
  %.08.i = select i1 %.not.i, float %104, float %103, !dbg !59
  %105 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !59
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not12.i = icmp eq i32 %106, 0, !dbg !59
  %107 = tail call float @llvm.nvvm.fabs.ftz.f(float %97) #4, !dbg !59
  %108 = tail call float @llvm.nvvm.fabs.f(float %97) #4, !dbg !59
  %.09.i = select i1 %.not12.i, float %108, float %107, !dbg !59
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not13.i = icmp eq i32 %109, 0, !dbg !59
  %110 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !59
  %111 = fmul float %.09.i, 0x4170000000000000, !dbg !59
  %112 = select i1 %.not13.i, i1 %110, i1 false, !dbg !59
  %.116.i = select i1 %112, float %111, float %.09.i, !dbg !59
  %expo.i.i.1.i = select i1 %112, float -1.510000e+02, float -1.270000e+02, !dbg !59
  %113 = bitcast float %.116.i to i32, !dbg !59
  %114 = and i32 %113, 8388607, !dbg !59
  %115 = or disjoint i32 %114, 1065353216, !dbg !59
  %116 = bitcast i32 %115 to float, !dbg !59
  %117 = lshr i32 %113, 23, !dbg !59
  %118 = uitofp nneg i32 %117 to float, !dbg !59
  %119 = fadd float %expo.i.i.1.i, %118, !dbg !59
  %120 = fcmp ogt float %116, 0x3FF6A09E60000000, !dbg !59
  %121 = fmul float %116, 5.000000e-01, !dbg !59
  %122 = fadd float %119, 1.000000e+00, !dbg !59
  %expo.i.i.2.i = select i1 %120, float %122, float %119, !dbg !59
  %m.i.i.0.i = select i1 %120, float %121, float %116, !dbg !59
  %123 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !59
  %124 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !59
  %125 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %124) #5, !dbg !59, !srcloc !60
  %126 = fmul float %123, 2.000000e+00, !dbg !59
  %127 = fmul float %125, %126, !dbg !59
  %128 = fmul float %127, %127, !dbg !59
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not14.i = icmp eq i32 %129, 0, !dbg !59
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %128, float 0x3F8995EC60000000) #4, !dbg !59
  %131 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %128, float 0x3F8995EC60000000) #4, !dbg !59
  %.020.i = select i1 %.not14.i, float %131, float %130, !dbg !59
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not15.i = icmp eq i32 %132, 0, !dbg !59
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %128, float 0x3FB55557A0000000) #4, !dbg !59
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %128, float 0x3FB55557A0000000) #4, !dbg !59
  %.021.i = select i1 %.not15.i, float %134, float %133, !dbg !59
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not16.i = icmp eq i32 %135, 0, !dbg !59
  %136 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %128) #4, !dbg !59
  %137 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %128) #4, !dbg !59
  %.022.i = select i1 %.not16.i, float %137, float %136, !dbg !59
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not17.i = icmp eq i32 %138, 0, !dbg !59
  %139 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %127) #4, !dbg !59
  %140 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %127) #4, !dbg !59
  %.024.i = select i1 %.not17.i, float %140, float %139, !dbg !59
  %141 = fsub float %123, %127, !dbg !59
  %142 = fmul float %141, 2.000000e+00, !dbg !59
  %143 = fneg float %127, !dbg !59
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not18.i = icmp eq i32 %144, 0, !dbg !59
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %143, float %123, float %142) #4, !dbg !59
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %143, float %123, float %142) #4, !dbg !59
  %.025.i = select i1 %.not18.i, float %146, float %145, !dbg !59
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not19.i = icmp eq i32 %147, 0, !dbg !59
  %148 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %125, float %.025.i) #4, !dbg !59
  %149 = tail call float @llvm.nvvm.mul.rn.f(float %125, float %.025.i) #4, !dbg !59
  %.026.i = select i1 %.not19.i, float %149, float %148, !dbg !59
  %150 = fadd float %127, %.024.i, !dbg !59
  %151 = fsub float %127, %150, !dbg !59
  %152 = fadd float %.024.i, %151, !dbg !59
  %153 = fadd float %.026.i, %152, !dbg !59
  %154 = fadd float %150, %153, !dbg !59
  %155 = fsub float %150, %154, !dbg !59
  %156 = fadd float %153, %155, !dbg !59
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not20.i = icmp eq i32 %157, 0, !dbg !59
  %158 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !59
  %159 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !59
  %.019.i = select i1 %.not20.i, float %159, float %158, !dbg !59
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not21.i = icmp eq i32 %160, 0, !dbg !59
  %161 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !59
  %162 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !59
  %.018.i = select i1 %.not21.i, float %162, float %161, !dbg !59
  %163 = fadd float %.019.i, %154, !dbg !59
  %164 = fsub float %.019.i, %163, !dbg !59
  %165 = fadd float %154, %164, !dbg !59
  %166 = fadd float %156, %165, !dbg !59
  %167 = fadd float %.018.i, %166, !dbg !59
  %168 = fadd float %163, %167, !dbg !59
  %169 = fsub float %163, %168, !dbg !59
  %170 = fadd float %167, %169, !dbg !59
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not22.i = icmp eq i32 %171, 0, !dbg !59
  %172 = tail call float @llvm.nvvm.fabs.ftz.f(float 7.500000e-01) #4, !dbg !59
  %173 = tail call float @llvm.nvvm.fabs.f(float 7.500000e-01) #4, !dbg !59
  %.027.i = select i1 %.not22.i, float %173, float %172, !dbg !59
  %174 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !59
  %.013.i = select i1 %174, float 0x3F18000000000000, float 7.500000e-01, !dbg !59
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not23.i = icmp eq i32 %175, 0, !dbg !59
  %176 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %168) #4, !dbg !59
  %177 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %168) #4, !dbg !59
  %.028.i = select i1 %.not23.i, float %177, float %176, !dbg !59
  %178 = fneg float %.028.i, !dbg !59
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not24.i = icmp eq i32 %179, 0, !dbg !59
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %168, float %178) #4, !dbg !59
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %168, float %178) #4, !dbg !59
  %.029.i = select i1 %.not24.i, float %181, float %180, !dbg !59
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not25.i = icmp eq i32 %182, 0, !dbg !59
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %170, float %.029.i) #4, !dbg !59
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %170, float %.029.i) #4, !dbg !59
  %.030.i = select i1 %.not25.i, float %184, float %183, !dbg !59
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not26.i = icmp eq i32 %185, 0, !dbg !59
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %168, float %.030.i) #4, !dbg !59
  %187 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %168, float %.030.i) #4, !dbg !59
  %.031.i = select i1 %.not26.i, float %187, float %186, !dbg !59
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not27.i = icmp eq i32 %188, 0, !dbg !59
  %189 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !59
  %190 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !59
  %.032.i = select i1 %.not27.i, float %190, float %189, !dbg !59
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %193 = bitcast float %.032.i to i32, !dbg !59
  %194 = icmp eq i32 %193, 1118925336, !dbg !59
  %prod.i.145.0.i = select i1 %194, float 0x40562E42E0000000, float %.032.i, !dbg !59
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not30.i = icmp eq i32 %195, 0, !dbg !59
  %196 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !59
  %197 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !59
  %.017.i = select i1 %.not30.i, float %197, float %196, !dbg !59
  %198 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !59
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not31.i = icmp eq i32 %199, 0, !dbg !59
  %200 = tail call float @llvm.nvvm.fabs.ftz.f(float %198) #4, !dbg !59
  %201 = tail call float @llvm.nvvm.fabs.f(float %198) #4, !dbg !59
  %.023.i = select i1 %.not31.i, float %201, float %200, !dbg !59
  %202 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !59
  %203 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %198), !dbg !59
  %j.i.i.0.i = select i1 %202, float %203, float %198, !dbg !59
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not32.i = icmp eq i32 %204, 0, !dbg !59
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !59
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !59
  %.035.i = select i1 %.not32.i, float %206, float %205, !dbg !59
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not33.i = icmp eq i32 %207, 0, !dbg !59
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !59
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !59
  %.036.i = select i1 %.not33.i, float %209, float %208, !dbg !59
  %210 = fmul float %.036.i, 0x3FF7154760000000, !dbg !59
  %211 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !59
  %212 = bitcast float %211 to i32, !dbg !59
  %213 = shl i32 %212, 23, !dbg !59
  %214 = bitcast i32 %213 to float, !dbg !59
  %215 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %210) #4, !dbg !59
  %216 = fmul float %215, %214, !dbg !59
  %217 = fcmp une float %216, 0x7FF0000000000000, !dbg !59
  br i1 %217, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !59

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not29.i = icmp eq i32 %192, 0, !dbg !59
  %.not28.i = icmp eq i32 %191, 0, !dbg !59
  %218 = fneg float %.032.i, !dbg !59
  %219 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %218) #4, !dbg !59
  %220 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %218) #4, !dbg !59
  %.033.i = select i1 %.not28.i, float %219, float %220, !dbg !59
  %221 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !59
  %222 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !59
  %.034.i = select i1 %.not29.i, float %221, float %222, !dbg !59
  %223 = fadd float %.034.i, 0x3EE0000000000000, !dbg !59
  %prod.i.044.0.i = select i1 %194, float %223, float %.034.i, !dbg !59
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not34.i = icmp eq i32 %224, 0, !dbg !59
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %prod.i.044.0.i, float %216) #4, !dbg !59
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %prod.i.044.0.i, float %216) #4, !dbg !59
  %.014.i = select i1 %.not34.i, float %226, float %225, !dbg !59
  br label %__internal_accurate_powf.exit.i, !dbg !59

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !59
  %227 = fcmp olt float %97, 0.000000e+00, !dbg !59
  %or.cond.i = select i1 %227, i1 %105, i1 false, !dbg !59
  %228 = fcmp oeq float %97, 0.000000e+00, !dbg !59
  br i1 %228, label %229, label %232, !dbg !59

229:                                              ; preds = %__internal_accurate_powf.exit.i
  %230 = fadd float %97, %97, !dbg !59
  %231 = select i1 %105, float %230, float 0.000000e+00, !dbg !59
  br label %__internal_powf_corner_cases.exit.i, !dbg !59

232:                                              ; preds = %__internal_accurate_powf.exit.i
  %233 = fneg float %t.i.0.i, !dbg !59
  %.010.i = select i1 %or.cond.i, float %233, float %t.i.0.i, !dbg !59
  %234 = tail call float @llvm.nvvm.trunc.f(float 7.500000e-01) #4, !dbg !59
  %235 = fcmp une float %234, 7.500000e-01, !dbg !59
  %or.cond2.i = select i1 %227, i1 %235, i1 false, !dbg !59
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i, !dbg !59
  br label %__internal_powf_corner_cases.exit.i, !dbg !59

__internal_powf_corner_cases.exit.i:              ; preds = %232, %229
  %.212.i = phi float [ %231, %229 ], [ %.111.i, %232 ], !dbg !59
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not35.i = icmp eq i32 %236, 0, !dbg !59
  %.01.i = select i1 %.not35.i, float %108, float %107, !dbg !59
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not36.i = icmp eq i32 %237, 0, !dbg !59
  %.02.i = select i1 %.not36.i, float %173, float %172, !dbg !59
  %238 = fadd float %.01.i, %.02.i, !dbg !59
  %239 = bitcast float %238 to i32, !dbg !59
  %240 = icmp sgt i32 %239, 2139095039, !dbg !59
  br i1 %240, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !59

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not37.i = icmp eq i32 %241, 0, !dbg !59
  %.06.i = select i1 %.not37.i, float %108, float %107, !dbg !59
  %242 = fcmp uno float %.06.i, 0.000000e+00, !dbg !59
  br i1 %242, label %245, label %__nv_isnanf.exit11.i.i, !dbg !59

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not38.i = icmp eq i32 %243, 0, !dbg !59
  %.07.i = select i1 %.not38.i, float %173, float %172, !dbg !59
  %244 = fcmp uno float %.07.i, 0.000000e+00, !dbg !59
  br i1 %244, label %245, label %__nv_isinff.exit8.i.i, !dbg !59

245:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %246 = fadd float %97, 7.500000e-01, !dbg !59
  br label %__nv_powf.exit, !dbg !59

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not39.i = icmp eq i32 %247, 0, !dbg !59
  %.05.i = select i1 %.not39.i, float %173, float %172, !dbg !59
  %248 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !59
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not41.i = icmp eq i32 %249, 0, !dbg !59
  %.04.i = select i1 %.not41.i, float %108, float %107, !dbg !59
  br i1 %248, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !59

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %250 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !59
  %251 = fcmp oeq float %97, -1.000000e+00, !dbg !59
  %252 = select i1 %250, float 0x7FF0000000000000, float 0.000000e+00, !dbg !59
  %253 = select i1 %251, float 1.000000e+00, float %252, !dbg !59
  br label %__nv_powf.exit, !dbg !59

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %254 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !59
  br i1 %254, label %255, label %__nv_powf.exit, !dbg !59

255:                                              ; preds = %__nv_isinff.exit.i.i
  %256 = select i1 %or.cond.i, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !59
  br label %__nv_powf.exit, !dbg !59

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %245, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %255
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %246, %245 ], [ %253, %__nv_fabsf.exit5.i.i ], [ %256, %255 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !59
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not.i1 = icmp eq i32 %257, 0, !dbg !59
  %.08.i2 = select i1 %.not.i1, float %104, float %103, !dbg !59
  %258 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !59
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not12.i3 = icmp eq i32 %259, 0, !dbg !59
  %260 = tail call float @llvm.nvvm.fabs.ftz.f(float %98) #4, !dbg !59
  %261 = tail call float @llvm.nvvm.fabs.f(float %98) #4, !dbg !59
  %.09.i4 = select i1 %.not12.i3, float %261, float %260, !dbg !59
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not13.i5 = icmp eq i32 %262, 0, !dbg !59
  %263 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !59
  %264 = fmul float %.09.i4, 0x4170000000000000, !dbg !59
  %265 = select i1 %.not13.i5, i1 %263, i1 false, !dbg !59
  %.116.i8 = select i1 %265, float %264, float %.09.i4, !dbg !59
  %expo.i.i.1.i9 = select i1 %265, float -1.510000e+02, float -1.270000e+02, !dbg !59
  %266 = bitcast float %.116.i8 to i32, !dbg !59
  %267 = and i32 %266, 8388607, !dbg !59
  %268 = or disjoint i32 %267, 1065353216, !dbg !59
  %269 = bitcast i32 %268 to float, !dbg !59
  %270 = lshr i32 %266, 23, !dbg !59
  %271 = uitofp nneg i32 %270 to float, !dbg !59
  %272 = fadd float %expo.i.i.1.i9, %271, !dbg !59
  %273 = fcmp ogt float %269, 0x3FF6A09E60000000, !dbg !59
  %274 = fmul float %269, 5.000000e-01, !dbg !59
  %275 = fadd float %272, 1.000000e+00, !dbg !59
  %expo.i.i.2.i10 = select i1 %273, float %275, float %272, !dbg !59
  %m.i.i.0.i11 = select i1 %273, float %274, float %269, !dbg !59
  %276 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !59
  %277 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !59
  %278 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %277) #5, !dbg !59, !srcloc !60
  %279 = fmul float %276, 2.000000e+00, !dbg !59
  %280 = fmul float %278, %279, !dbg !59
  %281 = fmul float %280, %280, !dbg !59
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not14.i12 = icmp eq i32 %282, 0, !dbg !59
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %281, float 0x3F8995EC60000000) #4, !dbg !59
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %281, float 0x3F8995EC60000000) #4, !dbg !59
  %.020.i13 = select i1 %.not14.i12, float %284, float %283, !dbg !59
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not15.i14 = icmp eq i32 %285, 0, !dbg !59
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %281, float 0x3FB55557A0000000) #4, !dbg !59
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %281, float 0x3FB55557A0000000) #4, !dbg !59
  %.021.i15 = select i1 %.not15.i14, float %287, float %286, !dbg !59
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not16.i16 = icmp eq i32 %288, 0, !dbg !59
  %289 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %281) #4, !dbg !59
  %290 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %281) #4, !dbg !59
  %.022.i17 = select i1 %.not16.i16, float %290, float %289, !dbg !59
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not17.i18 = icmp eq i32 %291, 0, !dbg !59
  %292 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %280) #4, !dbg !59
  %293 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %280) #4, !dbg !59
  %.024.i19 = select i1 %.not17.i18, float %293, float %292, !dbg !59
  %294 = fsub float %276, %280, !dbg !59
  %295 = fmul float %294, 2.000000e+00, !dbg !59
  %296 = fneg float %280, !dbg !59
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not18.i20 = icmp eq i32 %297, 0, !dbg !59
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %296, float %276, float %295) #4, !dbg !59
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %296, float %276, float %295) #4, !dbg !59
  %.025.i21 = select i1 %.not18.i20, float %299, float %298, !dbg !59
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not19.i22 = icmp eq i32 %300, 0, !dbg !59
  %301 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %278, float %.025.i21) #4, !dbg !59
  %302 = tail call float @llvm.nvvm.mul.rn.f(float %278, float %.025.i21) #4, !dbg !59
  %.026.i23 = select i1 %.not19.i22, float %302, float %301, !dbg !59
  %303 = fadd float %280, %.024.i19, !dbg !59
  %304 = fsub float %280, %303, !dbg !59
  %305 = fadd float %.024.i19, %304, !dbg !59
  %306 = fadd float %.026.i23, %305, !dbg !59
  %307 = fadd float %303, %306, !dbg !59
  %308 = fsub float %303, %307, !dbg !59
  %309 = fadd float %306, %308, !dbg !59
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not20.i24 = icmp eq i32 %310, 0, !dbg !59
  %311 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !59
  %312 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !59
  %.019.i25 = select i1 %.not20.i24, float %312, float %311, !dbg !59
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not21.i26 = icmp eq i32 %313, 0, !dbg !59
  %314 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !59
  %315 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !59
  %.018.i27 = select i1 %.not21.i26, float %315, float %314, !dbg !59
  %316 = fadd float %.019.i25, %307, !dbg !59
  %317 = fsub float %.019.i25, %316, !dbg !59
  %318 = fadd float %307, %317, !dbg !59
  %319 = fadd float %309, %318, !dbg !59
  %320 = fadd float %.018.i27, %319, !dbg !59
  %321 = fadd float %316, %320, !dbg !59
  %322 = fsub float %316, %321, !dbg !59
  %323 = fadd float %320, %322, !dbg !59
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not22.i28 = icmp eq i32 %324, 0, !dbg !59
  %.027.i29 = select i1 %.not22.i28, float %173, float %172, !dbg !59
  %325 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !59
  %.013.i30 = select i1 %325, float 0x3F18000000000000, float 7.500000e-01, !dbg !59
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not23.i31 = icmp eq i32 %326, 0, !dbg !59
  %327 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %321) #4, !dbg !59
  %328 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %321) #4, !dbg !59
  %.028.i32 = select i1 %.not23.i31, float %328, float %327, !dbg !59
  %329 = fneg float %.028.i32, !dbg !59
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not24.i33 = icmp eq i32 %330, 0, !dbg !59
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %321, float %329) #4, !dbg !59
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %321, float %329) #4, !dbg !59
  %.029.i34 = select i1 %.not24.i33, float %332, float %331, !dbg !59
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not25.i35 = icmp eq i32 %333, 0, !dbg !59
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %323, float %.029.i34) #4, !dbg !59
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %323, float %.029.i34) #4, !dbg !59
  %.030.i36 = select i1 %.not25.i35, float %335, float %334, !dbg !59
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not26.i37 = icmp eq i32 %336, 0, !dbg !59
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %321, float %.030.i36) #4, !dbg !59
  %338 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %321, float %.030.i36) #4, !dbg !59
  %.031.i38 = select i1 %.not26.i37, float %338, float %337, !dbg !59
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not27.i39 = icmp eq i32 %339, 0, !dbg !59
  %340 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #4, !dbg !59
  %341 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #4, !dbg !59
  %.032.i40 = select i1 %.not27.i39, float %341, float %340, !dbg !59
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %344 = bitcast float %.032.i40 to i32, !dbg !59
  %345 = icmp eq i32 %344, 1118925336, !dbg !59
  %prod.i.145.0.i46 = select i1 %345, float 0x40562E42E0000000, float %.032.i40, !dbg !59
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not30.i47 = icmp eq i32 %346, 0, !dbg !59
  %347 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !59
  %348 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !59
  %.017.i48 = select i1 %.not30.i47, float %348, float %347, !dbg !59
  %349 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #4, !dbg !59
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not31.i49 = icmp eq i32 %350, 0, !dbg !59
  %351 = tail call float @llvm.nvvm.fabs.ftz.f(float %349) #4, !dbg !59
  %352 = tail call float @llvm.nvvm.fabs.f(float %349) #4, !dbg !59
  %.023.i50 = select i1 %.not31.i49, float %352, float %351, !dbg !59
  %353 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !59
  %354 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %349), !dbg !59
  %j.i.i.0.i51 = select i1 %353, float %354, float %349, !dbg !59
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not32.i52 = icmp eq i32 %355, 0, !dbg !59
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !59
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !59
  %.035.i53 = select i1 %.not32.i52, float %357, float %356, !dbg !59
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not33.i54 = icmp eq i32 %358, 0, !dbg !59
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !59
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !59
  %.036.i55 = select i1 %.not33.i54, float %360, float %359, !dbg !59
  %361 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !59
  %362 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !59
  %363 = bitcast float %362 to i32, !dbg !59
  %364 = shl i32 %363, 23, !dbg !59
  %365 = bitcast i32 %364 to float, !dbg !59
  %366 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %361) #4, !dbg !59
  %367 = fmul float %366, %365, !dbg !59
  %368 = fcmp une float %367, 0x7FF0000000000000, !dbg !59
  br i1 %368, label %__internal_fmad.exit.i.i85, label %__internal_accurate_powf.exit.i56, !dbg !59

__internal_fmad.exit.i.i85:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %343, 0, !dbg !59
  %.not28.i41 = icmp eq i32 %342, 0, !dbg !59
  %369 = fneg float %.032.i40, !dbg !59
  %370 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %369) #4, !dbg !59
  %371 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %369) #4, !dbg !59
  %.033.i42 = select i1 %.not28.i41, float %370, float %371, !dbg !59
  %372 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #4, !dbg !59
  %373 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #4, !dbg !59
  %.034.i44 = select i1 %.not29.i43, float %372, float %373, !dbg !59
  %374 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !59
  %prod.i.044.0.i45 = select i1 %345, float %374, float %.034.i44, !dbg !59
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not34.i86 = icmp eq i32 %375, 0, !dbg !59
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %367, float %prod.i.044.0.i45, float %367) #4, !dbg !59
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %367, float %prod.i.044.0.i45, float %367) #4, !dbg !59
  %.014.i87 = select i1 %.not34.i86, float %377, float %376, !dbg !59
  br label %__internal_accurate_powf.exit.i56, !dbg !59

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i85, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i87, %__internal_fmad.exit.i.i85 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !59
  %378 = fcmp olt float %98, 0.000000e+00, !dbg !59
  %or.cond.i58 = select i1 %378, i1 %258, i1 false, !dbg !59
  %379 = fcmp oeq float %98, 0.000000e+00, !dbg !59
  br i1 %379, label %380, label %383, !dbg !59

380:                                              ; preds = %__internal_accurate_powf.exit.i56
  %381 = fadd float %98, %98, !dbg !59
  %382 = select i1 %258, float %381, float 0.000000e+00, !dbg !59
  br label %__internal_powf_corner_cases.exit.i62, !dbg !59

383:                                              ; preds = %__internal_accurate_powf.exit.i56
  %384 = fneg float %t.i.0.i57, !dbg !59
  %.010.i59 = select i1 %or.cond.i58, float %384, float %t.i.0.i57, !dbg !59
  %385 = tail call float @llvm.nvvm.trunc.f(float 7.500000e-01) #4, !dbg !59
  %386 = fcmp une float %385, 7.500000e-01, !dbg !59
  %or.cond2.i60 = select i1 %378, i1 %386, i1 false, !dbg !59
  %.111.i61 = select i1 %or.cond2.i60, float 0x7FFFFFFFE0000000, float %.010.i59, !dbg !59
  br label %__internal_powf_corner_cases.exit.i62, !dbg !59

__internal_powf_corner_cases.exit.i62:            ; preds = %383, %380
  %.212.i63 = phi float [ %382, %380 ], [ %.111.i61, %383 ], !dbg !59
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not35.i64 = icmp eq i32 %387, 0, !dbg !59
  %.01.i65 = select i1 %.not35.i64, float %261, float %260, !dbg !59
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not36.i66 = icmp eq i32 %388, 0, !dbg !59
  %.02.i67 = select i1 %.not36.i66, float %173, float %172, !dbg !59
  %389 = fadd float %.01.i65, %.02.i67, !dbg !59
  %390 = bitcast float %389 to i32, !dbg !59
  %391 = icmp sgt i32 %390, 2139095039, !dbg !59
  br i1 %391, label %__nv_isnanf.exit.i.i70, label %__nv_powf.exit88, !dbg !59

__nv_isnanf.exit.i.i70:                           ; preds = %__internal_powf_corner_cases.exit.i62
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not37.i71 = icmp eq i32 %392, 0, !dbg !59
  %.06.i72 = select i1 %.not37.i71, float %261, float %260, !dbg !59
  %393 = fcmp uno float %.06.i72, 0.000000e+00, !dbg !59
  br i1 %393, label %396, label %__nv_isnanf.exit11.i.i73, !dbg !59

__nv_isnanf.exit11.i.i73:                         ; preds = %__nv_isnanf.exit.i.i70
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not38.i74 = icmp eq i32 %394, 0, !dbg !59
  %.07.i75 = select i1 %.not38.i74, float %173, float %172, !dbg !59
  %395 = fcmp uno float %.07.i75, 0.000000e+00, !dbg !59
  br i1 %395, label %396, label %__nv_isinff.exit8.i.i76, !dbg !59

396:                                              ; preds = %__nv_isnanf.exit11.i.i73, %__nv_isnanf.exit.i.i70
  %397 = fadd float %98, 7.500000e-01, !dbg !59
  br label %__nv_powf.exit88, !dbg !59

__nv_isinff.exit8.i.i76:                          ; preds = %__nv_isnanf.exit11.i.i73
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not39.i77 = icmp eq i32 %398, 0, !dbg !59
  %.05.i78 = select i1 %.not39.i77, float %173, float %172, !dbg !59
  %399 = fcmp oeq float %.05.i78, 0x7FF0000000000000, !dbg !59
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !59
  %.not41.i83 = icmp eq i32 %400, 0, !dbg !59
  %.04.i84 = select i1 %.not41.i83, float %261, float %260, !dbg !59
  br i1 %399, label %__nv_fabsf.exit5.i.i82, label %__nv_isinff.exit.i.i79, !dbg !59

__nv_fabsf.exit5.i.i82:                           ; preds = %__nv_isinff.exit8.i.i76
  %401 = fcmp ogt float %.04.i84, 1.000000e+00, !dbg !59
  %402 = fcmp oeq float %98, -1.000000e+00, !dbg !59
  %403 = select i1 %401, float 0x7FF0000000000000, float 0.000000e+00, !dbg !59
  %404 = select i1 %402, float 1.000000e+00, float %403, !dbg !59
  br label %__nv_powf.exit88, !dbg !59

__nv_isinff.exit.i.i79:                           ; preds = %__nv_isinff.exit8.i.i76
  %405 = fcmp oeq float %.04.i84, 0x7FF0000000000000, !dbg !59
  br i1 %405, label %406, label %__nv_powf.exit88, !dbg !59

406:                                              ; preds = %__nv_isinff.exit.i.i79
  %407 = select i1 %or.cond.i58, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !59
  br label %__nv_powf.exit88, !dbg !59

__nv_powf.exit88:                                 ; preds = %__internal_powf_corner_cases.exit.i62, %396, %__nv_fabsf.exit5.i.i82, %__nv_isinff.exit.i.i79, %406
  %.3.i68 = phi float [ %.212.i63, %__internal_powf_corner_cases.exit.i62 ], [ %397, %396 ], [ %404, %__nv_fabsf.exit5.i.i82 ], [ %407, %406 ], [ %.212.i63, %__nv_isinff.exit.i.i79 ], !dbg !59
  %408 = fcmp oeq float %97, 1.000000e+00, !dbg !59
  %t.0.i = select i1 %408, float 1.000000e+00, float %.3.i, !dbg !59
  %409 = extractvalue { i32, i32 } %15, 1, !dbg !18
  %410 = bitcast i32 %409 to float, !dbg !18
  %411 = extractvalue { i32, i32 } %15, 0, !dbg !18
  %412 = bitcast i32 %411 to float, !dbg !18
  %413 = fcmp oeq float %98, 1.000000e+00, !dbg !59
  %t.0.i69 = select i1 %413, float 1.000000e+00, float %.3.i68, !dbg !59
  %414 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %412, float %t.0.i) #4, !dbg !61
  %415 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %410, float %t.0.i69) #4, !dbg !61
  %416 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !62
  %417 = bitcast float %414 to i32, !dbg !63
  %418 = bitcast float %415 to i32, !dbg !63
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %417, i32 %418, ptr addrspace(1) %416, i1 %10) #4, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py", directory: "inductor_cache/pr")
!4 = !{ptr @triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0", linkageName: "triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 31, scope: !7)
!18 = !DILocation(line: 26, column: 36, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 33, column: 38, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 50, scope: !7)
!23 = !DILocation(line: 33, column: 43, scope: !7)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 36, column: 32, scope: !7)
!26 = !DILocation(line: 38, column: 21, scope: !7)
!27 = !DILocation(line: 41, column: 39, scope: !7)
!28 = !DILocation(line: 41, column: 31, scope: !7)
!29 = !DILocation(line: 41, column: 52, scope: !7)
!30 = !DILocation(line: 41, column: 44, scope: !7)
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 44, column: 35, scope: !7)
!33 = !DILocation(line: 45, column: 20, scope: !7)
!34 = !DILocation(line: 47, column: 21, scope: !7)
!35 = !DILocation(line: 50, column: 44, scope: !7)
!36 = !DILocation(line: 50, column: 36, scope: !7)
!37 = !DILocation(line: 51, column: 20, scope: !7)
!38 = !DILocation(line: 53, column: 35, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 58, column: 20, scope: !7)
!41 = !DILocation(line: 59, column: 36, scope: !7)
!42 = !DILocation(line: 59, column: 31, scope: !7)
!43 = !DILocation(line: 59, column: 49, scope: !7)
!44 = !DILocation(line: 59, column: 41, scope: !7)
!45 = !DILocation(line: 60, column: 20, scope: !7)
!46 = !DILocation(line: 62, column: 35, scope: !7)
!47 = !DILocation(line: 63, column: 20, scope: !7)
!48 = !DILocation(line: 67, column: 20, scope: !7)
!49 = !DILocation(line: 68, column: 36, scope: !7)
!50 = !DILocation(line: 68, column: 31, scope: !7)
!51 = !DILocation(line: 68, column: 49, scope: !7)
!52 = !DILocation(line: 68, column: 41, scope: !7)
!53 = !DILocation(line: 69, column: 20, scope: !7)
!54 = !DILocation(line: 71, column: 35, scope: !7)
!55 = !DILocation(line: 72, column: 20, scope: !7)
!56 = !DILocation(line: 74, column: 20, scope: !7)
!57 = !DILocation(line: 76, column: 20, scope: !7)
!58 = !DILocation(line: 78, column: 20, scope: !7)
!59 = !DILocation(line: 80, column: 33, scope: !7)
!60 = !{i32 21046}
!61 = !DILocation(line: 81, column: 20, scope: !7)
!62 = !DILocation(line: 82, column: 28, scope: !7)
!63 = !DILocation(line: 82, column: 40, scope: !7)
!64 = !DILocation(line: 82, column: 4, scope: !7)
