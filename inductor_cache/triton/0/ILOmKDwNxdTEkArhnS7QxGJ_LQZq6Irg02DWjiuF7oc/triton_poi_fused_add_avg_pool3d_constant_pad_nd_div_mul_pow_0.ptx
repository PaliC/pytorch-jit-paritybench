//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0 // -- Begin function triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0
.visible .entry triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0_param_1,
	.param .u32 triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<64>;
	.reg .b32 	%r<70>;
	.reg .f32 	%f<248>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:21:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:21:33
	shl.b32 	%r28, %r5, 8;
	.loc	1 22 36                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:22:36
	mov.u32 	%r29, %tid.x;
	shl.b32 	%r30, %r29, 1;
	and.b32  	%r31, %r30, 254;
	.loc	1 22 23                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:22:23
	or.b32  	%r32, %r28, %r31;
	.loc	1 23 21                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:23:21
	setp.lt.s32 	%p3, %r32, 256;
	.loc	1 24 21                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:24:21
	bfe.s32 	%r33, %r5, 23, 1;
	shr.u32 	%r34, %r33, 28;
	add.s32 	%r35, %r32, %r34;
	shr.s32 	%r36, %r35, 4;
	.loc	1 24 27                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:24:27
	shr.u32 	%r37, %r36, 30;
	add.s32 	%r38, %r36, %r37;
	and.b32  	%r39, %r38, -4;
	sub.s32 	%r40, %r36, %r39;
	.loc	1 26 31                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:26:31
	mul.wide.s32 	%rd10, %r32, 4;
	add.s64 	%rd3, %rd9, %rd10;
	.loc	1 26 36                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:26:36
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r65, 0x0;
	@%p3 ld.global.v2.b32 { %r62, %r65 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 29 19                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:29:19
	setp.gt.s32 	%p19, %r40, 1;
	.loc	1 33 38                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:33:38
	add.s32 	%r41, %r32, -32;
	.loc	1 33 30                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:33:30
	mul.wide.s32 	%rd11, %r41, 4;
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 33 50                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:33:50
	and.pred  	%p4, %p3, %p19;
	mov.b32 	%r10, 0;
	.loc	1 33 43                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:33:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p4 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	@!%p4 mov.u32 %r8, %r10;
	@!%p4 mov.u32 %r9, %r10;
	// end inline asm
	mov.b32 	%f37, %r8;
	mov.b32 	%f38, %r9;
	.loc	1 34 18                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:34:18
	mul.f32 	%f39, %f37, %f37;
	mul.f32 	%f40, %f38, %f38;
	.loc	1 36 32                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:36:32
	selp.f32 	%f41, %f39, 0f00000000, %p19;
	selp.f32 	%f42, %f40, 0f00000000, %p19;
	.loc	1 38 21                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:38:21
	setp.gt.s32 	%p20, %r40, 0;
	.loc	1 41 39                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:41:39
	add.s32 	%r42, %r32, -16;
	.loc	1 41 31                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:41:31
	mul.wide.s32 	%rd12, %r42, 4;
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 41 52                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:41:52
	and.pred  	%p7, %p3, %p20;
	.loc	1 41 44                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:41:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p7 ld.global.v2.b32 { %r12, %r13 }, [ %rd5 + 0 ];
	@!%p7 mov.u32 %r12, %r10;
	@!%p7 mov.u32 %r13, %r10;
	// end inline asm
	mov.b32 	%f43, %r12;
	mov.b32 	%f44, %r13;
	.loc	1 42 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:42:20
	mul.f32 	%f45, %f43, %f43;
	mul.f32 	%f46, %f44, %f44;
	.loc	1 44 35                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:44:35
	selp.f32 	%f47, %f45, 0f00000000, %p20;
	selp.f32 	%f48, %f46, 0f00000000, %p20;
	.loc	1 45 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:45:20
	add.f32 	%f49, %f41, %f47;
	add.f32 	%f50, %f42, %f48;
	.loc	1 47 21                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:47:21
	setp.gt.s32 	%p21, %r40, -1;
	.loc	1 50 44                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:50:44
	and.pred  	%p10, %p3, %p21;
	.loc	1 50 36                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:50:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p10 ld.global.v2.b32 { %r16, %r17 }, [ %rd3 + 0 ];
	@!%p10 mov.u32 %r16, %r10;
	@!%p10 mov.u32 %r17, %r10;
	// end inline asm
	mov.b32 	%f51, %r16;
	mov.b32 	%f52, %r17;
	.loc	1 51 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:51:20
	mul.f32 	%f53, %f51, %f51;
	mul.f32 	%f54, %f52, %f52;
	.loc	1 53 35                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:53:35
	selp.f32 	%f55, %f53, 0f00000000, %p21;
	selp.f32 	%f56, %f54, 0f00000000, %p21;
	.loc	1 54 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:54:20
	add.f32 	%f57, %f55, %f49;
	add.f32 	%f58, %f56, %f50;
	.loc	1 58 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:58:20
	add.s32 	%r43, %r40, 1;
	setp.lt.u32 	%p22, %r43, 4;
	.loc	1 59 36                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:59:36
	add.s32 	%r44, %r32, 16;
	.loc	1 59 31                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:59:31
	mul.wide.s32 	%rd13, %r44, 4;
	add.s64 	%rd7, %rd9, %rd13;
	.loc	1 59 49                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:59:49
	and.pred  	%p13, %p3, %p22;
	.loc	1 59 41                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:59:41
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p13 ld.global.v2.b32 { %r20, %r21 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r20, %r10;
	@!%p13 mov.u32 %r21, %r10;
	// end inline asm
	mov.b32 	%f59, %r20;
	mov.b32 	%f60, %r21;
	.loc	1 60 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:60:20
	mul.f32 	%f61, %f59, %f59;
	mul.f32 	%f62, %f60, %f60;
	.loc	1 62 35                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:62:35
	selp.f32 	%f63, %f61, 0f00000000, %p22;
	selp.f32 	%f64, %f62, 0f00000000, %p22;
	.loc	1 63 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:63:20
	add.f32 	%f65, %f63, %f57;
	add.f32 	%f66, %f64, %f58;
	.loc	1 67 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:67:20
	add.s32 	%r45, %r40, 2;
	setp.lt.u32 	%p23, %r45, 4;
	.loc	1 68 36                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:68:36
	add.s32 	%r46, %r32, 32;
	.loc	1 68 31                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:68:31
	mul.wide.s32 	%rd14, %r46, 4;
	add.s64 	%rd8, %rd9, %rd14;
	.loc	1 68 49                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:68:49
	and.pred  	%p16, %p3, %p23;
	.loc	1 68 41                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:68:41
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p16 ld.global.v2.b32 { %r24, %r25 }, [ %rd8 + 0 ];
	@!%p16 mov.u32 %r24, %r10;
	@!%p16 mov.u32 %r25, %r10;
	// end inline asm
	mov.b32 	%f67, %r24;
	mov.b32 	%f68, %r25;
	.loc	1 69 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:69:20
	mul.f32 	%f69, %f67, %f67;
	mul.f32 	%f70, %f68, %f68;
	.loc	1 71 35                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:71:35
	selp.f32 	%f71, %f69, 0f00000000, %p23;
	selp.f32 	%f72, %f70, 0f00000000, %p23;
	.loc	1 72 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:72:20
	add.f32 	%f73, %f71, %f65;
	add.f32 	%f74, %f72, %f66;
	.loc	1 74 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:74:20
	mul.f32 	%f75, %f73, 0f3E4CCCCD;
	.loc	1 78 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:78:20
	fma.rn.f32 	%f1, %f75, 0f38D1B717, 0f3F800000;
	mov.f32 	%f77, 0f3EC00000;
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	cvt.rzi.f32.f32 	%f78, %f77;
	fma.rn.f32 	%f79, %f78, 0fC0000000, 0f3F400000;
	abs.ftz.f32 	%f3, %f79;
	abs.ftz.f32 	%f4, %f1;
	mov.b32 	%r47, %f4;
	and.b32  	%r48, %r47, 8388607;
	or.b32  	%r49, %r48, 1065353216;
	mov.b32 	%f80, %r49;
	shr.u32 	%r50, %r47, 23;
	cvt.rn.f32.u32 	%f81, %r50;
	add.f32 	%f82, %f81, 0fC2FE0000;
	setp.gt.f32 	%p24, %f80, 0f3FB504F3;
	mul.f32 	%f83, %f80, 0f3F000000;
	add.f32 	%f84, %f82, 0f3F800000;
	selp.f32 	%f85, %f84, %f82, %p24;
	selp.f32 	%f86, %f83, %f80, %p24;
	add.f32 	%f87, %f86, 0fBF800000;
	add.f32 	%f35, %f86, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f34,%f35;
	// end inline asm
	add.f32 	%f88, %f87, %f87;
	mul.f32 	%f89, %f34, %f88;
	mul.f32 	%f90, %f89, %f89;
	mov.f32 	%f91, 0f3C4CAF63;
	mov.f32 	%f92, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f93, %f92, %f90, %f91;
	mov.f32 	%f94, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f95, %f93, %f90, %f94;
	mul.rn.ftz.f32 	%f96, %f95, %f90;
	mul.rn.ftz.f32 	%f97, %f96, %f89;
	neg.f32 	%f98, %f34;
	fma.rn.f32 	%f99, %f98, %f88, %f87;
	add.f32 	%f100, %f99, %f99;
	neg.f32 	%f101, %f89;
	fma.rn.ftz.f32 	%f102, %f101, %f87, %f100;
	mul.rn.ftz.f32 	%f103, %f34, %f102;
	fma.rn.f32 	%f104, %f34, %f88, %f97;
	neg.f32 	%f105, %f104;
	fma.rn.f32 	%f106, %f34, %f88, %f105;
	add.f32 	%f107, %f97, %f106;
	add.f32 	%f108, %f103, %f107;
	add.f32 	%f109, %f104, %f108;
	sub.f32 	%f110, %f104, %f109;
	add.f32 	%f111, %f108, %f110;
	mov.f32 	%f112, 0f3F317200;
	mul.rn.ftz.f32 	%f113, %f85, %f112;
	mov.f32 	%f114, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f115, %f85, %f114;
	add.f32 	%f116, %f113, %f109;
	sub.f32 	%f117, %f113, %f116;
	add.f32 	%f118, %f109, %f117;
	add.f32 	%f119, %f111, %f118;
	add.f32 	%f120, %f115, %f119;
	add.f32 	%f121, %f116, %f120;
	sub.f32 	%f122, %f116, %f121;
	add.f32 	%f123, %f120, %f122;
	mov.f32 	%f124, 0f3F400000;
	abs.ftz.f32 	%f5, %f124;
	setp.gt.f32 	%p25, %f5, 0f77F684DF;
	selp.f32 	%f6, 0f38C00000, 0f3F400000, %p25;
	mul.rn.ftz.f32 	%f7, %f6, %f121;
	neg.f32 	%f125, %f7;
	fma.rn.ftz.f32 	%f126, %f6, %f121, %f125;
	fma.rn.ftz.f32 	%f127, %f6, %f123, %f126;
	mov.f32 	%f128, 0f00000000;
	fma.rn.ftz.f32 	%f8, %f128, %f121, %f127;
	add.rn.ftz.f32 	%f9, %f7, %f8;
	mov.b32 	%r3, %f9;
	setp.eq.s32 	%p26, %r3, 1118925336;
	selp.f32 	%f129, 0f42B17217, %f9, %p26;
	mov.f32 	%f130, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f131, %f129, %f130;
	cvt.rzi.f32.f32 	%f132, %f131;
	abs.ftz.f32 	%f133, %f132;
	setp.gt.f32 	%p27, %f133, 0f42FC0000;
	mov.f32 	%f134, 0f42FC0000;
	copysign.f32 	%f135, %f132, %f134;
	selp.f32 	%f136, %f135, %f132, %p27;
	mov.f32 	%f137, 0fBF317218;
	fma.rn.ftz.f32 	%f138, %f136, %f137, %f129;
	mov.f32 	%f139, 0f3102E308;
	fma.rn.ftz.f32 	%f140, %f136, %f139, %f138;
	mul.f32 	%f141, %f140, 0f3FB8AA3B;
	add.f32 	%f142, %f136, 0f4B40007F;
	mov.b32 	%r51, %f142;
	shl.b32 	%r52, %r51, 23;
	mov.b32 	%f143, %r52;
	ex2.approx.ftz.f32 	%f144, %f141;
	mul.f32 	%f10, %f144, %f143;
	setp.eq.f32 	%p28, %f10, 0f7F800000;
	mov.f32 	%f242, 0f7F800000;
	@%p28 bra 	$L__BB0_2;
// %bb.1:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f145, %f9;
	add.rn.ftz.f32 	%f146, %f7, %f145;
	add.rn.ftz.f32 	%f147, %f146, %f8;
	add.f32 	%f148, %f147, 0f37000000;
	selp.f32 	%f149, %f148, %f147, %p26;
	fma.rn.ftz.f32 	%f242, %f10, %f149, %f10;
$L__BB0_2:                              // %__internal_accurate_powf.exit.i
	.loc	1 0 0                           // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:0:0
	mul.f32 	%f76, %f74, 0f3E4CCCCD;
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	setp.eq.f32 	%p30, %f3, 0f3F800000;
	setp.lt.f32 	%p31, %f1, 0f00000000;
	and.pred  	%p1, %p31, %p30;
	setp.neu.f32 	%p32, %f1, 0f00000000;
	@%p32 bra 	$L__BB0_4;
// %bb.3:
	add.f32 	%f156, %f1, %f1;
	selp.f32 	%f244, %f156, 0f00000000, %p30;
	bra.uni 	$L__BB0_5;
$L__BB0_4:
	neg.f32 	%f150, %f242;
	selp.f32 	%f151, %f150, %f242, %p1;
	cvt.rzi.f32.f32 	%f153, %f124;
	setp.neu.f32 	%p34, %f153, 0f3F400000;
	selp.f32 	%f155, 0f7FFFFFFF, %f151, %p34;
	selp.f32 	%f244, %f155, %f151, %p31;
$L__BB0_5:                              // %__internal_powf_corner_cases.exit.i
	.loc	1 0 0                           // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:0:0
	fma.rn.f32 	%f2, %f76, 0f38D1B717, 0f3F800000;
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	add.f32 	%f157, %f4, %f5;
	mov.b32 	%r53, %f157;
	setp.lt.s32 	%p36, %r53, 2139095040;
	@%p36 bra 	$L__BB0_13;
// %bb.6:                               // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p37, %f4, %f4;
	@%p37 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p38, %f5, %f5;
	@%p38 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_8;
$L__BB0_9:                              // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p39, %f5, 0f7F800000;
	@%p39 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p41, %f4, 0f3F800000;
	setp.eq.f32 	%p42, %f1, 0fBF800000;
	selp.f32 	%f158, 0f7F800000, 0f00000000, %p41;
	selp.f32 	%f244, 0f3F800000, %f158, %p42;
	bra.uni 	$L__BB0_13;
$L__BB0_11:                             // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p40, %f4, 0f7F800000;
	@%p40 bra 	$L__BB0_13;
// %bb.12:
	.loc	1 0 33                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:0:33
	selp.f32 	%f244, 0fFF800000, 0f7F800000, %p1;
$L__BB0_13:                             // %__nv_powf.exit
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	abs.ftz.f32 	%f20, %f2;
	mov.b32 	%r54, %f20;
	and.b32  	%r55, %r54, 8388607;
	or.b32  	%r56, %r55, 1065353216;
	mov.b32 	%f162, %r56;
	shr.u32 	%r57, %r54, 23;
	cvt.rn.f32.u32 	%f163, %r57;
	add.f32 	%f164, %f163, 0fC2FE0000;
	setp.gt.f32 	%p43, %f162, 0f3FB504F3;
	mul.f32 	%f165, %f162, 0f3F000000;
	add.f32 	%f166, %f164, 0f3F800000;
	selp.f32 	%f167, %f166, %f164, %p43;
	selp.f32 	%f168, %f165, %f162, %p43;
	add.f32 	%f169, %f168, 0fBF800000;
	add.f32 	%f160, %f168, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f159,%f160;
	// end inline asm
	add.f32 	%f170, %f169, %f169;
	mul.f32 	%f171, %f159, %f170;
	mul.f32 	%f172, %f171, %f171;
	fma.rn.ftz.f32 	%f175, %f92, %f172, %f91;
	fma.rn.ftz.f32 	%f177, %f175, %f172, %f94;
	mul.rn.ftz.f32 	%f178, %f177, %f172;
	mul.rn.ftz.f32 	%f179, %f178, %f171;
	neg.f32 	%f180, %f159;
	fma.rn.f32 	%f181, %f180, %f170, %f169;
	add.f32 	%f182, %f181, %f181;
	neg.f32 	%f183, %f171;
	fma.rn.ftz.f32 	%f184, %f183, %f169, %f182;
	mul.rn.ftz.f32 	%f185, %f159, %f184;
	fma.rn.f32 	%f186, %f159, %f170, %f179;
	neg.f32 	%f187, %f186;
	fma.rn.f32 	%f188, %f159, %f170, %f187;
	add.f32 	%f189, %f179, %f188;
	add.f32 	%f190, %f185, %f189;
	add.f32 	%f191, %f186, %f190;
	sub.f32 	%f192, %f186, %f191;
	add.f32 	%f193, %f190, %f192;
	mul.rn.ftz.f32 	%f195, %f167, %f112;
	mul.rn.ftz.f32 	%f197, %f167, %f114;
	add.f32 	%f198, %f195, %f191;
	sub.f32 	%f199, %f195, %f198;
	add.f32 	%f200, %f191, %f199;
	add.f32 	%f201, %f193, %f200;
	add.f32 	%f202, %f197, %f201;
	add.f32 	%f203, %f198, %f202;
	sub.f32 	%f204, %f198, %f203;
	add.f32 	%f205, %f202, %f204;
	mul.rn.ftz.f32 	%f21, %f6, %f203;
	neg.f32 	%f206, %f21;
	fma.rn.ftz.f32 	%f207, %f6, %f203, %f206;
	fma.rn.ftz.f32 	%f208, %f6, %f205, %f207;
	fma.rn.ftz.f32 	%f22, %f128, %f203, %f208;
	add.rn.ftz.f32 	%f23, %f21, %f22;
	mov.b32 	%r4, %f23;
	setp.eq.s32 	%p44, %r4, 1118925336;
	selp.f32 	%f210, 0f42B17217, %f23, %p44;
	mul.rn.ftz.f32 	%f212, %f210, %f130;
	cvt.rzi.f32.f32 	%f213, %f212;
	abs.ftz.f32 	%f214, %f213;
	setp.gt.f32 	%p45, %f214, 0f42FC0000;
	copysign.f32 	%f216, %f213, %f134;
	selp.f32 	%f217, %f216, %f213, %p45;
	fma.rn.ftz.f32 	%f219, %f217, %f137, %f210;
	fma.rn.ftz.f32 	%f221, %f217, %f139, %f219;
	mul.f32 	%f222, %f221, 0f3FB8AA3B;
	add.f32 	%f223, %f217, 0f4B40007F;
	mov.b32 	%r58, %f223;
	shl.b32 	%r59, %r58, 23;
	mov.b32 	%f224, %r59;
	ex2.approx.ftz.f32 	%f225, %f222;
	mul.f32 	%f24, %f225, %f224;
	setp.eq.f32 	%p46, %f24, 0f7F800000;
	mov.f32 	%f245, 0f7F800000;
	@%p46 bra 	$L__BB0_15;
// %bb.14:                              // %__internal_fmad.exit.i.i85
	neg.f32 	%f226, %f23;
	add.rn.ftz.f32 	%f227, %f21, %f226;
	add.rn.ftz.f32 	%f228, %f227, %f22;
	add.f32 	%f229, %f228, 0f37000000;
	selp.f32 	%f230, %f229, %f228, %p44;
	fma.rn.ftz.f32 	%f245, %f24, %f230, %f24;
$L__BB0_15:                             // %__internal_accurate_powf.exit.i56
	setp.lt.f32 	%p49, %f2, 0f00000000;
	and.pred  	%p2, %p49, %p30;
	setp.neu.f32 	%p50, %f2, 0f00000000;
	@%p50 bra 	$L__BB0_17;
// %bb.16:
	add.f32 	%f237, %f2, %f2;
	selp.f32 	%f247, %f237, 0f00000000, %p30;
	bra.uni 	$L__BB0_18;
$L__BB0_17:
	neg.f32 	%f231, %f245;
	selp.f32 	%f232, %f231, %f245, %p2;
	cvt.rzi.f32.f32 	%f234, %f124;
	setp.neu.f32 	%p52, %f234, 0f3F400000;
	selp.f32 	%f236, 0f7FFFFFFF, %f232, %p52;
	selp.f32 	%f247, %f236, %f232, %p49;
$L__BB0_18:                             // %__internal_powf_corner_cases.exit.i62
	.loc	1 0 33                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:0:33
	ld.param.u64 	%rd2, [triton_poi_fused_add_avg_pool3d_constant_pad_nd_div_mul_pow_0_param_0];
	cvt.s64.s32 	%rd1, %r32;
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	add.f32 	%f238, %f20, %f5;
	mov.b32 	%r60, %f238;
	setp.lt.s32 	%p54, %r60, 2139095040;
	@%p54 bra 	$L__BB0_26;
// %bb.19:                              // %__nv_isnanf.exit.i.i70
	setp.nan.f32 	%p55, %f20, %f20;
	@%p55 bra 	$L__BB0_21;
// %bb.20:                              // %__nv_isnanf.exit11.i.i73
	setp.num.f32 	%p56, %f5, %f5;
	@%p56 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_22:                             // %__nv_isinff.exit8.i.i76
	setp.neu.f32 	%p57, %f5, 0f7F800000;
	@%p57 bra 	$L__BB0_24;
// %bb.23:                              // %__nv_fabsf.exit5.i.i82
	setp.gt.f32 	%p59, %f20, 0f3F800000;
	setp.eq.f32 	%p60, %f2, 0fBF800000;
	selp.f32 	%f239, 0f7F800000, 0f00000000, %p59;
	selp.f32 	%f247, 0f3F800000, %f239, %p60;
	bra.uni 	$L__BB0_26;
$L__BB0_24:                             // %__nv_isinff.exit.i.i79
	setp.neu.f32 	%p58, %f20, 0f7F800000;
	@%p58 bra 	$L__BB0_26;
// %bb.25:
	.loc	1 0 33                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:0:33
	selp.f32 	%f247, 0fFF800000, 0f7F800000, %p2;
$L__BB0_26:                             // %__nv_powf.exit88
	cvt.u32.u64 	%r69, %rd1;
	.loc	1 23 21                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:23:21
	setp.lt.s32 	%p61, %r69, 256;
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	setp.eq.f32 	%p62, %f1, 0f3F800000;
	selp.f32 	%f240, 0f3F800000, %f244, %p62;
	setp.eq.f32 	%p63, %f2, 0f3F800000;
	selp.f32 	%f241, 0f3F800000, %f247, %p63;
	.loc	1 81 20                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:81:20
	mov.b32 	%r63, %f240;
	// begin inline asm
	div.full.f32 %r67, %r62, %r63;
	// end inline asm
	mov.b32 	%r66, %f241;
	// begin inline asm
	div.full.f32 %r68, %r65, %r66;
	// end inline asm
	.loc	1 82 28                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:82:28
	shl.b64 	%rd16, %rd1, 2;
	add.s64 	%rd15, %rd2, %rd16;
	.loc	1 82 40                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:82:40
	// begin inline asm
	@%p61 st.global.v2.b32 [ %rd15 + 0 ], { %r67, %r68 };
	// end inline asm
	.loc	1 82 4                          // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:82:4
	ret;
$L__BB0_8:
	.loc	1 80 33                         // cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py:80:33
	add.f32 	%f244, %f1, 0f3F400000;
	bra.uni 	$L__BB0_13;
$L__BB0_21:
	add.f32 	%f247, %f2, 0f3F400000;
	bra.uni 	$L__BB0_26;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/pr/cprw3ml4gowizdlbc56eplbqzw3zqjgye7mlolsbxgn6abjmmfrp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 114
.b8 119
.b8 51
.b8 109
.b8 108
.b8 52
.b8 103
.b8 111
.b8 119
.b8 105
.b8 122
.b8 100
.b8 108
.b8 98
.b8 99
.b8 53
.b8 54
.b8 101
.b8 112
.b8 108
.b8 98
.b8 113
.b8 122
.b8 119
.b8 51
.b8 122
.b8 113
.b8 106
.b8 103
.b8 121
.b8 101
.b8 55
.b8 109
.b8 108
.b8 111
.b8 108
.b8 115
.b8 98
.b8 120
.b8 103
.b8 110
.b8 54
.b8 97
.b8 98
.b8 106
.b8 109
.b8 109
.b8 102
.b8 114
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
