//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_index_mean_sum_2 // -- Begin function triton_poi_fused_div_index_mean_sum_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_3[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_3[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 112, 47, 99, 104, 112, 53, 107, 51, 116, 120, 101, 50, 116, 114, 114, 112, 117, 98, 113, 115, 103, 51, 99, 98, 98, 110, 106, 110, 99, 111, 119, 114, 119, 55, 122, 121, 100, 102, 122, 102, 54, 122, 104, 110, 55, 115, 103, 102, 52, 52, 54, 115, 113, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_3[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 48, 32, 60, 32, 57, 54};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 112, 47, 99, 104, 112, 53, 107, 51, 116, 120, 101, 50, 116, 114, 114, 112, 117, 98, 113, 115, 103, 51, 99, 98, 98, 110, 106, 110, 99, 111, 119, 114, 119, 55, 122, 121, 100, 102, 122, 102, 54, 122, 104, 110, 55, 115, 103, 102, 52, 52, 54, 115, 113, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 53, 32, 60, 32, 57, 54};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 112, 47, 99, 104, 112, 53, 107, 51, 116, 120, 101, 50, 116, 114, 114, 112, 117, 98, 113, 115, 103, 51, 99, 98, 98, 110, 106, 110, 99, 111, 119, 114, 119, 55, 122, 121, 100, 102, 122, 102, 54, 122, 104, 110, 55, 115, 103, 102, 52, 52, 54, 115, 113, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 48, 32, 60, 32, 57, 54};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 112, 47, 99, 104, 112, 53, 107, 51, 116, 120, 101, 50, 116, 114, 114, 112, 117, 98, 113, 115, 103, 51, 99, 98, 98, 110, 106, 110, 99, 111, 119, 114, 119, 55, 122, 121, 100, 102, 122, 102, 54, 122, 104, 110, 55, 115, 103, 102, 52, 52, 54, 115, 113, 116, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 57, 54};
                                        // @triton_poi_fused_div_index_mean_sum_2
.visible .entry triton_poi_fused_div_index_mean_sum_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_index_mean_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_index_mean_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_index_mean_sum_2_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<32>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<70>;
	.loc	1 19 0                          // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_div_index_mean_sum_2_param_1];
	mov.pred 	%p4, -1;
$L__tmp0:
	.loc	1 24 19                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:24:19
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p4 ld.global.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 26 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:26:31
	add.s64 	%rd13, %rd11, 8;
	.loc	1 26 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:26:20
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p4 ld.global.b64 { %rd12 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 28 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:28:31
	add.s64 	%rd15, %rd11, 16;
	.loc	1 28 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:28:20
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p4 ld.global.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 30 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:30:31
	add.s64 	%rd17, %rd11, 24;
	.loc	1 30 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:30:20
	// begin inline asm
	mov.u64 %rd16, 0x0;
	@%p4 ld.global.b64 { %rd16 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 33 18                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:33:18
	add.s64 	%rd18, %rd10, 96;
	.loc	1 34 18                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:34:18
	setp.lt.s64 	%p5, %rd10, 0;
	.loc	1 35 32                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:35:32
	selp.b64 	%rd4, %rd18, %rd10, %p5;
	.loc	1 36 36                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:36:36
	setp.lt.u64 	%p6, %rd4, 96;
	.loc	1 36 48                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:36:48
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 48                          // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:0:48
	ld.param.u64 	%rd9, [triton_poi_fused_div_index_mean_sum_2_param_2];
	.loc	1 36 48                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:36:48
	bar.sync 	0;
	.loc	1 37 30                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:37:30
	shl.b64 	%rd23, %rd4, 2;
	add.s64 	%rd19, %rd9, %rd23;
	.loc	1 37 37                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:37:37
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r1 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 38 30                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:38:30
	add.s64 	%rd20, %rd19, 384;
	.loc	1 38 42                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:38:42
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r2 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 40 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:40:31
	add.s64 	%rd21, %rd19, 768;
	.loc	1 40 44                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:40:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r3 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 42 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:42:31
	add.s64 	%rd22, %rd19, 1152;
	.loc	1 42 44                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:42:44
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r4 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 46 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:46:20
	add.s64 	%rd24, %rd12, 96;
	.loc	1 47 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:47:20
	setp.lt.s64 	%p11, %rd12, 0;
	.loc	1 48 35                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:48:35
	selp.b64 	%rd5, %rd24, %rd12, %p11;
	.loc	1 49 37                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:49:37
	setp.lt.u64 	%p12, %rd5, 96;
	.loc	1 49 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:49:50
	@%p12 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	bar.sync 	0;
	.loc	1 50 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:50:31
	shl.b64 	%rd29, %rd5, 2;
	add.s64 	%rd30, %rd9, %rd29;
	add.s64 	%rd25, %rd30, 1536;
	.loc	1 50 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:50:45
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r8 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 51 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:51:31
	add.s64 	%rd26, %rd30, 1920;
	.loc	1 51 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:51:45
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r9 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 53 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:53:31
	add.s64 	%rd27, %rd30, 2304;
	.loc	1 53 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:53:45
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r10 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 55 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:55:31
	add.s64 	%rd28, %rd30, 2688;
	.loc	1 55 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:55:45
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r11 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 59 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:59:20
	add.s64 	%rd31, %rd14, 96;
	.loc	1 60 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:60:20
	setp.lt.s64 	%p17, %rd14, 0;
	.loc	1 61 35                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:61:35
	selp.b64 	%rd6, %rd31, %rd14, %p17;
	.loc	1 62 37                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:62:37
	setp.lt.u64 	%p18, %rd6, 96;
	.loc	1 62 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:62:50
	@%p18 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	bar.sync 	0;
	.loc	1 63 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:63:31
	shl.b64 	%rd36, %rd6, 2;
	add.s64 	%rd37, %rd9, %rd36;
	add.s64 	%rd32, %rd37, 3072;
	.loc	1 63 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:63:45
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r15 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 64 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:64:31
	add.s64 	%rd33, %rd37, 3456;
	.loc	1 64 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:64:45
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r16 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 66 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:66:31
	add.s64 	%rd34, %rd37, 3840;
	.loc	1 66 45                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:66:45
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r17 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 68 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:68:31
	add.s64 	%rd35, %rd37, 4224;
	.loc	1 68 46                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:68:46
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r18 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 72 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:72:20
	add.s64 	%rd38, %rd16, 96;
	.loc	1 73 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:73:20
	setp.lt.s64 	%p23, %rd16, 0;
	.loc	1 74 35                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:74:35
	selp.b64 	%rd7, %rd38, %rd16, %p23;
	.loc	1 75 37                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:75:37
	setp.lt.u64 	%p24, %rd7, 96;
	.loc	1 75 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:75:50
	@%p24 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	.loc	1 0 50                          // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:0:50
	ld.param.u64 	%rd43, [triton_poi_fused_div_index_mean_sum_2_param_0];
	mov.b32 	%f4, %r1;
	mov.b32 	%f5, %r2;
	add.f32 	%f6, %f4, %f5;
	mov.b32 	%f7, %r3;
	add.f32 	%f8, %f6, %f7;
	mov.b32 	%f9, %r4;
	add.f32 	%f10, %f8, %f9;
	mov.b32 	%r6, %f10;
	mov.b32 	%r7, 1082130432;
	// begin inline asm
	div.full.f32 %r5, %r6, %r7;
	// end inline asm
	mov.b32 	%f1, %r5;
	mov.b32 	%f11, %r8;
	mov.b32 	%f12, %r9;
	add.f32 	%f13, %f11, %f12;
	mov.b32 	%f14, %r10;
	add.f32 	%f15, %f13, %f14;
	mov.b32 	%f16, %r11;
	add.f32 	%f17, %f15, %f16;
	mov.b32 	%r13, %f17;
	// begin inline asm
	div.full.f32 %r12, %r13, %r7;
	// end inline asm
	mov.b32 	%f2, %r12;
	mov.b32 	%f18, %r15;
	mov.b32 	%f19, %r16;
	add.f32 	%f20, %f18, %f19;
	mov.b32 	%f21, %r17;
	add.f32 	%f22, %f20, %f21;
	mov.b32 	%f23, %r18;
	add.f32 	%f24, %f22, %f23;
	mov.b32 	%r20, %f24;
	// begin inline asm
	div.full.f32 %r19, %r20, %r7;
	// end inline asm
	mov.b32 	%f3, %r19;
	.loc	1 58 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:58:20
	add.f32 	%f25, %f1, %f2;
	.loc	1 71 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:71:20
	add.f32 	%f26, %f25, %f3;
	.loc	1 75 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:75:50
	bar.sync 	0;
	.loc	1 76 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:76:31
	shl.b64 	%rd44, %rd7, 2;
	add.s64 	%rd45, %rd9, %rd44;
	add.s64 	%rd39, %rd45, 4608;
	.loc	1 76 46                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:76:46
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r22 }, [ %rd39 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r22;
	.loc	1 77 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:77:31
	add.s64 	%rd40, %rd45, 4992;
	.loc	1 77 46                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:77:46
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r23 }, [ %rd40 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r23;
	.loc	1 78 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:78:20
	add.f32 	%f29, %f27, %f28;
	.loc	1 79 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:79:31
	add.s64 	%rd41, %rd45, 5376;
	.loc	1 79 46                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:79:46
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r24 }, [ %rd41 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r24;
	.loc	1 80 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:80:20
	add.f32 	%f31, %f29, %f30;
	.loc	1 81 31                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:81:31
	add.s64 	%rd42, %rd45, 5760;
	.loc	1 81 46                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:81:46
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r25 }, [ %rd42 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r25;
	.loc	1 82 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:82:20
	add.f32 	%f33, %f31, %f32;
	.loc	1 83 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:83:20
	mov.b32 	%r27, %f33;
	// begin inline asm
	div.full.f32 %r26, %r27, %r7;
	// end inline asm
	mov.b32 	%f34, %r26;
	.loc	1 84 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:84:20
	add.f32 	%f35, %f26, %f34;
	.loc	1 86 20                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:86:20
	mul.f32 	%f36, %f35, 0f3E800000;
	.loc	1 87 68                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:87:68
	mov.u32 	%r30, %tid.x;
	and.b32  	%r31, %r30, 31;
	setp.eq.s32 	%p29, %r31, 0;
	mov.b32 	%r29, %f36;
	// begin inline asm
	@%p29 st.global.b32 [ %rd43 + 0 ], { %r29 };
	// end inline asm
	.loc	1 87 4                          // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:87:4
	ret;
$L__BB0_1:
	.loc	1 36 48                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:36:48
	mov.u64 	%rd64, assertMessage_0;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, assertFile_0;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFunc_0;
	cvta.global.u64 	%rd69, %rd68;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd65;
	.param .b64 param1;
	st.param.b64 	[param1], %rd67;
	.param .b32 param2;
	st.param.b32 	[param2], 36;
	.param .b64 param3;
	st.param.b64 	[param3], %rd69;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_3:
	.loc	1 49 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:49:50
	mov.u64 	%rd58, assertMessage_1;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, assertFile_1;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, assertFunc_1;
	cvta.global.u64 	%rd63, %rd62;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd59;
	.param .b64 param1;
	st.param.b64 	[param1], %rd61;
	.param .b32 param2;
	st.param.b32 	[param2], 49;
	.param .b64 param3;
	st.param.b64 	[param3], %rd63;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_5:
	.loc	1 62 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:62:50
	mov.u64 	%rd52, assertMessage_2;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, assertFile_2;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, assertFunc_2;
	cvta.global.u64 	%rd57, %rd56;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd53;
	.param .b64 param1;
	st.param.b64 	[param1], %rd55;
	.param .b32 param2;
	st.param.b32 	[param2], 62;
	.param .b64 param3;
	st.param.b64 	[param3], %rd57;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_7:
	.loc	1 75 50                         // chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py:75:50
	mov.u64 	%rd46, assertMessage_3;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, assertFile_3;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, assertFunc_3;
	cvta.global.u64 	%rd51, %rd50;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd47;
	.param .b64 param1;
	st.param.b64 	[param1], %rd49;
	.param .b32 param2;
	st.param.b32 	[param2], 75;
	.param .b64 param3;
	st.param.b64 	[param3], %rd51;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hp/chp5k3txe2trrpubqsg3cbbnjncowrw7zydfzf6zhn7sgf446sqt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 112
.b8 53
.b8 107
.b8 51
.b8 116
.b8 120
.b8 101
.b8 50
.b8 116
.b8 114
.b8 114
.b8 112
.b8 117
.b8 98
.b8 113
.b8 115
.b8 103
.b8 51
.b8 99
.b8 98
.b8 98
.b8 110
.b8 106
.b8 110
.b8 99
.b8 111
.b8 119
.b8 114
.b8 119
.b8 55
.b8 122
.b8 121
.b8 100
.b8 102
.b8 122
.b8 102
.b8 54
.b8 122
.b8 104
.b8 110
.b8 55
.b8 115
.b8 103
.b8 102
.b8 52
.b8 52
.b8 54
.b8 115
.b8 113
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
