; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_log_ones_like_pow_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = srem i32 %9, 16, !dbg !15
  %12 = sdiv i32 %9, 64, !dbg !16
  %13 = sext i32 %9 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !17
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %10) #2, !dbg !18
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !18
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !18
  %18 = bitcast i32 %16 to float, !dbg !18
  %19 = bitcast i32 %17 to float, !dbg !18
  %20 = shl nsw i32 %12, 6, !dbg !19
  %21 = add i32 %20, %11, !dbg !20
  %22 = sext i32 %21 to i64, !dbg !21
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !21
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %23, i1 %10) #2, !dbg !22
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !22
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !22
  %27 = bitcast i32 %26 to float, !dbg !22
  %28 = add i32 %21, 16, !dbg !23
  %29 = sext i32 %28 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !24
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %10) #2, !dbg !25
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !25
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !25
  %34 = bitcast i32 %33 to float, !dbg !25
  %35 = add i32 %21, 32, !dbg !26
  %36 = sext i32 %35 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !27
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %10) #2, !dbg !28
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !28
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !28
  %41 = bitcast i32 %40 to float, !dbg !28
  %42 = add i32 %21, 48, !dbg !29
  %43 = sext i32 %42 to i64, !dbg !30
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !30
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %44, i1 %10) #2, !dbg !31
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !31
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !31
  %48 = bitcast i32 %47 to float, !dbg !31
  %49 = fadd float %18, 1.000000e+00, !dbg !32
  %50 = fadd float %19, 1.000000e+00, !dbg !32
  %51 = fmul float %18, %18, !dbg !33
  %52 = fmul float %19, %19, !dbg !33
  %53 = fmul float %51, 5.000000e-01, !dbg !34
  %54 = fmul float %52, 5.000000e-01, !dbg !34
  %55 = fadd float %49, %53, !dbg !35
  %56 = fadd float %50, %54, !dbg !35
  %57 = fadd float %27, 1.000000e+00, !dbg !36
  %58 = fmul float %27, %27, !dbg !37
  %59 = fmul float %58, 5.000000e-01, !dbg !38
  %60 = fadd float %57, %59, !dbg !39
  %61 = fadd float %34, 1.000000e+00, !dbg !40
  %62 = fmul float %34, %34, !dbg !41
  %63 = fmul float %62, 5.000000e-01, !dbg !42
  %64 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !22
  %65 = insertelement <2 x i32> %64, i32 %32, i64 1, !dbg !22
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !22
  %67 = fadd <2 x float> %66, splat (float 1.000000e+00), !dbg !36
  %68 = fmul <2 x float> %66, %66, !dbg !37
  %69 = fmul <2 x float> %68, splat (float 5.000000e-01), !dbg !38
  %70 = fadd <2 x float> %67, %69, !dbg !39
  %71 = fadd float %61, %63, !dbg !43
  %shift = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !44
  %72 = fadd <2 x float> %70, %shift, !dbg !44
  %73 = fadd float %60, %71, !dbg !44
  %74 = fadd float %41, 1.000000e+00, !dbg !45
  %75 = fmul float %41, %41, !dbg !46
  %76 = fmul float %75, 5.000000e-01, !dbg !47
  %77 = fadd float %74, %76, !dbg !48
  %78 = fadd float %73, %77, !dbg !49
  %79 = fadd float %48, 1.000000e+00, !dbg !50
  %80 = fmul float %48, %48, !dbg !51
  %81 = fmul float %80, 5.000000e-01, !dbg !52
  %82 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !28
  %83 = insertelement <2 x i32> %82, i32 %46, i64 1, !dbg !28
  %84 = bitcast <2 x i32> %83 to <2 x float>, !dbg !28
  %85 = fadd <2 x float> %84, splat (float 1.000000e+00), !dbg !45
  %86 = fmul <2 x float> %84, %84, !dbg !46
  %87 = fmul <2 x float> %86, splat (float 5.000000e-01), !dbg !47
  %88 = fadd <2 x float> %85, %87, !dbg !48
  %89 = fadd <2 x float> %72, %88, !dbg !49
  %90 = fadd float %79, %81, !dbg !53
  %shift31 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !54
  %91 = fadd <2 x float> %89, %shift31, !dbg !54
  %92 = extractelement <2 x float> %91, i64 0, !dbg !54
  %93 = fadd float %78, %90, !dbg !54
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %55, float %92) #2, !dbg !55
  %95 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float %93) #2, !dbg !55
  %96 = fcmp olt float %94, 0x3810000000000000, !dbg !56
  %97 = fmul float %94, 0x4160000000000000, !dbg !56
  %.02.i = select i1 %96, float %97, float %94, !dbg !56
  %i.i.0.i = select i1 %96, float -2.300000e+01, float 0.000000e+00, !dbg !56
  %98 = bitcast float %.02.i to i32, !dbg !56
  %99 = add i32 %98, -1059760811, !dbg !56
  %100 = and i32 %99, -8388608, !dbg !56
  %101 = sub i32 %98, %100, !dbg !56
  %102 = bitcast i32 %101 to float, !dbg !56
  %103 = sitofp i32 %100 to float, !dbg !56
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not.i = icmp eq i32 %104, 0, !dbg !56
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %103, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !56
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %103, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !56
  %.08.i = select i1 %.not.i, float %106, float %105, !dbg !56
  %107 = fadd float %102, -1.000000e+00, !dbg !56
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not1.i = icmp eq i32 %108, 0, !dbg !56
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %107, float 0x3FC2073EC0000000) #2, !dbg !56
  %110 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %107, float 0x3FC2073EC0000000) #2, !dbg !56
  %.010.i = select i1 %.not1.i, float %110, float %109, !dbg !56
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not2.i = icmp eq i32 %111, 0, !dbg !56
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %107, float 0xBFBF19B980000000) #2, !dbg !56
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %107, float 0xBFBF19B980000000) #2, !dbg !56
  %.011.i = select i1 %.not2.i, float %113, float %112, !dbg !56
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not3.i = icmp eq i32 %114, 0, !dbg !56
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %107, float 0x3FC1E52AA0000000) #2, !dbg !56
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %107, float 0x3FC1E52AA0000000) #2, !dbg !56
  %.012.i = select i1 %.not3.i, float %116, float %115, !dbg !56
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not4.i = icmp eq i32 %117, 0, !dbg !56
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %107, float 0xBFC55B1720000000) #2, !dbg !56
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %107, float 0xBFC55B1720000000) #2, !dbg !56
  %.09.i = select i1 %.not4.i, float %119, float %118, !dbg !56
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not5.i = icmp eq i32 %120, 0, !dbg !56
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %107, float 0x3FC99DA160000000) #2, !dbg !56
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %107, float 0x3FC99DA160000000) #2, !dbg !56
  %.05.i = select i1 %.not5.i, float %122, float %121, !dbg !56
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not6.i = icmp eq i32 %123, 0, !dbg !56
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %107, float 0xBFCFFFE440000000) #2, !dbg !56
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %107, float 0xBFCFFFE440000000) #2, !dbg !56
  %.01.i = select i1 %.not6.i, float %125, float %124, !dbg !56
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not7.i = icmp eq i32 %126, 0, !dbg !56
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %107, float 0x3FD5554F00000000) #2, !dbg !56
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %107, float 0x3FD5554F00000000) #2, !dbg !56
  %.0.i = select i1 %.not7.i, float %128, float %127, !dbg !56
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not8.i = icmp eq i32 %129, 0, !dbg !56
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %107, float -5.000000e-01) #2, !dbg !56
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %107, float -5.000000e-01) #2, !dbg !56
  %.07.i = select i1 %.not8.i, float %131, float %130, !dbg !56
  %132 = fmul float %107, %.07.i, !dbg !56
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not9.i = icmp eq i32 %133, 0, !dbg !56
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float %107, float %107) #2, !dbg !56
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float %107, float %107) #2, !dbg !56
  %.06.i = select i1 %.not9.i, float %135, float %134, !dbg !56
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not10.i = icmp eq i32 %136, 0, !dbg !56
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !56
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !56
  %.04.i = select i1 %.not10.i, float %138, float %137, !dbg !56
  %139 = icmp ugt i32 %98, 2139095039, !dbg !56
  br i1 %139, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !56

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not11.i = icmp eq i32 %140, 0, !dbg !56
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !56
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !56
  %.03.i = select i1 %.not11.i, float %142, float %141, !dbg !56
  br label %__nv_logf.exit, !dbg !56

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !56
  %143 = fcmp olt float %95, 0x3810000000000000, !dbg !56
  %144 = fmul float %95, 0x4160000000000000, !dbg !56
  %.02.i1 = select i1 %143, float %144, float %95, !dbg !56
  %i.i.0.i2 = select i1 %143, float -2.300000e+01, float 0.000000e+00, !dbg !56
  %145 = bitcast float %.02.i1 to i32, !dbg !56
  %146 = add i32 %145, -1059760811, !dbg !56
  %147 = and i32 %146, -8388608, !dbg !56
  %148 = sub i32 %145, %147, !dbg !56
  %149 = bitcast i32 %148 to float, !dbg !56
  %150 = sitofp i32 %147 to float, !dbg !56
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not.i3 = icmp eq i32 %151, 0, !dbg !56
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %150, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !56
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %150, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !56
  %.08.i4 = select i1 %.not.i3, float %153, float %152, !dbg !56
  %154 = fadd float %149, -1.000000e+00, !dbg !56
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not1.i5 = icmp eq i32 %155, 0, !dbg !56
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %154, float 0x3FC2073EC0000000) #2, !dbg !56
  %157 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %154, float 0x3FC2073EC0000000) #2, !dbg !56
  %.010.i6 = select i1 %.not1.i5, float %157, float %156, !dbg !56
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not2.i7 = icmp eq i32 %158, 0, !dbg !56
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %154, float 0xBFBF19B980000000) #2, !dbg !56
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %154, float 0xBFBF19B980000000) #2, !dbg !56
  %.011.i8 = select i1 %.not2.i7, float %160, float %159, !dbg !56
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not3.i9 = icmp eq i32 %161, 0, !dbg !56
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %154, float 0x3FC1E52AA0000000) #2, !dbg !56
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %154, float 0x3FC1E52AA0000000) #2, !dbg !56
  %.012.i10 = select i1 %.not3.i9, float %163, float %162, !dbg !56
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not4.i11 = icmp eq i32 %164, 0, !dbg !56
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %154, float 0xBFC55B1720000000) #2, !dbg !56
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %154, float 0xBFC55B1720000000) #2, !dbg !56
  %.09.i12 = select i1 %.not4.i11, float %166, float %165, !dbg !56
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not5.i13 = icmp eq i32 %167, 0, !dbg !56
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %154, float 0x3FC99DA160000000) #2, !dbg !56
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %154, float 0x3FC99DA160000000) #2, !dbg !56
  %.05.i14 = select i1 %.not5.i13, float %169, float %168, !dbg !56
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not6.i15 = icmp eq i32 %170, 0, !dbg !56
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %154, float 0xBFCFFFE440000000) #2, !dbg !56
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %154, float 0xBFCFFFE440000000) #2, !dbg !56
  %.01.i16 = select i1 %.not6.i15, float %172, float %171, !dbg !56
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not7.i17 = icmp eq i32 %173, 0, !dbg !56
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %154, float 0x3FD5554F00000000) #2, !dbg !56
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %154, float 0x3FD5554F00000000) #2, !dbg !56
  %.0.i18 = select i1 %.not7.i17, float %175, float %174, !dbg !56
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not8.i19 = icmp eq i32 %176, 0, !dbg !56
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %154, float -5.000000e-01) #2, !dbg !56
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %154, float -5.000000e-01) #2, !dbg !56
  %.07.i20 = select i1 %.not8.i19, float %178, float %177, !dbg !56
  %179 = fmul float %154, %.07.i20, !dbg !56
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not9.i21 = icmp eq i32 %180, 0, !dbg !56
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float %154, float %154) #2, !dbg !56
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %179, float %154, float %154) #2, !dbg !56
  %.06.i22 = select i1 %.not9.i21, float %182, float %181, !dbg !56
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not10.i23 = icmp eq i32 %183, 0, !dbg !56
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !56
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !56
  %.04.i24 = select i1 %.not10.i23, float %185, float %184, !dbg !56
  %186 = icmp ugt i32 %145, 2139095039, !dbg !56
  br i1 %186, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !56

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !56
  %.not11.i28 = icmp eq i32 %187, 0, !dbg !56
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !56
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !56
  %.03.i29 = select i1 %.not11.i28, float %189, float %188, !dbg !56
  br label %__nv_logf.exit30, !dbg !56

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !56
  %190 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !56
  %r.i.1.i = select i1 %190, float 0xFFF0000000000000, float %r.i.0.i, !dbg !56
  %191 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !56
  %r.i.1.i26 = select i1 %191, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !56
  %192 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !57
  %193 = bitcast float %r.i.1.i to i32, !dbg !58
  %194 = bitcast float %r.i.1.i26 to i32, !dbg !58
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %193, i32 %194, ptr addrspace(1) %192, i1 %10) #2, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6xje3krxdluzvhdtialwa7vkztuzpjqhjtbs4m7ytbpmo3feorh.py", directory: "inductor_cache/6x")
!4 = !{ptr @triton_poi_fused_add_div_log_ones_like_pow_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_log_ones_like_pow_sum_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_log_ones_like_pow_sum_0", linkageName: "triton_poi_fused_add_div_log_ones_like_pow_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 43, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 31, scope: !7)
!25 = !DILocation(line: 29, column: 49, scope: !7)
!26 = !DILocation(line: 30, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 31, scope: !7)
!28 = !DILocation(line: 30, column: 49, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 49, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 18, scope: !7)
!36 = !DILocation(line: 40, column: 19, scope: !7)
!37 = !DILocation(line: 41, column: 19, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 20, scope: !7)
!40 = !DILocation(line: 45, column: 19, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 48, column: 20, scope: !7)
!44 = !DILocation(line: 49, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 19, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 20, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 57, column: 19, scope: !7)
!51 = !DILocation(line: 58, column: 20, scope: !7)
!52 = !DILocation(line: 59, column: 20, scope: !7)
!53 = !DILocation(line: 60, column: 20, scope: !7)
!54 = !DILocation(line: 61, column: 20, scope: !7)
!55 = !DILocation(line: 62, column: 19, scope: !7)
!56 = !DILocation(line: 63, column: 24, scope: !7)
!57 = !DILocation(line: 64, column: 28, scope: !7)
!58 = !DILocation(line: 64, column: 40, scope: !7)
!59 = !DILocation(line: 64, column: 4, scope: !7)
