; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_div_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 16, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #3, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #3, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #3, !dbg !21
  %21 = bitcast i32 %20 to float, !dbg !21
  %22 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #3, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = fmul float %15, %15, !dbg !24
  %26 = fmul float %18, %18, !dbg !25
  %27 = fadd float %25, %26, !dbg !26
  %28 = fmul float %21, %21, !dbg !27
  %29 = fadd float %27, %28, !dbg !28
  %30 = fmul float %24, %24, !dbg !29
  %31 = fadd float %29, %30, !dbg !30
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %32, 0, !dbg !31
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %33, 0, !dbg !31
  br i1 %.not.i, label %39, label %34, !dbg !31

34:                                               ; preds = %4
  br i1 %.not1.i, label %37, label %35, !dbg !31

35:                                               ; preds = %34
  %36 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %31) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

37:                                               ; preds = %34
  %38 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %31) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

39:                                               ; preds = %4
  br i1 %.not1.i, label %42, label %40, !dbg !31

40:                                               ; preds = %39
  %41 = tail call float @llvm.nvvm.sqrt.rn.f(float %31) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

42:                                               ; preds = %39
  %43 = tail call float @llvm.nvvm.sqrt.approx.f(float %31) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %35, %37, %40, %42
  %.0.i = phi float [ %36, %35 ], [ %38, %37 ], [ %41, %40 ], [ %43, %42 ], !dbg !31
  %44 = bitcast i32 %13 to float, !dbg !16
  %45 = and i32 %7, 16, !dbg !12
  %46 = fadd float %.0.i, 0x3F1A36E2E0000000, !dbg !32
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %15, float %46) #3, !dbg !33
  %48 = fmul float %47, %15, !dbg !34
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %18, float %46) #3, !dbg !35
  %50 = fmul float %49, %18, !dbg !36
  %51 = fadd float %48, %50, !dbg !37
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %21, float %46) #3, !dbg !38
  %53 = fmul float %52, %21, !dbg !39
  %54 = fadd float %51, %53, !dbg !40
  %55 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %24, float %46) #3, !dbg !41
  %56 = fmul float %55, %24, !dbg !42
  %57 = fadd float %54, %56, !dbg !43
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %44, float %57) #3, !dbg !44
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !45
  %60 = icmp eq i32 %45, 0, !dbg !46
  %61 = bitcast float %58 to i32, !dbg !46
  %62 = and i1 %60, %10, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %61, ptr addrspace(1) %59, i1 %62) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cv43davtasfogggh3ao5p2rqua3il6mmsdhqkhhczj2r5b3n5oav.py", directory: "inductor_cache/v4")
!4 = !{ptr @triton_poi_fused_div_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_div_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_div_3", linkageName: "triton_poi_fused_div_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 30, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 31, scope: !7)
!23 = !DILocation(line: 32, column: 20, scope: !7)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 35, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 37, column: 19, scope: !7)
!28 = !DILocation(line: 38, column: 19, scope: !7)
!29 = !DILocation(line: 39, column: 20, scope: !7)
!30 = !DILocation(line: 40, column: 20, scope: !7)
!31 = !DILocation(line: 41, column: 27, scope: !7)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 44, column: 19, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 46, column: 19, scope: !7)
!36 = !DILocation(line: 47, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 19, scope: !7)
!39 = !DILocation(line: 50, column: 20, scope: !7)
!40 = !DILocation(line: 51, column: 20, scope: !7)
!41 = !DILocation(line: 52, column: 20, scope: !7)
!42 = !DILocation(line: 53, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 20, scope: !7)
!44 = !DILocation(line: 55, column: 19, scope: !7)
!45 = !DILocation(line: 56, column: 25, scope: !7)
!46 = !DILocation(line: 56, column: 37, scope: !7)
!47 = !DILocation(line: 56, column: 4, scope: !7)
