//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<32>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_1];
$L__tmp0:
	.loc	1 22 28                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:22:33
	shl.b32 	%r26, %r1, 9;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_2];
	.loc	1 23 44                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:23:44
	mov.u32 	%r27, %tid.x;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_3];
	and.b32  	%r29, %r27, 127;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_4];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_leaky_relu_10_param_5];
	.loc	1 23 23                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:23:23
	or.b32  	%r30, %r26, %r29;
	.loc	1 25 28                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:27:21
	setp.lt.s32 	%p1, %r2, 64;
	.loc	1 23 23                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:23:23
	shl.b32 	%r31, %r30, 6;
	.loc	1 32 35                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:32:35
	add.s32 	%r32, %r31, %r2;
	add.s32 	%r33, %r32, 8192;
	add.s32 	%r34, %r32, 16384;
	add.s32 	%r35, %r32, 24576;
	.loc	1 32 30                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:32:30
	mul.wide.s32 	%rd16, %r32, 4;
	add.s64 	%rd1, %rd10, %rd16;
	mul.wide.s32 	%rd17, %r33, 4;
	add.s64 	%rd2, %rd10, %rd17;
	mul.wide.s32 	%rd18, %r34, 4;
	add.s64 	%rd3, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r35, 4;
	add.s64 	%rd4, %rd10, %rd19;
	.loc	1 32 43                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:33:30
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd5, %rd11, %rd20;
	.loc	1 33 35                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:34:30
	add.s64 	%rd6, %rd12, %rd20;
	.loc	1 34 35                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:34:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	.loc	1 35 31                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:35:31
	add.s64 	%rd7, %rd13, %rd20;
	.loc	1 35 36                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:36:31
	add.s64 	%rd8, %rd14, %rd20;
	.loc	1 36 36                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:39:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 40 26                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:40:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 43                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:32:43
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r4;
	mov.b32 	%f7, %r3;
	.loc	1 23 44                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:23:44
	shl.b32 	%r36, %r27, 2;
	and.b32  	%r37, %r36, 508;
	.loc	1 23 23                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:23:23
	or.b32  	%r38, %r26, %r37;
	.loc	1 31 19                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:31:19
	bfe.s32 	%r39, %r1, 22, 1;
	shr.u32 	%r40, %r39, 24;
	add.s32 	%r41, %r38, %r40;
	.loc	1 30 19                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:30:19
	and.b32  	%r42, %r41, -256;
	sub.s32 	%r43, %r38, %r42;
	.loc	1 42 18                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:42:18
	mov.b32 	%r13, %f3;
	mov.b32 	%r12, 1065353216;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f8, %r11;
	.loc	1 37 18                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:37:18
	mov.b32 	%f9, %r7;
	sub.f32 	%f10, %f7, %f9;
	sub.f32 	%f11, %f6, %f9;
	sub.f32 	%f12, %f5, %f9;
	sub.f32 	%f13, %f4, %f9;
	.loc	1 45 19                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:45:19
	mul.f32 	%f14, %f13, %f8;
	mul.f32 	%f15, %f12, %f8;
	mul.f32 	%f16, %f11, %f8;
	mul.f32 	%f17, %f10, %f8;
	.loc	1 46 20                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:46:20
	mov.b32 	%f18, %r9;
	.loc	1 47 20                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:47:20
	mov.b32 	%f19, %r10;
	fma.rn.f32 	%f20, %f17, %f18, %f19;
	fma.rn.f32 	%f21, %f16, %f18, %f19;
	fma.rn.f32 	%f22, %f15, %f18, %f19;
	fma.rn.f32 	%f23, %f14, %f18, %f19;
	.loc	1 49 20                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:49:20
	setp.gt.f32 	%p14, %f23, 0f00000000;
	setp.gt.f32 	%p15, %f22, 0f00000000;
	setp.gt.f32 	%p16, %f21, 0f00000000;
	setp.gt.f32 	%p17, %f20, 0f00000000;
	.loc	1 51 20                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:51:20
	mul.f32 	%f24, %f20, 0f3DCCCCCD;
	mul.f32 	%f25, %f21, 0f3DCCCCCD;
	mul.f32 	%f26, %f22, 0f3DCCCCCD;
	mul.f32 	%f27, %f23, 0f3DCCCCCD;
	.loc	1 52 35                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:52:35
	selp.f32 	%f28, %f20, %f24, %p17;
	selp.f32 	%f29, %f21, %f25, %p16;
	selp.f32 	%f30, %f22, %f26, %p15;
	selp.f32 	%f31, %f23, %f27, %p14;
	.loc	1 53 34                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:34
	shl.b32 	%r44, %r2, 8;
	.loc	1 53 30                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:30
	add.s32 	%r45, %r43, %r44;
	.loc	1 53 45                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:45
	shl.b32 	%r46, %r41, 6;
	and.b32  	%r47, %r46, -16384;
	.loc	1 53 39                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:39
	add.s32 	%r48, %r45, %r47;
	.loc	1 53 25                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:25
	mul.wide.s32 	%rd21, %r48, 4;
	add.s64 	%rd9, %rd15, %rd21;
	.loc	1 53 57                         // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:57
	shl.b32 	%r49, %r29, 2;
	mov.u32 	%r50, global_smem;
	add.s32 	%r14, %r50, %r49;
	mov.b32 	%r15, %f28;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r14, 512;
	mov.b32 	%r17, %f29;
	// begin inline asm
	@%p9 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	add.s32 	%r18, %r14, 1024;
	mov.b32 	%r19, %f30;
	// begin inline asm
	@%p9 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r14, 1536;
	mov.b32 	%r21, %f31;
	// begin inline asm
	@%p9 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r51, %r37, 2;
	add.s32 	%r52, %r50, %r51;
	ld.shared.v4.u32 	{%r22, %r23, %r24, %r25}, [%r52];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	.loc	1 53 4                          // coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py:53:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/oi/coiqsjkr3vv6zlidd3p4joffdnxcfoqpuqfnkfkao4nilx26n7dy.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 105
.b8 113
.b8 115
.b8 106
.b8 107
.b8 114
.b8 51
.b8 118
.b8 118
.b8 54
.b8 122
.b8 108
.b8 105
.b8 100
.b8 100
.b8 51
.b8 112
.b8 52
.b8 106
.b8 111
.b8 102
.b8 102
.b8 100
.b8 110
.b8 120
.b8 99
.b8 102
.b8 111
.b8 113
.b8 112
.b8 117
.b8 113
.b8 102
.b8 110
.b8 107
.b8 102
.b8 107
.b8 97
.b8 111
.b8 52
.b8 110
.b8 105
.b8 108
.b8 120
.b8 50
.b8 54
.b8 110
.b8 55
.b8 100
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
