; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clamp_22(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %4 = shl i32 %3, 3, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 24, !dbg !12
  %7 = and i32 %5, 7, !dbg !12
  %8 = or disjoint i32 %4, %7, !dbg !13
  %9 = icmp slt i32 %8, 8, !dbg !14
  %10 = sitofp i32 %8 to float, !dbg !15
  %11 = fadd float %10, 5.000000e-01, !dbg !16
  %12 = fmul float %11, 5.000000e-01, !dbg !17
  %13 = fadd float %12, -5.000000e-01, !dbg !18
  %14 = fcmp ogt float %13, 0.000000e+00, !dbg !19
  %15 = select i1 %14, float %13, float 0.000000e+00, !dbg !23
  %16 = fptosi float %15 to i32, !dbg !24
  %17 = tail call i32 @llvm.smin.i32(i32 %16, i32 2), !dbg !25
  %narrow = add nsw i32 %17, 1, !dbg !25
  %18 = sext i32 %narrow to i64, !dbg !25
  %19 = sext i32 %8 to i64, !dbg !27
  %20 = getelementptr i64, ptr addrspace(1) %0, i64 %19, !dbg !27
  %21 = icmp eq i32 %6, 0, !dbg !28
  %22 = and i1 %21, %9, !dbg !28
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %18, ptr addrspace(1) %20, i1 %22) #2, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chqhqvndukmk4mxkrxqsfrbgahxyvxs5ywtsi6xto7vxhbpc7zrx.py", directory: "inductor_cache/hq")
!4 = !{ptr @triton_poi_fused_add_clamp_22, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clamp_22, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clamp_22", linkageName: "triton_poi_fused_add_clamp_22", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 18, scope: !7)
!17 = !DILocation(line: 29, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 18, scope: !7)
!19 = !DILocation(line: 118, column: 15, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 32, column: 40, scope: !7)
!23 = !DILocation(line: 121, column: 29, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 33, column: 19, scope: !7)
!25 = !DILocation(line: 113, column: 29, scope: !20, inlinedAt: !26)
!26 = !DILocation(line: 37, column: 42, scope: !7)
!27 = !DILocation(line: 38, column: 25, scope: !7)
!28 = !DILocation(line: 38, column: 37, scope: !7)
!29 = !DILocation(line: 38, column: 4, scope: !7)
