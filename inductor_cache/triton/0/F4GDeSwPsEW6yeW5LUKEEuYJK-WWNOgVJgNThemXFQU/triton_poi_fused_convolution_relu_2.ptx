//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_2 // -- Begin function triton_poi_fused_convolution_relu_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_2
.visible .entry triton_poi_fused_convolution_relu_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_2,
	.param .u32 triton_poi_fused_convolution_relu_2_param_3,
	.param .u32 triton_poi_fused_convolution_relu_2_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<75>;
	.reg .b32 	%r<152>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:19:0

// %bb.0:
	ld.param.u64 	%rd22, [triton_poi_fused_convolution_relu_2_param_0];
	ld.param.u64 	%rd23, [triton_poi_fused_convolution_relu_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:22:33
	shl.b32 	%r71, %r1, 4;
	ld.param.u64 	%rd24, [triton_poi_fused_convolution_relu_2_param_2];
	.loc	1 23 44                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:23:44
	mov.u32 	%r72, %tid.x;
	shl.b32 	%r73, %r72, 2;
	and.b32  	%r74, %r73, 12;
	.loc	1 23 23                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:23:23
	or.b32  	%r75, %r71, %r74;
	or.b32  	%r76, %r71, 1;
	or.b32  	%r77, %r71, 2;
	or.b32  	%r78, %r71, 3;
	or.b32  	%r79, %r71, 4;
	or.b32  	%r80, %r71, 5;
	or.b32  	%r81, %r71, 6;
	or.b32  	%r82, %r71, 7;
	or.b32  	%r83, %r71, 8;
	or.b32  	%r84, %r71, 9;
	or.b32  	%r85, %r71, 10;
	or.b32  	%r86, %r71, 11;
	or.b32  	%r87, %r71, 12;
	or.b32  	%r88, %r71, 13;
	or.b32  	%r89, %r71, 14;
	or.b32  	%r90, %r71, 15;
	.loc	1 24 21                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:24:21
	setp.lt.s32 	%p5, %r75, 256;
	setp.lt.s32 	%p38, %r71, 256;
	setp.lt.s32 	%p39, %r76, 256;
	setp.lt.s32 	%p40, %r77, 256;
	setp.lt.s32 	%p41, %r78, 256;
	setp.lt.s32 	%p42, %r79, 256;
	setp.lt.s32 	%p43, %r80, 256;
	setp.lt.s32 	%p44, %r81, 256;
	setp.lt.s32 	%p45, %r82, 256;
	setp.lt.s32 	%p46, %r83, 256;
	setp.lt.s32 	%p47, %r84, 256;
	setp.lt.s32 	%p48, %r85, 256;
	setp.lt.s32 	%p49, %r86, 256;
	setp.lt.s32 	%p50, %r87, 256;
	setp.lt.s32 	%p51, %r88, 256;
	setp.lt.s32 	%p52, %r89, 256;
	setp.lt.s32 	%p53, %r90, 256;
	.loc	1 25 28                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:25:33
	shl.b32 	%r91, %r2, 8;
	.loc	1 26 44                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:26:44
	bfe.u32 	%r92, %r72, 2, 6;
	and.b32  	%r93, %r72, 255;
	.loc	1 26 23                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:26:23
	or.b32  	%r94, %r91, %r92;
	or.b32  	%r95, %r94, 64;
	or.b32  	%r96, %r94, 128;
	or.b32  	%r97, %r94, 192;
	or.b32  	%r98, %r91, %r93;
	.loc	1 27 21                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:27:21
	setp.lt.s32 	%p54, %r94, 961;
	setp.lt.s32 	%p55, %r95, 961;
	setp.lt.s32 	%p56, %r96, 961;
	setp.lt.s32 	%p57, %r97, 961;
	setp.lt.s32 	%p58, %r98, 961;
	.loc	1 30 19                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:30:19
	shr.s32 	%r100, %r75, 31;
	shr.u32 	%r101, %r100, 26;
	add.s32 	%r102, %r75, %r101;
	shr.s32 	%r103, %r102, 6;
	.loc	1 29 19                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:29:19
	and.b32  	%r104, %r102, -64;
	sub.s32 	%r105, %r75, %r104;
	.loc	1 32 38                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:38
	shl.b32 	%r106, %r94, 6;
	shl.b32 	%r107, %r95, 6;
	shl.b32 	%r108, %r96, 6;
	shl.b32 	%r109, %r97, 6;
	.loc	1 32 35                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:35
	mad.lo.s32 	%r110, %r103, 61504, %r105;
	.loc	1 32 43                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:43
	add.s32 	%r111, %r110, %r106;
	add.s32 	%r112, %r110, %r107;
	add.s32 	%r113, %r110, %r108;
	add.s32 	%r114, %r110, %r109;
	.loc	1 32 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:30
	mul.wide.s32 	%rd25, %r111, 4;
	add.s64 	%rd1, %rd22, %rd25;
	mul.wide.s32 	%rd26, %r112, 4;
	add.s64 	%rd2, %rd22, %rd26;
	mul.wide.s32 	%rd27, %r113, 4;
	add.s64 	%rd3, %rd22, %rd27;
	mul.wide.s32 	%rd28, %r114, 4;
	add.s64 	%rd4, %rd22, %rd28;
	.loc	1 32 62                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:62
	and.pred  	%p1, %p5, %p54;
	and.pred  	%p2, %p55, %p5;
	and.pred  	%p3, %p56, %p5;
	and.pred  	%p4, %p57, %p5;
	and.pred  	%p22, %p38, %p58;
	and.pred  	%p23, %p39, %p58;
	and.pred  	%p24, %p40, %p58;
	and.pred  	%p25, %p41, %p58;
	and.pred  	%p26, %p42, %p58;
	and.pred  	%p27, %p43, %p58;
	and.pred  	%p28, %p44, %p58;
	and.pred  	%p29, %p45, %p58;
	and.pred  	%p30, %p46, %p58;
	and.pred  	%p31, %p47, %p58;
	and.pred  	%p32, %p48, %p58;
	and.pred  	%p33, %p49, %p58;
	and.pred  	%p34, %p50, %p58;
	and.pred  	%p35, %p51, %p58;
	and.pred  	%p36, %p52, %p58;
	and.pred  	%p37, %p53, %p58;
	.loc	1 32 54                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:54
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:33:30
	mul.wide.s32 	%rd29, %r105, 4;
	add.s64 	%rd5, %rd23, %rd29;
	.loc	1 33 35                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 32 54                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:54
	mov.b32 	%f1, %r18;
	mov.b32 	%f2, %r17;
	mov.b32 	%f3, %r16;
	mov.b32 	%f4, %r15;
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r13;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r11;
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r9;
	mov.b32 	%f11, %r8;
	mov.b32 	%f12, %r7;
	mov.b32 	%f13, %r6;
	mov.b32 	%f14, %r5;
	mov.b32 	%f15, %r4;
	mov.b32 	%f16, %r3;
	.loc	1 33 35                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:33:35
	mov.b32 	%f17, %r22;
	mov.b32 	%f18, %r21;
	mov.b32 	%f19, %r20;
	mov.b32 	%f20, %r19;
	.loc	1 34 18                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:34:18
	add.f32 	%f21, %f20, %f16;
	add.f32 	%f22, %f19, %f15;
	add.f32 	%f23, %f18, %f14;
	add.f32 	%f24, %f17, %f13;
	add.f32 	%f25, %f20, %f12;
	add.f32 	%f26, %f19, %f11;
	add.f32 	%f27, %f18, %f10;
	add.f32 	%f28, %f17, %f9;
	add.f32 	%f29, %f20, %f8;
	add.f32 	%f30, %f19, %f7;
	add.f32 	%f31, %f18, %f6;
	add.f32 	%f32, %f17, %f5;
	add.f32 	%f33, %f20, %f4;
	add.f32 	%f34, %f19, %f3;
	add.f32 	%f35, %f18, %f2;
	add.f32 	%f36, %f17, %f1;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p59, %f36, 0f00000000;
	setp.lt.f32 	%p60, %f35, 0f00000000;
	setp.lt.f32 	%p61, %f34, 0f00000000;
	setp.lt.f32 	%p62, %f33, 0f00000000;
	setp.lt.f32 	%p63, %f32, 0f00000000;
	setp.lt.f32 	%p64, %f31, 0f00000000;
	setp.lt.f32 	%p65, %f30, 0f00000000;
	setp.lt.f32 	%p66, %f29, 0f00000000;
	setp.lt.f32 	%p67, %f28, 0f00000000;
	setp.lt.f32 	%p68, %f27, 0f00000000;
	setp.lt.f32 	%p69, %f26, 0f00000000;
	setp.lt.f32 	%p70, %f25, 0f00000000;
	setp.lt.f32 	%p71, %f24, 0f00000000;
	setp.lt.f32 	%p72, %f23, 0f00000000;
	setp.lt.f32 	%p73, %f22, 0f00000000;
	setp.lt.f32 	%p74, %f21, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, 0f00000000, %f21, %p74;
	selp.f32 	%f38, 0f00000000, %f22, %p73;
	selp.f32 	%f39, 0f00000000, %f23, %p72;
	selp.f32 	%f40, 0f00000000, %f24, %p71;
	selp.f32 	%f41, 0f00000000, %f25, %p70;
	selp.f32 	%f42, 0f00000000, %f26, %p69;
	selp.f32 	%f43, 0f00000000, %f27, %p68;
	selp.f32 	%f44, 0f00000000, %f28, %p67;
	selp.f32 	%f45, 0f00000000, %f29, %p66;
	selp.f32 	%f46, 0f00000000, %f30, %p65;
	selp.f32 	%f47, 0f00000000, %f31, %p64;
	selp.f32 	%f48, 0f00000000, %f32, %p63;
	selp.f32 	%f49, 0f00000000, %f33, %p62;
	selp.f32 	%f50, 0f00000000, %f34, %p61;
	selp.f32 	%f51, 0f00000000, %f35, %p60;
	selp.f32 	%f52, 0f00000000, %f36, %p59;
$L__tmp2:
	.loc	1 37 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:30
	mad.lo.s32 	%r115, %r1, 15376, %r98;
	mad.lo.s32 	%r116, %r76, 961, %r98;
	add.s32 	%r117, %r116, 961;
	add.s32 	%r118, %r116, 1922;
	add.s32 	%r119, %r116, 2883;
	add.s32 	%r120, %r116, 3844;
	add.s32 	%r121, %r116, 4805;
	add.s32 	%r122, %r116, 5766;
	add.s32 	%r123, %r116, 6727;
	add.s32 	%r124, %r116, 7688;
	add.s32 	%r125, %r116, 8649;
	add.s32 	%r126, %r116, 9610;
	add.s32 	%r127, %r116, 10571;
	add.s32 	%r128, %r116, 11532;
	add.s32 	%r129, %r116, 12493;
	add.s32 	%r130, %r116, 13454;
	.loc	1 37 25                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:25
	mul.wide.s32 	%rd30, %r115, 4;
	add.s64 	%rd6, %rd24, %rd30;
	mul.wide.s32 	%rd31, %r116, 4;
	add.s64 	%rd7, %rd24, %rd31;
	mul.wide.s32 	%rd32, %r117, 4;
	add.s64 	%rd8, %rd24, %rd32;
	mul.wide.s32 	%rd33, %r118, 4;
	add.s64 	%rd9, %rd24, %rd33;
	mul.wide.s32 	%rd34, %r119, 4;
	add.s64 	%rd10, %rd24, %rd34;
	mul.wide.s32 	%rd35, %r120, 4;
	add.s64 	%rd11, %rd24, %rd35;
	mul.wide.s32 	%rd36, %r121, 4;
	add.s64 	%rd12, %rd24, %rd36;
	mul.wide.s32 	%rd37, %r122, 4;
	add.s64 	%rd13, %rd24, %rd37;
	mul.wide.s32 	%rd38, %r123, 4;
	add.s64 	%rd14, %rd24, %rd38;
	mul.wide.s32 	%rd39, %r124, 4;
	add.s64 	%rd15, %rd24, %rd39;
	mul.wide.s32 	%rd40, %r125, 4;
	add.s64 	%rd16, %rd24, %rd40;
	mul.wide.s32 	%rd41, %r126, 4;
	add.s64 	%rd17, %rd24, %rd41;
	mul.wide.s32 	%rd42, %r127, 4;
	add.s64 	%rd18, %rd24, %rd42;
	mul.wide.s32 	%rd43, %r128, 4;
	add.s64 	%rd19, %rd24, %rd43;
	mul.wide.s32 	%rd44, %r129, 4;
	add.s64 	%rd20, %rd24, %rd44;
	mul.wide.s32 	%rd45, %r130, 4;
	add.s64 	%rd21, %rd24, %rd45;
	.loc	1 37 45                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:45
	shl.b32 	%r131, %r72, 10;
	and.b32  	%r132, %r131, 3072;
	or.b32  	%r133, %r132, %r92;
	shr.u32 	%r134, %r132, 6;
	mov.u32 	%r135, global_smem;
	add.s32 	%r136, %r135, %r134;
	shl.b32 	%r137, %r133, 2;
	add.s32 	%r23, %r136, %r137;
	mov.b32 	%r24, %f37;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r138, %r132, 256;
	shr.u32 	%r139, %r138, 6;
	add.s32 	%r140, %r135, %r139;
	add.s32 	%r141, %r140, %r137;
	add.s32 	%r25, %r141, 1024;
	mov.b32 	%r26, %f38;
	// begin inline asm
	@%p6 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r142, %r132, 512;
	shr.u32 	%r143, %r142, 6;
	add.s32 	%r144, %r135, %r143;
	add.s32 	%r145, %r144, %r137;
	add.s32 	%r27, %r145, 2048;
	mov.b32 	%r28, %f39;
	// begin inline asm
	@%p6 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r146, %r132, 768;
	shr.u32 	%r147, %r146, 6;
	add.s32 	%r148, %r135, %r147;
	add.s32 	%r149, %r148, %r137;
	add.s32 	%r29, %r149, 3072;
	mov.b32 	%r30, %f40;
	// begin inline asm
	@%p6 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r23, 256;
	mov.b32 	%r32, %f41;
	// begin inline asm
	@%p6 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r141, 1280;
	mov.b32 	%r34, %f42;
	// begin inline asm
	@%p6 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r145, 2304;
	mov.b32 	%r36, %f43;
	// begin inline asm
	@%p6 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r149, 3328;
	mov.b32 	%r38, %f44;
	// begin inline asm
	@%p6 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r23, 512;
	mov.b32 	%r40, %f45;
	// begin inline asm
	@%p6 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r141, 1536;
	mov.b32 	%r42, %f46;
	// begin inline asm
	@%p6 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r145, 2560;
	mov.b32 	%r44, %f47;
	// begin inline asm
	@%p6 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r149, 3584;
	mov.b32 	%r46, %f48;
	// begin inline asm
	@%p6 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r23, 768;
	mov.b32 	%r48, %f49;
	// begin inline asm
	@%p6 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r141, 1792;
	mov.b32 	%r50, %f50;
	// begin inline asm
	@%p6 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r145, 2816;
	mov.b32 	%r52, %f51;
	// begin inline asm
	@%p6 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r149, 3840;
	mov.b32 	%r54, %f52;
	// begin inline asm
	@%p6 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r150, %r93, 2;
	add.s32 	%r151, %r135, %r150;
	ld.shared.u32 	%r55, [%r151];
	ld.shared.u32 	%r56, [%r151+1028];
	ld.shared.u32 	%r57, [%r151+2056];
	ld.shared.u32 	%r58, [%r151+3084];
	ld.shared.u32 	%r59, [%r151+4112];
	ld.shared.u32 	%r60, [%r151+5140];
	ld.shared.u32 	%r61, [%r151+6168];
	ld.shared.u32 	%r62, [%r151+7196];
	ld.shared.u32 	%r63, [%r151+8224];
	ld.shared.u32 	%r64, [%r151+9252];
	ld.shared.u32 	%r65, [%r151+10280];
	ld.shared.u32 	%r66, [%r151+11308];
	ld.shared.u32 	%r67, [%r151+12336];
	ld.shared.u32 	%r68, [%r151+13364];
	ld.shared.u32 	%r69, [%r151+14392];
	ld.shared.u32 	%r70, [%r151+15420];
	// begin inline asm
	@%p22 st.global.b32 [ %rd6 + 0 ], { %r55 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd7 + 0 ], { %r56 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.b32 [ %rd8 + 0 ], { %r57 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.b32 [ %rd9 + 0 ], { %r58 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.b32 [ %rd10 + 0 ], { %r59 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.b32 [ %rd11 + 0 ], { %r60 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.b32 [ %rd12 + 0 ], { %r61 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.b32 [ %rd13 + 0 ], { %r62 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.b32 [ %rd14 + 0 ], { %r63 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.b32 [ %rd15 + 0 ], { %r64 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.b32 [ %rd16 + 0 ], { %r65 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.b32 [ %rd17 + 0 ], { %r66 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.b32 [ %rd18 + 0 ], { %r67 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.b32 [ %rd19 + 0 ], { %r68 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.b32 [ %rd20 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.b32 [ %rd21 + 0 ], { %r70 };
	// end inline asm
	.loc	1 37 4                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/st/cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 116
.b8 97
.b8 97
.b8 114
.b8 115
.b8 110
.b8 98
.b8 101
.b8 109
.b8 117
.b8 52
.b8 100
.b8 97
.b8 101
.b8 110
.b8 119
.b8 114
.b8 119
.b8 50
.b8 105
.b8 118
.b8 51
.b8 108
.b8 98
.b8 101
.b8 53
.b8 115
.b8 112
.b8 104
.b8 117
.b8 97
.b8 109
.b8 100
.b8 120
.b8 114
.b8 119
.b8 53
.b8 101
.b8 118
.b8 112
.b8 107
.b8 106
.b8 104
.b8 121
.b8 122
.b8 104
.b8 53
.b8 112
.b8 118
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
