//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0 // -- Begin function triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0
.visible .entry triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_3,
	.param .u32 triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:21:33
	shl.b32 	%r19, %r1, 7;
	ld.param.u64 	%rd11, [triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_div_mean_mul_sqrt_sub_var_0_param_3];
	.loc	1 22 36                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:23:21
	setp.lt.s32 	%p1, %r22, 256;
	.loc	1 27 21                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:27:21
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 4;
	.loc	1 25 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:25:19
	and.b32  	%r28, %r26, -16;
	sub.s32 	%r29, %r22, %r28;
	.loc	1 26 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:26:19
	bfe.s32 	%r30, %r1, 24, 1;
	shr.u32 	%r31, %r30, 26;
	add.s32 	%r32, %r22, %r31;
	.loc	1 27 27                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:27:27
	shr.u32 	%r33, %r27, 30;
	add.s32 	%r34, %r27, %r33;
	and.b32  	%r35, %r34, -4;
	sub.s32 	%r36, %r27, %r35;
	.loc	1 28 30                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:28:30
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd1, %rd9, %rd13;
	.loc	1 28 35                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:28:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 38                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:29:38
	and.b32  	%r37, %r32, -64;
	.loc	1 29 35                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:29:35
	add.s32 	%r38, %r37, %r29;
	.loc	1 29 30                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:29:30
	mul.wide.s32 	%rd14, %r38, 4;
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 29 43                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:29:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 30 40                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:30:40
	add.s32 	%r39, %r38, 16;
	.loc	1 30 30                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:30:30
	mul.wide.s32 	%rd15, %r39, 4;
	add.s64 	%rd3, %rd9, %rd15;
	.loc	1 30 48                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:30:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 31 40                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:31:40
	add.s32 	%r40, %r38, 32;
	.loc	1 31 30                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:31:30
	mul.wide.s32 	%rd16, %r40, 4;
	add.s64 	%rd4, %rd9, %rd16;
	.loc	1 31 48                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:31:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 32 40                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:32:40
	add.s32 	%r41, %r38, 48;
	.loc	1 32 30                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:32:30
	mul.wide.s32 	%rd17, %r41, 4;
	add.s64 	%rd5, %rd9, %rd17;
	.loc	1 32 48                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:32:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 33 31                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:33:31
	mul.wide.s32 	%rd18, %r36, 4;
	add.s64 	%rd6, %rd10, %rd18;
	.loc	1 33 36                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:33:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 34 31                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:34:31
	add.s64 	%rd7, %rd11, %rd18;
	.loc	1 34 36                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:34:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 35 18                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:35:18
	add.f32 	%f5, %f1, %f2;
	.loc	1 36 18                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:36:18
	add.f32 	%f6, %f5, %f3;
	.loc	1 37 18                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:37:18
	add.f32 	%f7, %f6, %f4;
	.loc	1 39 18                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:39:18
	mov.b32 	%r10, %f7;
	mov.b32 	%r11, 1082130432;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 41 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:41:19
	sub.f32 	%f9, %f1, %f8;
	.loc	1 43 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:43:19
	sub.f32 	%f10, %f2, %f8;
	.loc	1 44 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:44:20
	mul.f32 	%f11, %f10, %f10;
	.loc	1 45 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:45:20
	fma.rn.f32 	%f12, %f9, %f9, %f11;
	.loc	1 46 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:46:19
	sub.f32 	%f13, %f3, %f8;
	.loc	1 48 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:48:20
	fma.rn.f32 	%f14, %f13, %f13, %f12;
	.loc	1 49 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:49:19
	sub.f32 	%f15, %f4, %f8;
	.loc	1 51 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:51:20
	fma.rn.f32 	%f16, %f15, %f15, %f14;
	.loc	1 52 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:52:20
	mov.b32 	%r13, %f16;
	// begin inline asm
	div.full.f32 %r12, %r13, %r11;
	// end inline asm
	mov.b32 	%f17, %r12;
	.loc	1 54 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:54:20
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 55 27                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:55:27
	sqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 28 35                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:28:35
	mov.b32 	%f20, %r2;
	.loc	1 40 19                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:40:19
	sub.f32 	%f21, %f20, %f8;
	.loc	1 34 36                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:34:36
	mov.b32 	%f22, %r8;
	.loc	1 33 36                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:33:36
	mov.b32 	%f23, %r7;
	.loc	1 56 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:56:20
	mov.b32 	%r17, %f19;
	mov.b32 	%r16, %f21;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f24, %r15;
	.loc	1 58 20                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:58:20
	fma.rn.f32 	%f25, %f24, %f23, %f22;
	.loc	1 59 25                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:59:25
	add.s64 	%rd8, %rd12, %rd13;
	.loc	1 59 37                         // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:59:37
	mov.b32 	%r18, %f25;
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r18 };
	// end inline asm
	.loc	1 59 4                          // ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py:59:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cm/ccmnu4seipyx2lkmna6egcgb2zjvcowqu2h6tewrqtcrcgkrpsh2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 109
.b8 110
.b8 117
.b8 52
.b8 115
.b8 101
.b8 105
.b8 112
.b8 121
.b8 120
.b8 50
.b8 108
.b8 107
.b8 109
.b8 110
.b8 97
.b8 54
.b8 101
.b8 103
.b8 99
.b8 103
.b8 98
.b8 50
.b8 122
.b8 106
.b8 118
.b8 99
.b8 111
.b8 119
.b8 113
.b8 117
.b8 50
.b8 104
.b8 54
.b8 116
.b8 101
.b8 119
.b8 114
.b8 113
.b8 116
.b8 99
.b8 114
.b8 99
.b8 103
.b8 107
.b8 114
.b8 112
.b8 115
.b8 104
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
