; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clone_sigmoid_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = srem i32 %11, 4, !dbg !15
  %14 = sdiv i32 %11, 64, !dbg !16
  %15 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !17
  %16 = shufflevector <2 x i32> %15, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %17 = sdiv <2 x i32> %16, <i32 16, i32 4>, !dbg !17
  %18 = srem <2 x i32> %17, splat (i32 4), !dbg !18
  %19 = shl nsw <2 x i32> %18, <i32 2, i32 4>, !dbg !19
  %20 = shl nsw i32 %14, 6, !dbg !20
  %21 = add i32 %20, %13, !dbg !21
  %22 = extractelement <2 x i32> %19, i64 0, !dbg !22
  %23 = add i32 %21, %22, !dbg !22
  %24 = extractelement <2 x i32> %19, i64 1, !dbg !23
  %25 = add i32 %23, %24, !dbg !23
  %26 = sext i32 %25 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %12) #1, !dbg !25
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !25
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !25
  %31 = bitcast i32 %29 to float, !dbg !25
  %32 = bitcast i32 %30 to float, !dbg !25
  %33 = fsub float 0.000000e+00, %31, !dbg !26
  %34 = fsub float 0.000000e+00, %32, !dbg !26
  %35 = fmul float %33, 0x3FF7154760000000, !dbg !30
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #1, !dbg !30
  %37 = fmul float %34, 0x3FF7154760000000, !dbg !30
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #1, !dbg !30
  %39 = fadd float %36, 1.000000e+00, !dbg !31
  %40 = fadd float %38, 1.000000e+00, !dbg !31
  %41 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %39) #1, !dbg !32
  %42 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %40) #1, !dbg !32
  %43 = fadd float %41, 0x3EB0C6F7A0000000, !dbg !33
  %44 = fadd float %42, 0x3EB0C6F7A0000000, !dbg !33
  %45 = sext i32 %11 to i64, !dbg !34
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !34
  %47 = bitcast float %43 to i32, !dbg !35
  %48 = bitcast float %44 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %47, i32 %48, ptr addrspace(1) %46, i1 %12) #1, !dbg !35
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !36
  %50 = bitcast float %41 to i32, !dbg !37
  %51 = bitcast float %42 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %50, i32 %51, ptr addrspace(1) %49, i1 %12) #1, !dbg !37
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %45, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %47, i32 %48, ptr addrspace(1) %52, i1 %12) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ci4ui6jodjgt5ajnbsxq4nrwbird2yfaxo6engdpxnwnb2btioof.py", directory: "inductor_cache/i4")
!4 = !{ptr @triton_poi_fused_add_clone_sigmoid_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clone_sigmoid_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clone_sigmoid_1", linkageName: "triton_poi_fused_add_clone_sigmoid_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 27, scope: !7)
!19 = !DILocation(line: 29, column: 37, scope: !7)
!20 = !DILocation(line: 29, column: 53, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 50, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 58, scope: !7)
!26 = !DILocation(line: 47, column: 30, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!29 = !DILocation(line: 30, column: 22, scope: !7)
!30 = !DILocation(line: 47, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 47, column: 20, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 47, column: 16, scope: !27, inlinedAt: !29)
!33 = !DILocation(line: 32, column: 18, scope: !7)
!34 = !DILocation(line: 33, column: 25, scope: !7)
!35 = !DILocation(line: 33, column: 36, scope: !7)
!36 = !DILocation(line: 34, column: 25, scope: !7)
!37 = !DILocation(line: 34, column: 36, scope: !7)
!38 = !DILocation(line: 35, column: 25, scope: !7)
!39 = !DILocation(line: 35, column: 36, scope: !7)
!40 = !DILocation(line: 35, column: 4, scope: !7)
