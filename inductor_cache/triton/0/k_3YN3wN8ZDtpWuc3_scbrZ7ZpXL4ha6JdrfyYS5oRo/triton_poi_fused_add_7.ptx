//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_7  // -- Begin function triton_poi_fused_add_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_7
.visible .entry triton_poi_fused_add_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_7_param_2,
	.param .u32 triton_poi_fused_add_7_param_3,
	.param .u32 triton_poi_fused_add_7_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_7_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:22:33
	shl.b32 	%r19, %r1, 4;
	ld.param.u64 	%rd7, [triton_poi_fused_add_7_param_2];
	.loc	1 23 44                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:23:44
	mov.u32 	%r20, %tid.x;
	shr.u32 	%r21, %r20, 1;
	bfe.u32 	%r22, %r20, 1, 2;
	and.b32  	%r23, %r21, 4;
	and.b32  	%r24, %r21, 8;
	and.b32  	%r25, %r20, 1;
	shl.b32 	%r26, %r25, 1;
	shl.b32 	%r27, %r20, 1;
	and.b32  	%r28, %r27, 14;
	or.b32  	%r29, %r23, %r22;
	or.b32  	%r30, %r29, %r24;
	.loc	1 23 23                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:23:23
	or.b32  	%r31, %r30, %r19;
	or.b32  	%r32, %r19, %r28;
	.loc	1 24 21                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:24:21
	setp.lt.s32 	%p9, %r31, 16;
	setp.lt.s32 	%p10, %r32, 16;
	.loc	1 25 28                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:25:33
	shl.b32 	%r33, %r2, 2;
	.loc	1 26 44                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:26:44
	bfe.u32 	%r34, %r20, 3, 2;
	.loc	1 26 23                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:26:23
	or.b32  	%r35, %r33, %r26;
	or.b32  	%r36, %r34, %r33;
	.loc	1 27 21                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:27:21
	setp.lt.s32 	%p2, %r35, 4;
	setp.lt.s32 	%p11, %r36, 4;
	.loc	1 31 19                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:31:19
	shr.s32 	%r38, %r32, 31;
	shr.u32 	%r39, %r38, 30;
	add.s32 	%r40, %r32, %r39;
	.loc	1 30 19                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:30:19
	and.b32  	%r41, %r40, -4;
	sub.s32 	%r42, %r32, %r41;
	.loc	1 32 41                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:32:41
	shl.b32 	%r43, %r31, 2;
	.loc	1 32 39                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:32:39
	add.s32 	%r44, %r35, %r43;
	.loc	1 32 34                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:32:34
	mul.wide.s32 	%rd8, %r44, 4;
	add.s64 	%rd1, %rd5, %rd8;
	.loc	1 32 54                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:32:54
	and.pred  	%p1, %p9, %p2;
	and.pred  	%p3, %p10, %p11;
	.loc	1 32 46                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:32:46
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:33:30
	mul.wide.s32 	%rd9, %r35, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 33 35                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 34 37                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:37
	shl.b32 	%r45, %r36, 2;
	.loc	1 34 35                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:35
	add.s32 	%r46, %r45, %r42;
	.loc	1 34 45                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:45
	shl.b32 	%r47, %r40, 2;
	and.b32  	%r48, %r47, -16;
	.loc	1 34 42                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:42
	add.s32 	%r49, %r46, %r48;
	.loc	1 34 30                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:30
	mul.wide.s32 	%rd10, %r49, 4;
	add.s64 	%rd3, %rd7, %rd10;
	.loc	1 34 50                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:34:50
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	.loc	1 35 18                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:35:18
	add.f32 	%f7, %f1, %f3;
	add.f32 	%f8, %f2, %f4;
	shl.b32 	%r50, %r25, 5;
	or.b32  	%r51, %r50, %r22;
	or.b32  	%r52, %r51, %r23;
	or.b32  	%r53, %r52, %r24;
	shl.b32 	%r54, %r25, 4;
	mov.u32 	%r55, global_smem;
	add.s32 	%r56, %r55, %r54;
	shl.b32 	%r57, %r53, 2;
	add.s32 	%r9, %r56, %r57;
	mov.b32 	%r10, %f7;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	shr.u32 	%r58, %r50, 1;
	add.s32 	%r59, %r55, %r58;
	add.s32 	%r60, %r59, %r57;
	add.s32 	%r11, %r60, 72;
	mov.b32 	%r12, %f8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r61, %r20, 24;
	add.s32 	%r62, %r55, %r61;
	shl.b32 	%r63, %r20, 3;
	and.b32  	%r64, %r63, 248;
	add.s32 	%r65, %r62, %r64;
	ld.shared.v2.f32 	{%f9, %f10}, [%r65];
	.loc	1 36 18                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:36:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 37 4                          // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:37:4
	bar.sync 	0;
	.loc	1 38 46                         // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:38:46
	and.b32  	%r66, %r63, 56;
	or.b32  	%r67, %r34, %r66;
	add.s32 	%r68, %r55, %r66;
	shl.b32 	%r69, %r67, 2;
	add.s32 	%r13, %r68, %r69;
	mov.b32 	%r14, %f11;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r13, 20;
	mov.b32 	%r16, %f12;
	// begin inline asm
	@%p4 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r70, %r27, 60;
	add.s32 	%r71, %r55, %r70;
	add.s32 	%r72, %r71, %r64;
	ld.shared.u32 	%r17, [%r72];
	ld.shared.u32 	%r18, [%r72+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r17, %r18 };
	// end inline asm
	.loc	1 38 4                          // cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cc/cccuue6uowhyhvmgo2flu7sukcw7d6rr67l3xj3lefwzk5ch6ttv.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 99
.b8 117
.b8 117
.b8 101
.b8 54
.b8 117
.b8 111
.b8 119
.b8 104
.b8 121
.b8 104
.b8 118
.b8 109
.b8 103
.b8 111
.b8 50
.b8 102
.b8 108
.b8 117
.b8 55
.b8 115
.b8 117
.b8 107
.b8 99
.b8 119
.b8 55
.b8 100
.b8 54
.b8 114
.b8 114
.b8 54
.b8 55
.b8 108
.b8 51
.b8 120
.b8 106
.b8 51
.b8 108
.b8 101
.b8 102
.b8 119
.b8 122
.b8 107
.b8 53
.b8 99
.b8 104
.b8 54
.b8 116
.b8 116
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
