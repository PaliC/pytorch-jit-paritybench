#loc = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)
#loc1 = loc(unknown)
#loc19 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:37)
#loc29 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:25)
#loc38 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:38)
#loc52 = loc(callsite(#loc1 at #loc19))
#loc58 = loc(callsite(#loc1 at #loc29))
#loc61 = loc(callsite(#loc1 at #loc38))
module {
  tt.func public @triton_per_fused__safe_softmax_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg3: i32 loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<32x32xi64> loc(#loc1)
    %cst_0 = arith.constant dense<1184> : tensor<32x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<32x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<32x32xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<32x32xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<32x32xf32> loc(#loc1)
    %cst_5 = arith.constant dense<17> : tensor<32x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<68> : tensor<32x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<17> : tensor<1x32xi32> loc(#loc1)
    %cst_8 = arith.constant dense<272> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_7 : tensor<1x32xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_6 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_6 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.muli %5, %cst_5 : tensor<32x1xi32> loc(#loc12)
    %12 = tt.broadcast %7 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<32x32xi32> loc(#loc13)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %14 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc14)
    %17 = tt.broadcast %8 : tensor<1x32xi1> -> tensor<32x32xi1> loc(#loc15)
    %18 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc15)
    %19 = arith.andi %17, %18 : tensor<32x32xi1> loc(#loc15)
    %20 = tt.load %16, %19, %cst_4 : tensor<32x32x!tt.ptr<f32>> loc(#loc16)
    %21 = arith.select %19, %20, %cst_3 : tensor<32x32xi1>, tensor<32x32xf32> loc(#loc17)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc19)), %arg5: f32 loc(callsite(#loc1 at #loc19))):
      %52 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc63)
      %53 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc64)
      %54 = arith.ori %52, %53 : i1 loc(#loc65)
      %55 = arith.select %54, %arg4, %arg5 : f32 loc(#loc66)
      tt.reduce.return %55 : f32 loc(#loc51)
    }) : (tensor<32x32xf32>) -> tensor<32xf32> loc(#loc51)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc24)
    %24 = tt.broadcast %23 : tensor<32x1xf32> -> tensor<32x32xf32> loc(#loc25)
    %25 = arith.subf %20, %24 : tensor<32x32xf32> loc(#loc25)
    %26 = math.exp %25 : tensor<32x32xf32> loc(#loc26)
    %27 = arith.select %19, %26, %cst_4 : tensor<32x32xi1>, tensor<32x32xf32> loc(#loc27)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc29)), %arg5: f32 loc(callsite(#loc1 at #loc29))):
      %52 = arith.addf %arg4, %arg5 : f32 loc(#loc67)
      tt.reduce.return %52 : f32 loc(#loc57)
    }) : (tensor<32x32xf32>) -> tensor<32xf32> loc(#loc57)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc31)
    %30 = arith.cmpf oeq, %20, %cst_3 : tensor<32x32xf32> loc(#loc32)
    %31 = arith.extui %30 : tensor<32x32xi1> to tensor<32x32xi32> loc(#loc33)
    %32 = arith.cmpi eq, %31, %cst_2 : tensor<32x32xi32> loc(#loc33)
    %33 = arith.extui %32 : tensor<32x32xi1> to tensor<32x32xi64> loc(#loc34)
    %34 = arith.cmpi ne, %33, %cst : tensor<32x32xi64> loc(#loc35)
    %35 = arith.extui %34 : tensor<32x32xi1> to tensor<32x32xi32> loc(#loc36)
    %36 = arith.select %19, %35, %cst_2 : tensor<32x32xi1>, tensor<32x32xi32> loc(#loc36)
    %37 = "tt.reduce"(%36) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc1 at #loc38)), %arg5: i32 loc(callsite(#loc1 at #loc38))):
      %52 = arith.ori %arg4, %arg5 : i32 loc(#loc68)
      tt.reduce.return %52 : i32 loc(#loc60)
    }) : (tensor<32x32xi32>) -> tensor<32xi32> loc(#loc60)
    %38 = tt.expand_dims %37 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc40)
    %39 = arith.cmpi eq, %38, %cst_1 : tensor<32x1xi32> loc(#loc41)
    %40 = tt.broadcast %29 : tensor<32x1xf32> -> tensor<32x32xf32> loc(#loc42)
    %41 = arith.divf %26, %40 : tensor<32x32xf32> loc(#loc42)
    %42 = tt.broadcast %39 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc43)
    %43 = arith.select %42, %cst_4, %41 : tensor<32x32xi1>, tensor<32x32xf32> loc(#loc43)
    %44 = arith.muli %9, %cst_5 : tensor<32x1xi32> loc(#loc44)
    %45 = tt.broadcast %44 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc45)
    %46 = arith.addi %12, %45 : tensor<32x32xi32> loc(#loc45)
    %47 = arith.muli %10, %cst_0 : tensor<32x1xi32> loc(#loc46)
    %48 = tt.broadcast %47 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc47)
    %49 = arith.addi %46, %48 : tensor<32x32xi32> loc(#loc47)
    %50 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>> loc(#loc48)
    %51 = tt.addptr %50, %49 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc48)
    tt.store %51, %43, %19 : tensor<32x32x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":23:28)
#loc3 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":23:33)
#loc4 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:36)
#loc5 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:44)
#loc6 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:23)
#loc7 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":25:21)
#loc8 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":26:34)
#loc9 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":28:21)
#loc10 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":31:19)
#loc11 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":32:19)
#loc12 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:38)
#loc13 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:35)
#loc14 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:30)
#loc15 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:51)
#loc16 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:43)
#loc17 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":35:41)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc24 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:40)
#loc25 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":37:18)
#loc26 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":38:23)
#loc27 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":40:41)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc31 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:28)
#loc32 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":43:20)
#loc33 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":44:21)
#loc34 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":45:21)
#loc35 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":46:22)
#loc36 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":48:43)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc40 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:41)
#loc41 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":50:21)
#loc42 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":51:19)
#loc43 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":53:35)
#loc44 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:33)
#loc45 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:30)
#loc46 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:43)
#loc47 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:38)
#loc48 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:25)
#loc49 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:55)
#loc50 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:4)
#loc51 = loc(callsite(#loc18 at #loc19))
#loc53 = loc(callsite(#loc20 at #loc18))
#loc54 = loc(callsite(#loc21 at #loc18))
#loc55 = loc(callsite(#loc22 at #loc18))
#loc56 = loc(callsite(#loc23 at #loc18))
#loc57 = loc(callsite(#loc28 at #loc29))
#loc59 = loc(callsite(#loc30 at #loc28))
#loc60 = loc(callsite(#loc37 at #loc38))
#loc62 = loc(callsite(#loc39 at #loc37))
#loc63 = loc(callsite(#loc53 at #loc19))
#loc64 = loc(callsite(#loc54 at #loc19))
#loc65 = loc(callsite(#loc55 at #loc19))
#loc66 = loc(callsite(#loc56 at #loc19))
#loc67 = loc(callsite(#loc59 at #loc29))
#loc68 = loc(callsite(#loc62 at #loc38))
