#loc = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":38:37)
#loc30 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":43:25)
#loc45 = loc(callsite(#loc1 at #loc20))
#loc51 = loc(callsite(#loc1 at #loc30))
module {
  tt.func public @triton_per_fused__log_softmax_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg3: i32 loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0)) attributes {noinline = false} {
    %c1000_i32 = arith.constant 1000 : i32 loc(#loc1)
    %c100_i32 = arith.constant 100 : i32 loc(#loc1)
    %c10_i32 = arith.constant 10 : i32 loc(#loc1)
    %c400_i32 = arith.constant 400 : i32 loc(#loc1)
    %cst = arith.constant dense<0xFF800000> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<10> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c400_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = arith.cmpi slt, %3, %cst_1 : tensor<1x16xi32> loc(#loc6)
    %5 = arith.remsi %0, %c10_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %c10_i32 : i32 loc(#loc8)
    %7 = arith.remsi %6, %c10_i32 : i32 loc(#loc9)
    %8 = arith.divsi %0, %c100_i32 : i32 loc(#loc10)
    %9 = arith.muli %3, %cst_1 : tensor<1x16xi32> loc(#loc11)
    %10 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc12)
    %11 = arith.addi %10, %9 : tensor<1x16xi32> loc(#loc12)
    %12 = arith.muli %6, %c100_i32 : i32 loc(#loc13)
    %13 = tt.splat %12 : i32 -> tensor<1x16xi32> loc(#loc14)
    %14 = arith.addi %11, %13 : tensor<1x16xi32> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc15)
    %17 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc16)
    %18 = arith.andi %4, %17 : tensor<1x16xi1> loc(#loc16)
    %19 = tt.load %16, %18, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %20 = arith.select %18, %19, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc18)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc20)), %arg5: f32 loc(callsite(#loc1 at #loc20))):
      %43 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc53)
      %44 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc54)
      %45 = arith.ori %43, %44 : i1 loc(#loc55)
      %46 = arith.select %45, %arg4, %arg5 : f32 loc(#loc56)
      tt.reduce.return %46 : f32 loc(#loc44)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc44)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc25)
    %23 = tt.broadcast %22 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc26)
    %24 = arith.subf %19, %23 : tensor<1x16xf32> loc(#loc26)
    %25 = math.exp %24 : tensor<1x16xf32> loc(#loc27)
    %26 = arith.select %18, %25, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc28)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc30)), %arg5: f32 loc(callsite(#loc1 at #loc30))):
      %43 = arith.addf %arg4, %arg5 : f32 loc(#loc57)
      tt.reduce.return %43 : f32 loc(#loc50)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc50)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc32)
    %29 = math.log %28 : tensor<1x1xf32> loc(#loc33)
    %30 = tt.broadcast %29 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc34)
    %31 = arith.subf %24, %30 : tensor<1x16xf32> loc(#loc34)
    %32 = arith.muli %7, %c10_i32 : i32 loc(#loc35)
    %33 = tt.splat %32 : i32 -> tensor<1x16xi32> loc(#loc36)
    %34 = arith.addi %3, %33 : tensor<1x16xi32> loc(#loc36)
    %35 = arith.muli %5, %c100_i32 : i32 loc(#loc37)
    %36 = tt.splat %35 : i32 -> tensor<1x16xi32> loc(#loc38)
    %37 = arith.addi %34, %36 : tensor<1x16xi32> loc(#loc38)
    %38 = arith.muli %8, %c1000_i32 : i32 loc(#loc39)
    %39 = tt.splat %38 : i32 -> tensor<1x16xi32> loc(#loc40)
    %40 = arith.addi %37, %39 : tensor<1x16xi32> loc(#loc40)
    %41 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc41)
    %42 = tt.addptr %41, %40 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc41)
    tt.store %42, %31, %18 : tensor<1x16x!tt.ptr<f32>> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":23:28)
#loc3 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":25:21)
#loc4 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":26:26)
#loc5 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":26:34)
#loc6 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":28:21)
#loc7 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":30:19)
#loc8 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":31:19)
#loc9 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":33:27)
#loc10 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":34:19)
#loc11 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:38)
#loc12 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:35)
#loc13 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:47)
#loc14 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:43)
#loc15 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:30)
#loc16 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:60)
#loc17 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:52)
#loc18 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":37:41)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":38:40)
#loc26 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":39:18)
#loc27 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":40:23)
#loc28 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":42:41)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc32 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":43:28)
#loc33 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":44:24)
#loc34 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":45:19)
#loc35 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:33)
#loc36 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:30)
#loc37 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:42)
#loc38 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:38)
#loc39 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:52)
#loc40 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:47)
#loc41 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:25)
#loc42 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:64)
#loc43 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:4)
#loc44 = loc(callsite(#loc19 at #loc20))
#loc46 = loc(callsite(#loc21 at #loc19))
#loc47 = loc(callsite(#loc22 at #loc19))
#loc48 = loc(callsite(#loc23 at #loc19))
#loc49 = loc(callsite(#loc24 at #loc19))
#loc50 = loc(callsite(#loc29 at #loc30))
#loc52 = loc(callsite(#loc31 at #loc29))
#loc53 = loc(callsite(#loc46 at #loc20))
#loc54 = loc(callsite(#loc47 at #loc20))
#loc55 = loc(callsite(#loc48 at #loc20))
#loc56 = loc(callsite(#loc49 at #loc20))
#loc57 = loc(callsite(#loc52 at #loc30))
