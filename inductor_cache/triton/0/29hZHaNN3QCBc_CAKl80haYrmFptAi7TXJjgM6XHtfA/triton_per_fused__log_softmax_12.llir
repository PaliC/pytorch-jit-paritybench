; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_12(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = icmp slt i32 %5, 400, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = icmp samesign ult i32 %8, 10, !dbg !13
  %.frozen = freeze i32 %5, !dbg !14
  %10 = sdiv i32 %.frozen, 10, !dbg !14
  %11 = mul i32 %10, 10, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = mul nuw nsw i32 %8, 10, !dbg !16
  %13 = add nsw i32 %.decomposed, %12, !dbg !17
  %14 = mul i32 %10, 100, !dbg !18
  %15 = add i32 %13, %14, !dbg !19
  %16 = sext i32 %15 to i64, !dbg !20
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !20
  %18 = and i1 %9, %6, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #3, !dbg !22
  %20 = bitcast i32 %19 to float, !dbg !22
  %21 = select i1 %18, float %20, float 0xFFF0000000000000, !dbg !23
  %22 = bitcast float %21 to i32, !dbg !24
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 8, i32 31), !dbg !24
  %24 = bitcast i32 %23 to float, !dbg !24
  %25 = fcmp ogt float %21, %24, !dbg !28
  %26 = fcmp uno float %21, 0.000000e+00, !dbg !30
  %27 = or i1 %25, %26, !dbg !31
  %28 = select i1 %27, float %21, float %24, !dbg !32
  %29 = bitcast float %28 to i32, !dbg !24
  %30 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 4, i32 31), !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = fcmp ogt float %28, %31, !dbg !28
  %33 = fcmp uno float %28, 0.000000e+00, !dbg !30
  %34 = or i1 %32, %33, !dbg !31
  %35 = select i1 %34, float %28, float %31, !dbg !32
  %36 = bitcast float %35 to i32, !dbg !24
  %37 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %36, i32 2, i32 31), !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = fcmp ogt float %35, %38, !dbg !28
  %40 = fcmp uno float %35, 0.000000e+00, !dbg !30
  %41 = or i1 %39, %40, !dbg !31
  %42 = select i1 %41, float %35, float %38, !dbg !32
  %43 = bitcast float %42 to i32, !dbg !24
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 1, i32 31), !dbg !24
  %45 = bitcast i32 %44 to float, !dbg !24
  %46 = fcmp ogt float %42, %45, !dbg !28
  %47 = fcmp uno float %42, 0.000000e+00, !dbg !30
  %48 = or i1 %46, %47, !dbg !31
  %49 = select i1 %48, float %42, float %45, !dbg !32
  %50 = fsub float %20, %49, !dbg !33
  %51 = fmul float %50, 0x3FF7154760000000, !dbg !34
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #3, !dbg !34
  %53 = select i1 %18, float %52, float 0.000000e+00, !dbg !35
  %54 = bitcast float %53 to i32, !dbg !36
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 8, i32 31), !dbg !36
  %56 = bitcast i32 %55 to float, !dbg !36
  %57 = fadd float %53, %56, !dbg !40
  %58 = bitcast float %57 to i32, !dbg !36
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 4, i32 31), !dbg !36
  %60 = bitcast i32 %59 to float, !dbg !36
  %61 = fadd float %57, %60, !dbg !40
  %62 = bitcast float %61 to i32, !dbg !36
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 2, i32 31), !dbg !36
  %64 = bitcast i32 %63 to float, !dbg !36
  %65 = fadd float %61, %64, !dbg !40
  %66 = bitcast float %65 to i32, !dbg !36
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 1, i32 31), !dbg !36
  %68 = bitcast i32 %67 to float, !dbg !36
  %69 = fadd float %65, %68, !dbg !40
  %70 = fcmp olt float %69, 0x3810000000000000, !dbg !42
  %71 = fmul float %69, 0x4160000000000000, !dbg !42
  %.02.i = select i1 %70, float %71, float %69, !dbg !42
  %i.i.0.i = select i1 %70, float -2.300000e+01, float 0.000000e+00, !dbg !42
  %72 = bitcast float %.02.i to i32, !dbg !42
  %73 = add i32 %72, -1059760811, !dbg !42
  %74 = and i32 %73, -8388608, !dbg !42
  %75 = sub i32 %72, %74, !dbg !42
  %76 = bitcast i32 %75 to float, !dbg !42
  %77 = sitofp i32 %74 to float, !dbg !42
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i = icmp eq i32 %78, 0, !dbg !42
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %77, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !42
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %77, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !42
  %.08.i = select i1 %.not.i, float %80, float %79, !dbg !42
  %81 = fadd float %76, -1.000000e+00, !dbg !42
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not1.i = icmp eq i32 %82, 0, !dbg !42
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %81, float 0x3FC2073EC0000000) #3, !dbg !42
  %84 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %81, float 0x3FC2073EC0000000) #3, !dbg !42
  %.010.i = select i1 %.not1.i, float %84, float %83, !dbg !42
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not2.i = icmp eq i32 %85, 0, !dbg !42
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %81, float 0xBFBF19B980000000) #3, !dbg !42
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %81, float 0xBFBF19B980000000) #3, !dbg !42
  %.011.i = select i1 %.not2.i, float %87, float %86, !dbg !42
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not3.i = icmp eq i32 %88, 0, !dbg !42
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %81, float 0x3FC1E52AA0000000) #3, !dbg !42
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %81, float 0x3FC1E52AA0000000) #3, !dbg !42
  %.012.i = select i1 %.not3.i, float %90, float %89, !dbg !42
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not4.i = icmp eq i32 %91, 0, !dbg !42
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %81, float 0xBFC55B1720000000) #3, !dbg !42
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %81, float 0xBFC55B1720000000) #3, !dbg !42
  %.09.i = select i1 %.not4.i, float %93, float %92, !dbg !42
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not5.i = icmp eq i32 %94, 0, !dbg !42
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %81, float 0x3FC99DA160000000) #3, !dbg !42
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %81, float 0x3FC99DA160000000) #3, !dbg !42
  %.05.i = select i1 %.not5.i, float %96, float %95, !dbg !42
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not6.i = icmp eq i32 %97, 0, !dbg !42
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %81, float 0xBFCFFFE440000000) #3, !dbg !42
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %81, float 0xBFCFFFE440000000) #3, !dbg !42
  %.01.i = select i1 %.not6.i, float %99, float %98, !dbg !42
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not7.i = icmp eq i32 %100, 0, !dbg !42
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %81, float 0x3FD5554F00000000) #3, !dbg !42
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %81, float 0x3FD5554F00000000) #3, !dbg !42
  %.0.i = select i1 %.not7.i, float %102, float %101, !dbg !42
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not8.i = icmp eq i32 %103, 0, !dbg !42
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %81, float -5.000000e-01) #3, !dbg !42
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %81, float -5.000000e-01) #3, !dbg !42
  %.07.i = select i1 %.not8.i, float %105, float %104, !dbg !42
  %106 = fmul float %81, %.07.i, !dbg !42
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not9.i = icmp eq i32 %107, 0, !dbg !42
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float %81, float %81) #3, !dbg !42
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %106, float %81, float %81) #3, !dbg !42
  %.06.i = select i1 %.not9.i, float %109, float %108, !dbg !42
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not10.i = icmp eq i32 %110, 0, !dbg !42
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !42
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !42
  %.04.i = select i1 %.not10.i, float %112, float %111, !dbg !42
  %113 = icmp ugt i32 %72, 2139095039, !dbg !42
  br i1 %113, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !42

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not11.i = icmp eq i32 %114, 0, !dbg !42
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !42
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !42
  %.03.i = select i1 %.not11.i, float %116, float %115, !dbg !42
  br label %__nv_logf.exit, !dbg !42

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !42
  %117 = sdiv i32 %5, 100, !dbg !43
  %118 = srem i32 %10, 10, !dbg !44
  %119 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !42
  %r.i.1.i = select i1 %119, float 0xFFF0000000000000, float %r.i.0.i, !dbg !42
  %120 = fsub float %50, %r.i.1.i, !dbg !45
  %121 = mul nsw i32 %118, 10, !dbg !46
  %122 = mul nsw i32 %.decomposed, 100, !dbg !47
  %123 = mul i32 %117, 1000, !dbg !48
  %124 = add nsw i32 %122, %8, !dbg !49
  %125 = add i32 %124, %123, !dbg !50
  %126 = add i32 %125, %121, !dbg !51
  %127 = sext i32 %126 to i64, !dbg !52
  %128 = getelementptr float, ptr addrspace(1) %1, i64 %127, !dbg !52
  %129 = and i32 %7, 48, !dbg !53
  %130 = icmp eq i32 %129, 0, !dbg !53
  %131 = bitcast float %120 to i32, !dbg !53
  %132 = and i1 %130, %18, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %131, ptr addrspace(1) %128, i1 %132) #3, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py", directory: "inductor_cache/l5")
!4 = !{ptr @triton_per_fused__log_softmax_12, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_12, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_12", linkageName: "triton_per_fused__log_softmax_12", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 30, column: 19, scope: !7)
!16 = !DILocation(line: 35, column: 38, scope: !7)
!17 = !DILocation(line: 35, column: 35, scope: !7)
!18 = !DILocation(line: 35, column: 47, scope: !7)
!19 = !DILocation(line: 35, column: 43, scope: !7)
!20 = !DILocation(line: 35, column: 30, scope: !7)
!21 = !DILocation(line: 35, column: 60, scope: !7)
!22 = !DILocation(line: 35, column: 52, scope: !7)
!23 = !DILocation(line: 37, column: 41, scope: !7)
!24 = !DILocation(line: 131, column: 29, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 38, column: 37, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !27)
!31 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !27)
!32 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !27)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 23, scope: !7)
!35 = !DILocation(line: 42, column: 41, scope: !7)
!36 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!39 = !DILocation(line: 43, column: 25, scope: !7)
!40 = !DILocation(line: 256, column: 15, scope: !41, inlinedAt: !39)
!41 = distinct !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!42 = !DILocation(line: 44, column: 24, scope: !7)
!43 = !DILocation(line: 34, column: 19, scope: !7)
!44 = !DILocation(line: 33, column: 27, scope: !7)
!45 = !DILocation(line: 45, column: 19, scope: !7)
!46 = !DILocation(line: 46, column: 33, scope: !7)
!47 = !DILocation(line: 46, column: 42, scope: !7)
!48 = !DILocation(line: 46, column: 52, scope: !7)
!49 = !DILocation(line: 46, column: 30, scope: !7)
!50 = !DILocation(line: 46, column: 38, scope: !7)
!51 = !DILocation(line: 46, column: 47, scope: !7)
!52 = !DILocation(line: 46, column: 25, scope: !7)
!53 = !DILocation(line: 46, column: 64, scope: !7)
!54 = !DILocation(line: 46, column: 4, scope: !7)
