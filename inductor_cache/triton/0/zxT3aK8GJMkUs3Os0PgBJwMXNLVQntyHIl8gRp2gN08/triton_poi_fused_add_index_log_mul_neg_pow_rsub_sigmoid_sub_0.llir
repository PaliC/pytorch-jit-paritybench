; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [74 x i8] c"inductor_cache/6c/c6ce6bywiq5ylqlstl3uhgdhqr63p42ezr43boot7xdksssgzams.py\00"
@assertMessage_0 = internal constant [35 x i8] c"index out of bounds: 0 <= tmp4 < 4\00"
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

; Function Attrs: noreturn
declare !dbg !7 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define void @triton_poi_fused_add_index_log_mul_neg_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !11 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !12
  %6 = shl i32 %5, 7, !dbg !13
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %8 = and i32 %7, 127, !dbg !14
  %9 = or disjoint i32 %6, %8, !dbg !15
  %10 = icmp slt i32 %9, 256, !dbg !16
  %.frozen = freeze i32 %9, !dbg !17
  %11 = sdiv i32 %.frozen, 16, !dbg !17
  %12 = srem i32 %11, 4, !dbg !18
  %13 = sext i32 %12 to i64, !dbg !19
  %14 = getelementptr i64, ptr addrspace(1) %0, i64 %13, !dbg !19
  %15 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %14, i1 %10) #4, !dbg !20
  %16 = lshr i64 %15, 61, !dbg !21
  %17 = and i64 %16, 4, !dbg !21
  %18 = add i64 %17, %15, !dbg !21
  %19 = icmp ugt i64 %18, 3, !dbg !22
  %.not1 = and i1 %10, %19, !dbg !23
  br i1 %.not1, label %20, label %21, !dbg !23

20:                                               ; preds = %4
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 33, ptr nonnull @assertFunc_0, i64 1), !dbg !23
  unreachable, !dbg !23

21:                                               ; preds = %4
  %22 = sdiv i32 %9, 64, !dbg !24
  %23 = mul i32 %11, 16, !dbg !25
  %.decomposed = sub i32 %.frozen, %23, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !23
  %24 = sext i32 %.decomposed to i64, !dbg !26
  %25 = shl nsw i32 %22, 6, !dbg !27
  %26 = sext i32 %25 to i64, !dbg !28
  %.idx = shl i64 %18, 6, !dbg !29
  %27 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx, !dbg !29
  %28 = getelementptr float, ptr addrspace(1) %27, i64 %24, !dbg !29
  %29 = getelementptr float, ptr addrspace(1) %28, i64 %26, !dbg !29
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %10) #4, !dbg !30
  %31 = bitcast i32 %30 to float, !dbg !30
  %32 = fsub float 0.000000e+00, %31, !dbg !31
  %33 = fmul float %32, 0x3FF7154760000000, !dbg !35
  %34 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %33) #4, !dbg !35
  %35 = fadd float %34, 1.000000e+00, !dbg !36
  %36 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %35) #4, !dbg !37
  %37 = fsub float 1.000000e+00, %36, !dbg !38
  %38 = fadd float %36, 0x3E45798EE0000000, !dbg !39
  %39 = fcmp olt float %38, 0x3810000000000000, !dbg !40
  %40 = fmul float %38, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %39, float %40, float %38, !dbg !40
  %i.i.0.i = select i1 %39, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %41 = bitcast float %.02.i to i32, !dbg !40
  %42 = add i32 %41, -1059760811, !dbg !40
  %43 = and i32 %42, -8388608, !dbg !40
  %44 = sub i32 %41, %43, !dbg !40
  %45 = bitcast i32 %44 to float, !dbg !40
  %46 = sitofp i32 %43 to float, !dbg !40
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i = icmp eq i32 %47, 0, !dbg !40
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %46, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %46, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %.08.i = select i1 %.not.i, float %49, float %48, !dbg !40
  %50 = fadd float %45, -1.000000e+00, !dbg !40
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i = icmp eq i32 %51, 0, !dbg !40
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %50, float 0x3FC2073EC0000000) #4, !dbg !40
  %53 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %50, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i = select i1 %.not1.i, float %53, float %52, !dbg !40
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i = icmp eq i32 %54, 0, !dbg !40
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %50, float 0xBFBF19B980000000) #4, !dbg !40
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %50, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i = select i1 %.not2.i, float %56, float %55, !dbg !40
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i = icmp eq i32 %57, 0, !dbg !40
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %50, float 0x3FC1E52AA0000000) #4, !dbg !40
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %50, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i = select i1 %.not3.i, float %59, float %58, !dbg !40
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i = icmp eq i32 %60, 0, !dbg !40
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %50, float 0xBFC55B1720000000) #4, !dbg !40
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %50, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i = select i1 %.not4.i, float %62, float %61, !dbg !40
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i = icmp eq i32 %63, 0, !dbg !40
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %50, float 0x3FC99DA160000000) #4, !dbg !40
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %50, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i = select i1 %.not5.i, float %65, float %64, !dbg !40
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i = icmp eq i32 %66, 0, !dbg !40
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %50, float 0xBFCFFFE440000000) #4, !dbg !40
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %50, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i = select i1 %.not6.i, float %68, float %67, !dbg !40
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i = icmp eq i32 %69, 0, !dbg !40
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %50, float 0x3FD5554F00000000) #4, !dbg !40
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %50, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i = select i1 %.not7.i, float %71, float %70, !dbg !40
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i = icmp eq i32 %72, 0, !dbg !40
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %50, float -5.000000e-01) #4, !dbg !40
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %50, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not8.i, float %74, float %73, !dbg !40
  %75 = fmul float %50, %.07.i, !dbg !40
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i = icmp eq i32 %76, 0, !dbg !40
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float %50, float %50) #4, !dbg !40
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %75, float %50, float %50) #4, !dbg !40
  %.06.i = select i1 %.not9.i, float %78, float %77, !dbg !40
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i = icmp eq i32 %79, 0, !dbg !40
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %.04.i = select i1 %.not10.i, float %81, float %80, !dbg !40
  %82 = icmp ugt i32 %41, 2139095039, !dbg !40
  br i1 %82, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %21
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i = icmp eq i32 %83, 0, !dbg !40
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i = select i1 %.not11.i, float %85, float %84, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %21, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %21 ], !dbg !40
  %86 = fadd float %37, 0x3E45798EE0000000, !dbg !41
  %87 = fcmp olt float %86, 0x3810000000000000, !dbg !42
  %88 = fmul float %86, 0x4160000000000000, !dbg !42
  %.02.i2 = select i1 %87, float %88, float %86, !dbg !42
  %i.i.0.i3 = select i1 %87, float -2.300000e+01, float 0.000000e+00, !dbg !42
  %89 = bitcast float %.02.i2 to i32, !dbg !42
  %90 = add i32 %89, -1059760811, !dbg !42
  %91 = and i32 %90, -8388608, !dbg !42
  %92 = sub i32 %89, %91, !dbg !42
  %93 = bitcast i32 %92 to float, !dbg !42
  %94 = sitofp i32 %91 to float, !dbg !42
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i4 = icmp eq i32 %95, 0, !dbg !42
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %94, float 0x3E80000000000000, float %i.i.0.i3) #4, !dbg !42
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %94, float 0x3E80000000000000, float %i.i.0.i3) #4, !dbg !42
  %.08.i5 = select i1 %.not.i4, float %97, float %96, !dbg !42
  %98 = fadd float %93, -1.000000e+00, !dbg !42
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i6 = icmp eq i32 %99, 0, !dbg !42
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %98, float 0x3FC2073EC0000000) #4, !dbg !42
  %101 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %98, float 0x3FC2073EC0000000) #4, !dbg !42
  %.010.i7 = select i1 %.not1.i6, float %101, float %100, !dbg !42
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i8 = icmp eq i32 %102, 0, !dbg !42
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i7, float %98, float 0xBFBF19B980000000) #4, !dbg !42
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i7, float %98, float 0xBFBF19B980000000) #4, !dbg !42
  %.011.i9 = select i1 %.not2.i8, float %104, float %103, !dbg !42
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i10 = icmp eq i32 %105, 0, !dbg !42
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i9, float %98, float 0x3FC1E52AA0000000) #4, !dbg !42
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i9, float %98, float 0x3FC1E52AA0000000) #4, !dbg !42
  %.012.i11 = select i1 %.not3.i10, float %107, float %106, !dbg !42
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i12 = icmp eq i32 %108, 0, !dbg !42
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i11, float %98, float 0xBFC55B1720000000) #4, !dbg !42
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i11, float %98, float 0xBFC55B1720000000) #4, !dbg !42
  %.09.i13 = select i1 %.not4.i12, float %110, float %109, !dbg !42
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i14 = icmp eq i32 %111, 0, !dbg !42
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i13, float %98, float 0x3FC99DA160000000) #4, !dbg !42
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i13, float %98, float 0x3FC99DA160000000) #4, !dbg !42
  %.05.i15 = select i1 %.not5.i14, float %113, float %112, !dbg !42
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i16 = icmp eq i32 %114, 0, !dbg !42
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i15, float %98, float 0xBFCFFFE440000000) #4, !dbg !42
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i15, float %98, float 0xBFCFFFE440000000) #4, !dbg !42
  %.01.i17 = select i1 %.not6.i16, float %116, float %115, !dbg !42
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not7.i18 = icmp eq i32 %117, 0, !dbg !42
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i17, float %98, float 0x3FD5554F00000000) #4, !dbg !42
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i17, float %98, float 0x3FD5554F00000000) #4, !dbg !42
  %.0.i19 = select i1 %.not7.i18, float %119, float %118, !dbg !42
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not8.i20 = icmp eq i32 %120, 0, !dbg !42
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i19, float %98, float -5.000000e-01) #4, !dbg !42
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i19, float %98, float -5.000000e-01) #4, !dbg !42
  %.07.i21 = select i1 %.not8.i20, float %122, float %121, !dbg !42
  %123 = fmul float %98, %.07.i21, !dbg !42
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not9.i22 = icmp eq i32 %124, 0, !dbg !42
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float %98, float %98) #4, !dbg !42
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %123, float %98, float %98) #4, !dbg !42
  %.06.i23 = select i1 %.not9.i22, float %126, float %125, !dbg !42
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not10.i24 = icmp eq i32 %127, 0, !dbg !42
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i5, float 0x3FE62E4300000000, float %.06.i23) #4, !dbg !42
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i5, float 0x3FE62E4300000000, float %.06.i23) #4, !dbg !42
  %.04.i25 = select i1 %.not10.i24, float %129, float %128, !dbg !42
  %130 = icmp ugt i32 %89, 2139095039, !dbg !42
  br i1 %130, label %__nv_fmaf_rn.exit.i.i28, label %__nv_logf.exit31, !dbg !42

__nv_fmaf_rn.exit.i.i28:                          ; preds = %__nv_logf.exit
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not11.i29 = icmp eq i32 %131, 0, !dbg !42
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i2, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i2, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i30 = select i1 %.not11.i29, float %133, float %132, !dbg !42
  br label %__nv_logf.exit31, !dbg !42

__nv_logf.exit31:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i28
  %r.i.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i.i28 ], [ %.04.i25, %__nv_logf.exit ], !dbg !42
  %134 = insertelement <2 x float> poison, float %37, i64 0, !dbg !43
  %135 = insertelement <2 x float> %134, float %36, i64 1, !dbg !43
  %136 = fmul <2 x float> %135, %135, !dbg !43
  %137 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !40
  %138 = insertelement <2 x float> %137, float %.02.i2, i64 1, !dbg !40
  %139 = fcmp oeq <2 x float> %138, zeroinitializer, !dbg !40
  %140 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !44
  %141 = insertelement <2 x float> %140, float %r.i.0.i26, i64 1, !dbg !44
  %142 = fsub <2 x float> zeroinitializer, %141, !dbg !44
  %143 = fmul <2 x float> %136, <float 2.500000e-01, float 7.500000e-01>, !dbg !45
  %144 = select <2 x i1> %139, <2 x float> splat (float 0x7FF0000000000000), <2 x float> %142, !dbg !40
  %145 = fmul <2 x float> %143, %144, !dbg !46
  %shift = shufflevector <2 x float> %145, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !47
  %146 = fsub <2 x float> %145, %shift, !dbg !47
  %147 = sext i32 %9 to i64, !dbg !48
  %148 = getelementptr float, ptr addrspace(1) %2, i64 %147, !dbg !48
  %bc = bitcast <2 x float> %146 to <2 x i32>, !dbg !49
  %149 = extractelement <2 x i32> %bc, i64 0, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %149, ptr addrspace(1) %148, i1 %10) #4, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #1

attributes #0 = { noreturn }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6ce6bywiq5ylqlstl3uhgdhqr63p42ezr43boot7xdksssgzams.py", directory: "inductor_cache/6c")
!4 = !{ptr @triton_poi_fused_add_index_log_mul_neg_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_index_log_mul_neg_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !8, file: !8, type: !9, spFlags: DISPFlagOptimized)
!8 = !DIFile(filename: "<unknown>", directory: "")
!9 = !DISubroutineType(cc: DW_CC_normal, types: !10)
!10 = !{}
!11 = distinct !DISubprogram(name: "triton_poi_fused_add_index_log_mul_neg_pow_rsub_sigmoid_sub_0", linkageName: "triton_poi_fused_add_index_log_mul_neg_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !9, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!12 = !DILocation(line: 21, column: 28, scope: !11)
!13 = !DILocation(line: 21, column: 33, scope: !11)
!14 = !DILocation(line: 22, column: 36, scope: !11)
!15 = !DILocation(line: 22, column: 23, scope: !11)
!16 = !DILocation(line: 23, column: 21, scope: !11)
!17 = !DILocation(line: 24, column: 21, scope: !11)
!18 = !DILocation(line: 24, column: 27, scope: !11)
!19 = !DILocation(line: 28, column: 30, scope: !11)
!20 = !DILocation(line: 28, column: 35, scope: !11)
!21 = !DILocation(line: 32, column: 32, scope: !11)
!22 = !DILocation(line: 33, column: 37, scope: !11)
!23 = !DILocation(line: 33, column: 60, scope: !11)
!24 = !DILocation(line: 26, column: 19, scope: !11)
!25 = !DILocation(line: 25, column: 19, scope: !11)
!26 = !DILocation(line: 34, column: 35, scope: !11)
!27 = !DILocation(line: 34, column: 48, scope: !11)
!28 = !DILocation(line: 34, column: 45, scope: !11)
!29 = !DILocation(line: 34, column: 30, scope: !11)
!30 = !DILocation(line: 34, column: 53, scope: !11)
!31 = !DILocation(line: 47, column: 30, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !11, file: !33, discriminator: 0)
!33 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!34 = !DILocation(line: 35, column: 22, scope: !11)
!35 = !DILocation(line: 47, column: 29, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 47, column: 20, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 47, column: 16, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 37, column: 18, scope: !11)
!39 = !DILocation(line: 42, column: 19, scope: !11)
!40 = !DILocation(line: 43, column: 24, scope: !11)
!41 = !DILocation(line: 49, column: 19, scope: !11)
!42 = !DILocation(line: 50, column: 24, scope: !11)
!43 = !DILocation(line: 38, column: 19, scope: !11)
!44 = !DILocation(line: 44, column: 13, scope: !11)
!45 = !DILocation(line: 40, column: 20, scope: !11)
!46 = !DILocation(line: 45, column: 20, scope: !11)
!47 = !DILocation(line: 53, column: 20, scope: !11)
!48 = !DILocation(line: 55, column: 25, scope: !11)
!49 = !DILocation(line: 55, column: 37, scope: !11)
!50 = !DILocation(line: 55, column: 4, scope: !11)
