#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)
#loc1 = loc(unknown)
#loc55 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:26)
#loc62 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:26)
#loc77 = loc(callsite(#loc1 at #loc55))
#loc80 = loc(callsite(#loc1 at #loc62))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_cat_native_group_norm_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-192> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1024> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<-128> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<192> : tensor<32x128xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2048> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<32x128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<32x128xi64, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<32> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<128> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<128> : tensor<32x1xi32, #blocked> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_11 = arith.constant dense<0.000000e+00> : tensor<32x128xf32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<1.280000e+02> : tensor<32x1xf32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<1.280000e+02> : tensor<32x1xf32, #blocked1> loc(#loc1)
    %cst_14 = arith.constant dense<9.99999974E-6> : tensor<32x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_10 : tensor<32x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_9 : tensor<32x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc7)
    %14 = arith.divsi %13, %cst_8 : tensor<1x128xi32, #blocked> loc(#loc8)
    %15 = arith.remsi %8, %cst_7 : tensor<32x1xi32, #blocked> loc(#loc9)
    %16 = arith.remsi %13, %cst_8 : tensor<1x128xi32, #blocked> loc(#loc10)
    %17 = arith.divsi %8, %cst_7 : tensor<32x1xi32, #blocked> loc(#loc11)
    %18 = arith.muli %8, %cst_10 : tensor<32x1xi32, #blocked> loc(#loc12)
    %19 = tt.broadcast %13 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc13)
    %20 = tt.broadcast %18 : tensor<32x1xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc13)
    %21 = arith.addi %19, %20 : tensor<32x128xi32, #blocked> loc(#loc13)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc14)
    %23 = tt.addptr %22, %21 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc14)
    %24 = tt.broadcast %10 : tensor<32x1xi1, #blocked> -> tensor<32x128xi1, #blocked> loc(#loc15)
    %25 = tt.load %23, %24, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc15)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc16)
    %27 = tt.addptr %26, %21 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc16)
    %28 = tt.load %27, %24, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc17)
    %29 = arith.muli %15, %cst_6 : tensor<32x1xi32, #blocked> loc(#loc18)
    %30 = tt.broadcast %14 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc19)
    %31 = tt.broadcast %29 : tensor<32x1xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc19)
    %32 = arith.addi %30, %31 : tensor<32x128xi32, #blocked> loc(#loc19)
    %33 = arith.extsi %32 : tensor<32x128xi32, #blocked> to tensor<32x128xi64, #blocked> loc(#loc20)
    %34 = arith.cmpi slt, %33, %cst_5 : tensor<32x128xi64, #blocked> loc(#loc20)
    %35 = arith.muli %32, %cst_4 : tensor<32x128xi32, #blocked> loc(#loc21)
    %36 = tt.broadcast %16 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc22)
    %37 = arith.addi %36, %35 : tensor<32x128xi32, #blocked> loc(#loc22)
    %38 = arith.muli %17, %cst_3 : tensor<32x1xi32, #blocked> loc(#loc23)
    %39 = tt.broadcast %38 : tensor<32x1xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc24)
    %40 = arith.addi %37, %39 : tensor<32x128xi32, #blocked> loc(#loc24)
    %41 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc25)
    %42 = tt.addptr %41, %40 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc25)
    %43 = arith.andi %34, %24 : tensor<32x128xi1, #blocked> loc(#loc26)
    %44 = tt.load %42, %43, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %45 = arith.cmpi sge, %33, %cst_5 : tensor<32x128xi64, #blocked> loc(#loc28)
    %46 = arith.cmpi slt, %33, %cst_2 : tensor<32x128xi64, #blocked> loc(#loc29)
    %47 = arith.andi %45, %46 : tensor<32x128xi1, #blocked> loc(#loc30)
    %48 = arith.addi %14, %cst_1 : tensor<1x128xi32, #blocked> loc(#loc31)
    %49 = tt.broadcast %48 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc32)
    %50 = arith.addi %49, %31 : tensor<32x128xi32, #blocked> loc(#loc32)
    %51 = arith.muli %50, %cst_4 : tensor<32x128xi32, #blocked> loc(#loc33)
    %52 = arith.addi %36, %51 : tensor<32x128xi32, #blocked> loc(#loc34)
    %53 = arith.muli %17, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc35)
    %54 = tt.broadcast %53 : tensor<32x1xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc36)
    %55 = arith.addi %52, %54 : tensor<32x128xi32, #blocked> loc(#loc36)
    %56 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc37)
    %57 = tt.addptr %56, %55 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc37)
    %58 = arith.andi %47, %24 : tensor<32x128xi1, #blocked> loc(#loc38)
    %59 = tt.load %57, %58, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc39)
    %60 = arith.cmpi sge, %33, %cst_2 : tensor<32x128xi64, #blocked> loc(#loc40)
    %61 = arith.addi %14, %cst : tensor<1x128xi32, #blocked> loc(#loc41)
    %62 = tt.broadcast %61 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc42)
    %63 = arith.addi %62, %31 : tensor<32x128xi32, #blocked> loc(#loc42)
    %64 = arith.muli %63, %cst_4 : tensor<32x128xi32, #blocked> loc(#loc43)
    %65 = arith.addi %36, %64 : tensor<32x128xi32, #blocked> loc(#loc44)
    %66 = arith.addi %65, %54 : tensor<32x128xi32, #blocked> loc(#loc45)
    %67 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc46)
    %68 = tt.addptr %67, %66 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc46)
    %69 = arith.andi %60, %24 : tensor<32x128xi1, #blocked> loc(#loc47)
    %70 = tt.load %68, %69, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc48)
    %71 = arith.select %47, %59, %70 : tensor<32x128xi1, #blocked>, tensor<32x128xf32, #blocked> loc(#loc49)
    %72 = arith.select %34, %44, %71 : tensor<32x128xi1, #blocked>, tensor<32x128xf32, #blocked> loc(#loc50)
    %73 = arith.addf %25, %28 : tensor<32x128xf32, #blocked> loc(#loc51)
    %74 = arith.addf %72, %73 : tensor<32x128xf32, #blocked> loc(#loc52)
    %75 = arith.select %24, %74, %cst_11 : tensor<32x128xi1, #blocked>, tensor<32x128xf32, #blocked> loc(#loc53)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc55)), %arg12: f32 loc(callsite(#loc1 at #loc55))):
      %102 = arith.addf %arg11, %arg12 : f32 loc(#loc81)
      tt.reduce.return %102 : f32 loc(#loc76)
    }) : (tensor<32x128xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc76)
    %77 = triton_gpu.convert_layout %76 {fastmath = #arith.fastmath<none>} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc57)
    %78 = tt.expand_dims %77 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc58)
    %79 = tt.expand_dims %76 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xf32, #blocked> loc(#loc58)
    %80 = arith.divf %78, %cst_13 : tensor<32x1xf32, #blocked1> loc(#loc57)
    %81 = arith.divf %79, %cst_12 : tensor<32x1xf32, #blocked> loc(#loc57)
    %82 = tt.broadcast %81 : tensor<32x1xf32, #blocked> -> tensor<32x128xf32, #blocked> loc(#loc59)
    %83 = arith.subf %74, %82 : tensor<32x128xf32, #blocked> loc(#loc59)
    %84 = arith.mulf %83, %83 : tensor<32x128xf32, #blocked> loc(#loc60)
    %85 = arith.select %24, %84, %cst_11 : tensor<32x128xi1, #blocked>, tensor<32x128xf32, #blocked> loc(#loc61)
    %86 = "tt.reduce"(%85) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc62)), %arg12: f32 loc(callsite(#loc1 at #loc62))):
      %102 = arith.addf %arg11, %arg12 : f32 loc(#loc82)
      tt.reduce.return %102 : f32 loc(#loc79)
    }) : (tensor<32x128xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc79)
    %87 = triton_gpu.convert_layout %86 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc63)
    %88 = tt.expand_dims %87 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc64)
    %89 = triton_gpu.convert_layout %86 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc64)
    %90 = tt.expand_dims %89 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc64)
    %91 = arith.divf %88, %cst_13 : tensor<32x1xf32, #blocked1> loc(#loc65)
    %92 = arith.addf %91, %cst_14 : tensor<32x1xf32, #blocked1> loc(#loc66)
    %93 = tt.extern_elementwise %92 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<32x1xf32, #blocked1>) -> tensor<32x1xf32, #blocked1> loc(#loc63)
    %94 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc67)
    %95 = tt.addptr %94, %21 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc67)
    tt.store %95, %74, %24 : tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc68)
    %96 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc69)
    %97 = tt.addptr %96, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc69)
    tt.store %97, %93, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc70)
    %98 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc71)
    %99 = tt.addptr %98, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc71)
    tt.store %99, %80, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc72)
    %100 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc73)
    %101 = tt.addptr %100, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc73)
    tt.store %101, %90, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc74)
    tt.return loc(#loc75)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":23:28)
#loc3 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":23:33)
#loc4 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":24:44)
#loc5 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":24:23)
#loc6 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":25:21)
#loc7 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":26:34)
#loc8 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":29:19)
#loc9 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":30:19)
#loc10 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":31:19)
#loc11 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":32:19)
#loc12 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:40)
#loc13 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:36)
#loc14 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:31)
#loc15 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:45)
#loc16 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:31)
#loc17 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:45)
#loc18 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:18)
#loc19 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:16)
#loc20 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":41:18)
#loc21 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:39)
#loc22 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:35)
#loc23 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:57)
#loc24 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:52)
#loc25 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:30)
#loc26 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:69)
#loc27 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:62)
#loc28 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":43:19)
#loc29 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":45:18)
#loc30 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":46:18)
#loc31 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:49)
#loc32 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:54)
#loc33 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:40)
#loc34 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:36)
#loc35 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:67)
#loc36 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:62)
#loc37 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:31)
#loc38 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:79)
#loc39 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:72)
#loc40 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":48:20)
#loc41 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:49)
#loc42 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:54)
#loc43 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:40)
#loc44 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:36)
#loc45 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:62)
#loc46 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:31)
#loc47 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:80)
#loc48 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:72)
#loc49 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":52:34)
#loc50 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":53:33)
#loc51 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":54:20)
#loc52 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":55:20)
#loc53 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":59:35)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc57 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":63:20)
#loc58 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:29)
#loc59 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":64:20)
#loc60 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":65:20)
#loc61 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":67:35)
#loc63 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":73:28)
#loc64 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:29)
#loc65 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":70:20)
#loc66 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":72:20)
#loc67 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:25)
#loc68 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:46)
#loc69 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:25)
#loc70 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:37)
#loc71 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:25)
#loc72 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:37)
#loc73 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:25)
#loc74 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:37)
#loc75 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:4)
#loc76 = loc(callsite(#loc54 at #loc55))
#loc78 = loc(callsite(#loc56 at #loc54))
#loc79 = loc(callsite(#loc54 at #loc62))
#loc81 = loc(callsite(#loc78 at #loc55))
#loc82 = loc(callsite(#loc78 at #loc62))
