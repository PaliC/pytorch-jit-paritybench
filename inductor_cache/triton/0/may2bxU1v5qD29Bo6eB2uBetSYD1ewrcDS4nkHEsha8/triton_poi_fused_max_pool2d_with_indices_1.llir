; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sdiv i32 %9, 4, !dbg !15
  %12 = add i32 %9, -10, !dbg !16
  %13 = sext i32 %12 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !17
  %15 = add i32 %9, -9, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = add i32 %9, -8, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = add i32 %9, -7, !dbg !22
  %22 = sext i32 %21 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !23
  %24 = add i32 %9, -6, !dbg !24
  %25 = sext i32 %24 to i64, !dbg !25
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !25
  %27 = add i32 %9, -5, !dbg !26
  %28 = sext i32 %27 to i64, !dbg !27
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !27
  %30 = add i32 %9, -4, !dbg !28
  %31 = sext i32 %30 to i64, !dbg !29
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !29
  %33 = add i32 %9, -3, !dbg !30
  %34 = sext i32 %33 to i64, !dbg !31
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !31
  %36 = add i32 %9, -2, !dbg !32
  %37 = sext i32 %36 to i64, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !33
  %39 = add i32 %9, -1, !dbg !34
  %40 = sext i32 %39 to i64, !dbg !35
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !35
  %42 = sext i32 %9 to i64, !dbg !36
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !36
  %44 = add i32 %9, 1, !dbg !37
  %45 = sext i32 %44 to i64, !dbg !38
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !38
  %47 = add i32 %9, 2, !dbg !39
  %48 = sext i32 %47 to i64, !dbg !40
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !40
  %50 = add i32 %9, 3, !dbg !41
  %51 = sext i32 %50 to i64, !dbg !42
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !42
  %53 = add i32 %9, 4, !dbg !43
  %54 = sext i32 %53 to i64, !dbg !44
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !44
  %56 = add i32 %9, 5, !dbg !45
  %57 = sext i32 %56 to i64, !dbg !46
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !46
  %59 = add i32 %9, 6, !dbg !47
  %60 = sext i32 %59 to i64, !dbg !48
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !48
  %62 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !49
  %63 = insertelement <2 x i32> %62, i32 %9, i64 1, !dbg !49
  %64 = srem <2 x i32> %63, splat (i32 4), !dbg !49
  %65 = extractelement <2 x i32> %64, i64 0, !dbg !50
  %66 = icmp sgt i32 %65, 1, !dbg !51
  %67 = extractelement <2 x i32> %64, i64 1, !dbg !52
  %68 = icmp sgt i32 %67, 1, !dbg !53
  %69 = and i1 %68, %66, !dbg !54
  %70 = and i1 %10, %69, !dbg !55
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %70, i32 -8388608, i1 %70) #1, !dbg !56
  %72 = bitcast i32 %71 to float, !dbg !56
  %73 = icmp sgt i32 %67, 0, !dbg !57
  %74 = and i1 %73, %66, !dbg !58
  %75 = and i1 %10, %74, !dbg !59
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %75, i32 -8388608, i1 %75) #1, !dbg !60
  %77 = bitcast i32 %76 to float, !dbg !60
  %78 = fcmp ogt float %77, %72, !dbg !61
  %79 = fcmp uno float %77, 0.000000e+00, !dbg !65
  %80 = or i1 %78, %79, !dbg !66
  %81 = select i1 %80, float %77, float %72, !dbg !67
  %82 = icmp sgt i32 %67, -1, !dbg !68
  %83 = and i1 %82, %66, !dbg !69
  %84 = and i1 %10, %83, !dbg !70
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %84, i32 -8388608, i1 %84) #1, !dbg !71
  %86 = bitcast i32 %85 to float, !dbg !71
  %87 = fcmp olt float %81, %86, !dbg !72
  %88 = fcmp uno float %86, 0.000000e+00, !dbg !74
  %89 = or i1 %88, %87, !dbg !75
  %90 = select i1 %89, float %86, float %81, !dbg !76
  %91 = add nsw i32 %67, 1, !dbg !77
  %92 = icmp ult i32 %91, 4, !dbg !77
  %93 = and i1 %66, %92, !dbg !78
  %94 = and i1 %10, %93, !dbg !79
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %94, i32 -8388608, i1 %94) #1, !dbg !80
  %96 = bitcast i32 %95 to float, !dbg !80
  %97 = fcmp olt float %90, %96, !dbg !81
  %98 = fcmp uno float %96, 0.000000e+00, !dbg !83
  %99 = or i1 %98, %97, !dbg !84
  %100 = select i1 %99, float %96, float %90, !dbg !85
  %101 = add nsw <2 x i32> %64, splat (i32 2), !dbg !86
  %102 = extractelement <2 x i32> %101, i64 1, !dbg !87
  %103 = icmp ult i32 %102, 4, !dbg !88
  %104 = and i1 %66, %103, !dbg !89
  %105 = and i1 %10, %104, !dbg !90
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %105, i32 -8388608, i1 %105) #1, !dbg !91
  %107 = bitcast i32 %106 to float, !dbg !91
  %108 = fcmp olt float %100, %107, !dbg !92
  %109 = fcmp uno float %107, 0.000000e+00, !dbg !94
  %110 = or i1 %109, %108, !dbg !95
  %111 = select i1 %110, float %107, float %100, !dbg !96
  %112 = icmp sgt i32 %65, 0, !dbg !97
  %113 = and i1 %68, %112, !dbg !98
  %114 = and i1 %10, %113, !dbg !99
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %114, i32 -8388608, i1 %114) #1, !dbg !100
  %116 = bitcast i32 %115 to float, !dbg !100
  %117 = fcmp olt float %111, %116, !dbg !101
  %118 = fcmp uno float %116, 0.000000e+00, !dbg !103
  %119 = or i1 %118, %117, !dbg !104
  %120 = select i1 %119, float %116, float %111, !dbg !105
  %121 = and i1 %73, %112, !dbg !106
  %122 = and i1 %10, %121, !dbg !107
  %123 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %122, i32 -8388608, i1 %122) #1, !dbg !108
  %124 = bitcast i32 %123 to float, !dbg !108
  %125 = fcmp olt float %120, %124, !dbg !109
  %126 = fcmp uno float %124, 0.000000e+00, !dbg !111
  %127 = or i1 %126, %125, !dbg !112
  %128 = select i1 %127, float %124, float %120, !dbg !113
  %129 = and i1 %82, %112, !dbg !114
  %130 = and i1 %10, %129, !dbg !115
  %131 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %130, i32 -8388608, i1 %130) #1, !dbg !116
  %132 = bitcast i32 %131 to float, !dbg !116
  %133 = fcmp olt float %128, %132, !dbg !117
  %134 = fcmp uno float %132, 0.000000e+00, !dbg !119
  %135 = or i1 %134, %133, !dbg !120
  %136 = select i1 %135, float %132, float %128, !dbg !121
  %137 = and i1 %112, %92, !dbg !122
  %138 = and i1 %10, %137, !dbg !123
  %139 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %138, i32 -8388608, i1 %138) #1, !dbg !124
  %140 = bitcast i32 %139 to float, !dbg !124
  %141 = fcmp olt float %136, %140, !dbg !125
  %142 = fcmp uno float %140, 0.000000e+00, !dbg !127
  %143 = or i1 %142, %141, !dbg !128
  %144 = select i1 %143, float %140, float %136, !dbg !129
  %145 = and i1 %112, %103, !dbg !130
  %146 = and i1 %10, %145, !dbg !131
  %147 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %146, i32 -8388608, i1 %146) #1, !dbg !132
  %148 = bitcast i32 %147 to float, !dbg !132
  %149 = fcmp olt float %144, %148, !dbg !133
  %150 = fcmp uno float %148, 0.000000e+00, !dbg !135
  %151 = or i1 %150, %149, !dbg !136
  %152 = select i1 %151, float %148, float %144, !dbg !137
  %153 = icmp sgt i32 %65, -1, !dbg !138
  %154 = and i1 %68, %153, !dbg !139
  %155 = and i1 %10, %154, !dbg !140
  %156 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %155, i32 -8388608, i1 %155) #1, !dbg !141
  %157 = bitcast i32 %156 to float, !dbg !141
  %158 = fcmp olt float %152, %157, !dbg !142
  %159 = fcmp uno float %157, 0.000000e+00, !dbg !144
  %160 = or i1 %159, %158, !dbg !145
  %161 = select i1 %160, float %157, float %152, !dbg !146
  %162 = and i1 %73, %153, !dbg !147
  %163 = and i1 %10, %162, !dbg !148
  %164 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %163, i32 -8388608, i1 %163) #1, !dbg !149
  %165 = bitcast i32 %164 to float, !dbg !149
  %166 = fcmp olt float %161, %165, !dbg !150
  %167 = fcmp uno float %165, 0.000000e+00, !dbg !152
  %168 = or i1 %167, %166, !dbg !153
  %169 = select i1 %168, float %165, float %161, !dbg !154
  %170 = or i32 %65, %67, !dbg !52
  %171 = icmp sgt i32 %170, -1, !dbg !52
  %172 = and i1 %10, %171, !dbg !155
  %173 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %172, i32 -8388608, i1 %172) #1, !dbg !156
  %174 = bitcast i32 %173 to float, !dbg !156
  %175 = fcmp olt float %169, %174, !dbg !157
  %176 = fcmp uno float %174, 0.000000e+00, !dbg !159
  %177 = or i1 %176, %175, !dbg !160
  %178 = select i1 %177, float %174, float %169, !dbg !161
  %179 = and i1 %153, %92, !dbg !162
  %180 = and i1 %10, %179, !dbg !163
  %181 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %180, i32 -8388608, i1 %180) #1, !dbg !164
  %182 = bitcast i32 %181 to float, !dbg !164
  %183 = fcmp olt float %178, %182, !dbg !165
  %184 = fcmp uno float %182, 0.000000e+00, !dbg !167
  %185 = or i1 %184, %183, !dbg !168
  %186 = select i1 %185, float %182, float %178, !dbg !169
  %187 = and i1 %153, %103, !dbg !170
  %188 = and i1 %10, %187, !dbg !171
  %189 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %188, i32 -8388608, i1 %188) #1, !dbg !172
  %190 = bitcast i32 %189 to float, !dbg !172
  %191 = fcmp olt float %186, %190, !dbg !173
  %192 = fcmp uno float %190, 0.000000e+00, !dbg !175
  %193 = or i1 %192, %191, !dbg !176
  %194 = select i1 %193, float %190, float %186, !dbg !177
  %195 = add nsw i32 %65, 1, !dbg !50
  %196 = icmp ult i32 %195, 4, !dbg !50
  %197 = and i1 %68, %196, !dbg !178
  %198 = and i1 %10, %197, !dbg !179
  %199 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %198, i32 -8388608, i1 %198) #1, !dbg !180
  %200 = bitcast i32 %199 to float, !dbg !180
  %201 = fcmp olt float %194, %200, !dbg !181
  %202 = fcmp uno float %200, 0.000000e+00, !dbg !183
  %203 = or i1 %202, %201, !dbg !184
  %204 = select i1 %203, float %200, float %194, !dbg !185
  %205 = and i1 %73, %196, !dbg !186
  %206 = and i1 %10, %205, !dbg !187
  %207 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %206, i32 -8388608, i1 %206) #1, !dbg !188
  %208 = bitcast i32 %207 to float, !dbg !188
  %209 = fcmp olt float %204, %208, !dbg !189
  %210 = fcmp uno float %208, 0.000000e+00, !dbg !191
  %211 = or i1 %210, %209, !dbg !192
  %212 = select i1 %211, float %208, float %204, !dbg !193
  %213 = and i1 %82, %196, !dbg !194
  %214 = and i1 %10, %213, !dbg !195
  %215 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %214, i32 -8388608, i1 %214) #1, !dbg !196
  %216 = bitcast i32 %215 to float, !dbg !196
  %217 = fcmp olt float %212, %216, !dbg !197
  %218 = fcmp uno float %216, 0.000000e+00, !dbg !199
  %219 = or i1 %218, %217, !dbg !200
  %220 = select i1 %219, float %216, float %212, !dbg !201
  %221 = or i32 %195, %91, !dbg !202
  %222 = icmp ult i32 %221, 4, !dbg !202
  %223 = and i1 %10, %222, !dbg !203
  %224 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %223, i32 -8388608, i1 %223) #1, !dbg !204
  %225 = bitcast i32 %224 to float, !dbg !204
  %226 = fcmp olt float %220, %225, !dbg !205
  %227 = fcmp uno float %225, 0.000000e+00, !dbg !207
  %228 = or i1 %227, %226, !dbg !208
  %229 = select i1 %228, float %225, float %220, !dbg !209
  %230 = or i32 %195, %102, !dbg !210
  %231 = icmp ult i32 %230, 4, !dbg !210
  %232 = and i1 %10, %231, !dbg !211
  %233 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %232, i32 -8388608, i1 %232) #1, !dbg !212
  %234 = bitcast i32 %233 to float, !dbg !212
  %235 = fcmp olt float %229, %234, !dbg !213
  %236 = fcmp uno float %234, 0.000000e+00, !dbg !215
  %237 = or i1 %236, %235, !dbg !216
  %238 = select i1 %237, float %234, float %229, !dbg !217
  %239 = extractelement <2 x i32> %101, i64 0, !dbg !87
  %240 = icmp ult i32 %239, 4, !dbg !86
  %241 = and i1 %68, %240, !dbg !218
  %242 = and i1 %10, %241, !dbg !219
  %243 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %242, i32 -8388608, i1 %242) #1, !dbg !220
  %244 = bitcast i32 %243 to float, !dbg !220
  %245 = fcmp olt float %238, %244, !dbg !221
  %246 = fcmp uno float %244, 0.000000e+00, !dbg !223
  %247 = or i1 %246, %245, !dbg !224
  %248 = select i1 %247, float %244, float %238, !dbg !225
  %249 = and i1 %73, %240, !dbg !226
  %250 = add i32 %9, 7, !dbg !227
  %251 = sext i32 %250 to i64, !dbg !228
  %252 = getelementptr float, ptr addrspace(1) %0, i64 %251, !dbg !228
  %253 = and i1 %10, %249, !dbg !229
  %254 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %252, i1 %253, i32 -8388608, i1 %253) #1, !dbg !230
  %255 = bitcast i32 %254 to float, !dbg !230
  %256 = fcmp olt float %248, %255, !dbg !231
  %257 = fcmp uno float %255, 0.000000e+00, !dbg !233
  %258 = or i1 %257, %256, !dbg !234
  %259 = select i1 %258, float %255, float %248, !dbg !235
  %260 = and i1 %82, %240, !dbg !236
  %261 = add i32 %9, 8, !dbg !237
  %262 = sext i32 %261 to i64, !dbg !238
  %263 = getelementptr float, ptr addrspace(1) %0, i64 %262, !dbg !238
  %264 = and i1 %10, %260, !dbg !239
  %265 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %263, i1 %264, i32 -8388608, i1 %264) #1, !dbg !240
  %266 = bitcast i32 %265 to float, !dbg !240
  %267 = fcmp olt float %259, %266, !dbg !241
  %268 = fcmp uno float %266, 0.000000e+00, !dbg !243
  %269 = or i1 %268, %267, !dbg !244
  %270 = select i1 %269, float %266, float %259, !dbg !245
  %271 = or i32 %239, %91, !dbg !246
  %272 = icmp ult i32 %271, 4, !dbg !246
  %273 = add i32 %9, 9, !dbg !247
  %274 = sext i32 %273 to i64, !dbg !248
  %275 = getelementptr float, ptr addrspace(1) %0, i64 %274, !dbg !248
  %276 = and i1 %10, %272, !dbg !249
  %277 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %275, i1 %276, i32 -8388608, i1 %276) #1, !dbg !250
  %278 = bitcast i32 %277 to float, !dbg !250
  %279 = fcmp olt float %270, %278, !dbg !251
  %280 = fcmp uno float %278, 0.000000e+00, !dbg !253
  %281 = or i1 %280, %279, !dbg !254
  %282 = select i1 %281, float %278, float %270, !dbg !255
  %283 = or i32 %239, %102, !dbg !87
  %284 = icmp ult i32 %283, 4, !dbg !87
  %285 = add i32 %9, 10, !dbg !256
  %286 = sext i32 %285 to i64, !dbg !257
  %287 = getelementptr float, ptr addrspace(1) %0, i64 %286, !dbg !257
  %288 = and i1 %10, %284, !dbg !258
  %289 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %287, i1 %288, i32 -8388608, i1 %288) #1, !dbg !259
  %290 = bitcast i32 %289 to float, !dbg !259
  %291 = fcmp olt float %282, %290, !dbg !260
  %292 = fcmp uno float %290, 0.000000e+00, !dbg !262
  %293 = or i1 %292, %291, !dbg !263
  %294 = zext i1 %78 to i8, !dbg !264
  %295 = select i1 %87, i8 2, i8 %294, !dbg !265
  %296 = select i1 %97, i8 3, i8 %295, !dbg !266
  %297 = select i1 %108, i8 4, i8 %296, !dbg !267
  %298 = select i1 %117, i8 5, i8 %297, !dbg !268
  %299 = select i1 %125, i8 6, i8 %298, !dbg !269
  %300 = select i1 %133, i8 7, i8 %299, !dbg !270
  %301 = select i1 %141, i8 8, i8 %300, !dbg !271
  %302 = select i1 %149, i8 9, i8 %301, !dbg !272
  %303 = select i1 %158, i8 10, i8 %302, !dbg !273
  %304 = select i1 %166, i8 11, i8 %303, !dbg !274
  %305 = select i1 %175, i8 12, i8 %304, !dbg !275
  %306 = select i1 %183, i8 13, i8 %305, !dbg !276
  %307 = select i1 %191, i8 14, i8 %306, !dbg !277
  %308 = select i1 %201, i8 15, i8 %307, !dbg !278
  %309 = select i1 %209, i8 16, i8 %308, !dbg !279
  %310 = select i1 %217, i8 17, i8 %309, !dbg !280
  %311 = select i1 %226, i8 18, i8 %310, !dbg !281
  %312 = select i1 %235, i8 19, i8 %311, !dbg !282
  %313 = select i1 %245, i8 20, i8 %312, !dbg !283
  %314 = select i1 %256, i8 21, i8 %313, !dbg !284
  %315 = select i1 %267, i8 22, i8 %314, !dbg !285
  %316 = select i1 %279, i8 23, i8 %315, !dbg !286
  %317 = select i1 %291, i8 24, i8 %316, !dbg !287
  %318 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !288
  %319 = bitcast float %282 to i32, !dbg !289
  %320 = select i1 %293, i32 %289, i32 %319, !dbg !290
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %320, ptr addrspace(1) %318, i1 %10) #1, !dbg !289
  %321 = getelementptr i8, ptr addrspace(1) %2, i64 %42, !dbg !291
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %317, ptr addrspace(1) %321, i1 %10) #1, !dbg !292
  ret void, !dbg !293
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cswbpi2pk3rzn3duajjjplsmqrxjixefpgl67axlhq53bthfbcz6.py", directory: "inductor_cache/sw")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_1", linkageName: "triton_poi_fused_max_pool2d_with_indices_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 38, column: 39, scope: !7)
!17 = !DILocation(line: 38, column: 31, scope: !7)
!18 = !DILocation(line: 44, column: 38, scope: !7)
!19 = !DILocation(line: 44, column: 31, scope: !7)
!20 = !DILocation(line: 51, column: 38, scope: !7)
!21 = !DILocation(line: 51, column: 31, scope: !7)
!22 = !DILocation(line: 58, column: 38, scope: !7)
!23 = !DILocation(line: 58, column: 31, scope: !7)
!24 = !DILocation(line: 65, column: 38, scope: !7)
!25 = !DILocation(line: 65, column: 31, scope: !7)
!26 = !DILocation(line: 75, column: 38, scope: !7)
!27 = !DILocation(line: 75, column: 31, scope: !7)
!28 = !DILocation(line: 78, column: 38, scope: !7)
!29 = !DILocation(line: 78, column: 31, scope: !7)
!30 = !DILocation(line: 81, column: 38, scope: !7)
!31 = !DILocation(line: 81, column: 31, scope: !7)
!32 = !DILocation(line: 84, column: 38, scope: !7)
!33 = !DILocation(line: 84, column: 31, scope: !7)
!34 = !DILocation(line: 94, column: 38, scope: !7)
!35 = !DILocation(line: 94, column: 31, scope: !7)
!36 = !DILocation(line: 97, column: 31, scope: !7)
!37 = !DILocation(line: 100, column: 35, scope: !7)
!38 = !DILocation(line: 100, column: 31, scope: !7)
!39 = !DILocation(line: 103, column: 35, scope: !7)
!40 = !DILocation(line: 103, column: 31, scope: !7)
!41 = !DILocation(line: 113, column: 35, scope: !7)
!42 = !DILocation(line: 113, column: 31, scope: !7)
!43 = !DILocation(line: 116, column: 35, scope: !7)
!44 = !DILocation(line: 116, column: 31, scope: !7)
!45 = !DILocation(line: 119, column: 35, scope: !7)
!46 = !DILocation(line: 119, column: 31, scope: !7)
!47 = !DILocation(line: 122, column: 35, scope: !7)
!48 = !DILocation(line: 122, column: 31, scope: !7)
!49 = !DILocation(line: 24, column: 26, scope: !7)
!50 = !DILocation(line: 108, column: 20, scope: !7)
!51 = !DILocation(line: 29, column: 19, scope: !7)
!52 = !DILocation(line: 96, column: 20, scope: !7)
!53 = !DILocation(line: 34, column: 19, scope: !7)
!54 = !DILocation(line: 37, column: 19, scope: !7)
!55 = !DILocation(line: 38, column: 52, scope: !7)
!56 = !DILocation(line: 38, column: 44, scope: !7)
!57 = !DILocation(line: 40, column: 21, scope: !7)
!58 = !DILocation(line: 43, column: 19, scope: !7)
!59 = !DILocation(line: 44, column: 51, scope: !7)
!60 = !DILocation(line: 44, column: 43, scope: !7)
!61 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !64)
!62 = distinct !DILexicalBlockFile(scope: !7, file: !63, discriminator: 0)
!63 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!64 = !DILocation(line: 45, column: 42, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !64)
!68 = !DILocation(line: 47, column: 21, scope: !7)
!69 = !DILocation(line: 50, column: 19, scope: !7)
!70 = !DILocation(line: 51, column: 51, scope: !7)
!71 = !DILocation(line: 51, column: 43, scope: !7)
!72 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !73)
!73 = !DILocation(line: 52, column: 42, scope: !7)
!74 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !73)
!75 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !73)
!76 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !73)
!77 = !DILocation(line: 56, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 19, scope: !7)
!79 = !DILocation(line: 58, column: 51, scope: !7)
!80 = !DILocation(line: 58, column: 43, scope: !7)
!81 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !82)
!82 = !DILocation(line: 59, column: 42, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !82)
!86 = !DILocation(line: 127, column: 21, scope: !7)
!87 = !DILocation(line: 140, column: 22, scope: !7)
!88 = !DILocation(line: 63, column: 20, scope: !7)
!89 = !DILocation(line: 64, column: 19, scope: !7)
!90 = !DILocation(line: 65, column: 51, scope: !7)
!91 = !DILocation(line: 65, column: 43, scope: !7)
!92 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !93)
!93 = !DILocation(line: 66, column: 42, scope: !7)
!94 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !93)
!95 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !93)
!96 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !93)
!97 = !DILocation(line: 68, column: 21, scope: !7)
!98 = !DILocation(line: 71, column: 20, scope: !7)
!99 = !DILocation(line: 72, column: 51, scope: !7)
!100 = !DILocation(line: 72, column: 43, scope: !7)
!101 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !102)
!102 = !DILocation(line: 73, column: 42, scope: !7)
!103 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !102)
!104 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !102)
!105 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !102)
!106 = !DILocation(line: 74, column: 20, scope: !7)
!107 = !DILocation(line: 75, column: 51, scope: !7)
!108 = !DILocation(line: 75, column: 43, scope: !7)
!109 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !110)
!110 = !DILocation(line: 76, column: 42, scope: !7)
!111 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !110)
!114 = !DILocation(line: 77, column: 20, scope: !7)
!115 = !DILocation(line: 78, column: 51, scope: !7)
!116 = !DILocation(line: 78, column: 43, scope: !7)
!117 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !118)
!118 = !DILocation(line: 79, column: 42, scope: !7)
!119 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !118)
!120 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !118)
!121 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !118)
!122 = !DILocation(line: 80, column: 20, scope: !7)
!123 = !DILocation(line: 81, column: 51, scope: !7)
!124 = !DILocation(line: 81, column: 43, scope: !7)
!125 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !126)
!126 = !DILocation(line: 82, column: 42, scope: !7)
!127 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !126)
!128 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !126)
!129 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !126)
!130 = !DILocation(line: 83, column: 20, scope: !7)
!131 = !DILocation(line: 84, column: 51, scope: !7)
!132 = !DILocation(line: 84, column: 43, scope: !7)
!133 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !134)
!134 = !DILocation(line: 85, column: 42, scope: !7)
!135 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !134)
!136 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !134)
!137 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !134)
!138 = !DILocation(line: 87, column: 21, scope: !7)
!139 = !DILocation(line: 90, column: 20, scope: !7)
!140 = !DILocation(line: 91, column: 51, scope: !7)
!141 = !DILocation(line: 91, column: 43, scope: !7)
!142 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !143)
!143 = !DILocation(line: 92, column: 42, scope: !7)
!144 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !143)
!145 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !143)
!146 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !143)
!147 = !DILocation(line: 93, column: 20, scope: !7)
!148 = !DILocation(line: 94, column: 51, scope: !7)
!149 = !DILocation(line: 94, column: 43, scope: !7)
!150 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !151)
!151 = !DILocation(line: 95, column: 42, scope: !7)
!152 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !151)
!153 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !151)
!154 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !151)
!155 = !DILocation(line: 97, column: 44, scope: !7)
!156 = !DILocation(line: 97, column: 36, scope: !7)
!157 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !158)
!158 = !DILocation(line: 98, column: 42, scope: !7)
!159 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !158)
!160 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !158)
!161 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !158)
!162 = !DILocation(line: 99, column: 20, scope: !7)
!163 = !DILocation(line: 100, column: 48, scope: !7)
!164 = !DILocation(line: 100, column: 40, scope: !7)
!165 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !166)
!166 = !DILocation(line: 101, column: 42, scope: !7)
!167 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !166)
!168 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !166)
!169 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !166)
!170 = !DILocation(line: 102, column: 20, scope: !7)
!171 = !DILocation(line: 103, column: 48, scope: !7)
!172 = !DILocation(line: 103, column: 40, scope: !7)
!173 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !174)
!174 = !DILocation(line: 104, column: 42, scope: !7)
!175 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !174)
!176 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !174)
!177 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !174)
!178 = !DILocation(line: 109, column: 20, scope: !7)
!179 = !DILocation(line: 110, column: 48, scope: !7)
!180 = !DILocation(line: 110, column: 40, scope: !7)
!181 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !182)
!182 = !DILocation(line: 111, column: 42, scope: !7)
!183 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !182)
!184 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !182)
!185 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !182)
!186 = !DILocation(line: 112, column: 20, scope: !7)
!187 = !DILocation(line: 113, column: 48, scope: !7)
!188 = !DILocation(line: 113, column: 40, scope: !7)
!189 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !190)
!190 = !DILocation(line: 114, column: 42, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !190)
!194 = !DILocation(line: 115, column: 20, scope: !7)
!195 = !DILocation(line: 116, column: 48, scope: !7)
!196 = !DILocation(line: 116, column: 40, scope: !7)
!197 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !198)
!198 = !DILocation(line: 117, column: 42, scope: !7)
!199 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !198)
!200 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !198)
!201 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !198)
!202 = !DILocation(line: 118, column: 20, scope: !7)
!203 = !DILocation(line: 119, column: 48, scope: !7)
!204 = !DILocation(line: 119, column: 40, scope: !7)
!205 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !206)
!206 = !DILocation(line: 120, column: 42, scope: !7)
!207 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !206)
!208 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !206)
!209 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !206)
!210 = !DILocation(line: 121, column: 20, scope: !7)
!211 = !DILocation(line: 122, column: 48, scope: !7)
!212 = !DILocation(line: 122, column: 40, scope: !7)
!213 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !214)
!214 = !DILocation(line: 123, column: 42, scope: !7)
!215 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !214)
!216 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !214)
!217 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !214)
!218 = !DILocation(line: 128, column: 22, scope: !7)
!219 = !DILocation(line: 129, column: 50, scope: !7)
!220 = !DILocation(line: 129, column: 41, scope: !7)
!221 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !222)
!222 = !DILocation(line: 130, column: 44, scope: !7)
!223 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !222)
!224 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !222)
!225 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !222)
!226 = !DILocation(line: 131, column: 22, scope: !7)
!227 = !DILocation(line: 132, column: 36, scope: !7)
!228 = !DILocation(line: 132, column: 32, scope: !7)
!229 = !DILocation(line: 132, column: 50, scope: !7)
!230 = !DILocation(line: 132, column: 41, scope: !7)
!231 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !232)
!232 = !DILocation(line: 133, column: 44, scope: !7)
!233 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !232)
!234 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !232)
!235 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !232)
!236 = !DILocation(line: 134, column: 22, scope: !7)
!237 = !DILocation(line: 135, column: 36, scope: !7)
!238 = !DILocation(line: 135, column: 32, scope: !7)
!239 = !DILocation(line: 135, column: 50, scope: !7)
!240 = !DILocation(line: 135, column: 41, scope: !7)
!241 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !242)
!242 = !DILocation(line: 136, column: 44, scope: !7)
!243 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !242)
!244 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !242)
!245 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !242)
!246 = !DILocation(line: 137, column: 22, scope: !7)
!247 = !DILocation(line: 138, column: 36, scope: !7)
!248 = !DILocation(line: 138, column: 32, scope: !7)
!249 = !DILocation(line: 138, column: 50, scope: !7)
!250 = !DILocation(line: 138, column: 41, scope: !7)
!251 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !252)
!252 = !DILocation(line: 139, column: 44, scope: !7)
!253 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !252)
!254 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !252)
!255 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !252)
!256 = !DILocation(line: 141, column: 37, scope: !7)
!257 = !DILocation(line: 141, column: 32, scope: !7)
!258 = !DILocation(line: 141, column: 51, scope: !7)
!259 = !DILocation(line: 141, column: 42, scope: !7)
!260 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !261)
!261 = !DILocation(line: 142, column: 44, scope: !7)
!262 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !261)
!263 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !261)
!264 = !DILocation(line: 146, column: 38, scope: !7)
!265 = !DILocation(line: 149, column: 38, scope: !7)
!266 = !DILocation(line: 152, column: 38, scope: !7)
!267 = !DILocation(line: 155, column: 38, scope: !7)
!268 = !DILocation(line: 158, column: 38, scope: !7)
!269 = !DILocation(line: 161, column: 38, scope: !7)
!270 = !DILocation(line: 164, column: 38, scope: !7)
!271 = !DILocation(line: 167, column: 38, scope: !7)
!272 = !DILocation(line: 170, column: 38, scope: !7)
!273 = !DILocation(line: 173, column: 38, scope: !7)
!274 = !DILocation(line: 176, column: 38, scope: !7)
!275 = !DILocation(line: 179, column: 38, scope: !7)
!276 = !DILocation(line: 182, column: 38, scope: !7)
!277 = !DILocation(line: 185, column: 38, scope: !7)
!278 = !DILocation(line: 188, column: 38, scope: !7)
!279 = !DILocation(line: 191, column: 38, scope: !7)
!280 = !DILocation(line: 194, column: 38, scope: !7)
!281 = !DILocation(line: 197, column: 38, scope: !7)
!282 = !DILocation(line: 200, column: 38, scope: !7)
!283 = !DILocation(line: 203, column: 38, scope: !7)
!284 = !DILocation(line: 206, column: 38, scope: !7)
!285 = !DILocation(line: 209, column: 38, scope: !7)
!286 = !DILocation(line: 212, column: 38, scope: !7)
!287 = !DILocation(line: 215, column: 38, scope: !7)
!288 = !DILocation(line: 216, column: 25, scope: !7)
!289 = !DILocation(line: 216, column: 38, scope: !7)
!290 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !261)
!291 = !DILocation(line: 217, column: 25, scope: !7)
!292 = !DILocation(line: 217, column: 38, scope: !7)
!293 = !DILocation(line: 217, column: 4, scope: !7)
