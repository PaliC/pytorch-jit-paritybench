; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 47360, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 185, !dbg !15
  %15 = mul i32 %14, 185, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = sdiv i32 %12, 185, !dbg !15
  %17 = srem i32 %14, 64, !dbg !17
  %18 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !17
  %19 = insertelement <2 x i32> %18, i32 %12, i64 1, !dbg !17
  %20 = srem <2 x i32> %19, <i32 64, i32 185>, !dbg !17
  %21 = sdiv i32 %11, 11840, !dbg !18
  %22 = icmp slt i32 %.decomposed, 128, !dbg !19
  %23 = extractelement <2 x i32> %20, i64 1, !dbg !20
  %24 = icmp slt i32 %23, 128, !dbg !19
  %25 = shl nsw i32 %14, 7, !dbg !21
  %26 = shl nsw i32 %16, 7, !dbg !21
  %27 = add nsw i32 %25, %.decomposed, !dbg !22
  %28 = add nsw i32 %26, %23, !dbg !22
  %29 = sext i32 %27 to i64, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !23
  %31 = sext i32 %28 to i64, !dbg !23
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !23
  %33 = and i1 %13, %22, !dbg !24
  %34 = and i1 %24, %13, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %33, i32 0, i1 %33) #1, !dbg !25
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %34, i32 0, i1 %34) #1, !dbg !25
  %37 = add nsw i32 %.decomposed, -128, !dbg !26
  %38 = icmp ult i32 %37, 19, !dbg !26
  %39 = add nsw i32 %23, -128, !dbg !26
  %40 = icmp ult i32 %39, 19, !dbg !26
  %41 = shl nsw i32 %.decomposed, 6, !dbg !27
  %42 = shl nsw i32 %23, 6, !dbg !27
  %43 = mul nsw i32 %21, 1216, !dbg !28
  %44 = add nsw i32 %43, -8192, !dbg !27
  %45 = add nsw i32 %44, %41, !dbg !29
  %46 = add nsw i32 %45, %17, !dbg !30
  %47 = extractelement <2 x i32> %20, i64 0, !dbg !27
  %48 = add nsw i32 %47, %42, !dbg !27
  %49 = add nsw i32 %48, -8192, !dbg !29
  %50 = add nsw i32 %49, %43, !dbg !30
  %51 = sext i32 %46 to i64, !dbg !31
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !31
  %53 = sext i32 %50 to i64, !dbg !31
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !31
  %55 = and i1 %13, %38, !dbg !32
  %56 = and i1 %40, %13, !dbg !32
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %55, i32 0, i1 %55) #1, !dbg !33
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %56, i32 0, i1 %56) #1, !dbg !33
  %59 = icmp sgt i32 %.decomposed, 146, !dbg !20
  %60 = icmp sgt i32 %23, 146, !dbg !20
  %61 = mul nsw i32 %21, 2432, !dbg !34
  %62 = add nsw i32 %61, -9408, !dbg !35
  %63 = add nsw i32 %62, %41, !dbg !36
  %64 = add nsw i32 %63, %17, !dbg !37
  %65 = add nsw i32 %48, -9408, !dbg !36
  %66 = add nsw i32 %65, %61, !dbg !37
  %67 = sext i32 %64 to i64, !dbg !38
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %67, !dbg !38
  %69 = sext i32 %66 to i64, !dbg !38
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !38
  %71 = and i1 %13, %59, !dbg !39
  %72 = and i1 %60, %13, !dbg !39
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %71, i32 0, i1 %71) #1, !dbg !40
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %72, i32 0, i1 %72) #1, !dbg !40
  %.v = select i1 %38, i32 %57, i32 %73, !dbg !41
  %.v1 = select i1 %40, i32 %58, i32 %74, !dbg !41
  %.v2 = select i1 %22, i32 %35, i32 %.v, !dbg !42
  %.v3 = select i1 %24, i32 %36, i32 %.v1, !dbg !42
  %75 = sext i32 %11 to i64, !dbg !43
  %76 = getelementptr float, ptr addrspace(1) %3, i64 %75, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v2, i32 %.v3, ptr addrspace(1) %76, i1 %13) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxzq5wkq3crds7gwg4wdhdjinzrix6gfrbvhjofmnjwz3ii7j3jx.py", directory: "inductor_cache/xz")
!4 = !{ptr @triton_poi_fused_cat_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_16, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_16", linkageName: "triton_poi_fused_cat_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 28, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 40, column: 20, scope: !7)
!21 = !DILocation(line: 34, column: 34, scope: !7)
!22 = !DILocation(line: 34, column: 40, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 53, scope: !7)
!25 = !DILocation(line: 34, column: 46, scope: !7)
!26 = !DILocation(line: 38, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 40, scope: !7)
!28 = !DILocation(line: 39, column: 60, scope: !7)
!29 = !DILocation(line: 39, column: 36, scope: !7)
!30 = !DILocation(line: 39, column: 55, scope: !7)
!31 = !DILocation(line: 39, column: 31, scope: !7)
!32 = !DILocation(line: 39, column: 72, scope: !7)
!33 = !DILocation(line: 39, column: 65, scope: !7)
!34 = !DILocation(line: 43, column: 60, scope: !7)
!35 = !DILocation(line: 43, column: 40, scope: !7)
!36 = !DILocation(line: 43, column: 36, scope: !7)
!37 = !DILocation(line: 43, column: 55, scope: !7)
!38 = !DILocation(line: 43, column: 31, scope: !7)
!39 = !DILocation(line: 43, column: 73, scope: !7)
!40 = !DILocation(line: 43, column: 65, scope: !7)
!41 = !DILocation(line: 44, column: 34, scope: !7)
!42 = !DILocation(line: 45, column: 33, scope: !7)
!43 = !DILocation(line: 46, column: 25, scope: !7)
!44 = !DILocation(line: 46, column: 37, scope: !7)
!45 = !DILocation(line: 46, column: 4, scope: !7)
