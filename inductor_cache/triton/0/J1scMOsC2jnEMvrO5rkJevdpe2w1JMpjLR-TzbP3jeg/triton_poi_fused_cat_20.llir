; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_cat_20(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = and i32 %6, 127, !dbg !12
  %10 = or disjoint i32 %9, 128, !dbg !12
  %11 = or disjoint i32 %5, %8, !dbg !13
  %12 = or disjoint i32 %5, %9, !dbg !13
  %13 = or disjoint i32 %5, %10, !dbg !13
  %14 = icmp slt i32 %11, 256, !dbg !14
  %15 = icmp slt i32 %12, 256, !dbg !14
  %16 = icmp slt i32 %13, 256, !dbg !14
  %17 = sdiv i32 %11, 4, !dbg !15
  %18 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !16
  %19 = insertelement <2 x i32> %18, i32 %11, i64 1, !dbg !16
  %20 = srem <2 x i32> %19, splat (i32 4), !dbg !16
  %21 = add nsw <2 x i32> %20, splat (i32 2), !dbg !17
  %shift = shufflevector <2 x i32> %21, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !18
  %22 = or <2 x i32> %21, %shift, !dbg !18
  %23 = extractelement <2 x i32> %22, i64 0, !dbg !18
  %24 = icmp ult i32 %23, 4, !dbg !18
  %25 = add i32 %11, 10, !dbg !19
  %26 = sext i32 %25 to i64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !20
  %28 = and i1 %14, %24, !dbg !21
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 -971227136, i1 %28, i32 -971227136, i1 %28) #2, !dbg !22
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !22
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !22
  %32 = mul i32 %12, 25, !dbg !23
  %33 = mul i32 %13, 25, !dbg !23
  %34 = sext i32 %32 to i64, !dbg !24
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !24
  %36 = sext i32 %33 to i64, !dbg !24
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !24
  %38 = zext nneg i32 %8 to i64, !dbg !25
  %39 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %38, !dbg !25
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %39, i32 %30, i32 %31, i1 true) #2, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %40 = zext nneg i32 %9 to i64, !dbg !25
  %41 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %40, !dbg !25
  %42 = load i32, ptr addrspace(3) %41, align 4, !dbg !25
  %43 = zext nneg i32 %10 to i64, !dbg !25
  %44 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %43, !dbg !25
  %45 = load i32, ptr addrspace(3) %44, align 4, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %42, ptr addrspace(1) %35, i1 %15) #2, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %45, ptr addrspace(1) %37, i1 %16) #2, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmlwcvjjsf255jmowaln5og3kpjjih5wrrrcrkamzk3vwjsdkrhs.py", directory: "inductor_cache/ml")
!4 = !{ptr @triton_poi_fused_cat_20, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_20, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_20", linkageName: "triton_poi_fused_cat_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 35, column: 18, scope: !7)
!18 = !DILocation(line: 37, column: 19, scope: !7)
!19 = !DILocation(line: 38, column: 36, scope: !7)
!20 = !DILocation(line: 38, column: 31, scope: !7)
!21 = !DILocation(line: 38, column: 49, scope: !7)
!22 = !DILocation(line: 38, column: 41, scope: !7)
!23 = !DILocation(line: 39, column: 28, scope: !7)
!24 = !DILocation(line: 39, column: 25, scope: !7)
!25 = !DILocation(line: 39, column: 40, scope: !7)
!26 = !DILocation(line: 39, column: 4, scope: !7)
