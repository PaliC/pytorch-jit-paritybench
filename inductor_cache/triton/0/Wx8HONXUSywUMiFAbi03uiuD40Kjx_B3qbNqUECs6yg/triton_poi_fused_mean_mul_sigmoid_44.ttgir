#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_mean_mul_sigmoid_44(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<7296> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<1824> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3648> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<5472> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.muli %7, %cst_2 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = arith.addi %6, %cst_3 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = arith.addi %13, %8 : tensor<256xi32, #blocked> loc(#loc14)
    %15 = tt.addptr %10, %14 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc15)
    %16 = tt.load %15, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %17 = arith.addi %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = arith.addi %17, %8 : tensor<256xi32, #blocked> loc(#loc18)
    %19 = tt.addptr %10, %18 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc19)
    %20 = tt.load %19, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc20)
    %21 = arith.addi %6, %cst_5 : tensor<256xi32, #blocked> loc(#loc21)
    %22 = arith.addi %21, %8 : tensor<256xi32, #blocked> loc(#loc22)
    %23 = tt.addptr %10, %22 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc23)
    %24 = tt.load %23, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc24)
    %25 = arith.subf %cst_1, %12 : tensor<256xf32, #blocked> loc(#loc44)
    %26 = math.exp %25 : tensor<256xf32, #blocked> loc(#loc45)
    %27 = arith.addf %26, %cst_0 : tensor<256xf32, #blocked> loc(#loc46)
    %28 = arith.divf %cst_0, %27 : tensor<256xf32, #blocked> loc(#loc47)
    %29 = arith.mulf %12, %28 : tensor<256xf32, #blocked> loc(#loc30)
    %30 = arith.subf %cst_1, %16 : tensor<256xf32, #blocked> loc(#loc48)
    %31 = math.exp %30 : tensor<256xf32, #blocked> loc(#loc49)
    %32 = arith.addf %31, %cst_0 : tensor<256xf32, #blocked> loc(#loc50)
    %33 = arith.divf %cst_0, %32 : tensor<256xf32, #blocked> loc(#loc51)
    %34 = arith.mulf %16, %33 : tensor<256xf32, #blocked> loc(#loc32)
    %35 = arith.addf %29, %34 : tensor<256xf32, #blocked> loc(#loc33)
    %36 = arith.subf %cst_1, %20 : tensor<256xf32, #blocked> loc(#loc52)
    %37 = math.exp %36 : tensor<256xf32, #blocked> loc(#loc53)
    %38 = arith.addf %37, %cst_0 : tensor<256xf32, #blocked> loc(#loc54)
    %39 = arith.divf %cst_0, %38 : tensor<256xf32, #blocked> loc(#loc55)
    %40 = arith.mulf %20, %39 : tensor<256xf32, #blocked> loc(#loc35)
    %41 = arith.addf %35, %40 : tensor<256xf32, #blocked> loc(#loc36)
    %42 = arith.subf %cst_1, %24 : tensor<256xf32, #blocked> loc(#loc56)
    %43 = math.exp %42 : tensor<256xf32, #blocked> loc(#loc57)
    %44 = arith.addf %43, %cst_0 : tensor<256xf32, #blocked> loc(#loc58)
    %45 = arith.divf %cst_0, %44 : tensor<256xf32, #blocked> loc(#loc59)
    %46 = arith.mulf %24, %45 : tensor<256xf32, #blocked> loc(#loc38)
    %47 = arith.addf %41, %46 : tensor<256xf32, #blocked> loc(#loc39)
    %48 = arith.divf %47, %cst : tensor<256xf32, #blocked> loc(#loc40)
    %49 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc41)
    %50 = tt.addptr %49, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc41)
    tt.store %50, %48, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":21:28)
#loc3 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":21:33)
#loc4 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":22:36)
#loc5 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":22:23)
#loc6 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":23:21)
#loc7 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":24:19)
#loc8 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":25:19)
#loc9 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":27:40)
#loc10 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":27:35)
#loc11 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":27:30)
#loc12 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":27:45)
#loc13 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":28:37)
#loc14 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":28:42)
#loc15 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":28:30)
#loc16 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":28:52)
#loc17 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":29:37)
#loc18 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":29:42)
#loc19 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":29:30)
#loc20 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":29:52)
#loc21 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":30:38)
#loc22 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":30:43)
#loc23 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":30:31)
#loc24 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":30:53)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc26 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":31:22)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc30 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":32:18)
#loc31 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":33:22)
#loc32 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":34:18)
#loc33 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":35:18)
#loc34 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":36:22)
#loc35 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":37:18)
#loc36 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":38:19)
#loc37 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":39:23)
#loc38 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":40:20)
#loc39 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":41:20)
#loc40 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":43:20)
#loc41 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":44:25)
#loc42 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":44:37)
#loc43 = loc("inductor_cache/yo/cyoivvekxnlcbq2klchrwlnrgo5rytthoqj5h2x3ocxfb2zdyim7.py":44:4)
#loc44 = loc(callsite(#loc25 at #loc26))
#loc45 = loc(callsite(#loc27 at #loc26))
#loc46 = loc(callsite(#loc28 at #loc26))
#loc47 = loc(callsite(#loc29 at #loc26))
#loc48 = loc(callsite(#loc25 at #loc31))
#loc49 = loc(callsite(#loc27 at #loc31))
#loc50 = loc(callsite(#loc28 at #loc31))
#loc51 = loc(callsite(#loc29 at #loc31))
#loc52 = loc(callsite(#loc25 at #loc34))
#loc53 = loc(callsite(#loc27 at #loc34))
#loc54 = loc(callsite(#loc28 at #loc34))
#loc55 = loc(callsite(#loc29 at #loc34))
#loc56 = loc(callsite(#loc25 at #loc37))
#loc57 = loc(callsite(#loc27 at #loc37))
#loc58 = loc(callsite(#loc28 at #loc37))
#loc59 = loc(callsite(#loc29 at #loc37))
