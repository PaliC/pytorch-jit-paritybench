; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 1536, !dbg !14
  %13 = sdiv i32 %11, 16, !dbg !15
  %14 = srem i32 %13, 6, !dbg !16
  %.frozen4 = freeze i32 %11, !dbg !17
  %15 = sdiv i32 %.frozen4, 96, !dbg !17
  %.frozen = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen, 4, !dbg !18
  %17 = srem i32 %16, 4, !dbg !19
  %18 = mul i32 %16, 4, !dbg !20
  %.decomposed = sub i32 %.frozen, %18, !dbg !20
  %19 = icmp slt i32 %14, 4, !dbg !21
  %20 = mul i32 %15, 96, !dbg !22
  %srem.decomposed = sub i32 %.frozen4, %20, !dbg !22
  %21 = shl nsw i32 %15, 6, !dbg !23
  %22 = add nsw i32 %21, %srem.decomposed, !dbg !24
  %23 = sext i32 %22 to i64, !dbg !25
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !25
  %25 = and i1 %12, %19, !dbg !26
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %24, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #1, !dbg !27
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !27
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !27
  %29 = icmp sgt i32 %14, 3, !dbg !28
  %30 = shl nsw i32 %14, 2, !dbg !29
  %31 = add nsw i32 %30, -16, !dbg !29
  %32 = add nsw i32 %31, %17, !dbg !30
  %33 = icmp slt i32 %32, 4, !dbg !31
  %34 = and i1 %29, %33, !dbg !32
  %35 = shl nsw i32 %32, 2, !dbg !33
  %36 = shl nsw i32 %15, 4, !dbg !34
  %37 = add nsw i32 %36, %.decomposed, !dbg !35
  %38 = add nsw i32 %37, %35, !dbg !36
  %39 = sext i32 %38 to i64, !dbg !37
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !37
  %41 = and i1 %12, %34, !dbg !38
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41, i32 0, i1 %41) #1, !dbg !39
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !39
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !39
  %45 = icmp sgt i32 %32, 3, !dbg !40
  %46 = and i1 %29, %45, !dbg !41
  %47 = add nsw i32 %35, -16, !dbg !42
  %48 = add nsw i32 %37, %47, !dbg !43
  %49 = sext i32 %48 to i64, !dbg !44
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %49, !dbg !44
  %51 = and i1 %12, %46, !dbg !45
  %52 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %50, i1 %51, i32 0, i1 %51, i32 0, i1 %51) #1, !dbg !46
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !46
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !46
  %.v = select i1 %33, i32 %43, i32 %53, !dbg !47
  %.v1 = select i1 %33, i32 %44, i32 %54, !dbg !47
  %.v2 = select i1 %19, i32 %27, i32 %.v, !dbg !48
  %.v3 = select i1 %19, i32 %28, i32 %.v1, !dbg !48
  %55 = sext i32 %11 to i64, !dbg !49
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %55, !dbg !49
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v2, i32 %.v3, ptr addrspace(1) %56, i1 %12) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csg5rm5h2gj33woe5g2dbfqm4ugdg3nluxgo46pr55gjiyf4cdps.py", directory: "inductor_cache/sg")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 27, column: 26, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 35, scope: !7)
!23 = !DILocation(line: 35, column: 48, scope: !7)
!24 = !DILocation(line: 35, column: 45, scope: !7)
!25 = !DILocation(line: 35, column: 30, scope: !7)
!26 = !DILocation(line: 35, column: 60, scope: !7)
!27 = !DILocation(line: 35, column: 53, scope: !7)
!28 = !DILocation(line: 36, column: 19, scope: !7)
!29 = !DILocation(line: 39, column: 19, scope: !7)
!30 = !DILocation(line: 39, column: 16, scope: !7)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 20, scope: !7)
!33 = !DILocation(line: 45, column: 39, scope: !7)
!34 = !DILocation(line: 45, column: 64, scope: !7)
!35 = !DILocation(line: 45, column: 36, scope: !7)
!36 = !DILocation(line: 45, column: 61, scope: !7)
!37 = !DILocation(line: 45, column: 31, scope: !7)
!38 = !DILocation(line: 45, column: 77, scope: !7)
!39 = !DILocation(line: 45, column: 69, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 49, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 39, scope: !7)
!43 = !DILocation(line: 50, column: 68, scope: !7)
!44 = !DILocation(line: 50, column: 31, scope: !7)
!45 = !DILocation(line: 50, column: 84, scope: !7)
!46 = !DILocation(line: 50, column: 76, scope: !7)
!47 = !DILocation(line: 51, column: 35, scope: !7)
!48 = !DILocation(line: 54, column: 33, scope: !7)
!49 = !DILocation(line: 55, column: 25, scope: !7)
!50 = !DILocation(line: 55, column: 37, scope: !7)
!51 = !DILocation(line: 55, column: 4, scope: !7)
