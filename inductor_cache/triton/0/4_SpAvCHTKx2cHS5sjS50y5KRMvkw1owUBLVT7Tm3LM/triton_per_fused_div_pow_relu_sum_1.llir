; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_per_fused_div_pow_relu_sum_1(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = icmp slt i32 %4, 64, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = shl i32 %4, 4, !dbg !13
  %9 = or disjoint i32 %8, %7, !dbg !14
  %10 = sext i32 %9 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %11, i1 %5, i32 0, i1 %5) #4, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = fcmp olt float %13, 0.000000e+00, !dbg !17
  %15 = select i1 %14, float 0.000000e+00, float %13, !dbg !21
  %16 = fmul float %15, %15, !dbg !22
  %17 = select i1 %5, float %16, float 0.000000e+00, !dbg !23
  %18 = bitcast float %17 to i32, !dbg !24
  %19 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %18, i32 8, i32 31), !dbg !24
  %20 = bitcast i32 %19 to float, !dbg !24
  %21 = fadd float %17, %20, !dbg !28
  %22 = bitcast float %21 to i32, !dbg !24
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 4, i32 31), !dbg !24
  %24 = bitcast i32 %23 to float, !dbg !24
  %25 = fadd float %21, %24, !dbg !28
  %26 = bitcast float %25 to i32, !dbg !24
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 2, i32 31), !dbg !24
  %28 = bitcast i32 %27 to float, !dbg !24
  %29 = fadd float %25, %28, !dbg !28
  %30 = bitcast float %29 to i32, !dbg !24
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 1, i32 31), !dbg !24
  %32 = bitcast i32 %31 to float, !dbg !24
  %33 = fadd float %29, %32, !dbg !28
  %34 = fadd float %33, 0x3EB0C6F7A0000000, !dbg !30
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not.i = icmp eq i32 %35, 0, !dbg !31
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !31
  %.not1.i = icmp eq i32 %36, 0, !dbg !31
  br i1 %.not.i, label %42, label %37, !dbg !31

37:                                               ; preds = %3
  br i1 %.not1.i, label %40, label %38, !dbg !31

38:                                               ; preds = %37
  %39 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %34) #4, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

40:                                               ; preds = %37
  %41 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %34) #4, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

42:                                               ; preds = %3
  br i1 %.not1.i, label %45, label %43, !dbg !31

43:                                               ; preds = %42
  %44 = tail call float @llvm.nvvm.sqrt.rn.f(float %34) #4, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

45:                                               ; preds = %42
  %46 = tail call float @llvm.nvvm.sqrt.approx.f(float %34) #4, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %38, %40, %43, %45
  %.0.i = phi float [ %39, %38 ], [ %41, %40 ], [ %44, %43 ], [ %46, %45 ], !dbg !31
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %15, float %.0.i) #4, !dbg !32
  %48 = and i32 %6, 48, !dbg !33
  %49 = icmp eq i32 %48, 0, !dbg !33
  %50 = bitcast float %47 to i32, !dbg !33
  %51 = and i1 %49, %5, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %50, ptr addrspace(1) %11, i1 %51) #4, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py", directory: "inductor_cache/i6")
!4 = !{ptr @triton_per_fused_div_pow_relu_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_div_pow_relu_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_div_pow_relu_sum_1", linkageName: "triton_per_fused_div_pow_relu_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 118, column: 15, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!20 = !DILocation(line: 33, column: 40, scope: !7)
!21 = !DILocation(line: 121, column: 29, scope: !18, inlinedAt: !20)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 36, column: 33, scope: !7)
!24 = !DILocation(line: 267, column: 36, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = !DILocation(line: 37, column: 24, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 39, column: 18, scope: !7)
!31 = !DILocation(line: 40, column: 27, scope: !7)
!32 = !DILocation(line: 41, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 48, scope: !7)
!34 = !DILocation(line: 42, column: 4, scope: !7)
