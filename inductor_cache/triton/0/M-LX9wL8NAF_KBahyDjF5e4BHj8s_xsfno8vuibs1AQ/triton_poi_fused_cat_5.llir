; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 128, !dbg !14
  %12 = mul i32 %11, 128, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = icmp slt i32 %.decomposed, 64, !dbg !16
  %14 = shl nsw i32 %11, 6, !dbg !17
  %15 = add nsw i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %13, i32 0, i1 %13, i32 0, i1 %13) #1, !dbg !20
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !20
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !20
  %21 = bitcast i32 %19 to float, !dbg !20
  %22 = bitcast i32 %20 to float, !dbg !20
  %23 = fsub float 0.000000e+00, %21, !dbg !21
  %24 = fsub float 0.000000e+00, %22, !dbg !21
  %25 = fmul float %23, 0x3FF7154760000000, !dbg !25
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #1, !dbg !25
  %27 = fmul float %24, 0x3FF7154760000000, !dbg !25
  %28 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %27) #1, !dbg !25
  %29 = fadd float %26, 1.000000e+00, !dbg !26
  %30 = fadd float %28, 1.000000e+00, !dbg !26
  %31 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %29) #1, !dbg !27
  %32 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %30) #1, !dbg !27
  %33 = fmul float %31, %21, !dbg !28
  %34 = fmul float %32, %22, !dbg !28
  %35 = icmp sgt i32 %.decomposed, 63, !dbg !29
  %36 = sext i32 %15 to i64, !dbg !30
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !30
  %38 = getelementptr i8, ptr addrspace(1) %37, i64 -256, !dbg !30
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %38, i1 %35, i32 0, i1 %35, i32 0, i1 %35) #1, !dbg !31
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !31
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !31
  %42 = bitcast i32 %40 to float, !dbg !31
  %43 = bitcast i32 %41 to float, !dbg !31
  %44 = fsub float 0.000000e+00, %42, !dbg !32
  %45 = fsub float 0.000000e+00, %43, !dbg !32
  %46 = fmul float %44, 0x3FF7154760000000, !dbg !34
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #1, !dbg !34
  %48 = fmul float %45, 0x3FF7154760000000, !dbg !34
  %49 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %48) #1, !dbg !34
  %50 = fadd float %47, 1.000000e+00, !dbg !35
  %51 = fadd float %49, 1.000000e+00, !dbg !35
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %50) #1, !dbg !36
  %53 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %51) #1, !dbg !36
  %54 = fmul float %52, %42, !dbg !37
  %55 = fmul float %53, %43, !dbg !37
  %56 = select i1 %13, float %33, float %54, !dbg !38
  %57 = select i1 %13, float %34, float %55, !dbg !38
  %58 = sext i32 %10 to i64, !dbg !39
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !39
  %60 = bitcast float %56 to i32, !dbg !40
  %61 = bitcast float %57 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %60, i32 %61, ptr addrspace(1) %59, i1 true) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccblpak4ieiqykkzfcfjucmsjbmq2ghop6nechnhuljyum662cdu.py", directory: "inductor_cache/cb")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 33, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 45, scope: !7)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 33, column: 22, scope: !7)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 37, column: 20, scope: !7)
!30 = !DILocation(line: 40, column: 31, scope: !7)
!31 = !DILocation(line: 40, column: 54, scope: !7)
!32 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !33)
!33 = !DILocation(line: 41, column: 23, scope: !7)
!34 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !33)
!35 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !33)
!36 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !33)
!37 = !DILocation(line: 42, column: 20, scope: !7)
!38 = !DILocation(line: 0, scope: !7)
!39 = !DILocation(line: 46, column: 25, scope: !7)
!40 = !DILocation(line: 46, column: 37, scope: !7)
!41 = !DILocation(line: 46, column: 4, scope: !7)
