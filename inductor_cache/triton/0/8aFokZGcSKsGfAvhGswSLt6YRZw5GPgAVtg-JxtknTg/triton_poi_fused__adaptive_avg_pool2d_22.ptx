//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__adaptive_avg_pool2d_22 // -- Begin function triton_poi_fused__adaptive_avg_pool2d_22
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__adaptive_avg_pool2d_22
.visible .entry triton_poi_fused__adaptive_avg_pool2d_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused__adaptive_avg_pool2d_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__adaptive_avg_pool2d_22_param_1,
	.param .u32 triton_poi_fused__adaptive_avg_pool2d_22_param_2,
	.param .u32 triton_poi_fused__adaptive_avg_pool2d_22_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<124>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused__adaptive_avg_pool2d_22_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__adaptive_avg_pool2d_22_param_1];
$L__tmp0:
	.loc	1 22 28                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:22:33
	shl.b32 	%r59, %r1, 4;
	.loc	1 23 44                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:23:44
	mov.u32 	%r60, %tid.x;
	bfe.u32 	%r61, %r60, 4, 3;
	shl.b32 	%r62, %r60, 2;
	and.b32  	%r63, %r62, 12;
	.loc	1 23 23                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:23:23
	or.b32  	%r64, %r59, %r61;
	or.b32  	%r65, %r64, 8;
	or.b32  	%r66, %r59, %r63;
	.loc	1 24 21                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:24:21
	setp.lt.s32 	%p19, %r64, 16;
	setp.lt.s32 	%p20, %r65, 16;
	setp.lt.s32 	%p21, %r66, 16;
	.loc	1 25 28                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:25:33
	shl.b32 	%r67, %r2, 6;
	.loc	1 26 44                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:26:44
	and.b32  	%r68, %r62, 60;
	bfe.u32 	%r69, %r60, 2, 5;
	.loc	1 26 23                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:26:23
	or.b32  	%r70, %r67, %r68;
	or.b32  	%r71, %r67, %r69;
	or.b32  	%r72, %r71, 32;
	.loc	1 27 21                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:27:21
	setp.lt.s32 	%p22, %r70, 2048;
	setp.lt.s32 	%p23, %r71, 2048;
	setp.lt.s32 	%p24, %r72, 2048;
	.loc	1 32 40                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:32:40
	shl.b32 	%r73, %r64, 13;
	shl.b32 	%r74, %r65, 13;
	.loc	1 32 35                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:32:35
	add.s32 	%r75, %r70, %r73;
	add.s32 	%r76, %r70, %r74;
	.loc	1 32 30                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:32:30
	mul.wide.s32 	%rd13, %r75, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r76, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 32 53                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:32:53
	and.pred  	%p1, %p19, %p22;
	and.pred  	%p2, %p20, %p22;
	and.pred  	%p17, %p21, %p23;
	and.pred  	%p18, %p24, %p21;
	.loc	1 32 45                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:32:45
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 33 37                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:33:37
	add.s32 	%r77, %r70, 2048;
	.loc	1 33 42                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:33:42
	add.s32 	%r78, %r77, %r73;
	add.s32 	%r79, %r77, %r74;
	.loc	1 33 30                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:33:30
	mul.wide.s32 	%rd15, %r78, 4;
	add.s64 	%rd3, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r79, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 33 52                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:33:52
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 34 37                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:34:37
	add.s32 	%r80, %r70, 4096;
	.loc	1 34 42                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:34:42
	add.s32 	%r81, %r80, %r73;
	add.s32 	%r82, %r80, %r74;
	.loc	1 34 30                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:34:30
	mul.wide.s32 	%rd17, %r81, 4;
	add.s64 	%rd5, %rd11, %rd17;
	mul.wide.s32 	%rd18, %r82, 4;
	add.s64 	%rd6, %rd11, %rd18;
	.loc	1 34 52                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:34:52
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	.loc	1 35 37                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:35:37
	add.s32 	%r83, %r70, 6144;
	.loc	1 35 42                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:35:42
	add.s32 	%r84, %r83, %r73;
	add.s32 	%r85, %r83, %r74;
	.loc	1 35 30                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:35:30
	mul.wide.s32 	%rd19, %r84, 4;
	add.s64 	%rd7, %rd11, %rd19;
	mul.wide.s32 	%rd20, %r85, 4;
	add.s64 	%rd8, %rd11, %rd20;
	.loc	1 35 52                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:35:52
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r28;
	mov.b32 	%f27, %r29;
	mov.b32 	%f28, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	mov.b32 	%f30, %r32;
	mov.b32 	%f31, %r33;
	mov.b32 	%f32, %r34;
	.loc	1 36 18                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:36:18
	add.f32 	%f33, %f1, %f9;
	add.f32 	%f34, %f2, %f10;
	add.f32 	%f35, %f3, %f11;
	add.f32 	%f36, %f4, %f12;
	add.f32 	%f37, %f5, %f13;
	add.f32 	%f38, %f6, %f14;
	add.f32 	%f39, %f7, %f15;
	add.f32 	%f40, %f8, %f16;
	.loc	1 37 18                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:37:18
	add.f32 	%f41, %f33, %f17;
	add.f32 	%f42, %f34, %f18;
	add.f32 	%f43, %f35, %f19;
	add.f32 	%f44, %f36, %f20;
	add.f32 	%f45, %f37, %f21;
	add.f32 	%f46, %f38, %f22;
	add.f32 	%f47, %f39, %f23;
	add.f32 	%f48, %f40, %f24;
	.loc	1 38 18                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:38:18
	add.f32 	%f49, %f41, %f25;
	add.f32 	%f50, %f42, %f26;
	add.f32 	%f51, %f43, %f27;
	add.f32 	%f52, %f44, %f28;
	add.f32 	%f53, %f45, %f29;
	add.f32 	%f54, %f46, %f30;
	add.f32 	%f55, %f47, %f31;
	add.f32 	%f56, %f48, %f32;
	.loc	1 40 18                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:40:18
	mul.f32 	%f57, %f49, 0f3E800000;
	mul.f32 	%f58, %f50, 0f3E800000;
	mul.f32 	%f59, %f51, 0f3E800000;
	mul.f32 	%f60, %f52, 0f3E800000;
	mul.f32 	%f61, %f53, 0f3E800000;
	mul.f32 	%f62, %f54, 0f3E800000;
	mul.f32 	%f63, %f55, 0f3E800000;
	mul.f32 	%f64, %f56, 0f3E800000;
	.loc	1 41 32                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:32
	shl.b32 	%r86, %r71, 2;
	shl.b32 	%r87, %r72, 2;
	.loc	1 41 42                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:42
	shl.b32 	%r88, %r66, 11;
	.loc	1 41 37                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:37
	add.s32 	%r89, %r86, %r88;
	add.s32 	%r90, %r88, %r87;
	.loc	1 41 25                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:25
	mul.wide.s32 	%rd21, %r89, 4;
	add.s64 	%rd9, %rd12, %rd21;
	mul.wide.s32 	%rd22, %r90, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 41 53                         // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:53
	shl.b32 	%r91, %r60, 6;
	and.b32  	%r92, %r91, 960;
	or.b32  	%r93, %r92, %r61;
	and.b32  	%r94, %r62, 508;
	shr.u32 	%r95, %r92, 2;
	add.s32 	%r96, %r95, %r93;
	shl.b32 	%r97, %r96, 2;
	mov.u32 	%r98, global_smem;
	add.s32 	%r35, %r98, %r97;
	mov.b32 	%r36, %f57;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r99, %r92, 16;
	shr.u32 	%r100, %r99, 2;
	add.s32 	%r101, %r100, %r93;
	shl.b32 	%r102, %r101, 2;
	add.s32 	%r103, %r98, %r102;
	add.s32 	%r37, %r103, 64;
	mov.b32 	%r38, %f58;
	// begin inline asm
	@%p9 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r104, %r92, 32;
	shr.u32 	%r105, %r104, 2;
	add.s32 	%r106, %r105, %r93;
	shl.b32 	%r107, %r106, 2;
	add.s32 	%r108, %r98, %r107;
	add.s32 	%r39, %r108, 128;
	mov.b32 	%r40, %f59;
	// begin inline asm
	@%p9 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r109, %r92, 48;
	shr.u32 	%r110, %r109, 2;
	add.s32 	%r111, %r110, %r93;
	shl.b32 	%r112, %r111, 2;
	add.s32 	%r113, %r98, %r112;
	add.s32 	%r41, %r113, 192;
	mov.b32 	%r42, %f60;
	// begin inline asm
	@%p9 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 32;
	mov.b32 	%r44, %f61;
	// begin inline asm
	@%p9 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r103, 96;
	mov.b32 	%r46, %f62;
	// begin inline asm
	@%p9 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r108, 160;
	mov.b32 	%r48, %f63;
	// begin inline asm
	@%p9 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r113, 224;
	mov.b32 	%r50, %f64;
	// begin inline asm
	@%p9 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r114, %r60, 124;
	add.s32 	%r115, %r94, %r114;
	shl.b32 	%r116, %r115, 2;
	add.s32 	%r117, %r98, %r116;
	or.b32  	%r118, %r94, 512;
	shr.u32 	%r119, %r118, 2;
	and.b32  	%r120, %r119, 252;
	add.s32 	%r121, %r120, %r94;
	shl.b32 	%r122, %r121, 2;
	add.s32 	%r123, %r98, %r122;
	ld.shared.v4.u32 	{%r55, %r56, %r57, %r58}, [%r123+2048];
	ld.shared.v4.u32 	{%r51, %r52, %r53, %r54}, [%r117];
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd9 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd10 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	.loc	1 41 4                          // c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/72/c72bk65gghhmkvbduvkj4kqsycj5htk7ot36uxf2vvimyg3amvur.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 50
.b8 98
.b8 107
.b8 54
.b8 53
.b8 103
.b8 103
.b8 104
.b8 104
.b8 109
.b8 107
.b8 118
.b8 98
.b8 100
.b8 117
.b8 118
.b8 107
.b8 106
.b8 52
.b8 107
.b8 113
.b8 115
.b8 121
.b8 99
.b8 106
.b8 53
.b8 104
.b8 116
.b8 107
.b8 55
.b8 111
.b8 116
.b8 51
.b8 54
.b8 117
.b8 120
.b8 102
.b8 50
.b8 118
.b8 118
.b8 105
.b8 109
.b8 121
.b8 103
.b8 51
.b8 97
.b8 109
.b8 118
.b8 117
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
