//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_add_convolution_native_group_norm_32 // -- Begin function triton_red_fused__unsafe_index_add_convolution_native_group_norm_32
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_add_convolution_native_group_norm_32
.visible .entry triton_red_fused__unsafe_index_add_convolution_native_group_norm_32(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_7,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_8,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<66>;
	.reg .b32 	%r<177>;
	.reg .f32 	%f<147>;
	.reg .b64 	%rd<124>;
	.loc	1 19 0                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_7];
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_6];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_5];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_1];
	ld.param.u64 	%rd10, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_0];
$L__tmp0:
	.loc	1 22 28                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:22:28
	// begin inline asm
	mov.u32 %r21, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:22:33
	shl.b32 	%r23, %r21, 6;
	ld.param.u64 	%rd17, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_2];
	.loc	1 23 44                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd18, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_3];
	and.b32  	%r2, %r1, 1;
	ld.param.u64 	%rd19, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_4];
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r24, %r1, 1, 5;
	and.b32  	%r25, %r1, 64;
	shr.u32 	%r26, %r25, 1;
	or.b32  	%r27, %r24, %r26;
	.loc	1 23 23                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:23:23
	or.b32  	%r4, %r23, %r3;
	or.b32  	%r5, %r27, %r23;
	.loc	1 24 21                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:24:21
	setp.lt.s32 	%p2, %r4, 1024;
	.loc	1 25 33                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:25:33
	bfe.u32 	%r6, %r1, 6, 1;
	shl.b32 	%r28, %r2, 2;
	.loc	1 27 19                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:27:19
	shr.s32 	%r30, %r4, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r4, %r31;
	shr.s32 	%r33, %r32, 2;
	.loc	1 26 19                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:26:19
	and.b32  	%r34, %r32, 536870908;
	sub.s32 	%r35, %r4, %r34;
	.loc	1 28 26                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:28:26
	shr.s32 	%r36, %r32, 31;
	shr.u32 	%r37, %r36, 26;
	add.s32 	%r38, %r33, %r37;
	and.b32  	%r39, %r38, -64;
	sub.s32 	%r40, %r33, %r39;
	.loc	1 29 31                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:29:31
	mul.wide.s32 	%rd20, %r40, 4;
	add.s64 	%rd15, %rd17, %rd20;
	.loc	1 29 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:29:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r22;
	.loc	1 41 41                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:41
	shl.b32 	%r7, %r35, 3;
	.loc	1 55 69                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:69
	shl.b32 	%r41, %r33, 12;
	.loc	1 55 64                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:64
	cvt.s64.s32 	%rd1, %r41;
	shl.b32 	%r42, %r2, 8;
	or.b32  	%r43, %r27, %r42;
	and.b32  	%r44, %r1, 127;
	shl.b32 	%r45, %r2, 4;
	mov.u32 	%r46, global_smem;
	add.s32 	%r47, %r46, %r45;
	shl.b32 	%r48, %r43, 2;
	add.s32 	%r90, %r47, %r48;
	shr.u32 	%r49, %r42, 4;
	add.s32 	%r50, %r46, %r49;
	add.s32 	%r51, %r50, %r48;
	add.s32 	%r92, %r51, 260;
	add.s32 	%r94, %r51, 520;
	add.s32 	%r96, %r51, 780;
	shr.u32 	%r52, %r1, 4;
	and.b32  	%r53, %r52, 4;
	add.s32 	%r54, %r46, %r53;
	shl.b32 	%r55, %r44, 2;
	add.s32 	%r12, %r54, %r55;
	or.b32  	%r56, %r44, 128;
	shr.u32 	%r57, %r56, 4;
	and.b32  	%r58, %r57, 12;
	add.s32 	%r59, %r46, %r58;
	add.s32 	%r13, %r59, %r55;
	or.b32  	%r60, %r44, 256;
	shr.u32 	%r61, %r60, 4;
	and.b32  	%r62, %r61, 20;
	add.s32 	%r63, %r46, %r62;
	add.s32 	%r14, %r63, %r55;
	or.b32  	%r64, %r44, 384;
	shr.u32 	%r65, %r64, 4;
	and.b32  	%r66, %r65, 28;
	add.s32 	%r67, %r46, %r66;
	add.s32 	%r15, %r67, %r55;
	shl.b32 	%r68, %r1, 3;
	and.b32  	%r69, %r68, 504;
	or.b32  	%r70, %r69, %r6;
	shl.b32 	%r71, %r69, 1;
	add.s32 	%r72, %r46, %r71;
	shl.b32 	%r73, %r70, 2;
	add.s32 	%r119, %r72, %r73;
	add.s32 	%r121, %r119, 8;
	add.s32 	%r123, %r119, 16;
	add.s32 	%r125, %r119, 24;
	and.b32  	%r74, %r68, 1008;
	add.s32 	%r75, %r46, %r74;
	shl.b32 	%r76, %r1, 4;
	and.b32  	%r77, %r76, 2032;
	add.s32 	%r20, %r75, %r77;
	.loc	1 34 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:34:36
	or.b32  	%r78, %r23, %r26;
	or.b32  	%r79, %r78, %r24;
	shl.b32 	%r80, %r79, 13;
	or.b32  	%r81, %r80, %r28;
	mul.wide.s32 	%rd21, %r81, 4;
	add.s64 	%rd122, %rd19, %rd21;
	add.s64 	%rd121, %rd18, %rd21;
	mov.f32 	%f54, 0f00000000;
	mov.u64 	%rd123, 0;
	setp.lt.s32 	%p26, %r5, 1024;
	mov.pred 	%p47, -1;
	shl.b64 	%rd88, %rd1, 2;
	mov.f32 	%f56, 0f3F800000;
	mov.f32 	%f123, %f54;
	mov.f32 	%f124, %f54;
	mov.f32 	%f125, %f54;
	mov.f32 	%f126, %f54;
	mov.f32 	%f127, %f54;
	mov.f32 	%f128, %f54;
	mov.f32 	%f129, %f54;
	mov.f32 	%f130, %f54;
	mov.f32 	%f131, %f54;
	mov.f32 	%f132, %f54;
	mov.f32 	%f133, %f54;
	mov.f32 	%f134, %f54;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 62 62                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:62:62
	selp.f32 	%f131, %f139, %f131, %p2;
	selp.f32 	%f132, %f140, %f132, %p2;
	selp.f32 	%f133, %f141, %f133, %p2;
	selp.f32 	%f134, %f142, %f134, %p2;
	.loc	1 63 58                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:63:58
	selp.f32 	%f127, %f135, %f127, %p2;
	selp.f32 	%f128, %f136, %f128, %p2;
	selp.f32 	%f129, %f137, %f129, %p2;
	selp.f32 	%f130, %f138, %f130, %p2;
	.loc	1 64 66                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:64:66
	selp.f32 	%f123, %f143, %f123, %p2;
	selp.f32 	%f124, %f144, %f124, %p2;
	selp.f32 	%f125, %f145, %f125, %p2;
	selp.f32 	%f126, %f146, %f126, %p2;
	.loc	1 65 51                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:65:51
	bar.sync 	0;
	mov.b32 	%r120, %f14;
	// begin inline asm
	@%p47 st.shared.b32 [ %r119 + 0 ], %r120;
	// end inline asm
	mov.b32 	%r122, %f15;
	// begin inline asm
	@%p47 st.shared.b32 [ %r121 + 0 ], %r122;
	// end inline asm
	mov.b32 	%r124, %f16;
	// begin inline asm
	@%p47 st.shared.b32 [ %r123 + 0 ], %r124;
	// end inline asm
	mov.b32 	%r126, %f17;
	// begin inline asm
	@%p47 st.shared.b32 [ %r125 + 0 ], %r126;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r127, %r128, %r129, %r130}, [%r20];
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd122 + 0 ], { %r127, %r128, %r129, %r130 };
	// end inline asm
	.loc	1 34 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:34:36
	add.s64 	%rd7, %rd123, 8;
	add.s64 	%rd122, %rd122, 32;
	add.s64 	%rd121, %rd121, 32;
	setp.lt.u64 	%p46, %rd123, 8184;
	mov.u64 	%rd123, %rd7;
	@%p46 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:0:36
	cvt.u32.u64 	%r102, %rd123;
	.loc	1 37 23                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:37:23
	shr.u32 	%r103, %r102, 10;
	.loc	1 39 23                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:39:23
	and.b32  	%r104, %r102, 24;
	or.b32  	%r105, %r104, %r6;
	.loc	1 41 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:39
	add.s32 	%r106, %r103, %r7;
	.loc	1 41 34                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:34
	mul.wide.s32 	%rd51, %r106, 8;
	add.s64 	%rd23, %rd10, %rd51;
	.loc	1 41 46                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:46
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd22, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd24, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd26, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd28, 0x0;
	// end inline asm
	.loc	1 42 34                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:42:34
	shr.u64 	%rd52, %rd123, 2;
	and.b64  	%rd53, %rd52, 248;
	add.s64 	%rd31, %rd10, %rd53;
	.loc	1 42 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:42:39
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd31 + 0 ];
	@!%p47 mov.u64 %rd30, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd32 }, [ %rd31 + 0 ];
	@!%p47 mov.u64 %rd32, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd34, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd34 }, [ %rd31 + 0 ];
	@!%p47 mov.u64 %rd34, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd36 }, [ %rd31 + 0 ];
	@!%p47 mov.u64 %rd36, 0x0;
	// end inline asm
	.loc	1 43 34                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:43:34
	mul.wide.u32 	%rd54, %r105, 8;
	add.s64 	%rd39, %rd10, %rd54;
	add.s64 	%rd41, %rd39, 16;
	add.s64 	%rd43, %rd39, 32;
	add.s64 	%rd45, %rd39, 48;
	.loc	1 43 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:43:39
	// begin inline asm
	mov.u64 %rd38, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd38 }, [ %rd39 + 0 ];
	@!%p47 mov.u64 %rd38, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd40, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd40 }, [ %rd41 + 0 ];
	@!%p47 mov.u64 %rd40, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd42, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd42 }, [ %rd43 + 0 ];
	@!%p47 mov.u64 %rd42, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd44, 0x0;
	@%p47 ld.global.L1::evict_last.b64 { %rd44 }, [ %rd45 + 0 ];
	@!%p47 mov.u64 %rd44, 0x0;
	// end inline asm
	mov.b32 	%r86, 0;
	.loc	1 44 50                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:44:50
	// begin inline asm
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	@%p26 ld.global.L1::evict_first.v4.b32 { %r82, %r83, %r84, %r85 }, [ %rd121 + 0 ];
	@!%p26 mov.u32 %r82, %r86;
	@!%p26 mov.u32 %r83, %r86;
	@!%p26 mov.u32 %r84, %r86;
	@!%p26 mov.u32 %r85, %r86;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p47 st.shared.b32 [ %r90 + 0 ], %r82;
	// end inline asm
	// begin inline asm
	@%p47 st.shared.b32 [ %r92 + 0 ], %r83;
	// end inline asm
	// begin inline asm
	@%p47 st.shared.b32 [ %r94 + 0 ], %r84;
	// end inline asm
	// begin inline asm
	@%p47 st.shared.b32 [ %r96 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f57, [%r12];
	ld.shared.f32 	%f58, [%r13+512];
	ld.shared.f32 	%f59, [%r14+1024];
	ld.shared.f32 	%f60, [%r15+1536];
	.loc	1 48 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:48:36
	shr.u64 	%rd55, %rd22, 59;
	and.b64  	%rd56, %rd55, 16;
	add.s64 	%rd57, %rd56, %rd22;
	shr.u64 	%rd58, %rd24, 59;
	and.b64  	%rd59, %rd58, 16;
	add.s64 	%rd60, %rd59, %rd24;
	shr.u64 	%rd61, %rd26, 59;
	and.b64  	%rd62, %rd61, 16;
	add.s64 	%rd63, %rd62, %rd26;
	shr.u64 	%rd64, %rd28, 59;
	and.b64  	%rd65, %rd64, 16;
	add.s64 	%rd66, %rd65, %rd28;
	.loc	1 51 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:51:36
	shr.u64 	%rd67, %rd30, 59;
	and.b64  	%rd68, %rd67, 16;
	add.s64 	%rd69, %rd68, %rd30;
	shr.u64 	%rd70, %rd32, 59;
	and.b64  	%rd71, %rd70, 16;
	add.s64 	%rd72, %rd71, %rd32;
	shr.u64 	%rd73, %rd34, 59;
	and.b64  	%rd74, %rd73, 16;
	add.s64 	%rd75, %rd74, %rd34;
	shr.u64 	%rd76, %rd36, 59;
	and.b64  	%rd77, %rd76, 16;
	add.s64 	%rd78, %rd77, %rd36;
	.loc	1 55 35                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:35
	shl.b64 	%rd79, %rd38, 2;
	add.s64 	%rd80, %rd11, %rd79;
	shr.u64 	%rd81, %rd38, 57;
	and.b64  	%rd82, %rd81, 64;
	add.s64 	%rd83, %rd80, %rd82;
	shl.b64 	%rd84, %rd69, 6;
	add.s64 	%rd85, %rd83, %rd84;
	shl.b64 	%rd86, %rd57, 10;
	add.s64 	%rd87, %rd85, %rd86;
	add.s64 	%rd47, %rd87, %rd88;
	shl.b64 	%rd89, %rd40, 2;
	add.s64 	%rd90, %rd11, %rd89;
	shr.u64 	%rd91, %rd40, 57;
	and.b64  	%rd92, %rd91, 64;
	add.s64 	%rd93, %rd90, %rd92;
	shl.b64 	%rd94, %rd72, 6;
	add.s64 	%rd95, %rd93, %rd94;
	shl.b64 	%rd96, %rd60, 10;
	add.s64 	%rd97, %rd95, %rd96;
	add.s64 	%rd48, %rd97, %rd88;
	shl.b64 	%rd98, %rd42, 2;
	add.s64 	%rd99, %rd11, %rd98;
	shr.u64 	%rd100, %rd42, 57;
	and.b64  	%rd101, %rd100, 64;
	add.s64 	%rd102, %rd99, %rd101;
	shl.b64 	%rd103, %rd75, 6;
	add.s64 	%rd104, %rd102, %rd103;
	shl.b64 	%rd105, %rd63, 10;
	add.s64 	%rd106, %rd104, %rd105;
	add.s64 	%rd49, %rd106, %rd88;
	shl.b64 	%rd107, %rd44, 2;
	add.s64 	%rd108, %rd11, %rd107;
	shr.u64 	%rd109, %rd44, 57;
	and.b64  	%rd110, %rd109, 64;
	add.s64 	%rd111, %rd108, %rd110;
	shl.b64 	%rd112, %rd78, 6;
	add.s64 	%rd113, %rd111, %rd112;
	shl.b64 	%rd114, %rd66, 10;
	add.s64 	%rd115, %rd113, %rd114;
	add.s64 	%rd50, %rd115, %rd88;
	.loc	1 55 74                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:74
	// begin inline asm
	mov.u32 %r98, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r98 }, [ %rd47 + 0 ];
	// end inline asm
	mov.b32 	%f61, %r98;
	// begin inline asm
	mov.u32 %r99, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r99 }, [ %rd48 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r99;
	// begin inline asm
	mov.u32 %r100, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r100 }, [ %rd49 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r100;
	// begin inline asm
	mov.u32 %r101, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r101 }, [ %rd50 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r101;
	.loc	1 56 24                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:56:24
	add.f32 	%f65, %f1, %f61;
	add.f32 	%f66, %f1, %f62;
	add.f32 	%f67, %f1, %f63;
	add.f32 	%f68, %f1, %f64;
	.loc	1 57 24                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:57:24
	add.f32 	%f14, %f57, %f65;
	add.f32 	%f15, %f58, %f66;
	add.f32 	%f16, %f59, %f67;
	add.f32 	%f17, %f60, %f68;
	.loc	1 60 66                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:60:66
	setp.eq.s64 	%p39, %rd123, 0;
	mov.f32 	%f135, %f54;
	mov.f32 	%f136, %f54;
	mov.f32 	%f137, %f54;
	mov.f32 	%f138, %f54;
	mov.f32 	%f139, %f14;
	mov.f32 	%f140, %f15;
	mov.f32 	%f141, %f16;
	mov.f32 	%f142, %f17;
	mov.f32 	%f143, %f56;
	mov.f32 	%f144, %f56;
	mov.f32 	%f145, %f56;
	mov.f32 	%f146, %f56;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p39 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f69, %f14, %f131;
	sub.f32 	%f70, %f15, %f132;
	sub.f32 	%f71, %f16, %f133;
	sub.f32 	%f72, %f17, %f134;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f143, %f123, 0f3F800000;
	add.f32 	%f144, %f124, 0f3F800000;
	add.f32 	%f145, %f125, 0f3F800000;
	add.f32 	%f146, %f126, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r108, %f69;
	mov.b32 	%r109, %f143;
	// begin inline asm
	div.full.f32 %r107, %r108, %r109;
	// end inline asm
	mov.b32 	%f73, %r107;
	mov.b32 	%r111, %f70;
	mov.b32 	%r112, %f144;
	// begin inline asm
	div.full.f32 %r110, %r111, %r112;
	// end inline asm
	mov.b32 	%f74, %r110;
	mov.b32 	%r114, %f71;
	mov.b32 	%r115, %f145;
	// begin inline asm
	div.full.f32 %r113, %r114, %r115;
	// end inline asm
	mov.b32 	%f75, %r113;
	mov.b32 	%r117, %f72;
	mov.b32 	%r118, %f146;
	// begin inline asm
	div.full.f32 %r116, %r117, %r118;
	// end inline asm
	mov.b32 	%f76, %r116;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f139, %f131, %f73;
	add.f32 	%f140, %f132, %f74;
	add.f32 	%f141, %f133, %f75;
	add.f32 	%f142, %f134, %f76;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f77, %f14, %f139;
	sub.f32 	%f78, %f15, %f140;
	sub.f32 	%f79, %f16, %f141;
	sub.f32 	%f80, %f17, %f142;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f135, %f69, %f77, %f127;
	fma.rn.f32 	%f136, %f70, %f78, %f128;
	fma.rn.f32 	%f137, %f71, %f79, %f129;
	fma.rn.f32 	%f138, %f72, %f80, %f130;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f81, %f132, %f131;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f82, %f123, %f124;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p60, %f82, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r133, %f82;
	mov.b32 	%r132, %f124;
	// begin inline asm
	div.full.f32 %r131, %r132, %r133;
	// end inline asm
	mov.b32 	%f83, %r131;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f84, 0f00000000, %f83, %p60;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f85, %f81, %f84, %f131;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f86, %f127, %f128;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f87, %f81, %f81;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f88, %f87, %f123;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f89, %f88, %f84, %f86;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f90, %f133, %f85;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f91, %f125, %f82;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p61, %f91, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r136, %f91;
	mov.b32 	%r135, %f125;
	// begin inline asm
	div.full.f32 %r134, %r135, %r136;
	// end inline asm
	mov.b32 	%f92, %r134;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f93, 0f00000000, %f92, %p61;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f94, %f93, %f90, %f85;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f95, %f129, %f89;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f96, %f90, %f90;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f97, %f82, %f96;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f98, %f93, %f97, %f95;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f99, %f134, %f94;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f100, %f126, %f91;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p62, %f100, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r139, %f100;
	mov.b32 	%r138, %f126;
	// begin inline asm
	div.full.f32 %r137, %r138, %r139;
	// end inline asm
	mov.b32 	%f101, %r137;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f102, 0f00000000, %f101, %p62;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f103, %f102, %f99, %f94;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f104, %f130, %f98;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f105, %f99, %f99;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f106, %f91, %f105;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f107, %f102, %f106, %f104;
	.loc	2 204 46                        // triton_helpers.py:204:46
	shl.b32 	%r165, %r6, 2;
	shl.b32 	%r166, %r3, 3;
	or.b32  	%r167, %r166, %r165;
	add.s32 	%r140, %r46, %r167;
	mov.b32 	%r141, %f103;
	// begin inline asm
	@%p47 st.shared.b32 [ %r140 + 0 ], %r141;
	// end inline asm
	add.s32 	%r169, %r46, 512;
	add.s32 	%r142, %r169, %r167;
	mov.b32 	%r143, %f107;
	// begin inline asm
	@%p47 st.shared.b32 [ %r142 + 0 ], %r143;
	// end inline asm
	add.s32 	%r170, %r46, 1024;
	add.s32 	%r144, %r170, %r167;
	// begin inline asm
	@%p47 st.shared.b32 [ %r144 + 0 ], %r139;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p50, %r1, 128;
	shl.b32 	%r171, %r1, 2;
	add.s32 	%r147, %r46, %r171;
	// begin inline asm
	@%p50 ld.shared.b32 %r146, [ %r147 + 0 ];
	// end inline asm
	mov.b32 	%f108, %r146;
	add.s32 	%r149, %r169, %r171;
	// begin inline asm
	@%p50 ld.shared.b32 %r148, [ %r149 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r148;
	add.s32 	%r151, %r170, %r171;
	// begin inline asm
	@%p50 ld.shared.b32 %r150, [ %r151 + 0 ];
	// end inline asm
	mov.b32 	%f110, %r150;
	shfl.sync.bfly.b32	%r172, %r146, 1, 31, -1;
	mov.b32 	%f111, %r172;
	shfl.sync.bfly.b32	%r173, %r148, 1, 31, -1;
	mov.b32 	%f112, %r173;
	shfl.sync.bfly.b32	%r153, %r150, 1, 31, -1;
	mov.b32 	%f113, %r153;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f114, %f111, %f108;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f115, %f110, %f113;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p63, %f115, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r154, %f115;
	// begin inline asm
	div.full.f32 %r152, %r153, %r154;
	// end inline asm
	mov.b32 	%f116, %r152;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f117, 0f00000000, %f116, %p63;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f118, %f114, %f117, %f108;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f119, %f109, %f112;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f120, %f114, %f114;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f121, %f120, %f110;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f122, %f121, %f117, %f119;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p64, %r2, 0;
	and.pred  	%p53, %p50, %p64;
	mov.b32 	%r156, %f118;
	// begin inline asm
	@%p53 st.shared.b32 [ %r147 + 0 ], %r156;
	// end inline asm
	mov.b32 	%r158, %f122;
	// begin inline asm
	@%p53 st.shared.b32 [ %r149 + 0 ], %r158;
	// end inline asm
	// begin inline asm
	@%p53 st.shared.b32 [ %r151 + 0 ], %r154;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r174, %r46, %r166;
	ld.shared.u32 	%r161, [%r174];
	add.s32 	%r175, %r169, %r166;
	ld.shared.u32 	%r162, [%r175];
	add.s32 	%r176, %r170, %r166;
	ld.shared.u32 	%r163, [%r176];
$L__tmp3:
	.loc	1 72 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:72:25
	mul.wide.s32 	%rd120, %r4, 4;
	add.s64 	%rd117, %rd12, %rd120;
	.loc	1 72 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:72:37
	setp.eq.s32 	%p65, %r6, 0;
	and.pred  	%p56, %p65, %p2;
	// begin inline asm
	@%p56 st.global.b32 [ %rd117 + 0 ], { %r161 };
	// end inline asm
	.loc	1 73 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:73:25
	add.s64 	%rd118, %rd13, %rd120;
	.loc	1 73 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:73:37
	// begin inline asm
	@%p56 st.global.b32 [ %rd118 + 0 ], { %r162 };
	// end inline asm
	.loc	1 74 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:25
	add.s64 	%rd119, %rd14, %rd120;
	.loc	1 74 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:37
	// begin inline asm
	@%p56 st.global.b32 [ %rd119 + 0 ], { %r163 };
	// end inline asm
	.loc	1 74 4                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ev/cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 118
.b8 115
.b8 54
.b8 105
.b8 54
.b8 113
.b8 50
.b8 54
.b8 115
.b8 112
.b8 114
.b8 55
.b8 104
.b8 115
.b8 121
.b8 118
.b8 113
.b8 112
.b8 107
.b8 102
.b8 99
.b8 115
.b8 50
.b8 100
.b8 114
.b8 105
.b8 118
.b8 101
.b8 102
.b8 110
.b8 114
.b8 106
.b8 55
.b8 118
.b8 122
.b8 118
.b8 115
.b8 118
.b8 113
.b8 51
.b8 55
.b8 120
.b8 101
.b8 122
.b8 103
.b8 104
.b8 110
.b8 97
.b8 52
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
