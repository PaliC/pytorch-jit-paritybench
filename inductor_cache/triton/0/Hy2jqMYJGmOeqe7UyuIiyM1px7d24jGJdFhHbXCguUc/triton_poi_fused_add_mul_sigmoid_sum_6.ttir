#loc = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":19:0)
module {
  tt.func public @triton_poi_fused_add_mul_sigmoid_sum_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<32> : tensor<64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<64xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<64xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_8 : tensor<64xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_7 : tensor<64xi32> loc(#loc9)
    %9 = arith.muli %6, %cst_9 : tensor<64xi32> loc(#loc10)
    %10 = arith.addi %7, %9 : tensor<64xi32> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %10 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc12)
    %13 = tt.load %12, %5 : tensor<64x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.muli %8, %cst_7 : tensor<64xi32> loc(#loc14)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.addi %7, %cst_8 : tensor<64xi32> loc(#loc17)
    %19 = arith.addi %18, %9 : tensor<64xi32> loc(#loc18)
    %20 = tt.addptr %11, %19 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc19)
    %21 = tt.load %20, %5 : tensor<64x!tt.ptr<f32>> loc(#loc20)
    %22 = arith.addi %14, %cst_6 : tensor<64xi32> loc(#loc21)
    %23 = tt.addptr %15, %22 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc22)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc23)
    %25 = arith.addi %7, %cst_5 : tensor<64xi32> loc(#loc24)
    %26 = arith.addi %25, %9 : tensor<64xi32> loc(#loc25)
    %27 = tt.addptr %11, %26 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc26)
    %28 = tt.load %27, %5 : tensor<64x!tt.ptr<f32>> loc(#loc27)
    %29 = arith.addi %14, %cst_4 : tensor<64xi32> loc(#loc28)
    %30 = tt.addptr %15, %29 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc29)
    %31 = tt.load %30, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc30)
    %32 = arith.addi %7, %cst_3 : tensor<64xi32> loc(#loc31)
    %33 = arith.addi %32, %9 : tensor<64xi32> loc(#loc32)
    %34 = tt.addptr %11, %33 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc33)
    %35 = tt.load %34, %5 : tensor<64x!tt.ptr<f32>> loc(#loc34)
    %36 = arith.addi %14, %cst_2 : tensor<64xi32> loc(#loc35)
    %37 = tt.addptr %15, %36 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc36)
    %38 = tt.load %37, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc37)
    %39 = arith.subf %cst, %13 : tensor<64xf32> loc(#loc61)
    %40 = math.exp %39 : tensor<64xf32> loc(#loc62)
    %41 = arith.addf %40, %cst_0 : tensor<64xf32> loc(#loc63)
    %42 = arith.divf %cst_0, %41 : tensor<64xf32> loc(#loc64)
    %43 = arith.divf %cst_0, %17 : tensor<64xf32> loc(#loc43)
    %44 = arith.mulf %42, %43 : tensor<64xf32> loc(#loc44)
    %45 = arith.subf %cst, %21 : tensor<64xf32> loc(#loc65)
    %46 = math.exp %45 : tensor<64xf32> loc(#loc66)
    %47 = arith.addf %46, %cst_0 : tensor<64xf32> loc(#loc67)
    %48 = arith.divf %cst_0, %47 : tensor<64xf32> loc(#loc68)
    %49 = arith.divf %cst_0, %24 : tensor<64xf32> loc(#loc46)
    %50 = arith.mulf %48, %49 : tensor<64xf32> loc(#loc47)
    %51 = arith.addf %44, %50 : tensor<64xf32> loc(#loc48)
    %52 = arith.subf %cst, %28 : tensor<64xf32> loc(#loc69)
    %53 = math.exp %52 : tensor<64xf32> loc(#loc70)
    %54 = arith.addf %53, %cst_0 : tensor<64xf32> loc(#loc71)
    %55 = arith.divf %cst_0, %54 : tensor<64xf32> loc(#loc72)
    %56 = arith.divf %cst_0, %31 : tensor<64xf32> loc(#loc50)
    %57 = arith.mulf %55, %56 : tensor<64xf32> loc(#loc51)
    %58 = arith.addf %51, %57 : tensor<64xf32> loc(#loc52)
    %59 = arith.subf %cst, %35 : tensor<64xf32> loc(#loc73)
    %60 = math.exp %59 : tensor<64xf32> loc(#loc74)
    %61 = arith.addf %60, %cst_0 : tensor<64xf32> loc(#loc75)
    %62 = arith.divf %cst_0, %61 : tensor<64xf32> loc(#loc76)
    %63 = arith.divf %cst_0, %38 : tensor<64xf32> loc(#loc54)
    %64 = arith.mulf %62, %63 : tensor<64xf32> loc(#loc55)
    %65 = arith.addf %58, %64 : tensor<64xf32> loc(#loc56)
    %66 = arith.addf %65, %cst_1 : tensor<64xf32> loc(#loc57)
    %67 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc58)
    %68 = tt.addptr %67, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc58)
    tt.store %68, %66, %5 : tensor<64x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":21:28)
#loc3 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":21:33)
#loc4 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":22:36)
#loc5 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":22:23)
#loc6 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":23:21)
#loc7 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":24:19)
#loc8 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":25:19)
#loc9 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":26:19)
#loc10 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":28:38)
#loc11 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":28:35)
#loc12 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":28:30)
#loc13 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":28:43)
#loc14 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":29:32)
#loc15 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":29:30)
#loc16 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":29:37)
#loc17 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":30:35)
#loc18 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":30:40)
#loc19 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":30:30)
#loc20 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":30:48)
#loc21 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":31:35)
#loc22 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":31:31)
#loc23 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":31:42)
#loc24 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":32:36)
#loc25 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":32:41)
#loc26 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":32:31)
#loc27 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":32:49)
#loc28 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":33:35)
#loc29 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":33:31)
#loc30 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":33:42)
#loc31 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":34:36)
#loc32 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":34:41)
#loc33 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":34:31)
#loc34 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":34:49)
#loc35 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":35:35)
#loc36 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":35:31)
#loc37 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":35:42)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc39 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":36:22)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc43 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":38:18)
#loc44 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":41:18)
#loc45 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":42:22)
#loc46 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":43:19)
#loc47 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":45:19)
#loc48 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":46:19)
#loc49 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":47:23)
#loc50 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":48:19)
#loc51 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":50:20)
#loc52 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":51:20)
#loc53 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":52:23)
#loc54 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":53:19)
#loc55 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":55:20)
#loc56 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":56:20)
#loc57 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":58:20)
#loc58 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":59:25)
#loc59 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":59:37)
#loc60 = loc("inductor_cache/42/c424qfsgvped36pmiudcr45t2mujz53t75i2bbm75sd4ejv6bxqd.py":59:4)
#loc61 = loc(callsite(#loc38 at #loc39))
#loc62 = loc(callsite(#loc40 at #loc39))
#loc63 = loc(callsite(#loc41 at #loc39))
#loc64 = loc(callsite(#loc42 at #loc39))
#loc65 = loc(callsite(#loc38 at #loc45))
#loc66 = loc(callsite(#loc40 at #loc45))
#loc67 = loc(callsite(#loc41 at #loc45))
#loc68 = loc(callsite(#loc42 at #loc45))
#loc69 = loc(callsite(#loc38 at #loc49))
#loc70 = loc(callsite(#loc40 at #loc49))
#loc71 = loc(callsite(#loc41 at #loc49))
#loc72 = loc(callsite(#loc42 at #loc49))
#loc73 = loc(callsite(#loc38 at #loc53))
#loc74 = loc(callsite(#loc40 at #loc53))
#loc75 = loc(callsite(#loc41 at #loc53))
#loc76 = loc(callsite(#loc42 at #loc53))
