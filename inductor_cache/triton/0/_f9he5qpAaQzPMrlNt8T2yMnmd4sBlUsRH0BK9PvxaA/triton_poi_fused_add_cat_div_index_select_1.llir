; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_div_index_select_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 6, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 62, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 64, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 4, !dbg !15
  %15 = srem i32 %14, 4, !dbg !16
  %16 = mul i32 %14, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = sdiv i32 %12, 16, !dbg !18
  %18 = icmp slt i32 %15, 3, !dbg !19
  %19 = add nsw i32 %.decomposed, 4, !dbg !20
  %20 = shl nsw i32 %15, 2, !dbg !21
  %21 = shl nsw i32 %17, 4, !dbg !22
  %22 = add nsw i32 %21, %19, !dbg !23
  %23 = add i32 %22, %20, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !25
  %26 = and i1 %13, %18, !dbg !26
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26, i32 0, i1 %26) #1, !dbg !27
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !27
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !27
  %30 = icmp sgt i32 %15, 2, !dbg !28
  %31 = shl nsw i32 %17, 2, !dbg !29
  %32 = add nsw i32 %31, %.decomposed, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !31
  %35 = and i1 %13, %30, !dbg !32
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35, i32 0, i1 %35) #1, !dbg !33
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !33
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !33
  %.v = select i1 %18, i32 %28, i32 %37, !dbg !34
  %39 = bitcast i32 %.v to float, !dbg !34
  %.v1 = select i1 %18, i32 %29, i32 %38, !dbg !34
  %40 = bitcast i32 %.v1 to float, !dbg !34
  %41 = icmp slt i32 %15, 2, !dbg !35
  %42 = icmp slt i32 %15, 1, !dbg !36
  %43 = select i1 %42, i64 3, i64 2, !dbg !37
  %44 = zext i1 %18 to i64, !dbg !38
  %45 = select i1 %41, i64 %43, i64 %44, !dbg !39
  %46 = icmp ne i64 %45, 3, !dbg !40
  %47 = zext nneg i32 %19 to i64, !dbg !41
  %48 = sext i32 %21 to i64, !dbg !42
  %.idx = shl nuw nsw i64 %45, 4, !dbg !43
  %49 = getelementptr i8, ptr addrspace(1) %3, i64 %.idx, !dbg !43
  %50 = getelementptr float, ptr addrspace(1) %49, i64 %47, !dbg !43
  %51 = getelementptr float, ptr addrspace(1) %50, i64 %48, !dbg !43
  %52 = and i1 %13, %46, !dbg !44
  %53 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %51, i1 %52, i32 0, i1 %52, i32 0, i1 %52) #1, !dbg !45
  %54 = extractvalue { i32, i32 } %53, 0, !dbg !45
  %55 = extractvalue { i32, i32 } %53, 1, !dbg !45
  %56 = getelementptr float, ptr addrspace(1) %4, i64 %33, !dbg !46
  %57 = and i1 %13, %42, !dbg !47
  %58 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57, i32 0, i1 %57) #1, !dbg !48
  %59 = extractvalue { i32, i32 } %58, 0, !dbg !48
  %60 = extractvalue { i32, i32 } %58, 1, !dbg !48
  %.v2 = select i1 %46, i32 %54, i32 %59, !dbg !49
  %61 = bitcast i32 %.v2 to float, !dbg !49
  %.v3 = select i1 %46, i32 %55, i32 %60, !dbg !49
  %62 = bitcast i32 %.v3 to float, !dbg !49
  %63 = fadd float %39, %61, !dbg !50
  %64 = fadd float %40, %62, !dbg !50
  %65 = fmul float %63, 5.000000e-01, !dbg !51
  %66 = fmul float %64, 5.000000e-01, !dbg !51
  %67 = sext i32 %12 to i64, !dbg !52
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !52
  %69 = bitcast float %65 to i32, !dbg !53
  %70 = bitcast float %66 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %70, ptr addrspace(1) %68, i1 %13) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxofbtl4a4s7rnp4qnuw26b3fsqdpmi63bu7onkkhcgeksmw7xgp.py", directory: "inductor_cache/xo")
!4 = !{ptr @triton_poi_fused_add_cat_div_index_select_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_div_index_select_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_div_index_select_1", linkageName: "triton_poi_fused_add_cat_div_index_select_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 34, scope: !7)
!21 = !DILocation(line: 33, column: 42, scope: !7)
!22 = !DILocation(line: 33, column: 51, scope: !7)
!23 = !DILocation(line: 33, column: 39, scope: !7)
!24 = !DILocation(line: 33, column: 48, scope: !7)
!25 = !DILocation(line: 33, column: 30, scope: !7)
!26 = !DILocation(line: 33, column: 63, scope: !7)
!27 = !DILocation(line: 33, column: 56, scope: !7)
!28 = !DILocation(line: 34, column: 19, scope: !7)
!29 = !DILocation(line: 37, column: 37, scope: !7)
!30 = !DILocation(line: 37, column: 35, scope: !7)
!31 = !DILocation(line: 37, column: 30, scope: !7)
!32 = !DILocation(line: 37, column: 49, scope: !7)
!33 = !DILocation(line: 37, column: 42, scope: !7)
!34 = !DILocation(line: 38, column: 33, scope: !7)
!35 = !DILocation(line: 40, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 34, scope: !7)
!38 = !DILocation(line: 44, column: 34, scope: !7)
!39 = !DILocation(line: 45, column: 35, scope: !7)
!40 = !DILocation(line: 49, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 40, scope: !7)
!42 = !DILocation(line: 50, column: 52, scope: !7)
!43 = !DILocation(line: 50, column: 31, scope: !7)
!44 = !DILocation(line: 50, column: 68, scope: !7)
!45 = !DILocation(line: 50, column: 60, scope: !7)
!46 = !DILocation(line: 53, column: 31, scope: !7)
!47 = !DILocation(line: 53, column: 51, scope: !7)
!48 = !DILocation(line: 53, column: 43, scope: !7)
!49 = !DILocation(line: 54, column: 35, scope: !7)
!50 = !DILocation(line: 55, column: 20, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 28, scope: !7)
!53 = !DILocation(line: 58, column: 40, scope: !7)
!54 = !DILocation(line: 58, column: 4, scope: !7)
