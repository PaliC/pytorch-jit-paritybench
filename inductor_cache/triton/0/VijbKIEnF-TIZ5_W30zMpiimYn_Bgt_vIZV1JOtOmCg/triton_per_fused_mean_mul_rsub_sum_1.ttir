#loc = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":19:0)
#loc1 = loc(unknown)
#loc27 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":41:25)
#loc36 = loc(callsite(#loc1 at #loc27))
module {
  tt.func public @triton_per_fused_mean_mul_rsub_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_4 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_4 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.muli %3, %cst_3 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %2, %4 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc10)
    %10 = arith.addi %9, %4 : tensor<1x64xi32> loc(#loc11)
    %11 = tt.addptr %6, %10 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %12 = tt.load %11 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %13 = arith.addi %2, %cst_2 : tensor<1x64xi32> loc(#loc14)
    %14 = arith.addi %13, %4 : tensor<1x64xi32> loc(#loc15)
    %15 = tt.addptr %6, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %16 = tt.load %15 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %17 = arith.addi %2, %cst_1 : tensor<1x64xi32> loc(#loc18)
    %18 = arith.addi %17, %4 : tensor<1x64xi32> loc(#loc19)
    %19 = tt.addptr %6, %18 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %20 = tt.load %19 : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %21 = arith.addf %8, %12 : tensor<1x64xf32> loc(#loc22)
    %22 = arith.addf %21, %16 : tensor<1x64xf32> loc(#loc23)
    %23 = arith.addf %22, %20 : tensor<1x64xf32> loc(#loc24)
    %24 = arith.subf %cst_0, %23 : tensor<1x64xf32> loc(#loc25)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc27)), %arg4: f32 loc(callsite(#loc1 at #loc27))):
      %30 = arith.addf %arg3, %arg4 : f32 loc(#loc38)
      tt.reduce.return %30 : f32 loc(#loc35)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc35)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc29)
    %27 = arith.divf %26, %cst : tensor<1x1xf32> loc(#loc30)
    gpu.barrier loc(#loc31)
    %28 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc32)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    tt.store %29, %27 : tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":26:26)
#loc3 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":26:34)
#loc4 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":29:19)
#loc5 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":30:19)
#loc6 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":31:38)
#loc7 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":31:35)
#loc8 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":31:30)
#loc9 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":31:43)
#loc10 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":32:35)
#loc11 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":32:40)
#loc12 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":32:30)
#loc13 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":32:48)
#loc14 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":33:35)
#loc15 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":33:40)
#loc16 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":33:30)
#loc17 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":33:48)
#loc18 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":34:35)
#loc19 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":34:40)
#loc20 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":34:30)
#loc21 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":34:48)
#loc22 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":35:18)
#loc23 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":36:18)
#loc24 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":37:18)
#loc25 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":39:18)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc29 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":41:28)
#loc30 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":43:20)
#loc31 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":45:4)
#loc32 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":46:28)
#loc33 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":46:71)
#loc34 = loc("inductor_cache/xc/cxc2hibofp5zvmq4di5l3vxp3yu5efc5wamwiy4px64nxepdlhgs.py":46:4)
#loc35 = loc(callsite(#loc26 at #loc27))
#loc37 = loc(callsite(#loc28 at #loc26))
#loc38 = loc(callsite(#loc37 at #loc27))
