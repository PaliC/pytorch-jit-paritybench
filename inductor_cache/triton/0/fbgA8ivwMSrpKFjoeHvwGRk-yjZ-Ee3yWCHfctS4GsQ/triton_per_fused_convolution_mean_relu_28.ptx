//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_mean_relu_28 // -- Begin function triton_per_fused_convolution_mean_relu_28
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_convolution_mean_relu_28
.visible .entry triton_per_fused_convolution_mean_relu_28(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_mean_relu_28_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_mean_relu_28_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_mean_relu_28_param_2,
	.param .u32 triton_per_fused_convolution_mean_relu_28_param_3,
	.param .u32 triton_per_fused_convolution_mean_relu_28_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_convolution_mean_relu_28_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_convolution_mean_relu_28_param_1];
$L__tmp0:
	.loc	1 23 28                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:23:33
	shl.b32 	%r35, %r1, 5;
	ld.param.u64 	%rd6, [triton_per_fused_convolution_mean_relu_28_param_2];
	.loc	1 24 44                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:24:44
	mov.u32 	%r36, %tid.x;
	and.b32  	%r37, %r36, 24;
	shl.b32 	%r38, %r36, 2;
	and.b32  	%r39, %r38, 28;
	and.b32  	%r40, %r36, 31;
	.loc	1 24 23                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:24:23
	or.b32  	%r41, %r35, %r39;
	or.b32  	%r42, %r35, %r40;
	.loc	1 25 21                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:25:21
	setp.lt.s32 	%p6, %r41, 4000;
	setp.lt.s32 	%p15, %r42, 4000;
	.loc	1 26 34                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:26:34
	bfe.u32 	%r43, %r36, 3, 4;
	.loc	1 28 21                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:28:21
	setp.lt.u32 	%p16, %r43, 9;
	.loc	1 31 19                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:31:19
	mul.hi.s32 	%r45, %r41, 274877907;
	shr.u32 	%r46, %r45, 31;
	shr.s32 	%r47, %r45, 6;
	add.s32 	%r48, %r47, %r46;
	.loc	1 30 19                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:30:19
	mul.lo.s32 	%r49, %r48, 1000;
	sub.s32 	%r50, %r41, %r49;
	.loc	1 33 35                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:35
	mad.lo.s32 	%r51, %r43, 1000, %r50;
	.loc	1 33 45                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:45
	mad.lo.s32 	%r52, %r48, 9000, %r51;
	.loc	1 33 30                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:30
	mul.wide.s32 	%rd7, %r52, 4;
	add.s64 	%rd1, %rd5, %rd7;
	.loc	1 33 63                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:63
	and.pred  	%p1, %p16, %p6;
	mov.b32 	%r6, 0;
	.loc	1 33 55                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:55
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 34 30                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:34:30
	mul.wide.s32 	%rd8, %r50, 4;
	add.s64 	%rd2, %rd6, %rd8;
	.loc	1 34 35                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:34:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 55                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:33:55
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r2;
	.loc	1 34 35                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:34:35
	mov.b32 	%f5, %r13;
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r10;
	.loc	1 35 18                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:35:18
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p17, %f12, 0f00000000;
	setp.lt.f32 	%p18, %f11, 0f00000000;
	setp.lt.f32 	%p19, %f10, 0f00000000;
	setp.lt.f32 	%p20, %f9, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, 0f00000000, %f9, %p20;
	selp.f32 	%f14, 0f00000000, %f10, %p19;
	selp.f32 	%f15, 0f00000000, %f11, %p18;
	selp.f32 	%f16, 0f00000000, %f12, %p17;
$L__tmp2:
	.loc	1 39 41                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:39:41
	selp.f32 	%f17, %f13, 0f00000000, %p1;
	selp.f32 	%f18, %f14, 0f00000000, %p1;
	selp.f32 	%f19, %f15, 0f00000000, %p1;
	selp.f32 	%f20, %f16, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f17;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f21, %r54;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f22, %f17, %f21;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f22;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f23, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f18;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f25, %r58;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f26, %f18, %f25;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f26;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f27, %r60;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f19;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	mov.b32 	%f29, %r62;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f30, %f19, %f29;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f30;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f31, %r64;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f20;
	shfl.sync.bfly.b32	%r66, %r65, 16, 31, -1;
	mov.b32 	%f33, %r66;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f34, %f20, %f33;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f34;
	shfl.sync.bfly.b32	%r68, %r67, 8, 31, -1;
	mov.b32 	%f35, %r68;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r37, 0;
	bfe.u32 	%r69, %r36, 5, 2;
	shl.b32 	%r70, %r69, 2;
	shl.b32 	%r71, %r39, 4;
	or.b32  	%r72, %r71, %r70;
	mov.u32 	%r73, global_smem;
	add.s32 	%r14, %r73, %r72;
	mov.b32 	%r15, %f24;
	// begin inline asm
	@%p7 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r14, 16;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p7 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	add.s32 	%r18, %r14, 32;
	mov.b32 	%r19, %f32;
	// begin inline asm
	@%p7 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r14, 48;
	mov.b32 	%r21, %f36;
	// begin inline asm
	@%p7 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p11, %r36, 128;
	add.s32 	%r23, %r73, %r38;
	// begin inline asm
	@%p11 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r22;
	shfl.sync.bfly.b32	%r74, %r22, 2, 31, -1;
	mov.b32 	%f38, %r74;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f39;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f40, %r76;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r77, %r36, 3;
	setp.eq.s32 	%p21, %r77, 0;
	and.pred  	%p12, %p11, %p21;
	mov.b32 	%r25, %f41;
	// begin inline asm
	@%p12 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r78, %r73, %r71;
	ld.shared.u32 	%r27, [%r78];
	ld.shared.u32 	%r28, [%r78+16];
	ld.shared.u32 	%r29, [%r78+32];
	ld.shared.u32 	%r30, [%r78+48];
$L__tmp4:
	.loc	1 42 19                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:42:19
	bar.sync 	0;
	mad.lo.s32 	%r26, %r39, -12, %r78;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.v4.b32 [ %r26 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r79, %r40, 2;
	add.s32 	%r80, %r73, %r79;
	ld.shared.u32 	%r32, [%r80];
	mov.b32 	%r33, 1091567616;
	// begin inline asm
	div.full.f32 %r34, %r32, %r33;
	// end inline asm
	.loc	1 43 4                          // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:43:4
	bar.sync 	0;
	.loc	1 44 28                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:44:28
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd3, %rd4, %rd9;
	.loc	1 44 40                         // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:44:40
	setp.eq.s32 	%p22, %r69, 0;
	and.pred  	%p14, %p22, %p15;
	// begin inline asm
	@%p14 st.global.b32 [ %rd3 + 0 ], { %r34 };
	// end inline asm
	.loc	1 44 4                          // c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py:44:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 121
.b8 106
.b8 119
.b8 103
.b8 54
.b8 117
.b8 105
.b8 115
.b8 115
.b8 98
.b8 100
.b8 120
.b8 98
.b8 106
.b8 120
.b8 108
.b8 100
.b8 122
.b8 113
.b8 120
.b8 100
.b8 113
.b8 104
.b8 107
.b8 106
.b8 104
.b8 105
.b8 102
.b8 115
.b8 120
.b8 111
.b8 107
.b8 112
.b8 55
.b8 50
.b8 97
.b8 106
.b8 54
.b8 108
.b8 117
.b8 119
.b8 105
.b8 112
.b8 100
.b8 117
.b8 101
.b8 111
.b8 119
.b8 54
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
