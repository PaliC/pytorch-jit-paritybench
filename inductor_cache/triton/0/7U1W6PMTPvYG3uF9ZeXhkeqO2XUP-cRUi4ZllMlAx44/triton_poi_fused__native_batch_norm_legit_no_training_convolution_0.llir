; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 10, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 2, !dbg !12
  %15 = and i32 %14, 508, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = or disjoint i32 %16, 1, !dbg !13
  %18 = or disjoint i32 %16, 2, !dbg !13
  %19 = or disjoint i32 %16, 3, !dbg !13
  %20 = or disjoint i32 %16, 512, !dbg !13
  %21 = or disjoint i32 %16, 513, !dbg !13
  %22 = or disjoint i32 %16, 514, !dbg !13
  %23 = or disjoint i32 %16, 515, !dbg !13
  %24 = icmp slt i32 %16, 158760, !dbg !14
  %25 = icmp slt i32 %20, 158760, !dbg !14
  %26 = sdiv i32 %16, 3969, !dbg !15
  %27 = sdiv i32 %17, 3969, !dbg !15
  %28 = sdiv i32 %18, 3969, !dbg !15
  %29 = sdiv i32 %19, 3969, !dbg !15
  %30 = sdiv i32 %20, 3969, !dbg !15
  %31 = sdiv i32 %21, 3969, !dbg !15
  %32 = sdiv i32 %22, 3969, !dbg !15
  %33 = sdiv i32 %23, 3969, !dbg !15
  %34 = srem i32 %26, 10, !dbg !16
  %35 = srem i32 %27, 10, !dbg !16
  %36 = srem i32 %28, 10, !dbg !16
  %37 = srem i32 %29, 10, !dbg !16
  %38 = srem i32 %30, 10, !dbg !16
  %39 = srem i32 %31, 10, !dbg !16
  %40 = srem i32 %32, 10, !dbg !16
  %41 = srem i32 %33, 10, !dbg !16
  %42 = sext i32 %16 to i64, !dbg !17
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !17
  %44 = sext i32 %20 to i64, !dbg !17
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !17
  %46 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %43, i1 %24) #3, !dbg !18
  %47 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %45, i1 %25) #3, !dbg !18
  %48 = sext i32 %34 to i64, !dbg !19
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !19
  %50 = sext i32 %35 to i64, !dbg !19
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !19
  %52 = sext i32 %36 to i64, !dbg !19
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !19
  %54 = sext i32 %37 to i64, !dbg !19
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !19
  %56 = sext i32 %38 to i64, !dbg !19
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !19
  %58 = sext i32 %39 to i64, !dbg !19
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !19
  %60 = sext i32 %40 to i64, !dbg !19
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %60, !dbg !19
  %62 = sext i32 %41 to i64, !dbg !19
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %62, !dbg !19
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %24) #3, !dbg !20
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %24) #3, !dbg !20
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %24) #3, !dbg !20
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %24) #3, !dbg !20
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %25) #3, !dbg !20
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %25) #3, !dbg !20
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 %25) #3, !dbg !20
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %25) #3, !dbg !20
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !21
  %73 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !21
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !21
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !21
  %76 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !21
  %77 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !21
  %78 = getelementptr float, ptr addrspace(1) %2, i64 %60, !dbg !21
  %79 = getelementptr float, ptr addrspace(1) %2, i64 %62, !dbg !21
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %24) #3, !dbg !22
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %24) #3, !dbg !22
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 %24) #3, !dbg !22
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %24) #3, !dbg !22
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 %25) #3, !dbg !22
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 %25) #3, !dbg !22
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 %25) #3, !dbg !22
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 %25) #3, !dbg !22
  %88 = getelementptr float, ptr addrspace(1) %3, i64 %48, !dbg !23
  %89 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !23
  %90 = getelementptr float, ptr addrspace(1) %3, i64 %52, !dbg !23
  %91 = getelementptr float, ptr addrspace(1) %3, i64 %54, !dbg !23
  %92 = getelementptr float, ptr addrspace(1) %3, i64 %56, !dbg !23
  %93 = getelementptr float, ptr addrspace(1) %3, i64 %58, !dbg !23
  %94 = getelementptr float, ptr addrspace(1) %3, i64 %60, !dbg !23
  %95 = getelementptr float, ptr addrspace(1) %3, i64 %62, !dbg !23
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %88, i1 %24) #3, !dbg !24
  %97 = bitcast i32 %96 to float, !dbg !24
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 %24) #3, !dbg !24
  %99 = bitcast i32 %98 to float, !dbg !24
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 %24) #3, !dbg !24
  %101 = bitcast i32 %100 to float, !dbg !24
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 %24) #3, !dbg !24
  %103 = bitcast i32 %102 to float, !dbg !24
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %92, i1 %25) #3, !dbg !24
  %105 = bitcast i32 %104 to float, !dbg !24
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 %25) #3, !dbg !24
  %107 = bitcast i32 %106 to float, !dbg !24
  %108 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 %25) #3, !dbg !24
  %109 = bitcast i32 %108 to float, !dbg !24
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %95, i1 %25) #3, !dbg !24
  %111 = bitcast i32 %110 to float, !dbg !24
  %112 = getelementptr float, ptr addrspace(1) %4, i64 %48, !dbg !25
  %113 = getelementptr float, ptr addrspace(1) %4, i64 %50, !dbg !25
  %114 = getelementptr float, ptr addrspace(1) %4, i64 %52, !dbg !25
  %115 = getelementptr float, ptr addrspace(1) %4, i64 %54, !dbg !25
  %116 = getelementptr float, ptr addrspace(1) %4, i64 %56, !dbg !25
  %117 = getelementptr float, ptr addrspace(1) %4, i64 %58, !dbg !25
  %118 = getelementptr float, ptr addrspace(1) %4, i64 %60, !dbg !25
  %119 = getelementptr float, ptr addrspace(1) %4, i64 %62, !dbg !25
  %120 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %112, i1 %24) #3, !dbg !26
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %113, i1 %24) #3, !dbg !26
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %114, i1 %24) #3, !dbg !26
  %123 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %115, i1 %24) #3, !dbg !26
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %116, i1 %25) #3, !dbg !26
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %117, i1 %25) #3, !dbg !26
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %118, i1 %25) #3, !dbg !26
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %119, i1 %25) #3, !dbg !26
  %128 = getelementptr float, ptr addrspace(1) %5, i64 %48, !dbg !27
  %129 = getelementptr float, ptr addrspace(1) %5, i64 %50, !dbg !27
  %130 = getelementptr float, ptr addrspace(1) %5, i64 %52, !dbg !27
  %131 = getelementptr float, ptr addrspace(1) %5, i64 %54, !dbg !27
  %132 = getelementptr float, ptr addrspace(1) %5, i64 %56, !dbg !27
  %133 = getelementptr float, ptr addrspace(1) %5, i64 %58, !dbg !27
  %134 = getelementptr float, ptr addrspace(1) %5, i64 %60, !dbg !27
  %135 = getelementptr float, ptr addrspace(1) %5, i64 %62, !dbg !27
  %136 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %24) #3, !dbg !28
  %137 = bitcast i32 %136 to float, !dbg !28
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %129, i1 %24) #3, !dbg !28
  %139 = bitcast i32 %138 to float, !dbg !28
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %130, i1 %24) #3, !dbg !28
  %141 = bitcast i32 %140 to float, !dbg !28
  %142 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %131, i1 %24) #3, !dbg !28
  %143 = bitcast i32 %142 to float, !dbg !28
  %144 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %132, i1 %25) #3, !dbg !28
  %145 = bitcast i32 %144 to float, !dbg !28
  %146 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %133, i1 %25) #3, !dbg !28
  %147 = bitcast i32 %146 to float, !dbg !28
  %148 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %134, i1 %25) #3, !dbg !28
  %149 = bitcast i32 %148 to float, !dbg !28
  %150 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %135, i1 %25) #3, !dbg !28
  %151 = bitcast i32 %150 to float, !dbg !28
  %152 = getelementptr float, ptr addrspace(1) %6, i64 %48, !dbg !29
  %153 = getelementptr float, ptr addrspace(1) %6, i64 %50, !dbg !29
  %154 = getelementptr float, ptr addrspace(1) %6, i64 %52, !dbg !29
  %155 = getelementptr float, ptr addrspace(1) %6, i64 %54, !dbg !29
  %156 = getelementptr float, ptr addrspace(1) %6, i64 %56, !dbg !29
  %157 = getelementptr float, ptr addrspace(1) %6, i64 %58, !dbg !29
  %158 = getelementptr float, ptr addrspace(1) %6, i64 %60, !dbg !29
  %159 = getelementptr float, ptr addrspace(1) %6, i64 %62, !dbg !29
  %160 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %152, i1 %24) #3, !dbg !30
  %161 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %153, i1 %24) #3, !dbg !30
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %154, i1 %24) #3, !dbg !30
  %163 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %155, i1 %24) #3, !dbg !30
  %164 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %25) #3, !dbg !30
  %165 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %157, i1 %25) #3, !dbg !30
  %166 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %158, i1 %25) #3, !dbg !30
  %167 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %159, i1 %25) #3, !dbg !30
  %168 = getelementptr float, ptr addrspace(1) %7, i64 %48, !dbg !31
  %169 = getelementptr float, ptr addrspace(1) %7, i64 %50, !dbg !31
  %170 = getelementptr float, ptr addrspace(1) %7, i64 %52, !dbg !31
  %171 = getelementptr float, ptr addrspace(1) %7, i64 %54, !dbg !31
  %172 = getelementptr float, ptr addrspace(1) %7, i64 %56, !dbg !31
  %173 = getelementptr float, ptr addrspace(1) %7, i64 %58, !dbg !31
  %174 = getelementptr float, ptr addrspace(1) %7, i64 %60, !dbg !31
  %175 = getelementptr float, ptr addrspace(1) %7, i64 %62, !dbg !31
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %168, i1 %24) #3, !dbg !32
  %177 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %169, i1 %24) #3, !dbg !32
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %170, i1 %24) #3, !dbg !32
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %171, i1 %24) #3, !dbg !32
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %172, i1 %25) #3, !dbg !32
  %181 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %173, i1 %25) #3, !dbg !32
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 %25) #3, !dbg !32
  %183 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %175, i1 %25) #3, !dbg !32
  %184 = fadd float %97, 0x3EE4F8B580000000, !dbg !33
  %185 = fadd float %99, 0x3EE4F8B580000000, !dbg !33
  %186 = fadd float %101, 0x3EE4F8B580000000, !dbg !33
  %187 = fadd float %103, 0x3EE4F8B580000000, !dbg !33
  %188 = fadd float %105, 0x3EE4F8B580000000, !dbg !33
  %189 = fadd float %107, 0x3EE4F8B580000000, !dbg !33
  %190 = fadd float %109, 0x3EE4F8B580000000, !dbg !33
  %191 = fadd float %111, 0x3EE4F8B580000000, !dbg !33
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i = icmp eq i32 %192, 0, !dbg !34
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i = icmp eq i32 %193, 0, !dbg !34
  br i1 %.not.i, label %199, label %194, !dbg !34

194:                                              ; preds = %10
  br i1 %.not1.i, label %197, label %195, !dbg !34

195:                                              ; preds = %194
  %196 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %184) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

197:                                              ; preds = %194
  %198 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %184) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

199:                                              ; preds = %10
  br i1 %.not1.i, label %202, label %200, !dbg !34

200:                                              ; preds = %199
  %201 = tail call float @llvm.nvvm.sqrt.rn.f(float %184) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

202:                                              ; preds = %199
  %203 = tail call float @llvm.nvvm.sqrt.approx.f(float %184) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

__nv_sqrtf.exit:                                  ; preds = %195, %197, %200, %202
  %.0.i = phi float [ %196, %195 ], [ %198, %197 ], [ %201, %200 ], [ %203, %202 ], !dbg !34
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i1 = icmp eq i32 %204, 0, !dbg !34
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i4 = icmp eq i32 %205, 0, !dbg !34
  br i1 %.not.i1, label %211, label %206, !dbg !34

206:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %209, label %207, !dbg !34

207:                                              ; preds = %206
  %208 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %185) #3, !dbg !34
  br label %__nv_sqrtf.exit5, !dbg !34

209:                                              ; preds = %206
  %210 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %185) #3, !dbg !34
  br label %__nv_sqrtf.exit5, !dbg !34

211:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %214, label %212, !dbg !34

212:                                              ; preds = %211
  %213 = tail call float @llvm.nvvm.sqrt.rn.f(float %185) #3, !dbg !34
  br label %__nv_sqrtf.exit5, !dbg !34

214:                                              ; preds = %211
  %215 = tail call float @llvm.nvvm.sqrt.approx.f(float %185) #3, !dbg !34
  br label %__nv_sqrtf.exit5, !dbg !34

__nv_sqrtf.exit5:                                 ; preds = %207, %209, %212, %214
  %.0.i3 = phi float [ %208, %207 ], [ %210, %209 ], [ %213, %212 ], [ %215, %214 ], !dbg !34
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i6 = icmp eq i32 %216, 0, !dbg !34
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i9 = icmp eq i32 %217, 0, !dbg !34
  br i1 %.not.i6, label %223, label %218, !dbg !34

218:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %221, label %219, !dbg !34

219:                                              ; preds = %218
  %220 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %186) #3, !dbg !34
  br label %__nv_sqrtf.exit10, !dbg !34

221:                                              ; preds = %218
  %222 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %186) #3, !dbg !34
  br label %__nv_sqrtf.exit10, !dbg !34

223:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %226, label %224, !dbg !34

224:                                              ; preds = %223
  %225 = tail call float @llvm.nvvm.sqrt.rn.f(float %186) #3, !dbg !34
  br label %__nv_sqrtf.exit10, !dbg !34

226:                                              ; preds = %223
  %227 = tail call float @llvm.nvvm.sqrt.approx.f(float %186) #3, !dbg !34
  br label %__nv_sqrtf.exit10, !dbg !34

__nv_sqrtf.exit10:                                ; preds = %219, %221, %224, %226
  %.0.i8 = phi float [ %220, %219 ], [ %222, %221 ], [ %225, %224 ], [ %227, %226 ], !dbg !34
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i11 = icmp eq i32 %228, 0, !dbg !34
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i14 = icmp eq i32 %229, 0, !dbg !34
  br i1 %.not.i11, label %235, label %230, !dbg !34

230:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %233, label %231, !dbg !34

231:                                              ; preds = %230
  %232 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %187) #3, !dbg !34
  br label %__nv_sqrtf.exit15, !dbg !34

233:                                              ; preds = %230
  %234 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %187) #3, !dbg !34
  br label %__nv_sqrtf.exit15, !dbg !34

235:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %238, label %236, !dbg !34

236:                                              ; preds = %235
  %237 = tail call float @llvm.nvvm.sqrt.rn.f(float %187) #3, !dbg !34
  br label %__nv_sqrtf.exit15, !dbg !34

238:                                              ; preds = %235
  %239 = tail call float @llvm.nvvm.sqrt.approx.f(float %187) #3, !dbg !34
  br label %__nv_sqrtf.exit15, !dbg !34

__nv_sqrtf.exit15:                                ; preds = %231, %233, %236, %238
  %.0.i13 = phi float [ %232, %231 ], [ %234, %233 ], [ %237, %236 ], [ %239, %238 ], !dbg !34
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i16 = icmp eq i32 %240, 0, !dbg !34
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i19 = icmp eq i32 %241, 0, !dbg !34
  br i1 %.not.i16, label %247, label %242, !dbg !34

242:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %245, label %243, !dbg !34

243:                                              ; preds = %242
  %244 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %188) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

245:                                              ; preds = %242
  %246 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %188) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

247:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %250, label %248, !dbg !34

248:                                              ; preds = %247
  %249 = tail call float @llvm.nvvm.sqrt.rn.f(float %188) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

250:                                              ; preds = %247
  %251 = tail call float @llvm.nvvm.sqrt.approx.f(float %188) #3, !dbg !34
  br label %__nv_sqrtf.exit20, !dbg !34

__nv_sqrtf.exit20:                                ; preds = %243, %245, %248, %250
  %.0.i18 = phi float [ %244, %243 ], [ %246, %245 ], [ %249, %248 ], [ %251, %250 ], !dbg !34
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i21 = icmp eq i32 %252, 0, !dbg !34
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i24 = icmp eq i32 %253, 0, !dbg !34
  br i1 %.not.i21, label %259, label %254, !dbg !34

254:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %257, label %255, !dbg !34

255:                                              ; preds = %254
  %256 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %189) #3, !dbg !34
  br label %__nv_sqrtf.exit25, !dbg !34

257:                                              ; preds = %254
  %258 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %189) #3, !dbg !34
  br label %__nv_sqrtf.exit25, !dbg !34

259:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %262, label %260, !dbg !34

260:                                              ; preds = %259
  %261 = tail call float @llvm.nvvm.sqrt.rn.f(float %189) #3, !dbg !34
  br label %__nv_sqrtf.exit25, !dbg !34

262:                                              ; preds = %259
  %263 = tail call float @llvm.nvvm.sqrt.approx.f(float %189) #3, !dbg !34
  br label %__nv_sqrtf.exit25, !dbg !34

__nv_sqrtf.exit25:                                ; preds = %255, %257, %260, %262
  %.0.i23 = phi float [ %256, %255 ], [ %258, %257 ], [ %261, %260 ], [ %263, %262 ], !dbg !34
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i26 = icmp eq i32 %264, 0, !dbg !34
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i29 = icmp eq i32 %265, 0, !dbg !34
  br i1 %.not.i26, label %271, label %266, !dbg !34

266:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %269, label %267, !dbg !34

267:                                              ; preds = %266
  %268 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %190) #3, !dbg !34
  br label %__nv_sqrtf.exit30, !dbg !34

269:                                              ; preds = %266
  %270 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %190) #3, !dbg !34
  br label %__nv_sqrtf.exit30, !dbg !34

271:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %274, label %272, !dbg !34

272:                                              ; preds = %271
  %273 = tail call float @llvm.nvvm.sqrt.rn.f(float %190) #3, !dbg !34
  br label %__nv_sqrtf.exit30, !dbg !34

274:                                              ; preds = %271
  %275 = tail call float @llvm.nvvm.sqrt.approx.f(float %190) #3, !dbg !34
  br label %__nv_sqrtf.exit30, !dbg !34

__nv_sqrtf.exit30:                                ; preds = %267, %269, %272, %274
  %.0.i28 = phi float [ %268, %267 ], [ %270, %269 ], [ %273, %272 ], [ %275, %274 ], !dbg !34
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i31 = icmp eq i32 %276, 0, !dbg !34
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i34 = icmp eq i32 %277, 0, !dbg !34
  br i1 %.not.i31, label %283, label %278, !dbg !34

278:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %281, label %279, !dbg !34

279:                                              ; preds = %278
  %280 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %191) #3, !dbg !34
  br label %__nv_sqrtf.exit35, !dbg !34

281:                                              ; preds = %278
  %282 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %191) #3, !dbg !34
  br label %__nv_sqrtf.exit35, !dbg !34

283:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %286, label %284, !dbg !34

284:                                              ; preds = %283
  %285 = tail call float @llvm.nvvm.sqrt.rn.f(float %191) #3, !dbg !34
  br label %__nv_sqrtf.exit35, !dbg !34

286:                                              ; preds = %283
  %287 = tail call float @llvm.nvvm.sqrt.approx.f(float %191) #3, !dbg !34
  br label %__nv_sqrtf.exit35, !dbg !34

__nv_sqrtf.exit35:                                ; preds = %279, %281, %284, %286
  %.0.i33 = phi float [ %280, %279 ], [ %282, %281 ], [ %285, %284 ], [ %287, %286 ], !dbg !34
  %288 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !35
  %289 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !35
  %290 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !35
  %291 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !35
  %292 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !35
  %293 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !35
  %294 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !35
  %295 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !35
  %296 = fadd float %137, 0x3EE4F8B580000000, !dbg !36
  %297 = fadd float %139, 0x3EE4F8B580000000, !dbg !36
  %298 = fadd float %141, 0x3EE4F8B580000000, !dbg !36
  %299 = fadd float %143, 0x3EE4F8B580000000, !dbg !36
  %300 = fadd float %145, 0x3EE4F8B580000000, !dbg !36
  %301 = fadd float %147, 0x3EE4F8B580000000, !dbg !36
  %302 = fadd float %149, 0x3EE4F8B580000000, !dbg !36
  %303 = fadd float %151, 0x3EE4F8B580000000, !dbg !36
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i36 = icmp eq i32 %304, 0, !dbg !37
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i39 = icmp eq i32 %305, 0, !dbg !37
  br i1 %.not.i36, label %311, label %306, !dbg !37

306:                                              ; preds = %__nv_sqrtf.exit35
  br i1 %.not1.i39, label %309, label %307, !dbg !37

307:                                              ; preds = %306
  %308 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %296) #3, !dbg !37
  br label %__nv_sqrtf.exit40, !dbg !37

309:                                              ; preds = %306
  %310 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %296) #3, !dbg !37
  br label %__nv_sqrtf.exit40, !dbg !37

311:                                              ; preds = %__nv_sqrtf.exit35
  br i1 %.not1.i39, label %314, label %312, !dbg !37

312:                                              ; preds = %311
  %313 = tail call float @llvm.nvvm.sqrt.rn.f(float %296) #3, !dbg !37
  br label %__nv_sqrtf.exit40, !dbg !37

314:                                              ; preds = %311
  %315 = tail call float @llvm.nvvm.sqrt.approx.f(float %296) #3, !dbg !37
  br label %__nv_sqrtf.exit40, !dbg !37

__nv_sqrtf.exit40:                                ; preds = %307, %309, %312, %314
  %.0.i38 = phi float [ %308, %307 ], [ %310, %309 ], [ %313, %312 ], [ %315, %314 ], !dbg !37
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i41 = icmp eq i32 %316, 0, !dbg !37
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i44 = icmp eq i32 %317, 0, !dbg !37
  br i1 %.not.i41, label %323, label %318, !dbg !37

318:                                              ; preds = %__nv_sqrtf.exit40
  br i1 %.not1.i44, label %321, label %319, !dbg !37

319:                                              ; preds = %318
  %320 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %297) #3, !dbg !37
  br label %__nv_sqrtf.exit45, !dbg !37

321:                                              ; preds = %318
  %322 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %297) #3, !dbg !37
  br label %__nv_sqrtf.exit45, !dbg !37

323:                                              ; preds = %__nv_sqrtf.exit40
  br i1 %.not1.i44, label %326, label %324, !dbg !37

324:                                              ; preds = %323
  %325 = tail call float @llvm.nvvm.sqrt.rn.f(float %297) #3, !dbg !37
  br label %__nv_sqrtf.exit45, !dbg !37

326:                                              ; preds = %323
  %327 = tail call float @llvm.nvvm.sqrt.approx.f(float %297) #3, !dbg !37
  br label %__nv_sqrtf.exit45, !dbg !37

__nv_sqrtf.exit45:                                ; preds = %319, %321, %324, %326
  %.0.i43 = phi float [ %320, %319 ], [ %322, %321 ], [ %325, %324 ], [ %327, %326 ], !dbg !37
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i46 = icmp eq i32 %328, 0, !dbg !37
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i49 = icmp eq i32 %329, 0, !dbg !37
  br i1 %.not.i46, label %335, label %330, !dbg !37

330:                                              ; preds = %__nv_sqrtf.exit45
  br i1 %.not1.i49, label %333, label %331, !dbg !37

331:                                              ; preds = %330
  %332 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %298) #3, !dbg !37
  br label %__nv_sqrtf.exit50, !dbg !37

333:                                              ; preds = %330
  %334 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %298) #3, !dbg !37
  br label %__nv_sqrtf.exit50, !dbg !37

335:                                              ; preds = %__nv_sqrtf.exit45
  br i1 %.not1.i49, label %338, label %336, !dbg !37

336:                                              ; preds = %335
  %337 = tail call float @llvm.nvvm.sqrt.rn.f(float %298) #3, !dbg !37
  br label %__nv_sqrtf.exit50, !dbg !37

338:                                              ; preds = %335
  %339 = tail call float @llvm.nvvm.sqrt.approx.f(float %298) #3, !dbg !37
  br label %__nv_sqrtf.exit50, !dbg !37

__nv_sqrtf.exit50:                                ; preds = %331, %333, %336, %338
  %.0.i48 = phi float [ %332, %331 ], [ %334, %333 ], [ %337, %336 ], [ %339, %338 ], !dbg !37
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i51 = icmp eq i32 %340, 0, !dbg !37
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i54 = icmp eq i32 %341, 0, !dbg !37
  br i1 %.not.i51, label %347, label %342, !dbg !37

342:                                              ; preds = %__nv_sqrtf.exit50
  br i1 %.not1.i54, label %345, label %343, !dbg !37

343:                                              ; preds = %342
  %344 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %299) #3, !dbg !37
  br label %__nv_sqrtf.exit55, !dbg !37

345:                                              ; preds = %342
  %346 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %299) #3, !dbg !37
  br label %__nv_sqrtf.exit55, !dbg !37

347:                                              ; preds = %__nv_sqrtf.exit50
  br i1 %.not1.i54, label %350, label %348, !dbg !37

348:                                              ; preds = %347
  %349 = tail call float @llvm.nvvm.sqrt.rn.f(float %299) #3, !dbg !37
  br label %__nv_sqrtf.exit55, !dbg !37

350:                                              ; preds = %347
  %351 = tail call float @llvm.nvvm.sqrt.approx.f(float %299) #3, !dbg !37
  br label %__nv_sqrtf.exit55, !dbg !37

__nv_sqrtf.exit55:                                ; preds = %343, %345, %348, %350
  %.0.i53 = phi float [ %344, %343 ], [ %346, %345 ], [ %349, %348 ], [ %351, %350 ], !dbg !37
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i56 = icmp eq i32 %352, 0, !dbg !37
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i59 = icmp eq i32 %353, 0, !dbg !37
  br i1 %.not.i56, label %359, label %354, !dbg !37

354:                                              ; preds = %__nv_sqrtf.exit55
  br i1 %.not1.i59, label %357, label %355, !dbg !37

355:                                              ; preds = %354
  %356 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %300) #3, !dbg !37
  br label %__nv_sqrtf.exit60, !dbg !37

357:                                              ; preds = %354
  %358 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %300) #3, !dbg !37
  br label %__nv_sqrtf.exit60, !dbg !37

359:                                              ; preds = %__nv_sqrtf.exit55
  br i1 %.not1.i59, label %362, label %360, !dbg !37

360:                                              ; preds = %359
  %361 = tail call float @llvm.nvvm.sqrt.rn.f(float %300) #3, !dbg !37
  br label %__nv_sqrtf.exit60, !dbg !37

362:                                              ; preds = %359
  %363 = tail call float @llvm.nvvm.sqrt.approx.f(float %300) #3, !dbg !37
  br label %__nv_sqrtf.exit60, !dbg !37

__nv_sqrtf.exit60:                                ; preds = %355, %357, %360, %362
  %.0.i58 = phi float [ %356, %355 ], [ %358, %357 ], [ %361, %360 ], [ %363, %362 ], !dbg !37
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i61 = icmp eq i32 %364, 0, !dbg !37
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i64 = icmp eq i32 %365, 0, !dbg !37
  br i1 %.not.i61, label %371, label %366, !dbg !37

366:                                              ; preds = %__nv_sqrtf.exit60
  br i1 %.not1.i64, label %369, label %367, !dbg !37

367:                                              ; preds = %366
  %368 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %301) #3, !dbg !37
  br label %__nv_sqrtf.exit65, !dbg !37

369:                                              ; preds = %366
  %370 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %301) #3, !dbg !37
  br label %__nv_sqrtf.exit65, !dbg !37

371:                                              ; preds = %__nv_sqrtf.exit60
  br i1 %.not1.i64, label %374, label %372, !dbg !37

372:                                              ; preds = %371
  %373 = tail call float @llvm.nvvm.sqrt.rn.f(float %301) #3, !dbg !37
  br label %__nv_sqrtf.exit65, !dbg !37

374:                                              ; preds = %371
  %375 = tail call float @llvm.nvvm.sqrt.approx.f(float %301) #3, !dbg !37
  br label %__nv_sqrtf.exit65, !dbg !37

__nv_sqrtf.exit65:                                ; preds = %367, %369, %372, %374
  %.0.i63 = phi float [ %368, %367 ], [ %370, %369 ], [ %373, %372 ], [ %375, %374 ], !dbg !37
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i66 = icmp eq i32 %376, 0, !dbg !37
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i69 = icmp eq i32 %377, 0, !dbg !37
  br i1 %.not.i66, label %383, label %378, !dbg !37

378:                                              ; preds = %__nv_sqrtf.exit65
  br i1 %.not1.i69, label %381, label %379, !dbg !37

379:                                              ; preds = %378
  %380 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %302) #3, !dbg !37
  br label %__nv_sqrtf.exit70, !dbg !37

381:                                              ; preds = %378
  %382 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %302) #3, !dbg !37
  br label %__nv_sqrtf.exit70, !dbg !37

383:                                              ; preds = %__nv_sqrtf.exit65
  br i1 %.not1.i69, label %386, label %384, !dbg !37

384:                                              ; preds = %383
  %385 = tail call float @llvm.nvvm.sqrt.rn.f(float %302) #3, !dbg !37
  br label %__nv_sqrtf.exit70, !dbg !37

386:                                              ; preds = %383
  %387 = tail call float @llvm.nvvm.sqrt.approx.f(float %302) #3, !dbg !37
  br label %__nv_sqrtf.exit70, !dbg !37

__nv_sqrtf.exit70:                                ; preds = %379, %381, %384, %386
  %.0.i68 = phi float [ %380, %379 ], [ %382, %381 ], [ %385, %384 ], [ %387, %386 ], !dbg !37
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i71 = icmp eq i32 %388, 0, !dbg !37
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i74 = icmp eq i32 %389, 0, !dbg !37
  br i1 %.not.i71, label %395, label %390, !dbg !37

390:                                              ; preds = %__nv_sqrtf.exit70
  br i1 %.not1.i74, label %393, label %391, !dbg !37

391:                                              ; preds = %390
  %392 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %303) #3, !dbg !37
  br label %__nv_sqrtf.exit75, !dbg !37

393:                                              ; preds = %390
  %394 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %303) #3, !dbg !37
  br label %__nv_sqrtf.exit75, !dbg !37

395:                                              ; preds = %__nv_sqrtf.exit70
  br i1 %.not1.i74, label %398, label %396, !dbg !37

396:                                              ; preds = %395
  %397 = tail call float @llvm.nvvm.sqrt.rn.f(float %303) #3, !dbg !37
  br label %__nv_sqrtf.exit75, !dbg !37

398:                                              ; preds = %395
  %399 = tail call float @llvm.nvvm.sqrt.approx.f(float %303) #3, !dbg !37
  br label %__nv_sqrtf.exit75, !dbg !37

__nv_sqrtf.exit75:                                ; preds = %391, %393, %396, %398
  %.0.i73 = phi float [ %392, %391 ], [ %394, %393 ], [ %397, %396 ], [ %399, %398 ], !dbg !37
  %400 = extractvalue { i32, i32, i32, i32 } %47, 3, !dbg !18
  %401 = bitcast i32 %400 to float, !dbg !18
  %402 = bitcast i32 %71 to float, !dbg !20
  %403 = fadd float %401, %402, !dbg !38
  %404 = bitcast i32 %87 to float, !dbg !22
  %405 = fsub float %403, %404, !dbg !39
  %406 = fmul float %405, %295, !dbg !40
  %407 = bitcast i32 %127 to float, !dbg !26
  %408 = fsub float %406, %407, !dbg !41
  %409 = extractvalue { i32, i32, i32, i32 } %47, 2, !dbg !18
  %410 = bitcast i32 %409 to float, !dbg !18
  %411 = bitcast i32 %70 to float, !dbg !20
  %412 = fadd float %410, %411, !dbg !38
  %413 = bitcast i32 %86 to float, !dbg !22
  %414 = fsub float %412, %413, !dbg !39
  %415 = fmul float %414, %294, !dbg !40
  %416 = bitcast i32 %126 to float, !dbg !26
  %417 = fsub float %415, %416, !dbg !41
  %418 = extractvalue { i32, i32, i32, i32 } %47, 1, !dbg !18
  %419 = bitcast i32 %418 to float, !dbg !18
  %420 = bitcast i32 %69 to float, !dbg !20
  %421 = fadd float %419, %420, !dbg !38
  %422 = bitcast i32 %85 to float, !dbg !22
  %423 = fsub float %421, %422, !dbg !39
  %424 = fmul float %423, %293, !dbg !40
  %425 = bitcast i32 %125 to float, !dbg !26
  %426 = fsub float %424, %425, !dbg !41
  %427 = extractvalue { i32, i32, i32, i32 } %47, 0, !dbg !18
  %428 = bitcast i32 %427 to float, !dbg !18
  %429 = bitcast i32 %68 to float, !dbg !20
  %430 = fadd float %428, %429, !dbg !38
  %431 = bitcast i32 %84 to float, !dbg !22
  %432 = fsub float %430, %431, !dbg !39
  %433 = fmul float %432, %292, !dbg !40
  %434 = bitcast i32 %124 to float, !dbg !26
  %435 = fsub float %433, %434, !dbg !41
  %436 = extractvalue { i32, i32, i32, i32 } %46, 3, !dbg !18
  %437 = bitcast i32 %436 to float, !dbg !18
  %438 = bitcast i32 %67 to float, !dbg !20
  %439 = fadd float %437, %438, !dbg !38
  %440 = bitcast i32 %83 to float, !dbg !22
  %441 = fsub float %439, %440, !dbg !39
  %442 = fmul float %441, %291, !dbg !40
  %443 = bitcast i32 %123 to float, !dbg !26
  %444 = fsub float %442, %443, !dbg !41
  %445 = extractvalue { i32, i32, i32, i32 } %46, 2, !dbg !18
  %446 = bitcast i32 %445 to float, !dbg !18
  %447 = bitcast i32 %66 to float, !dbg !20
  %448 = fadd float %446, %447, !dbg !38
  %449 = bitcast i32 %82 to float, !dbg !22
  %450 = fsub float %448, %449, !dbg !39
  %451 = fmul float %450, %290, !dbg !40
  %452 = bitcast i32 %122 to float, !dbg !26
  %453 = fsub float %451, %452, !dbg !41
  %454 = extractvalue { i32, i32, i32, i32 } %46, 1, !dbg !18
  %455 = bitcast i32 %454 to float, !dbg !18
  %456 = bitcast i32 %65 to float, !dbg !20
  %457 = fadd float %455, %456, !dbg !38
  %458 = bitcast i32 %81 to float, !dbg !22
  %459 = fsub float %457, %458, !dbg !39
  %460 = fmul float %459, %289, !dbg !40
  %461 = bitcast i32 %121 to float, !dbg !26
  %462 = fsub float %460, %461, !dbg !41
  %463 = extractvalue { i32, i32, i32, i32 } %46, 0, !dbg !18
  %464 = bitcast i32 %463 to float, !dbg !18
  %465 = bitcast i32 %64 to float, !dbg !20
  %466 = fadd float %464, %465, !dbg !38
  %467 = bitcast i32 %80 to float, !dbg !22
  %468 = fsub float %466, %467, !dbg !39
  %469 = fmul float %468, %288, !dbg !40
  %470 = bitcast i32 %120 to float, !dbg !26
  %471 = fsub float %469, %470, !dbg !41
  %472 = bitcast i32 %183 to float, !dbg !32
  %473 = bitcast i32 %182 to float, !dbg !32
  %474 = bitcast i32 %181 to float, !dbg !32
  %475 = bitcast i32 %180 to float, !dbg !32
  %476 = bitcast i32 %179 to float, !dbg !32
  %477 = bitcast i32 %178 to float, !dbg !32
  %478 = bitcast i32 %177 to float, !dbg !32
  %479 = bitcast i32 %176 to float, !dbg !32
  %480 = bitcast i32 %167 to float, !dbg !30
  %481 = bitcast i32 %166 to float, !dbg !30
  %482 = bitcast i32 %165 to float, !dbg !30
  %483 = bitcast i32 %164 to float, !dbg !30
  %484 = bitcast i32 %163 to float, !dbg !30
  %485 = bitcast i32 %162 to float, !dbg !30
  %486 = bitcast i32 %161 to float, !dbg !30
  %487 = bitcast i32 %160 to float, !dbg !30
  %488 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i38) #3, !dbg !42
  %489 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i43) #3, !dbg !42
  %490 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i48) #3, !dbg !42
  %491 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i53) #3, !dbg !42
  %492 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i58) #3, !dbg !42
  %493 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i63) #3, !dbg !42
  %494 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i68) #3, !dbg !42
  %495 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i73) #3, !dbg !42
  %496 = fmul float %471, %488, !dbg !43
  %497 = fmul float %462, %489, !dbg !43
  %498 = fmul float %453, %490, !dbg !43
  %499 = fmul float %444, %491, !dbg !43
  %500 = fmul float %435, %492, !dbg !43
  %501 = fmul float %426, %493, !dbg !43
  %502 = fmul float %417, %494, !dbg !43
  %503 = fmul float %408, %495, !dbg !43
  %504 = fmul float %496, %487, !dbg !44
  %505 = fmul float %497, %486, !dbg !44
  %506 = fmul float %498, %485, !dbg !44
  %507 = fmul float %499, %484, !dbg !44
  %508 = fmul float %500, %483, !dbg !44
  %509 = fmul float %501, %482, !dbg !44
  %510 = fmul float %502, %481, !dbg !44
  %511 = fmul float %503, %480, !dbg !44
  %512 = fadd float %504, %479, !dbg !45
  %513 = fadd float %505, %478, !dbg !45
  %514 = fadd float %506, %477, !dbg !45
  %515 = fadd float %507, %476, !dbg !45
  %516 = fadd float %508, %475, !dbg !45
  %517 = fadd float %509, %474, !dbg !45
  %518 = fadd float %510, %473, !dbg !45
  %519 = fadd float %511, %472, !dbg !45
  %520 = bitcast float %466 to i32, !dbg !46
  %521 = bitcast float %457 to i32, !dbg !46
  %522 = bitcast float %448 to i32, !dbg !46
  %523 = bitcast float %439 to i32, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %520, i32 %521, i32 %522, i32 %523, ptr addrspace(1) %43, i1 %24) #3, !dbg !46
  %524 = bitcast float %430 to i32, !dbg !46
  %525 = bitcast float %421 to i32, !dbg !46
  %526 = bitcast float %412 to i32, !dbg !46
  %527 = bitcast float %403 to i32, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %524, i32 %525, i32 %526, i32 %527, ptr addrspace(1) %45, i1 %25) #3, !dbg !46
  %528 = getelementptr float, ptr addrspace(1) %8, i64 %42, !dbg !47
  %529 = getelementptr float, ptr addrspace(1) %8, i64 %44, !dbg !47
  %530 = bitcast float %512 to i32, !dbg !48
  %531 = bitcast float %513 to i32, !dbg !48
  %532 = bitcast float %514 to i32, !dbg !48
  %533 = bitcast float %515 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %530, i32 %531, i32 %532, i32 %533, ptr addrspace(1) %528, i1 %24) #3, !dbg !48
  %534 = bitcast float %516 to i32, !dbg !48
  %535 = bitcast float %517 to i32, !dbg !48
  %536 = bitcast float %518 to i32, !dbg !48
  %537 = bitcast float %519 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %534, i32 %535, i32 %536, i32 %537, ptr addrspace(1) %529, i1 %25) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbm5rajqmhmawijetqc22zk6wkt4t5ppvgjtxuk7c7ogbl26oygb.py", directory: "inductor_cache/bm")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 29, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 31, scope: !7)
!30 = !DILocation(line: 32, column: 36, scope: !7)
!31 = !DILocation(line: 33, column: 31, scope: !7)
!32 = !DILocation(line: 33, column: 36, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 26, scope: !7)
!35 = !DILocation(line: 40, column: 19, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 27, scope: !7)
!38 = !DILocation(line: 34, column: 18, scope: !7)
!39 = !DILocation(line: 35, column: 18, scope: !7)
!40 = !DILocation(line: 43, column: 19, scope: !7)
!41 = !DILocation(line: 44, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 19, scope: !7)
!43 = !DILocation(line: 49, column: 20, scope: !7)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 20, scope: !7)
!46 = !DILocation(line: 52, column: 39, scope: !7)
!47 = !DILocation(line: 53, column: 25, scope: !7)
!48 = !DILocation(line: 53, column: 37, scope: !7)
!49 = !DILocation(line: 53, column: 4, scope: !7)
