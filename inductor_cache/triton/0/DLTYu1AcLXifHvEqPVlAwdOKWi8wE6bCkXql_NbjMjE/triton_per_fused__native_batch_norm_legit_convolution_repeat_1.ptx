//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_repeat_1 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_repeat_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_repeat_1
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_repeat_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<89>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_0];
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:23:33
	shl.b32 	%r50, %r1, 3;
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_2];
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_3];
	.loc	1 24 44                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:24:44
	mov.u32 	%r51, %tid.x;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_4];
	bfe.u32 	%r52, %r51, 4, 3;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_5];
	and.b32  	%r53, %r51, 7;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_6];
	.loc	1 24 23                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:24:23
	or.b32  	%r54, %r50, %r52;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_convolution_repeat_1_param_7];
	or.b32  	%r55, %r50, %r53;
	.loc	1 25 21                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:25:21
	setp.lt.s32 	%p1, %r54, 16;
	setp.lt.s32 	%p5, %r55, 16;
	.loc	1 26 34                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:26:34
	shl.b32 	%r56, %r51, 2;
	and.b32  	%r57, %r56, 60;
	.loc	1 31 19                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:31:19
	bfe.s32 	%r58, %r1, 28, 1;
	shr.u32 	%r59, %r58, 30;
	add.s32 	%r60, %r54, %r59;
	and.b32  	%r61, %r60, -4;
	sub.s32 	%r62, %r54, %r61;
	add.s32 	%r63, %r55, %r59;
	and.b32  	%r64, %r63, -4;
	sub.s32 	%r65, %r55, %r64;
	.loc	1 32 31                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:32:31
	mul.wide.s32 	%rd28, %r62, 4;
	add.s64 	%rd1, %rd21, %rd28;
	mul.wide.s32 	%rd29, %r65, 4;
	add.s64 	%rd5, %rd21, %rd29;
	.loc	1 32 41                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:32:41
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 42                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:33:42
	shl.b32 	%r66, %r54, 6;
	.loc	1 33 39                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:33:39
	or.b32  	%r67, %r66, %r57;
	.loc	1 33 34                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:33:34
	mul.wide.s32 	%rd30, %r67, 4;
	add.s64 	%rd6, %rd20, %rd30;
	mov.b32 	%r11, 0;
	.loc	1 33 47                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:33:47
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r7, %r11;
	@!%p1 mov.u32 %r8, %r11;
	@!%p1 mov.u32 %r9, %r11;
	@!%p1 mov.u32 %r10, %r11;
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 34 30                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:34:30
	add.s64 	%rd7, %rd22, %rd28;
	.loc	1 34 35                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:34:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r18;
	.loc	1 35 32                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:35:32
	add.s64 	%rd11, %rd23, %rd28;
	.loc	1 35 42                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:35:42
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 18                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:36:18
	add.f32 	%f6, %f1, %f5;
	add.f32 	%f7, %f2, %f5;
	add.f32 	%f8, %f3, %f5;
	add.f32 	%f9, %f4, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f6, %f7;
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f9, %f11;
	selp.f32 	%f13, %f12, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f13;
	shfl.sync.bfly.b32	%r69, %r68, 8, 31, -1;
	mov.b32 	%f14, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f15;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f16, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f17;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f18, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f19;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f20, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
$L__tmp2:
	.loc	1 44 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:44:20
	shl.b32 	%r76, %r52, 2;
	mov.u32 	%r77, global_smem;
	add.s32 	%r23, %r77, %r76;
	mov.b32 	%r24, %f21;
	mov.pred 	%p19, -1;
	// begin inline asm
	@%p19 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r53, 2;
	add.s32 	%r79, %r77, %r78;
	ld.shared.u32 	%r26, [%r79];
	mov.b32 	%r27, 1115684864;
	// begin inline asm
	div.full.f32 %r49, %r26, %r27;
	// end inline asm
	// begin inline asm
	div.full.f32 %r28, %r24, %r27;
	// end inline asm
	mov.b32 	%f22, %r28;
	.loc	1 45 19                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:45:19
	sub.f32 	%f23, %f6, %f22;
	sub.f32 	%f24, %f7, %f22;
	sub.f32 	%f25, %f8, %f22;
	sub.f32 	%f26, %f9, %f22;
	.loc	1 46 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:46:20
	mul.f32 	%f27, %f24, %f24;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f28, %f23, %f23, %f27;
	fma.rn.f32 	%f29, %f25, %f25, %f28;
	fma.rn.f32 	%f30, %f26, %f26, %f29;
	selp.f32 	%f31, %f30, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f31;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f32, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f33;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f34, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f35;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f36, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f37;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f38, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
$L__tmp4:
	.loc	1 55 28                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:55:28
	bar.sync 	0;
	mov.b32 	%r32, %f39;
	// begin inline asm
	@%p19 st.shared.b32 [ %r23 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	.loc	1 52 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:52:20
	ld.shared.u32 	%r34, [%r79];
	// begin inline asm
	div.full.f32 %r33, %r34, %r27;
	// end inline asm
	mov.b32 	%f40, %r33;
	// begin inline asm
	div.full.f32 %r36, %r32, %r27;
	// end inline asm
	mov.b32 	%f41, %r36;
	.loc	1 54 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:54:20
	add.f32 	%f42, %f40, 0f3727C5AC;
	add.f32 	%f43, %f41, 0f3727C5AC;
	.loc	1 55 28                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:55:28
	rsqrt.approx.ftz.f32 	%f44, %f42;
	rsqrt.approx.ftz.f32 	%f45, %f43;
	.loc	1 35 42                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:35:42
	mov.b32 	%f46, %r22;
	.loc	1 32 41                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:32:41
	mov.b32 	%f47, %r5;
	.loc	1 56 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:56:20
	mul.f32 	%f48, %f23, %f45;
	mul.f32 	%f49, %f24, %f45;
	mul.f32 	%f50, %f25, %f45;
	mul.f32 	%f51, %f26, %f45;
	.loc	1 58 20                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:58:20
	fma.rn.f32 	%f52, %f48, %f47, %f46;
	fma.rn.f32 	%f53, %f49, %f47, %f46;
	fma.rn.f32 	%f54, %f50, %f47, %f46;
	fma.rn.f32 	%f55, %f51, %f47, %f46;
	.loc	1 59 25                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:59:25
	mul.wide.s32 	%rd31, %r55, 4;
	add.s64 	%rd15, %rd24, %rd31;
	.loc	1 59 36                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:59:36
	and.b32  	%r88, %r51, 120;
	setp.eq.s32 	%p26, %r88, 0;
	and.pred  	%p21, %p26, %p5;
	// begin inline asm
	@%p21 st.global.b32 [ %rd15 + 0 ], { %r39 };
	// end inline asm
	.loc	1 60 47                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:60:47
	mov.b32 	%r40, %f6;
	mov.b32 	%r41, %f7;
	mov.b32 	%r42, %f8;
	mov.b32 	%r43, %f9;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r40, %r41, %r42, %r43 };
	// end inline asm
	.loc	1 61 25                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:61:25
	add.s64 	%rd17, %rd26, %rd30;
	.loc	1 61 45                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:61:45
	mov.b32 	%r44, %f52;
	mov.b32 	%r45, %f53;
	mov.b32 	%r46, %f54;
	mov.b32 	%r47, %f55;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 62 25                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:62:25
	add.s64 	%rd18, %rd27, %rd31;
	.loc	1 62 37                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:62:37
	mov.b32 	%r48, %f44;
	// begin inline asm
	@%p21 st.global.b32 [ %rd18 + 0 ], { %r48 };
	// end inline asm
	.loc	1 63 25                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:63:25
	add.s64 	%rd19, %rd25, %rd31;
	.loc	1 63 37                         // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:63:37
	// begin inline asm
	@%p21 st.global.b32 [ %rd19 + 0 ], { %r49 };
	// end inline asm
	.loc	1 63 4                          // ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py:63:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cn/ccncymmsfj6bfotvbku6omw6ogxbsuuzxlv3kks76edp6n7d4vbr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 231                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 110
.b8 99
.b8 121
.b8 109
.b8 109
.b8 115
.b8 102
.b8 106
.b8 54
.b8 98
.b8 102
.b8 111
.b8 116
.b8 118
.b8 98
.b8 107
.b8 117
.b8 54
.b8 111
.b8 109
.b8 119
.b8 54
.b8 111
.b8 103
.b8 120
.b8 98
.b8 115
.b8 117
.b8 117
.b8 122
.b8 120
.b8 108
.b8 118
.b8 51
.b8 107
.b8 107
.b8 115
.b8 55
.b8 54
.b8 101
.b8 100
.b8 112
.b8 54
.b8 110
.b8 55
.b8 100
.b8 52
.b8 118
.b8 98
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x41 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 112
.b8 101
.b8 97
.b8 116
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa4:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
