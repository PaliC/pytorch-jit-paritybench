; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 14, !dbg !12
  %9 = and i32 %7, 62, !dbg !12
  %10 = or disjoint i32 %5, %9, !dbg !13
  %11 = or disjoint i32 %8, %5, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = srem i32 %12, 16, !dbg !16
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !17
  %17 = sdiv i8 %.lhs.trunc, 4, !dbg !17
  %.lhs.trunc1 = trunc nsw i32 %16 to i8, !dbg !17
  %.lhs.trunc1.frozen = freeze i8 %.lhs.trunc1, !dbg !17
  %18 = sdiv i8 %.lhs.trunc1.frozen, 4, !dbg !17
  %narrow = mul nsw i8 %17, 12, !dbg !18
  %19 = sext i8 %narrow to i32, !dbg !18
  %narrow7 = mul nsw i8 %18, 12, !dbg !18
  %20 = sext i8 %narrow7 to i32, !dbg !18
  %21 = mul i32 %14, 48, !dbg !19
  %22 = mul i8 %17, 4, !dbg !20
  %.decomposed8 = sub i8 %.lhs.trunc, %22, !dbg !20
  %.sext4 = sext i8 %.decomposed8 to i32, !dbg !20
  %23 = mul i8 %18, 4, !dbg !20
  %.decomposed9 = sub i8 %.lhs.trunc1.frozen, %23, !dbg !20
  %.sext6 = sext i8 %.decomposed9 to i32, !dbg !20
  %24 = add i32 %21, %.sext4, !dbg !21
  %25 = add i32 %24, %19, !dbg !22
  %26 = add i32 %21, %.sext6, !dbg !21
  %27 = add i32 %26, %20, !dbg !22
  %28 = sext i32 %25 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = sext i32 %27 to i64, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !23
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %13) #1, !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %13) #1, !dbg !24
  %35 = bitcast i32 %34 to float, !dbg !24
  %36 = fmul float %33, 0x3FE6A09E60000000, !dbg !25
  %37 = fmul float %35, 0x3FE6A09E60000000, !dbg !25
  %38 = sext i32 %10 to i64, !dbg !26
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !26
  %40 = bitcast float %36 to i32, !dbg !27
  %41 = bitcast float %37 to i32, !dbg !27
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %40, i32 %41, ptr addrspace(1) %39, i1 %13) #1, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3fhipuqmyb353l3e2t43ils5aetnzzvyjupyyyuuwqbeg2vt5s4.py", directory: "inductor_cache/3f")
!4 = !{ptr @triton_poi_fused_mul_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_2", linkageName: "triton_poi_fused_mul_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 40, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 48, scope: !7)
!20 = !DILocation(line: 27, column: 60, scope: !7)
!21 = !DILocation(line: 27, column: 45, scope: !7)
!22 = !DILocation(line: 27, column: 55, scope: !7)
!23 = !DILocation(line: 27, column: 30, scope: !7)
!24 = !DILocation(line: 27, column: 66, scope: !7)
!25 = !DILocation(line: 29, column: 18, scope: !7)
!26 = !DILocation(line: 30, column: 25, scope: !7)
!27 = !DILocation(line: 30, column: 36, scope: !7)
!28 = !DILocation(line: 30, column: 4, scope: !7)
