; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_20(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %.frozen = freeze i32 %8, !dbg !14
  %9 = sdiv i32 %.frozen, 768, !dbg !14
  %10 = mul i32 %9, 768, !dbg !15
  %.decomposed = sub i32 %.frozen, %10, !dbg !15
  %11 = srem i32 %9, 2, !dbg !16
  %12 = sdiv i32 %8, 1536, !dbg !17
  %13 = mul nsw i32 %11, 3072, !dbg !18
  %14 = mul i32 %12, 24576, !dbg !19
  %15 = add i32 %14, %.decomposed, !dbg !20
  %16 = add i32 %15, %13, !dbg !21
  %17 = sext i32 %16 to i64, !dbg !22
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !22
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !23
  %20 = bitcast i32 %19 to float, !dbg !23
  %21 = add i32 %15, 768, !dbg !24
  %22 = add i32 %21, %13, !dbg !25
  %23 = sext i32 %22 to i64, !dbg !26
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !26
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !27
  %26 = bitcast i32 %25 to float, !dbg !27
  %27 = add i32 %15, 1536, !dbg !28
  %28 = add i32 %27, %13, !dbg !29
  %29 = sext i32 %28 to i64, !dbg !30
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !30
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !31
  %32 = bitcast i32 %31 to float, !dbg !31
  %33 = add i32 %15, 2304, !dbg !32
  %34 = add i32 %33, %13, !dbg !33
  %35 = sext i32 %34 to i64, !dbg !34
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !34
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !35
  %38 = bitcast i32 %37 to float, !dbg !35
  %39 = add i32 %15, 6144, !dbg !36
  %40 = add i32 %39, %13, !dbg !37
  %41 = sext i32 %40 to i64, !dbg !38
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !38
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !39
  %44 = bitcast i32 %43 to float, !dbg !39
  %45 = add i32 %15, 6912, !dbg !40
  %46 = add i32 %45, %13, !dbg !41
  %47 = sext i32 %46 to i64, !dbg !42
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !42
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 true) #1, !dbg !43
  %50 = bitcast i32 %49 to float, !dbg !43
  %51 = add i32 %15, 7680, !dbg !44
  %52 = add i32 %51, %13, !dbg !45
  %53 = sext i32 %52 to i64, !dbg !46
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !46
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !47
  %56 = bitcast i32 %55 to float, !dbg !47
  %57 = add i32 %15, 8448, !dbg !48
  %58 = add i32 %57, %13, !dbg !49
  %59 = sext i32 %58 to i64, !dbg !50
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !50
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 true) #1, !dbg !51
  %62 = bitcast i32 %61 to float, !dbg !51
  %63 = add i32 %15, 12288, !dbg !52
  %64 = add i32 %63, %13, !dbg !53
  %65 = sext i32 %64 to i64, !dbg !54
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !54
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #1, !dbg !55
  %68 = bitcast i32 %67 to float, !dbg !55
  %69 = add i32 %15, 13056, !dbg !56
  %70 = add i32 %69, %13, !dbg !57
  %71 = sext i32 %70 to i64, !dbg !58
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !58
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 true) #1, !dbg !59
  %74 = bitcast i32 %73 to float, !dbg !59
  %75 = add i32 %15, 13824, !dbg !60
  %76 = add i32 %75, %13, !dbg !61
  %77 = sext i32 %76 to i64, !dbg !62
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !62
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 true) #1, !dbg !63
  %80 = bitcast i32 %79 to float, !dbg !63
  %81 = add i32 %15, 14592, !dbg !64
  %82 = add i32 %81, %13, !dbg !65
  %83 = sext i32 %82 to i64, !dbg !66
  %84 = getelementptr float, ptr addrspace(1) %0, i64 %83, !dbg !66
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 true) #1, !dbg !67
  %86 = bitcast i32 %85 to float, !dbg !67
  %87 = add i32 %15, 18432, !dbg !68
  %88 = add i32 %87, %13, !dbg !69
  %89 = sext i32 %88 to i64, !dbg !70
  %90 = getelementptr float, ptr addrspace(1) %0, i64 %89, !dbg !70
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 true) #1, !dbg !71
  %92 = bitcast i32 %91 to float, !dbg !71
  %93 = add i32 %15, 19200, !dbg !72
  %94 = add i32 %93, %13, !dbg !73
  %95 = sext i32 %94 to i64, !dbg !74
  %96 = getelementptr float, ptr addrspace(1) %0, i64 %95, !dbg !74
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %96, i1 true) #1, !dbg !75
  %98 = bitcast i32 %97 to float, !dbg !75
  %99 = add i32 %15, 19968, !dbg !76
  %100 = add i32 %99, %13, !dbg !77
  %101 = sext i32 %100 to i64, !dbg !78
  %102 = getelementptr float, ptr addrspace(1) %0, i64 %101, !dbg !78
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %102, i1 true) #1, !dbg !79
  %104 = bitcast i32 %103 to float, !dbg !79
  %105 = add i32 %15, 20736, !dbg !80
  %106 = add i32 %105, %13, !dbg !81
  %107 = sext i32 %106 to i64, !dbg !82
  %108 = getelementptr float, ptr addrspace(1) %0, i64 %107, !dbg !82
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 true) #1, !dbg !83
  %110 = bitcast i32 %109 to float, !dbg !83
  %111 = fadd float %20, %26, !dbg !84
  %112 = fadd float %111, %32, !dbg !85
  %113 = fadd float %112, %38, !dbg !86
  %114 = fadd float %113, %44, !dbg !87
  %115 = fadd float %114, %50, !dbg !88
  %116 = fadd float %115, %56, !dbg !89
  %117 = fadd float %116, %62, !dbg !90
  %118 = fadd float %117, %68, !dbg !91
  %119 = fadd float %118, %74, !dbg !92
  %120 = fadd float %119, %80, !dbg !93
  %121 = fadd float %120, %86, !dbg !94
  %122 = fadd float %121, %92, !dbg !95
  %123 = fadd float %122, %98, !dbg !96
  %124 = fadd float %123, %104, !dbg !97
  %125 = fadd float %124, %110, !dbg !98
  %126 = fmul float %125, 6.250000e-02, !dbg !99
  %127 = sext i32 %8 to i64, !dbg !100
  %128 = getelementptr float, ptr addrspace(1) %1, i64 %127, !dbg !100
  %129 = bitcast float %126 to i32, !dbg !101
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %129, ptr addrspace(1) %128, i1 true) #1, !dbg !101
  ret void, !dbg !102
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuv72jvqnb3sc7zbrcadganmi46u6rb6yktomwh6uquq6wazl6km.py", directory: "inductor_cache/uv")
!4 = !{ptr @triton_poi_fused_avg_pool2d_20, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_20, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_20", linkageName: "triton_poi_fused_avg_pool2d_20", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 28, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 40, scope: !7)
!19 = !DILocation(line: 28, column: 51, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 45, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 56, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 51, scope: !7)
!26 = !DILocation(line: 29, column: 30, scope: !7)
!27 = !DILocation(line: 29, column: 62, scope: !7)
!28 = !DILocation(line: 30, column: 42, scope: !7)
!29 = !DILocation(line: 30, column: 52, scope: !7)
!30 = !DILocation(line: 30, column: 30, scope: !7)
!31 = !DILocation(line: 30, column: 63, scope: !7)
!32 = !DILocation(line: 31, column: 42, scope: !7)
!33 = !DILocation(line: 31, column: 52, scope: !7)
!34 = !DILocation(line: 31, column: 30, scope: !7)
!35 = !DILocation(line: 31, column: 63, scope: !7)
!36 = !DILocation(line: 32, column: 42, scope: !7)
!37 = !DILocation(line: 32, column: 52, scope: !7)
!38 = !DILocation(line: 32, column: 30, scope: !7)
!39 = !DILocation(line: 32, column: 63, scope: !7)
!40 = !DILocation(line: 33, column: 42, scope: !7)
!41 = !DILocation(line: 33, column: 52, scope: !7)
!42 = !DILocation(line: 33, column: 30, scope: !7)
!43 = !DILocation(line: 33, column: 63, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 34, column: 53, scope: !7)
!46 = !DILocation(line: 34, column: 31, scope: !7)
!47 = !DILocation(line: 34, column: 64, scope: !7)
!48 = !DILocation(line: 35, column: 43, scope: !7)
!49 = !DILocation(line: 35, column: 53, scope: !7)
!50 = !DILocation(line: 35, column: 31, scope: !7)
!51 = !DILocation(line: 35, column: 64, scope: !7)
!52 = !DILocation(line: 36, column: 44, scope: !7)
!53 = !DILocation(line: 36, column: 54, scope: !7)
!54 = !DILocation(line: 36, column: 31, scope: !7)
!55 = !DILocation(line: 36, column: 65, scope: !7)
!56 = !DILocation(line: 37, column: 44, scope: !7)
!57 = !DILocation(line: 37, column: 54, scope: !7)
!58 = !DILocation(line: 37, column: 31, scope: !7)
!59 = !DILocation(line: 37, column: 65, scope: !7)
!60 = !DILocation(line: 38, column: 44, scope: !7)
!61 = !DILocation(line: 38, column: 54, scope: !7)
!62 = !DILocation(line: 38, column: 31, scope: !7)
!63 = !DILocation(line: 38, column: 65, scope: !7)
!64 = !DILocation(line: 39, column: 44, scope: !7)
!65 = !DILocation(line: 39, column: 54, scope: !7)
!66 = !DILocation(line: 39, column: 31, scope: !7)
!67 = !DILocation(line: 39, column: 65, scope: !7)
!68 = !DILocation(line: 40, column: 44, scope: !7)
!69 = !DILocation(line: 40, column: 54, scope: !7)
!70 = !DILocation(line: 40, column: 31, scope: !7)
!71 = !DILocation(line: 40, column: 65, scope: !7)
!72 = !DILocation(line: 41, column: 44, scope: !7)
!73 = !DILocation(line: 41, column: 54, scope: !7)
!74 = !DILocation(line: 41, column: 31, scope: !7)
!75 = !DILocation(line: 41, column: 65, scope: !7)
!76 = !DILocation(line: 42, column: 44, scope: !7)
!77 = !DILocation(line: 42, column: 54, scope: !7)
!78 = !DILocation(line: 42, column: 31, scope: !7)
!79 = !DILocation(line: 42, column: 65, scope: !7)
!80 = !DILocation(line: 43, column: 44, scope: !7)
!81 = !DILocation(line: 43, column: 54, scope: !7)
!82 = !DILocation(line: 43, column: 31, scope: !7)
!83 = !DILocation(line: 43, column: 65, scope: !7)
!84 = !DILocation(line: 44, column: 18, scope: !7)
!85 = !DILocation(line: 45, column: 18, scope: !7)
!86 = !DILocation(line: 46, column: 18, scope: !7)
!87 = !DILocation(line: 47, column: 18, scope: !7)
!88 = !DILocation(line: 48, column: 19, scope: !7)
!89 = !DILocation(line: 49, column: 20, scope: !7)
!90 = !DILocation(line: 50, column: 20, scope: !7)
!91 = !DILocation(line: 51, column: 20, scope: !7)
!92 = !DILocation(line: 52, column: 20, scope: !7)
!93 = !DILocation(line: 53, column: 20, scope: !7)
!94 = !DILocation(line: 54, column: 20, scope: !7)
!95 = !DILocation(line: 55, column: 20, scope: !7)
!96 = !DILocation(line: 56, column: 20, scope: !7)
!97 = !DILocation(line: 57, column: 20, scope: !7)
!98 = !DILocation(line: 58, column: 20, scope: !7)
!99 = !DILocation(line: 60, column: 20, scope: !7)
!100 = !DILocation(line: 61, column: 25, scope: !7)
!101 = !DILocation(line: 61, column: 37, scope: !7)
!102 = !DILocation(line: 61, column: 4, scope: !7)
