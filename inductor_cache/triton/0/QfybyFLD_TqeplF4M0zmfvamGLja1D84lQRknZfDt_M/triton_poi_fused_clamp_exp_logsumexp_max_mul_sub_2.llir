; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 2, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 28, !dbg !12
  %11 = and i32 %9, 3, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 4, !dbg !14
  %14 = shl i32 %12, 2, !dbg !15
  %15 = sext i32 %14 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %13) #1, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !18
  %20 = bitcast i32 %19 to float, !dbg !18
  %21 = or disjoint i32 %14, 1, !dbg !19
  %22 = sext i32 %21 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %13) #1, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = or disjoint i32 %14, 2, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %13) #1, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = or disjoint i32 %14, 3, !dbg !25
  %32 = sext i32 %31 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %13) #1, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = fmul float %20, 0x3FF7154760000000, !dbg !28
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #1, !dbg !28
  %38 = fmul float %37, %18, !dbg !29
  %39 = fmul float %37, %25, !dbg !30
  %40 = fcmp ogt float %38, %39, !dbg !31
  %41 = fcmp uno float %38, 0.000000e+00, !dbg !35
  %42 = or i1 %40, %41, !dbg !36
  %43 = select i1 %42, float %38, float %39, !dbg !37
  %44 = fmul float %37, %30, !dbg !38
  %45 = fcmp ogt float %43, %44, !dbg !39
  %46 = fcmp uno float %43, 0.000000e+00, !dbg !41
  %47 = or i1 %45, %46, !dbg !42
  %48 = select i1 %47, float %43, float %44, !dbg !43
  %49 = fmul float %37, %35, !dbg !44
  %50 = fcmp ogt float %48, %49, !dbg !45
  %51 = fcmp uno float %48, 0.000000e+00, !dbg !47
  %52 = or i1 %50, %51, !dbg !48
  %53 = select i1 %52, float %48, float %49, !dbg !49
  %54 = fsub float %38, %53, !dbg !50
  %55 = fsub float %39, %53, !dbg !51
  %56 = fcmp ogt float %54, %55, !dbg !52
  %57 = fcmp uno float %54, 0.000000e+00, !dbg !54
  %58 = or i1 %56, %57, !dbg !55
  %59 = select i1 %58, float %54, float %55, !dbg !56
  %60 = fsub float %44, %53, !dbg !57
  %61 = fcmp ogt float %59, %60, !dbg !58
  %62 = fcmp uno float %59, 0.000000e+00, !dbg !60
  %63 = or i1 %61, %62, !dbg !61
  %64 = select i1 %63, float %59, float %60, !dbg !62
  %65 = fsub float %49, %53, !dbg !63
  %66 = fcmp ogt float %64, %65, !dbg !64
  %67 = fcmp uno float %64, 0.000000e+00, !dbg !66
  %68 = or i1 %66, %67, !dbg !67
  %69 = select i1 %68, float %64, float %65, !dbg !68
  %70 = tail call float @llvm.fabs.f32(float %69), !dbg !69
  %71 = fcmp oeq float %70, 0x7FF0000000000000, !dbg !70
  %72 = select i1 %71, float 0.000000e+00, float %69, !dbg !71
  %73 = fsub float %54, %72, !dbg !72
  %74 = fmul float %73, 0x3FF7154760000000, !dbg !73
  %75 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %74) #1, !dbg !73
  %76 = fsub float %55, %72, !dbg !74
  %77 = fmul float %76, 0x3FF7154760000000, !dbg !75
  %78 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %77) #1, !dbg !75
  %79 = fadd float %75, %78, !dbg !76
  %80 = fsub float %60, %72, !dbg !77
  %81 = fmul float %80, 0x3FF7154760000000, !dbg !78
  %82 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %81) #1, !dbg !78
  %83 = fadd float %79, %82, !dbg !79
  %84 = fsub float %65, %72, !dbg !80
  %85 = fmul float %84, 0x3FF7154760000000, !dbg !81
  %86 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %85) #1, !dbg !81
  %87 = fadd float %83, %86, !dbg !82
  %88 = sext i32 %12 to i64, !dbg !83
  %89 = getelementptr float, ptr addrspace(1) %2, i64 %88, !dbg !83
  %90 = icmp eq i32 %10, 0, !dbg !84
  %91 = bitcast float %53 to i32, !dbg !84
  %92 = and i1 %90, %13, !dbg !84
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %89, i1 %92) #1, !dbg !84
  %93 = getelementptr float, ptr addrspace(1) %3, i64 %88, !dbg !85
  %94 = bitcast float %69 to i32, !dbg !86
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %94, ptr addrspace(1) %93, i1 %92) #1, !dbg !86
  %95 = getelementptr float, ptr addrspace(1) %4, i64 %88, !dbg !87
  %96 = bitcast float %87 to i32, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %95, i1 %92) #1, !dbg !88
  ret void, !dbg !89
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7vrjz7lkegzcegrsm7r3ewigpgfhii6srn6vy6smvqo6eycqi3x.py", directory: "inductor_cache/7v")
!4 = !{ptr @triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_2", linkageName: "triton_poi_fused_clamp_exp_logsumexp_max_mul_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 42, scope: !7)
!25 = !DILocation(line: 30, column: 35, scope: !7)
!26 = !DILocation(line: 30, column: 31, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 31, column: 23, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 36, column: 40, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 37, column: 20, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !40)
!40 = !DILocation(line: 38, column: 41, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !40)
!44 = !DILocation(line: 39, column: 20, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !46)
!46 = !DILocation(line: 40, column: 42, scope: !7)
!47 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !46)
!48 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !46)
!49 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !46)
!50 = !DILocation(line: 41, column: 19, scope: !7)
!51 = !DILocation(line: 42, column: 19, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !53)
!53 = !DILocation(line: 43, column: 42, scope: !7)
!54 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !53)
!55 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !53)
!56 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !53)
!57 = !DILocation(line: 44, column: 20, scope: !7)
!58 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !59)
!59 = !DILocation(line: 45, column: 42, scope: !7)
!60 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !59)
!61 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !59)
!62 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !59)
!63 = !DILocation(line: 46, column: 20, scope: !7)
!64 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !65)
!65 = !DILocation(line: 47, column: 42, scope: !7)
!66 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !65)
!67 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !65)
!68 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !65)
!69 = !DILocation(line: 48, column: 24, scope: !7)
!70 = !DILocation(line: 49, column: 21, scope: !7)
!71 = !DILocation(line: 51, column: 35, scope: !7)
!72 = !DILocation(line: 52, column: 20, scope: !7)
!73 = !DILocation(line: 53, column: 24, scope: !7)
!74 = !DILocation(line: 54, column: 20, scope: !7)
!75 = !DILocation(line: 55, column: 24, scope: !7)
!76 = !DILocation(line: 56, column: 20, scope: !7)
!77 = !DILocation(line: 57, column: 20, scope: !7)
!78 = !DILocation(line: 58, column: 24, scope: !7)
!79 = !DILocation(line: 59, column: 20, scope: !7)
!80 = !DILocation(line: 60, column: 20, scope: !7)
!81 = !DILocation(line: 61, column: 24, scope: !7)
!82 = !DILocation(line: 62, column: 20, scope: !7)
!83 = !DILocation(line: 63, column: 25, scope: !7)
!84 = !DILocation(line: 63, column: 37, scope: !7)
!85 = !DILocation(line: 64, column: 25, scope: !7)
!86 = !DILocation(line: 64, column: 37, scope: !7)
!87 = !DILocation(line: 65, column: 25, scope: !7)
!88 = !DILocation(line: 65, column: 37, scope: !7)
!89 = !DILocation(line: 65, column: 4, scope: !7)
