#loc = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0)
module {
  tt.func public @triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<32> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<8> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_3 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_2 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_2 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_2 : tensor<128xi32> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc12)
    %13 = tt.load %12, %5 : tensor<128x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc14)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc16)
    %19 = tt.load %18, %5 : tensor<128x!tt.ptr<f32>> loc(#loc17)
    %20 = arith.divsi %10, %cst_1 : tensor<128xi32> loc(#loc18)
    %21 = arith.muli %20, %cst_3 : tensor<128xi32> loc(#loc19)
    %22 = arith.remsi %8, %cst_1 : tensor<128xi32> loc(#loc20)
    %23 = arith.muli %22, %cst_0 : tensor<128xi32> loc(#loc21)
    %24 = arith.addi %21, %23 : tensor<128xi32> loc(#loc22)
    %25 = arith.remsi %10, %cst_1 : tensor<128xi32> loc(#loc23)
    %26 = arith.muli %25, %cst : tensor<128xi32> loc(#loc24)
    %27 = arith.addi %24, %26 : tensor<128xi32> loc(#loc25)
    %28 = arith.muli %6, %cst_4 : tensor<128xi32> loc(#loc26)
    %29 = arith.addi %27, %28 : tensor<128xi32> loc(#loc27)
    %30 = arith.divsi %8, %cst_1 : tensor<128xi32> loc(#loc28)
    %31 = arith.addi %29, %30 : tensor<128xi32> loc(#loc29)
    %32 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc30)
    %33 = tt.addptr %32, %31 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc30)
    %34 = tt.load %33, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc31)
    %35 = arith.muli %25, %cst_1 : tensor<128xi32> loc(#loc32)
    %36 = arith.muli %7, %cst_3 : tensor<128xi32> loc(#loc33)
    %37 = arith.addi %35, %36 : tensor<128xi32> loc(#loc34)
    %38 = arith.addi %37, %22 : tensor<128xi32> loc(#loc35)
    %39 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc36)
    %40 = tt.addptr %39, %38 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc36)
    %41 = tt.load %40, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc37)
    %42 = arith.addf %13, %16 : tensor<128xf32> loc(#loc38)
    %43 = tt.extern_elementwise %42 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc39)
    %44 = arith.mulf %19, %43 : tensor<128xf32> loc(#loc40)
    %45 = arith.addf %34, %41 : tensor<128xf32> loc(#loc41)
    %46 = arith.addf %44, %45 : tensor<128xf32> loc(#loc42)
    tt.store %12, %42, %5 : tensor<128x!tt.ptr<f32>> loc(#loc43)
    %47 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc44)
    %48 = tt.addptr %47, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc44)
    tt.store %48, %46, %5 : tensor<128x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":21:28)
#loc3 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":21:33)
#loc4 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":22:36)
#loc5 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":22:23)
#loc6 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":23:21)
#loc7 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":25:21)
#loc8 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":25:27)
#loc9 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":26:19)
#loc10 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":27:21)
#loc11 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":27:26)
#loc12 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":29:34)
#loc13 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":29:39)
#loc14 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":30:30)
#loc15 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":30:35)
#loc16 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":31:30)
#loc17 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":31:35)
#loc18 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:39)
#loc19 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:33)
#loc20 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:54)
#loc21 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:49)
#loc22 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:44)
#loc23 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:70)
#loc24 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:65)
#loc25 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:60)
#loc26 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:79)
#loc27 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:76)
#loc28 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:91)
#loc29 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:85)
#loc30 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:30)
#loc31 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":32:96)
#loc32 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:34)
#loc33 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:47)
#loc34 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:45)
#loc35 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:54)
#loc36 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:30)
#loc37 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":33:65)
#loc38 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":34:18)
#loc39 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":35:26)
#loc40 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":36:18)
#loc41 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":37:18)
#loc42 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":38:18)
#loc43 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":39:39)
#loc44 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":40:25)
#loc45 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":40:36)
#loc46 = loc("inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py":40:4)
