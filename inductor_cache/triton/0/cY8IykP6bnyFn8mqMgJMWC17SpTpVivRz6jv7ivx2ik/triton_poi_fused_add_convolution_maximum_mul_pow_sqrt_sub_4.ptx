//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4 // -- Begin function triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4
.visible .entry triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_5,
	.param .u32 triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<47>;
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:21:33
	shl.b32 	%r9, %r1, 7;
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_3];
	.loc	1 22 36                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:22:36
	mov.u32 	%r10, %tid.x;
	and.b32  	%r11, %r10, 127;
	ld.param.u64 	%rd12, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_4];
	.loc	1 22 23                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:22:23
	or.b32  	%r12, %r9, %r11;
	ld.param.u64 	%rd13, [triton_poi_fused_add_convolution_maximum_mul_pow_sqrt_sub_4_param_5];
	.loc	1 23 21                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:23:21
	setp.lt.s32 	%p1, %r12, 1024;
	.loc	1 25 21                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:25:21
	bfe.s32 	%r13, %r1, 24, 1;
	shr.u32 	%r14, %r13, 26;
	add.s32 	%r15, %r12, %r14;
	shr.s32 	%r16, %r15, 6;
	.loc	1 25 27                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:25:27
	shr.u32 	%r17, %r16, 30;
	add.s32 	%r18, %r16, %r17;
	and.b32  	%r19, %r18, -4;
	sub.s32 	%r20, %r16, %r19;
	.loc	1 27 21                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:27:21
	shr.s32 	%r22, %r12, 31;
	shr.u32 	%r23, %r22, 29;
	add.s32 	%r24, %r12, %r23;
	shr.s32 	%r25, %r24, 3;
	.loc	1 26 19                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:26:19
	and.b32  	%r26, %r24, 65528;
	sub.s32 	%r27, %r12, %r26;
	.loc	1 27 26                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:27:26
	shr.u32 	%r28, %r25, 29;
	add.s32 	%r29, %r25, %r28;
	and.b32  	%r30, %r29, 65528;
	sub.s32 	%r31, %r25, %r30;
	.loc	1 29 34                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:29:34
	mul.wide.s32 	%rd14, %r12, 4;
	add.s64 	%rd1, %rd8, %rd14;
	.loc	1 29 39                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:29:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 30 30                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:30:30
	mul.wide.s32 	%rd15, %r20, 4;
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 30 35                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:30:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 31 30                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:31:30
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 31 35                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:31:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 39                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:39
	cvt.u16.u32 	%rs1, %r31;
	and.b16  	%rs2, %rs1, 128;
	shr.u16 	%rs3, %rs2, 7;
	add.s16 	%rs4, %rs1, %rs3;
	cvt.s16.s8 	%rs5, %rs4;
	shr.s16 	%rs6, %rs5, 1;
	.loc	1 32 33                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:33
	mul.wide.s16 	%r32, %rs6, 4;
	.loc	1 32 54                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:54
	cvt.u16.u32 	%rs7, %r27;
	and.b16  	%rs8, %rs7, 128;
	.loc	1 32 91                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:91
	shr.u16 	%rs9, %rs8, 7;
	add.s16 	%rs10, %rs7, %rs9;
	cvt.s16.s8 	%rs11, %rs10;
	shr.s16 	%rs12, %rs11, 1;
	.loc	1 32 54                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:54
	and.b16  	%rs13, %rs10, -2;
	sub.s16 	%rs14, %rs7, %rs13;
	cvt.u32.u16 	%r33, %rs14;
	cvt.s32.s8 	%r34, %r33;
	.loc	1 32 49                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:49
	cvt.s16.s8 	%rs15, %rs14;
	mul.wide.s16 	%r35, %rs15, 16;
	.loc	1 32 70                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:70
	and.b16  	%rs16, %rs4, 254;
	sub.s16 	%rs17, %rs1, %rs16;
	.loc	1 32 65                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:65
	cvt.s16.s8 	%rs18, %rs17;
	mul.wide.s16 	%r36, %rs18, 32;
	.loc	1 32 79                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:79
	and.b32  	%r37, %r15, -64;
	.loc	1 32 91                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:91
	cvt.s32.s16 	%r38, %rs12;
	.loc	1 32 44                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:44
	add.s32 	%r39, %r37, %r38;
	.loc	1 32 60                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:60
	add.s32 	%r40, %r39, %r35;
	.loc	1 32 76                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:76
	add.s32 	%r41, %r40, %r32;
	.loc	1 32 85                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:85
	add.s32 	%r42, %r41, %r36;
	.loc	1 32 30                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:30
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 32 96                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:96
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 34                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:34
	mul.wide.s16 	%r43, %rs18, 2;
	.loc	1 33 47                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:47
	shl.b32 	%r44, %r20, 2;
	.loc	1 33 45                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:45
	add.s32 	%r45, %r44, %r34;
	.loc	1 33 54                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:54
	add.s32 	%r46, %r45, %r43;
	.loc	1 33 30                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:30
	mul.wide.s32 	%rd17, %r46, 4;
	add.s64 	%rd5, %rd12, %rd17;
	.loc	1 33 65                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:65
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 35 26                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:35:26
	sqrt.approx.ftz.f32 	%f4, %f3;
	.loc	1 33 65                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:33:65
	mov.b32 	%f5, %r6;
	.loc	1 32 96                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:32:96
	mov.b32 	%f6, %r5;
	.loc	1 31 35                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:31:35
	mov.b32 	%f7, %r4;
	.loc	1 37 18                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:37:18
	add.f32 	%f8, %f6, %f5;
	.loc	1 38 18                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:38:18
	fma.rn.f32 	%f9, %f4, %f7, %f8;
	.loc	1 39 39                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:39:39
	mov.b32 	%r7, %f3;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r7 };
	// end inline asm
	.loc	1 40 25                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:40:25
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 40 36                         // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:40:36
	mov.b32 	%r8, %f9;
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r8 };
	// end inline asm
	.loc	1 40 4                          // cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v5/cv5diiidotpoptegfpbe3agao4qd3sggzqammb65tgrrod5o6xtg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 53
.b8 100
.b8 105
.b8 105
.b8 105
.b8 100
.b8 111
.b8 116
.b8 112
.b8 111
.b8 112
.b8 116
.b8 101
.b8 103
.b8 102
.b8 112
.b8 98
.b8 101
.b8 51
.b8 97
.b8 103
.b8 97
.b8 111
.b8 52
.b8 113
.b8 100
.b8 51
.b8 115
.b8 103
.b8 103
.b8 122
.b8 113
.b8 97
.b8 109
.b8 109
.b8 98
.b8 54
.b8 53
.b8 116
.b8 103
.b8 114
.b8 114
.b8 111
.b8 100
.b8 53
.b8 111
.b8 54
.b8 120
.b8 116
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
