#loc = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0)
#loc1 = loc(unknown)
#loc26 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":42:26)
#loc33 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":50:26)
#loc49 = loc(callsite(#loc1 at #loc26))
#loc52 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<7.812500e-03> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.280000e+02> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<8x128xf32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<8x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<144> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_4 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_3 : tensor<8x1xi32> loc(#loc10)
    %10 = tt.broadcast %8 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<8x128xi32> loc(#loc11)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc12)
    %15 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x128xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_2 : tensor<8x128x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.addptr %17, %12 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc14)
    %19 = tt.load %18, %15, %cst_2 : tensor<8x128x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %20, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc16)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.addptr %23, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc18)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc19)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.addptr %26, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc20)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc21)
    %29 = tt.broadcast %22 : tensor<1x128xf32> -> tensor<8x128xf32> loc(#loc22)
    %30 = arith.addf %19, %29 : tensor<8x128xf32> loc(#loc22)
    %31 = arith.addf %16, %30 : tensor<8x128xf32> loc(#loc23)
    %32 = arith.select %15, %31, %cst_2 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc24)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc26)), %arg10: f32 loc(callsite(#loc1 at #loc26))):
      %56 = arith.addf %arg9, %arg10 : f32 loc(#loc53)
      tt.reduce.return %56 : f32 loc(#loc48)
    }) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc48)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc28)
    %35 = arith.divf %34, %cst_1 : tensor<8x1xf32> loc(#loc29)
    %36 = tt.broadcast %35 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc30)
    %37 = arith.subf %31, %36 : tensor<8x128xf32> loc(#loc30)
    %38 = arith.mulf %37, %37 : tensor<8x128xf32> loc(#loc31)
    %39 = arith.select %15, %38, %cst_2 : tensor<8x128xi1>, tensor<8x128xf32> loc(#loc32)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc33)), %arg10: f32 loc(callsite(#loc1 at #loc33))):
      %56 = arith.addf %arg9, %arg10 : f32 loc(#loc54)
      tt.reduce.return %56 : f32 loc(#loc51)
    }) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc51)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc34)
    %42 = arith.divf %41, %cst_1 : tensor<8x1xf32> loc(#loc35)
    %43 = arith.addf %42, %cst_0 : tensor<8x1xf32> loc(#loc36)
    %44 = tt.extern_elementwise %43 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc37)
    %45 = tt.broadcast %44 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc38)
    %46 = arith.mulf %37, %45 : tensor<8x128xf32> loc(#loc38)
    %47 = tt.broadcast %25 : tensor<1x128xf32> -> tensor<8x128xf32> loc(#loc39)
    %48 = arith.mulf %46, %47 : tensor<8x128xf32> loc(#loc39)
    %49 = tt.broadcast %28 : tensor<1x128xf32> -> tensor<8x128xf32> loc(#loc40)
    %50 = arith.addf %48, %49 : tensor<8x128xf32> loc(#loc40)
    %51 = arith.mulf %44, %cst : tensor<8x1xf32> loc(#loc41)
    tt.store %18, %46, %15 : tensor<8x128x!tt.ptr<f32>> loc(#loc42)
    %52 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc43)
    %53 = tt.addptr %52, %12 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc43)
    tt.store %53, %50, %15 : tensor<8x128x!tt.ptr<f32>> loc(#loc44)
    %54 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc45)
    %55 = tt.addptr %54, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc45)
    tt.store %55, %51, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":23:28)
#loc3 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":23:33)
#loc4 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":24:36)
#loc5 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":24:44)
#loc6 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":24:23)
#loc7 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":25:21)
#loc8 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":26:26)
#loc9 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":26:34)
#loc10 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":31:39)
#loc11 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":31:35)
#loc12 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":31:30)
#loc13 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":31:44)
#loc14 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":32:34)
#loc15 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":32:48)
#loc16 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":33:30)
#loc17 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":33:35)
#loc18 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":34:31)
#loc19 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":34:36)
#loc20 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":35:31)
#loc21 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":35:36)
#loc22 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":36:18)
#loc23 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":37:18)
#loc24 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":41:34)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":42:29)
#loc29 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":45:20)
#loc30 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":46:19)
#loc31 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":47:20)
#loc32 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":49:35)
#loc34 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":50:29)
#loc35 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":53:20)
#loc36 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":55:20)
#loc37 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":56:28)
#loc38 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":57:20)
#loc39 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":58:20)
#loc40 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":59:20)
#loc41 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":61:20)
#loc42 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":62:49)
#loc43 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":63:25)
#loc44 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":63:46)
#loc45 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":64:25)
#loc46 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":64:37)
#loc47 = loc("inductor_cache/ii/ciiccb2fxvswssixbphpjmpxa7k24toswtmiu6drmnguqajjqnoc.py":64:4)
#loc48 = loc(callsite(#loc25 at #loc26))
#loc50 = loc(callsite(#loc27 at #loc25))
#loc51 = loc(callsite(#loc25 at #loc33))
#loc53 = loc(callsite(#loc50 at #loc26))
#loc54 = loc(callsite(#loc50 at #loc33))
