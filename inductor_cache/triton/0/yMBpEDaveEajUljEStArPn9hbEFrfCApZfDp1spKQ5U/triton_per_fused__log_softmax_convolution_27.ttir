#loc = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0)
#loc1 = loc(unknown)
#loc23 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":38:37)
#loc33 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":43:26)
#loc42 = loc(callsite(#loc1 at #loc23))
#loc48 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_per_fused__log_softmax_convolution_27(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0), %arg5: i32 loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<32x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<32x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<49152> : tensor<32x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<12> : tensor<1x16xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc7)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_5 : tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_4 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_4 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.muli %7, %cst_3 : tensor<1x16xi32> loc(#loc12)
    %12 = tt.broadcast %9 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<32x16xi32> loc(#loc13)
    %15 = arith.muli %10, %cst_2 : tensor<32x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<32x16xi32> loc(#loc15)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc16)
    %20 = tt.broadcast %8 : tensor<1x16xi1> -> tensor<32x16xi1> loc(#loc17)
    %21 = tt.load %19, %20, %cst_1 : tensor<32x16x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %22, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc18)
    %24 = tt.load %23, %8, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.broadcast %24 : tensor<1x16xf32> -> tensor<32x16xf32> loc(#loc20)
    %26 = arith.addf %21, %25 : tensor<32x16xf32> loc(#loc20)
    %27 = arith.select %20, %26, %cst : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc21)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc23)), %arg7: f32 loc(callsite(#loc1 at #loc23))):
      %40 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc50)
      %41 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc51)
      %42 = arith.ori %40, %41 : i1 loc(#loc52)
      %43 = arith.select %42, %arg6, %arg7 : f32 loc(#loc53)
      tt.reduce.return %43 : f32 loc(#loc41)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc41)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc28)
    %30 = tt.broadcast %29 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc29)
    %31 = arith.subf %26, %30 : tensor<32x16xf32> loc(#loc29)
    %32 = math.exp %31 : tensor<32x16xf32> loc(#loc30)
    %33 = arith.select %20, %32, %cst_1 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc31)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc33)), %arg7: f32 loc(callsite(#loc1 at #loc33))):
      %40 = arith.addf %arg6, %arg7 : f32 loc(#loc54)
      tt.reduce.return %40 : f32 loc(#loc47)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc47)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc35)
    %36 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc36)
    %37 = tt.addptr %36, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc36)
    tt.store %37, %29 : tensor<32x1x!tt.ptr<f32>> loc(#loc37)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc38)
    %39 = tt.addptr %38, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc38)
    tt.store %39, %35 : tensor<32x1x!tt.ptr<f32>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":23:28)
#loc3 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":23:33)
#loc4 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":24:36)
#loc5 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":24:44)
#loc6 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":24:23)
#loc7 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":26:26)
#loc8 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":26:34)
#loc9 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":28:21)
#loc10 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":30:19)
#loc11 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":31:19)
#loc12 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:40)
#loc13 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:35)
#loc14 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:51)
#loc15 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:45)
#loc16 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:30)
#loc17 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":33:56)
#loc18 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":34:30)
#loc19 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":34:35)
#loc20 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":35:18)
#loc21 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":37:33)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc28 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":38:40)
#loc29 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":39:18)
#loc30 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":40:23)
#loc31 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":42:34)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc35 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":43:29)
#loc36 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":44:25)
#loc37 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":44:36)
#loc38 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":45:25)
#loc39 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":45:37)
#loc40 = loc("inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py":45:4)
#loc41 = loc(callsite(#loc22 at #loc23))
#loc43 = loc(callsite(#loc24 at #loc22))
#loc44 = loc(callsite(#loc25 at #loc22))
#loc45 = loc(callsite(#loc26 at #loc22))
#loc46 = loc(callsite(#loc27 at #loc22))
#loc47 = loc(callsite(#loc32 at #loc33))
#loc49 = loc(callsite(#loc34 at #loc32))
#loc50 = loc(callsite(#loc43 at #loc23))
#loc51 = loc(callsite(#loc44 at #loc23))
#loc52 = loc(callsite(#loc45 at #loc23))
#loc53 = loc(callsite(#loc46 at #loc23))
#loc54 = loc(callsite(#loc49 at #loc33))
