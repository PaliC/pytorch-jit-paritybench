//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_leaky_relu_native_group_norm_1 // -- Begin function triton_per_fused_add_convolution_leaky_relu_native_group_norm_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_convolution_leaky_relu_native_group_norm_1
.visible .entry triton_per_fused_add_convolution_leaky_relu_native_group_norm_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_10,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_11,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_12,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_13,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_14,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_15,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_16,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_17,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_18,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_19,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_20,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_21,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_22,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_23,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_24,
	.param .u32 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_25,
	.param .u32 triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_26
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<206>;
	.reg .f32 	%f<177>;
	.reg .b64 	%rd<58>;
	.loc	1 19 0                          // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd30, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_0];
	ld.param.u64 	%rd31, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd32, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_2];
	ld.param.u64 	%rd33, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_3];
	.loc	1 26 34                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:26:34
	mov.u32 	%r107, %tid.x;
	and.b32  	%r108, %r107, 31;
	ld.param.u64 	%rd34, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_4];
	ld.param.u64 	%rd35, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_5];
	and.b32  	%r109, %r107, 63;
	ld.param.u64 	%rd36, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_6];
	.loc	1 31 19                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:31:19
	bfe.u32 	%r110, %r107, 4, 2;
	ld.param.u64 	%rd37, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_7];
	.loc	1 32 42                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:32:42
	shl.b32 	%r111, %r1, 6;
	ld.param.u64 	%rd38, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_8];
	.loc	1 32 39                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:32:39
	or.b32  	%r112, %r111, %r109;
	ld.param.u64 	%rd39, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_9];
	ld.param.u64 	%rd40, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_10];
	.loc	1 32 34                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:32:34
	mul.wide.s32 	%rd41, %r112, 4;
	add.s64 	%rd1, %rd30, %rd41;
	ld.param.u64 	%rd42, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_11];
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	ld.param.u64 	%rd43, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_12];
	mov.b32 	%f1, %r2;
	ld.param.u64 	%rd44, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_13];
	ld.param.u64 	%rd45, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_14];
	.loc	1 33 30                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:33:30
	mul.wide.u32 	%rd46, %r110, 4;
	add.s64 	%rd2, %rd39, %rd46;
	ld.param.u64 	%rd47, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_15];
	mov.pred 	%p3, -1;
	.loc	1 33 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd48, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_16];
	mov.b32 	%f2, %r4;
	ld.param.u64 	%rd49, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_17];
	.loc	1 34 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:34:35
	add.s64 	%rd3, %rd32, %rd41;
	ld.param.u64 	%rd50, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_18];
	.loc	1 34 48                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:34:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r5, %r3;
	// end inline asm
	ld.param.u64 	%rd51, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_19];
	mov.b32 	%f3, %r5;
	ld.param.u64 	%rd52, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_20];
	.loc	1 35 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:35:31
	add.s64 	%rd4, %rd40, %rd46;
	ld.param.u64 	%rd53, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_21];
	.loc	1 35 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:35:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	ld.param.u64 	%rd54, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_22];
	mov.b32 	%f4, %r7;
	ld.param.u64 	%rd55, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_23];
	.loc	1 36 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:36:35
	add.s64 	%rd5, %rd34, %rd41;
	ld.param.u64 	%rd56, [triton_per_fused_add_convolution_leaky_relu_native_group_norm_1_param_24];
	.loc	1 36 48                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:36:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f5, %r8;
	.loc	1 37 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:37:31
	add.s64 	%rd6, %rd42, %rd46;
	.loc	1 37 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:37:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r10;
	.loc	1 38 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:38:35
	add.s64 	%rd7, %rd36, %rd41;
	.loc	1 38 48                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:38:48
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r11, %r3;
	// end inline asm
	mov.b32 	%f7, %r11;
	.loc	1 39 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:39:31
	add.s64 	%rd8, %rd43, %rd46;
	.loc	1 39 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:39:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r13 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 40 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:40:31
	add.s64 	%rd9, %rd44, %rd46;
	.loc	1 40 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:40:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r14 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 41 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:41:31
	add.s64 	%rd10, %rd45, %rd46;
	.loc	1 41 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:41:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r15 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 42 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:42:31
	add.s64 	%rd11, %rd47, %rd46;
	.loc	1 42 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:42:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r16 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 43 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:43:31
	add.s64 	%rd12, %rd48, %rd46;
	.loc	1 43 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:43:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r17 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 44 31                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:44:31
	add.s64 	%rd13, %rd49, %rd46;
	.loc	1 44 36                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:44:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r18 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 45 32                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:45:32
	add.s64 	%rd14, %rd50, %rd46;
	.loc	1 45 37                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:45:37
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r19 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 46 33                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:46:33
	add.s64 	%rd15, %rd51, %rd46;
	.loc	1 46 38                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:46:38
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r20 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 47 33                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:47:33
	add.s64 	%rd16, %rd52, %rd46;
	.loc	1 47 38                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:47:38
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r21 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 48 18                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:48:18
	add.f32 	%f9, %f1, %f2;
	.loc	1 52 33                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:52:33
	selp.f32 	%f10, %f9, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f10;
	shfl.sync.bfly.b32	%r114, %r113, 16, 31, -1;
	mov.b32 	%f11, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f12;
	shfl.sync.bfly.b32	%r116, %r115, 8, 31, -1;
	mov.b32 	%f13, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f14;
	shfl.sync.bfly.b32	%r118, %r117, 4, 31, -1;
	mov.b32 	%f15, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f16;
	shfl.sync.bfly.b32	%r120, %r119, 2, 31, -1;
	mov.b32 	%f17, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f18;
	shfl.sync.bfly.b32	%r122, %r121, 1, 31, -1;
	mov.b32 	%f19, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r108, 0;
	shr.u32 	%r123, %r107, 3;
	and.b32  	%r124, %r123, 4;
	mov.u32 	%r125, global_smem;
	add.s32 	%r22, %r125, %r124;
	mov.b32 	%r23, %f20;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r107, 2;
	shl.b32 	%r126, %r107, 2;
	add.s32 	%r25, %r125, %r126;
	// begin inline asm
	@%p22 ld.shared.b32 %r24, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r24;
	shfl.sync.bfly.b32	%r127, %r24, 1, 31, -1;
	mov.b32 	%f22, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r128, %r107, 1;
	setp.eq.b32 	%p58, %r128, 1;
	not.pred 	%p59, %p58;
	and.pred  	%p23, %p22, %p59;
	mov.b32 	%r27, %f23;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 56 19                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:56:19
	ld.shared.u32 	%r29, [global_smem];
	mov.b32 	%r30, 1115684864;
	// begin inline asm
	div.full.f32 %r103, %r29, %r30;
	// end inline asm
	mov.b32 	%f24, %r103;
	.loc	1 57 19                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:57:19
	sub.f32 	%f25, %f9, %f24;
	.loc	1 58 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:58:20
	mul.f32 	%f26, %f25, %f25;
	.loc	1 60 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:60:35
	selp.f32 	%f27, %f26, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r129, %f27;
	shfl.sync.bfly.b32	%r130, %r129, 16, 31, -1;
	mov.b32 	%f28, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f29;
	shfl.sync.bfly.b32	%r132, %r131, 8, 31, -1;
	mov.b32 	%f30, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f31;
	shfl.sync.bfly.b32	%r134, %r133, 4, 31, -1;
	mov.b32 	%f32, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f33;
	shfl.sync.bfly.b32	%r136, %r135, 2, 31, -1;
	mov.b32 	%f34, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f35;
	shfl.sync.bfly.b32	%r138, %r137, 1, 31, -1;
	mov.b32 	%f36, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f37;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r33, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f38, %r33;
	shfl.sync.bfly.b32	%r139, %r33, 1, 31, -1;
	mov.b32 	%f39, %r139;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f40;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 63 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:63:20
	ld.shared.u32 	%r38, [global_smem];
	// begin inline asm
	div.full.f32 %r37, %r38, %r30;
	// end inline asm
	mov.b32 	%f41, %r37;
	.loc	1 65 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:65:20
	add.f32 	%f42, %f41, 0f3727C5AC;
	.loc	1 66 28                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:66:28
	rsqrt.approx.ftz.f32 	%f43, %f42;
	.loc	1 67 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:67:20
	add.f32 	%f44, %f3, %f4;
	.loc	1 71 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:71:35
	selp.f32 	%f45, %f44, 0f00000000, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r140, %f45;
	shfl.sync.bfly.b32	%r141, %r140, 16, 31, -1;
	mov.b32 	%f46, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r142, %f47;
	shfl.sync.bfly.b32	%r143, %r142, 8, 31, -1;
	mov.b32 	%f48, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f49;
	shfl.sync.bfly.b32	%r145, %r144, 4, 31, -1;
	mov.b32 	%f50, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f51;
	shfl.sync.bfly.b32	%r147, %r146, 2, 31, -1;
	mov.b32 	%f52, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f53;
	shfl.sync.bfly.b32	%r149, %r148, 1, 31, -1;
	mov.b32 	%f54, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f55;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r42, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f56, %r42;
	shfl.sync.bfly.b32	%r150, %r42, 1, 31, -1;
	mov.b32 	%f57, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f58;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 73 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:73:20
	ld.shared.u32 	%r47, [global_smem];
	// begin inline asm
	div.full.f32 %r104, %r47, %r30;
	// end inline asm
	mov.b32 	%f59, %r104;
	.loc	1 74 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:74:20
	sub.f32 	%f60, %f44, %f59;
	.loc	1 75 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:75:20
	mul.f32 	%f61, %f60, %f60;
	.loc	1 77 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:77:35
	selp.f32 	%f62, %f61, 0f00000000, %p1;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r151, %f62;
	shfl.sync.bfly.b32	%r152, %r151, 16, 31, -1;
	mov.b32 	%f63, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f64;
	shfl.sync.bfly.b32	%r154, %r153, 8, 31, -1;
	mov.b32 	%f65, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f66;
	shfl.sync.bfly.b32	%r156, %r155, 4, 31, -1;
	mov.b32 	%f67, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f68;
	shfl.sync.bfly.b32	%r158, %r157, 2, 31, -1;
	mov.b32 	%f69, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f70;
	shfl.sync.bfly.b32	%r160, %r159, 1, 31, -1;
	mov.b32 	%f71, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f72;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r51, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r51;
	shfl.sync.bfly.b32	%r161, %r51, 1, 31, -1;
	mov.b32 	%f74, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f75;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
$L__tmp8:
	.loc	1 79 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:79:20
	ld.shared.u32 	%r56, [global_smem];
	// begin inline asm
	div.full.f32 %r55, %r56, %r30;
	// end inline asm
	mov.b32 	%f76, %r55;
	.loc	1 80 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:80:20
	add.f32 	%f77, %f76, 0f3727C5AC;
	.loc	1 81 28                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:81:28
	rsqrt.approx.ftz.f32 	%f78, %f77;
	.loc	1 82 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:82:20
	add.f32 	%f79, %f5, %f6;
	.loc	1 86 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:86:35
	selp.f32 	%f80, %f79, 0f00000000, %p1;
$L__tmp9:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r162, %f80;
	shfl.sync.bfly.b32	%r163, %r162, 16, 31, -1;
	mov.b32 	%f81, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r164, %f82;
	shfl.sync.bfly.b32	%r165, %r164, 8, 31, -1;
	mov.b32 	%f83, %r165;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r166, %f84;
	shfl.sync.bfly.b32	%r167, %r166, 4, 31, -1;
	mov.b32 	%f85, %r167;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r168, %f86;
	shfl.sync.bfly.b32	%r169, %r168, 2, 31, -1;
	mov.b32 	%f87, %r169;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f88;
	shfl.sync.bfly.b32	%r171, %r170, 1, 31, -1;
	mov.b32 	%f89, %r171;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f90;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r60, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f91, %r60;
	shfl.sync.bfly.b32	%r172, %r60, 1, 31, -1;
	mov.b32 	%f92, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f93;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r63;
	// end inline asm
	bar.sync 	0;
$L__tmp10:
	.loc	1 88 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:88:20
	ld.shared.u32 	%r65, [global_smem];
	// begin inline asm
	div.full.f32 %r105, %r65, %r30;
	// end inline asm
	mov.b32 	%f94, %r105;
	.loc	1 89 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:89:20
	sub.f32 	%f95, %f79, %f94;
	.loc	1 90 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:90:20
	mul.f32 	%f96, %f95, %f95;
	.loc	1 92 35                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:92:35
	selp.f32 	%f97, %f96, 0f00000000, %p1;
$L__tmp11:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r173, %f97;
	shfl.sync.bfly.b32	%r174, %r173, 16, 31, -1;
	mov.b32 	%f98, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r175, %f99;
	shfl.sync.bfly.b32	%r176, %r175, 8, 31, -1;
	mov.b32 	%f100, %r176;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r177, %f101;
	shfl.sync.bfly.b32	%r178, %r177, 4, 31, -1;
	mov.b32 	%f102, %r178;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f103;
	shfl.sync.bfly.b32	%r180, %r179, 2, 31, -1;
	mov.b32 	%f104, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f103, %f104;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r181, %f105;
	shfl.sync.bfly.b32	%r182, %r181, 1, 31, -1;
	mov.b32 	%f106, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f105, %f106;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f107;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r69, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f108, %r69;
	shfl.sync.bfly.b32	%r183, %r69, 1, 31, -1;
	mov.b32 	%f109, %r183;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f110;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
$L__tmp12:
	.loc	1 94 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:94:20
	ld.shared.u32 	%r74, [global_smem];
	// begin inline asm
	div.full.f32 %r73, %r74, %r30;
	// end inline asm
	mov.b32 	%f111, %r73;
	.loc	1 95 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:95:20
	add.f32 	%f112, %f111, 0f3727C5AC;
	.loc	1 96 28                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:96:28
	rsqrt.approx.ftz.f32 	%f113, %f112;
	.loc	1 97 20                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:97:20
	add.f32 	%f114, %f7, %f8;
	.loc	1 101 35                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:101:35
	selp.f32 	%f115, %f114, 0f00000000, %p1;
$L__tmp13:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r184, %f115;
	shfl.sync.bfly.b32	%r185, %r184, 16, 31, -1;
	mov.b32 	%f116, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r186, %f117;
	shfl.sync.bfly.b32	%r187, %r186, 8, 31, -1;
	mov.b32 	%f118, %r187;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f119, %f117, %f118;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f119;
	shfl.sync.bfly.b32	%r189, %r188, 4, 31, -1;
	mov.b32 	%f120, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f121, %f119, %f120;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r190, %f121;
	shfl.sync.bfly.b32	%r191, %r190, 2, 31, -1;
	mov.b32 	%f122, %r191;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f123, %f121, %f122;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r192, %f123;
	shfl.sync.bfly.b32	%r193, %r192, 1, 31, -1;
	mov.b32 	%f124, %r193;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f125, %f123, %f124;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f125;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r78, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f126, %r78;
	shfl.sync.bfly.b32	%r194, %r78, 1, 31, -1;
	mov.b32 	%f127, %r194;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f128;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
$L__tmp14:
	.loc	1 103 20                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:103:20
	ld.shared.u32 	%r83, [global_smem];
	// begin inline asm
	div.full.f32 %r106, %r83, %r30;
	// end inline asm
	mov.b32 	%f129, %r106;
	.loc	1 104 20                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:104:20
	sub.f32 	%f130, %f114, %f129;
	.loc	1 105 20                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:105:20
	mul.f32 	%f131, %f130, %f130;
	.loc	1 107 35                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:107:35
	selp.f32 	%f132, %f131, 0f00000000, %p1;
$L__tmp15:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r195, %f132;
	shfl.sync.bfly.b32	%r196, %r195, 16, 31, -1;
	mov.b32 	%f133, %r196;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r197, %f134;
	shfl.sync.bfly.b32	%r198, %r197, 8, 31, -1;
	mov.b32 	%f135, %r198;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r199, %f136;
	shfl.sync.bfly.b32	%r200, %r199, 4, 31, -1;
	mov.b32 	%f137, %r200;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r201, %f138;
	shfl.sync.bfly.b32	%r202, %r201, 2, 31, -1;
	mov.b32 	%f139, %r202;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r203, %f140;
	shfl.sync.bfly.b32	%r204, %r203, 1, 31, -1;
	mov.b32 	%f141, %r204;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f142;
	// begin inline asm
	@%p21 st.shared.b32 [ %r22 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r87, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f143, %r87;
	shfl.sync.bfly.b32	%r205, %r87, 1, 31, -1;
	mov.b32 	%f144, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f145, %f143, %f144;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f145;
	// begin inline asm
	@%p23 st.shared.b32 [ %r25 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
$L__tmp16:
	.loc	1 109 20                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:109:20
	ld.shared.u32 	%r92, [global_smem];
	// begin inline asm
	div.full.f32 %r91, %r92, %r30;
	// end inline asm
	mov.b32 	%f146, %r91;
	.loc	1 110 20                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:110:20
	add.f32 	%f147, %f146, 0f3727C5AC;
	.loc	1 111 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:111:28
	rsqrt.approx.ftz.f32 	%f148, %f147;
	.loc	1 47 38                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:47:38
	mov.b32 	%f149, %r15;
	mov.b32 	%f150, %r21;
	mov.b32 	%f151, %r19;
	mov.b32 	%f152, %r17;
	.loc	1 46 38                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:46:38
	mov.b32 	%f153, %r14;
	mov.b32 	%f154, %r20;
	mov.b32 	%f155, %r18;
	mov.b32 	%f156, %r16;
	.loc	1 125 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:125:22
	mul.f32 	%f157, %f25, %f43;
	mul.f32 	%f158, %f60, %f78;
	mul.f32 	%f159, %f130, %f148;
	mul.f32 	%f160, %f95, %f113;
	.loc	1 127 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:127:22
	fma.rn.f32 	%f161, %f160, %f156, %f152;
	fma.rn.f32 	%f162, %f159, %f155, %f151;
	fma.rn.f32 	%f163, %f158, %f154, %f150;
	fma.rn.f32 	%f164, %f157, %f153, %f149;
	.loc	1 131 21                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:131:21
	mul.f32 	%f165, %f164, 0f3E4CCCCD;
	.loc	1 142 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:142:22
	setp.gt.f32 	%p60, %f163, 0f00000000;
	setp.gt.f32 	%p61, %f162, 0f00000000;
	setp.gt.f32 	%p62, %f161, 0f00000000;
	setp.gt.f32 	%p63, %f164, 0f00000000;
	.loc	1 132 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:132:37
	selp.f32 	%f166, %f164, %f165, %p63;
	.loc	1 133 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:133:22
	add.f32 	%f167, %f166, 0f00000000;
	.loc	1 135 21                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:135:21
	mul.f32 	%f168, %f161, 0f3E4CCCCD;
	.loc	1 136 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:136:37
	selp.f32 	%f169, %f161, %f168, %p62;
	.loc	1 137 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:137:22
	add.f32 	%f170, %f167, %f169;
	.loc	1 139 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:139:22
	mul.f32 	%f171, %f162, 0f3E4CCCCD;
	.loc	1 140 38                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:140:38
	selp.f32 	%f172, %f162, %f171, %p61;
	.loc	1 141 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:141:22
	add.f32 	%f173, %f170, %f172;
	.loc	1 143 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:143:22
	mul.f32 	%f174, %f163, 0f3E4CCCCD;
	.loc	1 144 38                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:144:38
	selp.f32 	%f175, %f163, %f174, %p60;
	.loc	1 145 22                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:145:22
	add.f32 	%f176, %f175, %f173;
	.loc	1 146 47                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:146:47
	mov.b32 	%r94, %f9;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r94 };
	// end inline asm
	.loc	1 147 4                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:147:4
	bar.sync 	0;
	.loc	1 148 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:148:28
	mul.wide.s32 	%rd57, %r1, 4;
	add.s64 	%rd18, %rd31, %rd57;
	.loc	1 148 40                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:148:40
	setp.eq.s32 	%p64, %r109, 0;
	mov.b32 	%r95, %f43;
	and.pred  	%p46, %p64, %p1;
	// begin inline asm
	@%p46 st.global.b32 [ %rd18 + 0 ], { %r95 };
	// end inline asm
	.loc	1 149 48                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:149:48
	mov.b32 	%r96, %f44;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r96 };
	// end inline asm
	.loc	1 150 4                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:150:4
	bar.sync 	0;
	.loc	1 151 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:151:28
	add.s64 	%rd20, %rd33, %rd57;
	.loc	1 151 40                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:151:40
	mov.b32 	%r97, %f78;
	// begin inline asm
	@%p46 st.global.b32 [ %rd20 + 0 ], { %r97 };
	// end inline asm
	.loc	1 152 48                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:152:48
	mov.b32 	%r98, %f79;
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r98 };
	// end inline asm
	.loc	1 153 4                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:153:4
	bar.sync 	0;
	.loc	1 154 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:154:28
	add.s64 	%rd22, %rd35, %rd57;
	.loc	1 154 40                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:154:40
	mov.b32 	%r99, %f113;
	// begin inline asm
	@%p46 st.global.b32 [ %rd22 + 0 ], { %r99 };
	// end inline asm
	.loc	1 155 48                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:155:48
	mov.b32 	%r100, %f114;
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r100 };
	// end inline asm
	.loc	1 156 4                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:156:4
	bar.sync 	0;
	.loc	1 157 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:157:28
	add.s64 	%rd24, %rd37, %rd57;
	.loc	1 157 40                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:157:40
	mov.b32 	%r101, %f148;
	// begin inline asm
	@%p46 st.global.b32 [ %rd24 + 0 ], { %r101 };
	// end inline asm
	.loc	1 158 28                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:158:28
	add.s64 	%rd25, %rd38, %rd41;
	.loc	1 158 49                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:158:49
	mov.b32 	%r102, %f176;
	// begin inline asm
	@%p1 st.global.b32 [ %rd25 + 0 ], { %r102 };
	// end inline asm
	.loc	1 159 25                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:159:25
	add.s64 	%rd26, %rd53, %rd57;
	.loc	1 159 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:159:37
	// begin inline asm
	@%p46 st.global.b32 [ %rd26 + 0 ], { %r103 };
	// end inline asm
	.loc	1 160 25                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:160:25
	add.s64 	%rd27, %rd54, %rd57;
	.loc	1 160 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:160:37
	// begin inline asm
	@%p46 st.global.b32 [ %rd27 + 0 ], { %r104 };
	// end inline asm
	.loc	1 161 25                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:161:25
	add.s64 	%rd28, %rd55, %rd57;
	.loc	1 161 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:161:37
	// begin inline asm
	@%p46 st.global.b32 [ %rd28 + 0 ], { %r105 };
	// end inline asm
	.loc	1 162 25                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:162:25
	add.s64 	%rd29, %rd56, %rd57;
	.loc	1 162 37                        // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:162:37
	// begin inline asm
	@%p46 st.global.b32 [ %rd29 + 0 ], { %r106 };
	// end inline asm
	.loc	1 162 4                         // ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py:162:4
	ret;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tx/ctx2t37l5irgr3xfsxi2rnba62ipmddtjmrwhec3yhfv7nhdws2a.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 376                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x171 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 120
.b8 50
.b8 116
.b8 51
.b8 55
.b8 108
.b8 53
.b8 105
.b8 114
.b8 103
.b8 114
.b8 51
.b8 120
.b8 102
.b8 115
.b8 120
.b8 105
.b8 50
.b8 114
.b8 110
.b8 98
.b8 97
.b8 54
.b8 50
.b8 105
.b8 112
.b8 109
.b8 100
.b8 100
.b8 116
.b8 106
.b8 109
.b8 114
.b8 119
.b8 104
.b8 101
.b8 99
.b8 51
.b8 121
.b8 104
.b8 102
.b8 118
.b8 55
.b8 110
.b8 104
.b8 100
.b8 119
.b8 115
.b8 50
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0xd6 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xea:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 72                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x102:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 78                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x11a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 87                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x132:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 93                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x14a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 102                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x162:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp15                          // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 108                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
