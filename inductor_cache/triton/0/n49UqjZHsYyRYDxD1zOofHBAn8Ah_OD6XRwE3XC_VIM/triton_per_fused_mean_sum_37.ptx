//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_sum_37 // -- Begin function triton_per_fused_mean_sum_37
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_sum_37
.visible .entry triton_per_fused_mean_sum_37(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_sum_37_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_sum_37_param_1,
	.param .u32 triton_per_fused_mean_sum_37_param_2,
	.param .u32 triton_per_fused_mean_sum_37_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_mean_sum_37_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_mean_sum_37_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:23:33
	shl.b32 	%r31, %r1, 5;
	.loc	1 24 44                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:24:44
	mov.u32 	%r32, %tid.x;
	and.b32  	%r34, %r32, 24;
	shl.b32 	%r35, %r32, 2;
	and.b32  	%r36, %r35, 28;
	and.b32  	%r37, %r32, 31;
	.loc	1 24 23                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:24:23
	or.b32  	%r38, %r31, %r36;
	or.b32  	%r39, %r31, %r37;
	.loc	1 31 19                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:31:19
	bfe.s32 	%r40, %r1, 26, 1;
	shr.u32 	%r41, %r40, 22;
	add.s32 	%r42, %r38, %r41;
	.loc	1 30 19                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:30:19
	and.b32  	%r43, %r42, -1024;
	sub.s32 	%r44, %r38, %r43;
	.loc	1 33 40                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:40
	shl.b32 	%r45, %r32, 7;
	and.b32  	%r46, %r45, 15360;
	.loc	1 33 35                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:35
	add.s32 	%r47, %r44, %r46;
	.loc	1 33 51                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:51
	shl.b32 	%r48, %r42, 4;
	and.b32  	%r49, %r48, -16384;
	.loc	1 33 45                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:45
	add.s32 	%r50, %r47, %r49;
	.loc	1 33 30                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:30
	mul.wide.s32 	%rd6, %r50, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mov.pred 	%p1, -1;
	.loc	1 33 56                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 53                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:34:53
	add.s32 	%r51, %r50, 65536;
	.loc	1 34 30                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:34:30
	mul.wide.s32 	%rd7, %r51, 4;
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 34 64                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:34:64
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 35 18                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:35:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f9;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f13, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f9, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f14;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f15, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f10;
	shfl.sync.bfly.b32	%r57, %r56, 16, 31, -1;
	mov.b32 	%f17, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f10, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f18;
	shfl.sync.bfly.b32	%r59, %r58, 8, 31, -1;
	mov.b32 	%f19, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f11;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f21, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f11, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f22;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f23, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f12;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f25, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f12, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f26;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f27, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r34, 0;
	bfe.u32 	%r68, %r32, 5, 2;
	shl.b32 	%r69, %r68, 2;
	shl.b32 	%r70, %r36, 4;
	or.b32  	%r71, %r70, %r69;
	mov.u32 	%r72, global_smem;
	add.s32 	%r10, %r72, %r71;
	mov.b32 	%r11, %f16;
	// begin inline asm
	@%p3 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 16;
	mov.b32 	%r13, %f20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 32;
	mov.b32 	%r15, %f24;
	// begin inline asm
	@%p3 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 48;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r32, 128;
	add.s32 	%r19, %r72, %r35;
	// begin inline asm
	@%p7 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r18;
	shfl.sync.bfly.b32	%r73, %r18, 2, 31, -1;
	mov.b32 	%f30, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f31;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f32, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r76, %r32, 3;
	setp.eq.s32 	%p11, %r76, 0;
	and.pred  	%p8, %p7, %p11;
	mov.b32 	%r21, %f33;
	// begin inline asm
	@%p8 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r77, %r72, %r70;
	ld.shared.u32 	%r23, [%r77];
	ld.shared.u32 	%r24, [%r77+16];
	ld.shared.u32 	%r25, [%r77+32];
	ld.shared.u32 	%r26, [%r77+48];
$L__tmp2:
	.loc	1 39 18                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:39:18
	bar.sync 	0;
	mad.lo.s32 	%r22, %r36, -12, %r77;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r22 + 0 ], { %r23, %r24, %r25, %r26 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r37, 2;
	add.s32 	%r79, %r72, %r78;
	ld.shared.u32 	%r28, [%r79];
	mov.b32 	%r29, 1098907648;
	// begin inline asm
	div.full.f32 %r30, %r28, %r29;
	// end inline asm
	.loc	1 40 4                          // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:40:4
	bar.sync 	0;
	.loc	1 41 28                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:41:28
	mul.wide.s32 	%rd8, %r39, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 41 39                         // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:41:39
	setp.eq.s32 	%p10, %r68, 0;
	// begin inline asm
	@%p10 st.global.b32 [ %rd3 + 0 ], { %r30 };
	// end inline asm
	.loc	1 41 4                          // cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 173                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 121
.b8 102
.b8 108
.b8 105
.b8 54
.b8 101
.b8 52
.b8 108
.b8 103
.b8 107
.b8 106
.b8 104
.b8 116
.b8 119
.b8 120
.b8 122
.b8 122
.b8 103
.b8 99
.b8 112
.b8 113
.b8 103
.b8 97
.b8 114
.b8 53
.b8 109
.b8 119
.b8 55
.b8 121
.b8 115
.b8 110
.b8 50
.b8 102
.b8 117
.b8 114
.b8 105
.b8 119
.b8 120
.b8 102
.b8 54
.b8 101
.b8 110
.b8 99
.b8 118
.b8 53
.b8 53
.b8 105
.b8 97
.b8 53
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 51
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x82:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x97:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
