//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_cumsum_0 // -- Begin function triton_per_fused_cumsum_0
                                        // @triton_per_fused_cumsum_0
.visible .entry triton_per_fused_cumsum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_cumsum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_cumsum_0_param_1,
	.param .u32 triton_per_fused_cumsum_0_param_2,
	.param .u32 triton_per_fused_cumsum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<6>;
	.loc	1 24 0                          // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:24:0
$L__func_begin0:
	.loc	1 24 0                          // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:24:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_cumsum_0_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_cumsum_0_param_1];
$L__tmp0:
	.loc	1 28 28                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:28:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 28 33                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:28:33
	shl.b32 	%r5, %r1, 3;
	.loc	1 29 44                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:29:44
	mov.u32 	%r6, %tid.x;
	and.b32  	%r7, %r6, 7;
	.loc	1 29 23                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:29:23
	or.b32  	%r8, %r5, %r7;
	.loc	1 30 21                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:30:21
	setp.lt.s32 	%p1, %r8, 16;
	.loc	1 36 19                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:36:19
	shr.s32 	%r10, %r8, 31;
	shr.u32 	%r11, %r10, 30;
	add.s32 	%r12, %r8, %r11;
	.loc	1 35 19                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:35:19
	and.b32  	%r13, %r12, -4;
	sub.s32 	%r14, %r8, %r13;
	.loc	1 37 37                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:37
	shr.u32 	%r15, %r6, 1;
	and.b32  	%r16, %r15, 12;
	.loc	1 37 35                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:35
	add.s32 	%r17, %r14, %r16;
	.loc	1 37 45                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:45
	shl.b32 	%r18, %r12, 2;
	and.b32  	%r19, %r18, -16;
	.loc	1 37 42                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:42
	add.s32 	%r20, %r17, %r19;
	.loc	1 37 30                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:30
	mul.wide.s32 	%rd5, %r20, 4;
	add.s64 	%rd1, %rd3, %rd5;
	mov.b32 	%r3, 0;
	.loc	1 37 50                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:37:50
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 40 44                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:40:44
	bfe.u32 	%r21, %r6, 3, 2;
	shfl.sync.up.b32	%r22, %r2, 8, 0, -1;
	mov.b32 	%f2, %r22;
	setp.eq.s32 	%p4, %r21, 0;
$L__tmp1:
	.loc	1 13 20                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:13:20
	add.f32 	%f3, %f1, %f2;
$L__tmp2:
	.loc	1 40 44                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:40:44
	selp.f32 	%f4, %f1, %f3, %p4;
	mov.b32 	%r23, %f4;
	shfl.sync.up.b32	%r24, %r23, 16, 0, -1;
	mov.b32 	%f5, %r24;
	setp.gt.u32 	%p5, %r21, 1;
$L__tmp3:
	.loc	1 13 20                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:13:20
	add.f32 	%f6, %f4, %f5;
$L__tmp4:
	.loc	1 40 44                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:40:44
	selp.f32 	%f7, %f6, %f4, %p5;
	.loc	1 41 25                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:41:25
	add.s64 	%rd2, %rd4, %rd5;
	.loc	1 41 51                         // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:41:51
	and.b32  	%r25, %r6, 32;
	setp.eq.s32 	%p6, %r25, 0;
	mov.b32 	%r4, %f7;
	and.pred  	%p3, %p6, %p1;
	// begin inline asm
	@%p3 st.global.b32 [ %rd2 + 0 ], { %r4 };
	// end inline asm
	.loc	1 41 4                          // cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py:41:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wg/cwgn4d7iayzsmxegmyjmhp5j2xhe4du7jxju6pnvgbt3teswcxwf.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 170                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 103
.b8 110
.b8 52
.b8 100
.b8 55
.b8 105
.b8 97
.b8 121
.b8 122
.b8 115
.b8 109
.b8 120
.b8 101
.b8 103
.b8 109
.b8 121
.b8 106
.b8 109
.b8 104
.b8 112
.b8 53
.b8 106
.b8 50
.b8 120
.b8 104
.b8 101
.b8 52
.b8 100
.b8 117
.b8 55
.b8 106
.b8 120
.b8 106
.b8 117
.b8 54
.b8 112
.b8 110
.b8 118
.b8 103
.b8 98
.b8 116
.b8 51
.b8 116
.b8 101
.b8 115
.b8 119
.b8 99
.b8 120
.b8 119
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 117
.b8 109
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7f:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x94:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
