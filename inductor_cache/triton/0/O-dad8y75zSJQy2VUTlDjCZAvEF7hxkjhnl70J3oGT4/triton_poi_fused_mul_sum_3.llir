; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_sum_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 16, !dbg !12
  %9 = and i32 %7, 15, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl i32 %12, 3, !dbg !17
  %15 = add i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #1, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !22
  %21 = bitcast i32 %20 to float, !dbg !22
  %22 = add i32 %15, 4, !dbg !23
  %23 = sext i32 %22 to i64, !dbg !24
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !25
  %26 = bitcast i32 %25 to float, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !26
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #1, !dbg !27
  %29 = fcmp ogt float %21, %26, !dbg !28
  %30 = fcmp uno float %21, 0.000000e+00, !dbg !32
  %31 = or i1 %30, %29, !dbg !33
  %32 = select i1 %31, float %21, float %26, !dbg !34
  %33 = fsub float %21, %32, !dbg !35
  %34 = fmul float %33, 0x3FF7154760000000, !dbg !36
  %35 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %34) #1, !dbg !36
  %36 = fsub float %26, %32, !dbg !37
  %37 = fmul float %36, 0x3FF7154760000000, !dbg !38
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #1, !dbg !38
  %39 = fadd float %35, %38, !dbg !39
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float %39) #1, !dbg !40
  %41 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %38, float %39) #1, !dbg !41
  %42 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !20
  %43 = insertelement <2 x i32> %42, i32 %28, i64 1, !dbg !20
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !20
  %45 = fcmp olt <2 x float> %44, zeroinitializer, !dbg !42
  %46 = select <2 x i1> %45, <2 x float> zeroinitializer, <2 x float> %44, !dbg !44
  %47 = insertelement <2 x float> poison, float %40, i64 0, !dbg !45
  %48 = insertelement <2 x float> %47, float %41, i64 1, !dbg !45
  %49 = fmul <2 x float> %46, %48, !dbg !45
  %shift = shufflevector <2 x float> %49, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !46
  %50 = fadd <2 x float> %49, %shift, !dbg !46
  %51 = sext i32 %10 to i64, !dbg !47
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !47
  %53 = icmp eq i32 %8, 0, !dbg !48
  %bc = bitcast <2 x float> %50 to <2 x i32>, !dbg !48
  %54 = extractelement <2 x i32> %bc, i64 0, !dbg !48
  %55 = and i1 %53, %11, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %52, i1 %55) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz2tsq3jredaxdzrulpmo36mbfnqnqlfyuse2iyolwzbcu5itinm.py", directory: "inductor_cache/z2")
!4 = !{ptr @triton_poi_fused_mul_sum_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sum_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sum_3", linkageName: "triton_poi_fused_mul_sum_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 37, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 42, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 39, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 46, scope: !7)
!26 = !DILocation(line: 30, column: 31, scope: !7)
!27 = !DILocation(line: 30, column: 47, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 33, column: 40, scope: !7)
!32 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !31)
!34 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!35 = !DILocation(line: 34, column: 18, scope: !7)
!36 = !DILocation(line: 35, column: 23, scope: !7)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 37, column: 23, scope: !7)
!39 = !DILocation(line: 38, column: 19, scope: !7)
!40 = !DILocation(line: 39, column: 19, scope: !7)
!41 = !DILocation(line: 42, column: 19, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !43)
!43 = !DILocation(line: 32, column: 40, scope: !7)
!44 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !43)
!45 = !DILocation(line: 40, column: 19, scope: !7)
!46 = !DILocation(line: 44, column: 20, scope: !7)
!47 = !DILocation(line: 45, column: 25, scope: !7)
!48 = !DILocation(line: 45, column: 37, scope: !7)
!49 = !DILocation(line: 45, column: 4, scope: !7)
