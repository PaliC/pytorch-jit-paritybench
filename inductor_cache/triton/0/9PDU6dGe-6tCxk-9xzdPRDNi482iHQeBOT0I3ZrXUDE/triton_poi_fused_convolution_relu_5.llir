; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_relu_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = srem i32 %9, 16, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #1, !dbg !16
  %14 = extractvalue { i32, i32, i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32, i32, i32 } %13, 1, !dbg !16
  %16 = extractvalue { i32, i32, i32, i32 } %13, 2, !dbg !16
  %17 = extractvalue { i32, i32, i32, i32 } %13, 3, !dbg !16
  %18 = sext i32 %10 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !17
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !18
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !18
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !18
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !18
  %25 = insertelement <4 x i32> poison, i32 %17, i64 0, !dbg !16
  %26 = insertelement <4 x i32> %25, i32 %16, i64 1, !dbg !16
  %27 = insertelement <4 x i32> %26, i32 %15, i64 2, !dbg !16
  %28 = insertelement <4 x i32> %27, i32 %14, i64 3, !dbg !16
  %29 = bitcast <4 x i32> %28 to <4 x float>, !dbg !16
  %30 = insertelement <4 x i32> poison, i32 %24, i64 0, !dbg !18
  %31 = insertelement <4 x i32> %30, i32 %23, i64 1, !dbg !18
  %32 = insertelement <4 x i32> %31, i32 %22, i64 2, !dbg !18
  %33 = insertelement <4 x i32> %32, i32 %21, i64 3, !dbg !18
  %34 = bitcast <4 x i32> %33 to <4 x float>, !dbg !18
  %35 = fadd <4 x float> %29, %34, !dbg !19
  %36 = fcmp olt <4 x float> %35, zeroinitializer, !dbg !20
  %37 = extractelement <4 x i1> %36, i64 3, !dbg !24
  %38 = extractelement <4 x i1> %36, i64 2, !dbg !24
  %39 = extractelement <4 x i1> %36, i64 1, !dbg !24
  %40 = extractelement <4 x i1> %36, i64 0, !dbg !24
  %bc = bitcast <4 x float> %35 to <4 x i32>, !dbg !25
  %41 = extractelement <4 x i32> %bc, i64 3, !dbg !25
  %42 = select i1 %37, i32 0, i32 %41, !dbg !24
  %bc1 = bitcast <4 x float> %35 to <4 x i32>, !dbg !25
  %43 = extractelement <4 x i32> %bc1, i64 2, !dbg !25
  %44 = select i1 %38, i32 0, i32 %43, !dbg !24
  %bc2 = bitcast <4 x float> %35 to <4 x i32>, !dbg !25
  %45 = extractelement <4 x i32> %bc2, i64 1, !dbg !25
  %46 = select i1 %39, i32 0, i32 %45, !dbg !24
  %bc3 = bitcast <4 x float> %35 to <4 x i32>, !dbg !25
  %47 = extractelement <4 x i32> %bc3, i64 0, !dbg !25
  %48 = select i1 %40, i32 0, i32 %47, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %42, i32 %44, i32 %46, i32 %48, ptr addrspace(1) %12, i1 true) #1, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cay34h7xp2kq4jfydc2j45cqdf2uttglfqileihnhmympuf2sj4a.py", directory: "inductor_cache/ay")
!4 = !{ptr @triton_poi_fused_convolution_relu_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_5", linkageName: "triton_poi_fused_convolution_relu_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 18, scope: !7)
!20 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 30, column: 40, scope: !7)
!24 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !23)
!25 = !DILocation(line: 31, column: 39, scope: !7)
!26 = !DILocation(line: 31, column: 4, scope: !7)
