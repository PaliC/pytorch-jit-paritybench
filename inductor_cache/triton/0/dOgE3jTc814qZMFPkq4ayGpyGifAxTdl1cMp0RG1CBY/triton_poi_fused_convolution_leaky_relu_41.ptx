//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_41 // -- Begin function triton_poi_fused_convolution_leaky_relu_41
                                        // @triton_poi_fused_convolution_leaky_relu_41
.visible .entry triton_poi_fused_convolution_leaky_relu_41(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_41_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_41_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_41_param_2,
	.param .u32 triton_poi_fused_convolution_leaky_relu_41_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_leaky_relu_41_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_leaky_relu_41_param_1];
$L__tmp0:
	.loc	1 21 28                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:21:33
	shl.b32 	%r22, %r1, 9;
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_leaky_relu_41_param_2];
	.loc	1 22 36                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 2;
	and.b32  	%r25, %r24, 508;
	.loc	1 22 23                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:22:23
	or.b32  	%r26, %r22, %r25;
	or.b32  	%r27, %r26, 1;
	or.b32  	%r28, %r26, 2;
	or.b32  	%r29, %r26, 3;
	.loc	1 25 21                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:25:21
	mul.hi.s32 	%r30, %r26, 780903145;
	shr.u32 	%r31, %r30, 31;
	shr.s32 	%r32, %r30, 1;
	add.s32 	%r33, %r32, %r31;
	mul.hi.s32 	%r34, %r27, 780903145;
	shr.u32 	%r35, %r34, 31;
	shr.s32 	%r36, %r34, 1;
	add.s32 	%r37, %r36, %r35;
	mul.hi.s32 	%r38, %r28, 780903145;
	shr.u32 	%r39, %r38, 31;
	shr.s32 	%r40, %r38, 1;
	add.s32 	%r41, %r40, %r39;
	mul.hi.s32 	%r42, %r29, 780903145;
	shr.u32 	%r43, %r42, 31;
	shr.s32 	%r44, %r42, 1;
	add.s32 	%r45, %r44, %r43;
	.loc	1 25 27                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:25:27
	shr.s32 	%r46, %r33, 31;
	shr.u32 	%r47, %r46, 22;
	add.s32 	%r48, %r33, %r47;
	and.b32  	%r49, %r48, -1024;
	sub.s32 	%r50, %r33, %r49;
	shr.s32 	%r51, %r37, 31;
	shr.u32 	%r52, %r51, 22;
	add.s32 	%r53, %r37, %r52;
	and.b32  	%r54, %r53, -1024;
	sub.s32 	%r55, %r37, %r54;
	shr.s32 	%r56, %r41, 31;
	shr.u32 	%r57, %r56, 22;
	add.s32 	%r58, %r41, %r57;
	and.b32  	%r59, %r58, -1024;
	sub.s32 	%r60, %r41, %r59;
	shr.s32 	%r61, %r45, 31;
	shr.u32 	%r62, %r61, 22;
	add.s32 	%r63, %r45, %r62;
	and.b32  	%r64, %r63, -1024;
	sub.s32 	%r65, %r45, %r64;
	.loc	1 26 34                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:26:34
	mul.wide.s32 	%rd12, %r26, 4;
	add.s64 	%rd1, %rd9, %rd12;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:27:30
	mul.wide.s32 	%rd13, %r50, 4;
	add.s64 	%rd2, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r55, 4;
	add.s64 	%rd3, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r60, 4;
	add.s64 	%rd4, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r65, 4;
	add.s64 	%rd5, %rd11, %rd16;
	.loc	1 27 35                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 28 34                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:28:34
	add.s64 	%rd6, %rd10, %rd12;
	.loc	1 28 39                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:28:39
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 27 35                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:27:35
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r6;
	.loc	1 28 39                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:28:39
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	mov.b32 	%f7, %r4;
	mov.b32 	%f8, %r5;
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r11;
	mov.b32 	%f12, %r10;
	.loc	1 35 18                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:35:18
	add.f32 	%f13, %f4, %f12;
	add.f32 	%f14, %f3, %f11;
	add.f32 	%f15, %f2, %f10;
	add.f32 	%f16, %f1, %f9;
	add.f32 	%f17, %f1, %f8;
	add.f32 	%f18, %f2, %f7;
	add.f32 	%f19, %f3, %f6;
	add.f32 	%f20, %f4, %f5;
	.loc	1 33 18                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:33:18
	mul.f32 	%f21, %f20, 0f3DCCCCCD;
	mul.f32 	%f22, %f19, 0f3DCCCCCD;
	mul.f32 	%f23, %f18, 0f3DCCCCCD;
	mul.f32 	%f24, %f17, 0f3DCCCCCD;
	.loc	1 36 19                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:36:19
	setp.gt.f32 	%p9, %f16, 0f00000000;
	setp.gt.f32 	%p10, %f15, 0f00000000;
	setp.gt.f32 	%p11, %f14, 0f00000000;
	setp.gt.f32 	%p12, %f13, 0f00000000;
	setp.gt.f32 	%p13, %f17, 0f00000000;
	setp.gt.f32 	%p14, %f18, 0f00000000;
	setp.gt.f32 	%p15, %f19, 0f00000000;
	setp.gt.f32 	%p16, %f20, 0f00000000;
	.loc	1 34 32                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:34:32
	selp.f32 	%f25, %f20, %f21, %p16;
	selp.f32 	%f26, %f19, %f22, %p15;
	selp.f32 	%f27, %f18, %f23, %p14;
	selp.f32 	%f28, %f17, %f24, %p13;
	.loc	1 37 19                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:37:19
	mul.f32 	%f29, %f13, 0f3DCCCCCD;
	mul.f32 	%f30, %f14, 0f3DCCCCCD;
	mul.f32 	%f31, %f15, 0f3DCCCCCD;
	mul.f32 	%f32, %f16, 0f3DCCCCCD;
	.loc	1 38 34                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:38:34
	selp.f32 	%f33, %f13, %f29, %p12;
	selp.f32 	%f34, %f14, %f30, %p11;
	selp.f32 	%f35, %f15, %f31, %p10;
	selp.f32 	%f36, %f16, %f32, %p9;
	.loc	1 39 39                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:39:39
	mov.b32 	%r14, %f25;
	mov.b32 	%r15, %f26;
	mov.b32 	%r16, %f27;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r14, %r15, %r16, %r17 };
	// end inline asm
	.loc	1 40 40                         // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:40:40
	mov.b32 	%r18, %f33;
	mov.b32 	%r19, %f34;
	mov.b32 	%r20, %f35;
	mov.b32 	%r21, %f36;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	.loc	1 40 4                          // cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/in/cinknk5aoojkbfg65kxcc2fyhkzr2savid4i6updl7dall7pzwp4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 110
.b8 107
.b8 110
.b8 107
.b8 53
.b8 97
.b8 111
.b8 111
.b8 106
.b8 107
.b8 98
.b8 102
.b8 103
.b8 54
.b8 53
.b8 107
.b8 120
.b8 99
.b8 99
.b8 50
.b8 102
.b8 121
.b8 104
.b8 107
.b8 122
.b8 114
.b8 50
.b8 115
.b8 97
.b8 118
.b8 105
.b8 100
.b8 52
.b8 105
.b8 54
.b8 117
.b8 112
.b8 100
.b8 108
.b8 55
.b8 100
.b8 97
.b8 108
.b8 108
.b8 55
.b8 112
.b8 122
.b8 119
.b8 112
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
