//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_15 // -- Begin function triton_poi_fused_add_15
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_15
.visible .entry triton_poi_fused_add_15(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_15_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_15_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_15_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_15_param_3,
	.param .u32 triton_poi_fused_add_15_param_4,
	.param .u32 triton_poi_fused_add_15_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_add_15_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_15_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:22:33
	shl.b32 	%r25, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused_add_15_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_add_15_param_3];
	.loc	1 23 44                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:23:44
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 127;
	shl.b32 	%r28, %r26, 2;
	and.b32  	%r29, %r28, 252;
	.loc	1 23 23                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:23:23
	or.b32  	%r30, %r25, %r27;
	or.b32  	%r31, %r30, 128;
	or.b32  	%r32, %r25, %r29;
	.loc	1 24 21                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:24:21
	setp.lt.s32 	%p11, %r30, 256;
	setp.lt.s32 	%p12, %r31, 256;
	setp.lt.s32 	%p13, %r32, 256;
	.loc	1 25 28                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:25:33
	shl.b32 	%r33, %r2, 1;
	.loc	1 26 44                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:26:44
	bfe.u32 	%r34, %r26, 6, 1;
	.loc	1 26 23                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:26:23
	or.b32  	%r35, %r33, %r34;
	.loc	1 27 21                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:27:21
	setp.lt.s32 	%p3, %r33, 192;
	setp.lt.s32 	%p14, %r35, 192;
	.loc	1 31 19                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:31:19
	shr.s32 	%r37, %r32, 31;
	shr.u32 	%r38, %r37, 26;
	add.s32 	%r39, %r32, %r38;
	shr.s32 	%r40, %r39, 6;
	.loc	1 30 19                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:30:19
	and.b32  	%r41, %r39, -64;
	sub.s32 	%r42, %r32, %r41;
	.loc	1 32 35                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:32:35
	mad.lo.s32 	%r43, %r30, 192, %r33;
	mad.lo.s32 	%r44, %r31, 192, %r33;
	.loc	1 32 30                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:32:30
	mul.wide.s32 	%rd11, %r43, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r44, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 32 52                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:32:52
	and.pred  	%p1, %p3, %p11;
	and.pred  	%p2, %p3, %p12;
	and.pred  	%p10, %p13, %p14;
	.loc	1 32 44                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:32:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 33 30                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:33:30
	mul.wide.s32 	%rd13, %r33, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 33 35                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	.loc	1 34 30                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:34:30
	add.s64 	%rd4, %rd9, %rd11;
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 34 44                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:34:44
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	.loc	1 36 18                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:36:18
	fma.rn.f32 	%f11, %f5, %f7, %f1;
	fma.rn.f32 	%f12, %f6, %f8, %f2;
	fma.rn.f32 	%f13, %f5, %f9, %f3;
	fma.rn.f32 	%f14, %f6, %f10, %f4;
	.loc	1 37 33                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:33
	shl.b32 	%r45, %r35, 6;
	.loc	1 37 30                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:30
	add.s32 	%r46, %r45, %r42;
	.loc	1 37 38                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:38
	mad.lo.s32 	%r47, %r40, 12288, %r46;
	.loc	1 37 25                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:25
	mul.wide.s32 	%rd14, %r47, 4;
	add.s64 	%rd6, %rd10, %rd14;
	.loc	1 37 55                         // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:55
	shl.b32 	%r48, %r27, 2;
	mov.u32 	%r49, global_smem;
	add.s32 	%r13, %r49, %r48;
	mov.b32 	%r14, %f11;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r13, 1040;
	mov.b32 	%r16, %f12;
	// begin inline asm
	@%p6 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r13, 512;
	mov.b32 	%r18, %f13;
	// begin inline asm
	@%p6 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r13, 1552;
	mov.b32 	%r20, %f14;
	// begin inline asm
	@%p6 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r50, %r26, 2;
	and.b32  	%r51, %r50, 16;
	add.s32 	%r52, %r49, %r51;
	shl.b32 	%r53, %r26, 4;
	and.b32  	%r54, %r53, 2032;
	add.s32 	%r55, %r52, %r54;
	ld.shared.v4.u32 	{%r21, %r22, %r23, %r24}, [%r55];
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd6 + 0 ], { %r21, %r22, %r23, %r24 };
	// end inline asm
	.loc	1 37 4                          // cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/va/cvayp6s5bavubqbryraprshz53yzxvofehvouejxbfstdd5lesxp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 97
.b8 121
.b8 112
.b8 54
.b8 115
.b8 53
.b8 98
.b8 97
.b8 118
.b8 117
.b8 98
.b8 113
.b8 98
.b8 114
.b8 121
.b8 114
.b8 97
.b8 112
.b8 114
.b8 115
.b8 104
.b8 122
.b8 53
.b8 51
.b8 121
.b8 122
.b8 120
.b8 118
.b8 111
.b8 102
.b8 101
.b8 104
.b8 118
.b8 111
.b8 117
.b8 101
.b8 106
.b8 120
.b8 98
.b8 102
.b8 115
.b8 116
.b8 100
.b8 100
.b8 53
.b8 108
.b8 101
.b8 115
.b8 120
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
