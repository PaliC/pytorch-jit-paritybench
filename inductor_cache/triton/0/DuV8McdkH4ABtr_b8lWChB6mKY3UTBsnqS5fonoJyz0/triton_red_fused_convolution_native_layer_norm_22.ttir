#loc = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0)
#loc1 = loc(unknown)
#loc27 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":49:41)
#loc66 = loc(callsite(#loc1 at #loc27))
module {
  tt.func public @triton_red_fused_convolution_native_layer_norm_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<8x512xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3.840000e+02> : tensor<8x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x512xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x512xf32> loc(#loc1)
    %cst_5 = arith.constant dense<384> : tensor<8x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<384> : tensor<1x512xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<64> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<512xi32> -> tensor<1x512xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_8 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_8 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_8 : tensor<8x1xi32> loc(#loc12)
    %12 = arith.divsi %5, %cst_7 : tensor<8x1xi32> loc(#loc13)
    %13 = arith.cmpi slt, %8, %cst_6 : tensor<1x512xi32> loc(#loc14)
    %14 = arith.muli %5, %cst_5 : tensor<8x1xi32> loc(#loc15)
    %15 = tt.broadcast %8 : tensor<1x512xi32> -> tensor<8x512xi32> loc(#loc16)
    %16 = tt.broadcast %14 : tensor<8x1xi32> -> tensor<8x512xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<8x512xi32> loc(#loc16)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %17 : tensor<8x512x!tt.ptr<f32>>, tensor<8x512xi32> loc(#loc17)
    %20 = tt.broadcast %13 : tensor<1x512xi1> -> tensor<8x512xi1> loc(#loc18)
    %21 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x512xi1> loc(#loc18)
    %22 = arith.andi %20, %21 : tensor<8x512xi1> loc(#loc18)
    %23 = tt.load %19, %22, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>> loc(#loc19)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>> loc(#loc20)
    %25 = tt.addptr %24, %8 : tensor<1x512x!tt.ptr<f32>>, tensor<1x512xi32> loc(#loc20)
    %26 = tt.load %25, %13, %cst_3 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.broadcast %26 : tensor<1x512xf32> -> tensor<8x512xf32> loc(#loc22)
    %28 = arith.addf %23, %27 : tensor<8x512xf32> loc(#loc22)
    %29 = arith.select %22, %28, %cst_4 : tensor<8x512xi1>, tensor<8x512xf32> loc(#loc23)
    %30 = arith.select %22, %cst_0, %cst_4 : tensor<8x512xi1>, tensor<8x512xf32> loc(#loc24)
    tt.store %19, %28, %22 : tensor<8x512x!tt.ptr<f32>> loc(#loc25)
    %31:3 = "tt.reduce"(%29, %cst_4, %30) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc27)), %arg10: f32 loc(callsite(#loc1 at #loc27)), %arg11: f32 loc(callsite(#loc1 at #loc27)), %arg12: f32 loc(callsite(#loc1 at #loc27)), %arg13: f32 loc(callsite(#loc1 at #loc27)), %arg14: f32 loc(callsite(#loc1 at #loc27))):
      %62 = arith.subf %arg12, %arg9 : f32 loc(#loc79)
      %63 = arith.addf %arg11, %arg14 : f32 loc(#loc80)
      %64 = arith.cmpf oeq, %63, %cst : f32 loc(#loc81)
      %65 = arith.divf %arg14, %63 : f32 loc(#loc82)
      %66 = arith.select %64, %cst, %65 : f32 loc(#loc83)
      %67 = arith.mulf %62, %66 : f32 loc(#loc84)
      %68 = arith.addf %arg9, %67 : f32 loc(#loc85)
      %69 = arith.addf %arg10, %arg13 : f32 loc(#loc86)
      %70 = arith.mulf %62, %62 : f32 loc(#loc87)
      %71 = arith.mulf %70, %arg11 : f32 loc(#loc88)
      %72 = arith.mulf %71, %66 : f32 loc(#loc89)
      %73 = arith.addf %69, %72 : f32 loc(#loc90)
      tt.reduce.return %68, %73, %63 : f32, f32, f32 loc(#loc65)
    }) : (tensor<8x512xf32>, tensor<8x512xf32>, tensor<8x512xf32>) -> (tensor<8xf32>, tensor<8xf32>, tensor<8xf32>) loc(#loc65)
    %32 = tt.expand_dims %31#0 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc40)
    %33 = tt.expand_dims %31#1 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc41)
    %34 = arith.muli %9, %cst_8 : tensor<8x1xi32> loc(#loc42)
    %35 = arith.addi %11, %34 : tensor<8x1xi32> loc(#loc43)
    %36 = arith.muli %12, %cst_7 : tensor<8x1xi32> loc(#loc44)
    %37 = arith.addi %35, %36 : tensor<8x1xi32> loc(#loc45)
    %38 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc46)
    %39 = tt.addptr %38, %37 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc46)
    tt.store %39, %32, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc47)
    %40 = arith.divf %33, %cst_2 : tensor<8x1xf32> loc(#loc48)
    %41 = arith.addf %40, %cst_1 : tensor<8x1xf32> loc(#loc49)
    %42 = tt.extern_elementwise %41 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc50)
    %43 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc51)
    %44 = tt.addptr %43, %37 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc51)
    tt.store %44, %42, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc52)
    %45 = tt.load %19, %22, %cst_4 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>> loc(#loc53)
    %46 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>> loc(#loc54)
    %47 = tt.addptr %46, %8 : tensor<1x512x!tt.ptr<f32>>, tensor<1x512xi32> loc(#loc54)
    %48 = tt.load %47, %13, %cst_3 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>> loc(#loc55)
    %49 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>> loc(#loc56)
    %50 = tt.addptr %49, %8 : tensor<1x512x!tt.ptr<f32>>, tensor<1x512xi32> loc(#loc56)
    %51 = tt.load %50, %13, %cst_3 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>> loc(#loc57)
    %52 = tt.broadcast %32 : tensor<8x1xf32> -> tensor<8x512xf32> loc(#loc58)
    %53 = arith.subf %45, %52 : tensor<8x512xf32> loc(#loc58)
    %54 = tt.broadcast %42 : tensor<8x1xf32> -> tensor<8x512xf32> loc(#loc59)
    %55 = arith.mulf %53, %54 : tensor<8x512xf32> loc(#loc59)
    %56 = tt.broadcast %48 : tensor<1x512xf32> -> tensor<8x512xf32> loc(#loc60)
    %57 = arith.mulf %55, %56 : tensor<8x512xf32> loc(#loc60)
    %58 = tt.broadcast %51 : tensor<1x512xf32> -> tensor<8x512xf32> loc(#loc61)
    %59 = arith.addf %57, %58 : tensor<8x512xf32> loc(#loc61)
    %60 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>> loc(#loc62)
    %61 = tt.addptr %60, %17 : tensor<8x512x!tt.ptr<f32>>, tensor<8x512xi32> loc(#loc62)
    tt.store %61, %59, %22 : tensor<8x512x!tt.ptr<f32>> loc(#loc63)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":22:28)
#loc3 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":22:33)
#loc4 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":23:36)
#loc5 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":23:44)
#loc6 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":23:23)
#loc7 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":24:21)
#loc8 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":25:25)
#loc9 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":25:33)
#loc10 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":30:19)
#loc11 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":31:21)
#loc12 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":31:26)
#loc13 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":32:19)
#loc14 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":35:25)
#loc15 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":37:47)
#loc16 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":37:43)
#loc17 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":37:38)
#loc18 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":37:60)
#loc19 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":37:52)
#loc20 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":38:34)
#loc21 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":38:39)
#loc22 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":39:22)
#loc23 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":44:60)
#loc24 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":46:64)
#loc25 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":47:52)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc40 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":51:20)
#loc41 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":52:20)
#loc42 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:32)
#loc43 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:30)
#loc44 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:40)
#loc45 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:37)
#loc46 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:25)
#loc47 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":54:51)
#loc48 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":56:18)
#loc49 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":58:19)
#loc50 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":59:28)
#loc51 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":60:25)
#loc52 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":60:52)
#loc53 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":65:53)
#loc54 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":66:35)
#loc55 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":66:40)
#loc56 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":67:35)
#loc57 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":67:40)
#loc58 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":68:24)
#loc59 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":69:24)
#loc60 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":70:24)
#loc61 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":71:24)
#loc62 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":72:29)
#loc63 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":72:50)
#loc64 = loc("inductor_cache/fk/cfktqll3xgqsoy5nlgmxiysluienzf2avpo3ogmt36hsx7xc5hqw.py":61:4)
#loc65 = loc(callsite(#loc26 at #loc27))
#loc67 = loc(callsite(#loc28 at #loc26))
#loc68 = loc(callsite(#loc29 at #loc26))
#loc69 = loc(callsite(#loc30 at #loc26))
#loc70 = loc(callsite(#loc31 at #loc26))
#loc71 = loc(callsite(#loc32 at #loc26))
#loc72 = loc(callsite(#loc33 at #loc26))
#loc73 = loc(callsite(#loc34 at #loc26))
#loc74 = loc(callsite(#loc35 at #loc26))
#loc75 = loc(callsite(#loc36 at #loc26))
#loc76 = loc(callsite(#loc37 at #loc26))
#loc77 = loc(callsite(#loc38 at #loc26))
#loc78 = loc(callsite(#loc39 at #loc26))
#loc79 = loc(callsite(#loc67 at #loc27))
#loc80 = loc(callsite(#loc68 at #loc27))
#loc81 = loc(callsite(#loc69 at #loc27))
#loc82 = loc(callsite(#loc70 at #loc27))
#loc83 = loc(callsite(#loc71 at #loc27))
#loc84 = loc(callsite(#loc72 at #loc27))
#loc85 = loc(callsite(#loc73 at #loc27))
#loc86 = loc(callsite(#loc74 at #loc27))
#loc87 = loc(callsite(#loc75 at #loc27))
#loc88 = loc(callsite(#loc76 at #loc27))
#loc89 = loc(callsite(#loc77 at #loc27))
#loc90 = loc(callsite(#loc78 at #loc27))
