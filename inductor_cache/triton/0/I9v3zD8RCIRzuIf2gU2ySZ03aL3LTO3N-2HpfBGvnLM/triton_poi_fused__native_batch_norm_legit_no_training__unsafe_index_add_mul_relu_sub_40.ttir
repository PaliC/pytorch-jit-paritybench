#loc = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg11: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0), %arg14: i32 loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<2x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<2x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<2x1xi32> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c2_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<2xi32> -> tensor<2x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<2x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<2x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_4 : tensor<2x1xi32> loc(#loc13)
    %14 = arith.divsi %12, %cst_3 : tensor<2x1xi32> loc(#loc14)
    %15 = arith.remsi %12, %cst_3 : tensor<2x1xi32> loc(#loc15)
    %16 = arith.remsi %5, %cst_2 : tensor<1x16xi32> loc(#loc16)
    %17 = arith.divsi %5, %cst_2 : tensor<1x16xi32> loc(#loc17)
    %18 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %19 = tt.addptr %18, %5 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc18)
    %20 = tt.load %19, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %21 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<2x1x!tt.ptr<f32>> loc(#loc20)
    %22 = tt.addptr %21, %15 : tensor<2x1x!tt.ptr<f32>>, tensor<2x1xi32> loc(#loc20)
    %23 = tt.load %22, %13 evictionPolicy = evict_last : tensor<2x1x!tt.ptr<f32>> loc(#loc21)
    %24 = arith.muli %12, %cst_4 : tensor<2x1xi32> loc(#loc22)
    %25 = tt.broadcast %16 : tensor<1x16xi32> -> tensor<2x16xi32> loc(#loc23)
    %26 = tt.broadcast %24 : tensor<2x1xi32> -> tensor<2x16xi32> loc(#loc23)
    %27 = arith.addi %25, %26 : tensor<2x16xi32> loc(#loc23)
    %28 = arith.muli %17, %cst_5 : tensor<1x16xi32> loc(#loc24)
    %29 = tt.broadcast %28 : tensor<1x16xi32> -> tensor<2x16xi32> loc(#loc25)
    %30 = arith.addi %27, %29 : tensor<2x16xi32> loc(#loc25)
    %31 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<2x16x!tt.ptr<f32>> loc(#loc26)
    %32 = tt.addptr %31, %30 : tensor<2x16x!tt.ptr<f32>>, tensor<2x16xi32> loc(#loc26)
    %33 = tt.broadcast %13 : tensor<2x1xi1> -> tensor<2x16xi1> loc(#loc27)
    %34 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<2x16xi1> loc(#loc27)
    %35 = arith.andi %33, %34 : tensor<2x16xi1> loc(#loc27)
    %36 = tt.load %32, %35 evictionPolicy = evict_last : tensor<2x16x!tt.ptr<f32>> loc(#loc28)
    %37 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc29)
    %38 = tt.addptr %37, %16 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc29)
    %39 = tt.load %38, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc30)
    %40 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc31)
    %41 = tt.addptr %40, %16 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc31)
    %42 = tt.load %41, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc32)
    %43 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc33)
    %44 = tt.addptr %43, %16 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc33)
    %45 = tt.load %44, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc34)
    %46 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc35)
    %47 = tt.addptr %46, %16 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc35)
    %48 = tt.load %47, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc36)
    %49 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<2x1x!tt.ptr<f32>> loc(#loc37)
    %50 = tt.addptr %49, %14 : tensor<2x1x!tt.ptr<f32>>, tensor<2x1xi32> loc(#loc37)
    %51 = tt.load %50, %13 evictionPolicy = evict_last : tensor<2x1x!tt.ptr<f32>> loc(#loc38)
    %52 = arith.subf %20, %20 : tensor<1x16xf32> loc(#loc39)
    %53 = tt.broadcast %52 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc40)
    %54 = tt.broadcast %23 : tensor<2x1xf32> -> tensor<2x16xf32> loc(#loc40)
    %55 = arith.mulf %53, %54 : tensor<2x16xf32> loc(#loc40)
    %56 = tt.broadcast %20 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc41)
    %57 = arith.addf %56, %55 : tensor<2x16xf32> loc(#loc41)
    %58 = tt.broadcast %39 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc42)
    %59 = arith.subf %36, %58 : tensor<2x16xf32> loc(#loc42)
    %60 = arith.addf %42, %cst_1 : tensor<1x16xf32> loc(#loc43)
    %61 = tt.extern_elementwise %60 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc44)
    %62 = arith.divf %cst_0, %61 : tensor<1x16xf32> loc(#loc45)
    %63 = tt.broadcast %62 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc46)
    %64 = arith.mulf %59, %63 : tensor<2x16xf32> loc(#loc46)
    %65 = tt.broadcast %45 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc47)
    %66 = arith.mulf %64, %65 : tensor<2x16xf32> loc(#loc47)
    %67 = tt.broadcast %48 : tensor<1x16xf32> -> tensor<2x16xf32> loc(#loc48)
    %68 = arith.addf %66, %67 : tensor<2x16xf32> loc(#loc48)
    %69 = arith.cmpf ogt, %cst, %68 : tensor<2x16xf32> loc(#loc62)
    %70 = arith.select %69, %cst, %68 : tensor<2x16xi1>, tensor<2x16xf32> loc(#loc63)
    %71 = arith.subf %57, %57 : tensor<2x16xf32> loc(#loc52)
    %72 = tt.broadcast %51 : tensor<2x1xf32> -> tensor<2x16xf32> loc(#loc53)
    %73 = arith.mulf %71, %72 : tensor<2x16xf32> loc(#loc53)
    %74 = arith.addf %57, %73 : tensor<2x16xf32> loc(#loc54)
    %75 = arith.addf %70, %74 : tensor<2x16xf32> loc(#loc55)
    gpu.barrier loc(#loc56)
    %76 = arith.muli %5, %cst_2 : tensor<1x16xi32> loc(#loc57)
    %77 = tt.broadcast %12 : tensor<2x1xi32> -> tensor<2x16xi32> loc(#loc58)
    %78 = tt.broadcast %76 : tensor<1x16xi32> -> tensor<2x16xi32> loc(#loc58)
    %79 = arith.addi %77, %78 : tensor<2x16xi32> loc(#loc58)
    %80 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2x16x!tt.ptr<f32>> loc(#loc59)
    %81 = tt.addptr %80, %79 : tensor<2x16x!tt.ptr<f32>>, tensor<2x16xi32> loc(#loc59)
    tt.store %81, %75, %35 : tensor<2x16x!tt.ptr<f32>> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":22:28)
#loc3 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":22:33)
#loc4 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":23:36)
#loc5 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":23:44)
#loc6 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":23:23)
#loc7 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":24:21)
#loc8 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":25:28)
#loc9 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":25:33)
#loc10 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":26:36)
#loc11 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":26:44)
#loc12 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":26:23)
#loc13 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":27:21)
#loc14 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":28:19)
#loc15 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":29:19)
#loc16 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":32:19)
#loc17 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":33:19)
#loc18 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":36:30)
#loc19 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":36:35)
#loc20 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":38:31)
#loc21 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":38:36)
#loc22 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:38)
#loc23 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:36)
#loc24 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:46)
#loc25 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:43)
#loc26 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:31)
#loc27 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:59)
#loc28 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":39:51)
#loc29 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":40:31)
#loc30 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":40:36)
#loc31 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":41:31)
#loc32 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":41:36)
#loc33 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":42:31)
#loc34 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":42:36)
#loc35 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":43:31)
#loc36 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":43:36)
#loc37 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":45:32)
#loc38 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":45:37)
#loc39 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":56:19)
#loc40 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":57:20)
#loc41 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":58:19)
#loc42 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":59:20)
#loc43 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":61:20)
#loc44 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":62:27)
#loc45 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":64:20)
#loc46 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":67:20)
#loc47 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":68:20)
#loc48 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":69:20)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc50 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":71:42)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc52 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":75:20)
#loc53 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":76:20)
#loc54 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":77:20)
#loc55 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":78:20)
#loc56 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":79:4)
#loc57 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":80:35)
#loc58 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":80:33)
#loc59 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":80:28)
#loc60 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":80:47)
#loc61 = loc("inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py":80:4)
#loc62 = loc(callsite(#loc49 at #loc50))
#loc63 = loc(callsite(#loc51 at #loc50))
