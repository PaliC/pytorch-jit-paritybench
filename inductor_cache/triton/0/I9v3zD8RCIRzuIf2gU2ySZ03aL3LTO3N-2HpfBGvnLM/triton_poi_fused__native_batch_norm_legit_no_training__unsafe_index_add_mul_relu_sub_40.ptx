//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_12,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_13,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_14
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<59>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_0];
$L__tmp0:
	.loc	1 22 28                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:22:33
	shl.b32 	%r17, %r1, 4;
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_3];
	.loc	1 23 44                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:23:44
	mov.u32 	%r18, %tid.x;
	and.b32  	%r19, %r18, 15;
	.loc	1 23 23                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:23:23
	or.b32  	%r20, %r17, %r19;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_5];
	.loc	1 24 21                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:24:21
	setp.lt.s32 	%p1, %r20, 16;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_6];
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_7];
	.loc	1 25 28                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:25:33
	shl.b32 	%r21, %r2, 1;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_8];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_9];
	.loc	1 26 44                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:26:44
	bfe.u32 	%r22, %r18, 4, 1;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_10];
	.loc	1 26 23                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:26:23
	or.b32  	%r23, %r21, %r22;
	.loc	1 27 21                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:27:21
	setp.lt.s32 	%p2, %r23, 4;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_40_param_12];
	.loc	1 28 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:28:19
	shr.u32 	%r25, %r23, 31;
	add.s32 	%r26, %r23, %r25;
	shr.s32 	%r27, %r26, 1;
	.loc	1 29 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:29:19
	and.b32  	%r28, %r26, -2;
	sub.s32 	%r29, %r23, %r28;
	.loc	1 33 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:33:19
	shr.s32 	%r31, %r20, 31;
	shr.u32 	%r32, %r31, 30;
	add.s32 	%r33, %r20, %r32;
	.loc	1 32 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:32:19
	and.b32  	%r34, %r33, -4;
	sub.s32 	%r35, %r20, %r34;
	.loc	1 36 30                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:36:30
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd1, %rd11, %rd19;
	.loc	1 36 35                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:36:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:38:31
	mul.wide.s32 	%rd20, %r29, 4;
	add.s64 	%rd2, %rd12, %rd20;
	.loc	1 38 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:38:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 39 38                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:38
	shl.b32 	%r36, %r23, 2;
	.loc	1 39 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:36
	add.s32 	%r37, %r36, %r35;
	.loc	1 39 46                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:46
	shl.b32 	%r38, %r33, 2;
	and.b32  	%r39, %r38, -16;
	.loc	1 39 43                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:43
	add.s32 	%r40, %r37, %r39;
	.loc	1 39 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:31
	mul.wide.s32 	%rd21, %r40, 4;
	add.s64 	%rd3, %rd13, %rd21;
	.loc	1 39 59                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:59
	and.pred  	%p3, %p1, %p2;
	.loc	1 39 51                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:51
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:40:31
	mul.wide.s32 	%rd22, %r35, 4;
	add.s64 	%rd4, %rd14, %rd22;
	.loc	1 40 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:40:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 41 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:41:31
	add.s64 	%rd5, %rd15, %rd22;
	.loc	1 41 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:41:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	.loc	1 42 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:42:31
	add.s64 	%rd6, %rd16, %rd22;
	.loc	1 42 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:42:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 43 31                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:43:31
	add.s64 	%rd7, %rd17, %rd22;
	.loc	1 43 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:43:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 45 32                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:45:32
	mul.wide.s32 	%rd23, %r27, 4;
	add.s64 	%rd8, %rd18, %rd23;
	.loc	1 45 37                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:45:37
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 61 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:61:20
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 62 27                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:62:27
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 39 51                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:51
	mov.b32 	%f4, %r5;
	.loc	1 40 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:40:36
	mov.b32 	%f5, %r6;
	.loc	1 59 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:59:20
	sub.f32 	%f6, %f4, %f5;
	.loc	1 36 35                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:36:35
	mov.b32 	%f7, %r3;
	.loc	1 56 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:56:19
	sub.f32 	%f8, %f7, %f7;
	.loc	1 38 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:38:36
	mov.b32 	%f9, %r4;
	.loc	1 58 19                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:58:19
	fma.rn.f32 	%f10, %f8, %f9, %f7;
	.loc	1 45 37                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:45:37
	mov.b32 	%f11, %r10;
	.loc	1 43 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:43:36
	mov.b32 	%f12, %r9;
	.loc	1 42 36                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:42:36
	mov.b32 	%f13, %r8;
	.loc	1 23 44                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:23:44
	and.b32  	%r41, %r18, 1;
	.loc	1 26 23                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:26:23
	or.b32  	%r42, %r21, %r41;
	.loc	1 27 21                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:27:21
	setp.lt.s32 	%p11, %r42, 4;
	.loc	1 23 44                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:23:44
	bfe.u32 	%r43, %r18, 1, 4;
	.loc	1 23 23                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:23:23
	or.b32  	%r44, %r17, %r43;
	.loc	1 24 21                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:24:21
	setp.lt.s32 	%p12, %r44, 16;
	.loc	1 39 59                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:39:59
	and.pred  	%p10, %p12, %p11;
	.loc	1 64 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:64:20
	mov.b32 	%r13, %f3;
	mov.b32 	%r12, 1065353216;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f14, %r11;
	.loc	1 67 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:67:20
	mul.f32 	%f15, %f6, %f14;
	.loc	1 69 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:69:20
	fma.rn.f32 	%f16, %f15, %f13, %f12;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p13, %f16, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f17, 0f00000000, %f16, %p13;
$L__tmp2:
	.loc	1 75 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:75:20
	sub.f32 	%f18, %f10, %f10;
	.loc	1 77 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:77:20
	fma.rn.f32 	%f19, %f18, %f11, %f10;
	.loc	1 78 20                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:78:20
	add.f32 	%f20, %f19, %f17;
	.loc	1 79 4                          // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:79:4
	bar.sync 	0;
	.loc	1 80 35                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:80:35
	shl.b32 	%r45, %r44, 2;
	.loc	1 80 33                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:80:33
	add.s32 	%r46, %r42, %r45;
	.loc	1 80 28                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:80:28
	mul.wide.s32 	%rd24, %r46, 4;
	add.s64 	%rd9, %rd10, %rd24;
	.loc	1 80 47                         // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:80:47
	shl.b32 	%r47, %r18, 1;
	and.b32  	%r48, %r47, 30;
	or.b32  	%r49, %r48, %r22;
	and.b32  	%r50, %r18, 31;
	shl.b32 	%r51, %r48, 1;
	mov.u32 	%r52, global_smem;
	add.s32 	%r53, %r52, %r51;
	shl.b32 	%r54, %r49, 2;
	add.s32 	%r14, %r53, %r54;
	mov.b32 	%r15, %f20;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r55, %r47, 60;
	add.s32 	%r56, %r52, %r55;
	shl.b32 	%r57, %r50, 2;
	add.s32 	%r58, %r56, %r57;
	ld.shared.u32 	%r16, [%r58];
	// begin inline asm
	@%p10 st.global.b32 [ %rd9 + 0 ], { %r16 };
	// end inline asm
	.loc	1 80 4                          // cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py:80:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/x3/cx3bsplwxnra7k2uxjnrxn72uuxz347jv3tpy44rlpra3xdltfwl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 51
.b8 98
.b8 115
.b8 112
.b8 108
.b8 119
.b8 120
.b8 110
.b8 114
.b8 97
.b8 55
.b8 107
.b8 50
.b8 117
.b8 120
.b8 106
.b8 110
.b8 114
.b8 120
.b8 110
.b8 55
.b8 50
.b8 117
.b8 117
.b8 120
.b8 122
.b8 51
.b8 52
.b8 55
.b8 106
.b8 118
.b8 51
.b8 116
.b8 112
.b8 121
.b8 52
.b8 52
.b8 114
.b8 108
.b8 112
.b8 114
.b8 97
.b8 51
.b8 120
.b8 100
.b8 108
.b8 116
.b8 102
.b8 119
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 52
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbd:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 71                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
