//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_gelu_native_group_norm_0 // -- Begin function triton_per_fused_gelu_native_group_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_gelu_native_group_norm_0
.visible .entry triton_per_fused_gelu_native_group_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_native_group_norm_0_param_5,
	.param .u32 triton_per_fused_gelu_native_group_norm_0_param_6,
	.param .u32 triton_per_fused_gelu_native_group_norm_0_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<91>;
	.reg .b64 	%rd<18>;
$L__func_begin0:

// %bb.0:                               // %__nv_rsqrtf.exit
	.loc	1 23 28                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:23:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:25:21
	setp.lt.s32 	%p1, %r3, 4;
	ld.param.u64 	%rd8, [triton_per_fused_gelu_native_group_norm_0_param_2];
	ld.param.u64 	%rd9, [triton_per_fused_gelu_native_group_norm_0_param_3];
	.loc	1 26 34                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:26:34
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 31;
	ld.param.u64 	%rd10, [triton_per_fused_gelu_native_group_norm_0_param_4];
	and.b32  	%r2, %r26, 63;
	.loc	1 31 19                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:31:19
	bfe.u32 	%r28, %r26, 4, 2;
	.loc	1 32 38                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:32:38
	shl.b32 	%r29, %r3, 6;
	.loc	1 32 35                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:32:35
	or.b32  	%r30, %r29, %r2;
	.loc	1 32 30                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:32:30
	mul.wide.s32 	%rd11, %r30, 4;
	add.s64 	%rd5, %rd8, %rd11;
	mov.b32 	%r5, 0;
	.loc	1 32 43                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:32:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f25, %r4;
	.loc	1 33 31                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:33:31
	mul.wide.u32 	%rd12, %r28, 4;
	add.s64 	%rd6, %rd9, %rd12;
	mov.pred 	%p3, -1;
	.loc	1 33 36                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:33:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r6;
	.loc	1 34 31                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:34:31
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 34 36                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:34:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r7;
	.loc	1 38 33                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:38:33
	selp.f32 	%f28, %f25, 0f00000000, %p1;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f28;
	shfl.sync.bfly.b32	%r32, %r31, 16, 31, -1;
	mov.b32 	%f29, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f30;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f31, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f32;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f33, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f34;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f35, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f36;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f37, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r27, 0;
	shr.u32 	%r41, %r26, 3;
	and.b32  	%r42, %r41, 4;
	mov.u32 	%r43, global_smem;
	add.s32 	%r8, %r43, %r42;
	mov.b32 	%r9, %f38;
	// begin inline asm
	@%p5 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r26, 2;
	shl.b32 	%r44, %r26, 2;
	add.s32 	%r11, %r43, %r44;
	// begin inline asm
	@%p6 ld.shared.b32 %r10, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r10;
	shfl.sync.bfly.b32	%r45, %r10, 1, 31, -1;
	mov.b32 	%f40, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r46, %r26, 1;
	setp.eq.b32 	%p11, %r46, 1;
	not.pred 	%p12, %p11;
	and.pred  	%p7, %p6, %p12;
	mov.b32 	%r13, %f41;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 42 19                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:42:19
	ld.shared.u32 	%r15, [global_smem];
	mov.b32 	%r16, 1115684864;
	// begin inline asm
	div.full.f32 %r65, %r15, %r16;
	// end inline asm
	mov.b32 	%f1, %r65;
	.loc	1 43 19                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:43:19
	sub.f32 	%f42, %f25, %f1;
	.loc	1 44 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:44:20
	mul.f32 	%f43, %f42, %f42;
	.loc	1 46 35                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:46:35
	selp.f32 	%f44, %f43, 0f00000000, %p1;
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r47, %f44;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f45, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f46;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f47, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f48;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f49, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f50;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f51, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f52;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f53, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f54;
	// begin inline asm
	@%p5 st.shared.b32 [ %r8 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r19, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r19;
	shfl.sync.bfly.b32	%r57, %r19, 1, 31, -1;
	mov.b32 	%f56, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f57;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
$L__tmp3:
	.loc	1 49 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:49:20
	ld.shared.u32 	%r24, [global_smem];
	// begin inline asm
	div.full.f32 %r23, %r24, %r16;
	// end inline asm
	mov.b32 	%f58, %r23;
	.loc	1 51 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:51:20
	add.f32 	%f59, %f58, 0f3727C5AC;
	.loc	1 52 28                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:52:28
	rsqrt.approx.ftz.f32 	%f2, %f59;
	.loc	1 54 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:54:20
	mul.f32 	%f60, %f42, %f2;
	.loc	1 56 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:56:20
	fma.rn.f32 	%f3, %f60, %f26, %f27;
	.loc	1 60 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:60:20
	mul.f32 	%f4, %f3, 0f3F3504F3;
	.loc	1 61 26                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:61:26
	abs.ftz.f32 	%f5, %f4;
	setp.ge.f32 	%p13, %f5, 0f3F8060FE;
	mov.f32 	%f88, 0f3789CA3C;
	mov.f32 	%f87, 0fB9F560B9;
	mov.f32 	%f86, 0f3BAC840B;
	mov.f32 	%f85, 0fBD0C8162;
	mov.f32 	%f84, 0f3E1CF906;
	mov.f32 	%f83, 0f3F6A937E;
	mov.f32 	%f82, 0f3F20D842;
	mov.f32 	%f89, %f5;
	@%p13 bra 	$L__BB0_2;
// %bb.1:
	mul.f32 	%f89, %f4, %f4;
	mov.f32 	%f88, 0f38B1E96A;
	mov.f32 	%f87, 0fBA574D20;
	mov.f32 	%f86, 0f3BAAD5EA;
	mov.f32 	%f85, 0fBCDC1BE7;
	mov.f32 	%f84, 0f3DE718AF;
	mov.f32 	%f83, 0fBEC093AC;
	mov.f32 	%f82, 0f3E0375D3;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 26                          // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:0:26
	ld.param.u64 	%rd4, [triton_per_fused_gelu_native_group_norm_0_param_5];
	ld.param.u64 	%rd3, [triton_per_fused_gelu_native_group_norm_0_param_1];
	ld.param.u64 	%rd2, [triton_per_fused_gelu_native_group_norm_0_param_0];
	cvt.s64.s32 	%rd1, %r30;
	.loc	1 61 26                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:61:26
	setp.ltu.f32 	%p14, %f5, 0f3F8060FE;
	fma.rn.ftz.f32 	%f68, %f88, %f89, %f87;
	fma.rn.ftz.f32 	%f69, %f68, %f89, %f86;
	fma.rn.ftz.f32 	%f70, %f69, %f89, %f85;
	fma.rn.ftz.f32 	%f71, %f70, %f89, %f84;
	fma.rn.ftz.f32 	%f72, %f71, %f89, %f83;
	fma.rn.ftz.f32 	%f73, %f72, %f89, %f82;
	neg.f32 	%f74, %f89;
	selp.f32 	%f75, %f74, %f4, %p13;
	fma.rn.ftz.f32 	%f90, %f73, %f75, %f75;
	@%p14 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f76, %f90;
	mov.f32 	%f77, 0f3F800000;
	sub.f32 	%f78, %f77, %f76;
	mov.b32 	%r58, %f78;
	mov.b32 	%r59, %f4;
	and.b32  	%r60, %r59, -2147483648;
	or.b32  	%r61, %r60, %r58;
	mov.b32 	%f90, %r61;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 58 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:58:20
	mul.f32 	%f79, %f3, 0f3F000000;
	.loc	1 63 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:63:20
	add.f32 	%f80, %f90, 0f3F800000;
	.loc	1 64 20                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:64:20
	mul.f32 	%f81, %f79, %f80;
	.loc	1 65 4                          // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:65:4
	bar.sync 	0;
	.loc	1 66 28                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:66:28
	mul.wide.s32 	%rd16, %r3, 4;
	add.s64 	%rd13, %rd2, %rd16;
	.loc	1 66 40                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:66:40
	setp.eq.s32 	%p19, %r2, 0;
	mov.b32 	%r62, %f2;
	and.pred  	%p16, %p19, %p1;
	// begin inline asm
	@%p16 st.global.b32 [ %rd13 + 0 ], { %r62 };
	// end inline asm
	.loc	1 67 28                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:67:28
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd14, %rd3, %rd17;
	.loc	1 67 48                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:67:48
	mov.b32 	%r63, %f81;
	// begin inline asm
	@%p1 st.global.b32 [ %rd14 + 0 ], { %r63 };
	// end inline asm
	.loc	1 68 25                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:68:25
	add.s64 	%rd15, %rd4, %rd16;
	.loc	1 68 37                         // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:68:37
	// begin inline asm
	@%p16 st.global.b32 [ %rd15 + 0 ], { %r65 };
	// end inline asm
	.loc	1 68 4                          // c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py:68:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7l/c7ltntlhgfybz6ztoxd3zqlgtlg3tmz44txmls6mivcm6xe7xhii.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 108
.b8 116
.b8 110
.b8 116
.b8 108
.b8 104
.b8 103
.b8 102
.b8 121
.b8 98
.b8 122
.b8 54
.b8 122
.b8 116
.b8 111
.b8 120
.b8 100
.b8 51
.b8 122
.b8 113
.b8 108
.b8 103
.b8 116
.b8 108
.b8 103
.b8 51
.b8 116
.b8 109
.b8 122
.b8 52
.b8 52
.b8 116
.b8 120
.b8 109
.b8 108
.b8 115
.b8 54
.b8 109
.b8 105
.b8 118
.b8 99
.b8 109
.b8 54
.b8 120
.b8 101
.b8 55
.b8 120
.b8 104
.b8 105
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
