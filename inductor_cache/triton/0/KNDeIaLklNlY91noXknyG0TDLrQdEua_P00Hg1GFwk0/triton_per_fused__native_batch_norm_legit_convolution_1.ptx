//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_1 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_1
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_1_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_1_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_1_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<61>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_convolution_1_param_0];
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_convolution_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd5, [triton_per_fused__native_batch_norm_legit_convolution_1_param_2];
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_convolution_1_param_3];
	.loc	1 26 34                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:26:34
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 15;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_convolution_1_param_4];
	.loc	1 31 19                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:31:19
	shr.s32 	%r27, %r1, 31;
	shr.u32 	%r28, %r27, 30;
	add.s32 	%r29, %r1, %r28;
	and.b32  	%r30, %r29, -4;
	sub.s32 	%r31, %r1, %r30;
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_convolution_1_param_5];
	.loc	1 32 42                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:32:42
	shl.b32 	%r32, %r1, 4;
	.loc	1 32 39                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:32:39
	or.b32  	%r33, %r32, %r26;
	.loc	1 32 34                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:32:34
	mul.wide.s32 	%rd15, %r33, 4;
	add.s64 	%rd1, %rd10, %rd15;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:33:30
	mul.wide.s32 	%rd16, %r31, 4;
	add.s64 	%rd3, %rd11, %rd16;
	.loc	1 33 35                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	mov.pred 	%p7, -1;
	.loc	1 34 19                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:34:19
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r8;
	.loc	1 36 18                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:36:18
	add.f32 	%f6, %f1, %f3;
	add.f32 	%f7, %f2, %f4;
	.loc	1 38 18                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:38:18
	setp.gt.f32 	%p12, %f6, 0f00000000;
	setp.gt.f32 	%p13, %f7, 0f00000000;
	.loc	1 39 18                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:39:18
	mul.f32 	%f8, %f6, %f5;
	mul.f32 	%f9, %f7, %f5;
	.loc	1 40 32                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:40:32
	selp.f32 	%f10, %f6, %f8, %p12;
	selp.f32 	%f11, %f7, %f9, %p13;
	.loc	1 44 35                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:44:35
	selp.f32 	%f12, %f10, 0f00000000, %p1;
	selp.f32 	%f13, %f11, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f12;
	shfl.sync.bfly.b32	%r35, %r34, 8, 31, -1;
	mov.b32 	%f14, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f12, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f15;
	shfl.sync.bfly.b32	%r37, %r36, 4, 31, -1;
	mov.b32 	%f16, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f17;
	shfl.sync.bfly.b32	%r39, %r38, 2, 31, -1;
	mov.b32 	%f18, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f19;
	shfl.sync.bfly.b32	%r41, %r40, 1, 31, -1;
	mov.b32 	%f20, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f13;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f22, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f13, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f23;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f24, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f25;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f26, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f27;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f28, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
$L__tmp2:
	.loc	1 48 20                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:48:20
	mov.b32 	%r10, %f21;
	mov.b32 	%r11, 1098907648;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f30, %r9;
	mov.b32 	%r13, %f29;
	// begin inline asm
	div.full.f32 %r24, %r13, %r11;
	// end inline asm
	mov.b32 	%f31, %r24;
	.loc	1 49 19                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:49:19
	sub.f32 	%f32, %f10, %f30;
	sub.f32 	%f33, %f11, %f31;
	.loc	1 50 20                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:50:20
	mul.f32 	%f34, %f32, %f32;
	mul.f32 	%f35, %f33, %f33;
	.loc	1 52 35                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:52:35
	selp.f32 	%f36, %f34, 0f00000000, %p1;
	selp.f32 	%f37, %f35, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f36;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f38, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f36, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f39;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f40, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f41;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f42, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f43;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f44, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f37;
	shfl.sync.bfly.b32	%r59, %r58, 8, 31, -1;
	mov.b32 	%f46, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f37, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f47;
	shfl.sync.bfly.b32	%r61, %r60, 4, 31, -1;
	mov.b32 	%f48, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f49;
	shfl.sync.bfly.b32	%r63, %r62, 2, 31, -1;
	mov.b32 	%f50, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f51;
	shfl.sync.bfly.b32	%r65, %r64, 1, 31, -1;
	mov.b32 	%f52, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
$L__tmp4:
	.loc	1 56 20                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:56:20
	mov.b32 	%r16, %f45;
	// begin inline asm
	div.full.f32 %r15, %r16, %r11;
	// end inline asm
	mov.b32 	%f54, %r15;
	mov.b32 	%r19, %f53;
	// begin inline asm
	div.full.f32 %r18, %r19, %r11;
	// end inline asm
	mov.b32 	%f55, %r18;
	.loc	1 58 20                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:58:20
	add.f32 	%f56, %f54, 0f3727C5AC;
	add.f32 	%f57, %f55, 0f3727C5AC;
	.loc	1 59 28                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:59:28
	rsqrt.approx.ftz.f32 	%f58, %f56;
	rsqrt.approx.ftz.f32 	%f59, %f57;
	.loc	1 60 20                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:60:20
	mul.f32 	%f60, %f32, %f58;
	.loc	1 61 47                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:61:47
	and.b32  	%r66, %r25, 48;
	setp.eq.s32 	%p14, %r66, 0;
	mov.b32 	%r21, %f6;
	and.pred  	%p8, %p14, %p1;
	// begin inline asm
	@%p8 st.global.b32 [ %rd1 + 0 ], { %r21 };
	// end inline asm
	.loc	1 62 25                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:62:25
	add.s64 	%rd7, %rd13, %rd15;
	.loc	1 62 45                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:62:45
	mov.b32 	%r22, %f60;
	// begin inline asm
	@%p8 st.global.b32 [ %rd7 + 0 ], { %r22 };
	// end inline asm
	.loc	1 63 25                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:63:25
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd8, %rd14, %rd17;
	.loc	1 63 37                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:63:37
	and.b32  	%r67, %r25, 63;
	setp.eq.s32 	%p15, %r67, 0;
	mov.b32 	%r23, %f59;
	and.pred  	%p10, %p15, %p1;
	// begin inline asm
	@%p10 st.global.b32 [ %rd8 + 0 ], { %r23 };
	// end inline asm
	.loc	1 64 25                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:64:25
	add.s64 	%rd9, %rd12, %rd17;
	.loc	1 64 37                         // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:64:37
	// begin inline asm
	@%p10 st.global.b32 [ %rd9 + 0 ], { %r24 };
	// end inline asm
	.loc	1 64 4                          // c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py:64:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6l/c6lwvhljscjri63nwgvqb2n4xegmr7fl57azlox76lqlpajmh5cf.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 224                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 108
.b8 119
.b8 118
.b8 104
.b8 108
.b8 106
.b8 115
.b8 99
.b8 106
.b8 114
.b8 105
.b8 54
.b8 51
.b8 110
.b8 119
.b8 103
.b8 118
.b8 113
.b8 98
.b8 50
.b8 110
.b8 52
.b8 120
.b8 101
.b8 103
.b8 109
.b8 114
.b8 55
.b8 102
.b8 108
.b8 53
.b8 55
.b8 97
.b8 122
.b8 108
.b8 111
.b8 120
.b8 55
.b8 54
.b8 108
.b8 113
.b8 108
.b8 112
.b8 97
.b8 106
.b8 109
.b8 104
.b8 53
.b8 99
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
