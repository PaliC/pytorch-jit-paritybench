; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 14, !dbg !12
  %9 = and i32 %7, 62, !dbg !12
  %10 = or disjoint i32 %5, %9, !dbg !13
  %11 = or disjoint i32 %8, %5, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = srem i32 %12, 16, !dbg !16
  %.lhs.trunc1 = trunc nsw i32 %16 to i8, !dbg !17
  %.lhs.trunc1.frozen = freeze i8 %.lhs.trunc1, !dbg !18
  %17 = sdiv i8 %.lhs.trunc1.frozen, 2, !dbg !18
  %18 = mul i8 %17, 2, !dbg !17
  %.decomposed5 = sub i8 %.lhs.trunc1.frozen, %18, !dbg !17
  %.sext2 = sext i8 %.decomposed5 to i32, !dbg !17
  %19 = shl nsw i32 %.sext2, 1, !dbg !19
  %.sext4 = sext i8 %17 to i32, !dbg !18
  %20 = shl nsw i32 %.decomposed, 2, !dbg !20
  %21 = shl nsw i32 %.sext4, 3, !dbg !20
  %22 = shl i32 %14, 6, !dbg !21
  %23 = add i32 %20, %22, !dbg !22
  %24 = add i32 %21, %22, !dbg !23
  %25 = add i32 %24, %19, !dbg !22
  %26 = sext i32 %23 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = sext i32 %25 to i64, !dbg !24
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %13) #1, !dbg !25
  %31 = bitcast i32 %30 to float, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %13) #1, !dbg !25
  %33 = bitcast i32 %32 to float, !dbg !25
  %34 = or disjoint i32 %20, 1, !dbg !26
  %35 = add i32 %34, %22, !dbg !27
  %36 = or disjoint i32 %24, 1, !dbg !26
  %37 = add i32 %36, %19, !dbg !27
  %38 = sext i32 %35 to i64, !dbg !28
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !28
  %40 = sext i32 %37 to i64, !dbg !28
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !28
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !29
  %43 = bitcast i32 %42 to float, !dbg !29
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %13) #1, !dbg !29
  %45 = bitcast i32 %44 to float, !dbg !29
  %46 = or disjoint i32 %20, 4, !dbg !30
  %47 = add i32 %46, %22, !dbg !31
  %48 = or disjoint i32 %24, 4, !dbg !30
  %49 = add i32 %48, %19, !dbg !31
  %50 = sext i32 %47 to i64, !dbg !32
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !32
  %52 = sext i32 %49 to i64, !dbg !32
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !32
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %13) #1, !dbg !33
  %55 = bitcast i32 %54 to float, !dbg !33
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %13) #1, !dbg !33
  %57 = bitcast i32 %56 to float, !dbg !33
  %58 = or disjoint i32 %20, 5, !dbg !34
  %59 = add i32 %58, %22, !dbg !35
  %60 = or disjoint i32 %24, 5, !dbg !34
  %61 = add i32 %60, %19, !dbg !35
  %62 = sext i32 %59 to i64, !dbg !36
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !36
  %64 = sext i32 %61 to i64, !dbg !36
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !36
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %13) #1, !dbg !37
  %67 = bitcast i32 %66 to float, !dbg !37
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %13) #1, !dbg !37
  %69 = bitcast i32 %68 to float, !dbg !37
  %70 = fadd float %31, %43, !dbg !38
  %71 = fadd float %33, %45, !dbg !38
  %72 = fadd float %70, %55, !dbg !39
  %73 = fadd float %71, %57, !dbg !39
  %74 = fadd float %72, %67, !dbg !40
  %75 = fadd float %73, %69, !dbg !40
  %76 = fmul float %74, 2.500000e-01, !dbg !41
  %77 = fmul float %75, 2.500000e-01, !dbg !41
  %78 = fcmp olt float %76, 0.000000e+00, !dbg !42
  %79 = fcmp olt float %77, 0.000000e+00, !dbg !42
  %80 = select i1 %78, float 0.000000e+00, float %76, !dbg !46
  %81 = select i1 %79, float 0.000000e+00, float %77, !dbg !46
  %82 = mul i32 %14, 84, !dbg !47
  %83 = add i32 %82, %.decomposed, !dbg !48
  %84 = sext i32 %83 to i64, !dbg !49
  %85 = getelementptr float, ptr addrspace(1) %1, i64 %84, !dbg !49
  %86 = bitcast float %80 to i32, !dbg !50
  %87 = bitcast float %81 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %86, i32 %87, ptr addrspace(1) %85, i1 %13) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c267cg5uawq6plual4zjv5fzukdmdtl3r5paanxzx6465oro6rbq.py", directory: "inductor_cache/26")
!4 = !{ptr @triton_poi_fused_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_1", linkageName: "triton_poi_fused_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 26, column: 54, scope: !7)
!19 = !DILocation(line: 26, column: 34, scope: !7)
!20 = !DILocation(line: 26, column: 48, scope: !7)
!21 = !DILocation(line: 26, column: 62, scope: !7)
!22 = !DILocation(line: 26, column: 59, scope: !7)
!23 = !DILocation(line: 26, column: 45, scope: !7)
!24 = !DILocation(line: 26, column: 30, scope: !7)
!25 = !DILocation(line: 26, column: 67, scope: !7)
!26 = !DILocation(line: 27, column: 49, scope: !7)
!27 = !DILocation(line: 27, column: 63, scope: !7)
!28 = !DILocation(line: 27, column: 30, scope: !7)
!29 = !DILocation(line: 27, column: 71, scope: !7)
!30 = !DILocation(line: 28, column: 49, scope: !7)
!31 = !DILocation(line: 28, column: 63, scope: !7)
!32 = !DILocation(line: 28, column: 30, scope: !7)
!33 = !DILocation(line: 28, column: 71, scope: !7)
!34 = !DILocation(line: 29, column: 49, scope: !7)
!35 = !DILocation(line: 29, column: 63, scope: !7)
!36 = !DILocation(line: 29, column: 30, scope: !7)
!37 = !DILocation(line: 29, column: 71, scope: !7)
!38 = !DILocation(line: 30, column: 18, scope: !7)
!39 = !DILocation(line: 31, column: 18, scope: !7)
!40 = !DILocation(line: 32, column: 18, scope: !7)
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !43, inlinedAt: !45)
!43 = distinct !DILexicalBlockFile(scope: !7, file: !44, discriminator: 0)
!44 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!45 = !DILocation(line: 36, column: 41, scope: !7)
!46 = !DILocation(line: 121, column: 29, scope: !43, inlinedAt: !45)
!47 = !DILocation(line: 37, column: 33, scope: !7)
!48 = !DILocation(line: 37, column: 30, scope: !7)
!49 = !DILocation(line: 37, column: 25, scope: !7)
!50 = !DILocation(line: 37, column: 45, scope: !7)
!51 = !DILocation(line: 37, column: 4, scope: !7)
