//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_31 // -- Begin function triton_poi_fused_avg_pool2d_31
                                        // @triton_poi_fused_avg_pool2d_31
.visible .entry triton_poi_fused_avg_pool2d_31(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_31_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_31_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_31_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:19:0

// %bb.0:
	ld.param.u64 	%rd17, [triton_poi_fused_avg_pool2d_31_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused_avg_pool2d_31_param_1];
$L__tmp0:
	.loc	1 21 28                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:21:33
	shl.b32 	%r46, %r1, 8;
	.loc	1 22 36                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:22:36
	mov.u32 	%r47, %tid.x;
	shl.b32 	%r48, %r47, 1;
	and.b32  	%r49, %r48, 254;
	.loc	1 22 23                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:22:23
	or.b32  	%r50, %r46, %r49;
	or.b32  	%r51, %r50, 1;
	.loc	1 24 21                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:24:21
	shr.s32 	%r52, %r50, 1;
	.loc	1 24 26                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:24:26
	bfe.u32 	%r53, %r1, 23, 1;
	add.s32 	%r54, %r52, %r53;
	and.b32  	%r55, %r54, -2;
	sub.s32 	%r56, %r52, %r55;
	.loc	1 25 19                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:25:19
	add.s32 	%r57, %r51, %r53;
	and.b32  	%r58, %r57, -2;
	sub.s32 	%r59, %r51, %r58;
	.loc	1 29 19                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:29:19
	setp.gt.s32 	%p5, %r56, 0;
	.loc	1 34 19                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:34:19
	setp.gt.s32 	%p35, %r59, 0;
	.loc	1 37 19                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:37:19
	and.pred  	%p3, %p35, %p5;
	.loc	1 38 38                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:38:38
	add.s32 	%r60, %r50, -3;
	add.s32 	%r61, %r50, -2;
	.loc	1 38 31                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:38:31
	mul.wide.s32 	%rd19, %r60, 4;
	add.s64 	%rd1, %rd17, %rd19;
	mul.wide.s32 	%rd20, %r61, 4;
	add.s64 	%rd2, %rd17, %rd20;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, 0;
	.loc	1 38 43                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:38:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 44 43                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:44:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p5 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	@!%p5 mov.u32 %r7, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 45 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:45:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 48 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:48:20
	setp.lt.s32 	%p36, %r59, 1;
	.loc	1 50 19                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:50:19
	and.pred  	%p10, %p36, %p5;
	.loc	1 51 38                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:51:38
	add.s32 	%r62, %r50, -1;
	.loc	1 51 31                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:51:31
	mul.wide.s32 	%rd21, %r62, 4;
	add.s64 	%rd4, %rd17, %rd21;
	mul.wide.s32 	%rd22, %r50, 4;
	add.s64 	%rd7, %rd17, %rd22;
	add.s64 	%rd9, %rd7, 4;
	.loc	1 51 43                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:51:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.b32 { %r10 }, [ %rd4 + 0 ];
	@!%p5 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f7, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p10 ld.global.b32 { %r12 }, [ %rd7 + 0 ];
	@!%p10 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f8, %r12;
	.loc	1 52 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:52:20
	add.f32 	%f9, %f5, %f7;
	add.f32 	%f10, %f6, %f8;
	.loc	1 54 21                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:54:21
	setp.gt.s32 	%p16, %r56, -1;
	.loc	1 57 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:57:20
	and.pred  	%p14, %p35, %p16;
	.loc	1 58 43                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:58:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f11, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p14 ld.global.b32 { %r16 }, [ %rd7 + 0 ];
	@!%p14 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f12, %r16;
	.loc	1 59 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:59:20
	add.f32 	%f13, %f9, %f11;
	add.f32 	%f14, %f10, %f12;
	.loc	1 61 36                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:61:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p16 ld.global.v2.b32 { %r18, %r19 }, [ %rd7 + 0 ];
	@!%p16 mov.u32 %r18, %r3;
	@!%p16 mov.u32 %r19, %r3;
	// end inline asm
	mov.b32 	%f15, %r18;
	mov.b32 	%f16, %r19;
	.loc	1 62 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:62:20
	add.f32 	%f17, %f13, %f15;
	add.f32 	%f18, %f14, %f16;
	.loc	1 63 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:63:20
	and.pred  	%p21, %p36, %p16;
	.loc	1 64 35                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:64:35
	add.s32 	%r63, %r50, 2;
	.loc	1 64 31                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:64:31
	mul.wide.s32 	%rd23, %r63, 4;
	add.s64 	%rd10, %rd17, %rd23;
	.loc	1 64 40                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:64:40
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p16 ld.global.b32 { %r22 }, [ %rd9 + 0 ];
	@!%p16 mov.u32 %r22, %r3;
	// end inline asm
	mov.b32 	%f19, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p21 ld.global.b32 { %r24 }, [ %rd10 + 0 ];
	@!%p21 mov.u32 %r24, %r3;
	// end inline asm
	mov.b32 	%f20, %r24;
	.loc	1 65 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:65:20
	add.f32 	%f21, %f17, %f19;
	add.f32 	%f22, %f18, %f20;
	.loc	1 68 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:68:20
	setp.lt.s32 	%p27, %r56, 1;
	.loc	1 70 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:70:20
	and.pred  	%p25, %p35, %p27;
	.loc	1 71 40                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:71:40
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.b32 { %r26 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r26, %r3;
	// end inline asm
	mov.b32 	%f23, %r26;
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p25 ld.global.b32 { %r28 }, [ %rd10 + 0 ];
	@!%p25 mov.u32 %r28, %r3;
	// end inline asm
	mov.b32 	%f24, %r28;
	.loc	1 72 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:72:20
	add.f32 	%f25, %f21, %f23;
	add.f32 	%f26, %f22, %f24;
	.loc	1 74 40                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:74:40
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p27 ld.global.v2.b32 { %r30, %r31 }, [ %rd10 + 0 ];
	@!%p27 mov.u32 %r30, %r3;
	@!%p27 mov.u32 %r31, %r3;
	// end inline asm
	mov.b32 	%f27, %r30;
	mov.b32 	%f28, %r31;
	.loc	1 75 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:75:20
	add.f32 	%f29, %f25, %f27;
	add.f32 	%f30, %f26, %f28;
	.loc	1 76 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:76:20
	and.pred  	%p32, %p36, %p27;
	.loc	1 77 35                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:77:35
	add.s32 	%r64, %r50, 3;
	add.s32 	%r65, %r50, 4;
	.loc	1 77 31                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:77:31
	mul.wide.s32 	%rd24, %r64, 4;
	add.s64 	%rd14, %rd17, %rd24;
	mul.wide.s32 	%rd25, %r65, 4;
	add.s64 	%rd15, %rd17, %rd25;
	.loc	1 77 40                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:77:40
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p27 ld.global.b32 { %r34 }, [ %rd14 + 0 ];
	@!%p27 mov.u32 %r34, %r3;
	// end inline asm
	mov.b32 	%f31, %r34;
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p32 ld.global.b32 { %r36 }, [ %rd15 + 0 ];
	@!%p32 mov.u32 %r36, %r3;
	// end inline asm
	mov.b32 	%f32, %r36;
	.loc	1 78 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:78:20
	add.f32 	%f33, %f29, %f31;
	add.f32 	%f34, %f30, %f32;
	.loc	1 80 20                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:80:20
	mov.b32 	%r39, %f33;
	mov.b32 	%r40, 1082130432;
	// begin inline asm
	div.full.f32 %r44, %r39, %r40;
	// end inline asm
	mov.b32 	%r42, %f34;
	// begin inline asm
	div.full.f32 %r45, %r42, %r40;
	// end inline asm
	.loc	1 81 25                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:81:25
	add.s64 	%rd16, %rd18, %rd22;
	mov.pred 	%p34, -1;
	.loc	1 81 37                         // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:81:37
	// begin inline asm
	@%p34 st.global.v2.b32 [ %rd16 + 0 ], { %r44, %r45 };
	// end inline asm
	.loc	1 81 4                          // clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py:81:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ly/clyt6ljigsdiq4bommvvmkdn57edhm6hdkynyaduxcxdlc4de33s.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 121
.b8 116
.b8 54
.b8 108
.b8 106
.b8 105
.b8 103
.b8 115
.b8 100
.b8 105
.b8 113
.b8 52
.b8 98
.b8 111
.b8 109
.b8 109
.b8 118
.b8 118
.b8 109
.b8 107
.b8 100
.b8 110
.b8 53
.b8 55
.b8 101
.b8 100
.b8 104
.b8 109
.b8 54
.b8 104
.b8 100
.b8 107
.b8 121
.b8 110
.b8 121
.b8 97
.b8 100
.b8 117
.b8 120
.b8 99
.b8 120
.b8 100
.b8 108
.b8 99
.b8 52
.b8 100
.b8 101
.b8 51
.b8 51
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
