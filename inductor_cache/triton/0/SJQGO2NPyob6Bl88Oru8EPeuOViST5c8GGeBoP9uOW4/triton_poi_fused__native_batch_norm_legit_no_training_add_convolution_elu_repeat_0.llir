; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 10, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 2, !dbg !12
  %14 = and i32 %13, 508, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = or disjoint i32 %15, 512, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %17 = sdiv i32 %.frozen, 262144, !dbg !14
  %.frozen238 = freeze i32 %16, !dbg !14
  %18 = sdiv i32 %.frozen238, 262144, !dbg !14
  %.lhs.trunc = trunc nsw i32 %17 to i16, !dbg !15
  %19 = srem i16 %.lhs.trunc, 16, !dbg !15
  %.lhs.trunc229 = trunc nsw i32 %18 to i16, !dbg !15
  %20 = srem i16 %.lhs.trunc229, 16, !dbg !15
  %21 = mul i32 %17, 262144, !dbg !16
  %.decomposed = sub i32 %.frozen, %21, !dbg !16
  %22 = mul i32 %18, 262144, !dbg !16
  %.decomposed239 = sub i32 %.frozen238, %22, !dbg !16
  %23 = sdiv i32 %15, 4194304, !dbg !17
  %24 = sdiv i32 %16, 4194304, !dbg !17
  %25 = sext i32 %15 to i64, !dbg !18
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !18
  %27 = sext i32 %16 to i64, !dbg !18
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !18
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !19
  %30 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !19
  %31 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !19
  %32 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !19
  %33 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !19
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !19
  %35 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !19
  %36 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !19
  %37 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !19
  %38 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !19
  %39 = sext i16 %19 to i64, !dbg !20
  %40 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !20
  %41 = sext i16 %20 to i64, !dbg !20
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !20
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !21
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !21
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !21
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !21
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !21
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !21
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !21
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !21
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %39, !dbg !22
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %41, !dbg !22
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #3, !dbg !23
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #3, !dbg !23
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #3, !dbg !23
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #3, !dbg !23
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !23
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !23
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !23
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #3, !dbg !23
  %61 = getelementptr float, ptr addrspace(1) %4, i64 %39, !dbg !24
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %41, !dbg !24
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #3, !dbg !25
  %64 = bitcast i32 %63 to float, !dbg !25
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #3, !dbg !25
  %66 = bitcast i32 %65 to float, !dbg !25
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #3, !dbg !25
  %68 = bitcast i32 %67 to float, !dbg !25
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #3, !dbg !25
  %70 = bitcast i32 %69 to float, !dbg !25
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !25
  %72 = bitcast i32 %71 to float, !dbg !25
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !25
  %74 = bitcast i32 %73 to float, !dbg !25
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !25
  %76 = bitcast i32 %75 to float, !dbg !25
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !25
  %78 = bitcast i32 %77 to float, !dbg !25
  %79 = getelementptr float, ptr addrspace(1) %5, i64 %39, !dbg !26
  %80 = getelementptr float, ptr addrspace(1) %5, i64 %41, !dbg !26
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #3, !dbg !27
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #3, !dbg !27
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #3, !dbg !27
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #3, !dbg !27
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 true) #3, !dbg !27
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 true) #3, !dbg !27
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 true) #3, !dbg !27
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 true) #3, !dbg !27
  %89 = insertelement <8 x i32> poison, i32 %88, i64 0, !dbg !27
  %90 = insertelement <8 x i32> %89, i32 %81, i64 1, !dbg !27
  %91 = insertelement <8 x i32> %90, i32 %82, i64 2, !dbg !27
  %92 = insertelement <8 x i32> %91, i32 %83, i64 3, !dbg !27
  %93 = insertelement <8 x i32> %92, i32 %84, i64 4, !dbg !27
  %94 = insertelement <8 x i32> %93, i32 %85, i64 5, !dbg !27
  %95 = insertelement <8 x i32> %94, i32 %86, i64 6, !dbg !27
  %96 = insertelement <8 x i32> %95, i32 %87, i64 7, !dbg !27
  %97 = bitcast <8 x i32> %96 to <8 x float>, !dbg !27
  %98 = getelementptr float, ptr addrspace(1) %6, i64 %39, !dbg !28
  %99 = getelementptr float, ptr addrspace(1) %6, i64 %41, !dbg !28
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %98, i1 true) #3, !dbg !29
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %98, i1 true) #3, !dbg !29
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %98, i1 true) #3, !dbg !29
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %98, i1 true) #3, !dbg !29
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 true) #3, !dbg !29
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 true) #3, !dbg !29
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 true) #3, !dbg !29
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 true) #3, !dbg !29
  %108 = insertelement <8 x i32> poison, i32 %107, i64 0, !dbg !29
  %109 = insertelement <8 x i32> %108, i32 %100, i64 1, !dbg !29
  %110 = insertelement <8 x i32> %109, i32 %101, i64 2, !dbg !29
  %111 = insertelement <8 x i32> %110, i32 %102, i64 3, !dbg !29
  %112 = insertelement <8 x i32> %111, i32 %103, i64 4, !dbg !29
  %113 = insertelement <8 x i32> %112, i32 %104, i64 5, !dbg !29
  %114 = insertelement <8 x i32> %113, i32 %105, i64 6, !dbg !29
  %115 = insertelement <8 x i32> %114, i32 %106, i64 7, !dbg !29
  %116 = bitcast <8 x i32> %115 to <8 x float>, !dbg !29
  %117 = shl nsw i32 %23, 18, !dbg !30
  %118 = shl nsw i32 %24, 18, !dbg !30
  %119 = add nsw i32 %117, %.decomposed, !dbg !31
  %120 = add nsw i32 %118, %.decomposed239, !dbg !31
  %121 = sext i32 %119 to i64, !dbg !32
  %122 = getelementptr float, ptr addrspace(1) %7, i64 %121, !dbg !32
  %123 = sext i32 %120 to i64, !dbg !32
  %124 = getelementptr float, ptr addrspace(1) %7, i64 %123, !dbg !32
  %125 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %122, i1 true) #3, !dbg !33
  %126 = extractvalue { i32, i32, i32, i32 } %125, 0, !dbg !33
  %127 = extractvalue { i32, i32, i32, i32 } %125, 1, !dbg !33
  %128 = extractvalue { i32, i32, i32, i32 } %125, 2, !dbg !33
  %129 = extractvalue { i32, i32, i32, i32 } %125, 3, !dbg !33
  %130 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %124, i1 true) #3, !dbg !33
  %131 = extractvalue { i32, i32, i32, i32 } %130, 0, !dbg !33
  %132 = extractvalue { i32, i32, i32, i32 } %130, 1, !dbg !33
  %133 = extractvalue { i32, i32, i32, i32 } %130, 2, !dbg !33
  %134 = extractvalue { i32, i32, i32, i32 } %130, 3, !dbg !33
  %135 = insertelement <8 x i32> poison, i32 %134, i64 0, !dbg !33
  %136 = insertelement <8 x i32> %135, i32 %126, i64 1, !dbg !33
  %137 = insertelement <8 x i32> %136, i32 %127, i64 2, !dbg !33
  %138 = insertelement <8 x i32> %137, i32 %128, i64 3, !dbg !33
  %139 = insertelement <8 x i32> %138, i32 %129, i64 4, !dbg !33
  %140 = insertelement <8 x i32> %139, i32 %131, i64 5, !dbg !33
  %141 = insertelement <8 x i32> %140, i32 %132, i64 6, !dbg !33
  %142 = insertelement <8 x i32> %141, i32 %133, i64 7, !dbg !33
  %143 = bitcast <8 x i32> %142 to <8 x float>, !dbg !33
  %144 = insertelement <8 x i32> poison, i32 %38, i64 0, !dbg !19
  %145 = insertelement <8 x i32> %144, i32 %30, i64 1, !dbg !19
  %146 = insertelement <8 x i32> %145, i32 %31, i64 2, !dbg !19
  %147 = insertelement <8 x i32> %146, i32 %32, i64 3, !dbg !19
  %148 = insertelement <8 x i32> %147, i32 %33, i64 4, !dbg !19
  %149 = insertelement <8 x i32> %148, i32 %35, i64 5, !dbg !19
  %150 = insertelement <8 x i32> %149, i32 %36, i64 6, !dbg !19
  %151 = insertelement <8 x i32> %150, i32 %37, i64 7, !dbg !19
  %152 = bitcast <8 x i32> %151 to <8 x float>, !dbg !19
  %153 = insertelement <8 x i32> poison, i32 %50, i64 0, !dbg !21
  %154 = insertelement <8 x i32> %153, i32 %43, i64 1, !dbg !21
  %155 = insertelement <8 x i32> %154, i32 %44, i64 2, !dbg !21
  %156 = insertelement <8 x i32> %155, i32 %45, i64 3, !dbg !21
  %157 = insertelement <8 x i32> %156, i32 %46, i64 4, !dbg !21
  %158 = insertelement <8 x i32> %157, i32 %47, i64 5, !dbg !21
  %159 = insertelement <8 x i32> %158, i32 %48, i64 6, !dbg !21
  %160 = insertelement <8 x i32> %159, i32 %49, i64 7, !dbg !21
  %161 = bitcast <8 x i32> %160 to <8 x float>, !dbg !21
  %162 = insertelement <8 x i32> poison, i32 %60, i64 0, !dbg !23
  %163 = insertelement <8 x i32> %162, i32 %53, i64 1, !dbg !23
  %164 = insertelement <8 x i32> %163, i32 %54, i64 2, !dbg !23
  %165 = insertelement <8 x i32> %164, i32 %55, i64 3, !dbg !23
  %166 = insertelement <8 x i32> %165, i32 %56, i64 4, !dbg !23
  %167 = insertelement <8 x i32> %166, i32 %57, i64 5, !dbg !23
  %168 = insertelement <8 x i32> %167, i32 %58, i64 6, !dbg !23
  %169 = insertelement <8 x i32> %168, i32 %59, i64 7, !dbg !23
  %170 = bitcast <8 x i32> %169 to <8 x float>, !dbg !23
  %171 = fadd <8 x float> %152, %161, !dbg !34
  %172 = fsub <8 x float> %171, %170, !dbg !35
  %173 = fadd float %64, 0x3EE4F8B580000000, !dbg !36
  %174 = fadd float %66, 0x3EE4F8B580000000, !dbg !36
  %175 = fadd float %68, 0x3EE4F8B580000000, !dbg !36
  %176 = fadd float %70, 0x3EE4F8B580000000, !dbg !36
  %177 = fadd float %72, 0x3EE4F8B580000000, !dbg !36
  %178 = fadd float %74, 0x3EE4F8B580000000, !dbg !36
  %179 = fadd float %76, 0x3EE4F8B580000000, !dbg !36
  %180 = fadd float %78, 0x3EE4F8B580000000, !dbg !36
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i = icmp eq i32 %181, 0, !dbg !37
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i = icmp eq i32 %182, 0, !dbg !37
  br i1 %.not.i, label %188, label %183, !dbg !37

183:                                              ; preds = %9
  br i1 %.not1.i, label %186, label %184, !dbg !37

184:                                              ; preds = %183
  %185 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %173) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

186:                                              ; preds = %183
  %187 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %173) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

188:                                              ; preds = %9
  br i1 %.not1.i, label %191, label %189, !dbg !37

189:                                              ; preds = %188
  %190 = tail call float @llvm.nvvm.sqrt.rn.f(float %173) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

191:                                              ; preds = %188
  %192 = tail call float @llvm.nvvm.sqrt.approx.f(float %173) #3, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

__nv_sqrtf.exit:                                  ; preds = %184, %186, %189, %191
  %.0.i = phi float [ %185, %184 ], [ %187, %186 ], [ %190, %189 ], [ %192, %191 ], !dbg !37
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i1 = icmp eq i32 %193, 0, !dbg !37
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i4 = icmp eq i32 %194, 0, !dbg !37
  br i1 %.not.i1, label %200, label %195, !dbg !37

195:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %198, label %196, !dbg !37

196:                                              ; preds = %195
  %197 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %174) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

198:                                              ; preds = %195
  %199 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %174) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

200:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %203, label %201, !dbg !37

201:                                              ; preds = %200
  %202 = tail call float @llvm.nvvm.sqrt.rn.f(float %174) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

203:                                              ; preds = %200
  %204 = tail call float @llvm.nvvm.sqrt.approx.f(float %174) #3, !dbg !37
  br label %__nv_sqrtf.exit5, !dbg !37

__nv_sqrtf.exit5:                                 ; preds = %196, %198, %201, %203
  %.0.i3 = phi float [ %197, %196 ], [ %199, %198 ], [ %202, %201 ], [ %204, %203 ], !dbg !37
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i6 = icmp eq i32 %205, 0, !dbg !37
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i9 = icmp eq i32 %206, 0, !dbg !37
  br i1 %.not.i6, label %212, label %207, !dbg !37

207:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %210, label %208, !dbg !37

208:                                              ; preds = %207
  %209 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %175) #3, !dbg !37
  br label %__nv_sqrtf.exit10, !dbg !37

210:                                              ; preds = %207
  %211 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %175) #3, !dbg !37
  br label %__nv_sqrtf.exit10, !dbg !37

212:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %215, label %213, !dbg !37

213:                                              ; preds = %212
  %214 = tail call float @llvm.nvvm.sqrt.rn.f(float %175) #3, !dbg !37
  br label %__nv_sqrtf.exit10, !dbg !37

215:                                              ; preds = %212
  %216 = tail call float @llvm.nvvm.sqrt.approx.f(float %175) #3, !dbg !37
  br label %__nv_sqrtf.exit10, !dbg !37

__nv_sqrtf.exit10:                                ; preds = %208, %210, %213, %215
  %.0.i8 = phi float [ %209, %208 ], [ %211, %210 ], [ %214, %213 ], [ %216, %215 ], !dbg !37
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i11 = icmp eq i32 %217, 0, !dbg !37
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i14 = icmp eq i32 %218, 0, !dbg !37
  br i1 %.not.i11, label %224, label %219, !dbg !37

219:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %222, label %220, !dbg !37

220:                                              ; preds = %219
  %221 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %176) #3, !dbg !37
  br label %__nv_sqrtf.exit15, !dbg !37

222:                                              ; preds = %219
  %223 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %176) #3, !dbg !37
  br label %__nv_sqrtf.exit15, !dbg !37

224:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %227, label %225, !dbg !37

225:                                              ; preds = %224
  %226 = tail call float @llvm.nvvm.sqrt.rn.f(float %176) #3, !dbg !37
  br label %__nv_sqrtf.exit15, !dbg !37

227:                                              ; preds = %224
  %228 = tail call float @llvm.nvvm.sqrt.approx.f(float %176) #3, !dbg !37
  br label %__nv_sqrtf.exit15, !dbg !37

__nv_sqrtf.exit15:                                ; preds = %220, %222, %225, %227
  %.0.i13 = phi float [ %221, %220 ], [ %223, %222 ], [ %226, %225 ], [ %228, %227 ], !dbg !37
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i16 = icmp eq i32 %229, 0, !dbg !37
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i19 = icmp eq i32 %230, 0, !dbg !37
  br i1 %.not.i16, label %236, label %231, !dbg !37

231:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %234, label %232, !dbg !37

232:                                              ; preds = %231
  %233 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %177) #3, !dbg !37
  br label %__nv_sqrtf.exit20, !dbg !37

234:                                              ; preds = %231
  %235 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %177) #3, !dbg !37
  br label %__nv_sqrtf.exit20, !dbg !37

236:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %239, label %237, !dbg !37

237:                                              ; preds = %236
  %238 = tail call float @llvm.nvvm.sqrt.rn.f(float %177) #3, !dbg !37
  br label %__nv_sqrtf.exit20, !dbg !37

239:                                              ; preds = %236
  %240 = tail call float @llvm.nvvm.sqrt.approx.f(float %177) #3, !dbg !37
  br label %__nv_sqrtf.exit20, !dbg !37

__nv_sqrtf.exit20:                                ; preds = %232, %234, %237, %239
  %.0.i18 = phi float [ %233, %232 ], [ %235, %234 ], [ %238, %237 ], [ %240, %239 ], !dbg !37
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i21 = icmp eq i32 %241, 0, !dbg !37
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i24 = icmp eq i32 %242, 0, !dbg !37
  br i1 %.not.i21, label %248, label %243, !dbg !37

243:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %246, label %244, !dbg !37

244:                                              ; preds = %243
  %245 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %178) #3, !dbg !37
  br label %__nv_sqrtf.exit25, !dbg !37

246:                                              ; preds = %243
  %247 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %178) #3, !dbg !37
  br label %__nv_sqrtf.exit25, !dbg !37

248:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %251, label %249, !dbg !37

249:                                              ; preds = %248
  %250 = tail call float @llvm.nvvm.sqrt.rn.f(float %178) #3, !dbg !37
  br label %__nv_sqrtf.exit25, !dbg !37

251:                                              ; preds = %248
  %252 = tail call float @llvm.nvvm.sqrt.approx.f(float %178) #3, !dbg !37
  br label %__nv_sqrtf.exit25, !dbg !37

__nv_sqrtf.exit25:                                ; preds = %244, %246, %249, %251
  %.0.i23 = phi float [ %245, %244 ], [ %247, %246 ], [ %250, %249 ], [ %252, %251 ], !dbg !37
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i26 = icmp eq i32 %253, 0, !dbg !37
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i29 = icmp eq i32 %254, 0, !dbg !37
  br i1 %.not.i26, label %260, label %255, !dbg !37

255:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %258, label %256, !dbg !37

256:                                              ; preds = %255
  %257 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %179) #3, !dbg !37
  br label %__nv_sqrtf.exit30, !dbg !37

258:                                              ; preds = %255
  %259 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %179) #3, !dbg !37
  br label %__nv_sqrtf.exit30, !dbg !37

260:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %263, label %261, !dbg !37

261:                                              ; preds = %260
  %262 = tail call float @llvm.nvvm.sqrt.rn.f(float %179) #3, !dbg !37
  br label %__nv_sqrtf.exit30, !dbg !37

263:                                              ; preds = %260
  %264 = tail call float @llvm.nvvm.sqrt.approx.f(float %179) #3, !dbg !37
  br label %__nv_sqrtf.exit30, !dbg !37

__nv_sqrtf.exit30:                                ; preds = %256, %258, %261, %263
  %.0.i28 = phi float [ %257, %256 ], [ %259, %258 ], [ %262, %261 ], [ %264, %263 ], !dbg !37
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i31 = icmp eq i32 %265, 0, !dbg !37
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !37
  %.not1.i34 = icmp eq i32 %266, 0, !dbg !37
  br i1 %.not.i31, label %272, label %267, !dbg !37

267:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %270, label %268, !dbg !37

268:                                              ; preds = %267
  %269 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %180) #3, !dbg !37
  br label %__nv_sqrtf.exit35, !dbg !37

270:                                              ; preds = %267
  %271 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %180) #3, !dbg !37
  br label %__nv_sqrtf.exit35, !dbg !37

272:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %275, label %273, !dbg !37

273:                                              ; preds = %272
  %274 = tail call float @llvm.nvvm.sqrt.rn.f(float %180) #3, !dbg !37
  br label %__nv_sqrtf.exit35, !dbg !37

275:                                              ; preds = %272
  %276 = tail call float @llvm.nvvm.sqrt.approx.f(float %180) #3, !dbg !37
  br label %__nv_sqrtf.exit35, !dbg !37

__nv_sqrtf.exit35:                                ; preds = %268, %270, %273, %275
  %.0.i33 = phi float [ %269, %268 ], [ %271, %270 ], [ %274, %273 ], [ %276, %275 ], !dbg !37
  %277 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !38
  %278 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !38
  %279 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !38
  %280 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !38
  %281 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !38
  %282 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !38
  %283 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !38
  %284 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !38
  %285 = insertelement <8 x float> poison, float %284, i64 0, !dbg !39
  %286 = insertelement <8 x float> %285, float %277, i64 1, !dbg !39
  %287 = insertelement <8 x float> %286, float %278, i64 2, !dbg !39
  %288 = insertelement <8 x float> %287, float %279, i64 3, !dbg !39
  %289 = insertelement <8 x float> %288, float %280, i64 4, !dbg !39
  %290 = insertelement <8 x float> %289, float %281, i64 5, !dbg !39
  %291 = insertelement <8 x float> %290, float %282, i64 6, !dbg !39
  %292 = insertelement <8 x float> %291, float %283, i64 7, !dbg !39
  %293 = fmul <8 x float> %172, %292, !dbg !39
  %294 = fmul <8 x float> %293, %97, !dbg !40
  %295 = fadd <8 x float> %294, %116, !dbg !41
  %296 = fadd <8 x float> %295, %143, !dbg !42
  %297 = extractelement <8 x float> %296, i64 1, !dbg !43
  %298 = fmul float %297, 0x3FF7154760000000, !dbg !43
  %299 = tail call float @llvm.nvvm.round.f(float %298) #3, !dbg !43
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i36 = icmp eq i32 %300, 0, !dbg !43
  %301 = tail call float @llvm.nvvm.fabs.ftz.f(float %297) #3, !dbg !43
  %302 = tail call float @llvm.nvvm.fabs.f(float %297) #3, !dbg !43
  %.03.i = select i1 %.not.i36, float %302, float %301, !dbg !43
  %303 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i = select i1 %303, float 0.000000e+00, float %299, !dbg !43
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %306 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !43
  %j.0.i = select i1 %306, float 1.270000e+02, float %t.0.i, !dbg !43
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i = icmp eq i32 %312, 0, !dbg !43
  br i1 %.not8.i, label %315, label %313, !dbg !43

313:                                              ; preds = %__nv_sqrtf.exit35
  %314 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

315:                                              ; preds = %__nv_sqrtf.exit35
  %316 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !43
  br label %__nv_expm1f.exit, !dbg !43

__nv_expm1f.exit:                                 ; preds = %313, %315
  %.0.i37 = phi float [ %314, %313 ], [ %316, %315 ], !dbg !43
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %318 = extractelement <8 x float> %296, i64 2, !dbg !43
  %319 = fmul float %318, 0x3FF7154760000000, !dbg !43
  %320 = tail call float @llvm.nvvm.round.f(float %319) #3, !dbg !43
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i40 = icmp eq i32 %321, 0, !dbg !43
  %322 = tail call float @llvm.nvvm.fabs.ftz.f(float %318) #3, !dbg !43
  %323 = tail call float @llvm.nvvm.fabs.f(float %318) #3, !dbg !43
  %.03.i41 = select i1 %.not.i40, float %323, float %322, !dbg !43
  %324 = fcmp olt float %.03.i41, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i42 = select i1 %324, float 0.000000e+00, float %320, !dbg !43
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %327 = fcmp oeq float %t.0.i42, 1.280000e+02, !dbg !43
  %j.0.i43 = select i1 %327, float 1.270000e+02, float %t.0.i42, !dbg !43
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i44 = icmp eq i32 %333, 0, !dbg !43
  br i1 %.not8.i44, label %336, label %334, !dbg !43

334:                                              ; preds = %__nv_expm1f.exit
  %335 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i43) #3, !dbg !43
  br label %__nv_expm1f.exit66, !dbg !43

336:                                              ; preds = %__nv_expm1f.exit
  %337 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i43) #3, !dbg !43
  br label %__nv_expm1f.exit66, !dbg !43

__nv_expm1f.exit66:                               ; preds = %334, %336
  %.0.i45 = phi float [ %335, %334 ], [ %337, %336 ], !dbg !43
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %339 = extractelement <8 x float> %296, i64 3, !dbg !43
  %340 = fmul float %339, 0x3FF7154760000000, !dbg !43
  %341 = tail call float @llvm.nvvm.round.f(float %340) #3, !dbg !43
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i67 = icmp eq i32 %342, 0, !dbg !43
  %343 = tail call float @llvm.nvvm.fabs.ftz.f(float %339) #3, !dbg !43
  %344 = tail call float @llvm.nvvm.fabs.f(float %339) #3, !dbg !43
  %.03.i68 = select i1 %.not.i67, float %344, float %343, !dbg !43
  %345 = fcmp olt float %.03.i68, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i69 = select i1 %345, float 0.000000e+00, float %341, !dbg !43
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %348 = fcmp oeq float %t.0.i69, 1.280000e+02, !dbg !43
  %j.0.i70 = select i1 %348, float 1.270000e+02, float %t.0.i69, !dbg !43
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i71 = icmp eq i32 %354, 0, !dbg !43
  br i1 %.not8.i71, label %357, label %355, !dbg !43

355:                                              ; preds = %__nv_expm1f.exit66
  %356 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i70) #3, !dbg !43
  br label %__nv_expm1f.exit93, !dbg !43

357:                                              ; preds = %__nv_expm1f.exit66
  %358 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i70) #3, !dbg !43
  br label %__nv_expm1f.exit93, !dbg !43

__nv_expm1f.exit93:                               ; preds = %355, %357
  %.0.i72 = phi float [ %356, %355 ], [ %358, %357 ], !dbg !43
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %360 = extractelement <8 x float> %296, i64 4, !dbg !43
  %361 = fmul float %360, 0x3FF7154760000000, !dbg !43
  %362 = tail call float @llvm.nvvm.round.f(float %361) #3, !dbg !43
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i94 = icmp eq i32 %363, 0, !dbg !43
  %364 = tail call float @llvm.nvvm.fabs.ftz.f(float %360) #3, !dbg !43
  %365 = tail call float @llvm.nvvm.fabs.f(float %360) #3, !dbg !43
  %.03.i95 = select i1 %.not.i94, float %365, float %364, !dbg !43
  %366 = fcmp olt float %.03.i95, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i96 = select i1 %366, float 0.000000e+00, float %362, !dbg !43
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %369 = fcmp oeq float %t.0.i96, 1.280000e+02, !dbg !43
  %j.0.i97 = select i1 %369, float 1.270000e+02, float %t.0.i96, !dbg !43
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i98 = icmp eq i32 %375, 0, !dbg !43
  br i1 %.not8.i98, label %378, label %376, !dbg !43

376:                                              ; preds = %__nv_expm1f.exit93
  %377 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i97) #3, !dbg !43
  br label %__nv_expm1f.exit120, !dbg !43

378:                                              ; preds = %__nv_expm1f.exit93
  %379 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i97) #3, !dbg !43
  br label %__nv_expm1f.exit120, !dbg !43

__nv_expm1f.exit120:                              ; preds = %376, %378
  %.0.i99 = phi float [ %377, %376 ], [ %379, %378 ], !dbg !43
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %381 = extractelement <8 x float> %296, i64 5, !dbg !43
  %382 = fmul float %381, 0x3FF7154760000000, !dbg !43
  %383 = tail call float @llvm.nvvm.round.f(float %382) #3, !dbg !43
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i121 = icmp eq i32 %384, 0, !dbg !43
  %385 = tail call float @llvm.nvvm.fabs.ftz.f(float %381) #3, !dbg !43
  %386 = tail call float @llvm.nvvm.fabs.f(float %381) #3, !dbg !43
  %.03.i122 = select i1 %.not.i121, float %386, float %385, !dbg !43
  %387 = fcmp olt float %.03.i122, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i123 = select i1 %387, float 0.000000e+00, float %383, !dbg !43
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %390 = fcmp oeq float %t.0.i123, 1.280000e+02, !dbg !43
  %j.0.i124 = select i1 %390, float 1.270000e+02, float %t.0.i123, !dbg !43
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i125 = icmp eq i32 %396, 0, !dbg !43
  br i1 %.not8.i125, label %399, label %397, !dbg !43

397:                                              ; preds = %__nv_expm1f.exit120
  %398 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i124) #3, !dbg !43
  br label %__nv_expm1f.exit147, !dbg !43

399:                                              ; preds = %__nv_expm1f.exit120
  %400 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i124) #3, !dbg !43
  br label %__nv_expm1f.exit147, !dbg !43

__nv_expm1f.exit147:                              ; preds = %397, %399
  %.0.i126 = phi float [ %398, %397 ], [ %400, %399 ], !dbg !43
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %402 = extractelement <8 x float> %296, i64 6, !dbg !43
  %403 = fmul float %402, 0x3FF7154760000000, !dbg !43
  %404 = tail call float @llvm.nvvm.round.f(float %403) #3, !dbg !43
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i148 = icmp eq i32 %405, 0, !dbg !43
  %406 = tail call float @llvm.nvvm.fabs.ftz.f(float %402) #3, !dbg !43
  %407 = tail call float @llvm.nvvm.fabs.f(float %402) #3, !dbg !43
  %.03.i149 = select i1 %.not.i148, float %407, float %406, !dbg !43
  %408 = fcmp olt float %.03.i149, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i150 = select i1 %408, float 0.000000e+00, float %404, !dbg !43
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %411 = fcmp oeq float %t.0.i150, 1.280000e+02, !dbg !43
  %j.0.i151 = select i1 %411, float 1.270000e+02, float %t.0.i150, !dbg !43
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i152 = icmp eq i32 %417, 0, !dbg !43
  br i1 %.not8.i152, label %420, label %418, !dbg !43

418:                                              ; preds = %__nv_expm1f.exit147
  %419 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i151) #3, !dbg !43
  br label %__nv_expm1f.exit174, !dbg !43

420:                                              ; preds = %__nv_expm1f.exit147
  %421 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i151) #3, !dbg !43
  br label %__nv_expm1f.exit174, !dbg !43

__nv_expm1f.exit174:                              ; preds = %418, %420
  %.0.i153 = phi float [ %419, %418 ], [ %421, %420 ], !dbg !43
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %423 = extractelement <8 x float> %296, i64 7, !dbg !43
  %424 = fmul float %423, 0x3FF7154760000000, !dbg !43
  %425 = tail call float @llvm.nvvm.round.f(float %424) #3, !dbg !43
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i175 = icmp eq i32 %426, 0, !dbg !43
  %427 = tail call float @llvm.nvvm.fabs.ftz.f(float %423) #3, !dbg !43
  %428 = tail call float @llvm.nvvm.fabs.f(float %423) #3, !dbg !43
  %.03.i176 = select i1 %.not.i175, float %428, float %427, !dbg !43
  %429 = fcmp olt float %.03.i176, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i177 = select i1 %429, float 0.000000e+00, float %425, !dbg !43
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %432 = fcmp oeq float %t.0.i177, 1.280000e+02, !dbg !43
  %j.0.i178 = select i1 %432, float 1.270000e+02, float %t.0.i177, !dbg !43
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i179 = icmp eq i32 %438, 0, !dbg !43
  br i1 %.not8.i179, label %441, label %439, !dbg !43

439:                                              ; preds = %__nv_expm1f.exit174
  %440 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i178) #3, !dbg !43
  br label %__nv_expm1f.exit201, !dbg !43

441:                                              ; preds = %__nv_expm1f.exit174
  %442 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i178) #3, !dbg !43
  br label %__nv_expm1f.exit201, !dbg !43

__nv_expm1f.exit201:                              ; preds = %439, %441
  %.0.i180 = phi float [ %440, %439 ], [ %442, %441 ], !dbg !43
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %444 = extractelement <8 x float> %296, i64 0, !dbg !43
  %445 = fmul float %444, 0x3FF7154760000000, !dbg !43
  %446 = tail call float @llvm.nvvm.round.f(float %445) #3, !dbg !43
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i202 = icmp eq i32 %447, 0, !dbg !43
  %448 = tail call float @llvm.nvvm.fabs.ftz.f(float %444) #3, !dbg !43
  %449 = tail call float @llvm.nvvm.fabs.f(float %444) #3, !dbg !43
  %.03.i203 = select i1 %.not.i202, float %449, float %448, !dbg !43
  %450 = fcmp olt float %.03.i203, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i204 = select i1 %450, float 0.000000e+00, float %446, !dbg !43
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %453 = fcmp oeq float %t.0.i204, 1.280000e+02, !dbg !43
  %j.0.i205 = select i1 %453, float 1.270000e+02, float %t.0.i204, !dbg !43
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i206 = icmp eq i32 %459, 0, !dbg !43
  br i1 %.not8.i206, label %462, label %460, !dbg !43

460:                                              ; preds = %__nv_expm1f.exit201
  %461 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i205) #3, !dbg !43
  br label %__nv_expm1f.exit228, !dbg !43

462:                                              ; preds = %__nv_expm1f.exit201
  %463 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i205) #3, !dbg !43
  br label %__nv_expm1f.exit228, !dbg !43

__nv_expm1f.exit228:                              ; preds = %460, %462
  %.0.i207 = phi float [ %461, %460 ], [ %463, %462 ], !dbg !43
  %464 = fcmp oeq <8 x float> %296, zeroinitializer, !dbg !43
  %465 = fadd float %423, %423, !dbg !43
  %466 = fcmp olt float %j.0.i178, -2.500000e+01, !dbg !43
  %467 = fcmp ogt float %j.0.i178, 1.280000e+02, !dbg !43
  %.not9.i195 = icmp eq i32 %443, 0, !dbg !43
  %.not7.i181 = icmp eq i32 %437, 0, !dbg !43
  %.not6.i182 = icmp eq i32 %436, 0, !dbg !43
  %.not5.i183 = icmp eq i32 %435, 0, !dbg !43
  %.not4.i184 = icmp eq i32 %434, 0, !dbg !43
  %.not3.i185 = icmp eq i32 %433, 0, !dbg !43
  %.not2.i186 = icmp eq i32 %431, 0, !dbg !43
  %468 = fneg float %t.0.i177, !dbg !43
  %.not1.i187 = icmp eq i32 %430, 0, !dbg !43
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %468, float 0x3FE62E4000000000, float %423) #3, !dbg !43
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float 0x3FE62E4000000000, float %423) #3, !dbg !43
  %.04.i188 = select i1 %.not1.i187, float %469, float %470, !dbg !43
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %468, float 0x3EB7F7D1C0000000, float %.04.i188) #3, !dbg !43
  %472 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float 0x3EB7F7D1C0000000, float %.04.i188) #3, !dbg !43
  %.05.i189 = select i1 %.not2.i186, float %471, float %472, !dbg !43
  %473 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i189, float 0x3F812ACC60000000) #3, !dbg !43
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i189, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i190 = select i1 %.not3.i185, float %473, float %474, !dbg !43
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i190, float %.05.i189, float 0x3FA5557C60000000) #3, !dbg !43
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i190, float %.05.i189, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i191 = select i1 %.not4.i184, float %475, float %476, !dbg !43
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i191, float %.05.i189, float 0x3FC5553EC0000000) #3, !dbg !43
  %478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i191, float %.05.i189, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i192 = select i1 %.not5.i183, float %477, float %478, !dbg !43
  %479 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i192, float %.05.i189, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i192, float %.05.i189, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i193 = select i1 %.not6.i182, float %479, float %480, !dbg !43
  %481 = fmul float %.05.i189, %.06.i193, !dbg !43
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %481, float %.05.i189, float %.05.i189) #3, !dbg !43
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %481, float %.05.i189, float %.05.i189) #3, !dbg !43
  %.01.i194 = select i1 %.not7.i181, float %482, float %483, !dbg !43
  %484 = fadd float %.0.i180, -1.000000e+00, !dbg !43
  %485 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i194, float %.0.i180, float %484) #3, !dbg !43
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i194, float %.0.i180, float %484) #3, !dbg !43
  %.02.i196 = select i1 %.not9.i195, float %485, float %486, !dbg !43
  %487 = fadd float %.02.i196, %.02.i196, !dbg !43
  %u.0.i197 = select i1 %432, float %487, float %.02.i196, !dbg !43
  %u.1.i198 = select i1 %467, float 0x7FF0000000000000, float %u.0.i197, !dbg !43
  %u.2.i199 = select i1 %466, float -1.000000e+00, float %u.1.i198, !dbg !43
  %488 = extractelement <8 x i1> %464, i64 7, !dbg !43
  %u.3.i200 = select i1 %488, float %465, float %u.2.i199, !dbg !43
  %489 = fadd float %402, %402, !dbg !43
  %490 = fcmp olt float %j.0.i151, -2.500000e+01, !dbg !43
  %491 = fcmp ogt float %j.0.i151, 1.280000e+02, !dbg !43
  %.not9.i168 = icmp eq i32 %422, 0, !dbg !43
  %.not7.i154 = icmp eq i32 %416, 0, !dbg !43
  %.not6.i155 = icmp eq i32 %415, 0, !dbg !43
  %.not5.i156 = icmp eq i32 %414, 0, !dbg !43
  %.not4.i157 = icmp eq i32 %413, 0, !dbg !43
  %.not3.i158 = icmp eq i32 %412, 0, !dbg !43
  %.not2.i159 = icmp eq i32 %410, 0, !dbg !43
  %492 = fneg float %t.0.i150, !dbg !43
  %.not1.i160 = icmp eq i32 %409, 0, !dbg !43
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %492, float 0x3FE62E4000000000, float %402) #3, !dbg !43
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %492, float 0x3FE62E4000000000, float %402) #3, !dbg !43
  %.04.i161 = select i1 %.not1.i160, float %493, float %494, !dbg !43
  %495 = tail call float @llvm.nvvm.fma.rn.f(float %492, float 0x3EB7F7D1C0000000, float %.04.i161) #3, !dbg !43
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %492, float 0x3EB7F7D1C0000000, float %.04.i161) #3, !dbg !43
  %.05.i162 = select i1 %.not2.i159, float %495, float %496, !dbg !43
  %497 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i162, float 0x3F812ACC60000000) #3, !dbg !43
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i162, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i163 = select i1 %.not3.i158, float %497, float %498, !dbg !43
  %499 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i163, float %.05.i162, float 0x3FA5557C60000000) #3, !dbg !43
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i163, float %.05.i162, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i164 = select i1 %.not4.i157, float %499, float %500, !dbg !43
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i164, float %.05.i162, float 0x3FC5553EC0000000) #3, !dbg !43
  %502 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i164, float %.05.i162, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i165 = select i1 %.not5.i156, float %501, float %502, !dbg !43
  %503 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i165, float %.05.i162, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i165, float %.05.i162, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i166 = select i1 %.not6.i155, float %503, float %504, !dbg !43
  %505 = fmul float %.05.i162, %.06.i166, !dbg !43
  %506 = tail call float @llvm.nvvm.fma.rn.f(float %505, float %.05.i162, float %.05.i162) #3, !dbg !43
  %507 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %505, float %.05.i162, float %.05.i162) #3, !dbg !43
  %.01.i167 = select i1 %.not7.i154, float %506, float %507, !dbg !43
  %508 = fadd float %.0.i153, -1.000000e+00, !dbg !43
  %509 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i167, float %.0.i153, float %508) #3, !dbg !43
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i167, float %.0.i153, float %508) #3, !dbg !43
  %.02.i169 = select i1 %.not9.i168, float %509, float %510, !dbg !43
  %511 = fadd float %.02.i169, %.02.i169, !dbg !43
  %u.0.i170 = select i1 %411, float %511, float %.02.i169, !dbg !43
  %u.1.i171 = select i1 %491, float 0x7FF0000000000000, float %u.0.i170, !dbg !43
  %u.2.i172 = select i1 %490, float -1.000000e+00, float %u.1.i171, !dbg !43
  %512 = extractelement <8 x i1> %464, i64 6, !dbg !43
  %u.3.i173 = select i1 %512, float %489, float %u.2.i172, !dbg !43
  %513 = fadd float %381, %381, !dbg !43
  %514 = fcmp olt float %j.0.i124, -2.500000e+01, !dbg !43
  %515 = fcmp ogt float %j.0.i124, 1.280000e+02, !dbg !43
  %.not9.i141 = icmp eq i32 %401, 0, !dbg !43
  %.not7.i127 = icmp eq i32 %395, 0, !dbg !43
  %.not6.i128 = icmp eq i32 %394, 0, !dbg !43
  %.not5.i129 = icmp eq i32 %393, 0, !dbg !43
  %.not4.i130 = icmp eq i32 %392, 0, !dbg !43
  %.not3.i131 = icmp eq i32 %391, 0, !dbg !43
  %.not2.i132 = icmp eq i32 %389, 0, !dbg !43
  %516 = fneg float %t.0.i123, !dbg !43
  %.not1.i133 = icmp eq i32 %388, 0, !dbg !43
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %516, float 0x3FE62E4000000000, float %381) #3, !dbg !43
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %516, float 0x3FE62E4000000000, float %381) #3, !dbg !43
  %.04.i134 = select i1 %.not1.i133, float %517, float %518, !dbg !43
  %519 = tail call float @llvm.nvvm.fma.rn.f(float %516, float 0x3EB7F7D1C0000000, float %.04.i134) #3, !dbg !43
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %516, float 0x3EB7F7D1C0000000, float %.04.i134) #3, !dbg !43
  %.05.i135 = select i1 %.not2.i132, float %519, float %520, !dbg !43
  %521 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i135, float 0x3F812ACC60000000) #3, !dbg !43
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i135, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i136 = select i1 %.not3.i131, float %521, float %522, !dbg !43
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i136, float %.05.i135, float 0x3FA5557C60000000) #3, !dbg !43
  %524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i136, float %.05.i135, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i137 = select i1 %.not4.i130, float %523, float %524, !dbg !43
  %525 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i137, float %.05.i135, float 0x3FC5553EC0000000) #3, !dbg !43
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i137, float %.05.i135, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i138 = select i1 %.not5.i129, float %525, float %526, !dbg !43
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i138, float %.05.i135, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i138, float %.05.i135, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i139 = select i1 %.not6.i128, float %527, float %528, !dbg !43
  %529 = fmul float %.05.i135, %.06.i139, !dbg !43
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %529, float %.05.i135, float %.05.i135) #3, !dbg !43
  %531 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %529, float %.05.i135, float %.05.i135) #3, !dbg !43
  %.01.i140 = select i1 %.not7.i127, float %530, float %531, !dbg !43
  %532 = fadd float %.0.i126, -1.000000e+00, !dbg !43
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i140, float %.0.i126, float %532) #3, !dbg !43
  %534 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i140, float %.0.i126, float %532) #3, !dbg !43
  %.02.i142 = select i1 %.not9.i141, float %533, float %534, !dbg !43
  %535 = fadd float %.02.i142, %.02.i142, !dbg !43
  %u.0.i143 = select i1 %390, float %535, float %.02.i142, !dbg !43
  %u.1.i144 = select i1 %515, float 0x7FF0000000000000, float %u.0.i143, !dbg !43
  %u.2.i145 = select i1 %514, float -1.000000e+00, float %u.1.i144, !dbg !43
  %536 = extractelement <8 x i1> %464, i64 5, !dbg !43
  %u.3.i146 = select i1 %536, float %513, float %u.2.i145, !dbg !43
  %537 = fadd float %360, %360, !dbg !43
  %538 = fcmp olt float %j.0.i97, -2.500000e+01, !dbg !43
  %539 = fcmp ogt float %j.0.i97, 1.280000e+02, !dbg !43
  %.not9.i114 = icmp eq i32 %380, 0, !dbg !43
  %.not7.i100 = icmp eq i32 %374, 0, !dbg !43
  %.not6.i101 = icmp eq i32 %373, 0, !dbg !43
  %.not5.i102 = icmp eq i32 %372, 0, !dbg !43
  %.not4.i103 = icmp eq i32 %371, 0, !dbg !43
  %.not3.i104 = icmp eq i32 %370, 0, !dbg !43
  %.not2.i105 = icmp eq i32 %368, 0, !dbg !43
  %540 = fneg float %t.0.i96, !dbg !43
  %.not1.i106 = icmp eq i32 %367, 0, !dbg !43
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %540, float 0x3FE62E4000000000, float %360) #3, !dbg !43
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %540, float 0x3FE62E4000000000, float %360) #3, !dbg !43
  %.04.i107 = select i1 %.not1.i106, float %541, float %542, !dbg !43
  %543 = tail call float @llvm.nvvm.fma.rn.f(float %540, float 0x3EB7F7D1C0000000, float %.04.i107) #3, !dbg !43
  %544 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %540, float 0x3EB7F7D1C0000000, float %.04.i107) #3, !dbg !43
  %.05.i108 = select i1 %.not2.i105, float %543, float %544, !dbg !43
  %545 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i108, float 0x3F812ACC60000000) #3, !dbg !43
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i108, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i109 = select i1 %.not3.i104, float %545, float %546, !dbg !43
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i109, float %.05.i108, float 0x3FA5557C60000000) #3, !dbg !43
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i109, float %.05.i108, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i110 = select i1 %.not4.i103, float %547, float %548, !dbg !43
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i110, float %.05.i108, float 0x3FC5553EC0000000) #3, !dbg !43
  %550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i110, float %.05.i108, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i111 = select i1 %.not5.i102, float %549, float %550, !dbg !43
  %551 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i111, float %.05.i108, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i111, float %.05.i108, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i112 = select i1 %.not6.i101, float %551, float %552, !dbg !43
  %553 = fmul float %.05.i108, %.06.i112, !dbg !43
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %553, float %.05.i108, float %.05.i108) #3, !dbg !43
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %553, float %.05.i108, float %.05.i108) #3, !dbg !43
  %.01.i113 = select i1 %.not7.i100, float %554, float %555, !dbg !43
  %556 = fadd float %.0.i99, -1.000000e+00, !dbg !43
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i113, float %.0.i99, float %556) #3, !dbg !43
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i113, float %.0.i99, float %556) #3, !dbg !43
  %.02.i115 = select i1 %.not9.i114, float %557, float %558, !dbg !43
  %559 = fadd float %.02.i115, %.02.i115, !dbg !43
  %u.0.i116 = select i1 %369, float %559, float %.02.i115, !dbg !43
  %u.1.i117 = select i1 %539, float 0x7FF0000000000000, float %u.0.i116, !dbg !43
  %u.2.i118 = select i1 %538, float -1.000000e+00, float %u.1.i117, !dbg !43
  %560 = extractelement <8 x i1> %464, i64 4, !dbg !43
  %u.3.i119 = select i1 %560, float %537, float %u.2.i118, !dbg !43
  %561 = fadd float %339, %339, !dbg !43
  %562 = fcmp olt float %j.0.i70, -2.500000e+01, !dbg !43
  %563 = fcmp ogt float %j.0.i70, 1.280000e+02, !dbg !43
  %.not9.i87 = icmp eq i32 %359, 0, !dbg !43
  %.not7.i73 = icmp eq i32 %353, 0, !dbg !43
  %.not6.i74 = icmp eq i32 %352, 0, !dbg !43
  %.not5.i75 = icmp eq i32 %351, 0, !dbg !43
  %.not4.i76 = icmp eq i32 %350, 0, !dbg !43
  %.not3.i77 = icmp eq i32 %349, 0, !dbg !43
  %.not2.i78 = icmp eq i32 %347, 0, !dbg !43
  %564 = fneg float %t.0.i69, !dbg !43
  %.not1.i79 = icmp eq i32 %346, 0, !dbg !43
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %564, float 0x3FE62E4000000000, float %339) #3, !dbg !43
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %564, float 0x3FE62E4000000000, float %339) #3, !dbg !43
  %.04.i80 = select i1 %.not1.i79, float %565, float %566, !dbg !43
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %564, float 0x3EB7F7D1C0000000, float %.04.i80) #3, !dbg !43
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %564, float 0x3EB7F7D1C0000000, float %.04.i80) #3, !dbg !43
  %.05.i81 = select i1 %.not2.i78, float %567, float %568, !dbg !43
  %569 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i81, float 0x3F812ACC60000000) #3, !dbg !43
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i81, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i82 = select i1 %.not3.i77, float %569, float %570, !dbg !43
  %571 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i82, float %.05.i81, float 0x3FA5557C60000000) #3, !dbg !43
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i82, float %.05.i81, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i83 = select i1 %.not4.i76, float %571, float %572, !dbg !43
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i83, float %.05.i81, float 0x3FC5553EC0000000) #3, !dbg !43
  %574 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i83, float %.05.i81, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i84 = select i1 %.not5.i75, float %573, float %574, !dbg !43
  %575 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i84, float %.05.i81, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i84, float %.05.i81, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i85 = select i1 %.not6.i74, float %575, float %576, !dbg !43
  %577 = fmul float %.05.i81, %.06.i85, !dbg !43
  %578 = tail call float @llvm.nvvm.fma.rn.f(float %577, float %.05.i81, float %.05.i81) #3, !dbg !43
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %577, float %.05.i81, float %.05.i81) #3, !dbg !43
  %.01.i86 = select i1 %.not7.i73, float %578, float %579, !dbg !43
  %580 = fadd float %.0.i72, -1.000000e+00, !dbg !43
  %581 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i86, float %.0.i72, float %580) #3, !dbg !43
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i86, float %.0.i72, float %580) #3, !dbg !43
  %.02.i88 = select i1 %.not9.i87, float %581, float %582, !dbg !43
  %583 = fadd float %.02.i88, %.02.i88, !dbg !43
  %u.0.i89 = select i1 %348, float %583, float %.02.i88, !dbg !43
  %u.1.i90 = select i1 %563, float 0x7FF0000000000000, float %u.0.i89, !dbg !43
  %u.2.i91 = select i1 %562, float -1.000000e+00, float %u.1.i90, !dbg !43
  %584 = extractelement <8 x i1> %464, i64 3, !dbg !43
  %u.3.i92 = select i1 %584, float %561, float %u.2.i91, !dbg !43
  %585 = fadd float %318, %318, !dbg !43
  %586 = fcmp olt float %j.0.i43, -2.500000e+01, !dbg !43
  %587 = fcmp ogt float %j.0.i43, 1.280000e+02, !dbg !43
  %.not9.i60 = icmp eq i32 %338, 0, !dbg !43
  %.not7.i46 = icmp eq i32 %332, 0, !dbg !43
  %.not6.i47 = icmp eq i32 %331, 0, !dbg !43
  %.not5.i48 = icmp eq i32 %330, 0, !dbg !43
  %.not4.i49 = icmp eq i32 %329, 0, !dbg !43
  %.not3.i50 = icmp eq i32 %328, 0, !dbg !43
  %.not2.i51 = icmp eq i32 %326, 0, !dbg !43
  %588 = fneg float %t.0.i42, !dbg !43
  %.not1.i52 = icmp eq i32 %325, 0, !dbg !43
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %588, float 0x3FE62E4000000000, float %318) #3, !dbg !43
  %590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %588, float 0x3FE62E4000000000, float %318) #3, !dbg !43
  %.04.i53 = select i1 %.not1.i52, float %589, float %590, !dbg !43
  %591 = tail call float @llvm.nvvm.fma.rn.f(float %588, float 0x3EB7F7D1C0000000, float %.04.i53) #3, !dbg !43
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %588, float 0x3EB7F7D1C0000000, float %.04.i53) #3, !dbg !43
  %.05.i54 = select i1 %.not2.i51, float %591, float %592, !dbg !43
  %593 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i54, float 0x3F812ACC60000000) #3, !dbg !43
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i54, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i55 = select i1 %.not3.i50, float %593, float %594, !dbg !43
  %595 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i55, float %.05.i54, float 0x3FA5557C60000000) #3, !dbg !43
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i55, float %.05.i54, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i56 = select i1 %.not4.i49, float %595, float %596, !dbg !43
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i56, float %.05.i54, float 0x3FC5553EC0000000) #3, !dbg !43
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i56, float %.05.i54, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i57 = select i1 %.not5.i48, float %597, float %598, !dbg !43
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i57, float %.05.i54, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i57, float %.05.i54, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i58 = select i1 %.not6.i47, float %599, float %600, !dbg !43
  %601 = fmul float %.05.i54, %.06.i58, !dbg !43
  %602 = tail call float @llvm.nvvm.fma.rn.f(float %601, float %.05.i54, float %.05.i54) #3, !dbg !43
  %603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float %.05.i54, float %.05.i54) #3, !dbg !43
  %.01.i59 = select i1 %.not7.i46, float %602, float %603, !dbg !43
  %604 = fadd float %.0.i45, -1.000000e+00, !dbg !43
  %605 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i59, float %.0.i45, float %604) #3, !dbg !43
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i59, float %.0.i45, float %604) #3, !dbg !43
  %.02.i61 = select i1 %.not9.i60, float %605, float %606, !dbg !43
  %607 = fadd float %.02.i61, %.02.i61, !dbg !43
  %u.0.i62 = select i1 %327, float %607, float %.02.i61, !dbg !43
  %u.1.i63 = select i1 %587, float 0x7FF0000000000000, float %u.0.i62, !dbg !43
  %u.2.i64 = select i1 %586, float -1.000000e+00, float %u.1.i63, !dbg !43
  %608 = extractelement <8 x i1> %464, i64 2, !dbg !43
  %u.3.i65 = select i1 %608, float %585, float %u.2.i64, !dbg !43
  %609 = fadd float %297, %297, !dbg !43
  %610 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !43
  %611 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !43
  %.not9.i = icmp eq i32 %317, 0, !dbg !43
  %.not7.i = icmp eq i32 %311, 0, !dbg !43
  %.not6.i = icmp eq i32 %310, 0, !dbg !43
  %.not5.i = icmp eq i32 %309, 0, !dbg !43
  %.not4.i = icmp eq i32 %308, 0, !dbg !43
  %.not3.i = icmp eq i32 %307, 0, !dbg !43
  %.not2.i38 = icmp eq i32 %305, 0, !dbg !43
  %612 = fneg float %t.0.i, !dbg !43
  %.not1.i39 = icmp eq i32 %304, 0, !dbg !43
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %612, float 0x3FE62E4000000000, float %297) #3, !dbg !43
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %612, float 0x3FE62E4000000000, float %297) #3, !dbg !43
  %.04.i = select i1 %.not1.i39, float %613, float %614, !dbg !43
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %612, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %612, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !43
  %.05.i = select i1 %.not2.i38, float %615, float %616, !dbg !43
  %617 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i = select i1 %.not3.i, float %617, float %618, !dbg !43
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i = select i1 %.not4.i, float %619, float %620, !dbg !43
  %621 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i = select i1 %.not5.i, float %621, float %622, !dbg !43
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i = select i1 %.not6.i, float %623, float %624, !dbg !43
  %625 = fmul float %.05.i, %.06.i, !dbg !43
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %625, float %.05.i, float %.05.i) #3, !dbg !43
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %625, float %.05.i, float %.05.i) #3, !dbg !43
  %.01.i = select i1 %.not7.i, float %626, float %627, !dbg !43
  %628 = fadd float %.0.i37, -1.000000e+00, !dbg !43
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i37, float %628) #3, !dbg !43
  %630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i37, float %628) #3, !dbg !43
  %.02.i = select i1 %.not9.i, float %629, float %630, !dbg !43
  %631 = fadd float %.02.i, %.02.i, !dbg !43
  %u.0.i = select i1 %306, float %631, float %.02.i, !dbg !43
  %u.1.i = select i1 %611, float 0x7FF0000000000000, float %u.0.i, !dbg !43
  %u.2.i = select i1 %610, float -1.000000e+00, float %u.1.i, !dbg !43
  %632 = extractelement <8 x i1> %464, i64 1, !dbg !43
  %u.3.i = select i1 %632, float %609, float %u.2.i, !dbg !43
  %633 = fcmp ogt float %444, 0.000000e+00, !dbg !44
  %634 = fcmp ogt float %423, 0.000000e+00, !dbg !44
  %635 = fcmp ogt float %402, 0.000000e+00, !dbg !44
  %636 = fcmp ogt float %381, 0.000000e+00, !dbg !44
  %637 = fcmp ogt float %360, 0.000000e+00, !dbg !44
  %638 = fcmp ogt float %339, 0.000000e+00, !dbg !44
  %639 = fcmp ogt float %318, 0.000000e+00, !dbg !44
  %640 = fcmp ogt float %297, 0.000000e+00, !dbg !44
  %.not7.i208 = icmp eq i32 %458, 0, !dbg !43
  %.not6.i209 = icmp eq i32 %457, 0, !dbg !43
  %.not5.i210 = icmp eq i32 %456, 0, !dbg !43
  %.not4.i211 = icmp eq i32 %455, 0, !dbg !43
  %.not3.i212 = icmp eq i32 %454, 0, !dbg !43
  %.not2.i213 = icmp eq i32 %452, 0, !dbg !43
  %641 = fneg float %t.0.i204, !dbg !43
  %.not1.i214 = icmp eq i32 %451, 0, !dbg !43
  %642 = tail call float @llvm.nvvm.fma.rn.f(float %641, float 0x3FE62E4000000000, float %444) #3, !dbg !43
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %641, float 0x3FE62E4000000000, float %444) #3, !dbg !43
  %.04.i215 = select i1 %.not1.i214, float %642, float %643, !dbg !43
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %641, float 0x3EB7F7D1C0000000, float %.04.i215) #3, !dbg !43
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %641, float 0x3EB7F7D1C0000000, float %.04.i215) #3, !dbg !43
  %.05.i216 = select i1 %.not2.i213, float %644, float %645, !dbg !43
  %646 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i216, float 0x3F812ACC60000000) #3, !dbg !43
  %647 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i216, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i217 = select i1 %.not3.i212, float %646, float %647, !dbg !43
  %648 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i217, float %.05.i216, float 0x3FA5557C60000000) #3, !dbg !43
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i217, float %.05.i216, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i218 = select i1 %.not4.i211, float %648, float %649, !dbg !43
  %650 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i218, float %.05.i216, float 0x3FC5553EC0000000) #3, !dbg !43
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i218, float %.05.i216, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i219 = select i1 %.not5.i210, float %650, float %651, !dbg !43
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i219, float %.05.i216, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i219, float %.05.i216, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i220 = select i1 %.not6.i209, float %652, float %653, !dbg !43
  %654 = fmul float %.05.i216, %.06.i220, !dbg !43
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %654, float %.05.i216, float %.05.i216) #3, !dbg !43
  %656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %654, float %.05.i216, float %.05.i216) #3, !dbg !43
  %.01.i221 = select i1 %.not7.i208, float %655, float %656, !dbg !43
  %657 = fadd float %.0.i207, -1.000000e+00, !dbg !43
  %658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not9.i222 = icmp eq i32 %658, 0, !dbg !43
  %659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i221, float %.0.i207, float %657) #3, !dbg !43
  %660 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i221, float %.0.i207, float %657) #3, !dbg !43
  %.02.i223 = select i1 %.not9.i222, float %660, float %659, !dbg !43
  %661 = fadd float %.02.i223, %.02.i223, !dbg !43
  %u.0.i224 = select i1 %453, float %661, float %.02.i223, !dbg !43
  %662 = fcmp ogt float %j.0.i205, 1.280000e+02, !dbg !43
  %u.1.i225 = select i1 %662, float 0x7FF0000000000000, float %u.0.i224, !dbg !43
  %663 = fcmp olt float %j.0.i205, -2.500000e+01, !dbg !43
  %u.2.i226 = select i1 %663, float -1.000000e+00, float %u.1.i225, !dbg !43
  %664 = fadd float %444, %444, !dbg !43
  %665 = extractelement <8 x i1> %464, i64 0, !dbg !43
  %u.3.i227 = select i1 %665, float %664, float %u.2.i226, !dbg !43
  %666 = select i1 %640, float %297, float %u.3.i, !dbg !45
  %667 = select i1 %639, float %318, float %u.3.i65, !dbg !45
  %668 = select i1 %638, float %339, float %u.3.i92, !dbg !45
  %669 = select i1 %637, float %360, float %u.3.i119, !dbg !45
  %670 = select i1 %636, float %381, float %u.3.i146, !dbg !45
  %671 = select i1 %635, float %402, float %u.3.i173, !dbg !45
  %672 = select i1 %634, float %423, float %u.3.i200, !dbg !45
  %673 = select i1 %633, float %444, float %u.3.i227, !dbg !45
  %bc = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %674 = extractelement <8 x i32> %bc, i64 1, !dbg !46
  %bc231 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %675 = extractelement <8 x i32> %bc231, i64 2, !dbg !46
  %bc232 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %676 = extractelement <8 x i32> %bc232, i64 3, !dbg !46
  %bc233 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %677 = extractelement <8 x i32> %bc233, i64 4, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %674, i32 %675, i32 %676, i32 %677, ptr addrspace(1) %26, i1 true) #3, !dbg !46
  %bc234 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %678 = extractelement <8 x i32> %bc234, i64 5, !dbg !46
  %bc235 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %679 = extractelement <8 x i32> %bc235, i64 6, !dbg !46
  %bc236 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %680 = extractelement <8 x i32> %bc236, i64 7, !dbg !46
  %bc237 = bitcast <8 x float> %171 to <8 x i32>, !dbg !46
  %681 = extractelement <8 x i32> %bc237, i64 0, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %678, i32 %679, i32 %680, i32 %681, ptr addrspace(1) %28, i1 true) #3, !dbg !46
  %682 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !47
  %683 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !47
  %684 = bitcast float %666 to i32, !dbg !48
  %685 = bitcast float %667 to i32, !dbg !48
  %686 = bitcast float %668 to i32, !dbg !48
  %687 = bitcast float %669 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %684, i32 %685, i32 %686, i32 %687, ptr addrspace(1) %682, i1 true) #3, !dbg !48
  %688 = bitcast float %670 to i32, !dbg !48
  %689 = bitcast float %671 to i32, !dbg !48
  %690 = bitcast float %672 to i32, !dbg !48
  %691 = bitcast float %673 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %688, i32 %689, i32 %690, i32 %691, ptr addrspace(1) %683, i1 true) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cy3pkhwr7acowv2h7yizwlxz53ncfd6eav6c2xfp6kgsesjtl5ba.py", directory: "inductor_cache/y3")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 31, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 35, scope: !7)
!26 = !DILocation(line: 32, column: 31, scope: !7)
!27 = !DILocation(line: 32, column: 36, scope: !7)
!28 = !DILocation(line: 33, column: 31, scope: !7)
!29 = !DILocation(line: 33, column: 36, scope: !7)
!30 = !DILocation(line: 34, column: 43, scope: !7)
!31 = !DILocation(line: 34, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 31, scope: !7)
!33 = !DILocation(line: 34, column: 48, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 38, column: 18, scope: !7)
!37 = !DILocation(line: 39, column: 26, scope: !7)
!38 = !DILocation(line: 41, column: 19, scope: !7)
!39 = !DILocation(line: 44, column: 19, scope: !7)
!40 = !DILocation(line: 45, column: 20, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 28, scope: !7)
!44 = !DILocation(line: 49, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 35, scope: !7)
!46 = !DILocation(line: 54, column: 39, scope: !7)
!47 = !DILocation(line: 55, column: 28, scope: !7)
!48 = !DILocation(line: 55, column: 40, scope: !7)
!49 = !DILocation(line: 55, column: 4, scope: !7)
