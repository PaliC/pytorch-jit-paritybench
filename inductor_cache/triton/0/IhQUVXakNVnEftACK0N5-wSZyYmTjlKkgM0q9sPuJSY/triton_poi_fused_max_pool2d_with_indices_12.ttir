#loc = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0), %arg1: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0), %arg3: i32 loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1152> : tensor<1x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<9> : tensor<4x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<128> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<4x64xi8> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<4x64xi8> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<4x64xi8> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<4x64xi8> loc(#loc1)
    %cst_6 = arith.constant dense<896> : tensor<4x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<768> : tensor<4x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<1536> : tensor<1x64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<1x64xi32> loc(#loc1)
    %cst_10 = arith.constant dense<9> : tensor<1x64xi32> loc(#loc1)
    %cst_11 = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_12 = arith.constant dense<128> : tensor<4x1xi32> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<36> : tensor<1x64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_13 : tensor<1x64xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<4x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_12 : tensor<4x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_11 : tensor<1x64xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_11 : tensor<1x64xi32> loc(#loc15)
    %16 = arith.divsi %5, %cst_10 : tensor<1x64xi32> loc(#loc16)
    %17 = arith.remsi %5, %cst_10 : tensor<1x64xi32> loc(#loc17)
    %18 = arith.muli %14, %cst_9 : tensor<1x64xi32> loc(#loc18)
    %19 = tt.broadcast %12 : tensor<4x1xi32> -> tensor<4x64xi32> loc(#loc19)
    %20 = tt.broadcast %18 : tensor<1x64xi32> -> tensor<4x64xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<4x64xi32> loc(#loc19)
    %22 = arith.muli %15, %cst_8 : tensor<1x64xi32> loc(#loc20)
    %23 = tt.broadcast %22 : tensor<1x64xi32> -> tensor<4x64xi32> loc(#loc21)
    %24 = arith.addi %21, %23 : tensor<4x64xi32> loc(#loc21)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x64x!tt.ptr<f32>> loc(#loc22)
    %26 = tt.addptr %25, %24 : tensor<4x64x!tt.ptr<f32>>, tensor<4x64xi32> loc(#loc22)
    %27 = tt.broadcast %13 : tensor<4x1xi1> -> tensor<4x64xi1> loc(#loc23)
    %28 = tt.broadcast %6 : tensor<1x64xi1> -> tensor<4x64xi1> loc(#loc23)
    %29 = arith.andi %27, %28 : tensor<4x64xi1> loc(#loc23)
    %30 = tt.load %26, %29 evictionPolicy = evict_last : tensor<4x64x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.addi %12, %cst_12 : tensor<4x1xi32> loc(#loc25)
    %32 = tt.broadcast %31 : tensor<4x1xi32> -> tensor<4x64xi32> loc(#loc26)
    %33 = arith.addi %32, %20 : tensor<4x64xi32> loc(#loc26)
    %34 = arith.addi %33, %23 : tensor<4x64xi32> loc(#loc27)
    %35 = tt.addptr %25, %34 : tensor<4x64x!tt.ptr<f32>>, tensor<4x64xi32> loc(#loc28)
    %36 = tt.load %35, %29 evictionPolicy = evict_last : tensor<4x64x!tt.ptr<f32>> loc(#loc29)
    %37 = arith.addi %12, %cst_7 : tensor<4x1xi32> loc(#loc30)
    %38 = tt.broadcast %37 : tensor<4x1xi32> -> tensor<4x64xi32> loc(#loc31)
    %39 = arith.addi %38, %20 : tensor<4x64xi32> loc(#loc31)
    %40 = arith.addi %39, %23 : tensor<4x64xi32> loc(#loc32)
    %41 = tt.addptr %25, %40 : tensor<4x64x!tt.ptr<f32>>, tensor<4x64xi32> loc(#loc33)
    %42 = tt.load %41, %29 evictionPolicy = evict_last : tensor<4x64x!tt.ptr<f32>> loc(#loc34)
    %43 = arith.addi %12, %cst_6 : tensor<4x1xi32> loc(#loc35)
    %44 = tt.broadcast %43 : tensor<4x1xi32> -> tensor<4x64xi32> loc(#loc36)
    %45 = arith.addi %44, %20 : tensor<4x64xi32> loc(#loc36)
    %46 = arith.addi %45, %23 : tensor<4x64xi32> loc(#loc37)
    %47 = tt.addptr %25, %46 : tensor<4x64x!tt.ptr<f32>>, tensor<4x64xi32> loc(#loc38)
    %48 = tt.load %47, %29 evictionPolicy = evict_last : tensor<4x64x!tt.ptr<f32>> loc(#loc39)
    %49 = arith.cmpf ogt, %36, %30 : tensor<4x64xf32> loc(#loc40)
    %50 = arith.select %49, %cst_5, %cst_4 : tensor<4x64xi1>, tensor<4x64xi8> loc(#loc41)
    %51 = arith.cmpf une, %36, %36 : tensor<4x64xf32> loc(#loc63)
    %52 = arith.ori %49, %51 : tensor<4x64xi1> loc(#loc64)
    %53 = arith.select %52, %36, %30 : tensor<4x64xi1>, tensor<4x64xf32> loc(#loc65)
    %54 = arith.cmpf ogt, %42, %53 : tensor<4x64xf32> loc(#loc46)
    %55 = arith.select %54, %cst_3, %50 : tensor<4x64xi1>, tensor<4x64xi8> loc(#loc47)
    %56 = arith.cmpf une, %42, %42 : tensor<4x64xf32> loc(#loc66)
    %57 = arith.ori %54, %56 : tensor<4x64xi1> loc(#loc67)
    %58 = arith.select %57, %42, %53 : tensor<4x64xi1>, tensor<4x64xf32> loc(#loc68)
    %59 = arith.cmpf ogt, %48, %58 : tensor<4x64xf32> loc(#loc49)
    %60 = arith.select %59, %cst_2, %55 : tensor<4x64xi1>, tensor<4x64xi8> loc(#loc50)
    %61 = arith.cmpf une, %48, %48 : tensor<4x64xf32> loc(#loc69)
    %62 = arith.ori %59, %61 : tensor<4x64xi1> loc(#loc70)
    %63 = arith.select %62, %48, %58 : tensor<4x64xi1>, tensor<4x64xf32> loc(#loc71)
    %64 = arith.muli %5, %cst_1 : tensor<1x64xi32> loc(#loc52)
    %65 = tt.broadcast %64 : tensor<1x64xi32> -> tensor<4x64xi32> loc(#loc53)
    %66 = arith.addi %19, %65 : tensor<4x64xi32> loc(#loc53)
    %67 = tt.splat %arg1 : !tt.ptr<i8> -> tensor<4x64x!tt.ptr<i8>> loc(#loc54)
    %68 = tt.addptr %67, %66 : tensor<4x64x!tt.ptr<i8>>, tensor<4x64xi32> loc(#loc54)
    tt.store %68, %60, %29 : tensor<4x64x!tt.ptr<i8>> loc(#loc55)
    %69 = arith.muli %12, %cst_0 : tensor<4x1xi32> loc(#loc56)
    %70 = tt.broadcast %17 : tensor<1x64xi32> -> tensor<4x64xi32> loc(#loc57)
    %71 = tt.broadcast %69 : tensor<4x1xi32> -> tensor<4x64xi32> loc(#loc57)
    %72 = arith.addi %70, %71 : tensor<4x64xi32> loc(#loc57)
    %73 = arith.muli %16, %cst : tensor<1x64xi32> loc(#loc58)
    %74 = tt.broadcast %73 : tensor<1x64xi32> -> tensor<4x64xi32> loc(#loc59)
    %75 = arith.addi %72, %74 : tensor<4x64xi32> loc(#loc59)
    %76 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x64x!tt.ptr<f32>> loc(#loc60)
    %77 = tt.addptr %76, %75 : tensor<4x64x!tt.ptr<f32>>, tensor<4x64xi32> loc(#loc60)
    tt.store %77, %63, %29 : tensor<4x64x!tt.ptr<f32>> loc(#loc61)
    tt.return loc(#loc62)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":22:28)
#loc3 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":22:33)
#loc4 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":23:36)
#loc5 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":23:44)
#loc6 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":23:23)
#loc7 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":24:21)
#loc8 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":25:28)
#loc9 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":25:33)
#loc10 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":26:36)
#loc11 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":26:44)
#loc12 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":26:23)
#loc13 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":27:21)
#loc14 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":29:19)
#loc15 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":30:19)
#loc16 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":32:19)
#loc17 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":33:19)
#loc18 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:39)
#loc19 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:35)
#loc20 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:49)
#loc21 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:44)
#loc22 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:30)
#loc23 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:62)
#loc24 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":34:54)
#loc25 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":35:36)
#loc26 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":35:41)
#loc27 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":35:50)
#loc28 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":35:30)
#loc29 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":35:60)
#loc30 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":36:36)
#loc31 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":36:41)
#loc32 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":36:50)
#loc33 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":36:30)
#loc34 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":36:60)
#loc35 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":37:37)
#loc36 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":37:42)
#loc37 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":37:51)
#loc38 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":37:31)
#loc39 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":37:61)
#loc40 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":38:18)
#loc41 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":41:32)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":42:40)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc46 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":43:18)
#loc47 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":45:33)
#loc48 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":46:41)
#loc49 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":47:20)
#loc50 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":49:35)
#loc51 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":50:42)
#loc52 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":51:34)
#loc53 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":51:30)
#loc54 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":51:25)
#loc55 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":51:46)
#loc56 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:32)
#loc57 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:30)
#loc58 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:42)
#loc59 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:37)
#loc60 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:25)
#loc61 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:54)
#loc62 = loc("inductor_cache/ft/cftthd4rqqr7v6ca72235iex7rj2otvgg3uag4y4rpfyrh3g33m6.py":52:4)
#loc63 = loc(callsite(#loc42 at #loc43))
#loc64 = loc(callsite(#loc44 at #loc43))
#loc65 = loc(callsite(#loc45 at #loc43))
#loc66 = loc(callsite(#loc42 at #loc48))
#loc67 = loc(callsite(#loc44 at #loc48))
#loc68 = loc(callsite(#loc45 at #loc48))
#loc69 = loc(callsite(#loc42 at #loc51))
#loc70 = loc(callsite(#loc44 at #loc51))
#loc71 = loc(callsite(#loc45 at #loc51))
