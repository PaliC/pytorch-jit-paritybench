//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_2,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_3,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<86>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:22:33
	shl.b32 	%r41, %r1, 8;
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_35_param_2];
	.loc	1 23 44                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:23:44
	mov.u32 	%r42, %tid.x;
	shl.b32 	%r43, %r42, 2;
	and.b32  	%r44, %r43, 252;
	shl.b32 	%r45, %r42, 1;
	and.b32  	%r46, %r45, 254;
	and.b32  	%r47, %r42, 127;
	or.b32  	%r48, %r47, 128;
	.loc	1 23 23                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:23:23
	or.b32  	%r49, %r41, %r44;
	or.b32  	%r50, %r41, %r46;
	or.b32  	%r51, %r41, %r47;
	or.b32  	%r52, %r41, %r48;
	.loc	1 24 21                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:24:21
	setp.lt.s32 	%p16, %r49, 384;
	setp.lt.s32 	%p11, %r50, 384;
	setp.lt.s32 	%p17, %r51, 384;
	setp.lt.s32 	%p18, %r52, 384;
	.loc	1 25 28                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:25:33
	shl.b32 	%r53, %r2, 2;
	.loc	1 26 44                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:26:44
	bfe.u32 	%r54, %r42, 6, 1;
	.loc	1 26 23                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:26:23
	or.b32  	%r55, %r53, %r54;
	or.b32  	%r56, %r55, 2;
	.loc	1 27 21                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:27:21
	setp.lt.s32 	%p19, %r55, 4;
	setp.lt.s32 	%p20, %r56, 4;
	setp.lt.s32 	%p21, %r53, 4;
	.loc	1 30 19                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:30:19
	mul.hi.s32 	%r58, %r49, 715827883;
	shr.u32 	%r59, %r58, 31;
	shr.s32 	%r60, %r58, 4;
	add.s32 	%r61, %r60, %r59;
	.loc	1 29 19                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:29:19
	mul.lo.s32 	%r62, %r61, 96;
	sub.s32 	%r63, %r49, %r62;
	.loc	1 32 35                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:32:35
	mad.lo.s32 	%r64, %r61, 384, %r63;
	.loc	1 32 43                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:32:43
	mad.lo.s32 	%r65, %r55, 96, %r64;
	add.s32 	%r66, %r65, 192;
	.loc	1 32 30                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:32:30
	mul.wide.s32 	%rd9, %r65, 4;
	add.s64 	%rd1, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r66, 4;
	add.s64 	%rd2, %rd6, %rd10;
	.loc	1 32 60                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:32:60
	and.pred  	%p1, %p16, %p19;
	and.pred  	%p2, %p20, %p16;
	and.pred  	%p14, %p21, %p17;
	and.pred  	%p15, %p21, %p18;
	.loc	1 32 52                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:32:52
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r67, %r42, 4;
	and.b32  	%r68, %r67, 1008;
	or.b32  	%r69, %r68, %r54;
	and.b32  	%r70, %r43, 508;
	mov.u32 	%r71, global_smem;
	add.s32 	%r72, %r71, %r68;
	shl.b32 	%r73, %r69, 2;
	add.s32 	%r11, %r72, %r73;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 40;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 48;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 68;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r74, %r71, %r70;
	shl.b32 	%r75, %r70, 2;
	add.s32 	%r76, %r74, %r75;
	ld.shared.f32 	%f1, [%r76];
	ld.shared.f32 	%f2, [%r76+4];
	ld.shared.f32 	%f3, [%r76+8];
	ld.shared.f32 	%f4, [%r76+12];
	ld.shared.f32 	%f5, [%r76+2560];
	ld.shared.f32 	%f6, [%r76+2564];
	ld.shared.f32 	%f7, [%r76+2568];
	ld.shared.f32 	%f8, [%r76+2572];
	.loc	1 33 30                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:33:30
	mul.wide.s32 	%rd11, %r50, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 33 35                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:33:35
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r30, %r32 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:34:18
	bar.sync 	0;
	shl.b32 	%r77, %r46, 3;
	add.s32 	%r29, %r71, %r77;
	// begin inline asm
	@%p3 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r29, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r47, 3;
	add.s32 	%r79, %r71, %r78;
	ld.shared.f32 	%f9, [%r79];
	shl.b32 	%r80, %r48, 3;
	add.s32 	%r81, %r71, %r80;
	ld.shared.f32 	%f10, [%r81];
	mul.f32 	%f11, %f1, %f9;
	mul.f32 	%f12, %f2, %f9;
	mul.f32 	%f13, %f3, %f9;
	mul.f32 	%f14, %f4, %f9;
	mul.f32 	%f15, %f5, %f10;
	mul.f32 	%f16, %f6, %f10;
	mul.f32 	%f17, %f7, %f10;
	mul.f32 	%f18, %f8, %f10;
	.loc	1 35 30                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:35:30
	add.s32 	%r82, %r51, %r2;
	shl.b32 	%r83, %r82, 2;
	add.s32 	%r84, %r52, %r2;
	shl.b32 	%r85, %r84, 2;
	.loc	1 35 25                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:35:25
	mul.wide.s32 	%rd12, %r83, 4;
	add.s64 	%rd4, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r85, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 35 43                         // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:35:43
	mov.b32 	%r33, %f11;
	mov.b32 	%r34, %f12;
	mov.b32 	%r35, %f13;
	mov.b32 	%r36, %f14;
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd4 + 0 ], { %r33, %r34, %r35, %r36 };
	// end inline asm
	mov.b32 	%r37, %f15;
	mov.b32 	%r38, %f16;
	mov.b32 	%r39, %f17;
	mov.b32 	%r40, %f18;
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd5 + 0 ], { %r37, %r38, %r39, %r40 };
	// end inline asm
	.loc	1 35 4                          // cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yk/cyk45aa63ieczmjiyde7hlk2nl6ru6whvymt3gpsemzcjnhjzinb.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 107
.b8 52
.b8 53
.b8 97
.b8 97
.b8 54
.b8 51
.b8 105
.b8 101
.b8 99
.b8 122
.b8 109
.b8 106
.b8 105
.b8 121
.b8 100
.b8 101
.b8 55
.b8 104
.b8 108
.b8 107
.b8 50
.b8 110
.b8 108
.b8 54
.b8 114
.b8 117
.b8 54
.b8 119
.b8 104
.b8 118
.b8 121
.b8 109
.b8 116
.b8 51
.b8 103
.b8 112
.b8 115
.b8 101
.b8 109
.b8 122
.b8 99
.b8 106
.b8 110
.b8 104
.b8 106
.b8 122
.b8 105
.b8 110
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
