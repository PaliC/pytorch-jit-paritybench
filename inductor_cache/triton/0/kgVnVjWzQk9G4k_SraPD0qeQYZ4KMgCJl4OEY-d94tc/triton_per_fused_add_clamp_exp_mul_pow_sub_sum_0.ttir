#loc = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0)
#loc1 = loc(unknown)
#loc39 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":51:26)
#loc55 = loc(callsite(#loc1 at #loc39))
module {
  tt.func public @triton_per_fused_add_clamp_exp_mul_pow_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0), %arg3: i32 loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":19:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<2.000000e+01> : tensor<1x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-3.000000e+01> : tensor<1x32xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %cst_2 = arith.constant dense<5.000000e-01> : tensor<1x32xf32> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<1x32xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x32xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x32xi32> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x32xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_4 : tensor<1x32x!tt.ptr<f32>> loc(#loc9)
    %12 = arith.addi %4, %cst_3 : tensor<1x32xi32> loc(#loc10)
    %13 = arith.addi %12, %6 : tensor<1x32xi32> loc(#loc11)
    %14 = tt.addptr %8, %13 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc12)
    %15 = tt.load %14, %10, %cst_4 : tensor<1x32x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.muli %0, %c32_i32 : i32 loc(#loc14)
    %17 = tt.splat %16 : i32 -> tensor<1x32xi32> loc(#loc15)
    %18 = arith.addi %4, %17 : tensor<1x32xi32> loc(#loc15)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %18 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc16)
    %21 = tt.load %20, %10, %cst_4 : tensor<1x32x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.cmpf ogt, %15, %cst_0 : tensor<1x32xf32> loc(#loc46)
    %23 = arith.cmpf une, %15, %15 : tensor<1x32xf32> loc(#loc47)
    %24 = arith.ori %22, %23 : tensor<1x32xi1> loc(#loc48)
    %25 = arith.select %24, %15, %cst_0 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc49)
    %26 = arith.cmpf olt, %25, %cst : tensor<1x32xf32> loc(#loc50)
    %27 = arith.cmpf une, %25, %25 : tensor<1x32xf32> loc(#loc51)
    %28 = arith.ori %26, %27 : tensor<1x32xi1> loc(#loc52)
    %29 = arith.select %28, %25, %cst : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc53)
    %30 = arith.mulf %29, %cst_2 : tensor<1x32xf32> loc(#loc28)
    %31 = math.exp %30 : tensor<1x32xf32> loc(#loc29)
    %32 = arith.mulf %31, %21 : tensor<1x32xf32> loc(#loc30)
    %33 = arith.addf %11, %32 : tensor<1x32xf32> loc(#loc31)
    %34 = arith.mulf %11, %11 : tensor<1x32xf32> loc(#loc32)
    %35 = math.exp %29 : tensor<1x32xf32> loc(#loc33)
    %36 = arith.addf %34, %35 : tensor<1x32xf32> loc(#loc34)
    %37 = arith.subf %36, %cst_1 : tensor<1x32xf32> loc(#loc35)
    %38 = arith.subf %37, %29 : tensor<1x32xf32> loc(#loc36)
    %39 = arith.select %10, %38, %cst_4 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc37)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc39)), %arg6: f32 loc(callsite(#loc1 at #loc39))):
      %44 = arith.addf %arg5, %arg6 : f32 loc(#loc57)
      tt.reduce.return %44 : f32 loc(#loc54)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc54)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc41)
    tt.store %20, %33, %10 : tensor<1x32x!tt.ptr<f32>> loc(#loc42)
    %42 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc43)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.store %43, %41, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":23:28)
#loc3 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":25:21)
#loc4 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":26:26)
#loc5 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":26:34)
#loc6 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":31:38)
#loc7 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":31:35)
#loc8 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":31:30)
#loc9 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":31:43)
#loc10 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":32:35)
#loc11 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":32:40)
#loc12 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":32:30)
#loc13 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":32:48)
#loc14 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":33:42)
#loc15 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":33:39)
#loc16 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":33:34)
#loc17 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":33:47)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":35:40)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc24 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":37:40)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc28 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":39:18)
#loc29 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":40:23)
#loc30 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":41:19)
#loc31 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":42:19)
#loc32 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":43:19)
#loc33 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":44:24)
#loc34 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":45:20)
#loc35 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":47:20)
#loc36 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":48:20)
#loc37 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":50:35)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc41 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":51:29)
#loc42 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":52:48)
#loc43 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":53:25)
#loc44 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":53:37)
#loc45 = loc("inductor_cache/2x/c2xg3rrptq5vphggsjkl3xqyhbgnwuocgsrqmk4qgdz2tiz3px5q.py":53:4)
#loc46 = loc(callsite(#loc18 at #loc19))
#loc47 = loc(callsite(#loc20 at #loc19))
#loc48 = loc(callsite(#loc21 at #loc19))
#loc49 = loc(callsite(#loc22 at #loc19))
#loc50 = loc(callsite(#loc23 at #loc24))
#loc51 = loc(callsite(#loc25 at #loc24))
#loc52 = loc(callsite(#loc26 at #loc24))
#loc53 = loc(callsite(#loc27 at #loc24))
#loc54 = loc(callsite(#loc38 at #loc39))
#loc56 = loc(callsite(#loc40 at #loc38))
#loc57 = loc(callsite(#loc56 at #loc39))
