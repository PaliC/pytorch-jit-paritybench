; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sext i32 %8 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 %9) #4, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  %14 = fmul float %13, 0x3FE45F3060000000, !dbg !17
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not.i = icmp eq i32 %15, 0, !dbg !17
  %16 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %14) #4, !dbg !17
  %17 = tail call i32 @llvm.nvvm.f2i.rn(float %14) #4, !dbg !17
  %.01.i = select i1 %.not.i, i32 %17, i32 %16, !dbg !17
  %18 = sitofp i32 %.01.i to float, !dbg !17
  %19 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not15.i = icmp eq i32 %19, 0, !dbg !17
  %20 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %18, float 0xBFF921FB40000000, float %13) #4, !dbg !17
  %21 = tail call float @llvm.nvvm.fma.rn.f(float %18, float 0xBFF921FB40000000, float %13) #4, !dbg !17
  %.02.i = select i1 %.not15.i, float %21, float %20, !dbg !17
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not16.i = icmp eq i32 %22, 0, !dbg !17
  %23 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %18, float 0xBE74442D00000000, float %.02.i) #4, !dbg !17
  %24 = tail call float @llvm.nvvm.fma.rn.f(float %18, float 0xBE74442D00000000, float %.02.i) #4, !dbg !17
  %.03.i = select i1 %.not16.i, float %24, float %23, !dbg !17
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not17.i = icmp eq i32 %25, 0, !dbg !17
  %26 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %18, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !17
  %27 = tail call float @llvm.nvvm.fma.rn.f(float %18, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !17
  %.04.i = select i1 %.not17.i, float %27, float %26, !dbg !17
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not18.i = icmp eq i32 %28, 0, !dbg !17
  %29 = tail call float @llvm.nvvm.fabs.ftz.f(float %13) #4, !dbg !17
  %30 = tail call float @llvm.nvvm.fabs.f(float %13) #4, !dbg !17
  %.06.i = select i1 %.not18.i, float %30, float %29, !dbg !17
  %31 = fcmp ult float %.06.i, 1.056150e+05, !dbg !17
  br i1 %31, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !17

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not19.i = icmp eq i32 %32, 0, !dbg !17
  %.07.i = select i1 %.not19.i, float %30, float %29, !dbg !17
  %33 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !17
  br i1 %33, label %__nv_fmul_rn.exit.i.i.i, label %37, !dbg !17

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not27.i = icmp eq i32 %34, 0, !dbg !17
  %35 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %13, float 0.000000e+00) #4, !dbg !17
  %36 = tail call float @llvm.nvvm.mul.rn.f(float %13, float 0.000000e+00) #4, !dbg !17
  %.08.i = select i1 %.not27.i, float %36, float %35, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

37:                                               ; preds = %__nv_isinff.exit.i.i.i
  %38 = lshr i32 %12, 23, !dbg !17
  %39 = and i32 %38, 224, !dbg !17
  %40 = add nsw i32 %39, -128, !dbg !17
  %41 = shl i32 %12, 8, !dbg !17
  %42 = or i32 %41, -2147483648, !dbg !17
  %43 = lshr exact i32 %40, 5, !dbg !17
  br label %44, !dbg !17

44:                                               ; preds = %37, %44
  %indvars.iv = phi i64 [ 0, %37 ], [ %indvars.iv.next, %44 ]
  %hi.i.i.i.0.i1 = phi i32 [ 0, %37 ], [ %49, %44 ]
  %45 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !17
  %46 = load i32, ptr addrspace(1) %45, align 4, !dbg !17
  %47 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %46, i32 %42, i32 %hi.i.i.i.0.i1) #5, !dbg !17, !srcloc !18
  %48 = extractvalue { i32, i32 } %47, 0, !dbg !17
  %49 = extractvalue { i32, i32 } %47, 1, !dbg !17
  %50 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !17
  store i32 %48, ptr %50, align 4, !dbg !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !17
  br i1 %exitcond.not, label %51, label %44, !dbg !17, !llvm.loop !19

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !17
  store i32 %49, ptr %52, align 4, !dbg !17
  %53 = and i32 %38, 31, !dbg !17
  %54 = sub nsw i32 6, %43, !dbg !17
  %55 = sext i32 %54 to i64, !dbg !17
  %56 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %55, !dbg !17
  %57 = load i32, ptr %56, align 4, !dbg !17
  %58 = sub nsw i32 5, %43, !dbg !17
  %59 = sext i32 %58 to i64, !dbg !17
  %60 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %59, !dbg !17
  %61 = load i32, ptr %60, align 4, !dbg !17
  %.not20.i = icmp eq i32 %53, 0, !dbg !17
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %62, !dbg !17

62:                                               ; preds = %51
  %63 = sub nsw i32 4, %43, !dbg !17
  %64 = sub nuw nsw i32 32, %53, !dbg !17
  %65 = shl i32 %57, %53, !dbg !17
  %66 = lshr i32 %61, %64, !dbg !17
  %67 = add i32 %66, %65, !dbg !17
  %68 = shl i32 %61, %53, !dbg !17
  %69 = sext i32 %63 to i64, !dbg !17
  %70 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %69, !dbg !17
  %71 = load i32, ptr %70, align 4, !dbg !17
  %72 = lshr i32 %71, %64, !dbg !17
  %73 = add i32 %72, %68, !dbg !17
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !17

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %62, %51
  %hi.i.i.i.1.i = phi i32 [ %67, %62 ], [ %57, %51 ], !dbg !17
  %lo.i.i.i.0.i = phi i32 [ %73, %62 ], [ %61, %51 ], !dbg !17
  %74 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !17
  %75 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !17
  %76 = shl i32 %lo.i.i.i.0.i, 2, !dbg !17
  %77 = lshr i32 %75, 31, !dbg !17
  %78 = add nuw nsw i32 %77, %74, !dbg !17
  %79 = sub nsw i32 0, %78, !dbg !17
  %.not2123.i = icmp slt i32 %12, 0, !dbg !17
  %spec.select.i = select i1 %.not2123.i, i32 %79, i32 %78, !dbg !17
  %80 = xor i32 %75, %12, !dbg !17
  %.lobit.i = ashr i32 %75, 31, !dbg !17
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %75, !dbg !17
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %76, !dbg !17
  %81 = zext i32 %hi.i.i.i.2.i to i64, !dbg !17
  %82 = shl nuw i64 %81, 32, !dbg !17
  %83 = zext i32 %lo.i.i.i.1.i to i64, !dbg !17
  %84 = or disjoint i64 %82, %83, !dbg !17
  %85 = sitofp i64 %84 to double, !dbg !17
  %86 = fmul double %85, 0x3BF921FB54442D19, !dbg !17
  %87 = fptrunc double %86 to float, !dbg !17
  %88 = fneg float %87, !dbg !17
  %.not2526.i = icmp slt i32 %80, 0, !dbg !17
  %r.i.i.i.0.i = select i1 %.not2526.i, float %88, float %87, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not28.i = icmp eq i32 %89, 0, !dbg !17
  %90 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !17
  %91 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !17
  %.011.i = select i1 %.not28.i, float %91, float %90, !dbg !17
  %92 = and i32 %i.i.1.i, 1, !dbg !17
  %.not29.i = icmp eq i32 %92, 0, !dbg !17
  %93 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !17
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not30.i = icmp eq i32 %94, 0, !dbg !17
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %93, float 0.000000e+00) #4, !dbg !17
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %93, float 0.000000e+00) #4, !dbg !17
  %.012.i = select i1 %.not30.i, float %96, float %95, !dbg !17
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !17

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not31.i = icmp eq i32 %97, 0, !dbg !17
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !17
  %99 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !17
  %.013.i = select i1 %.not31.i, float %99, float %98, !dbg !17
  br label %__internal_fmad.exit2.i.i.i, !dbg !17

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %100 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %101 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %102 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not32.i = icmp eq i32 %103, 0, !dbg !17
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %102, float %.011.i, float %101) #4, !dbg !17
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %102, float %.011.i, float %101) #4, !dbg !17
  %.010.i = select i1 %.not32.i, float %105, float %104, !dbg !17
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not33.i = icmp eq i32 %106, 0, !dbg !17
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %100) #4, !dbg !17
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %100) #4, !dbg !17
  %.09.i = select i1 %.not33.i, float %108, float %107, !dbg !17
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not34.i = icmp eq i32 %109, 0, !dbg !17
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %93) #4, !dbg !17
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %93) #4, !dbg !17
  %.05.i = select i1 %.not34.i, float %111, float %110, !dbg !17
  %112 = and i32 %i.i.1.i, 2, !dbg !17
  %.not35.i = icmp eq i32 %112, 0, !dbg !17
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !17

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !17
  %.not36.i = icmp eq i32 %113, 0, !dbg !17
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !17
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !17
  %.0.i = select i1 %.not36.i, float %115, float %114, !dbg !17
  br label %__nv_sinf.exit, !dbg !17

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  %116 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !21
  %117 = bitcast float %z.i.i.0.i to i32, !dbg !22
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %117, ptr addrspace(1) %116, i1 %9) #4, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2rauoydlh45ri32vninhqdayrhisikamor4p7q5pal3fqxgd6hg.py", directory: "inductor_cache/2r")
!4 = !{ptr @triton_poi_fused_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_sin_0", linkageName: "triton_poi_fused_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.count", i32 1}
!21 = !DILocation(line: 27, column: 25, scope: !7)
!22 = !DILocation(line: 27, column: 36, scope: !7)
!23 = !DILocation(line: 27, column: 4, scope: !7)
