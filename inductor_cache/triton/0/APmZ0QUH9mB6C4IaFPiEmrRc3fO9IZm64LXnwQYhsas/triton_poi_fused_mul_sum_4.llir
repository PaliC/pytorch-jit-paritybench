; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_sum_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = mul i32 %13, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 16, !dbg !16
  %16 = srem i32 %10, 4, !dbg !17
  %17 = srem i32 %11, 4, !dbg !17
  %18 = shl nsw i32 %.decomposed, 2, !dbg !18
  %19 = shl nsw i32 %15, 2, !dbg !18
  %20 = mul i32 %13, 144, !dbg !19
  %21 = add i32 %20, %18, !dbg !20
  %22 = add i32 %21, 16, !dbg !21
  %23 = add i32 %20, %19, !dbg !20
  %24 = add i32 %23, 16, !dbg !21
  %25 = sext i32 %22 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = sext i32 %24 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !23
  %31 = shl nsw i32 %16, 2, !dbg !24
  %32 = shl nsw i32 %17, 2, !dbg !24
  %33 = shl nsw i32 %13, 4, !dbg !25
  %34 = add i32 %31, %33, !dbg !26
  %35 = add i32 %33, %32, !dbg !26
  %36 = sext i32 %34 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !27
  %38 = sext i32 %35 to i64, !dbg !27
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !27
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %12) #1, !dbg !28
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %12) #1, !dbg !28
  %42 = add i32 %21, 17, !dbg !29
  %43 = add i32 %23, 17, !dbg !29
  %44 = sext i32 %42 to i64, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !30
  %46 = sext i32 %43 to i64, !dbg !30
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !30
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %12) #1, !dbg !31
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %12) #1, !dbg !31
  %50 = or disjoint i32 %31, 1, !dbg !32
  %51 = or disjoint i32 %32, 1, !dbg !32
  %52 = add i32 %50, %33, !dbg !33
  %53 = add i32 %51, %33, !dbg !33
  %54 = sext i32 %52 to i64, !dbg !34
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !34
  %56 = sext i32 %53 to i64, !dbg !34
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !34
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %12) #1, !dbg !35
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %12) #1, !dbg !35
  %60 = add i32 %21, 18, !dbg !36
  %61 = add i32 %23, 18, !dbg !36
  %62 = sext i32 %60 to i64, !dbg !37
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !37
  %64 = sext i32 %61 to i64, !dbg !37
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !37
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %12) #1, !dbg !38
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %12) #1, !dbg !38
  %68 = or disjoint i32 %31, 2, !dbg !39
  %69 = or disjoint i32 %32, 2, !dbg !39
  %70 = add i32 %68, %33, !dbg !40
  %71 = add i32 %69, %33, !dbg !40
  %72 = sext i32 %70 to i64, !dbg !41
  %73 = getelementptr float, ptr addrspace(1) %1, i64 %72, !dbg !41
  %74 = sext i32 %71 to i64, !dbg !41
  %75 = getelementptr float, ptr addrspace(1) %1, i64 %74, !dbg !41
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %12) #1, !dbg !42
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %12) #1, !dbg !42
  %78 = add i32 %21, 19, !dbg !43
  %79 = add i32 %23, 19, !dbg !43
  %80 = sext i32 %78 to i64, !dbg !44
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !44
  %82 = sext i32 %79 to i64, !dbg !44
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !44
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 %12) #1, !dbg !45
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %83, i1 %12) #1, !dbg !45
  %86 = or disjoint i32 %31, 3, !dbg !46
  %87 = or disjoint i32 %32, 3, !dbg !46
  %88 = add i32 %86, %33, !dbg !47
  %89 = add i32 %87, %33, !dbg !47
  %90 = sext i32 %88 to i64, !dbg !48
  %91 = getelementptr float, ptr addrspace(1) %1, i64 %90, !dbg !48
  %92 = sext i32 %89 to i64, !dbg !48
  %93 = getelementptr float, ptr addrspace(1) %1, i64 %92, !dbg !48
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 %12) #1, !dbg !49
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 %12) #1, !dbg !49
  %96 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !23
  %97 = insertelement <2 x i32> %96, i32 %48, i64 1, !dbg !23
  %98 = bitcast <2 x i32> %97 to <2 x float>, !dbg !23
  %99 = insertelement <2 x i32> poison, i32 %40, i64 0, !dbg !28
  %100 = insertelement <2 x i32> %99, i32 %58, i64 1, !dbg !28
  %101 = bitcast <2 x i32> %100 to <2 x float>, !dbg !28
  %102 = fmul <2 x float> %98, %101, !dbg !50
  %103 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !23
  %104 = insertelement <2 x i32> %103, i32 %49, i64 1, !dbg !23
  %105 = bitcast <2 x i32> %104 to <2 x float>, !dbg !23
  %106 = insertelement <2 x i32> poison, i32 %41, i64 0, !dbg !28
  %107 = insertelement <2 x i32> %106, i32 %59, i64 1, !dbg !28
  %108 = bitcast <2 x i32> %107 to <2 x float>, !dbg !28
  %109 = fmul <2 x float> %105, %108, !dbg !50
  %shift = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !51
  %110 = fadd <2 x float> %102, %shift, !dbg !51
  %shift1 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !51
  %111 = fadd <2 x float> %109, %shift1, !dbg !51
  %112 = insertelement <2 x i32> poison, i32 %66, i64 0, !dbg !38
  %113 = insertelement <2 x i32> %112, i32 %84, i64 1, !dbg !38
  %114 = bitcast <2 x i32> %113 to <2 x float>, !dbg !38
  %115 = insertelement <2 x i32> poison, i32 %76, i64 0, !dbg !42
  %116 = insertelement <2 x i32> %115, i32 %94, i64 1, !dbg !42
  %117 = bitcast <2 x i32> %116 to <2 x float>, !dbg !42
  %118 = fmul <2 x float> %114, %117, !dbg !52
  %119 = fadd <2 x float> %110, %118, !dbg !53
  %120 = insertelement <2 x i32> poison, i32 %67, i64 0, !dbg !38
  %121 = insertelement <2 x i32> %120, i32 %85, i64 1, !dbg !38
  %122 = bitcast <2 x i32> %121 to <2 x float>, !dbg !38
  %123 = insertelement <2 x i32> poison, i32 %77, i64 0, !dbg !42
  %124 = insertelement <2 x i32> %123, i32 %95, i64 1, !dbg !42
  %125 = bitcast <2 x i32> %124 to <2 x float>, !dbg !42
  %126 = fmul <2 x float> %122, %125, !dbg !52
  %127 = fadd <2 x float> %111, %126, !dbg !53
  %shift2 = shufflevector <2 x float> %118, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !54
  %128 = fadd <2 x float> %119, %shift2, !dbg !54
  %shift3 = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !54
  %129 = fadd <2 x float> %127, %shift3, !dbg !54
  %130 = sext i32 %10 to i64, !dbg !55
  %131 = getelementptr float, ptr addrspace(1) %2, i64 %130, !dbg !55
  %bc = bitcast <2 x float> %128 to <2 x i32>, !dbg !56
  %132 = extractelement <2 x i32> %bc, i64 0, !dbg !56
  %bc4 = bitcast <2 x float> %129 to <2 x i32>, !dbg !56
  %133 = extractelement <2 x i32> %bc4, i64 0, !dbg !56
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %132, i32 %133, ptr addrspace(1) %131, i1 %12) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czrosqe7iwslahhdk2be6eqb45ifzyyps3knlmranmwdmrffsaam.py", directory: "inductor_cache/zr")
!4 = !{ptr @triton_poi_fused_mul_sum_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sum_4, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sum_4", linkageName: "triton_poi_fused_mul_sum_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 37, scope: !7)
!19 = !DILocation(line: 28, column: 46, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 42, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 51, scope: !7)
!24 = !DILocation(line: 29, column: 32, scope: !7)
!25 = !DILocation(line: 29, column: 40, scope: !7)
!26 = !DILocation(line: 29, column: 37, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 45, scope: !7)
!29 = !DILocation(line: 30, column: 42, scope: !7)
!30 = !DILocation(line: 30, column: 30, scope: !7)
!31 = !DILocation(line: 30, column: 51, scope: !7)
!32 = !DILocation(line: 31, column: 34, scope: !7)
!33 = !DILocation(line: 31, column: 41, scope: !7)
!34 = !DILocation(line: 31, column: 30, scope: !7)
!35 = !DILocation(line: 31, column: 49, scope: !7)
!36 = !DILocation(line: 32, column: 42, scope: !7)
!37 = !DILocation(line: 32, column: 30, scope: !7)
!38 = !DILocation(line: 32, column: 51, scope: !7)
!39 = !DILocation(line: 33, column: 34, scope: !7)
!40 = !DILocation(line: 33, column: 41, scope: !7)
!41 = !DILocation(line: 33, column: 30, scope: !7)
!42 = !DILocation(line: 33, column: 49, scope: !7)
!43 = !DILocation(line: 34, column: 43, scope: !7)
!44 = !DILocation(line: 34, column: 31, scope: !7)
!45 = !DILocation(line: 34, column: 52, scope: !7)
!46 = !DILocation(line: 35, column: 35, scope: !7)
!47 = !DILocation(line: 35, column: 42, scope: !7)
!48 = !DILocation(line: 35, column: 31, scope: !7)
!49 = !DILocation(line: 35, column: 50, scope: !7)
!50 = !DILocation(line: 36, column: 18, scope: !7)
!51 = !DILocation(line: 38, column: 18, scope: !7)
!52 = !DILocation(line: 39, column: 18, scope: !7)
!53 = !DILocation(line: 40, column: 19, scope: !7)
!54 = !DILocation(line: 42, column: 20, scope: !7)
!55 = !DILocation(line: 43, column: 25, scope: !7)
!56 = !DILocation(line: 43, column: 37, scope: !7)
!57 = !DILocation(line: 43, column: 4, scope: !7)
