//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_30 // -- Begin function triton_poi_fused_add_30
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_30
.visible .entry triton_poi_fused_add_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_3,
	.param .u32 triton_poi_fused_add_30_param_4,
	.param .u32 triton_poi_fused_add_30_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_30_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:22:33
	shl.b32 	%r63, %r1, 6;
	ld.param.u64 	%rd10, [triton_poi_fused_add_30_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_add_30_param_3];
	.loc	1 23 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:23:44
	mov.u32 	%r64, %tid.x;
	shr.u32 	%r65, %r64, 2;
	bfe.u32 	%r66, %r64, 2, 4;
	and.b32  	%r67, %r64, 64;
	shr.u32 	%r68, %r67, 2;
	or.b32  	%r69, %r66, %r68;
	shl.b32 	%r70, %r64, 2;
	and.b32  	%r71, %r70, 12;
	and.b32  	%r72, %r70, 60;
	.loc	1 23 23                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:23:23
	or.b32  	%r73, %r63, %r69;
	or.b32  	%r74, %r63, %r72;
	.loc	1 25 28                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:25:33
	shl.b32 	%r75, %r2, 4;
	.loc	1 26 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:26:44
	bfe.u32 	%r76, %r64, 4, 2;
	shr.u32 	%r77, %r67, 4;
	or.b32  	%r78, %r76, %r77;
	.loc	1 26 23                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:26:23
	or.b32  	%r79, %r75, %r71;
	or.b32  	%r80, %r75, %r78;
	or.b32  	%r81, %r80, 8;
	.loc	1 27 21                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:27:21
	setp.lt.s32 	%p1, %r79, 16;
	setp.lt.s32 	%p11, %r80, 16;
	setp.lt.s32 	%p12, %r81, 16;
	.loc	1 30 19                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:30:19
	bfe.s32 	%r82, %r1, 25, 1;
	shr.u32 	%r83, %r82, 23;
	add.s32 	%r84, %r74, %r83;
	and.b32  	%r85, %r84, -512;
	sub.s32 	%r86, %r74, %r85;
	.loc	1 23 23                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:23:23
	shl.b32 	%r87, %r73, 4;
	.loc	1 31 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:35
	add.s32 	%r88, %r79, %r87;
	add.s32 	%r89, %r88, 512;
	.loc	1 31 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:30
	mul.wide.s32 	%rd12, %r88, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r89, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 31 43                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r90, %r64, 8;
	and.b32  	%r91, %r90, 768;
	or.b32  	%r92, %r69, %r91;
	and.b32  	%r93, %r70, 508;
	shr.u32 	%r94, %r91, 4;
	add.s32 	%r95, %r92, %r94;
	shl.b32 	%r96, %r95, 2;
	mov.u32 	%r97, global_smem;
	add.s32 	%r11, %r97, %r96;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r98, %r91, 64;
	shr.u32 	%r99, %r98, 4;
	add.s32 	%r100, %r99, %r92;
	shl.b32 	%r101, %r100, 2;
	add.s32 	%r102, %r97, %r101;
	add.s32 	%r13, %r102, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r103, %r91, 128;
	shr.u32 	%r104, %r103, 4;
	add.s32 	%r105, %r104, %r92;
	shl.b32 	%r106, %r105, 2;
	add.s32 	%r107, %r97, %r106;
	add.s32 	%r15, %r107, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r108, %r91, 192;
	shr.u32 	%r109, %r108, 4;
	add.s32 	%r110, %r109, %r92;
	shl.b32 	%r111, %r110, 2;
	add.s32 	%r112, %r97, %r111;
	add.s32 	%r17, %r112, 768;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r102, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r107, 640;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r112, 896;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r113, %r65, 28;
	add.s32 	%r114, %r113, %r93;
	shl.b32 	%r115, %r114, 2;
	add.s32 	%r116, %r97, %r115;
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r116];
	or.b32  	%r117, %r93, 512;
	shr.u32 	%r118, %r117, 4;
	and.b32  	%r119, %r118, 60;
	add.s32 	%r120, %r119, %r93;
	shl.b32 	%r121, %r120, 2;
	add.s32 	%r122, %r97, %r121;
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r122+2048];
	.loc	1 32 40                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:40
	shl.b32 	%r123, %r80, 11;
	shl.b32 	%r124, %r81, 11;
	.loc	1 32 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:35
	add.s32 	%r125, %r123, %r74;
	add.s32 	%r126, %r74, %r124;
	.loc	1 32 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:30
	mul.wide.s32 	%rd14, %r125, 4;
	add.s64 	%rd3, %rd9, %rd14;
	mul.wide.s32 	%rd15, %r126, 4;
	add.s64 	%rd4, %rd9, %rd15;
	.loc	1 32 45                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:45
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r27;
	mov.b32 	%f10, %r28;
	mov.b32 	%f11, %r29;
	mov.b32 	%f12, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r31;
	mov.b32 	%f14, %r32;
	mov.b32 	%f15, %r33;
	mov.b32 	%f16, %r34;
	.loc	1 33 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:33:30
	mul.wide.s32 	%rd16, %r86, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 33 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:33:35
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r35;
	mov.b32 	%f18, %r36;
	mov.b32 	%f19, %r37;
	mov.b32 	%f20, %r38;
	.loc	1 34 18                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:34:18
	add.f32 	%f21, %f9, %f17;
	add.f32 	%f22, %f10, %f18;
	add.f32 	%f23, %f11, %f19;
	add.f32 	%f24, %f12, %f20;
	add.f32 	%f25, %f13, %f17;
	add.f32 	%f26, %f14, %f18;
	add.f32 	%f27, %f15, %f19;
	add.f32 	%f28, %f16, %f20;
	.loc	1 35 18                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:35:18
	add.f32 	%f29, %f1, %f21;
	add.f32 	%f30, %f2, %f22;
	add.f32 	%f31, %f3, %f23;
	add.f32 	%f32, %f4, %f24;
	add.f32 	%f33, %f5, %f25;
	add.f32 	%f34, %f6, %f26;
	add.f32 	%f35, %f7, %f27;
	add.f32 	%f36, %f8, %f28;
	.loc	1 36 25                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:25
	add.s64 	%rd6, %rd11, %rd12;
	add.s64 	%rd7, %rd11, %rd13;
	.loc	1 36 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:44
	bar.sync 	0;
	shl.b32 	%r127, %r64, 6;
	and.b32  	%r128, %r127, 960;
	or.b32  	%r129, %r78, %r128;
	shr.u32 	%r130, %r128, 4;
	add.s32 	%r131, %r129, %r130;
	shl.b32 	%r132, %r131, 2;
	add.s32 	%r39, %r97, %r132;
	mov.b32 	%r40, %f29;
	// begin inline asm
	@%p3 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r133, %r128, 16;
	shr.u32 	%r134, %r133, 4;
	add.s32 	%r135, %r134, %r129;
	shl.b32 	%r136, %r135, 2;
	add.s32 	%r137, %r97, %r136;
	add.s32 	%r41, %r137, 64;
	mov.b32 	%r42, %f30;
	// begin inline asm
	@%p3 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r138, %r128, 32;
	shr.u32 	%r139, %r138, 4;
	add.s32 	%r140, %r139, %r129;
	shl.b32 	%r141, %r140, 2;
	add.s32 	%r142, %r97, %r141;
	add.s32 	%r43, %r142, 128;
	mov.b32 	%r44, %f31;
	// begin inline asm
	@%p3 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	or.b32  	%r143, %r128, 48;
	shr.u32 	%r144, %r143, 4;
	add.s32 	%r145, %r144, %r129;
	shl.b32 	%r146, %r145, 2;
	add.s32 	%r147, %r97, %r146;
	add.s32 	%r45, %r147, 192;
	mov.b32 	%r46, %f32;
	// begin inline asm
	@%p3 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r39, 32;
	mov.b32 	%r48, %f33;
	// begin inline asm
	@%p3 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r137, 96;
	mov.b32 	%r50, %f34;
	// begin inline asm
	@%p3 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r142, 160;
	mov.b32 	%r52, %f35;
	// begin inline asm
	@%p3 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r147, 224;
	mov.b32 	%r54, %f36;
	// begin inline asm
	@%p3 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r148, %r70, 4, 5;
	add.s32 	%r149, %r148, %r93;
	shl.b32 	%r150, %r149, 2;
	add.s32 	%r151, %r97, %r150;
	ld.shared.u32 	%r55, [%r151];
	ld.shared.u32 	%r56, [%r151+4];
	ld.shared.u32 	%r57, [%r151+8];
	ld.shared.u32 	%r58, [%r151+12];
	add.s32 	%r152, %r118, %r93;
	shl.b32 	%r153, %r152, 2;
	add.s32 	%r154, %r97, %r153;
	ld.shared.u32 	%r59, [%r154+2048];
	ld.shared.u32 	%r60, [%r154+2052];
	ld.shared.u32 	%r61, [%r154+2056];
	ld.shared.u32 	%r62, [%r154+2060];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	.loc	1 36 4                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 98
.b8 113
.b8 115
.b8 120
.b8 116
.b8 111
.b8 99
.b8 112
.b8 97
.b8 53
.b8 106
.b8 107
.b8 50
.b8 109
.b8 103
.b8 113
.b8 102
.b8 119
.b8 51
.b8 121
.b8 50
.b8 114
.b8 109
.b8 103
.b8 113
.b8 112
.b8 115
.b8 100
.b8 103
.b8 98
.b8 101
.b8 115
.b8 113
.b8 111
.b8 105
.b8 97
.b8 99
.b8 115
.b8 119
.b8 104
.b8 55
.b8 108
.b8 54
.b8 50
.b8 53
.b8 112
.b8 107
.b8 102
.b8 118
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
