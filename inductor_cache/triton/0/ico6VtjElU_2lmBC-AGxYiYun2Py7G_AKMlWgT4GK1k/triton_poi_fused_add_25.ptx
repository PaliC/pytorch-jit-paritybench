//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_25 // -- Begin function triton_poi_fused_add_25
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_25
.visible .entry triton_poi_fused_add_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_25_param_3,
	.param .u32 triton_poi_fused_add_25_param_4,
	.param .u32 triton_poi_fused_add_25_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<104>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_25_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_25_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:22:33
	shl.b32 	%r47, %r1, 5;
	ld.param.u64 	%rd10, [triton_poi_fused_add_25_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_add_25_param_3];
	.loc	1 23 44                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:23:44
	mov.u32 	%r48, %tid.x;
	bfe.u32 	%r49, %r48, 3, 4;
	or.b32  	%r50, %r49, 16;
	shl.b32 	%r51, %r48, 2;
	and.b32  	%r52, %r51, 28;
	.loc	1 23 23                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:23:23
	or.b32  	%r53, %r47, %r49;
	or.b32  	%r54, %r47, %r50;
	or.b32  	%r55, %r47, %r52;
	.loc	1 24 21                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:24:21
	setp.lt.s32 	%p16, %r53, 64;
	setp.lt.s32 	%p17, %r54, 64;
	setp.lt.s32 	%p18, %r55, 64;
	.loc	1 25 28                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:25:33
	shl.b32 	%r56, %r2, 5;
	.loc	1 26 23                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:26:23
	or.b32  	%r57, %r56, %r52;
	or.b32  	%r58, %r56, %r49;
	or.b32  	%r59, %r56, %r50;
	.loc	1 27 21                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:27:21
	setp.lt.s32 	%p3, %r57, 384;
	setp.lt.s32 	%p19, %r58, 384;
	setp.lt.s32 	%p20, %r59, 384;
	.loc	1 31 19                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:31:19
	shr.s32 	%r61, %r55, 31;
	shr.u32 	%r62, %r61, 28;
	add.s32 	%r63, %r55, %r62;
	shr.s32 	%r64, %r63, 4;
	.loc	1 30 19                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:30:19
	and.b32  	%r65, %r63, -16;
	sub.s32 	%r66, %r55, %r65;
	.loc	1 32 35                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:32:35
	mad.lo.s32 	%r67, %r53, 384, %r57;
	mad.lo.s32 	%r68, %r54, 384, %r57;
	.loc	1 32 30                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:32:30
	mul.wide.s32 	%rd12, %r67, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r68, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 32 52                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:32:52
	and.pred  	%p1, %p16, %p3;
	and.pred  	%p2, %p17, %p3;
	and.pred  	%p14, %p18, %p19;
	and.pred  	%p15, %p18, %p20;
	.loc	1 32 44                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:32:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 33 30                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:33:30
	mul.wide.s32 	%rd14, %r57, 4;
	add.s64 	%rd3, %rd9, %rd14;
	.loc	1 33 35                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	.loc	1 34 30                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:34:30
	add.s64 	%rd4, %rd10, %rd12;
	add.s64 	%rd5, %rd10, %rd13;
	.loc	1 34 44                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:34:44
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	.loc	1 36 18                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:36:18
	fma.rn.f32 	%f21, %f9, %f13, %f1;
	fma.rn.f32 	%f22, %f10, %f14, %f2;
	fma.rn.f32 	%f23, %f11, %f15, %f3;
	fma.rn.f32 	%f24, %f12, %f16, %f4;
	fma.rn.f32 	%f25, %f9, %f17, %f5;
	fma.rn.f32 	%f26, %f10, %f18, %f6;
	fma.rn.f32 	%f27, %f11, %f19, %f7;
	fma.rn.f32 	%f28, %f12, %f20, %f8;
	.loc	1 37 33                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:33
	shl.b32 	%r69, %r58, 4;
	shl.b32 	%r70, %r59, 4;
	.loc	1 37 30                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:30
	mad.lo.s32 	%r71, %r64, 6144, %r66;
	.loc	1 37 38                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:38
	add.s32 	%r72, %r71, %r69;
	add.s32 	%r73, %r71, %r70;
	.loc	1 37 25                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:25
	mul.wide.s32 	%rd15, %r72, 4;
	add.s64 	%rd6, %rd11, %rd15;
	mul.wide.s32 	%rd16, %r73, 4;
	add.s64 	%rd7, %rd11, %rd16;
	.loc	1 37 54                         // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:54
	shl.b32 	%r74, %r48, 7;
	and.b32  	%r75, %r74, 896;
	or.b32  	%r76, %r75, %r49;
	and.b32  	%r77, %r51, 508;
	shr.u32 	%r78, %r75, 1;
	mov.u32 	%r79, global_smem;
	add.s32 	%r80, %r79, %r78;
	shl.b32 	%r81, %r76, 2;
	add.s32 	%r23, %r80, %r81;
	mov.b32 	%r24, %f21;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r82, %r75, 32;
	shr.u32 	%r83, %r82, 1;
	add.s32 	%r84, %r79, %r83;
	add.s32 	%r85, %r84, %r81;
	add.s32 	%r25, %r85, 128;
	mov.b32 	%r26, %f22;
	// begin inline asm
	@%p6 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r86, %r75, 64;
	shr.u32 	%r87, %r86, 1;
	add.s32 	%r88, %r79, %r87;
	add.s32 	%r89, %r88, %r81;
	add.s32 	%r27, %r89, 256;
	mov.b32 	%r28, %f23;
	// begin inline asm
	@%p6 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r90, %r75, 96;
	shr.u32 	%r91, %r90, 1;
	add.s32 	%r92, %r79, %r91;
	add.s32 	%r93, %r92, %r81;
	add.s32 	%r29, %r93, 384;
	mov.b32 	%r30, %f24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r23, 64;
	mov.b32 	%r32, %f25;
	// begin inline asm
	@%p6 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r85, 192;
	mov.b32 	%r34, %f26;
	// begin inline asm
	@%p6 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r89, 320;
	mov.b32 	%r36, %f27;
	// begin inline asm
	@%p6 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r93, 448;
	mov.b32 	%r38, %f28;
	// begin inline asm
	@%p6 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r94, %r48, 1;
	and.b32  	%r95, %r94, 240;
	add.s32 	%r96, %r79, %r95;
	shl.b32 	%r97, %r77, 2;
	add.s32 	%r98, %r96, %r97;
	or.b32  	%r99, %r77, 512;
	shr.u32 	%r100, %r99, 1;
	and.b32  	%r101, %r100, 496;
	add.s32 	%r102, %r79, %r101;
	add.s32 	%r103, %r102, %r97;
	ld.shared.v4.u32 	{%r43, %r44, %r45, %r46}, [%r103+2048];
	ld.shared.v4.u32 	{%r39, %r40, %r41, %r42}, [%r98];
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd6 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd7 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	.loc	1 37 4                          // cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bb/cbbpjpnesrisdjt4f4pydf6ohk67a4xh27cmfwecxejzpkvv3hci.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 98
.b8 112
.b8 106
.b8 112
.b8 110
.b8 101
.b8 115
.b8 114
.b8 105
.b8 115
.b8 100
.b8 106
.b8 116
.b8 52
.b8 102
.b8 52
.b8 112
.b8 121
.b8 100
.b8 102
.b8 54
.b8 111
.b8 104
.b8 107
.b8 54
.b8 55
.b8 97
.b8 52
.b8 120
.b8 104
.b8 50
.b8 55
.b8 99
.b8 109
.b8 102
.b8 119
.b8 101
.b8 99
.b8 120
.b8 101
.b8 106
.b8 122
.b8 112
.b8 107
.b8 118
.b8 118
.b8 51
.b8 104
.b8 99
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
