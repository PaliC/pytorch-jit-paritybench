//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0 // -- Begin function triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0
.visible .entry triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_2,
	.param .u32 triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<284>;
	.reg .b64 	%rd<8>;
$L__func_begin0:

// %bb.0:
	.loc	1 27 26                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:27:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd4, [triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_1];
	and.b32  	%r2, %r1, 31;
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_2];
	shl.b32 	%r25, %r1, 2;
	and.b32  	%r26, %r25, 252;
	.loc	1 31 30                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:31:30
	mul.wide.u32 	%rd6, %r26, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.pred 	%p2, -1;
	.loc	1 31 35                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:31:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:32:31
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 32 36                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:32:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p28, %r2, 0;
	shr.u32 	%r27, %r1, 3;
	and.b32  	%r28, %r27, 4;
	mov.u32 	%r29, global_smem;
	add.s32 	%r69, %r29, %r28;
	setp.lt.s32 	%p29, %r1, 2;
	add.s32 	%r72, %r29, %r25;
	and.b32  	%r30, %r1, 1;
	setp.eq.b32 	%p10, %r30, 1;
	not.pred 	%p11, %p10;
	and.pred  	%p30, %p29, %p11;
$L__tmp1:
	.loc	1 31 35                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:31:35
	mov.b32 	%f46, %r6;
	mov.b32 	%f47, %r5;
	.loc	1 32 36                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:32:36
	mov.b32 	%f2, %r10;
	mov.b32 	%f1, %r9;
	.loc	1 34 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:34:19
	setp.ge.f32 	%p12, %f47, 0f3F000000;
	setp.ge.f32 	%p13, %f46, 0f3F000000;
	.loc	1 35 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:35:19
	selp.f32 	%f4, 0f3F800000, 0f00000000, %p13;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p12;
$L__tmp2:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f4, %f3;
	mov.f32 	%f49, 0f3F800000;
$L__tmp3:
	.loc	1 39 18                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:39:18
	sub.f32 	%f6, %f49, %f4;
	sub.f32 	%f5, %f49, %f3;
$L__tmp4:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f5, %f6;
$L__tmp5:
	.loc	1 43 21                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:43:21
	setp.ge.f32 	%p14, %f2, 0f00000000;
	setp.ge.f32 	%p15, %f1, 0f00000000;
	.loc	1 44 21                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:44:21
	selp.f32 	%f7, 0f3F800000, 0f00000000, %p15;
	selp.f32 	%f8, 0f3F800000, 0f00000000, %p14;
	.loc	1 31 35                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:31:35
	mov.b32 	%f51, %r8;
	mov.b32 	%f52, %r7;
	.loc	1 32 36                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:32:36
	mov.b32 	%f10, %r12;
	mov.b32 	%f9, %r11;
	.loc	1 34 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:34:19
	setp.ge.f32 	%p16, %f52, 0f3F000000;
	setp.ge.f32 	%p17, %f51, 0f3F000000;
	.loc	1 35 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:35:19
	selp.f32 	%f12, 0f3F800000, 0f00000000, %p17;
	selp.f32 	%f11, 0f3F800000, 0f00000000, %p16;
$L__tmp6:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f48, %f11;
	add.f32 	%f54, %f53, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f54;
	shfl.sync.bfly.b32	%r32, %r31, 16, 31, -1;
	mov.b32 	%f55, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f56;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f57, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f58;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f59, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f60;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f61, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f62;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f63, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r14, %f64;
	// begin inline asm
	@%p28 st.shared.b32 [ %r69 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p29 ld.shared.b32 %r15, [ %r72 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r15;
	shfl.sync.bfly.b32	%r41, %r15, 1, 31, -1;
	mov.b32 	%f66, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f67;
	// begin inline asm
	@%p30 st.shared.b32 [ %r72 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [global_smem];
$L__tmp7:
	.loc	1 39 18                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:39:18
	sub.f32 	%f15, %f49, %f12;
	sub.f32 	%f14, %f49, %f11;
$L__tmp8:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f14, %f50;
	add.f32 	%f69, %f15, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f69;
	shfl.sync.bfly.b32	%r43, %r42, 16, 31, -1;
	mov.b32 	%f70, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f71;
	shfl.sync.bfly.b32	%r45, %r44, 8, 31, -1;
	mov.b32 	%f72, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f73;
	shfl.sync.bfly.b32	%r47, %r46, 4, 31, -1;
	mov.b32 	%f74, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f75;
	shfl.sync.bfly.b32	%r49, %r48, 2, 31, -1;
	mov.b32 	%f76, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f77;
	shfl.sync.bfly.b32	%r51, %r50, 1, 31, -1;
	mov.b32 	%f78, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f79;
	// begin inline asm
	@%p28 st.shared.b32 [ %r69 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p29 ld.shared.b32 %r21, [ %r72 + 0 ];
	// end inline asm
	mov.b32 	%f80, %r21;
	shfl.sync.bfly.b32	%r52, %r21, 1, 31, -1;
	mov.b32 	%f81, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f82;
	// begin inline asm
	@%p30 st.shared.b32 [ %r72 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
$L__tmp9:
	.loc	1 43 21                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:43:21
	setp.ge.f32 	%p18, %f10, 0f00000000;
	setp.ge.f32 	%p19, %f9, 0f00000000;
	.loc	1 44 21                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:44:21
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p19;
	selp.f32 	%f18, 0f3F800000, 0f00000000, %p18;
	.loc	1 47 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:47:20
	mul.f32 	%f83, %f2, %f8;
	mul.f32 	%f84, %f1, %f7;
	mul.f32 	%f85, %f10, %f18;
	mul.f32 	%f86, %f9, %f17;
	.loc	1 50 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:50:20
	fma.rn.f32 	%f87, %f84, 0fC0000000, %f1;
	fma.rn.f32 	%f88, %f83, 0fC0000000, %f2;
	fma.rn.f32 	%f89, %f86, 0fC0000000, %f9;
	fma.rn.f32 	%f90, %f85, 0fC0000000, %f10;
	.loc	1 51 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:51:24
	mul.f32 	%f39, %f87, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f38, %f39;
	// end inline asm
	mul.f32 	%f41, %f88, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f40, %f41;
	// end inline asm
	mul.f32 	%f43, %f89, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f42, %f43;
	// end inline asm
	mul.f32 	%f45, %f90, 0f3FB8AA3B;
	.loc	1 52 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:52:20
	add.f32 	%f91, %f38, 0f3F800000;
	add.f32 	%f19, %f40, 0f3F800000;
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	setp.lt.f32 	%p20, %f91, 0f00800000;
	mul.f32 	%f92, %f91, 0f4B000000;
	selp.f32 	%f22, %f92, %f91, %p20;
	selp.f32 	%f93, 0fC1B80000, 0f00000000, %p20;
	mov.b32 	%r53, %f22;
	add.s32 	%r54, %r53, -1059760811;
	and.b32  	%r55, %r54, -8388608;
	sub.s32 	%r56, %r53, %r55;
	mov.b32 	%f94, %r56;
	cvt.rn.f32.s32 	%f95, %r55;
	mov.f32 	%f96, 0f34000000;
	fma.rn.ftz.f32 	%f97, %f95, %f96, %f93;
	add.f32 	%f98, %f94, 0fBF800000;
	mov.f32 	%f99, 0f3E1039F6;
	mov.f32 	%f100, 0fBE055027;
	fma.rn.ftz.f32 	%f101, %f100, %f98, %f99;
	mov.f32 	%f102, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f103, %f101, %f98, %f102;
	mov.f32 	%f104, 0f3E0F2955;
	fma.rn.ftz.f32 	%f105, %f103, %f98, %f104;
	mov.f32 	%f106, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f107, %f105, %f98, %f106;
	mov.f32 	%f108, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f109, %f107, %f98, %f108;
	mov.f32 	%f110, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f111, %f109, %f98, %f110;
	mov.f32 	%f112, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f113, %f111, %f98, %f112;
	mov.f32 	%f114, 0fBF000000;
	fma.rn.ftz.f32 	%f115, %f113, %f98, %f114;
	mul.f32 	%f116, %f98, %f115;
	fma.rn.ftz.f32 	%f117, %f116, %f98, %f98;
	mov.f32 	%f118, 0f3F317218;
	fma.rn.ftz.f32 	%f280, %f97, %f118, %f117;
	setp.lt.u32 	%p21, %r53, 2139095040;
	mov.f32 	%f119, 0f7F800000;
	@%p21 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:0:24
	fma.rn.ftz.f32 	%f280, %f22, %f119, %f119;
$L__BB0_2:                              // %__nv_logf.exit
	// begin inline asm
	ex2.approx.f32 %f44, %f45;
	// end inline asm
	add.f32 	%f20, %f42, 0f3F800000;
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	setp.lt.f32 	%p22, %f19, 0f00800000;
	mul.f32 	%f120, %f19, 0f4B000000;
	selp.f32 	%f26, %f120, %f19, %p22;
	selp.f32 	%f121, 0fC1B80000, 0f00000000, %p22;
	mov.b32 	%r57, %f26;
	add.s32 	%r58, %r57, -1059760811;
	and.b32  	%r59, %r58, -8388608;
	sub.s32 	%r60, %r57, %r59;
	mov.b32 	%f122, %r60;
	cvt.rn.f32.s32 	%f123, %r59;
	fma.rn.ftz.f32 	%f125, %f123, %f96, %f121;
	add.f32 	%f126, %f122, 0fBF800000;
	fma.rn.ftz.f32 	%f129, %f100, %f126, %f99;
	fma.rn.ftz.f32 	%f131, %f129, %f126, %f102;
	fma.rn.ftz.f32 	%f133, %f131, %f126, %f104;
	fma.rn.ftz.f32 	%f135, %f133, %f126, %f106;
	fma.rn.ftz.f32 	%f137, %f135, %f126, %f108;
	fma.rn.ftz.f32 	%f139, %f137, %f126, %f110;
	fma.rn.ftz.f32 	%f141, %f139, %f126, %f112;
	fma.rn.ftz.f32 	%f143, %f141, %f126, %f114;
	mul.f32 	%f144, %f126, %f143;
	fma.rn.ftz.f32 	%f145, %f144, %f126, %f126;
	fma.rn.ftz.f32 	%f281, %f125, %f118, %f145;
	setp.lt.u32 	%p23, %r57, 2139095040;
	@%p23 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:0:24
	fma.rn.ftz.f32 	%f281, %f26, %f119, %f119;
$L__BB0_4:                              // %__nv_logf.exit30
	add.f32 	%f21, %f44, 0f3F800000;
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	setp.lt.f32 	%p24, %f20, 0f00800000;
	mul.f32 	%f148, %f20, 0f4B000000;
	selp.f32 	%f30, %f148, %f20, %p24;
	selp.f32 	%f149, 0fC1B80000, 0f00000000, %p24;
	mov.b32 	%r61, %f30;
	add.s32 	%r62, %r61, -1059760811;
	and.b32  	%r63, %r62, -8388608;
	sub.s32 	%r64, %r61, %r63;
	mov.b32 	%f150, %r64;
	cvt.rn.f32.s32 	%f151, %r63;
	fma.rn.ftz.f32 	%f153, %f151, %f96, %f149;
	add.f32 	%f154, %f150, 0fBF800000;
	fma.rn.ftz.f32 	%f157, %f100, %f154, %f99;
	fma.rn.ftz.f32 	%f159, %f157, %f154, %f102;
	fma.rn.ftz.f32 	%f161, %f159, %f154, %f104;
	fma.rn.ftz.f32 	%f163, %f161, %f154, %f106;
	fma.rn.ftz.f32 	%f165, %f163, %f154, %f108;
	fma.rn.ftz.f32 	%f167, %f165, %f154, %f110;
	fma.rn.ftz.f32 	%f169, %f167, %f154, %f112;
	fma.rn.ftz.f32 	%f171, %f169, %f154, %f114;
	mul.f32 	%f172, %f154, %f171;
	fma.rn.ftz.f32 	%f173, %f172, %f154, %f154;
	fma.rn.ftz.f32 	%f282, %f153, %f118, %f173;
	setp.lt.u32 	%p25, %r61, 2139095040;
	@%p25 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i57
	.loc	1 0 24                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:0:24
	fma.rn.ftz.f32 	%f282, %f30, %f119, %f119;
$L__BB0_6:                              // %__nv_logf.exit60
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0_param_0];
	ld.shared.f32 	%f16, [global_smem];
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	setp.lt.f32 	%p26, %f21, 0f00800000;
	mul.f32 	%f176, %f21, 0f4B000000;
	selp.f32 	%f34, %f176, %f21, %p26;
	selp.f32 	%f177, 0fC1B80000, 0f00000000, %p26;
	mov.b32 	%r65, %f34;
	add.s32 	%r66, %r65, -1059760811;
	and.b32  	%r67, %r66, -8388608;
	sub.s32 	%r68, %r65, %r67;
	mov.b32 	%f178, %r68;
	cvt.rn.f32.s32 	%f179, %r67;
	fma.rn.ftz.f32 	%f181, %f179, %f96, %f177;
	add.f32 	%f182, %f178, 0fBF800000;
	fma.rn.ftz.f32 	%f185, %f100, %f182, %f99;
	fma.rn.ftz.f32 	%f187, %f185, %f182, %f102;
	fma.rn.ftz.f32 	%f189, %f187, %f182, %f104;
	fma.rn.ftz.f32 	%f191, %f189, %f182, %f106;
	fma.rn.ftz.f32 	%f193, %f191, %f182, %f108;
	fma.rn.ftz.f32 	%f195, %f193, %f182, %f110;
	fma.rn.ftz.f32 	%f197, %f195, %f182, %f112;
	fma.rn.ftz.f32 	%f199, %f197, %f182, %f114;
	mul.f32 	%f200, %f182, %f199;
	fma.rn.ftz.f32 	%f201, %f200, %f182, %f182;
	fma.rn.ftz.f32 	%f283, %f181, %f118, %f201;
	setp.lt.u32 	%p27, %r65, 2139095040;
	@%p27 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i87
	.loc	1 0 24                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:0:24
	fma.rn.ftz.f32 	%f283, %f34, %f119, %f119;
$L__BB0_8:                              // %__nv_logf.exit90
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	setp.eq.f32 	%p35, %f30, 0f00000000;
	setp.eq.f32 	%p36, %f34, 0f00000000;
	setp.eq.f32 	%p37, %f22, 0f00000000;
	setp.eq.f32 	%p38, %f26, 0f00000000;
	.loc	1 45 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:45:19
	sub.f32 	%f204, %f12, %f18;
	sub.f32 	%f205, %f11, %f17;
	sub.f32 	%f206, %f4, %f8;
	sub.f32 	%f207, %f3, %f7;
$L__tmp10:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f208, %f16, 0f00000000;
$L__tmp11:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f209, %f13, 0f00000000;
$L__tmp12:
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	selp.f32 	%f210, 0fFF800000, %f281, %p38;
	selp.f32 	%f211, 0fFF800000, %f280, %p37;
	.loc	1 54 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:54:20
	neg.f32 	%f212, %f211;
	fma.rn.f32 	%f213, %f207, %f1, %f212;
	neg.f32 	%f214, %f210;
	fma.rn.f32 	%f215, %f206, %f2, %f214;
	.loc	1 56 13                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:56:13
	neg.f32 	%f216, %f215;
	fma.rn.f32 	%f217, %f216, %f4, 0f00000000;
	neg.f32 	%f218, %f213;
	fma.rn.f32 	%f219, %f218, %f3, 0f00000000;
	.loc	1 53 24                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:53:24
	selp.f32 	%f220, 0fFF800000, %f283, %p36;
	selp.f32 	%f221, 0fFF800000, %f282, %p35;
	.loc	1 54 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:54:20
	neg.f32 	%f222, %f221;
	fma.rn.f32 	%f223, %f205, %f9, %f222;
	neg.f32 	%f224, %f220;
	fma.rn.f32 	%f225, %f204, %f10, %f224;
	.loc	1 56 13                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:56:13
	neg.f32 	%f226, %f225;
	fma.rn.f32 	%f227, %f226, %f12, 0f00000000;
	neg.f32 	%f228, %f223;
	fma.rn.f32 	%f229, %f228, %f11, 0f00000000;
$L__tmp13:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f230, %f219, %f217;
	add.f32 	%f231, %f230, %f229;
	add.f32 	%f232, %f231, %f227;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f232;
	shfl.sync.bfly.b32	%r86, %r85, 16, 31, -1;
	mov.b32 	%f233, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f234, %f232, %f233;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f234;
	shfl.sync.bfly.b32	%r88, %r87, 8, 31, -1;
	mov.b32 	%f235, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f236, %f234, %f235;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f236;
	shfl.sync.bfly.b32	%r90, %r89, 4, 31, -1;
	mov.b32 	%f237, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f238, %f236, %f237;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f238;
	shfl.sync.bfly.b32	%r92, %r91, 2, 31, -1;
	mov.b32 	%f239, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f240, %f238, %f239;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f240;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f241, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f242, %f240, %f241;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f242;
	// begin inline asm
	@%p28 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p29 ld.shared.b32 %r71, [ %r72 + 0 ];
	// end inline asm
	mov.b32 	%f243, %r71;
	shfl.sync.bfly.b32	%r95, %r71, 1, 31, -1;
	mov.b32 	%f244, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f245, %f243, %f244;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f245;
	// begin inline asm
	@%p30 st.shared.b32 [ %r72 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f246, [global_smem];
$L__tmp14:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f247, %f246, 0f00000000;
$L__tmp15:
	.loc	1 60 13                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:60:13
	neg.f32 	%f248, %f6;
	fma.rn.f32 	%f249, %f248, %f215, 0f00000000;
	neg.f32 	%f250, %f5;
	fma.rn.f32 	%f251, %f250, %f213, 0f00000000;
	neg.f32 	%f252, %f15;
	fma.rn.f32 	%f253, %f252, %f225, 0f00000000;
	neg.f32 	%f254, %f14;
	fma.rn.f32 	%f255, %f254, %f223, 0f00000000;
$L__tmp16:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f256, %f251, %f249;
	add.f32 	%f257, %f256, %f255;
	add.f32 	%f258, %f257, %f253;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f258;
	shfl.sync.bfly.b32	%r97, %r96, 16, 31, -1;
	mov.b32 	%f259, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f260, %f258, %f259;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f260;
	shfl.sync.bfly.b32	%r99, %r98, 8, 31, -1;
	mov.b32 	%f261, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f262, %f260, %f261;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f262;
	shfl.sync.bfly.b32	%r101, %r100, 4, 31, -1;
	mov.b32 	%f263, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f264, %f262, %f263;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f264;
	shfl.sync.bfly.b32	%r103, %r102, 2, 31, -1;
	mov.b32 	%f265, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f266, %f264, %f265;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f266;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	mov.b32 	%f267, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f268, %f266, %f267;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f268;
	// begin inline asm
	@%p28 st.shared.b32 [ %r69 + 0 ], %r76;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p29 ld.shared.b32 %r77, [ %r72 + 0 ];
	// end inline asm
	mov.b32 	%f269, %r77;
	shfl.sync.bfly.b32	%r106, %r77, 1, 31, -1;
	mov.b32 	%f270, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f271, %f269, %f270;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f271;
	// begin inline asm
	@%p30 st.shared.b32 [ %r72 + 0 ], %r80;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f272, [global_smem];
$L__tmp17:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f273, %f272, 0f00000000;
$L__tmp18:
	.loc	1 63 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:63:19
	add.f32 	%f274, %f209, %f208;
	.loc	1 64 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:64:20
	mov.b32 	%r83, %f274;
	mov.b32 	%r82, %f208;
	// begin inline asm
	div.full.f32 %r81, %r82, %r83;
	// end inline asm
	mov.b32 	%f275, %r81;
	.loc	1 66 19                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:66:19
	sub.f32 	%f277, %f49, %f275;
	.loc	1 67 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:67:20
	mul.f32 	%f278, %f273, %f277;
	.loc	1 68 20                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:68:20
	fma.rn.f32 	%f279, %f247, %f275, %f278;
	.loc	1 69 4                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:69:4
	bar.sync 	0;
	.loc	1 70 63                         // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:70:63
	and.b32  	%r107, %r1, 63;
	setp.eq.s32 	%p34, %r107, 0;
	mov.b32 	%r84, %f279;
	// begin inline asm
	@%p34 st.global.b32 [ %rd7 + 0 ], { %r84 };
	// end inline asm
	.loc	1 70 4                          // cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py:70:4
	ret;
$L__tmp19:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 380                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x175 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 115
.b8 52
.b8 111
.b8 108
.b8 102
.b8 104
.b8 112
.b8 105
.b8 50
.b8 54
.b8 105
.b8 52
.b8 108
.b8 55
.b8 54
.b8 100
.b8 120
.b8 117
.b8 116
.b8 98
.b8 52
.b8 118
.b8 111
.b8 53
.b8 55
.b8 98
.b8 98
.b8 101
.b8 105
.b8 102
.b8 119
.b8 100
.b8 99
.b8 108
.b8 117
.b8 103
.b8 50
.b8 105
.b8 112
.b8 111
.b8 51
.b8 118
.b8 52
.b8 111
.b8 120
.b8 100
.b8 98
.b8 118
.b8 105
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 103
.b8 101
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0xd6 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 58                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xee:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp11                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x106:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x11e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x136:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp14                          // DW_AT_low_pc
.b64 $L__tmp15                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x14e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp16                          // DW_AT_low_pc
.b64 $L__tmp17                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x166:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp17                          // DW_AT_low_pc
.b64 $L__tmp18                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
