; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = lshr i32 %5, 5, !dbg !10
  %8 = shl i32 %5, 2, !dbg !10
  %9 = and i32 %8, 252, !dbg !10
  %10 = zext nneg i32 %9 to i64, !dbg !11
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !11
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !12
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !12
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !12
  %17 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !13
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #4, !dbg !14
  %19 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !14
  %21 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !14
  %23 = icmp eq i32 %6, 0, !dbg !15
  %24 = and i32 %7, 1, !dbg !15
  %25 = zext nneg i32 %24 to i64, !dbg !15
  %26 = getelementptr float, ptr addrspace(3) @global_smem, i64 %25, !dbg !15
  %27 = icmp slt i32 %5, 2, !dbg !15
  %28 = sext i32 %5 to i64, !dbg !15
  %29 = getelementptr float, ptr addrspace(3) @global_smem, i64 %28, !dbg !15
  %30 = and i32 %5, 1, !dbg !15
  %31 = icmp eq i32 %30, 0, !dbg !15
  %32 = and i1 %27, %31, !dbg !15
  %33 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !12
  %34 = insertelement <2 x i32> %33, i32 %14, i64 1, !dbg !12
  %35 = bitcast <2 x i32> %34 to <2 x float>, !dbg !12
  %36 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !14
  %37 = insertelement <2 x i32> %36, i32 %20, i64 1, !dbg !14
  %38 = bitcast <2 x i32> %37 to <2 x float>, !dbg !14
  %39 = fcmp oge <2 x float> %35, splat (float 5.000000e-01), !dbg !19
  %40 = uitofp <2 x i1> %39 to <2 x float>, !dbg !20
  %shift = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !21
  %41 = fadd <2 x float> %shift, %40, !dbg !21
  %42 = fsub <2 x float> splat (float 1.000000e+00), %40, !dbg !23
  %shift91 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !24
  %43 = fadd <2 x float> %42, %shift91, !dbg !24
  %44 = fcmp oge <2 x float> %38, zeroinitializer, !dbg !26
  %45 = uitofp <2 x i1> %44 to <2 x float>, !dbg !27
  %46 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !12
  %47 = insertelement <2 x i32> %46, i32 %16, i64 1, !dbg !12
  %48 = bitcast <2 x i32> %47 to <2 x float>, !dbg !12
  %49 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !14
  %50 = insertelement <2 x i32> %49, i32 %22, i64 1, !dbg !14
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !14
  %52 = fcmp oge <2 x float> %48, splat (float 5.000000e-01), !dbg !19
  %53 = uitofp <2 x i1> %52 to <2 x float>, !dbg !20
  %54 = fadd <2 x float> %41, %53, !dbg !21
  %shift92 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !21
  %55 = fadd <2 x float> %54, %shift92, !dbg !21
  %56 = extractelement <2 x float> %55, i64 0, !dbg !21
  %57 = bitcast float %56 to i32, !dbg !15
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 16, i32 31), !dbg !15
  %59 = bitcast i32 %58 to float, !dbg !15
  %60 = fadd float %56, %59, !dbg !21
  %61 = bitcast float %60 to i32, !dbg !15
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 8, i32 31), !dbg !15
  %63 = bitcast i32 %62 to float, !dbg !15
  %64 = fadd float %60, %63, !dbg !21
  %65 = bitcast float %64 to i32, !dbg !15
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 4, i32 31), !dbg !15
  %67 = bitcast i32 %66 to float, !dbg !15
  %68 = fadd float %64, %67, !dbg !21
  %69 = bitcast float %68 to i32, !dbg !15
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 2, i32 31), !dbg !15
  %71 = bitcast i32 %70 to float, !dbg !15
  %72 = fadd float %68, %71, !dbg !21
  %73 = bitcast float %72 to i32, !dbg !15
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 1, i32 31), !dbg !15
  %75 = bitcast i32 %74 to float, !dbg !15
  %76 = fadd float %72, %75, !dbg !21
  %77 = bitcast float %76 to <1 x i32>, !dbg !15
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %26, <1 x i32> %77, i1 %23) #4, !dbg !15
  tail call void @llvm.nvvm.barrier0(), !dbg !15
  %78 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %29, i1 %27) #4, !dbg !15
  %79 = bitcast i32 %78 to float, !dbg !15
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 1, i32 31), !dbg !15
  %81 = bitcast i32 %80 to float, !dbg !15
  %82 = fadd float %79, %81, !dbg !21
  %83 = bitcast float %82 to <1 x i32>, !dbg !15
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %83, i1 %32) #4, !dbg !15
  tail call void @llvm.nvvm.barrier0(), !dbg !15
  %84 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !15
  %85 = fsub <2 x float> splat (float 1.000000e+00), %53, !dbg !23
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %86 = fadd <2 x float> %85, %43, !dbg !24
  %shift93 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !24
  %87 = fadd <2 x float> %shift93, %86, !dbg !24
  %88 = extractelement <2 x float> %87, i64 0, !dbg !24
  %89 = bitcast float %88 to i32, !dbg !28
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 16, i32 31), !dbg !28
  %91 = bitcast i32 %90 to float, !dbg !28
  %92 = fadd float %88, %91, !dbg !24
  %93 = bitcast float %92 to i32, !dbg !28
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 8, i32 31), !dbg !28
  %95 = bitcast i32 %94 to float, !dbg !28
  %96 = fadd float %92, %95, !dbg !24
  %97 = bitcast float %96 to i32, !dbg !28
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 4, i32 31), !dbg !28
  %99 = bitcast i32 %98 to float, !dbg !28
  %100 = fadd float %96, %99, !dbg !24
  %101 = bitcast float %100 to i32, !dbg !28
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 2, i32 31), !dbg !28
  %103 = bitcast i32 %102 to float, !dbg !28
  %104 = fadd float %100, %103, !dbg !24
  %105 = bitcast float %104 to i32, !dbg !28
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 1, i32 31), !dbg !28
  %107 = bitcast i32 %106 to float, !dbg !28
  %108 = fadd float %104, %107, !dbg !24
  %109 = bitcast float %108 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %26, <1 x i32> %109, i1 %23) #4, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %110 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %29, i1 %27) #4, !dbg !28
  %111 = bitcast i32 %110 to float, !dbg !28
  %112 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 1, i32 31), !dbg !28
  %113 = bitcast i32 %112 to float, !dbg !28
  %114 = fadd float %111, %113, !dbg !24
  %115 = bitcast float %114 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %115, i1 %32) #4, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %116 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !28
  %117 = fcmp oge <2 x float> %51, zeroinitializer, !dbg !26
  %118 = uitofp <2 x i1> %117 to <2 x float>, !dbg !27
  %119 = bitcast i32 %19 to float, !dbg !29
  %120 = fmul <2 x float> %38, %45, !dbg !29
  %121 = extractelement <2 x float> %120, i64 0, !dbg !29
  %122 = bitcast i32 %20 to float, !dbg !29
  %123 = fmul <2 x float> %38, %45, !dbg !29
  %124 = extractelement <2 x float> %123, i64 1, !dbg !29
  %125 = bitcast i32 %21 to float, !dbg !29
  %126 = fmul <2 x float> %51, %118, !dbg !29
  %127 = extractelement <2 x float> %126, i64 0, !dbg !29
  %128 = bitcast i32 %22 to float, !dbg !29
  %129 = fmul <2 x float> %51, %118, !dbg !29
  %130 = extractelement <2 x float> %129, i64 1, !dbg !29
  %131 = fmul float %121, 2.000000e+00, !dbg !30
  %132 = fmul float %124, 2.000000e+00, !dbg !30
  %133 = fmul float %127, 2.000000e+00, !dbg !30
  %134 = fmul float %130, 2.000000e+00, !dbg !30
  %135 = fsub float %119, %131, !dbg !31
  %136 = fsub float %122, %132, !dbg !31
  %137 = fsub float %125, %133, !dbg !31
  %138 = fsub float %128, %134, !dbg !31
  %139 = fmul float %135, 0x3FF7154760000000, !dbg !32
  %140 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %139) #4, !dbg !32
  %141 = fmul float %136, 0x3FF7154760000000, !dbg !32
  %142 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %141) #4, !dbg !32
  %143 = fmul float %137, 0x3FF7154760000000, !dbg !32
  %144 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %143) #4, !dbg !32
  %145 = fmul float %138, 0x3FF7154760000000, !dbg !32
  %146 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %145) #4, !dbg !32
  %147 = fadd float %140, 1.000000e+00, !dbg !33
  %148 = fadd float %142, 1.000000e+00, !dbg !33
  %149 = fadd float %144, 1.000000e+00, !dbg !33
  %150 = fadd float %146, 1.000000e+00, !dbg !33
  %151 = fcmp olt float %147, 0x3810000000000000, !dbg !34
  %152 = fmul float %147, 0x4160000000000000, !dbg !34
  %.02.i = select i1 %151, float %152, float %147, !dbg !34
  %i.i.0.i = select i1 %151, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %153 = bitcast float %.02.i to i32, !dbg !34
  %154 = add i32 %153, -1059760811, !dbg !34
  %155 = and i32 %154, -8388608, !dbg !34
  %156 = sub i32 %153, %155, !dbg !34
  %157 = bitcast i32 %156 to float, !dbg !34
  %158 = sitofp i32 %155 to float, !dbg !34
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i = icmp eq i32 %159, 0, !dbg !34
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !34
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %158, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !34
  %.08.i = select i1 %.not.i, float %161, float %160, !dbg !34
  %162 = fadd float %157, -1.000000e+00, !dbg !34
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i = icmp eq i32 %163, 0, !dbg !34
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #4, !dbg !34
  %165 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i = select i1 %.not1.i, float %165, float %164, !dbg !34
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i = icmp eq i32 %166, 0, !dbg !34
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %162, float 0xBFBF19B980000000) #4, !dbg !34
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %162, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i = select i1 %.not2.i, float %168, float %167, !dbg !34
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i = icmp eq i32 %169, 0, !dbg !34
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %162, float 0x3FC1E52AA0000000) #4, !dbg !34
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %162, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i = select i1 %.not3.i, float %171, float %170, !dbg !34
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i = icmp eq i32 %172, 0, !dbg !34
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %162, float 0xBFC55B1720000000) #4, !dbg !34
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %162, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i = select i1 %.not4.i, float %174, float %173, !dbg !34
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i = icmp eq i32 %175, 0, !dbg !34
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %162, float 0x3FC99DA160000000) #4, !dbg !34
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %162, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i = select i1 %.not5.i, float %177, float %176, !dbg !34
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i = icmp eq i32 %178, 0, !dbg !34
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %162, float 0xBFCFFFE440000000) #4, !dbg !34
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %162, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i = select i1 %.not6.i, float %180, float %179, !dbg !34
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i = icmp eq i32 %181, 0, !dbg !34
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %162, float 0x3FD5554F00000000) #4, !dbg !34
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %162, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i = select i1 %.not7.i, float %183, float %182, !dbg !34
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i = icmp eq i32 %184, 0, !dbg !34
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %162, float -5.000000e-01) #4, !dbg !34
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %162, float -5.000000e-01) #4, !dbg !34
  %.07.i = select i1 %.not8.i, float %186, float %185, !dbg !34
  %187 = fmul float %162, %.07.i, !dbg !34
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i = icmp eq i32 %188, 0, !dbg !34
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float %162, float %162) #4, !dbg !34
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float %162, float %162) #4, !dbg !34
  %.06.i = select i1 %.not9.i, float %190, float %189, !dbg !34
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i = icmp eq i32 %191, 0, !dbg !34
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !34
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !34
  %.04.i = select i1 %.not10.i, float %193, float %192, !dbg !34
  %194 = icmp ugt i32 %153, 2139095039, !dbg !34
  br i1 %194, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !34

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i = icmp eq i32 %195, 0, !dbg !34
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i = select i1 %.not11.i, float %197, float %196, !dbg !34
  br label %__nv_logf.exit, !dbg !34

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !34
  %198 = fcmp olt float %148, 0x3810000000000000, !dbg !34
  %199 = fmul float %148, 0x4160000000000000, !dbg !34
  %.02.i1 = select i1 %198, float %199, float %148, !dbg !34
  %i.i.0.i2 = select i1 %198, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %200 = bitcast float %.02.i1 to i32, !dbg !34
  %201 = add i32 %200, -1059760811, !dbg !34
  %202 = and i32 %201, -8388608, !dbg !34
  %203 = sub i32 %200, %202, !dbg !34
  %204 = bitcast i32 %203 to float, !dbg !34
  %205 = sitofp i32 %202 to float, !dbg !34
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i3 = icmp eq i32 %206, 0, !dbg !34
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !34
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !34
  %.08.i4 = select i1 %.not.i3, float %208, float %207, !dbg !34
  %209 = fadd float %204, -1.000000e+00, !dbg !34
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i5 = icmp eq i32 %210, 0, !dbg !34
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #4, !dbg !34
  %212 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i6 = select i1 %.not1.i5, float %212, float %211, !dbg !34
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i7 = icmp eq i32 %213, 0, !dbg !34
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %209, float 0xBFBF19B980000000) #4, !dbg !34
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %209, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i8 = select i1 %.not2.i7, float %215, float %214, !dbg !34
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i9 = icmp eq i32 %216, 0, !dbg !34
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %209, float 0x3FC1E52AA0000000) #4, !dbg !34
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %209, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i10 = select i1 %.not3.i9, float %218, float %217, !dbg !34
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i11 = icmp eq i32 %219, 0, !dbg !34
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %209, float 0xBFC55B1720000000) #4, !dbg !34
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %209, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i12 = select i1 %.not4.i11, float %221, float %220, !dbg !34
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i13 = icmp eq i32 %222, 0, !dbg !34
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %209, float 0x3FC99DA160000000) #4, !dbg !34
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %209, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i14 = select i1 %.not5.i13, float %224, float %223, !dbg !34
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i15 = icmp eq i32 %225, 0, !dbg !34
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %209, float 0xBFCFFFE440000000) #4, !dbg !34
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %209, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i16 = select i1 %.not6.i15, float %227, float %226, !dbg !34
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i17 = icmp eq i32 %228, 0, !dbg !34
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %209, float 0x3FD5554F00000000) #4, !dbg !34
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %209, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i18 = select i1 %.not7.i17, float %230, float %229, !dbg !34
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i19 = icmp eq i32 %231, 0, !dbg !34
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %209, float -5.000000e-01) #4, !dbg !34
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %209, float -5.000000e-01) #4, !dbg !34
  %.07.i20 = select i1 %.not8.i19, float %233, float %232, !dbg !34
  %234 = fmul float %209, %.07.i20, !dbg !34
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i21 = icmp eq i32 %235, 0, !dbg !34
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float %209, float %209) #4, !dbg !34
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float %209, float %209) #4, !dbg !34
  %.06.i22 = select i1 %.not9.i21, float %237, float %236, !dbg !34
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i23 = icmp eq i32 %238, 0, !dbg !34
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !34
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !34
  %.04.i24 = select i1 %.not10.i23, float %240, float %239, !dbg !34
  %241 = icmp ugt i32 %200, 2139095039, !dbg !34
  br i1 %241, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !34

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i28 = icmp eq i32 %242, 0, !dbg !34
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i29 = select i1 %.not11.i28, float %244, float %243, !dbg !34
  br label %__nv_logf.exit30, !dbg !34

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !34
  %245 = fcmp olt float %149, 0x3810000000000000, !dbg !34
  %246 = fmul float %149, 0x4160000000000000, !dbg !34
  %.02.i31 = select i1 %245, float %246, float %149, !dbg !34
  %i.i.0.i32 = select i1 %245, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %247 = bitcast float %.02.i31 to i32, !dbg !34
  %248 = add i32 %247, -1059760811, !dbg !34
  %249 = and i32 %248, -8388608, !dbg !34
  %250 = sub i32 %247, %249, !dbg !34
  %251 = bitcast i32 %250 to float, !dbg !34
  %252 = sitofp i32 %249 to float, !dbg !34
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i33 = icmp eq i32 %253, 0, !dbg !34
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !34
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %252, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !34
  %.08.i34 = select i1 %.not.i33, float %255, float %254, !dbg !34
  %256 = fadd float %251, -1.000000e+00, !dbg !34
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i35 = icmp eq i32 %257, 0, !dbg !34
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %256, float 0x3FC2073EC0000000) #4, !dbg !34
  %259 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %256, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i36 = select i1 %.not1.i35, float %259, float %258, !dbg !34
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i37 = icmp eq i32 %260, 0, !dbg !34
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %256, float 0xBFBF19B980000000) #4, !dbg !34
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %256, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i38 = select i1 %.not2.i37, float %262, float %261, !dbg !34
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i39 = icmp eq i32 %263, 0, !dbg !34
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %256, float 0x3FC1E52AA0000000) #4, !dbg !34
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %256, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i40 = select i1 %.not3.i39, float %265, float %264, !dbg !34
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i41 = icmp eq i32 %266, 0, !dbg !34
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %256, float 0xBFC55B1720000000) #4, !dbg !34
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %256, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i42 = select i1 %.not4.i41, float %268, float %267, !dbg !34
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i43 = icmp eq i32 %269, 0, !dbg !34
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %256, float 0x3FC99DA160000000) #4, !dbg !34
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %256, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i44 = select i1 %.not5.i43, float %271, float %270, !dbg !34
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i45 = icmp eq i32 %272, 0, !dbg !34
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %256, float 0xBFCFFFE440000000) #4, !dbg !34
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %256, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i46 = select i1 %.not6.i45, float %274, float %273, !dbg !34
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i47 = icmp eq i32 %275, 0, !dbg !34
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %256, float 0x3FD5554F00000000) #4, !dbg !34
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %256, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i48 = select i1 %.not7.i47, float %277, float %276, !dbg !34
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i49 = icmp eq i32 %278, 0, !dbg !34
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %256, float -5.000000e-01) #4, !dbg !34
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %256, float -5.000000e-01) #4, !dbg !34
  %.07.i50 = select i1 %.not8.i49, float %280, float %279, !dbg !34
  %281 = fmul float %256, %.07.i50, !dbg !34
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i51 = icmp eq i32 %282, 0, !dbg !34
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %281, float %256, float %256) #4, !dbg !34
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %281, float %256, float %256) #4, !dbg !34
  %.06.i52 = select i1 %.not9.i51, float %284, float %283, !dbg !34
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i53 = icmp eq i32 %285, 0, !dbg !34
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !34
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !34
  %.04.i54 = select i1 %.not10.i53, float %287, float %286, !dbg !34
  %288 = icmp ugt i32 %247, 2139095039, !dbg !34
  br i1 %288, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !34

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i58 = icmp eq i32 %289, 0, !dbg !34
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i59 = select i1 %.not11.i58, float %291, float %290, !dbg !34
  br label %__nv_logf.exit60, !dbg !34

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !34
  %292 = fcmp olt float %150, 0x3810000000000000, !dbg !34
  %293 = fmul float %150, 0x4160000000000000, !dbg !34
  %.02.i61 = select i1 %292, float %293, float %150, !dbg !34
  %i.i.0.i62 = select i1 %292, float -2.300000e+01, float 0.000000e+00, !dbg !34
  %294 = bitcast float %.02.i61 to i32, !dbg !34
  %295 = add i32 %294, -1059760811, !dbg !34
  %296 = and i32 %295, -8388608, !dbg !34
  %297 = sub i32 %294, %296, !dbg !34
  %298 = bitcast i32 %297 to float, !dbg !34
  %299 = sitofp i32 %296 to float, !dbg !34
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i63 = icmp eq i32 %300, 0, !dbg !34
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %299, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !34
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %299, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !34
  %.08.i64 = select i1 %.not.i63, float %302, float %301, !dbg !34
  %303 = fadd float %298, -1.000000e+00, !dbg !34
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not1.i65 = icmp eq i32 %304, 0, !dbg !34
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %303, float 0x3FC2073EC0000000) #4, !dbg !34
  %306 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %303, float 0x3FC2073EC0000000) #4, !dbg !34
  %.010.i66 = select i1 %.not1.i65, float %306, float %305, !dbg !34
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not2.i67 = icmp eq i32 %307, 0, !dbg !34
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %303, float 0xBFBF19B980000000) #4, !dbg !34
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %303, float 0xBFBF19B980000000) #4, !dbg !34
  %.011.i68 = select i1 %.not2.i67, float %309, float %308, !dbg !34
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not3.i69 = icmp eq i32 %310, 0, !dbg !34
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %303, float 0x3FC1E52AA0000000) #4, !dbg !34
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %303, float 0x3FC1E52AA0000000) #4, !dbg !34
  %.012.i70 = select i1 %.not3.i69, float %312, float %311, !dbg !34
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not4.i71 = icmp eq i32 %313, 0, !dbg !34
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %303, float 0xBFC55B1720000000) #4, !dbg !34
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %303, float 0xBFC55B1720000000) #4, !dbg !34
  %.09.i72 = select i1 %.not4.i71, float %315, float %314, !dbg !34
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not5.i73 = icmp eq i32 %316, 0, !dbg !34
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %303, float 0x3FC99DA160000000) #4, !dbg !34
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %303, float 0x3FC99DA160000000) #4, !dbg !34
  %.05.i74 = select i1 %.not5.i73, float %318, float %317, !dbg !34
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not6.i75 = icmp eq i32 %319, 0, !dbg !34
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %303, float 0xBFCFFFE440000000) #4, !dbg !34
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %303, float 0xBFCFFFE440000000) #4, !dbg !34
  %.01.i76 = select i1 %.not6.i75, float %321, float %320, !dbg !34
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not7.i77 = icmp eq i32 %322, 0, !dbg !34
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %303, float 0x3FD5554F00000000) #4, !dbg !34
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %303, float 0x3FD5554F00000000) #4, !dbg !34
  %.0.i78 = select i1 %.not7.i77, float %324, float %323, !dbg !34
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not8.i79 = icmp eq i32 %325, 0, !dbg !34
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %303, float -5.000000e-01) #4, !dbg !34
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %303, float -5.000000e-01) #4, !dbg !34
  %.07.i80 = select i1 %.not8.i79, float %327, float %326, !dbg !34
  %328 = fmul float %303, %.07.i80, !dbg !34
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not9.i81 = icmp eq i32 %329, 0, !dbg !34
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %328, float %303, float %303) #4, !dbg !34
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %328, float %303, float %303) #4, !dbg !34
  %.06.i82 = select i1 %.not9.i81, float %331, float %330, !dbg !34
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not10.i83 = icmp eq i32 %332, 0, !dbg !34
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !34
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !34
  %.04.i84 = select i1 %.not10.i83, float %334, float %333, !dbg !34
  %335 = icmp ugt i32 %294, 2139095039, !dbg !34
  br i1 %335, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !34

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not11.i88 = icmp eq i32 %336, 0, !dbg !34
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !34
  %.03.i89 = select i1 %.not11.i88, float %338, float %337, !dbg !34
  br label %__nv_logf.exit90, !dbg !34

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !34
  %339 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !34
  %340 = insertelement <2 x float> %339, float %.02.i61, i64 1, !dbg !34
  %341 = fcmp oeq <2 x float> %340, zeroinitializer, !dbg !34
  %342 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !34
  %343 = insertelement <2 x float> %342, float %.02.i1, i64 1, !dbg !34
  %344 = fcmp oeq <2 x float> %343, zeroinitializer, !dbg !34
  %345 = fsub <2 x float> %53, %118, !dbg !35
  %346 = fsub <2 x float> %40, %45, !dbg !35
  %347 = fadd float %116, 0.000000e+00, !dbg !36
  %348 = fadd float %84, 0.000000e+00, !dbg !40
  %349 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !34
  %350 = insertelement <2 x float> %349, float %r.i.0.i25, i64 1, !dbg !34
  %351 = select <2 x i1> %344, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %350, !dbg !34
  %352 = fmul <2 x float> %346, %38, !dbg !42
  %353 = fsub <2 x float> %352, %351, !dbg !43
  %354 = fmul <2 x float> %353, %40, !dbg !44
  %355 = fsub <2 x float> zeroinitializer, %354, !dbg !45
  %356 = fmul <2 x float> %345, %51, !dbg !42
  %357 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !34
  %358 = insertelement <2 x float> %357, float %r.i.0.i85, i64 1, !dbg !34
  %359 = select <2 x i1> %341, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %358, !dbg !34
  %360 = fsub <2 x float> %356, %359, !dbg !43
  %361 = fmul <2 x float> %360, %53, !dbg !44
  %362 = fsub <2 x float> zeroinitializer, %361, !dbg !45
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %shift94 = shufflevector <2 x float> %355, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !48
  %363 = fadd <2 x float> %355, %shift94, !dbg !48
  %364 = fadd <2 x float> %363, %362, !dbg !48
  %shift95 = shufflevector <2 x float> %362, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !48
  %365 = fadd <2 x float> %364, %shift95, !dbg !48
  %366 = extractelement <2 x float> %365, i64 0, !dbg !48
  %367 = bitcast float %366 to i32, !dbg !46
  %368 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %367, i32 16, i32 31), !dbg !46
  %369 = bitcast i32 %368 to float, !dbg !46
  %370 = fadd float %366, %369, !dbg !48
  %371 = bitcast float %370 to i32, !dbg !46
  %372 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %371, i32 8, i32 31), !dbg !46
  %373 = bitcast i32 %372 to float, !dbg !46
  %374 = fadd float %370, %373, !dbg !48
  %375 = bitcast float %374 to i32, !dbg !46
  %376 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %375, i32 4, i32 31), !dbg !46
  %377 = bitcast i32 %376 to float, !dbg !46
  %378 = fadd float %374, %377, !dbg !48
  %379 = bitcast float %378 to i32, !dbg !46
  %380 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %379, i32 2, i32 31), !dbg !46
  %381 = bitcast i32 %380 to float, !dbg !46
  %382 = fadd float %378, %381, !dbg !48
  %383 = bitcast float %382 to i32, !dbg !46
  %384 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %383, i32 1, i32 31), !dbg !46
  %385 = bitcast i32 %384 to float, !dbg !46
  %386 = fadd float %382, %385, !dbg !48
  %387 = bitcast float %386 to <1 x i32>, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %26, <1 x i32> %387, i1 %23) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %388 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %29, i1 %27) #4, !dbg !46
  %389 = bitcast i32 %388 to float, !dbg !46
  %390 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %388, i32 1, i32 31), !dbg !46
  %391 = bitcast i32 %390 to float, !dbg !46
  %392 = fadd float %389, %391, !dbg !48
  %393 = bitcast float %392 to <1 x i32>, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %393, i1 %32) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %394 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !46
  %395 = fadd float %394, 0.000000e+00, !dbg !49
  %396 = fmul <2 x float> %42, %353, !dbg !51
  %397 = fsub <2 x float> zeroinitializer, %396, !dbg !52
  %398 = fmul <2 x float> %85, %360, !dbg !51
  %399 = fsub <2 x float> zeroinitializer, %398, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %shift96 = shufflevector <2 x float> %397, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !55
  %400 = fadd <2 x float> %397, %shift96, !dbg !55
  %401 = fadd <2 x float> %400, %399, !dbg !55
  %shift97 = shufflevector <2 x float> %399, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !55
  %402 = fadd <2 x float> %401, %shift97, !dbg !55
  %403 = extractelement <2 x float> %402, i64 0, !dbg !55
  %404 = bitcast float %403 to i32, !dbg !53
  %405 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %404, i32 16, i32 31), !dbg !53
  %406 = bitcast i32 %405 to float, !dbg !53
  %407 = fadd float %403, %406, !dbg !55
  %408 = bitcast float %407 to i32, !dbg !53
  %409 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %408, i32 8, i32 31), !dbg !53
  %410 = bitcast i32 %409 to float, !dbg !53
  %411 = fadd float %407, %410, !dbg !55
  %412 = bitcast float %411 to i32, !dbg !53
  %413 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %412, i32 4, i32 31), !dbg !53
  %414 = bitcast i32 %413 to float, !dbg !53
  %415 = fadd float %411, %414, !dbg !55
  %416 = bitcast float %415 to i32, !dbg !53
  %417 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %416, i32 2, i32 31), !dbg !53
  %418 = bitcast i32 %417 to float, !dbg !53
  %419 = fadd float %415, %418, !dbg !55
  %420 = bitcast float %419 to i32, !dbg !53
  %421 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %420, i32 1, i32 31), !dbg !53
  %422 = bitcast i32 %421 to float, !dbg !53
  %423 = fadd float %419, %422, !dbg !55
  %424 = bitcast float %423 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %26, <1 x i32> %424, i1 %23) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %425 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %29, i1 %27) #4, !dbg !53
  %426 = bitcast i32 %425 to float, !dbg !53
  %427 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %425, i32 1, i32 31), !dbg !53
  %428 = bitcast i32 %427 to float, !dbg !53
  %429 = fadd float %426, %428, !dbg !55
  %430 = bitcast float %429 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %430, i1 %32) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %431 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !53
  %432 = fadd float %431, 0.000000e+00, !dbg !56
  %433 = fadd float %348, %347, !dbg !58
  %434 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %347, float %433) #4, !dbg !59
  %435 = fmul float %395, %434, !dbg !60
  %436 = fsub float 1.000000e+00, %434, !dbg !61
  %437 = fmul float %432, %436, !dbg !62
  %438 = fadd float %435, %437, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !64
  %urem = and i32 %5, 63, !dbg !65
  %439 = icmp eq i32 %urem, 0, !dbg !65
  %440 = bitcast float %438 to i32, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %440, ptr addrspace(1) %0, i1 %439) #4, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py", directory: "inductor_cache/bs")
!4 = !{ptr @triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0", linkageName: "triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 31, scope: !7)
!14 = !DILocation(line: 32, column: 36, scope: !7)
!15 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 37, column: 57, scope: !7)
!19 = !DILocation(line: 34, column: 19, scope: !7)
!20 = !DILocation(line: 35, column: 19, scope: !7)
!21 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !18)
!22 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!23 = !DILocation(line: 39, column: 18, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !25)
!25 = !DILocation(line: 41, column: 58, scope: !7)
!26 = !DILocation(line: 43, column: 21, scope: !7)
!27 = !DILocation(line: 44, column: 21, scope: !7)
!28 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !25)
!29 = !DILocation(line: 47, column: 20, scope: !7)
!30 = !DILocation(line: 49, column: 20, scope: !7)
!31 = !DILocation(line: 50, column: 20, scope: !7)
!32 = !DILocation(line: 51, column: 24, scope: !7)
!33 = !DILocation(line: 52, column: 20, scope: !7)
!34 = !DILocation(line: 53, column: 24, scope: !7)
!35 = !DILocation(line: 45, column: 19, scope: !7)
!36 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 41, column: 45, scope: !7)
!40 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !41)
!41 = !DILocation(line: 37, column: 44, scope: !7)
!42 = !DILocation(line: 46, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 20, scope: !7)
!44 = !DILocation(line: 55, column: 19, scope: !7)
!45 = !DILocation(line: 56, column: 13, scope: !7)
!46 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !47)
!47 = !DILocation(line: 58, column: 59, scope: !7)
!48 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !47)
!49 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !50)
!50 = !DILocation(line: 58, column: 45, scope: !7)
!51 = !DILocation(line: 59, column: 19, scope: !7)
!52 = !DILocation(line: 60, column: 13, scope: !7)
!53 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !54)
!54 = !DILocation(line: 62, column: 59, scope: !7)
!55 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !54)
!56 = !DILocation(line: 73, column: 15, scope: !37, inlinedAt: !57)
!57 = !DILocation(line: 62, column: 45, scope: !7)
!58 = !DILocation(line: 63, column: 19, scope: !7)
!59 = !DILocation(line: 64, column: 20, scope: !7)
!60 = !DILocation(line: 65, column: 20, scope: !7)
!61 = !DILocation(line: 66, column: 19, scope: !7)
!62 = !DILocation(line: 67, column: 20, scope: !7)
!63 = !DILocation(line: 68, column: 20, scope: !7)
!64 = !DILocation(line: 69, column: 4, scope: !7)
!65 = !DILocation(line: 70, column: 63, scope: !7)
!66 = !DILocation(line: 70, column: 4, scope: !7)
