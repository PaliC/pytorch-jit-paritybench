#loc = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":37:57)
#loc15 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":41:58)
#loc30 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":58:59)
#loc34 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":62:59)
#loc47 = loc(callsite(#loc1 at #loc10))
#loc51 = loc(callsite(#loc1 at #loc15))
#loc54 = loc(callsite(#loc1 at #loc30))
#loc57 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused__to_copy_add_div_exp_ge_log_mul_neg_rsub_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<2.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.cmpf oge, %3, %cst_4 : tensor<256xf32> loc(#loc7)
    %8 = arith.uitofp %7 : tensor<256xi1> to tensor<256xf32> loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc10)), %arg5: f32 loc(callsite(#loc1 at #loc10))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc59)
      tt.reduce.return %42 : f32 loc(#loc46)
    }) : (tensor<256xf32>) -> f32 loc(#loc46)
    %10 = arith.addf %9, %cst_0 : f32 loc(#loc49)
    %11 = arith.subf %cst_3, %8 : tensor<256xf32> loc(#loc14)
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc15)), %arg5: f32 loc(callsite(#loc1 at #loc15))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc60)
      tt.reduce.return %42 : f32 loc(#loc50)
    }) : (tensor<256xf32>) -> f32 loc(#loc50)
    %13 = arith.addf %12, %cst_0 : f32 loc(#loc52)
    %14 = arith.cmpf oge, %6, %cst_2 : tensor<256xf32> loc(#loc17)
    %15 = arith.uitofp %14 : tensor<256xi1> to tensor<256xf32> loc(#loc18)
    %16 = arith.subf %8, %15 : tensor<256xf32> loc(#loc19)
    %17 = arith.mulf %6, %16 : tensor<256xf32> loc(#loc20)
    %18 = arith.mulf %6, %15 : tensor<256xf32> loc(#loc21)
    %19 = arith.mulf %18, %cst_1 : tensor<256xf32> loc(#loc22)
    %20 = arith.subf %6, %19 : tensor<256xf32> loc(#loc23)
    %21 = math.exp %20 : tensor<256xf32> loc(#loc24)
    %22 = arith.addf %21, %cst_3 : tensor<256xf32> loc(#loc25)
    %23 = math.log %22 : tensor<256xf32> loc(#loc26)
    %24 = arith.subf %17, %23 : tensor<256xf32> loc(#loc27)
    %25 = arith.mulf %8, %24 : tensor<256xf32> loc(#loc28)
    %26 = arith.subf %cst_2, %25 : tensor<256xf32> loc(#loc29)
    %27 = "tt.reduce"(%26) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc30)), %arg5: f32 loc(callsite(#loc1 at #loc30))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc61)
      tt.reduce.return %42 : f32 loc(#loc53)
    }) : (tensor<256xf32>) -> f32 loc(#loc53)
    %28 = arith.addf %27, %cst_0 : f32 loc(#loc55)
    %29 = arith.mulf %11, %24 : tensor<256xf32> loc(#loc32)
    %30 = arith.subf %cst_2, %29 : tensor<256xf32> loc(#loc33)
    %31 = "tt.reduce"(%30) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc34)), %arg5: f32 loc(callsite(#loc1 at #loc34))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc62)
      tt.reduce.return %42 : f32 loc(#loc56)
    }) : (tensor<256xf32>) -> f32 loc(#loc56)
    %32 = arith.addf %31, %cst_0 : f32 loc(#loc58)
    %33 = arith.addf %10, %13 : f32 loc(#loc36)
    %34 = arith.divf %13, %33 : f32 loc(#loc37)
    %35 = arith.mulf %34, %28 : f32 loc(#loc38)
    %36 = arith.subf %cst, %34 : f32 loc(#loc39)
    %37 = arith.mulf %36, %32 : f32 loc(#loc40)
    %38 = arith.addf %35, %37 : f32 loc(#loc41)
    %39 = tt.splat %38 : f32 -> tensor<1xf32> loc(#loc41)
    gpu.barrier loc(#loc42)
    %40 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc43)
    tt.store %41, %39 : tensor<1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":27:26)
#loc3 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":31:30)
#loc4 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":31:35)
#loc5 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":32:31)
#loc6 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":32:36)
#loc7 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":34:19)
#loc8 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":35:19)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc13 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":37:44)
#loc14 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":39:18)
#loc16 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":41:45)
#loc17 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":43:21)
#loc18 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":44:21)
#loc19 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":45:19)
#loc20 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":46:20)
#loc21 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":47:20)
#loc22 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":49:20)
#loc23 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":50:20)
#loc24 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":51:24)
#loc25 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":52:20)
#loc26 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":53:24)
#loc27 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":54:20)
#loc28 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":55:19)
#loc29 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":56:13)
#loc31 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":58:45)
#loc32 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":59:19)
#loc33 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":60:13)
#loc35 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":62:45)
#loc36 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":63:19)
#loc37 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":64:20)
#loc38 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":65:20)
#loc39 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":66:19)
#loc40 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":67:20)
#loc41 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":68:20)
#loc42 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":69:4)
#loc43 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":70:28)
#loc44 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":70:63)
#loc45 = loc("inductor_cache/bs/cbs4olfhpi26i4l76dxutb4vo57bbeifwdclug2ipo3v4oxdbvid.py":70:4)
#loc46 = loc(callsite(#loc9 at #loc10))
#loc48 = loc(callsite(#loc11 at #loc9))
#loc49 = loc(callsite(#loc12 at #loc13))
#loc50 = loc(callsite(#loc9 at #loc15))
#loc52 = loc(callsite(#loc12 at #loc16))
#loc53 = loc(callsite(#loc9 at #loc30))
#loc55 = loc(callsite(#loc12 at #loc31))
#loc56 = loc(callsite(#loc9 at #loc34))
#loc58 = loc(callsite(#loc12 at #loc35))
#loc59 = loc(callsite(#loc48 at #loc10))
#loc60 = loc(callsite(#loc48 at #loc15))
#loc61 = loc(callsite(#loc48 at #loc30))
#loc62 = loc(callsite(#loc48 at #loc34))
