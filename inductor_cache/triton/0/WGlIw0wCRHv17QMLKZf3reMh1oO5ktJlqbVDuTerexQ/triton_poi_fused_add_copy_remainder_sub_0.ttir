#loc = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":19:0)
module {
  tt.func public @triton_poi_fused_add_copy_remainder_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":19:0), %arg2: i32 loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<32xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e+00> : tensor<32xf32> loc(#loc1)
    %cst_1 = arith.constant 2.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<32xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<32xi32> loc(#loc1)
    %cst_5 = arith.constant dense<5> : tensor<32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<20> : tensor<32xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<32xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<32xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<32xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_5 : tensor<32xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_5 : tensor<32xi32> loc(#loc8)
    %8 = arith.muli %7, %cst_5 : tensor<32xi32> loc(#loc9)
    %9 = arith.addi %8, %cst_4 : tensor<32xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<32x!tt.ptr<f32>>, tensor<32xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<32x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %10, %4 : tensor<32x!tt.ptr<f32>>, tensor<32xi32> loc(#loc13)
    %14 = tt.load %13, %5 : tensor<32x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.cmpi eq, %6, %cst_4 : tensor<32xi32> loc(#loc15)
    %16 = arith.addf %12, %cst_3 : tensor<32xf32> loc(#loc16)
    %17 = arith.addf %16, %cst_2 : tensor<32xf32> loc(#loc17)
    %18 = arith.divf %17, %cst_0 : tensor<32xf32> loc(#loc18)
    %19 = math.floor %18 : tensor<32xf32> loc(#loc18)
    %20 = arith.mulf %19, %cst_0 : tensor<32xf32> loc(#loc18)
    %21 = arith.subf %17, %20 : tensor<32xf32> loc(#loc18)
    %22 = arith.cmpf une, %21, %cst_3 : tensor<32xf32> loc(#loc19)
    %23 = tt.extern_elementwise %21 {libname = "", libpath = "", pure = true, symbol = "__nv_signbitf"} : (tensor<32xf32>) -> tensor<32xi32> loc(#loc20)
    %24 = arith.cmpi ne, %23, %cst : tensor<32xi32> loc(#loc21)
    %25 = tt.extern_elementwise %cst_1 {libname = "", libpath = "", pure = true, symbol = "__nv_signbitf"} : (f32) -> i32 loc(#loc22)
    %26 = arith.cmpi ne, %25, %c0_i32 : i32 loc(#loc23)
    %27 = tt.splat %26 : i1 -> tensor<32xi1> loc(#loc24)
    %28 = arith.cmpi ne, %24, %27 : tensor<32xi1> loc(#loc24)
    %29 = arith.andi %22, %28 : tensor<32xi1> loc(#loc25)
    %30 = arith.addf %21, %cst_0 : tensor<32xf32> loc(#loc26)
    %31 = arith.select %29, %30, %21 : tensor<32xi1>, tensor<32xf32> loc(#loc27)
    %32 = arith.subf %31, %cst_2 : tensor<32xf32> loc(#loc28)
    %33 = arith.select %15, %32, %14 : tensor<32xi1>, tensor<32xf32> loc(#loc29)
    %34 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x!tt.ptr<f32>> loc(#loc30)
    %35 = tt.addptr %34, %4 : tensor<32x!tt.ptr<f32>>, tensor<32xi32> loc(#loc30)
    tt.store %35, %33, %5 : tensor<32x!tt.ptr<f32>> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":21:28)
#loc3 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":21:33)
#loc4 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":22:36)
#loc5 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":22:23)
#loc6 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":23:21)
#loc7 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":24:19)
#loc8 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":25:19)
#loc9 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":27:36)
#loc10 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":27:34)
#loc11 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":27:30)
#loc12 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":27:41)
#loc13 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":28:31)
#loc14 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":28:36)
#loc15 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":31:19)
#loc16 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":33:18)
#loc17 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":35:18)
#loc18 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":37:18)
#loc19 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":39:20)
#loc20 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":40:31)
#loc21 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":40:40)
#loc22 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":41:31)
#loc23 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":41:40)
#loc24 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":42:21)
#loc25 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":43:20)
#loc26 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":44:19)
#loc27 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":45:35)
#loc28 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":46:20)
#loc29 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":47:34)
#loc30 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":48:25)
#loc31 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":48:37)
#loc32 = loc("inductor_cache/pp/cppctdm6dfyx7iotfy3gz6flssperlnmw2b6cdbdu3tsz2q4duds.py":48:4)
