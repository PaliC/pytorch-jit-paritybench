#loc = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0)
#loc1 = loc(unknown)
#loc28 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":44:26)
#loc35 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":52:26)
#loc52 = loc(callsite(#loc1 at #loc28))
#loc55 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":19:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant dense<3.125000e-02> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3.200000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1x32xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %5 = arith.remsi %0, %c64_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c64_i32 : i32 loc(#loc7)
    %7 = arith.muli %4, %cst_3 : tensor<1x32xi32> loc(#loc8)
    %8 = tt.splat %5 : i32 -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x32xi32> loc(#loc9)
    %10 = arith.muli %6, %c2048_i32 : i32 loc(#loc10)
    %11 = tt.splat %10 : i32 -> tensor<1x32xi32> loc(#loc11)
    %12 = arith.addi %9, %11 : tensor<1x32xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc12)
    %15 = tt.splat %1 : i1 -> tensor<1x32xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_2 : tensor<1x32x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.muli %0, %c32_i32 : i32 loc(#loc14)
    %18 = tt.splat %17 : i32 -> tensor<1x32xi32> loc(#loc15)
    %19 = arith.addi %4, %18 : tensor<1x32xi32> loc(#loc15)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %20, %19 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc16)
    %22 = tt.load %21, %15, %cst_2 : tensor<1x32x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.addptr %23, %4 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc18)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc19)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.addptr %26, %4 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc20)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc21)
    %29 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.addptr %29, %4 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc22)
    %31 = tt.load %30 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc23)
    %32 = arith.addf %22, %25 : tensor<1x32xf32> loc(#loc24)
    %33 = arith.addf %16, %32 : tensor<1x32xf32> loc(#loc25)
    %34 = arith.select %15, %33, %cst_2 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc26)
    %35 = "tt.reduce"(%34) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc28)), %arg11: f32 loc(callsite(#loc1 at #loc28))):
      %58 = arith.addf %arg10, %arg11 : f32 loc(#loc56)
      tt.reduce.return %58 : f32 loc(#loc51)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc51)
    %36 = tt.expand_dims %35 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc30)
    %37 = arith.divf %36, %cst_1 : tensor<1x1xf32> loc(#loc31)
    %38 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x32xf32> loc(#loc32)
    %39 = arith.subf %33, %38 : tensor<1x32xf32> loc(#loc32)
    %40 = arith.mulf %39, %39 : tensor<1x32xf32> loc(#loc33)
    %41 = arith.select %15, %40, %cst_2 : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc34)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc35)), %arg11: f32 loc(callsite(#loc1 at #loc35))):
      %58 = arith.addf %arg10, %arg11 : f32 loc(#loc57)
      tt.reduce.return %58 : f32 loc(#loc54)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc54)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc36)
    %44 = arith.divf %43, %cst_1 : tensor<1x1xf32> loc(#loc37)
    %45 = arith.addf %44, %cst_0 : tensor<1x1xf32> loc(#loc38)
    %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc39)
    %47 = tt.broadcast %46 : tensor<1x1xf32> -> tensor<1x32xf32> loc(#loc40)
    %48 = arith.mulf %39, %47 : tensor<1x32xf32> loc(#loc40)
    %49 = arith.mulf %48, %28 : tensor<1x32xf32> loc(#loc41)
    %50 = arith.addf %49, %31 : tensor<1x32xf32> loc(#loc42)
    %51 = arith.mulf %46, %cst : tensor<1x1xf32> loc(#loc43)
    %52 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc44)
    %53 = tt.addptr %52, %19 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc44)
    tt.store %53, %48, %15 : tensor<1x32x!tt.ptr<f32>> loc(#loc45)
    %54 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc46)
    %55 = tt.addptr %54, %19 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc46)
    tt.store %55, %50, %15 : tensor<1x32x!tt.ptr<f32>> loc(#loc47)
    %56 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc48)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    tt.store %57, %51, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":23:28)
#loc3 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":25:21)
#loc4 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":26:26)
#loc5 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":26:34)
#loc6 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":30:19)
#loc7 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":31:19)
#loc8 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:38)
#loc9 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:35)
#loc10 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:48)
#loc11 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:43)
#loc12 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:30)
#loc13 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":33:53)
#loc14 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:38)
#loc15 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:35)
#loc16 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:30)
#loc17 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":34:43)
#loc18 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":35:30)
#loc19 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":35:35)
#loc20 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":36:31)
#loc21 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":36:36)
#loc22 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":37:31)
#loc23 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":37:36)
#loc24 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":38:18)
#loc25 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":39:18)
#loc26 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":43:34)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc30 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":44:29)
#loc31 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":47:20)
#loc32 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":48:19)
#loc33 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":49:20)
#loc34 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":51:35)
#loc36 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":52:29)
#loc37 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":55:20)
#loc38 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":57:20)
#loc39 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":58:28)
#loc40 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":59:20)
#loc41 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":60:20)
#loc42 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":61:20)
#loc43 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":63:20)
#loc44 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":64:25)
#loc45 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":64:45)
#loc46 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":65:25)
#loc47 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":65:45)
#loc48 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:25)
#loc49 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:37)
#loc50 = loc("inductor_cache/ui/cuikj2fj7dthoyhdafnokwdyuhlh7dg2nrrpeedhe6yomz4lhufr.py":66:4)
#loc51 = loc(callsite(#loc27 at #loc28))
#loc53 = loc(callsite(#loc29 at #loc27))
#loc54 = loc(callsite(#loc27 at #loc35))
#loc56 = loc(callsite(#loc53 at #loc28))
#loc57 = loc(callsite(#loc53 at #loc35))
