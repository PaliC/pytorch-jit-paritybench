//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_tanh_7 // -- Begin function triton_poi_fused_add_convolution_tanh_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_convolution_tanh_7
.visible .entry triton_poi_fused_add_convolution_tanh_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_7_param_3,
	.param .u32 triton_poi_fused_add_convolution_tanh_7_param_4,
	.param .u32 triton_poi_fused_add_convolution_tanh_7_param_5
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<74>;
	.reg .f32 	%f<30>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_add_convolution_tanh_7_param_3];
	ld.param.u64 	%rd7, [triton_poi_fused_add_convolution_tanh_7_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_convolution_tanh_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:22:33
	shl.b32 	%r15, %r10, 4;
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_tanh_7_param_2];
	.loc	1 23 44                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 1, 3;
	and.b32  	%r16, %r1, 16;
	shr.u32 	%r3, %r16, 1;
	or.b32  	%r17, %r2, %r3;
	and.b32  	%r4, %r1, 1;
	and.b32  	%r18, %r1, 15;
	.loc	1 23 23                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:23:23
	or.b32  	%r19, %r17, %r15;
	or.b32  	%r20, %r15, %r18;
	.loc	1 24 21                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:24:21
	setp.lt.s32 	%p3, %r19, 16;
	setp.lt.s32 	%p5, %r20, 16;
	.loc	1 25 28                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:25:28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:25:33
	shl.b32 	%r21, %r11, 1;
	.loc	1 26 44                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:26:44
	bfe.u32 	%r5, %r1, 4, 1;
	.loc	1 26 23                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:26:23
	or.b32  	%r22, %r21, %r4;
	or.b32  	%r23, %r21, %r5;
	.loc	1 27 21                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:27:21
	setp.lt.s32 	%p6, %r22, 2;
	setp.lt.s32 	%p7, %r23, 2;
	.loc	1 30 19                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:30:19
	bfe.s32 	%r24, %r10, 27, 1;
	shr.u32 	%r25, %r24, 30;
	add.s32 	%r26, %r19, %r25;
	and.b32  	%r27, %r26, -4;
	sub.s32 	%r28, %r19, %r27;
	.loc	1 31 19                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:31:19
	shr.s32 	%r30, %r20, 31;
	shr.u32 	%r31, %r30, 30;
	add.s32 	%r32, %r20, %r31;
	.loc	1 30 19                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:30:19
	and.b32  	%r33, %r32, -4;
	sub.s32 	%r34, %r20, %r33;
	.loc	1 32 41                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:32:41
	shl.b32 	%r35, %r19, 1;
	.loc	1 32 39                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:32:39
	add.s32 	%r36, %r22, %r35;
	.loc	1 32 34                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:32:34
	cvt.s64.s32 	%rd1, %r36;
	mul.wide.s32 	%rd10, %r36, 4;
	add.s64 	%rd13, %rd7, %rd10;
	.loc	1 32 54                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:32:54
	and.pred  	%p11, %p3, %p6;
	and.pred  	%p4, %p5, %p7;
	.loc	1 32 46                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:32:46
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r12;
	.loc	1 33 30                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:33:30
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd5, %rd8, %rd11;
	.loc	1 33 35                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:33:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r13;
	.loc	1 34 37                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:37
	shl.b32 	%r37, %r23, 2;
	.loc	1 34 35                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:35
	add.s32 	%r38, %r37, %r34;
	.loc	1 34 44                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:44
	shl.b32 	%r39, %r32, 1;
	and.b32  	%r40, %r39, -8;
	.loc	1 34 42                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:42
	add.s32 	%r41, %r38, %r40;
	.loc	1 34 30                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:30
	mul.wide.s32 	%rd12, %r41, 4;
	add.s64 	%rd6, %rd9, %rd12;
	.loc	1 34 49                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 18                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:35:18
	add.f32 	%f1, %f6, %f7;
	.loc	1 36 26                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:36:26
	abs.ftz.f32 	%f2, %f1;
	setp.ltu.f32 	%p8, %f2, 0f3F19999A;
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f16, %f1, %f1;
	mov.f32 	%f17, 0fBD563CAE;
	mov.f32 	%f18, 0f3C80F082;
	fma.rn.ftz.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0f3E085941;
	fma.rn.ftz.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0f00000000;
	fma.rn.ftz.f32 	%f25, %f23, %f16, %f24;
	fma.rn.ftz.f32 	%f29, %f25, %f1, %f1;
	.loc	1 39 46                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:39:46
	mov.b32 	%r73, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	.loc	1 36 26                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:36:26
	mul.f32 	%f10, %f2, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f11, %f10;
	add.f32 	%f9, %f11, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// end inline asm
	mov.f32 	%f12, 0f3F800000;
	mov.f32 	%f13, 0fC0000000;
	fma.rn.ftz.f32 	%f14, %f8, %f13, %f12;
	setp.ge.f32 	%p9, %f2, 0f41102CB4;
	selp.f32 	%f15, 0f3F800000, %f14, %p9;
	mov.b32 	%r42, %f15;
	mov.b32 	%r73, %f1;
	and.b32  	%r43, %r73, -2147483648;
	or.b32  	%r44, %r43, %r42;
	mov.b32 	%f29, %r44;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 34 49                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:34:49
	mov.b32 	%f26, %r14;
	.loc	1 36 26                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:36:26
	shl.b32 	%r51, %r4, 4;
	or.b32  	%r52, %r51, %r2;
	or.b32  	%r53, %r52, %r3;
	shl.b32 	%r54, %r4, 2;
	mov.u32 	%r55, global_smem;
	add.s32 	%r56, %r55, %r54;
	shl.b32 	%r57, %r53, 2;
	add.s32 	%r45, %r56, %r57;
	mov.b32 	%r46, %f29;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r58, %r1, 2;
	and.b32  	%r59, %r58, 4;
	add.s32 	%r60, %r55, %r59;
	shl.b32 	%r61, %r1, 2;
	and.b32  	%r62, %r61, 124;
	add.s32 	%r63, %r60, %r62;
	ld.shared.f32 	%f27, [%r63];
	.loc	1 37 18                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:37:18
	add.f32 	%f28, %f27, %f26;
	.loc	1 38 4                          // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:38:4
	bar.sync 	0;
	.loc	1 39 46                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:39:46
	// begin inline asm
	@%p11 st.global.b32 [ %rd13 + 0 ], { %r73 };
	// end inline asm
	.loc	1 40 25                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:40:25
	shl.b64 	%rd15, %rd1, 2;
	add.s64 	%rd14, %rd3, %rd15;
	.loc	1 40 43                         // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:40:43
	shl.b32 	%r64, %r1, 1;
	and.b32  	%r65, %r64, 30;
	or.b32  	%r66, %r65, %r5;
	shl.b32 	%r67, %r65, 1;
	add.s32 	%r68, %r55, %r67;
	shl.b32 	%r69, %r66, 2;
	add.s32 	%r48, %r68, %r69;
	mov.b32 	%r49, %f28;
	// begin inline asm
	@%p10 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r70, %r64, 60;
	add.s32 	%r71, %r55, %r70;
	add.s32 	%r72, %r71, %r62;
	ld.shared.u32 	%r50, [%r72];
	// begin inline asm
	@%p11 st.global.b32 [ %rd14 + 0 ], { %r50 };
	// end inline asm
	.loc	1 40 4                          // covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ov/covnecl6cfzd3cttbdvjnck6sus3mrq7wm24rbgskxkt73l3bc7r.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 118
.b8 110
.b8 101
.b8 99
.b8 108
.b8 54
.b8 99
.b8 102
.b8 122
.b8 100
.b8 51
.b8 99
.b8 116
.b8 116
.b8 98
.b8 100
.b8 118
.b8 106
.b8 110
.b8 99
.b8 107
.b8 54
.b8 115
.b8 117
.b8 115
.b8 51
.b8 109
.b8 114
.b8 113
.b8 55
.b8 119
.b8 109
.b8 50
.b8 52
.b8 114
.b8 98
.b8 103
.b8 115
.b8 107
.b8 120
.b8 107
.b8 116
.b8 55
.b8 51
.b8 108
.b8 51
.b8 98
.b8 99
.b8 55
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
