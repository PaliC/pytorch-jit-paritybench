//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_relu_sigmoid_1 // -- Begin function triton_poi_fused_add_convolution_relu_sigmoid_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_relu_sigmoid_1
.visible .entry triton_poi_fused_add_convolution_relu_sigmoid_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_relu_sigmoid_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_relu_sigmoid_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_relu_sigmoid_1_param_2,
	.param .u32 triton_poi_fused_add_convolution_relu_sigmoid_1_param_3,
	.param .u32 triton_poi_fused_add_convolution_relu_sigmoid_1_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<151>;
	.reg .f32 	%f<92>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_convolution_relu_sigmoid_1_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_relu_sigmoid_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:22:33
	shl.b32 	%r89, %r1, 2;
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_relu_sigmoid_1_param_2];
	.loc	1 23 44                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:23:44
	mov.u32 	%r90, %tid.x;
	bfe.u32 	%r91, %r90, 6, 1;
	.loc	1 23 23                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:23:23
	or.b32  	%r92, %r89, %r91;
	.loc	1 25 28                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:25:33
	shl.b32 	%r93, %r2, 8;
	.loc	1 26 44                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:26:44
	shl.b32 	%r94, %r90, 2;
	and.b32  	%r95, %r94, 252;
	and.b32  	%r96, %r90, 127;
	or.b32  	%r97, %r96, 128;
	shl.b32 	%r98, %r90, 1;
	and.b32  	%r99, %r98, 254;
	.loc	1 26 23                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:26:23
	or.b32  	%r100, %r93, %r95;
	or.b32  	%r101, %r93, %r96;
	or.b32  	%r102, %r93, %r97;
	or.b32  	%r103, %r93, %r99;
	.loc	1 27 21                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:27:21
	setp.lt.s32 	%p1, %r100, 256;
	setp.lt.s32 	%p11, %r103, 256;
	setp.lt.s32 	%p12, %r101, 256;
	setp.lt.s32 	%p13, %r102, 256;
	.loc	1 31 19                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:31:19
	bfe.s32 	%r104, %r1, 29, 1;
	shr.u32 	%r105, %r104, 20;
	add.s32 	%r106, %r89, %r105;
	.loc	1 30 19                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:30:19
	and.b32  	%r107, %r106, -4096;
	sub.s32 	%r108, %r89, %r107;
	.loc	1 23 23                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:23:23
	shl.b32 	%r109, %r92, 8;
	.loc	1 32 39                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:32:39
	add.s32 	%r110, %r100, %r109;
	add.s32 	%r111, %r110, 512;
	.loc	1 32 34                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:32:34
	mul.wide.s32 	%rd11, %r110, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r111, 4;
	add.s64 	%rd2, %rd8, %rd12;
	.loc	1 32 48                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:32:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r112, %r90, 4;
	and.b32  	%r113, %r112, 1008;
	or.b32  	%r114, %r113, %r91;
	and.b32  	%r115, %r94, 508;
	shl.b32 	%r116, %r113, 2;
	mov.u32 	%r117, global_smem;
	add.s32 	%r118, %r117, %r116;
	shl.b32 	%r119, %r114, 2;
	add.s32 	%r11, %r118, %r119;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 32;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 64;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 96;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 40;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 72;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 104;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r120, %r115, 3;
	add.s32 	%r121, %r117, %r120;
	or.b32  	%r122, %r115, 512;
	shl.b32 	%r123, %r122, 3;
	add.s32 	%r124, %r117, %r123;
	.loc	1 33 30                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:33:30
	mul.wide.s32 	%rd13, %r103, 4;
	add.s64 	%rd3, %rd9, %rd13;
	.loc	1 34 40                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:40
	shl.b32 	%r125, %r101, 12;
	shl.b32 	%r126, %r102, 12;
	.loc	1 34 53                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:53
	shl.b32 	%r127, %r106, 8;
	and.b32  	%r128, %r127, -1048576;
	.loc	1 34 35                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:35
	add.s32 	%r129, %r128, %r108;
	.loc	1 34 45                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:45
	add.s32 	%r130, %r129, %r125;
	add.s32 	%r131, %r129, %r126;
	.loc	1 34 30                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:30
	mul.wide.s32 	%rd14, %r130, 4;
	add.s64 	%rd4, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r131, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 35 18                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:35:18
	shl.b32 	%r132, %r99, 3;
	add.s32 	%r37, %r117, %r132;
	add.s32 	%r39, %r37, 8;
	shl.b32 	%r133, %r96, 3;
	add.s32 	%r134, %r117, %r133;
	shl.b32 	%r135, %r97, 3;
	add.s32 	%r136, %r117, %r135;
	.loc	1 32 48                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:32:48
	ld.shared.v4.f32 	{%f17, %f18, %f19, %f20}, [%r121];
	ld.shared.v4.f32 	{%f21, %f22, %f23, %f24}, [%r124];
	.loc	1 33 35                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:33:35
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r38, %r40 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 58                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:34:58
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r29;
	mov.b32 	%f26, %r30;
	mov.b32 	%f27, %r31;
	mov.b32 	%f28, %r32;
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r33;
	mov.b32 	%f30, %r34;
	mov.b32 	%f31, %r35;
	mov.b32 	%f32, %r36;
	.loc	1 35 18                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:35:18
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	// begin inline asm
	@%p3 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f33, [%r134];
	ld.shared.f32 	%f34, [%r136];
	add.f32 	%f35, %f24, %f34;
	add.f32 	%f36, %f23, %f34;
	add.f32 	%f37, %f22, %f34;
	add.f32 	%f38, %f21, %f34;
	add.f32 	%f39, %f20, %f33;
	add.f32 	%f40, %f19, %f33;
	add.f32 	%f41, %f18, %f33;
	add.f32 	%f42, %f17, %f33;
	mov.f32 	%f43, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f44, %f43, %f25;
	sub.f32 	%f45, %f43, %f26;
	sub.f32 	%f46, %f43, %f27;
	sub.f32 	%f47, %f43, %f28;
	sub.f32 	%f48, %f43, %f29;
	sub.f32 	%f49, %f43, %f30;
	sub.f32 	%f50, %f43, %f31;
	sub.f32 	%f51, %f43, %f32;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f45, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f47, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f50, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f51, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f52, %f1, 0f3F800000;
	add.f32 	%f53, %f3, 0f3F800000;
	add.f32 	%f54, %f5, 0f3F800000;
	add.f32 	%f55, %f7, 0f3F800000;
	add.f32 	%f56, %f9, 0f3F800000;
	add.f32 	%f57, %f11, 0f3F800000;
	add.f32 	%f58, %f13, 0f3F800000;
	add.f32 	%f59, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r43, %f52;
	mov.b32 	%r42, 1065353216;
	// begin inline asm
	div.full.f32 %r41, %r42, %r43;
	// end inline asm
	mov.b32 	%f60, %r41;
	mov.b32 	%r46, %f53;
	// begin inline asm
	div.full.f32 %r44, %r42, %r46;
	// end inline asm
	mov.b32 	%f61, %r44;
	mov.b32 	%r49, %f54;
	// begin inline asm
	div.full.f32 %r47, %r42, %r49;
	// end inline asm
	mov.b32 	%f62, %r47;
	mov.b32 	%r52, %f55;
	// begin inline asm
	div.full.f32 %r50, %r42, %r52;
	// end inline asm
	mov.b32 	%f63, %r50;
	mov.b32 	%r55, %f56;
	// begin inline asm
	div.full.f32 %r53, %r42, %r55;
	// end inline asm
	mov.b32 	%f64, %r53;
	mov.b32 	%r58, %f57;
	// begin inline asm
	div.full.f32 %r56, %r42, %r58;
	// end inline asm
	mov.b32 	%f65, %r56;
	mov.b32 	%r61, %f58;
	// begin inline asm
	div.full.f32 %r59, %r42, %r61;
	// end inline asm
	mov.b32 	%f66, %r59;
	mov.b32 	%r64, %f59;
	// begin inline asm
	div.full.f32 %r62, %r42, %r64;
	// end inline asm
	mov.b32 	%f67, %r62;
$L__tmp2:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p26, %f60, 0f00000000;
	setp.lt.f32 	%p27, %f61, 0f00000000;
	setp.lt.f32 	%p28, %f62, 0f00000000;
	setp.lt.f32 	%p29, %f63, 0f00000000;
	setp.lt.f32 	%p30, %f64, 0f00000000;
	setp.lt.f32 	%p31, %f65, 0f00000000;
	setp.lt.f32 	%p32, %f66, 0f00000000;
	setp.lt.f32 	%p33, %f67, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f68, 0f00000000, %f67, %p33;
	selp.f32 	%f69, 0f00000000, %f66, %p32;
	selp.f32 	%f70, 0f00000000, %f65, %p31;
	selp.f32 	%f71, 0f00000000, %f64, %p30;
	selp.f32 	%f72, 0f00000000, %f63, %p29;
	selp.f32 	%f73, 0f00000000, %f62, %p28;
	selp.f32 	%f74, 0f00000000, %f61, %p27;
	selp.f32 	%f75, 0f00000000, %f60, %p26;
$L__tmp3:
	.loc	1 39 18                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:39:18
	add.f32 	%f76, %f42, %f75;
	add.f32 	%f77, %f41, %f74;
	add.f32 	%f78, %f40, %f73;
	add.f32 	%f79, %f39, %f72;
	add.f32 	%f80, %f38, %f71;
	add.f32 	%f81, %f37, %f70;
	add.f32 	%f82, %f36, %f69;
	add.f32 	%f83, %f35, %f68;
$L__tmp4:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p34, %f83, 0f00000000;
	setp.lt.f32 	%p35, %f82, 0f00000000;
	setp.lt.f32 	%p36, %f81, 0f00000000;
	setp.lt.f32 	%p37, %f80, 0f00000000;
	setp.lt.f32 	%p38, %f79, 0f00000000;
	setp.lt.f32 	%p39, %f78, 0f00000000;
	setp.lt.f32 	%p40, %f77, 0f00000000;
	setp.lt.f32 	%p41, %f76, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f84, 0f00000000, %f76, %p41;
	selp.f32 	%f85, 0f00000000, %f77, %p40;
	selp.f32 	%f86, 0f00000000, %f78, %p39;
	selp.f32 	%f87, 0f00000000, %f79, %p38;
	selp.f32 	%f88, 0f00000000, %f80, %p37;
	selp.f32 	%f89, 0f00000000, %f81, %p36;
	selp.f32 	%f90, 0f00000000, %f82, %p35;
	selp.f32 	%f91, 0f00000000, %f83, %p34;
$L__tmp5:
	.loc	1 41 4                          // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:41:4
	bar.sync 	0;
	.loc	1 42 48                         // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:42:48
	shl.b32 	%r137, %r96, 2;
	sub.s32 	%r65, %r134, %r137;
	mov.b32 	%r66, %f84;
	// begin inline asm
	@%p3 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r65, 1028;
	mov.b32 	%r68, %f85;
	// begin inline asm
	@%p3 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r65, 2056;
	mov.b32 	%r70, %f86;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r65, 3084;
	mov.b32 	%r72, %f87;
	// begin inline asm
	@%p3 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r65, 512;
	mov.b32 	%r74, %f88;
	// begin inline asm
	@%p3 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r65, 1540;
	mov.b32 	%r76, %f89;
	// begin inline asm
	@%p3 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r65, 2568;
	mov.b32 	%r78, %f90;
	// begin inline asm
	@%p3 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r65, 3596;
	mov.b32 	%r80, %f91;
	// begin inline asm
	@%p3 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r138, %r94, 8, 1;
	or.b32  	%r139, %r138, %r115;
	shl.b32 	%r140, %r139, 2;
	add.s32 	%r141, %r117, %r140;
	ld.shared.u32 	%r81, [%r141];
	shl.b32 	%r142, %r138, 2;
	add.s32 	%r143, %r117, %r142;
	shl.b32 	%r144, %r115, 2;
	add.s32 	%r145, %r143, %r144;
	ld.shared.u32 	%r82, [%r145+4];
	ld.shared.u32 	%r83, [%r141+8];
	ld.shared.u32 	%r84, [%r145+12];
	shr.u32 	%r146, %r122, 6;
	and.b32  	%r147, %r146, 12;
	add.s32 	%r148, %r37, %r147;
	ld.shared.u32 	%r85, [%r148+2048];
	add.s32 	%r149, %r117, %r147;
	add.s32 	%r150, %r149, %r144;
	ld.shared.u32 	%r86, [%r150+2052];
	ld.shared.u32 	%r87, [%r150+2056];
	ld.shared.u32 	%r88, [%r150+2060];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r81, %r82, %r83, %r84 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r85, %r86, %r87, %r88 };
	// end inline asm
	.loc	1 42 4                          // crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py:42:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rz/crzkju7pxyalzapwjamrwxfxoddye4j5mhcsmqoji2u3nzuyt5t2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 240                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 122
.b8 107
.b8 106
.b8 117
.b8 55
.b8 112
.b8 120
.b8 121
.b8 97
.b8 108
.b8 122
.b8 97
.b8 112
.b8 119
.b8 106
.b8 97
.b8 109
.b8 114
.b8 119
.b8 120
.b8 102
.b8 120
.b8 111
.b8 100
.b8 100
.b8 121
.b8 101
.b8 52
.b8 106
.b8 53
.b8 109
.b8 104
.b8 99
.b8 115
.b8 109
.b8 113
.b8 111
.b8 106
.b8 105
.b8 50
.b8 117
.b8 51
.b8 110
.b8 122
.b8 117
.b8 121
.b8 116
.b8 53
.b8 116
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x95:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xda:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
