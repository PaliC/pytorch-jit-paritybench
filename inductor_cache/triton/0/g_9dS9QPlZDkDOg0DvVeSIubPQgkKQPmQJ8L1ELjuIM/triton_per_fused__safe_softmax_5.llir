; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__safe_softmax_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 5, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 8, !dbg !13
  %12 = or disjoint i32 %10, 16, !dbg !13
  %13 = or disjoint i32 %10, 24, !dbg !13
  %14 = or disjoint i32 %10, 32, !dbg !13
  %15 = or disjoint i32 %10, 40, !dbg !13
  %16 = or disjoint i32 %10, 48, !dbg !13
  %17 = or disjoint i32 %10, 56, !dbg !13
  %18 = or disjoint i32 %10, 64, !dbg !13
  %19 = or disjoint i32 %10, 72, !dbg !13
  %20 = or disjoint i32 %10, 80, !dbg !13
  %21 = or disjoint i32 %10, 88, !dbg !13
  %22 = or disjoint i32 %10, 96, !dbg !13
  %23 = or disjoint i32 %10, 104, !dbg !13
  %24 = or disjoint i32 %10, 112, !dbg !13
  %25 = or disjoint i32 %10, 120, !dbg !13
  %26 = icmp slt i32 %10, 272, !dbg !14
  %27 = icmp slt i32 %11, 272, !dbg !14
  %28 = icmp slt i32 %12, 272, !dbg !14
  %29 = icmp slt i32 %13, 272, !dbg !14
  %30 = icmp slt i32 %14, 272, !dbg !14
  %31 = icmp slt i32 %15, 272, !dbg !14
  %32 = icmp slt i32 %16, 272, !dbg !14
  %33 = icmp slt i32 %17, 272, !dbg !14
  %34 = icmp slt i32 %18, 272, !dbg !14
  %35 = icmp slt i32 %19, 272, !dbg !14
  %36 = icmp slt i32 %20, 272, !dbg !14
  %37 = icmp slt i32 %21, 272, !dbg !14
  %38 = icmp slt i32 %22, 272, !dbg !14
  %39 = icmp slt i32 %23, 272, !dbg !14
  %40 = icmp slt i32 %24, 272, !dbg !14
  %41 = icmp slt i32 %25, 272, !dbg !14
  %42 = and i32 %7, 31, !dbg !15
  %43 = icmp samesign ult i32 %42, 17, !dbg !16
  %.frozen = freeze i32 %10, !dbg !17
  %44 = sdiv i32 %.frozen, 68, !dbg !17
  %45 = mul i32 %44, 68, !dbg !18
  %.decomposed = sub i32 %.frozen, %45, !dbg !18
  %.frozen16 = freeze i32 %11, !dbg !17
  %46 = sdiv i32 %.frozen16, 68, !dbg !17
  %47 = mul i32 %46, 68, !dbg !18
  %.decomposed17 = sub i32 %.frozen16, %47, !dbg !18
  %.frozen18 = freeze i32 %12, !dbg !17
  %48 = sdiv i32 %.frozen18, 68, !dbg !17
  %49 = mul i32 %48, 68, !dbg !18
  %.decomposed19 = sub i32 %.frozen18, %49, !dbg !18
  %.frozen20 = freeze i32 %13, !dbg !17
  %50 = sdiv i32 %.frozen20, 68, !dbg !17
  %51 = mul i32 %50, 68, !dbg !18
  %.decomposed21 = sub i32 %.frozen20, %51, !dbg !18
  %.frozen22 = freeze i32 %14, !dbg !17
  %52 = sdiv i32 %.frozen22, 68, !dbg !17
  %53 = mul i32 %52, 68, !dbg !18
  %.decomposed23 = sub i32 %.frozen22, %53, !dbg !18
  %.frozen24 = freeze i32 %15, !dbg !17
  %54 = sdiv i32 %.frozen24, 68, !dbg !17
  %55 = mul i32 %54, 68, !dbg !18
  %.decomposed25 = sub i32 %.frozen24, %55, !dbg !18
  %.frozen26 = freeze i32 %16, !dbg !17
  %56 = sdiv i32 %.frozen26, 68, !dbg !17
  %57 = mul i32 %56, 68, !dbg !18
  %.decomposed27 = sub i32 %.frozen26, %57, !dbg !18
  %.frozen28 = freeze i32 %17, !dbg !17
  %58 = sdiv i32 %.frozen28, 68, !dbg !17
  %59 = mul i32 %58, 68, !dbg !18
  %.decomposed29 = sub i32 %.frozen28, %59, !dbg !18
  %.frozen30 = freeze i32 %18, !dbg !17
  %60 = sdiv i32 %.frozen30, 68, !dbg !17
  %61 = mul i32 %60, 68, !dbg !18
  %.decomposed31 = sub i32 %.frozen30, %61, !dbg !18
  %.frozen32 = freeze i32 %19, !dbg !17
  %62 = sdiv i32 %.frozen32, 68, !dbg !17
  %63 = mul i32 %62, 68, !dbg !18
  %.decomposed33 = sub i32 %.frozen32, %63, !dbg !18
  %.frozen34 = freeze i32 %20, !dbg !17
  %64 = sdiv i32 %.frozen34, 68, !dbg !17
  %65 = mul i32 %64, 68, !dbg !18
  %.decomposed35 = sub i32 %.frozen34, %65, !dbg !18
  %.frozen36 = freeze i32 %21, !dbg !17
  %66 = sdiv i32 %.frozen36, 68, !dbg !17
  %67 = mul i32 %66, 68, !dbg !18
  %.decomposed37 = sub i32 %.frozen36, %67, !dbg !18
  %.frozen38 = freeze i32 %22, !dbg !17
  %68 = sdiv i32 %.frozen38, 68, !dbg !17
  %69 = mul i32 %68, 68, !dbg !18
  %.decomposed39 = sub i32 %.frozen38, %69, !dbg !18
  %.frozen40 = freeze i32 %23, !dbg !17
  %70 = sdiv i32 %.frozen40, 68, !dbg !17
  %71 = mul i32 %70, 68, !dbg !18
  %.decomposed41 = sub i32 %.frozen40, %71, !dbg !18
  %.frozen42 = freeze i32 %24, !dbg !17
  %72 = sdiv i32 %.frozen42, 68, !dbg !17
  %73 = mul i32 %72, 68, !dbg !18
  %.decomposed43 = sub i32 %.frozen42, %73, !dbg !18
  %.frozen44 = freeze i32 %25, !dbg !17
  %74 = sdiv i32 %.frozen44, 68, !dbg !17
  %75 = mul i32 %74, 68, !dbg !18
  %.decomposed45 = sub i32 %.frozen44, %75, !dbg !18
  %76 = mul i32 %10, 17, !dbg !19
  %77 = mul i32 %11, 17, !dbg !19
  %78 = mul i32 %12, 17, !dbg !19
  %79 = mul i32 %13, 17, !dbg !19
  %80 = mul i32 %14, 17, !dbg !19
  %81 = mul i32 %15, 17, !dbg !19
  %82 = mul i32 %16, 17, !dbg !19
  %83 = mul i32 %17, 17, !dbg !19
  %84 = mul i32 %18, 17, !dbg !19
  %85 = mul i32 %19, 17, !dbg !19
  %86 = mul i32 %20, 17, !dbg !19
  %87 = mul i32 %21, 17, !dbg !19
  %88 = mul i32 %22, 17, !dbg !19
  %89 = mul i32 %23, 17, !dbg !19
  %90 = mul i32 %24, 17, !dbg !19
  %91 = mul i32 %25, 17, !dbg !19
  %92 = add i32 %76, %42, !dbg !20
  %93 = add i32 %77, %42, !dbg !20
  %94 = add i32 %78, %42, !dbg !20
  %95 = add i32 %79, %42, !dbg !20
  %96 = add i32 %80, %42, !dbg !20
  %97 = add i32 %81, %42, !dbg !20
  %98 = add i32 %82, %42, !dbg !20
  %99 = add i32 %83, %42, !dbg !20
  %100 = add i32 %84, %42, !dbg !20
  %101 = add i32 %85, %42, !dbg !20
  %102 = add i32 %86, %42, !dbg !20
  %103 = add i32 %87, %42, !dbg !20
  %104 = add i32 %88, %42, !dbg !20
  %105 = add i32 %89, %42, !dbg !20
  %106 = add i32 %90, %42, !dbg !20
  %107 = add i32 %91, %42, !dbg !20
  %108 = sext i32 %92 to i64, !dbg !21
  %109 = getelementptr float, ptr addrspace(1) %0, i64 %108, !dbg !21
  %110 = sext i32 %93 to i64, !dbg !21
  %111 = getelementptr float, ptr addrspace(1) %0, i64 %110, !dbg !21
  %112 = sext i32 %94 to i64, !dbg !21
  %113 = getelementptr float, ptr addrspace(1) %0, i64 %112, !dbg !21
  %114 = sext i32 %95 to i64, !dbg !21
  %115 = getelementptr float, ptr addrspace(1) %0, i64 %114, !dbg !21
  %116 = sext i32 %96 to i64, !dbg !21
  %117 = getelementptr float, ptr addrspace(1) %0, i64 %116, !dbg !21
  %118 = sext i32 %97 to i64, !dbg !21
  %119 = getelementptr float, ptr addrspace(1) %0, i64 %118, !dbg !21
  %120 = sext i32 %98 to i64, !dbg !21
  %121 = getelementptr float, ptr addrspace(1) %0, i64 %120, !dbg !21
  %122 = sext i32 %99 to i64, !dbg !21
  %123 = getelementptr float, ptr addrspace(1) %0, i64 %122, !dbg !21
  %124 = sext i32 %100 to i64, !dbg !21
  %125 = getelementptr float, ptr addrspace(1) %0, i64 %124, !dbg !21
  %126 = sext i32 %101 to i64, !dbg !21
  %127 = getelementptr float, ptr addrspace(1) %0, i64 %126, !dbg !21
  %128 = sext i32 %102 to i64, !dbg !21
  %129 = getelementptr float, ptr addrspace(1) %0, i64 %128, !dbg !21
  %130 = sext i32 %103 to i64, !dbg !21
  %131 = getelementptr float, ptr addrspace(1) %0, i64 %130, !dbg !21
  %132 = sext i32 %104 to i64, !dbg !21
  %133 = getelementptr float, ptr addrspace(1) %0, i64 %132, !dbg !21
  %134 = sext i32 %105 to i64, !dbg !21
  %135 = getelementptr float, ptr addrspace(1) %0, i64 %134, !dbg !21
  %136 = sext i32 %106 to i64, !dbg !21
  %137 = getelementptr float, ptr addrspace(1) %0, i64 %136, !dbg !21
  %138 = sext i32 %107 to i64, !dbg !21
  %139 = getelementptr float, ptr addrspace(1) %0, i64 %138, !dbg !21
  %140 = and i1 %43, %26, !dbg !22
  %141 = and i1 %43, %27, !dbg !22
  %142 = and i1 %43, %28, !dbg !22
  %143 = and i1 %43, %29, !dbg !22
  %144 = and i1 %43, %30, !dbg !22
  %145 = and i1 %43, %31, !dbg !22
  %146 = and i1 %43, %32, !dbg !22
  %147 = and i1 %43, %33, !dbg !22
  %148 = and i1 %43, %34, !dbg !22
  %149 = and i1 %43, %35, !dbg !22
  %150 = and i1 %43, %36, !dbg !22
  %151 = and i1 %43, %37, !dbg !22
  %152 = and i1 %43, %38, !dbg !22
  %153 = and i1 %43, %39, !dbg !22
  %154 = and i1 %43, %40, !dbg !22
  %155 = and i1 %43, %41, !dbg !22
  %156 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %109, i1 %140, i32 0, i1 %140) #2, !dbg !23
  %157 = bitcast i32 %156 to float, !dbg !23
  %158 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %111, i1 %141, i32 0, i1 %141) #2, !dbg !23
  %159 = bitcast i32 %158 to float, !dbg !23
  %160 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %113, i1 %142, i32 0, i1 %142) #2, !dbg !23
  %161 = bitcast i32 %160 to float, !dbg !23
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %115, i1 %143, i32 0, i1 %143) #2, !dbg !23
  %163 = bitcast i32 %162 to float, !dbg !23
  %164 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %117, i1 %144, i32 0, i1 %144) #2, !dbg !23
  %165 = bitcast i32 %164 to float, !dbg !23
  %166 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %145, i32 0, i1 %145) #2, !dbg !23
  %167 = bitcast i32 %166 to float, !dbg !23
  %168 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %121, i1 %146, i32 0, i1 %146) #2, !dbg !23
  %169 = bitcast i32 %168 to float, !dbg !23
  %170 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %123, i1 %147, i32 0, i1 %147) #2, !dbg !23
  %171 = bitcast i32 %170 to float, !dbg !23
  %172 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %125, i1 %148, i32 0, i1 %148) #2, !dbg !23
  %173 = bitcast i32 %172 to float, !dbg !23
  %174 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %127, i1 %149, i32 0, i1 %149) #2, !dbg !23
  %175 = bitcast i32 %174 to float, !dbg !23
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %129, i1 %150, i32 0, i1 %150) #2, !dbg !23
  %177 = bitcast i32 %176 to float, !dbg !23
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %131, i1 %151, i32 0, i1 %151) #2, !dbg !23
  %179 = bitcast i32 %178 to float, !dbg !23
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %133, i1 %152, i32 0, i1 %152) #2, !dbg !23
  %181 = bitcast i32 %180 to float, !dbg !23
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %135, i1 %153, i32 0, i1 %153) #2, !dbg !23
  %183 = bitcast i32 %182 to float, !dbg !23
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %137, i1 %154, i32 0, i1 %154) #2, !dbg !23
  %185 = bitcast i32 %184 to float, !dbg !23
  %186 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %139, i1 %155, i32 0, i1 %155) #2, !dbg !23
  %187 = bitcast i32 %186 to float, !dbg !23
  %188 = select i1 %140, float %157, float 0xFFF0000000000000, !dbg !24
  %189 = select i1 %141, float %159, float 0xFFF0000000000000, !dbg !24
  %190 = select i1 %142, float %161, float 0xFFF0000000000000, !dbg !24
  %191 = select i1 %143, float %163, float 0xFFF0000000000000, !dbg !24
  %192 = select i1 %144, float %165, float 0xFFF0000000000000, !dbg !24
  %193 = select i1 %145, float %167, float 0xFFF0000000000000, !dbg !24
  %194 = select i1 %146, float %169, float 0xFFF0000000000000, !dbg !24
  %195 = select i1 %147, float %171, float 0xFFF0000000000000, !dbg !24
  %196 = select i1 %148, float %173, float 0xFFF0000000000000, !dbg !24
  %197 = select i1 %149, float %175, float 0xFFF0000000000000, !dbg !24
  %198 = select i1 %150, float %177, float 0xFFF0000000000000, !dbg !24
  %199 = select i1 %151, float %179, float 0xFFF0000000000000, !dbg !24
  %200 = select i1 %152, float %181, float 0xFFF0000000000000, !dbg !24
  %201 = select i1 %153, float %183, float 0xFFF0000000000000, !dbg !24
  %202 = select i1 %154, float %185, float 0xFFF0000000000000, !dbg !24
  %203 = select i1 %155, float %187, float 0xFFF0000000000000, !dbg !24
  %204 = bitcast float %188 to i32, !dbg !25
  %205 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %204, i32 16, i32 31), !dbg !25
  %206 = bitcast i32 %205 to float, !dbg !25
  %207 = fcmp ogt float %188, %206, !dbg !29
  %208 = fcmp uno float %188, 0.000000e+00, !dbg !31
  %209 = or i1 %208, %207, !dbg !32
  %210 = select i1 %209, float %188, float %206, !dbg !33
  %211 = bitcast float %210 to i32, !dbg !25
  %212 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %211, i32 8, i32 31), !dbg !25
  %213 = bitcast i32 %212 to float, !dbg !25
  %214 = fcmp ogt float %210, %213, !dbg !29
  %215 = fcmp uno float %210, 0.000000e+00, !dbg !31
  %216 = or i1 %214, %215, !dbg !32
  %217 = select i1 %216, float %210, float %213, !dbg !33
  %218 = bitcast float %217 to i32, !dbg !25
  %219 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %218, i32 4, i32 31), !dbg !25
  %220 = bitcast i32 %219 to float, !dbg !25
  %221 = fcmp ogt float %217, %220, !dbg !29
  %222 = fcmp uno float %217, 0.000000e+00, !dbg !31
  %223 = or i1 %221, %222, !dbg !32
  %224 = select i1 %223, float %217, float %220, !dbg !33
  %225 = bitcast float %224 to i32, !dbg !25
  %226 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %225, i32 2, i32 31), !dbg !25
  %227 = bitcast i32 %226 to float, !dbg !25
  %228 = fcmp ogt float %224, %227, !dbg !29
  %229 = fcmp uno float %224, 0.000000e+00, !dbg !31
  %230 = or i1 %228, %229, !dbg !32
  %231 = select i1 %230, float %224, float %227, !dbg !33
  %232 = bitcast float %231 to i32, !dbg !25
  %233 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %232, i32 1, i32 31), !dbg !25
  %234 = bitcast i32 %233 to float, !dbg !25
  %235 = fcmp ogt float %231, %234, !dbg !29
  %236 = fcmp uno float %231, 0.000000e+00, !dbg !31
  %237 = or i1 %235, %236, !dbg !32
  %238 = select i1 %237, float %231, float %234, !dbg !33
  %239 = bitcast float %189 to i32, !dbg !25
  %240 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %239, i32 16, i32 31), !dbg !25
  %241 = bitcast i32 %240 to float, !dbg !25
  %242 = fcmp ogt float %189, %241, !dbg !29
  %243 = fcmp uno float %189, 0.000000e+00, !dbg !31
  %244 = or i1 %243, %242, !dbg !32
  %245 = select i1 %244, float %189, float %241, !dbg !33
  %246 = bitcast float %245 to i32, !dbg !25
  %247 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %246, i32 8, i32 31), !dbg !25
  %248 = bitcast i32 %247 to float, !dbg !25
  %249 = fcmp ogt float %245, %248, !dbg !29
  %250 = fcmp uno float %245, 0.000000e+00, !dbg !31
  %251 = or i1 %249, %250, !dbg !32
  %252 = select i1 %251, float %245, float %248, !dbg !33
  %253 = bitcast float %252 to i32, !dbg !25
  %254 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %253, i32 4, i32 31), !dbg !25
  %255 = bitcast i32 %254 to float, !dbg !25
  %256 = fcmp ogt float %252, %255, !dbg !29
  %257 = fcmp uno float %252, 0.000000e+00, !dbg !31
  %258 = or i1 %256, %257, !dbg !32
  %259 = select i1 %258, float %252, float %255, !dbg !33
  %260 = bitcast float %259 to i32, !dbg !25
  %261 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %260, i32 2, i32 31), !dbg !25
  %262 = bitcast i32 %261 to float, !dbg !25
  %263 = fcmp ogt float %259, %262, !dbg !29
  %264 = fcmp uno float %259, 0.000000e+00, !dbg !31
  %265 = or i1 %263, %264, !dbg !32
  %266 = select i1 %265, float %259, float %262, !dbg !33
  %267 = bitcast float %266 to i32, !dbg !25
  %268 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %267, i32 1, i32 31), !dbg !25
  %269 = bitcast i32 %268 to float, !dbg !25
  %270 = fcmp ogt float %266, %269, !dbg !29
  %271 = fcmp uno float %266, 0.000000e+00, !dbg !31
  %272 = or i1 %270, %271, !dbg !32
  %273 = select i1 %272, float %266, float %269, !dbg !33
  %274 = bitcast float %190 to i32, !dbg !25
  %275 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %274, i32 16, i32 31), !dbg !25
  %276 = bitcast i32 %275 to float, !dbg !25
  %277 = fcmp ogt float %190, %276, !dbg !29
  %278 = fcmp uno float %190, 0.000000e+00, !dbg !31
  %279 = or i1 %278, %277, !dbg !32
  %280 = select i1 %279, float %190, float %276, !dbg !33
  %281 = bitcast float %280 to i32, !dbg !25
  %282 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %281, i32 8, i32 31), !dbg !25
  %283 = bitcast i32 %282 to float, !dbg !25
  %284 = fcmp ogt float %280, %283, !dbg !29
  %285 = fcmp uno float %280, 0.000000e+00, !dbg !31
  %286 = or i1 %284, %285, !dbg !32
  %287 = select i1 %286, float %280, float %283, !dbg !33
  %288 = bitcast float %287 to i32, !dbg !25
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 4, i32 31), !dbg !25
  %290 = bitcast i32 %289 to float, !dbg !25
  %291 = fcmp ogt float %287, %290, !dbg !29
  %292 = fcmp uno float %287, 0.000000e+00, !dbg !31
  %293 = or i1 %291, %292, !dbg !32
  %294 = select i1 %293, float %287, float %290, !dbg !33
  %295 = bitcast float %294 to i32, !dbg !25
  %296 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %295, i32 2, i32 31), !dbg !25
  %297 = bitcast i32 %296 to float, !dbg !25
  %298 = fcmp ogt float %294, %297, !dbg !29
  %299 = fcmp uno float %294, 0.000000e+00, !dbg !31
  %300 = or i1 %298, %299, !dbg !32
  %301 = select i1 %300, float %294, float %297, !dbg !33
  %302 = bitcast float %301 to i32, !dbg !25
  %303 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %302, i32 1, i32 31), !dbg !25
  %304 = bitcast i32 %303 to float, !dbg !25
  %305 = fcmp ogt float %301, %304, !dbg !29
  %306 = fcmp uno float %301, 0.000000e+00, !dbg !31
  %307 = or i1 %305, %306, !dbg !32
  %308 = select i1 %307, float %301, float %304, !dbg !33
  %309 = bitcast float %191 to i32, !dbg !25
  %310 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %309, i32 16, i32 31), !dbg !25
  %311 = bitcast i32 %310 to float, !dbg !25
  %312 = fcmp ogt float %191, %311, !dbg !29
  %313 = fcmp uno float %191, 0.000000e+00, !dbg !31
  %314 = or i1 %313, %312, !dbg !32
  %315 = select i1 %314, float %191, float %311, !dbg !33
  %316 = bitcast float %315 to i32, !dbg !25
  %317 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %316, i32 8, i32 31), !dbg !25
  %318 = bitcast i32 %317 to float, !dbg !25
  %319 = fcmp ogt float %315, %318, !dbg !29
  %320 = fcmp uno float %315, 0.000000e+00, !dbg !31
  %321 = or i1 %319, %320, !dbg !32
  %322 = select i1 %321, float %315, float %318, !dbg !33
  %323 = bitcast float %322 to i32, !dbg !25
  %324 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %323, i32 4, i32 31), !dbg !25
  %325 = bitcast i32 %324 to float, !dbg !25
  %326 = fcmp ogt float %322, %325, !dbg !29
  %327 = fcmp uno float %322, 0.000000e+00, !dbg !31
  %328 = or i1 %326, %327, !dbg !32
  %329 = select i1 %328, float %322, float %325, !dbg !33
  %330 = bitcast float %329 to i32, !dbg !25
  %331 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %330, i32 2, i32 31), !dbg !25
  %332 = bitcast i32 %331 to float, !dbg !25
  %333 = fcmp ogt float %329, %332, !dbg !29
  %334 = fcmp uno float %329, 0.000000e+00, !dbg !31
  %335 = or i1 %333, %334, !dbg !32
  %336 = select i1 %335, float %329, float %332, !dbg !33
  %337 = bitcast float %336 to i32, !dbg !25
  %338 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %337, i32 1, i32 31), !dbg !25
  %339 = bitcast i32 %338 to float, !dbg !25
  %340 = fcmp ogt float %336, %339, !dbg !29
  %341 = fcmp uno float %336, 0.000000e+00, !dbg !31
  %342 = or i1 %340, %341, !dbg !32
  %343 = select i1 %342, float %336, float %339, !dbg !33
  %344 = bitcast float %192 to i32, !dbg !25
  %345 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %344, i32 16, i32 31), !dbg !25
  %346 = bitcast i32 %345 to float, !dbg !25
  %347 = fcmp ogt float %192, %346, !dbg !29
  %348 = fcmp uno float %192, 0.000000e+00, !dbg !31
  %349 = or i1 %348, %347, !dbg !32
  %350 = select i1 %349, float %192, float %346, !dbg !33
  %351 = bitcast float %350 to i32, !dbg !25
  %352 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %351, i32 8, i32 31), !dbg !25
  %353 = bitcast i32 %352 to float, !dbg !25
  %354 = fcmp ogt float %350, %353, !dbg !29
  %355 = fcmp uno float %350, 0.000000e+00, !dbg !31
  %356 = or i1 %354, %355, !dbg !32
  %357 = select i1 %356, float %350, float %353, !dbg !33
  %358 = bitcast float %357 to i32, !dbg !25
  %359 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %358, i32 4, i32 31), !dbg !25
  %360 = bitcast i32 %359 to float, !dbg !25
  %361 = fcmp ogt float %357, %360, !dbg !29
  %362 = fcmp uno float %357, 0.000000e+00, !dbg !31
  %363 = or i1 %361, %362, !dbg !32
  %364 = select i1 %363, float %357, float %360, !dbg !33
  %365 = bitcast float %364 to i32, !dbg !25
  %366 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %365, i32 2, i32 31), !dbg !25
  %367 = bitcast i32 %366 to float, !dbg !25
  %368 = fcmp ogt float %364, %367, !dbg !29
  %369 = fcmp uno float %364, 0.000000e+00, !dbg !31
  %370 = or i1 %368, %369, !dbg !32
  %371 = select i1 %370, float %364, float %367, !dbg !33
  %372 = bitcast float %371 to i32, !dbg !25
  %373 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %372, i32 1, i32 31), !dbg !25
  %374 = bitcast i32 %373 to float, !dbg !25
  %375 = fcmp ogt float %371, %374, !dbg !29
  %376 = fcmp uno float %371, 0.000000e+00, !dbg !31
  %377 = or i1 %375, %376, !dbg !32
  %378 = select i1 %377, float %371, float %374, !dbg !33
  %379 = bitcast float %193 to i32, !dbg !25
  %380 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %379, i32 16, i32 31), !dbg !25
  %381 = bitcast i32 %380 to float, !dbg !25
  %382 = fcmp ogt float %193, %381, !dbg !29
  %383 = fcmp uno float %193, 0.000000e+00, !dbg !31
  %384 = or i1 %383, %382, !dbg !32
  %385 = select i1 %384, float %193, float %381, !dbg !33
  %386 = bitcast float %385 to i32, !dbg !25
  %387 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %386, i32 8, i32 31), !dbg !25
  %388 = bitcast i32 %387 to float, !dbg !25
  %389 = fcmp ogt float %385, %388, !dbg !29
  %390 = fcmp uno float %385, 0.000000e+00, !dbg !31
  %391 = or i1 %389, %390, !dbg !32
  %392 = select i1 %391, float %385, float %388, !dbg !33
  %393 = bitcast float %392 to i32, !dbg !25
  %394 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %393, i32 4, i32 31), !dbg !25
  %395 = bitcast i32 %394 to float, !dbg !25
  %396 = fcmp ogt float %392, %395, !dbg !29
  %397 = fcmp uno float %392, 0.000000e+00, !dbg !31
  %398 = or i1 %396, %397, !dbg !32
  %399 = select i1 %398, float %392, float %395, !dbg !33
  %400 = bitcast float %399 to i32, !dbg !25
  %401 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %400, i32 2, i32 31), !dbg !25
  %402 = bitcast i32 %401 to float, !dbg !25
  %403 = fcmp ogt float %399, %402, !dbg !29
  %404 = fcmp uno float %399, 0.000000e+00, !dbg !31
  %405 = or i1 %403, %404, !dbg !32
  %406 = select i1 %405, float %399, float %402, !dbg !33
  %407 = bitcast float %406 to i32, !dbg !25
  %408 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %407, i32 1, i32 31), !dbg !25
  %409 = bitcast i32 %408 to float, !dbg !25
  %410 = fcmp ogt float %406, %409, !dbg !29
  %411 = fcmp uno float %406, 0.000000e+00, !dbg !31
  %412 = or i1 %410, %411, !dbg !32
  %413 = select i1 %412, float %406, float %409, !dbg !33
  %414 = bitcast float %194 to i32, !dbg !25
  %415 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %414, i32 16, i32 31), !dbg !25
  %416 = bitcast i32 %415 to float, !dbg !25
  %417 = fcmp ogt float %194, %416, !dbg !29
  %418 = fcmp uno float %194, 0.000000e+00, !dbg !31
  %419 = or i1 %418, %417, !dbg !32
  %420 = select i1 %419, float %194, float %416, !dbg !33
  %421 = bitcast float %420 to i32, !dbg !25
  %422 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %421, i32 8, i32 31), !dbg !25
  %423 = bitcast i32 %422 to float, !dbg !25
  %424 = fcmp ogt float %420, %423, !dbg !29
  %425 = fcmp uno float %420, 0.000000e+00, !dbg !31
  %426 = or i1 %424, %425, !dbg !32
  %427 = select i1 %426, float %420, float %423, !dbg !33
  %428 = bitcast float %427 to i32, !dbg !25
  %429 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %428, i32 4, i32 31), !dbg !25
  %430 = bitcast i32 %429 to float, !dbg !25
  %431 = fcmp ogt float %427, %430, !dbg !29
  %432 = fcmp uno float %427, 0.000000e+00, !dbg !31
  %433 = or i1 %431, %432, !dbg !32
  %434 = select i1 %433, float %427, float %430, !dbg !33
  %435 = bitcast float %434 to i32, !dbg !25
  %436 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %435, i32 2, i32 31), !dbg !25
  %437 = bitcast i32 %436 to float, !dbg !25
  %438 = fcmp ogt float %434, %437, !dbg !29
  %439 = fcmp uno float %434, 0.000000e+00, !dbg !31
  %440 = or i1 %438, %439, !dbg !32
  %441 = select i1 %440, float %434, float %437, !dbg !33
  %442 = bitcast float %441 to i32, !dbg !25
  %443 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %442, i32 1, i32 31), !dbg !25
  %444 = bitcast i32 %443 to float, !dbg !25
  %445 = fcmp ogt float %441, %444, !dbg !29
  %446 = fcmp uno float %441, 0.000000e+00, !dbg !31
  %447 = or i1 %445, %446, !dbg !32
  %448 = select i1 %447, float %441, float %444, !dbg !33
  %449 = bitcast float %195 to i32, !dbg !25
  %450 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %449, i32 16, i32 31), !dbg !25
  %451 = bitcast i32 %450 to float, !dbg !25
  %452 = fcmp ogt float %195, %451, !dbg !29
  %453 = fcmp uno float %195, 0.000000e+00, !dbg !31
  %454 = or i1 %453, %452, !dbg !32
  %455 = select i1 %454, float %195, float %451, !dbg !33
  %456 = bitcast float %455 to i32, !dbg !25
  %457 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %456, i32 8, i32 31), !dbg !25
  %458 = bitcast i32 %457 to float, !dbg !25
  %459 = fcmp ogt float %455, %458, !dbg !29
  %460 = fcmp uno float %455, 0.000000e+00, !dbg !31
  %461 = or i1 %459, %460, !dbg !32
  %462 = select i1 %461, float %455, float %458, !dbg !33
  %463 = bitcast float %462 to i32, !dbg !25
  %464 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %463, i32 4, i32 31), !dbg !25
  %465 = bitcast i32 %464 to float, !dbg !25
  %466 = fcmp ogt float %462, %465, !dbg !29
  %467 = fcmp uno float %462, 0.000000e+00, !dbg !31
  %468 = or i1 %466, %467, !dbg !32
  %469 = select i1 %468, float %462, float %465, !dbg !33
  %470 = bitcast float %469 to i32, !dbg !25
  %471 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %470, i32 2, i32 31), !dbg !25
  %472 = bitcast i32 %471 to float, !dbg !25
  %473 = fcmp ogt float %469, %472, !dbg !29
  %474 = fcmp uno float %469, 0.000000e+00, !dbg !31
  %475 = or i1 %473, %474, !dbg !32
  %476 = select i1 %475, float %469, float %472, !dbg !33
  %477 = bitcast float %476 to i32, !dbg !25
  %478 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %477, i32 1, i32 31), !dbg !25
  %479 = bitcast i32 %478 to float, !dbg !25
  %480 = fcmp ogt float %476, %479, !dbg !29
  %481 = fcmp uno float %476, 0.000000e+00, !dbg !31
  %482 = or i1 %480, %481, !dbg !32
  %483 = select i1 %482, float %476, float %479, !dbg !33
  %484 = bitcast float %196 to i32, !dbg !25
  %485 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %484, i32 16, i32 31), !dbg !25
  %486 = bitcast i32 %485 to float, !dbg !25
  %487 = fcmp ogt float %196, %486, !dbg !29
  %488 = fcmp uno float %196, 0.000000e+00, !dbg !31
  %489 = or i1 %488, %487, !dbg !32
  %490 = select i1 %489, float %196, float %486, !dbg !33
  %491 = bitcast float %490 to i32, !dbg !25
  %492 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %491, i32 8, i32 31), !dbg !25
  %493 = bitcast i32 %492 to float, !dbg !25
  %494 = fcmp ogt float %490, %493, !dbg !29
  %495 = fcmp uno float %490, 0.000000e+00, !dbg !31
  %496 = or i1 %494, %495, !dbg !32
  %497 = select i1 %496, float %490, float %493, !dbg !33
  %498 = bitcast float %497 to i32, !dbg !25
  %499 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %498, i32 4, i32 31), !dbg !25
  %500 = bitcast i32 %499 to float, !dbg !25
  %501 = fcmp ogt float %497, %500, !dbg !29
  %502 = fcmp uno float %497, 0.000000e+00, !dbg !31
  %503 = or i1 %501, %502, !dbg !32
  %504 = select i1 %503, float %497, float %500, !dbg !33
  %505 = bitcast float %504 to i32, !dbg !25
  %506 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %505, i32 2, i32 31), !dbg !25
  %507 = bitcast i32 %506 to float, !dbg !25
  %508 = fcmp ogt float %504, %507, !dbg !29
  %509 = fcmp uno float %504, 0.000000e+00, !dbg !31
  %510 = or i1 %508, %509, !dbg !32
  %511 = select i1 %510, float %504, float %507, !dbg !33
  %512 = bitcast float %511 to i32, !dbg !25
  %513 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %512, i32 1, i32 31), !dbg !25
  %514 = bitcast i32 %513 to float, !dbg !25
  %515 = fcmp ogt float %511, %514, !dbg !29
  %516 = fcmp uno float %511, 0.000000e+00, !dbg !31
  %517 = or i1 %515, %516, !dbg !32
  %518 = select i1 %517, float %511, float %514, !dbg !33
  %519 = bitcast float %197 to i32, !dbg !25
  %520 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %519, i32 16, i32 31), !dbg !25
  %521 = bitcast i32 %520 to float, !dbg !25
  %522 = fcmp ogt float %197, %521, !dbg !29
  %523 = fcmp uno float %197, 0.000000e+00, !dbg !31
  %524 = or i1 %523, %522, !dbg !32
  %525 = select i1 %524, float %197, float %521, !dbg !33
  %526 = bitcast float %525 to i32, !dbg !25
  %527 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %526, i32 8, i32 31), !dbg !25
  %528 = bitcast i32 %527 to float, !dbg !25
  %529 = fcmp ogt float %525, %528, !dbg !29
  %530 = fcmp uno float %525, 0.000000e+00, !dbg !31
  %531 = or i1 %529, %530, !dbg !32
  %532 = select i1 %531, float %525, float %528, !dbg !33
  %533 = bitcast float %532 to i32, !dbg !25
  %534 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %533, i32 4, i32 31), !dbg !25
  %535 = bitcast i32 %534 to float, !dbg !25
  %536 = fcmp ogt float %532, %535, !dbg !29
  %537 = fcmp uno float %532, 0.000000e+00, !dbg !31
  %538 = or i1 %536, %537, !dbg !32
  %539 = select i1 %538, float %532, float %535, !dbg !33
  %540 = bitcast float %539 to i32, !dbg !25
  %541 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %540, i32 2, i32 31), !dbg !25
  %542 = bitcast i32 %541 to float, !dbg !25
  %543 = fcmp ogt float %539, %542, !dbg !29
  %544 = fcmp uno float %539, 0.000000e+00, !dbg !31
  %545 = or i1 %543, %544, !dbg !32
  %546 = select i1 %545, float %539, float %542, !dbg !33
  %547 = bitcast float %546 to i32, !dbg !25
  %548 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %547, i32 1, i32 31), !dbg !25
  %549 = bitcast i32 %548 to float, !dbg !25
  %550 = fcmp ogt float %546, %549, !dbg !29
  %551 = fcmp uno float %546, 0.000000e+00, !dbg !31
  %552 = or i1 %550, %551, !dbg !32
  %553 = select i1 %552, float %546, float %549, !dbg !33
  %554 = bitcast float %198 to i32, !dbg !25
  %555 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %554, i32 16, i32 31), !dbg !25
  %556 = bitcast i32 %555 to float, !dbg !25
  %557 = fcmp ogt float %198, %556, !dbg !29
  %558 = fcmp uno float %198, 0.000000e+00, !dbg !31
  %559 = or i1 %558, %557, !dbg !32
  %560 = select i1 %559, float %198, float %556, !dbg !33
  %561 = bitcast float %560 to i32, !dbg !25
  %562 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %561, i32 8, i32 31), !dbg !25
  %563 = bitcast i32 %562 to float, !dbg !25
  %564 = fcmp ogt float %560, %563, !dbg !29
  %565 = fcmp uno float %560, 0.000000e+00, !dbg !31
  %566 = or i1 %564, %565, !dbg !32
  %567 = select i1 %566, float %560, float %563, !dbg !33
  %568 = bitcast float %567 to i32, !dbg !25
  %569 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %568, i32 4, i32 31), !dbg !25
  %570 = bitcast i32 %569 to float, !dbg !25
  %571 = fcmp ogt float %567, %570, !dbg !29
  %572 = fcmp uno float %567, 0.000000e+00, !dbg !31
  %573 = or i1 %571, %572, !dbg !32
  %574 = select i1 %573, float %567, float %570, !dbg !33
  %575 = bitcast float %574 to i32, !dbg !25
  %576 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %575, i32 2, i32 31), !dbg !25
  %577 = bitcast i32 %576 to float, !dbg !25
  %578 = fcmp ogt float %574, %577, !dbg !29
  %579 = fcmp uno float %574, 0.000000e+00, !dbg !31
  %580 = or i1 %578, %579, !dbg !32
  %581 = select i1 %580, float %574, float %577, !dbg !33
  %582 = bitcast float %581 to i32, !dbg !25
  %583 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %582, i32 1, i32 31), !dbg !25
  %584 = bitcast i32 %583 to float, !dbg !25
  %585 = fcmp ogt float %581, %584, !dbg !29
  %586 = fcmp uno float %581, 0.000000e+00, !dbg !31
  %587 = or i1 %585, %586, !dbg !32
  %588 = select i1 %587, float %581, float %584, !dbg !33
  %589 = bitcast float %199 to i32, !dbg !25
  %590 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %589, i32 16, i32 31), !dbg !25
  %591 = bitcast i32 %590 to float, !dbg !25
  %592 = fcmp ogt float %199, %591, !dbg !29
  %593 = fcmp uno float %199, 0.000000e+00, !dbg !31
  %594 = or i1 %593, %592, !dbg !32
  %595 = select i1 %594, float %199, float %591, !dbg !33
  %596 = bitcast float %595 to i32, !dbg !25
  %597 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %596, i32 8, i32 31), !dbg !25
  %598 = bitcast i32 %597 to float, !dbg !25
  %599 = fcmp ogt float %595, %598, !dbg !29
  %600 = fcmp uno float %595, 0.000000e+00, !dbg !31
  %601 = or i1 %599, %600, !dbg !32
  %602 = select i1 %601, float %595, float %598, !dbg !33
  %603 = bitcast float %602 to i32, !dbg !25
  %604 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %603, i32 4, i32 31), !dbg !25
  %605 = bitcast i32 %604 to float, !dbg !25
  %606 = fcmp ogt float %602, %605, !dbg !29
  %607 = fcmp uno float %602, 0.000000e+00, !dbg !31
  %608 = or i1 %606, %607, !dbg !32
  %609 = select i1 %608, float %602, float %605, !dbg !33
  %610 = bitcast float %609 to i32, !dbg !25
  %611 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %610, i32 2, i32 31), !dbg !25
  %612 = bitcast i32 %611 to float, !dbg !25
  %613 = fcmp ogt float %609, %612, !dbg !29
  %614 = fcmp uno float %609, 0.000000e+00, !dbg !31
  %615 = or i1 %613, %614, !dbg !32
  %616 = select i1 %615, float %609, float %612, !dbg !33
  %617 = bitcast float %616 to i32, !dbg !25
  %618 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %617, i32 1, i32 31), !dbg !25
  %619 = bitcast i32 %618 to float, !dbg !25
  %620 = fcmp ogt float %616, %619, !dbg !29
  %621 = fcmp uno float %616, 0.000000e+00, !dbg !31
  %622 = or i1 %620, %621, !dbg !32
  %623 = select i1 %622, float %616, float %619, !dbg !33
  %624 = bitcast float %200 to i32, !dbg !25
  %625 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %624, i32 16, i32 31), !dbg !25
  %626 = bitcast i32 %625 to float, !dbg !25
  %627 = fcmp ogt float %200, %626, !dbg !29
  %628 = fcmp uno float %200, 0.000000e+00, !dbg !31
  %629 = or i1 %628, %627, !dbg !32
  %630 = select i1 %629, float %200, float %626, !dbg !33
  %631 = bitcast float %630 to i32, !dbg !25
  %632 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %631, i32 8, i32 31), !dbg !25
  %633 = bitcast i32 %632 to float, !dbg !25
  %634 = fcmp ogt float %630, %633, !dbg !29
  %635 = fcmp uno float %630, 0.000000e+00, !dbg !31
  %636 = or i1 %634, %635, !dbg !32
  %637 = select i1 %636, float %630, float %633, !dbg !33
  %638 = bitcast float %637 to i32, !dbg !25
  %639 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %638, i32 4, i32 31), !dbg !25
  %640 = bitcast i32 %639 to float, !dbg !25
  %641 = fcmp ogt float %637, %640, !dbg !29
  %642 = fcmp uno float %637, 0.000000e+00, !dbg !31
  %643 = or i1 %641, %642, !dbg !32
  %644 = select i1 %643, float %637, float %640, !dbg !33
  %645 = bitcast float %644 to i32, !dbg !25
  %646 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %645, i32 2, i32 31), !dbg !25
  %647 = bitcast i32 %646 to float, !dbg !25
  %648 = fcmp ogt float %644, %647, !dbg !29
  %649 = fcmp uno float %644, 0.000000e+00, !dbg !31
  %650 = or i1 %648, %649, !dbg !32
  %651 = select i1 %650, float %644, float %647, !dbg !33
  %652 = bitcast float %651 to i32, !dbg !25
  %653 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %652, i32 1, i32 31), !dbg !25
  %654 = bitcast i32 %653 to float, !dbg !25
  %655 = fcmp ogt float %651, %654, !dbg !29
  %656 = fcmp uno float %651, 0.000000e+00, !dbg !31
  %657 = or i1 %655, %656, !dbg !32
  %658 = select i1 %657, float %651, float %654, !dbg !33
  %659 = bitcast float %201 to i32, !dbg !25
  %660 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %659, i32 16, i32 31), !dbg !25
  %661 = bitcast i32 %660 to float, !dbg !25
  %662 = fcmp ogt float %201, %661, !dbg !29
  %663 = fcmp uno float %201, 0.000000e+00, !dbg !31
  %664 = or i1 %663, %662, !dbg !32
  %665 = select i1 %664, float %201, float %661, !dbg !33
  %666 = bitcast float %665 to i32, !dbg !25
  %667 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %666, i32 8, i32 31), !dbg !25
  %668 = bitcast i32 %667 to float, !dbg !25
  %669 = fcmp ogt float %665, %668, !dbg !29
  %670 = fcmp uno float %665, 0.000000e+00, !dbg !31
  %671 = or i1 %669, %670, !dbg !32
  %672 = select i1 %671, float %665, float %668, !dbg !33
  %673 = bitcast float %672 to i32, !dbg !25
  %674 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %673, i32 4, i32 31), !dbg !25
  %675 = bitcast i32 %674 to float, !dbg !25
  %676 = fcmp ogt float %672, %675, !dbg !29
  %677 = fcmp uno float %672, 0.000000e+00, !dbg !31
  %678 = or i1 %676, %677, !dbg !32
  %679 = select i1 %678, float %672, float %675, !dbg !33
  %680 = bitcast float %679 to i32, !dbg !25
  %681 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %680, i32 2, i32 31), !dbg !25
  %682 = bitcast i32 %681 to float, !dbg !25
  %683 = fcmp ogt float %679, %682, !dbg !29
  %684 = fcmp uno float %679, 0.000000e+00, !dbg !31
  %685 = or i1 %683, %684, !dbg !32
  %686 = select i1 %685, float %679, float %682, !dbg !33
  %687 = bitcast float %686 to i32, !dbg !25
  %688 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %687, i32 1, i32 31), !dbg !25
  %689 = bitcast i32 %688 to float, !dbg !25
  %690 = fcmp ogt float %686, %689, !dbg !29
  %691 = fcmp uno float %686, 0.000000e+00, !dbg !31
  %692 = or i1 %690, %691, !dbg !32
  %693 = select i1 %692, float %686, float %689, !dbg !33
  %694 = bitcast float %202 to i32, !dbg !25
  %695 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %694, i32 16, i32 31), !dbg !25
  %696 = bitcast i32 %695 to float, !dbg !25
  %697 = fcmp ogt float %202, %696, !dbg !29
  %698 = fcmp uno float %202, 0.000000e+00, !dbg !31
  %699 = or i1 %698, %697, !dbg !32
  %700 = select i1 %699, float %202, float %696, !dbg !33
  %701 = bitcast float %700 to i32, !dbg !25
  %702 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %701, i32 8, i32 31), !dbg !25
  %703 = bitcast i32 %702 to float, !dbg !25
  %704 = fcmp ogt float %700, %703, !dbg !29
  %705 = fcmp uno float %700, 0.000000e+00, !dbg !31
  %706 = or i1 %704, %705, !dbg !32
  %707 = select i1 %706, float %700, float %703, !dbg !33
  %708 = bitcast float %707 to i32, !dbg !25
  %709 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %708, i32 4, i32 31), !dbg !25
  %710 = bitcast i32 %709 to float, !dbg !25
  %711 = fcmp ogt float %707, %710, !dbg !29
  %712 = fcmp uno float %707, 0.000000e+00, !dbg !31
  %713 = or i1 %711, %712, !dbg !32
  %714 = select i1 %713, float %707, float %710, !dbg !33
  %715 = bitcast float %714 to i32, !dbg !25
  %716 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %715, i32 2, i32 31), !dbg !25
  %717 = bitcast i32 %716 to float, !dbg !25
  %718 = fcmp ogt float %714, %717, !dbg !29
  %719 = fcmp uno float %714, 0.000000e+00, !dbg !31
  %720 = or i1 %718, %719, !dbg !32
  %721 = select i1 %720, float %714, float %717, !dbg !33
  %722 = bitcast float %721 to i32, !dbg !25
  %723 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %722, i32 1, i32 31), !dbg !25
  %724 = bitcast i32 %723 to float, !dbg !25
  %725 = fcmp ogt float %721, %724, !dbg !29
  %726 = fcmp uno float %721, 0.000000e+00, !dbg !31
  %727 = or i1 %725, %726, !dbg !32
  %728 = select i1 %727, float %721, float %724, !dbg !33
  %729 = bitcast float %203 to i32, !dbg !25
  %730 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %729, i32 16, i32 31), !dbg !25
  %731 = bitcast i32 %730 to float, !dbg !25
  %732 = fcmp ogt float %203, %731, !dbg !29
  %733 = fcmp uno float %203, 0.000000e+00, !dbg !31
  %734 = or i1 %733, %732, !dbg !32
  %735 = select i1 %734, float %203, float %731, !dbg !33
  %736 = bitcast float %735 to i32, !dbg !25
  %737 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %736, i32 8, i32 31), !dbg !25
  %738 = bitcast i32 %737 to float, !dbg !25
  %739 = fcmp ogt float %735, %738, !dbg !29
  %740 = fcmp uno float %735, 0.000000e+00, !dbg !31
  %741 = or i1 %739, %740, !dbg !32
  %742 = select i1 %741, float %735, float %738, !dbg !33
  %743 = bitcast float %742 to i32, !dbg !25
  %744 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %743, i32 4, i32 31), !dbg !25
  %745 = bitcast i32 %744 to float, !dbg !25
  %746 = fcmp ogt float %742, %745, !dbg !29
  %747 = fcmp uno float %742, 0.000000e+00, !dbg !31
  %748 = or i1 %746, %747, !dbg !32
  %749 = select i1 %748, float %742, float %745, !dbg !33
  %750 = bitcast float %749 to i32, !dbg !25
  %751 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %750, i32 2, i32 31), !dbg !25
  %752 = bitcast i32 %751 to float, !dbg !25
  %753 = fcmp ogt float %749, %752, !dbg !29
  %754 = fcmp uno float %749, 0.000000e+00, !dbg !31
  %755 = or i1 %753, %754, !dbg !32
  %756 = select i1 %755, float %749, float %752, !dbg !33
  %757 = bitcast float %756 to i32, !dbg !25
  %758 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %757, i32 1, i32 31), !dbg !25
  %759 = bitcast i32 %758 to float, !dbg !25
  %760 = fcmp ogt float %756, %759, !dbg !29
  %761 = fcmp uno float %756, 0.000000e+00, !dbg !31
  %762 = or i1 %760, %761, !dbg !32
  %763 = select i1 %762, float %756, float %759, !dbg !33
  %764 = fsub float %157, %238, !dbg !34
  %765 = fsub float %159, %273, !dbg !34
  %766 = fsub float %161, %308, !dbg !34
  %767 = fsub float %163, %343, !dbg !34
  %768 = fsub float %165, %378, !dbg !34
  %769 = fsub float %167, %413, !dbg !34
  %770 = fsub float %169, %448, !dbg !34
  %771 = fsub float %171, %483, !dbg !34
  %772 = fsub float %173, %518, !dbg !34
  %773 = fsub float %175, %553, !dbg !34
  %774 = fsub float %177, %588, !dbg !34
  %775 = fsub float %179, %623, !dbg !34
  %776 = fsub float %181, %658, !dbg !34
  %777 = fsub float %183, %693, !dbg !34
  %778 = fsub float %185, %728, !dbg !34
  %779 = fsub float %187, %763, !dbg !34
  %780 = fmul float %764, 0x3FF7154760000000, !dbg !35
  %781 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %780) #2, !dbg !35
  %782 = fmul float %765, 0x3FF7154760000000, !dbg !35
  %783 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %782) #2, !dbg !35
  %784 = fmul float %766, 0x3FF7154760000000, !dbg !35
  %785 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %784) #2, !dbg !35
  %786 = fmul float %767, 0x3FF7154760000000, !dbg !35
  %787 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %786) #2, !dbg !35
  %788 = fmul float %768, 0x3FF7154760000000, !dbg !35
  %789 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %788) #2, !dbg !35
  %790 = fmul float %769, 0x3FF7154760000000, !dbg !35
  %791 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %790) #2, !dbg !35
  %792 = fmul float %770, 0x3FF7154760000000, !dbg !35
  %793 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %792) #2, !dbg !35
  %794 = fmul float %771, 0x3FF7154760000000, !dbg !35
  %795 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %794) #2, !dbg !35
  %796 = fmul float %772, 0x3FF7154760000000, !dbg !35
  %797 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %796) #2, !dbg !35
  %798 = fmul float %773, 0x3FF7154760000000, !dbg !35
  %799 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %798) #2, !dbg !35
  %800 = fmul float %774, 0x3FF7154760000000, !dbg !35
  %801 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %800) #2, !dbg !35
  %802 = fmul float %775, 0x3FF7154760000000, !dbg !35
  %803 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %802) #2, !dbg !35
  %804 = fmul float %776, 0x3FF7154760000000, !dbg !35
  %805 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %804) #2, !dbg !35
  %806 = fmul float %777, 0x3FF7154760000000, !dbg !35
  %807 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %806) #2, !dbg !35
  %808 = fmul float %778, 0x3FF7154760000000, !dbg !35
  %809 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %808) #2, !dbg !35
  %810 = fmul float %779, 0x3FF7154760000000, !dbg !35
  %811 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %810) #2, !dbg !35
  %812 = select i1 %140, float %781, float 0.000000e+00, !dbg !36
  %813 = select i1 %141, float %783, float 0.000000e+00, !dbg !36
  %814 = select i1 %142, float %785, float 0.000000e+00, !dbg !36
  %815 = select i1 %143, float %787, float 0.000000e+00, !dbg !36
  %816 = select i1 %144, float %789, float 0.000000e+00, !dbg !36
  %817 = select i1 %145, float %791, float 0.000000e+00, !dbg !36
  %818 = select i1 %146, float %793, float 0.000000e+00, !dbg !36
  %819 = select i1 %147, float %795, float 0.000000e+00, !dbg !36
  %820 = select i1 %148, float %797, float 0.000000e+00, !dbg !36
  %821 = select i1 %149, float %799, float 0.000000e+00, !dbg !36
  %822 = select i1 %150, float %801, float 0.000000e+00, !dbg !36
  %823 = select i1 %151, float %803, float 0.000000e+00, !dbg !36
  %824 = select i1 %152, float %805, float 0.000000e+00, !dbg !36
  %825 = select i1 %153, float %807, float 0.000000e+00, !dbg !36
  %826 = select i1 %154, float %809, float 0.000000e+00, !dbg !36
  %827 = select i1 %155, float %811, float 0.000000e+00, !dbg !36
  %828 = bitcast float %812 to i32, !dbg !37
  %829 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %828, i32 16, i32 31), !dbg !37
  %830 = bitcast i32 %829 to float, !dbg !37
  %831 = fadd float %812, %830, !dbg !41
  %832 = bitcast float %831 to i32, !dbg !37
  %833 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %832, i32 8, i32 31), !dbg !37
  %834 = bitcast i32 %833 to float, !dbg !37
  %835 = fadd float %831, %834, !dbg !41
  %836 = bitcast float %835 to i32, !dbg !37
  %837 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %836, i32 4, i32 31), !dbg !37
  %838 = bitcast i32 %837 to float, !dbg !37
  %839 = fadd float %835, %838, !dbg !41
  %840 = bitcast float %839 to i32, !dbg !37
  %841 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %840, i32 2, i32 31), !dbg !37
  %842 = bitcast i32 %841 to float, !dbg !37
  %843 = fadd float %839, %842, !dbg !41
  %844 = bitcast float %843 to i32, !dbg !37
  %845 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %844, i32 1, i32 31), !dbg !37
  %846 = bitcast i32 %845 to float, !dbg !37
  %847 = fadd float %843, %846, !dbg !41
  %848 = bitcast float %813 to i32, !dbg !37
  %849 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %848, i32 16, i32 31), !dbg !37
  %850 = bitcast i32 %849 to float, !dbg !37
  %851 = fadd float %813, %850, !dbg !41
  %852 = bitcast float %851 to i32, !dbg !37
  %853 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %852, i32 8, i32 31), !dbg !37
  %854 = bitcast i32 %853 to float, !dbg !37
  %855 = fadd float %851, %854, !dbg !41
  %856 = bitcast float %855 to i32, !dbg !37
  %857 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %856, i32 4, i32 31), !dbg !37
  %858 = bitcast i32 %857 to float, !dbg !37
  %859 = fadd float %855, %858, !dbg !41
  %860 = bitcast float %859 to i32, !dbg !37
  %861 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %860, i32 2, i32 31), !dbg !37
  %862 = bitcast i32 %861 to float, !dbg !37
  %863 = fadd float %859, %862, !dbg !41
  %864 = bitcast float %863 to i32, !dbg !37
  %865 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %864, i32 1, i32 31), !dbg !37
  %866 = bitcast i32 %865 to float, !dbg !37
  %867 = fadd float %863, %866, !dbg !41
  %868 = bitcast float %814 to i32, !dbg !37
  %869 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %868, i32 16, i32 31), !dbg !37
  %870 = bitcast i32 %869 to float, !dbg !37
  %871 = fadd float %814, %870, !dbg !41
  %872 = bitcast float %871 to i32, !dbg !37
  %873 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %872, i32 8, i32 31), !dbg !37
  %874 = bitcast i32 %873 to float, !dbg !37
  %875 = fadd float %871, %874, !dbg !41
  %876 = bitcast float %875 to i32, !dbg !37
  %877 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %876, i32 4, i32 31), !dbg !37
  %878 = bitcast i32 %877 to float, !dbg !37
  %879 = fadd float %875, %878, !dbg !41
  %880 = bitcast float %879 to i32, !dbg !37
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 2, i32 31), !dbg !37
  %882 = bitcast i32 %881 to float, !dbg !37
  %883 = fadd float %879, %882, !dbg !41
  %884 = bitcast float %883 to i32, !dbg !37
  %885 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %884, i32 1, i32 31), !dbg !37
  %886 = bitcast i32 %885 to float, !dbg !37
  %887 = fadd float %883, %886, !dbg !41
  %888 = bitcast float %815 to i32, !dbg !37
  %889 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %888, i32 16, i32 31), !dbg !37
  %890 = bitcast i32 %889 to float, !dbg !37
  %891 = fadd float %815, %890, !dbg !41
  %892 = bitcast float %891 to i32, !dbg !37
  %893 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %892, i32 8, i32 31), !dbg !37
  %894 = bitcast i32 %893 to float, !dbg !37
  %895 = fadd float %891, %894, !dbg !41
  %896 = bitcast float %895 to i32, !dbg !37
  %897 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %896, i32 4, i32 31), !dbg !37
  %898 = bitcast i32 %897 to float, !dbg !37
  %899 = fadd float %895, %898, !dbg !41
  %900 = bitcast float %899 to i32, !dbg !37
  %901 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %900, i32 2, i32 31), !dbg !37
  %902 = bitcast i32 %901 to float, !dbg !37
  %903 = fadd float %899, %902, !dbg !41
  %904 = bitcast float %903 to i32, !dbg !37
  %905 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %904, i32 1, i32 31), !dbg !37
  %906 = bitcast i32 %905 to float, !dbg !37
  %907 = fadd float %903, %906, !dbg !41
  %908 = bitcast float %816 to i32, !dbg !37
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 16, i32 31), !dbg !37
  %910 = bitcast i32 %909 to float, !dbg !37
  %911 = fadd float %816, %910, !dbg !41
  %912 = bitcast float %911 to i32, !dbg !37
  %913 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %912, i32 8, i32 31), !dbg !37
  %914 = bitcast i32 %913 to float, !dbg !37
  %915 = fadd float %911, %914, !dbg !41
  %916 = bitcast float %915 to i32, !dbg !37
  %917 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %916, i32 4, i32 31), !dbg !37
  %918 = bitcast i32 %917 to float, !dbg !37
  %919 = fadd float %915, %918, !dbg !41
  %920 = bitcast float %919 to i32, !dbg !37
  %921 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %920, i32 2, i32 31), !dbg !37
  %922 = bitcast i32 %921 to float, !dbg !37
  %923 = fadd float %919, %922, !dbg !41
  %924 = bitcast float %923 to i32, !dbg !37
  %925 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %924, i32 1, i32 31), !dbg !37
  %926 = bitcast i32 %925 to float, !dbg !37
  %927 = fadd float %923, %926, !dbg !41
  %928 = bitcast float %817 to i32, !dbg !37
  %929 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %928, i32 16, i32 31), !dbg !37
  %930 = bitcast i32 %929 to float, !dbg !37
  %931 = fadd float %817, %930, !dbg !41
  %932 = bitcast float %931 to i32, !dbg !37
  %933 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %932, i32 8, i32 31), !dbg !37
  %934 = bitcast i32 %933 to float, !dbg !37
  %935 = fadd float %931, %934, !dbg !41
  %936 = bitcast float %935 to i32, !dbg !37
  %937 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %936, i32 4, i32 31), !dbg !37
  %938 = bitcast i32 %937 to float, !dbg !37
  %939 = fadd float %935, %938, !dbg !41
  %940 = bitcast float %939 to i32, !dbg !37
  %941 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %940, i32 2, i32 31), !dbg !37
  %942 = bitcast i32 %941 to float, !dbg !37
  %943 = fadd float %939, %942, !dbg !41
  %944 = bitcast float %943 to i32, !dbg !37
  %945 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %944, i32 1, i32 31), !dbg !37
  %946 = bitcast i32 %945 to float, !dbg !37
  %947 = fadd float %943, %946, !dbg !41
  %948 = bitcast float %818 to i32, !dbg !37
  %949 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %948, i32 16, i32 31), !dbg !37
  %950 = bitcast i32 %949 to float, !dbg !37
  %951 = fadd float %818, %950, !dbg !41
  %952 = bitcast float %951 to i32, !dbg !37
  %953 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %952, i32 8, i32 31), !dbg !37
  %954 = bitcast i32 %953 to float, !dbg !37
  %955 = fadd float %951, %954, !dbg !41
  %956 = bitcast float %955 to i32, !dbg !37
  %957 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %956, i32 4, i32 31), !dbg !37
  %958 = bitcast i32 %957 to float, !dbg !37
  %959 = fadd float %955, %958, !dbg !41
  %960 = bitcast float %959 to i32, !dbg !37
  %961 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %960, i32 2, i32 31), !dbg !37
  %962 = bitcast i32 %961 to float, !dbg !37
  %963 = fadd float %959, %962, !dbg !41
  %964 = bitcast float %963 to i32, !dbg !37
  %965 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %964, i32 1, i32 31), !dbg !37
  %966 = bitcast i32 %965 to float, !dbg !37
  %967 = fadd float %963, %966, !dbg !41
  %968 = bitcast float %819 to i32, !dbg !37
  %969 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %968, i32 16, i32 31), !dbg !37
  %970 = bitcast i32 %969 to float, !dbg !37
  %971 = fadd float %819, %970, !dbg !41
  %972 = bitcast float %971 to i32, !dbg !37
  %973 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %972, i32 8, i32 31), !dbg !37
  %974 = bitcast i32 %973 to float, !dbg !37
  %975 = fadd float %971, %974, !dbg !41
  %976 = bitcast float %975 to i32, !dbg !37
  %977 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %976, i32 4, i32 31), !dbg !37
  %978 = bitcast i32 %977 to float, !dbg !37
  %979 = fadd float %975, %978, !dbg !41
  %980 = bitcast float %979 to i32, !dbg !37
  %981 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %980, i32 2, i32 31), !dbg !37
  %982 = bitcast i32 %981 to float, !dbg !37
  %983 = fadd float %979, %982, !dbg !41
  %984 = bitcast float %983 to i32, !dbg !37
  %985 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %984, i32 1, i32 31), !dbg !37
  %986 = bitcast i32 %985 to float, !dbg !37
  %987 = fadd float %983, %986, !dbg !41
  %988 = bitcast float %820 to i32, !dbg !37
  %989 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %988, i32 16, i32 31), !dbg !37
  %990 = bitcast i32 %989 to float, !dbg !37
  %991 = fadd float %820, %990, !dbg !41
  %992 = bitcast float %991 to i32, !dbg !37
  %993 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %992, i32 8, i32 31), !dbg !37
  %994 = bitcast i32 %993 to float, !dbg !37
  %995 = fadd float %991, %994, !dbg !41
  %996 = bitcast float %995 to i32, !dbg !37
  %997 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %996, i32 4, i32 31), !dbg !37
  %998 = bitcast i32 %997 to float, !dbg !37
  %999 = fadd float %995, %998, !dbg !41
  %1000 = bitcast float %999 to i32, !dbg !37
  %1001 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1000, i32 2, i32 31), !dbg !37
  %1002 = bitcast i32 %1001 to float, !dbg !37
  %1003 = fadd float %999, %1002, !dbg !41
  %1004 = bitcast float %1003 to i32, !dbg !37
  %1005 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1004, i32 1, i32 31), !dbg !37
  %1006 = bitcast i32 %1005 to float, !dbg !37
  %1007 = fadd float %1003, %1006, !dbg !41
  %1008 = bitcast float %821 to i32, !dbg !37
  %1009 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1008, i32 16, i32 31), !dbg !37
  %1010 = bitcast i32 %1009 to float, !dbg !37
  %1011 = fadd float %821, %1010, !dbg !41
  %1012 = bitcast float %1011 to i32, !dbg !37
  %1013 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1012, i32 8, i32 31), !dbg !37
  %1014 = bitcast i32 %1013 to float, !dbg !37
  %1015 = fadd float %1011, %1014, !dbg !41
  %1016 = bitcast float %1015 to i32, !dbg !37
  %1017 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1016, i32 4, i32 31), !dbg !37
  %1018 = bitcast i32 %1017 to float, !dbg !37
  %1019 = fadd float %1015, %1018, !dbg !41
  %1020 = bitcast float %1019 to i32, !dbg !37
  %1021 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1020, i32 2, i32 31), !dbg !37
  %1022 = bitcast i32 %1021 to float, !dbg !37
  %1023 = fadd float %1019, %1022, !dbg !41
  %1024 = bitcast float %1023 to i32, !dbg !37
  %1025 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1024, i32 1, i32 31), !dbg !37
  %1026 = bitcast i32 %1025 to float, !dbg !37
  %1027 = fadd float %1023, %1026, !dbg !41
  %1028 = bitcast float %822 to i32, !dbg !37
  %1029 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1028, i32 16, i32 31), !dbg !37
  %1030 = bitcast i32 %1029 to float, !dbg !37
  %1031 = fadd float %822, %1030, !dbg !41
  %1032 = bitcast float %1031 to i32, !dbg !37
  %1033 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1032, i32 8, i32 31), !dbg !37
  %1034 = bitcast i32 %1033 to float, !dbg !37
  %1035 = fadd float %1031, %1034, !dbg !41
  %1036 = bitcast float %1035 to i32, !dbg !37
  %1037 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1036, i32 4, i32 31), !dbg !37
  %1038 = bitcast i32 %1037 to float, !dbg !37
  %1039 = fadd float %1035, %1038, !dbg !41
  %1040 = bitcast float %1039 to i32, !dbg !37
  %1041 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1040, i32 2, i32 31), !dbg !37
  %1042 = bitcast i32 %1041 to float, !dbg !37
  %1043 = fadd float %1039, %1042, !dbg !41
  %1044 = bitcast float %1043 to i32, !dbg !37
  %1045 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1044, i32 1, i32 31), !dbg !37
  %1046 = bitcast i32 %1045 to float, !dbg !37
  %1047 = fadd float %1043, %1046, !dbg !41
  %1048 = bitcast float %823 to i32, !dbg !37
  %1049 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1048, i32 16, i32 31), !dbg !37
  %1050 = bitcast i32 %1049 to float, !dbg !37
  %1051 = fadd float %823, %1050, !dbg !41
  %1052 = bitcast float %1051 to i32, !dbg !37
  %1053 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1052, i32 8, i32 31), !dbg !37
  %1054 = bitcast i32 %1053 to float, !dbg !37
  %1055 = fadd float %1051, %1054, !dbg !41
  %1056 = bitcast float %1055 to i32, !dbg !37
  %1057 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1056, i32 4, i32 31), !dbg !37
  %1058 = bitcast i32 %1057 to float, !dbg !37
  %1059 = fadd float %1055, %1058, !dbg !41
  %1060 = bitcast float %1059 to i32, !dbg !37
  %1061 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1060, i32 2, i32 31), !dbg !37
  %1062 = bitcast i32 %1061 to float, !dbg !37
  %1063 = fadd float %1059, %1062, !dbg !41
  %1064 = bitcast float %1063 to i32, !dbg !37
  %1065 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1064, i32 1, i32 31), !dbg !37
  %1066 = bitcast i32 %1065 to float, !dbg !37
  %1067 = fadd float %1063, %1066, !dbg !41
  %1068 = bitcast float %824 to i32, !dbg !37
  %1069 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1068, i32 16, i32 31), !dbg !37
  %1070 = bitcast i32 %1069 to float, !dbg !37
  %1071 = fadd float %824, %1070, !dbg !41
  %1072 = bitcast float %1071 to i32, !dbg !37
  %1073 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1072, i32 8, i32 31), !dbg !37
  %1074 = bitcast i32 %1073 to float, !dbg !37
  %1075 = fadd float %1071, %1074, !dbg !41
  %1076 = bitcast float %1075 to i32, !dbg !37
  %1077 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1076, i32 4, i32 31), !dbg !37
  %1078 = bitcast i32 %1077 to float, !dbg !37
  %1079 = fadd float %1075, %1078, !dbg !41
  %1080 = bitcast float %1079 to i32, !dbg !37
  %1081 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1080, i32 2, i32 31), !dbg !37
  %1082 = bitcast i32 %1081 to float, !dbg !37
  %1083 = fadd float %1079, %1082, !dbg !41
  %1084 = bitcast float %1083 to i32, !dbg !37
  %1085 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1084, i32 1, i32 31), !dbg !37
  %1086 = bitcast i32 %1085 to float, !dbg !37
  %1087 = fadd float %1083, %1086, !dbg !41
  %1088 = bitcast float %825 to i32, !dbg !37
  %1089 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1088, i32 16, i32 31), !dbg !37
  %1090 = bitcast i32 %1089 to float, !dbg !37
  %1091 = fadd float %825, %1090, !dbg !41
  %1092 = bitcast float %1091 to i32, !dbg !37
  %1093 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1092, i32 8, i32 31), !dbg !37
  %1094 = bitcast i32 %1093 to float, !dbg !37
  %1095 = fadd float %1091, %1094, !dbg !41
  %1096 = bitcast float %1095 to i32, !dbg !37
  %1097 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1096, i32 4, i32 31), !dbg !37
  %1098 = bitcast i32 %1097 to float, !dbg !37
  %1099 = fadd float %1095, %1098, !dbg !41
  %1100 = bitcast float %1099 to i32, !dbg !37
  %1101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1100, i32 2, i32 31), !dbg !37
  %1102 = bitcast i32 %1101 to float, !dbg !37
  %1103 = fadd float %1099, %1102, !dbg !41
  %1104 = bitcast float %1103 to i32, !dbg !37
  %1105 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1104, i32 1, i32 31), !dbg !37
  %1106 = bitcast i32 %1105 to float, !dbg !37
  %1107 = fadd float %1103, %1106, !dbg !41
  %1108 = bitcast float %826 to i32, !dbg !37
  %1109 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1108, i32 16, i32 31), !dbg !37
  %1110 = bitcast i32 %1109 to float, !dbg !37
  %1111 = fadd float %826, %1110, !dbg !41
  %1112 = bitcast float %1111 to i32, !dbg !37
  %1113 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1112, i32 8, i32 31), !dbg !37
  %1114 = bitcast i32 %1113 to float, !dbg !37
  %1115 = fadd float %1111, %1114, !dbg !41
  %1116 = bitcast float %1115 to i32, !dbg !37
  %1117 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1116, i32 4, i32 31), !dbg !37
  %1118 = bitcast i32 %1117 to float, !dbg !37
  %1119 = fadd float %1115, %1118, !dbg !41
  %1120 = bitcast float %1119 to i32, !dbg !37
  %1121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1120, i32 2, i32 31), !dbg !37
  %1122 = bitcast i32 %1121 to float, !dbg !37
  %1123 = fadd float %1119, %1122, !dbg !41
  %1124 = bitcast float %1123 to i32, !dbg !37
  %1125 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1124, i32 1, i32 31), !dbg !37
  %1126 = bitcast i32 %1125 to float, !dbg !37
  %1127 = fadd float %1123, %1126, !dbg !41
  %1128 = bitcast float %827 to i32, !dbg !37
  %1129 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1128, i32 16, i32 31), !dbg !37
  %1130 = bitcast i32 %1129 to float, !dbg !37
  %1131 = fadd float %827, %1130, !dbg !41
  %1132 = bitcast float %1131 to i32, !dbg !37
  %1133 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1132, i32 8, i32 31), !dbg !37
  %1134 = bitcast i32 %1133 to float, !dbg !37
  %1135 = fadd float %1131, %1134, !dbg !41
  %1136 = bitcast float %1135 to i32, !dbg !37
  %1137 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1136, i32 4, i32 31), !dbg !37
  %1138 = bitcast i32 %1137 to float, !dbg !37
  %1139 = fadd float %1135, %1138, !dbg !41
  %1140 = bitcast float %1139 to i32, !dbg !37
  %1141 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1140, i32 2, i32 31), !dbg !37
  %1142 = bitcast i32 %1141 to float, !dbg !37
  %1143 = fadd float %1139, %1142, !dbg !41
  %1144 = bitcast float %1143 to i32, !dbg !37
  %1145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1144, i32 1, i32 31), !dbg !37
  %1146 = bitcast i32 %1145 to float, !dbg !37
  %1147 = fadd float %1143, %1146, !dbg !41
  %1148 = fcmp une float %157, 0xFFF0000000000000, !dbg !43
  %1149 = fcmp une float %159, 0xFFF0000000000000, !dbg !43
  %1150 = fcmp une float %161, 0xFFF0000000000000, !dbg !43
  %1151 = fcmp une float %163, 0xFFF0000000000000, !dbg !43
  %1152 = fcmp une float %165, 0xFFF0000000000000, !dbg !43
  %1153 = fcmp une float %167, 0xFFF0000000000000, !dbg !43
  %1154 = fcmp une float %169, 0xFFF0000000000000, !dbg !43
  %1155 = fcmp une float %171, 0xFFF0000000000000, !dbg !43
  %1156 = fcmp une float %173, 0xFFF0000000000000, !dbg !43
  %1157 = fcmp une float %175, 0xFFF0000000000000, !dbg !43
  %1158 = fcmp une float %177, 0xFFF0000000000000, !dbg !43
  %1159 = fcmp une float %179, 0xFFF0000000000000, !dbg !43
  %1160 = fcmp une float %181, 0xFFF0000000000000, !dbg !43
  %1161 = fcmp une float %183, 0xFFF0000000000000, !dbg !43
  %1162 = fcmp une float %185, 0xFFF0000000000000, !dbg !43
  %1163 = fcmp une float %187, 0xFFF0000000000000, !dbg !43
  %narrow = select i1 %140, i1 %1148, i1 false, !dbg !44
  %1164 = zext i1 %narrow to i32, !dbg !44
  %narrow1 = select i1 %141, i1 %1149, i1 false, !dbg !44
  %1165 = zext i1 %narrow1 to i32, !dbg !44
  %narrow2 = select i1 %142, i1 %1150, i1 false, !dbg !44
  %1166 = zext i1 %narrow2 to i32, !dbg !44
  %narrow3 = select i1 %143, i1 %1151, i1 false, !dbg !44
  %1167 = zext i1 %narrow3 to i32, !dbg !44
  %narrow4 = select i1 %144, i1 %1152, i1 false, !dbg !44
  %1168 = zext i1 %narrow4 to i32, !dbg !44
  %narrow5 = select i1 %145, i1 %1153, i1 false, !dbg !44
  %1169 = zext i1 %narrow5 to i32, !dbg !44
  %narrow6 = select i1 %146, i1 %1154, i1 false, !dbg !44
  %1170 = zext i1 %narrow6 to i32, !dbg !44
  %narrow7 = select i1 %147, i1 %1155, i1 false, !dbg !44
  %1171 = zext i1 %narrow7 to i32, !dbg !44
  %narrow8 = select i1 %148, i1 %1156, i1 false, !dbg !44
  %1172 = zext i1 %narrow8 to i32, !dbg !44
  %narrow9 = select i1 %149, i1 %1157, i1 false, !dbg !44
  %1173 = zext i1 %narrow9 to i32, !dbg !44
  %narrow10 = select i1 %150, i1 %1158, i1 false, !dbg !44
  %1174 = zext i1 %narrow10 to i32, !dbg !44
  %narrow11 = select i1 %151, i1 %1159, i1 false, !dbg !44
  %1175 = zext i1 %narrow11 to i32, !dbg !44
  %narrow12 = select i1 %152, i1 %1160, i1 false, !dbg !44
  %1176 = zext i1 %narrow12 to i32, !dbg !44
  %narrow13 = select i1 %153, i1 %1161, i1 false, !dbg !44
  %1177 = zext i1 %narrow13 to i32, !dbg !44
  %narrow14 = select i1 %154, i1 %1162, i1 false, !dbg !44
  %1178 = zext i1 %narrow14 to i32, !dbg !44
  %narrow15 = select i1 %155, i1 %1163, i1 false, !dbg !44
  %1179 = zext i1 %narrow15 to i32, !dbg !44
  %1180 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1164, i32 -1), !dbg !45
  %1181 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1165, i32 -1), !dbg !45
  %1182 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1166, i32 -1), !dbg !45
  %1183 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1167, i32 -1), !dbg !45
  %1184 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1168, i32 -1), !dbg !45
  %1185 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1169, i32 -1), !dbg !45
  %1186 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1170, i32 -1), !dbg !45
  %1187 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1171, i32 -1), !dbg !45
  %1188 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1172, i32 -1), !dbg !45
  %1189 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1173, i32 -1), !dbg !45
  %1190 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1174, i32 -1), !dbg !45
  %1191 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1175, i32 -1), !dbg !45
  %1192 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1176, i32 -1), !dbg !45
  %1193 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1177, i32 -1), !dbg !45
  %1194 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1178, i32 -1), !dbg !45
  %1195 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %1179, i32 -1), !dbg !45
  %1196 = icmp eq i32 %1180, 0, !dbg !47
  %1197 = icmp eq i32 %1181, 0, !dbg !47
  %1198 = icmp eq i32 %1182, 0, !dbg !47
  %1199 = icmp eq i32 %1183, 0, !dbg !47
  %1200 = icmp eq i32 %1184, 0, !dbg !47
  %1201 = icmp eq i32 %1185, 0, !dbg !47
  %1202 = icmp eq i32 %1186, 0, !dbg !47
  %1203 = icmp eq i32 %1187, 0, !dbg !47
  %1204 = icmp eq i32 %1188, 0, !dbg !47
  %1205 = icmp eq i32 %1189, 0, !dbg !47
  %1206 = icmp eq i32 %1190, 0, !dbg !47
  %1207 = icmp eq i32 %1191, 0, !dbg !47
  %1208 = icmp eq i32 %1192, 0, !dbg !47
  %1209 = icmp eq i32 %1193, 0, !dbg !47
  %1210 = icmp eq i32 %1194, 0, !dbg !47
  %1211 = icmp eq i32 %1195, 0, !dbg !47
  %1212 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %781, float %847) #2, !dbg !48
  %1213 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %783, float %867) #2, !dbg !48
  %1214 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %785, float %887) #2, !dbg !48
  %1215 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %787, float %907) #2, !dbg !48
  %1216 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %789, float %927) #2, !dbg !48
  %1217 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %791, float %947) #2, !dbg !48
  %1218 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %793, float %967) #2, !dbg !48
  %1219 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %795, float %987) #2, !dbg !48
  %1220 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %797, float %1007) #2, !dbg !48
  %1221 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %799, float %1027) #2, !dbg !48
  %1222 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %801, float %1047) #2, !dbg !48
  %1223 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %803, float %1067) #2, !dbg !48
  %1224 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %805, float %1087) #2, !dbg !48
  %1225 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %807, float %1107) #2, !dbg !48
  %1226 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %809, float %1127) #2, !dbg !48
  %1227 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %811, float %1147) #2, !dbg !48
  %1228 = mul nsw i32 %.decomposed, 17, !dbg !49
  %1229 = mul nsw i32 %.decomposed17, 17, !dbg !49
  %1230 = mul nsw i32 %.decomposed19, 17, !dbg !49
  %1231 = mul nsw i32 %.decomposed21, 17, !dbg !49
  %1232 = mul nsw i32 %.decomposed23, 17, !dbg !49
  %1233 = mul nsw i32 %.decomposed25, 17, !dbg !49
  %1234 = mul nsw i32 %.decomposed27, 17, !dbg !49
  %1235 = mul nsw i32 %.decomposed29, 17, !dbg !49
  %1236 = mul nsw i32 %.decomposed31, 17, !dbg !49
  %1237 = mul nsw i32 %.decomposed33, 17, !dbg !49
  %1238 = mul nsw i32 %.decomposed35, 17, !dbg !49
  %1239 = mul nsw i32 %.decomposed37, 17, !dbg !49
  %1240 = mul nsw i32 %.decomposed39, 17, !dbg !49
  %1241 = mul nsw i32 %.decomposed41, 17, !dbg !49
  %1242 = mul nsw i32 %.decomposed43, 17, !dbg !49
  %1243 = mul nsw i32 %.decomposed45, 17, !dbg !49
  %1244 = add nsw i32 %1228, %42, !dbg !50
  %1245 = add nsw i32 %1229, %42, !dbg !50
  %1246 = add nsw i32 %1230, %42, !dbg !50
  %1247 = add nsw i32 %1231, %42, !dbg !50
  %1248 = add nsw i32 %1232, %42, !dbg !50
  %1249 = add nsw i32 %1233, %42, !dbg !50
  %1250 = add nsw i32 %1234, %42, !dbg !50
  %1251 = add nsw i32 %1235, %42, !dbg !50
  %1252 = add nsw i32 %1236, %42, !dbg !50
  %1253 = add nsw i32 %1237, %42, !dbg !50
  %1254 = add nsw i32 %1238, %42, !dbg !50
  %1255 = add nsw i32 %1239, %42, !dbg !50
  %1256 = add nsw i32 %1240, %42, !dbg !50
  %1257 = add nsw i32 %1241, %42, !dbg !50
  %1258 = add nsw i32 %1242, %42, !dbg !50
  %1259 = add nsw i32 %1243, %42, !dbg !50
  %1260 = mul i32 %44, 1184, !dbg !51
  %1261 = mul i32 %46, 1184, !dbg !51
  %1262 = mul i32 %48, 1184, !dbg !51
  %1263 = mul i32 %50, 1184, !dbg !51
  %1264 = mul i32 %52, 1184, !dbg !51
  %1265 = mul i32 %54, 1184, !dbg !51
  %1266 = mul i32 %56, 1184, !dbg !51
  %1267 = mul i32 %58, 1184, !dbg !51
  %1268 = mul i32 %60, 1184, !dbg !51
  %1269 = mul i32 %62, 1184, !dbg !51
  %1270 = mul i32 %64, 1184, !dbg !51
  %1271 = mul i32 %66, 1184, !dbg !51
  %1272 = mul i32 %68, 1184, !dbg !51
  %1273 = mul i32 %70, 1184, !dbg !51
  %1274 = mul i32 %72, 1184, !dbg !51
  %1275 = mul i32 %74, 1184, !dbg !51
  %1276 = add i32 %1244, %1260, !dbg !52
  %1277 = add i32 %1245, %1261, !dbg !52
  %1278 = add i32 %1246, %1262, !dbg !52
  %1279 = add i32 %1247, %1263, !dbg !52
  %1280 = add i32 %1248, %1264, !dbg !52
  %1281 = add i32 %1249, %1265, !dbg !52
  %1282 = add i32 %1250, %1266, !dbg !52
  %1283 = add i32 %1251, %1267, !dbg !52
  %1284 = add i32 %1252, %1268, !dbg !52
  %1285 = add i32 %1253, %1269, !dbg !52
  %1286 = add i32 %1254, %1270, !dbg !52
  %1287 = add i32 %1255, %1271, !dbg !52
  %1288 = add i32 %1256, %1272, !dbg !52
  %1289 = add i32 %1257, %1273, !dbg !52
  %1290 = add i32 %1258, %1274, !dbg !52
  %1291 = add i32 %1259, %1275, !dbg !52
  %1292 = sext i32 %1276 to i64, !dbg !53
  %1293 = getelementptr float, ptr addrspace(1) %1, i64 %1292, !dbg !53
  %1294 = sext i32 %1277 to i64, !dbg !53
  %1295 = getelementptr float, ptr addrspace(1) %1, i64 %1294, !dbg !53
  %1296 = sext i32 %1278 to i64, !dbg !53
  %1297 = getelementptr float, ptr addrspace(1) %1, i64 %1296, !dbg !53
  %1298 = sext i32 %1279 to i64, !dbg !53
  %1299 = getelementptr float, ptr addrspace(1) %1, i64 %1298, !dbg !53
  %1300 = sext i32 %1280 to i64, !dbg !53
  %1301 = getelementptr float, ptr addrspace(1) %1, i64 %1300, !dbg !53
  %1302 = sext i32 %1281 to i64, !dbg !53
  %1303 = getelementptr float, ptr addrspace(1) %1, i64 %1302, !dbg !53
  %1304 = sext i32 %1282 to i64, !dbg !53
  %1305 = getelementptr float, ptr addrspace(1) %1, i64 %1304, !dbg !53
  %1306 = sext i32 %1283 to i64, !dbg !53
  %1307 = getelementptr float, ptr addrspace(1) %1, i64 %1306, !dbg !53
  %1308 = sext i32 %1284 to i64, !dbg !53
  %1309 = getelementptr float, ptr addrspace(1) %1, i64 %1308, !dbg !53
  %1310 = sext i32 %1285 to i64, !dbg !53
  %1311 = getelementptr float, ptr addrspace(1) %1, i64 %1310, !dbg !53
  %1312 = sext i32 %1286 to i64, !dbg !53
  %1313 = getelementptr float, ptr addrspace(1) %1, i64 %1312, !dbg !53
  %1314 = sext i32 %1287 to i64, !dbg !53
  %1315 = getelementptr float, ptr addrspace(1) %1, i64 %1314, !dbg !53
  %1316 = sext i32 %1288 to i64, !dbg !53
  %1317 = getelementptr float, ptr addrspace(1) %1, i64 %1316, !dbg !53
  %1318 = sext i32 %1289 to i64, !dbg !53
  %1319 = getelementptr float, ptr addrspace(1) %1, i64 %1318, !dbg !53
  %1320 = sext i32 %1290 to i64, !dbg !53
  %1321 = getelementptr float, ptr addrspace(1) %1, i64 %1320, !dbg !53
  %1322 = sext i32 %1291 to i64, !dbg !53
  %1323 = getelementptr float, ptr addrspace(1) %1, i64 %1322, !dbg !53
  %1324 = bitcast float %1212 to i32, !dbg !54
  %1325 = select i1 %1196, i32 0, i32 %1324, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1325, ptr addrspace(1) %1293, i1 %140) #2, !dbg !54
  %1326 = bitcast float %1213 to i32, !dbg !54
  %1327 = select i1 %1197, i32 0, i32 %1326, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1327, ptr addrspace(1) %1295, i1 %141) #2, !dbg !54
  %1328 = bitcast float %1214 to i32, !dbg !54
  %1329 = select i1 %1198, i32 0, i32 %1328, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1329, ptr addrspace(1) %1297, i1 %142) #2, !dbg !54
  %1330 = bitcast float %1215 to i32, !dbg !54
  %1331 = select i1 %1199, i32 0, i32 %1330, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1331, ptr addrspace(1) %1299, i1 %143) #2, !dbg !54
  %1332 = bitcast float %1216 to i32, !dbg !54
  %1333 = select i1 %1200, i32 0, i32 %1332, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1333, ptr addrspace(1) %1301, i1 %144) #2, !dbg !54
  %1334 = bitcast float %1217 to i32, !dbg !54
  %1335 = select i1 %1201, i32 0, i32 %1334, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1335, ptr addrspace(1) %1303, i1 %145) #2, !dbg !54
  %1336 = bitcast float %1218 to i32, !dbg !54
  %1337 = select i1 %1202, i32 0, i32 %1336, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1337, ptr addrspace(1) %1305, i1 %146) #2, !dbg !54
  %1338 = bitcast float %1219 to i32, !dbg !54
  %1339 = select i1 %1203, i32 0, i32 %1338, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1339, ptr addrspace(1) %1307, i1 %147) #2, !dbg !54
  %1340 = bitcast float %1220 to i32, !dbg !54
  %1341 = select i1 %1204, i32 0, i32 %1340, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1341, ptr addrspace(1) %1309, i1 %148) #2, !dbg !54
  %1342 = bitcast float %1221 to i32, !dbg !54
  %1343 = select i1 %1205, i32 0, i32 %1342, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1343, ptr addrspace(1) %1311, i1 %149) #2, !dbg !54
  %1344 = bitcast float %1222 to i32, !dbg !54
  %1345 = select i1 %1206, i32 0, i32 %1344, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1345, ptr addrspace(1) %1313, i1 %150) #2, !dbg !54
  %1346 = bitcast float %1223 to i32, !dbg !54
  %1347 = select i1 %1207, i32 0, i32 %1346, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1347, ptr addrspace(1) %1315, i1 %151) #2, !dbg !54
  %1348 = bitcast float %1224 to i32, !dbg !54
  %1349 = select i1 %1208, i32 0, i32 %1348, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1349, ptr addrspace(1) %1317, i1 %152) #2, !dbg !54
  %1350 = bitcast float %1225 to i32, !dbg !54
  %1351 = select i1 %1209, i32 0, i32 %1350, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1351, ptr addrspace(1) %1319, i1 %153) #2, !dbg !54
  %1352 = bitcast float %1226 to i32, !dbg !54
  %1353 = select i1 %1210, i32 0, i32 %1352, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1353, ptr addrspace(1) %1321, i1 %154) #2, !dbg !54
  %1354 = bitcast float %1227 to i32, !dbg !54
  %1355 = select i1 %1211, i32 0, i32 %1354, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1355, ptr addrspace(1) %1323, i1 %155) #2, !dbg !54
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.redux.sync.or(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py", directory: "inductor_cache/q4")
!4 = !{ptr @triton_per_fused__safe_softmax_5, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__safe_softmax_5, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__safe_softmax_5", linkageName: "triton_per_fused__safe_softmax_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 38, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 51, scope: !7)
!23 = !DILocation(line: 33, column: 43, scope: !7)
!24 = !DILocation(line: 35, column: 41, scope: !7)
!25 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 36, column: 37, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !26, file: !27, discriminator: 0)
!31 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !28)
!32 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !28)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !28)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 23, scope: !7)
!36 = !DILocation(line: 40, column: 41, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!40 = !DILocation(line: 41, column: 25, scope: !7)
!41 = !DILocation(line: 256, column: 15, scope: !42, inlinedAt: !40)
!42 = distinct !DILexicalBlockFile(scope: !38, file: !39, discriminator: 0)
!43 = !DILocation(line: 43, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 43, scope: !7)
!45 = !DILocation(line: 232, column: 29, scope: !26, inlinedAt: !46)
!46 = !DILocation(line: 49, column: 38, scope: !7)
!47 = !DILocation(line: 50, column: 21, scope: !7)
!48 = !DILocation(line: 51, column: 19, scope: !7)
!49 = !DILocation(line: 54, column: 33, scope: !7)
!50 = !DILocation(line: 54, column: 30, scope: !7)
!51 = !DILocation(line: 54, column: 43, scope: !7)
!52 = !DILocation(line: 54, column: 38, scope: !7)
!53 = !DILocation(line: 54, column: 25, scope: !7)
!54 = !DILocation(line: 54, column: 55, scope: !7)
!55 = !DILocation(line: 53, column: 35, scope: !7)
!56 = !DILocation(line: 54, column: 4, scope: !7)
