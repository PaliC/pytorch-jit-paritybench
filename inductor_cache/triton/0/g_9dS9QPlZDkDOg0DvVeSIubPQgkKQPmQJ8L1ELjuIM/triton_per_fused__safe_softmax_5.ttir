#loc = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:37)
#loc30 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:25)
#loc39 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:38)
#loc53 = loc(callsite(#loc1 at #loc20))
#loc59 = loc(callsite(#loc1 at #loc30))
#loc62 = loc(callsite(#loc1 at #loc39))
module {
  tt.func public @triton_per_fused__safe_softmax_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0), %arg3: i32 loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<128x32xi64> loc(#loc1)
    %cst_0 = arith.constant dense<1184> : tensor<128x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<128x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<128x32xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<128x32xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc1)
    %cst_5 = arith.constant dense<17> : tensor<128x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<68> : tensor<128x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<17> : tensor<1x32xi32> loc(#loc1)
    %cst_8 = arith.constant dense<272> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_7 : tensor<1x32xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_6 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_6 : tensor<128x1xi32> loc(#loc12)
    %12 = arith.muli %5, %cst_5 : tensor<128x1xi32> loc(#loc13)
    %13 = tt.broadcast %8 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc14)
    %14 = tt.broadcast %12 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<128x32xi32> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc15)
    %18 = tt.broadcast %9 : tensor<1x32xi1> -> tensor<128x32xi1> loc(#loc16)
    %19 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x32xi1> loc(#loc16)
    %20 = arith.andi %18, %19 : tensor<128x32xi1> loc(#loc16)
    %21 = tt.load %17, %20, %cst_4 : tensor<128x32x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.select %20, %21, %cst_3 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc18)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc20)), %arg5: f32 loc(callsite(#loc1 at #loc20))):
      %53 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc64)
      %54 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc65)
      %55 = arith.ori %53, %54 : i1 loc(#loc66)
      %56 = arith.select %55, %arg4, %arg5 : f32 loc(#loc67)
      tt.reduce.return %56 : f32 loc(#loc52)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc52)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc25)
    %25 = tt.broadcast %24 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc26)
    %26 = arith.subf %21, %25 : tensor<128x32xf32> loc(#loc26)
    %27 = math.exp %26 : tensor<128x32xf32> loc(#loc27)
    %28 = arith.select %20, %27, %cst_4 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc28)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc30)), %arg5: f32 loc(callsite(#loc1 at #loc30))):
      %53 = arith.addf %arg4, %arg5 : f32 loc(#loc68)
      tt.reduce.return %53 : f32 loc(#loc58)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc58)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc32)
    %31 = arith.cmpf oeq, %21, %cst_3 : tensor<128x32xf32> loc(#loc33)
    %32 = arith.extui %31 : tensor<128x32xi1> to tensor<128x32xi32> loc(#loc34)
    %33 = arith.cmpi eq, %32, %cst_2 : tensor<128x32xi32> loc(#loc34)
    %34 = arith.extui %33 : tensor<128x32xi1> to tensor<128x32xi64> loc(#loc35)
    %35 = arith.cmpi ne, %34, %cst : tensor<128x32xi64> loc(#loc36)
    %36 = arith.extui %35 : tensor<128x32xi1> to tensor<128x32xi32> loc(#loc37)
    %37 = arith.select %20, %36, %cst_2 : tensor<128x32xi1>, tensor<128x32xi32> loc(#loc37)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc1 at #loc39)), %arg5: i32 loc(callsite(#loc1 at #loc39))):
      %53 = arith.ori %arg4, %arg5 : i32 loc(#loc69)
      tt.reduce.return %53 : i32 loc(#loc61)
    }) : (tensor<128x32xi32>) -> tensor<128xi32> loc(#loc61)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc41)
    %40 = arith.cmpi eq, %39, %cst_1 : tensor<128x1xi32> loc(#loc42)
    %41 = tt.broadcast %30 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc43)
    %42 = arith.divf %27, %41 : tensor<128x32xf32> loc(#loc43)
    %43 = tt.broadcast %40 : tensor<128x1xi1> -> tensor<128x32xi1> loc(#loc44)
    %44 = arith.select %43, %cst_4, %42 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc44)
    %45 = arith.muli %10, %cst_5 : tensor<128x1xi32> loc(#loc45)
    %46 = tt.broadcast %45 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc46)
    %47 = arith.addi %13, %46 : tensor<128x32xi32> loc(#loc46)
    %48 = arith.muli %11, %cst_0 : tensor<128x1xi32> loc(#loc47)
    %49 = tt.broadcast %48 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc48)
    %50 = arith.addi %47, %49 : tensor<128x32xi32> loc(#loc48)
    %51 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc49)
    %52 = tt.addptr %51, %50 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc49)
    tt.store %52, %44, %20 : tensor<128x32x!tt.ptr<f32>> loc(#loc50)
    tt.return loc(#loc51)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":23:28)
#loc3 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":23:33)
#loc4 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:36)
#loc5 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:44)
#loc6 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":24:23)
#loc7 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":25:21)
#loc8 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":26:26)
#loc9 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":26:34)
#loc10 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":28:21)
#loc11 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":31:19)
#loc12 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":32:19)
#loc13 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:38)
#loc14 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:35)
#loc15 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:30)
#loc16 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:51)
#loc17 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":33:43)
#loc18 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":35:41)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":36:40)
#loc26 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":37:18)
#loc27 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":38:23)
#loc28 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":40:41)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc32 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":41:28)
#loc33 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":43:20)
#loc34 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":44:21)
#loc35 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":45:21)
#loc36 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":46:22)
#loc37 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":48:43)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc41 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":49:41)
#loc42 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":50:21)
#loc43 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":51:19)
#loc44 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":53:35)
#loc45 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:33)
#loc46 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:30)
#loc47 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:43)
#loc48 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:38)
#loc49 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:25)
#loc50 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:55)
#loc51 = loc("inductor_cache/q4/cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py":54:4)
#loc52 = loc(callsite(#loc19 at #loc20))
#loc54 = loc(callsite(#loc21 at #loc19))
#loc55 = loc(callsite(#loc22 at #loc19))
#loc56 = loc(callsite(#loc23 at #loc19))
#loc57 = loc(callsite(#loc24 at #loc19))
#loc58 = loc(callsite(#loc29 at #loc30))
#loc60 = loc(callsite(#loc31 at #loc29))
#loc61 = loc(callsite(#loc38 at #loc39))
#loc63 = loc(callsite(#loc40 at #loc38))
#loc64 = loc(callsite(#loc54 at #loc20))
#loc65 = loc(callsite(#loc55 at #loc20))
#loc66 = loc(callsite(#loc56 at #loc20))
#loc67 = loc(callsite(#loc57 at #loc20))
#loc68 = loc(callsite(#loc60 at #loc30))
#loc69 = loc(callsite(#loc63 at #loc39))
