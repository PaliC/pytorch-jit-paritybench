//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_max_unpool2d_18 // -- Begin function triton_poi_fused_convolution_max_unpool2d_18
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 107, 52, 47, 99, 107, 52, 52, 105, 102, 111, 104, 121, 101, 119, 54, 102, 115, 51, 97, 101, 53, 118, 117, 103, 50, 121, 114, 112, 55, 106, 119, 106, 118, 97, 107, 53, 102, 99, 114, 112, 50, 106, 112, 103, 104, 102, 118, 118, 103, 122, 118, 51, 119, 102, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 50, 54, 50, 49, 52, 52};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_convolution_max_unpool2d_18
.visible .entry triton_poi_fused_convolution_max_unpool2d_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_max_unpool2d_18_param_7,
	.param .u32 triton_poi_fused_convolution_max_unpool2d_18_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<104>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<79>;
	.loc	1 19 0                          // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:19:0

// %bb.0:
	ld.param.u64 	%rd34, [triton_poi_fused_convolution_max_unpool2d_18_param_0];
	ld.param.u64 	%rd35, [triton_poi_fused_convolution_max_unpool2d_18_param_1];
$L__tmp0:
	.loc	1 21 28                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:21:28
	// begin inline asm
	mov.u32 %r27, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:21:33
	shl.b32 	%r52, %r27, 9;
	ld.param.u64 	%rd36, [triton_poi_fused_convolution_max_unpool2d_18_param_2];
	.loc	1 22 36                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:22:36
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd37, [triton_poi_fused_convolution_max_unpool2d_18_param_3];
	shl.b32 	%r53, %r1, 2;
	ld.param.u64 	%rd38, [triton_poi_fused_convolution_max_unpool2d_18_param_4];
	and.b32  	%r2, %r53, 508;
	ld.param.u64 	%rd39, [triton_poi_fused_convolution_max_unpool2d_18_param_5];
	.loc	1 22 23                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:22:23
	or.b32  	%r54, %r52, %r2;
	ld.param.u64 	%rd40, [triton_poi_fused_convolution_max_unpool2d_18_param_6];
	.loc	1 25 21                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:25:21
	bfe.s32 	%r55, %r27, 22, 1;
	shr.u32 	%r56, %r55, 26;
	add.s32 	%r57, %r54, %r56;
	shr.s32 	%r58, %r57, 6;
	.loc	1 25 27                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:25:27
	shr.s32 	%r59, %r57, 31;
	shr.u32 	%r60, %r59, 24;
	add.s32 	%r61, %r58, %r60;
	and.b32  	%r62, %r61, -256;
	sub.s32 	%r63, %r58, %r62;
	.loc	1 26 34                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:26:34
	mul.wide.s32 	%rd41, %r54, 4;
	add.s64 	%rd7, %rd34, %rd41;
	mov.pred 	%p23, -1;
	.loc	1 26 39                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:26:39
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p23 ld.global.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 27 30                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:27:30
	mul.wide.s32 	%rd42, %r63, 4;
	add.s64 	%rd8, %rd35, %rd42;
	.loc	1 27 35                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:27:35
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r32 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r33 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r34 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r35 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 28 30                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:28:30
	mul.wide.s32 	%rd43, %r54, 8;
	add.s64 	%rd14, %rd36, %rd43;
	add.s64 	%rd17, %rd14, 16;
	.loc	1 28 35                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:28:35
	// begin inline asm
	mov.u64 %rd12, 0x0;
	mov.u64 %rd13, 0x0;
	@%p23 ld.global.v2.b64 { %rd12, %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	mov.u64 %rd16, 0x0;
	@%p23 ld.global.v2.b64 { %rd15, %rd16 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 29 32                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:29:32
	add.s64 	%rd18, %rd37, %rd42;
	.loc	1 29 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:29:52
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r36 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r37 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r38 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r39 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 30 32                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:30:32
	add.s64 	%rd22, %rd38, %rd42;
	.loc	1 30 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:30:52
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r40 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r41 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r42 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r43 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 31 32                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:31:32
	add.s64 	%rd26, %rd39, %rd42;
	.loc	1 31 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:31:52
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r44 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r45 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r46 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r47 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 32 32                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:32:32
	add.s64 	%rd30, %rd40, %rd42;
	.loc	1 32 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:32:52
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r48 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r49 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r50 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r51 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 34 16                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:34:16
	shl.b32 	%r64, %r58, 8;
	.loc	1 35 18                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:35:18
	cvt.s64.s32 	%rd44, %r64;
	add.s64 	%rd45, %rd16, %rd44;
	add.s64 	%rd46, %rd13, %rd44;
	add.s64 	%rd47, %rd15, %rd44;
	add.s64 	%rd48, %rd12, %rd44;
	.loc	1 39 32                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:39:32
	shr.u64 	%rd49, %rd48, 45;
	shr.u64 	%rd50, %rd47, 45;
	shr.u64 	%rd51, %rd46, 45;
	shr.u64 	%rd52, %rd45, 45;
	and.b64  	%rd53, %rd52, 262144;
	and.b64  	%rd54, %rd51, 262144;
	and.b64  	%rd55, %rd50, 262144;
	and.b64  	%rd56, %rd49, 262144;
	add.s64 	%rd2, %rd56, %rd48;
	add.s64 	%rd4, %rd55, %rd47;
	add.s64 	%rd3, %rd54, %rd46;
	add.s64 	%rd5, %rd53, %rd45;
	.loc	1 40 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:40:52
	or.b64  	%rd57, %rd3, %rd5;
	or.b64  	%rd58, %rd2, %rd4;
	or.b64  	%rd59, %rd58, %rd57;
	setp.lt.u64 	%p24, %rd59, 262144;
	@%p24 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_sqrtf.exit
	.loc	1 0 52                          // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:0:52
	ld.param.u64 	%rd6, [triton_poi_fused_convolution_max_unpool2d_18_param_7];
	.loc	1 30 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:30:52
	mov.b32 	%f1, %r43;
	mov.b32 	%f2, %r42;
	mov.b32 	%f3, %r41;
	mov.b32 	%f4, %r40;
	.loc	1 40 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:40:52
	bar.sync 	0;
	.loc	1 43 20                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:43:20
	add.f32 	%f5, %f4, 0f3727C5AC;
	add.f32 	%f6, %f3, 0f3727C5AC;
	add.f32 	%f7, %f2, 0f3727C5AC;
	add.f32 	%f8, %f1, 0f3727C5AC;
	.loc	1 44 27                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:44:27
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 27 35                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:27:35
	mov.b32 	%f13, %r32;
	mov.b32 	%f14, %r33;
	mov.b32 	%f15, %r34;
	mov.b32 	%f16, %r35;
	.loc	1 29 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:29:52
	mov.b32 	%f17, %r39;
	mov.b32 	%f18, %r38;
	mov.b32 	%f19, %r37;
	mov.b32 	%f20, %r36;
	.loc	1 31 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:31:52
	mov.b32 	%f21, %r47;
	mov.b32 	%f22, %r46;
	mov.b32 	%f23, %r45;
	mov.b32 	%f24, %r44;
	.loc	1 32 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:32:52
	mov.b32 	%f25, %r51;
	mov.b32 	%f26, %r50;
	mov.b32 	%f27, %r49;
	mov.b32 	%f28, %r48;
	.loc	1 46 20                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:46:20
	mov.b32 	%r67, %f9;
	mov.b32 	%r66, 1065353216;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f29, %r65;
	mov.b32 	%r70, %f10;
	// begin inline asm
	div.full.f32 %r68, %r66, %r70;
	// end inline asm
	mov.b32 	%f30, %r68;
	mov.b32 	%r73, %f11;
	// begin inline asm
	div.full.f32 %r71, %r66, %r73;
	// end inline asm
	mov.b32 	%f31, %r71;
	mov.b32 	%r76, %f12;
	// begin inline asm
	div.full.f32 %r74, %r66, %r76;
	// end inline asm
	mov.b32 	%f32, %r74;
	.loc	1 26 39                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:26:39
	mov.b32 	%f33, %r28;
	mov.b32 	%f34, %r29;
	mov.b32 	%f35, %r30;
	mov.b32 	%f36, %r31;
	.loc	1 33 18                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:33:18
	add.f32 	%f37, %f36, %f16;
	add.f32 	%f38, %f35, %f15;
	add.f32 	%f39, %f34, %f14;
	add.f32 	%f40, %f33, %f13;
	.loc	1 41 19                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:41:19
	sub.f32 	%f41, %f40, %f20;
	sub.f32 	%f42, %f39, %f19;
	sub.f32 	%f43, %f38, %f18;
	sub.f32 	%f44, %f37, %f17;
	.loc	1 49 20                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:49:20
	mul.f32 	%f45, %f44, %f32;
	mul.f32 	%f46, %f43, %f31;
	mul.f32 	%f47, %f42, %f30;
	mul.f32 	%f48, %f41, %f29;
	.loc	1 51 20                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:51:20
	fma.rn.f32 	%f49, %f48, %f24, %f28;
	fma.rn.f32 	%f50, %f47, %f23, %f27;
	fma.rn.f32 	%f51, %f46, %f22, %f26;
	fma.rn.f32 	%f52, %f45, %f21, %f25;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p33, %f52, 0f00000000;
	setp.lt.f32 	%p34, %f51, 0f00000000;
	setp.lt.f32 	%p35, %f50, 0f00000000;
	setp.lt.f32 	%p36, %f49, 0f00000000;
$L__tmp2:
	.loc	1 54 39                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:54:39
	mov.b32 	%r77, %f40;
	mov.b32 	%r78, %f39;
	mov.b32 	%r79, %f38;
	mov.b32 	%r80, %f37;
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd7 + 0 ], { %r77, %r78, %r79, %r80 };
	// end inline asm
	.loc	1 55 25                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:55:25
	shl.b64 	%rd75, %rd2, 2;
	add.s64 	%rd67, %rd6, %rd75;
	shl.b64 	%rd76, %rd3, 2;
	add.s64 	%rd68, %rd6, %rd76;
	shl.b64 	%rd77, %rd4, 2;
	add.s64 	%rd69, %rd6, %rd77;
	shl.b64 	%rd78, %rd5, 2;
	add.s64 	%rd70, %rd6, %rd78;
	.loc	1 55 66                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:55:66
	and.b32  	%r92, %r1, 127;
	shl.b32 	%r93, %r2, 3;
	mov.u32 	%r94, global_smem;
	add.s32 	%r81, %r94, %r93;
	// begin inline asm
	@%p23 st.shared.v2.b64 [ %r81 + 0 ], { %rd67, %rd68 };
	// end inline asm
	add.s32 	%r82, %r81, 16;
	// begin inline asm
	@%p23 st.shared.v2.b64 [ %r82 + 0 ], { %rd69, %rd70 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r95, %r92, 3;
	add.s32 	%r96, %r94, %r95;
	ld.shared.u64 	%rd71, [%r96];
	ld.shared.u64 	%rd72, [%r96+1024];
	ld.shared.u64 	%rd73, [%r96+2048];
	ld.shared.u64 	%rd74, [%r96+3072];
	bar.sync 	0;
	shl.b32 	%r97, %r2, 2;
	sub.s32 	%r83, %r81, %r97;
	mov.b32 	%r98, %f52;
	mov.b32 	%r99, %f51;
	mov.b32 	%r100, %f50;
	mov.b32 	%r101, %f49;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r84, 0, %r101, %p36;
	selp.b32 	%r85, 0, %r100, %p35;
	selp.b32 	%r86, 0, %r99, %p34;
	selp.b32 	%r87, 0, %r98, %p33;
$L__tmp4:
	.loc	1 55 66                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:55:66
	// begin inline asm
	@%p23 st.shared.v4.b32 [ %r83 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r102, %r92, 2;
	sub.s32 	%r103, %r96, %r102;
	ld.shared.u32 	%r88, [%r103];
	ld.shared.u32 	%r89, [%r103+512];
	ld.shared.u32 	%r90, [%r103+1024];
	ld.shared.u32 	%r91, [%r103+1536];
	// begin inline asm
	@%p23 st.global.b32 [ %rd71 + 0 ], { %r88 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd72 + 0 ], { %r89 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd73 + 0 ], { %r90 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd74 + 0 ], { %r91 };
	// end inline asm
	.loc	1 55 4                          // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:55:4
	ret;
$L__BB0_1:
	.loc	1 40 52                         // ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py:40:52
	mov.u64 	%rd60, assertMessage_0;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, assertFile_0;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, assertFunc_0;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd61;
	.param .b64 param1;
	st.param.b64 	[param1], %rd63;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd65;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/k4/ck44ifohyew6fs3ae5vug2yrp7jwjvak5fcrp2jpghfvvgzv3wfb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 189                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 52
.b8 52
.b8 105
.b8 102
.b8 111
.b8 104
.b8 121
.b8 101
.b8 119
.b8 54
.b8 102
.b8 115
.b8 51
.b8 97
.b8 101
.b8 53
.b8 118
.b8 117
.b8 103
.b8 50
.b8 121
.b8 114
.b8 112
.b8 55
.b8 106
.b8 119
.b8 106
.b8 118
.b8 97
.b8 107
.b8 53
.b8 102
.b8 99
.b8 114
.b8 112
.b8 50
.b8 106
.b8 112
.b8 103
.b8 104
.b8 102
.b8 118
.b8 118
.b8 103
.b8 122
.b8 118
.b8 51
.b8 119
.b8 102
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 117
.b8 110
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
