; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 31, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = or disjoint i32 %8, 32, !dbg !13
  %10 = icmp slt i32 %8, 64, !dbg !14
  %11 = icmp slt i32 %9, 64, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = mul i32 %12, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = sdiv i32 %9, 16, !dbg !15
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !17
  %15 = sdiv i8 %.lhs.trunc, 2, !dbg !18
  %16 = mul i8 %15, 2, !dbg !17
  %.decomposed7 = sub i8 %.lhs.trunc, %16, !dbg !17
  %.sext = sext i8 %.decomposed7 to i32, !dbg !17
  %17 = shl nsw i32 %.sext, 1, !dbg !19
  %.sext4 = sext i8 %15 to i32, !dbg !18
  %18 = shl nsw i32 %.sext4, 3, !dbg !20
  %19 = shl i32 %12, 6, !dbg !21
  %20 = shl i32 %14, 6, !dbg !21
  %21 = add i32 %18, %19, !dbg !22
  %22 = add i32 %21, %17, !dbg !23
  %23 = add i32 %18, %20, !dbg !22
  %24 = add i32 %23, %17, !dbg !23
  %25 = sext i32 %22 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = sext i32 %24 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %10) #1, !dbg !25
  %30 = bitcast i32 %29 to float, !dbg !25
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !25
  %32 = bitcast i32 %31 to float, !dbg !25
  %33 = or disjoint i32 %21, 1, !dbg !26
  %34 = add i32 %33, %17, !dbg !27
  %35 = or disjoint i32 %23, 1, !dbg !26
  %36 = add i32 %35, %17, !dbg !27
  %37 = sext i32 %34 to i64, !dbg !28
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !28
  %39 = sext i32 %36 to i64, !dbg !28
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !28
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !29
  %42 = bitcast i32 %41 to float, !dbg !29
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %11) #1, !dbg !29
  %44 = bitcast i32 %43 to float, !dbg !29
  %45 = or disjoint i32 %21, 4, !dbg !30
  %46 = add i32 %45, %17, !dbg !31
  %47 = or disjoint i32 %23, 4, !dbg !30
  %48 = add i32 %47, %17, !dbg !31
  %49 = sext i32 %46 to i64, !dbg !32
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !32
  %51 = sext i32 %48 to i64, !dbg !32
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !32
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %10) #1, !dbg !33
  %54 = bitcast i32 %53 to float, !dbg !33
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %11) #1, !dbg !33
  %56 = bitcast i32 %55 to float, !dbg !33
  %57 = or disjoint i32 %21, 5, !dbg !34
  %58 = add i32 %57, %17, !dbg !35
  %59 = or disjoint i32 %23, 5, !dbg !34
  %60 = add i32 %59, %17, !dbg !35
  %61 = sext i32 %58 to i64, !dbg !36
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !36
  %63 = sext i32 %60 to i64, !dbg !36
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !36
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %10) #1, !dbg !37
  %66 = bitcast i32 %65 to float, !dbg !37
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %11) #1, !dbg !37
  %68 = bitcast i32 %67 to float, !dbg !37
  %69 = fadd float %30, %42, !dbg !38
  %70 = fadd float %32, %44, !dbg !38
  %71 = fadd float %69, %54, !dbg !39
  %72 = fadd float %70, %56, !dbg !39
  %73 = fadd float %71, %66, !dbg !40
  %74 = fadd float %72, %68, !dbg !40
  %75 = fmul float %73, 2.500000e-01, !dbg !41
  %76 = fmul float %74, 2.500000e-01, !dbg !41
  %77 = mul i32 %12, 84, !dbg !42
  %78 = mul i32 %14, 84, !dbg !42
  %79 = add i32 %77, %.decomposed, !dbg !43
  %80 = add i32 %78, %.decomposed, !dbg !43
  %81 = sext i32 %79 to i64, !dbg !44
  %82 = getelementptr float, ptr addrspace(1) %1, i64 %81, !dbg !44
  %83 = sext i32 %80 to i64, !dbg !44
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !44
  %85 = bitcast float %75 to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %82, i1 %10) #1, !dbg !45
  %86 = bitcast float %76 to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %84, i1 %11) #1, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ca5qglceww3vhsdb4pnuf3vigu6lkc7vhyushbowbvuxppd34pd2.py", directory: "inductor_cache/a5")
!4 = !{ptr @triton_poi_fused_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_1", linkageName: "triton_poi_fused_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 26, column: 54, scope: !7)
!19 = !DILocation(line: 26, column: 34, scope: !7)
!20 = !DILocation(line: 26, column: 48, scope: !7)
!21 = !DILocation(line: 26, column: 62, scope: !7)
!22 = !DILocation(line: 26, column: 45, scope: !7)
!23 = !DILocation(line: 26, column: 59, scope: !7)
!24 = !DILocation(line: 26, column: 30, scope: !7)
!25 = !DILocation(line: 26, column: 67, scope: !7)
!26 = !DILocation(line: 27, column: 49, scope: !7)
!27 = !DILocation(line: 27, column: 63, scope: !7)
!28 = !DILocation(line: 27, column: 30, scope: !7)
!29 = !DILocation(line: 27, column: 71, scope: !7)
!30 = !DILocation(line: 28, column: 49, scope: !7)
!31 = !DILocation(line: 28, column: 63, scope: !7)
!32 = !DILocation(line: 28, column: 30, scope: !7)
!33 = !DILocation(line: 28, column: 71, scope: !7)
!34 = !DILocation(line: 29, column: 49, scope: !7)
!35 = !DILocation(line: 29, column: 63, scope: !7)
!36 = !DILocation(line: 29, column: 30, scope: !7)
!37 = !DILocation(line: 29, column: 71, scope: !7)
!38 = !DILocation(line: 30, column: 18, scope: !7)
!39 = !DILocation(line: 31, column: 18, scope: !7)
!40 = !DILocation(line: 32, column: 18, scope: !7)
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 35, column: 33, scope: !7)
!43 = !DILocation(line: 35, column: 30, scope: !7)
!44 = !DILocation(line: 35, column: 25, scope: !7)
!45 = !DILocation(line: 35, column: 44, scope: !7)
!46 = !DILocation(line: 35, column: 4, scope: !7)
