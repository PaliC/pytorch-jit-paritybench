#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [0, 1]}>
#loc = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024x1xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024x1xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024x1xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024x1xi8, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<1024> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<128> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<65> : tensor<1024x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.get_program_id x : i32 loc(#loc4)
    %3 = arith.muli %2, %c1024_i32 : i32 loc(#loc5)
    %4 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %5 = tt.expand_dims %4 {axis = 1 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1024x1xi32, #blocked> loc(#loc6)
    %6 = tt.splat %3 : i32 -> tensor<1024x1xi32, #blocked> loc(#loc7)
    %7 = arith.addi %6, %5 : tensor<1024x1xi32, #blocked> loc(#loc7)
    %8 = arith.cmpi slt, %7, %cst_3 : tensor<1024x1xi32, #blocked> loc(#loc8)
    %9 = arith.remsi %7, %cst_4 : tensor<1024x1xi32, #blocked> loc(#loc9)
    %10 = arith.divsi %7, %cst_4 : tensor<1024x1xi32, #blocked> loc(#loc10)
    %11 = arith.remsi %0, %c64_i32 : i32 loc(#loc11)
    %12 = arith.divsi %0, %c64_i32 : i32 loc(#loc12)
    %13 = arith.muli %9, %cst_5 : tensor<1024x1xi32, #blocked> loc(#loc13)
    %14 = arith.muli %10, %cst_6 : tensor<1024x1xi32, #blocked> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<1024x1xi32, #blocked> loc(#loc15)
    %16 = arith.muli %0, %c4096_i32 : i32 loc(#loc16)
    %17 = tt.splat %16 : i32 -> tensor<1024x1xi32, #blocked> loc(#loc17)
    %18 = arith.addi %15, %17 : tensor<1024x1xi32, #blocked> loc(#loc17)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc18)
    %20 = tt.addptr %19, %18 : tensor<1024x1x!tt.ptr<f32>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc18)
    %21 = tt.splat %1 : i1 -> tensor<1024x1xi1, #blocked> loc(#loc19)
    %22 = arith.andi %8, %21 : tensor<1024x1xi1, #blocked> loc(#loc19)
    %23 = tt.load %20, %22 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc20)
    %24 = arith.addi %13, %cst_7 : tensor<1024x1xi32, #blocked> loc(#loc21)
    %25 = arith.addi %24, %14 : tensor<1024x1xi32, #blocked> loc(#loc22)
    %26 = arith.addi %25, %17 : tensor<1024x1xi32, #blocked> loc(#loc23)
    %27 = tt.addptr %19, %26 : tensor<1024x1x!tt.ptr<f32>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc24)
    %28 = tt.load %27, %22 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %29 = arith.addi %13, %cst_8 : tensor<1024x1xi32, #blocked> loc(#loc26)
    %30 = arith.addi %29, %14 : tensor<1024x1xi32, #blocked> loc(#loc27)
    %31 = arith.addi %30, %17 : tensor<1024x1xi32, #blocked> loc(#loc28)
    %32 = tt.addptr %19, %31 : tensor<1024x1x!tt.ptr<f32>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc29)
    %33 = tt.load %32, %22 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %34 = arith.addi %13, %cst_9 : tensor<1024x1xi32, #blocked> loc(#loc31)
    %35 = arith.addi %34, %14 : tensor<1024x1xi32, #blocked> loc(#loc32)
    %36 = arith.addi %35, %17 : tensor<1024x1xi32, #blocked> loc(#loc33)
    %37 = tt.addptr %19, %36 : tensor<1024x1x!tt.ptr<f32>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc34)
    %38 = tt.load %37, %22 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %39 = arith.cmpf ogt, %28, %23 : tensor<1024x1xf32, #blocked> loc(#loc55)
    %40 = arith.cmpf une, %28, %28 : tensor<1024x1xf32, #blocked> loc(#loc56)
    %41 = arith.ori %39, %40 : tensor<1024x1xi1, #blocked> loc(#loc57)
    %42 = arith.select %41, %28, %23 : tensor<1024x1xi1, #blocked>, tensor<1024x1xf32, #blocked> loc(#loc58)
    %43 = arith.cmpf ogt, %33, %42 : tensor<1024x1xf32, #blocked> loc(#loc59)
    %44 = arith.cmpf une, %33, %33 : tensor<1024x1xf32, #blocked> loc(#loc60)
    %45 = arith.ori %43, %44 : tensor<1024x1xi1, #blocked> loc(#loc61)
    %46 = arith.select %45, %33, %42 : tensor<1024x1xi1, #blocked>, tensor<1024x1xf32, #blocked> loc(#loc62)
    %47 = arith.cmpf ogt, %38, %46 : tensor<1024x1xf32, #blocked> loc(#loc63)
    %48 = arith.cmpf une, %38, %38 : tensor<1024x1xf32, #blocked> loc(#loc64)
    %49 = arith.ori %47, %48 : tensor<1024x1xi1, #blocked> loc(#loc65)
    %50 = arith.select %49, %38, %46 : tensor<1024x1xi1, #blocked>, tensor<1024x1xf32, #blocked> loc(#loc66)
    %51 = arith.select %39, %cst, %cst_0 : tensor<1024x1xi1, #blocked>, tensor<1024x1xi8, #blocked> loc(#loc43)
    %52 = arith.select %43, %cst_1, %51 : tensor<1024x1xi1, #blocked>, tensor<1024x1xi8, #blocked> loc(#loc44)
    %53 = arith.select %47, %cst_2, %52 : tensor<1024x1xi1, #blocked>, tensor<1024x1xi8, #blocked> loc(#loc45)
    %54 = arith.muli %7, %cst_8 : tensor<1024x1xi32, #blocked> loc(#loc46)
    %55 = tt.splat %11 : i32 -> tensor<1024x1xi32, #blocked> loc(#loc47)
    %56 = arith.addi %55, %54 : tensor<1024x1xi32, #blocked> loc(#loc47)
    %57 = arith.muli %12, %c65536_i32 : i32 loc(#loc48)
    %58 = tt.splat %57 : i32 -> tensor<1024x1xi32, #blocked> loc(#loc49)
    %59 = arith.addi %56, %58 : tensor<1024x1xi32, #blocked> loc(#loc49)
    %60 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc50)
    %61 = tt.addptr %60, %59 : tensor<1024x1x!tt.ptr<f32>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc50)
    tt.store %61, %50, %22 : tensor<1024x1x!tt.ptr<f32>, #blocked> loc(#loc51)
    %62 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x1x!tt.ptr<i8>, #blocked> loc(#loc52)
    %63 = tt.addptr %62, %59 : tensor<1024x1x!tt.ptr<i8>, #blocked>, tensor<1024x1xi32, #blocked> loc(#loc52)
    tt.store %63, %53, %22 : tensor<1024x1x!tt.ptr<i8>, #blocked> loc(#loc53)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":22:28)
#loc3 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":24:21)
#loc4 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":25:28)
#loc5 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":25:33)
#loc6 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":26:44)
#loc7 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":26:23)
#loc8 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":27:21)
#loc9 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":28:19)
#loc10 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":29:19)
#loc11 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":32:19)
#loc12 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":33:19)
#loc13 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:32)
#loc14 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:41)
#loc15 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:37)
#loc16 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:51)
#loc17 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:46)
#loc18 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:30)
#loc19 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:64)
#loc20 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":34:56)
#loc21 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":35:34)
#loc22 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":35:41)
#loc23 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":35:50)
#loc24 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":35:30)
#loc25 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":35:60)
#loc26 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":36:35)
#loc27 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":36:42)
#loc28 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":36:51)
#loc29 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":36:30)
#loc30 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":36:61)
#loc31 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":37:35)
#loc32 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":37:42)
#loc33 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":37:51)
#loc34 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":37:30)
#loc35 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":37:61)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc37 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":38:40)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc41 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":39:40)
#loc42 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":40:40)
#loc43 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":44:33)
#loc44 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":47:35)
#loc45 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":50:35)
#loc46 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:33)
#loc47 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:30)
#loc48 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:44)
#loc49 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:38)
#loc50 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:25)
#loc51 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":51:55)
#loc52 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":52:25)
#loc53 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":52:56)
#loc54 = loc("inductor_cache/3c/c3cdojqimizklicwisecqhqbentqusluwkntjw4ula6ikr3654dd.py":52:4)
#loc55 = loc(callsite(#loc36 at #loc37))
#loc56 = loc(callsite(#loc38 at #loc37))
#loc57 = loc(callsite(#loc39 at #loc37))
#loc58 = loc(callsite(#loc40 at #loc37))
#loc59 = loc(callsite(#loc36 at #loc41))
#loc60 = loc(callsite(#loc38 at #loc41))
#loc61 = loc(callsite(#loc39 at #loc41))
#loc62 = loc(callsite(#loc40 at #loc41))
#loc63 = loc(callsite(#loc36 at #loc42))
#loc64 = loc(callsite(#loc38 at #loc42))
#loc65 = loc(callsite(#loc39 at #loc42))
#loc66 = loc(callsite(#loc40 at #loc42))
