//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_constant_pad_nd_66 // -- Begin function triton_poi_fused_constant_pad_nd_66
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_constant_pad_nd_66
.visible .entry triton_poi_fused_constant_pad_nd_66(
	.param .u64 .ptr .global .align 1 triton_poi_fused_constant_pad_nd_66_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_constant_pad_nd_66_param_1,
	.param .u32 triton_poi_fused_constant_pad_nd_66_param_2,
	.param .u32 triton_poi_fused_constant_pad_nd_66_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b32 	%r<157>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_constant_pad_nd_66_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_constant_pad_nd_66_param_1];
$L__tmp0:
	.loc	1 22 28                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:22:33
	shl.b32 	%r43, %r1, 5;
	.loc	1 23 44                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:23:44
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 2;
	and.b32  	%r46, %r45, 28;
	bfe.u32 	%r47, %r44, 5, 2;
	.loc	1 23 23                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:23:23
	or.b32  	%r48, %r43, %r46;
	or.b32  	%r49, %r43, %r47;
	or.b32  	%r50, %r49, 4;
	or.b32  	%r51, %r49, 8;
	or.b32  	%r52, %r49, 12;
	or.b32  	%r53, %r49, 16;
	or.b32  	%r54, %r49, 20;
	or.b32  	%r55, %r49, 24;
	or.b32  	%r56, %r49, 28;
	.loc	1 24 21                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:24:21
	setp.lt.s32 	%p27, %r48, 2112;
	setp.lt.s32 	%p28, %r49, 2112;
	setp.lt.s32 	%p29, %r50, 2112;
	setp.lt.s32 	%p30, %r51, 2112;
	setp.lt.s32 	%p31, %r52, 2112;
	setp.lt.s32 	%p32, %r53, 2112;
	setp.lt.s32 	%p33, %r54, 2112;
	setp.lt.s32 	%p34, %r55, 2112;
	setp.lt.s32 	%p35, %r56, 2112;
	.loc	1 25 28                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:25:33
	shl.b32 	%r57, %r2, 5;
	.loc	1 26 44                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:26:44
	shr.u32 	%r58, %r44, 3;
	bfe.u32 	%r59, %r44, 3, 4;
	and.b32  	%r60, %r44, 31;
	.loc	1 26 23                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:26:23
	or.b32  	%r61, %r57, %r59;
	or.b32  	%r62, %r61, 16;
	or.b32  	%r63, %r57, %r60;
	.loc	1 27 21                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:27:21
	setp.lt.s32 	%p36, %r63, 25;
	.loc	1 28 19                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:28:19
	mul.hi.s32 	%r65, %r61, 1717986919;
	shr.u32 	%r66, %r65, 31;
	shr.s32 	%r67, %r65, 1;
	add.s32 	%r68, %r67, %r66;
	mul.hi.s32 	%r70, %r62, 1717986919;
	shr.u32 	%r71, %r70, 31;
	shr.s32 	%r72, %r70, 1;
	add.s32 	%r73, %r72, %r71;
	.loc	1 29 19                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:29:19
	mul.lo.s32 	%r74, %r68, 5;
	sub.s32 	%r75, %r61, %r74;
	mul.lo.s32 	%r76, %r73, 5;
	sub.s32 	%r77, %r62, %r76;
	.loc	1 31 19                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:31:19
	mul.hi.s32 	%r79, %r48, 1041204193;
	shr.u32 	%r80, %r79, 31;
	shr.s32 	%r81, %r79, 7;
	add.s32 	%r82, %r81, %r80;
	.loc	1 30 19                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:30:19
	mul.lo.s32 	%r83, %r82, 528;
	sub.s32 	%r84, %r48, %r83;
	.loc	1 36 18                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:36:18
	setp.lt.s32 	%p37, %r61, 20;
	setp.lt.s32 	%p38, %r62, 20;
	.loc	1 38 18                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:38:18
	setp.lt.s32 	%p39, %r75, 4;
	setp.lt.s32 	%p40, %r77, 4;
	.loc	1 39 18                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:39:18
	and.pred  	%p41, %p37, %p39;
	and.pred  	%p42, %p38, %p40;
	.loc	1 40 35                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:35
	mad.lo.s32 	%r85, %r82, 8448, %r84;
	.loc	1 40 44                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:44
	mad.lo.s32 	%r86, %r75, 528, %r85;
	.loc	1 40 54                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:54
	mad.lo.s32 	%r87, %r68, 2112, %r86;
	.loc	1 40 44                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:44
	mad.lo.s32 	%r88, %r77, 528, %r85;
	.loc	1 40 54                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:54
	mad.lo.s32 	%r89, %r73, 2112, %r88;
	.loc	1 40 30                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:30
	mul.wide.s32 	%rd13, %r87, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r89, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 40 79                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:79
	and.pred  	%p1, %p27, %p41;
	and.pred  	%p6, %p42, %p27;
	mov.b32 	%r7, 0;
	.loc	1 40 64                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:40:64
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r20, %r7;
	@!%p1 mov.u32 %r22, %r7;
	@!%p1 mov.u32 %r24, %r7;
	@!%p1 mov.u32 %r26, %r7;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r28, %r7;
	@!%p6 mov.u32 %r30, %r7;
	@!%p6 mov.u32 %r32, %r7;
	@!%p6 mov.u32 %r34, %r7;
	// end inline asm
	.loc	1 41 30                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:41:30
	mad.lo.s32 	%r90, %r49, 25, %r63;
	add.s32 	%r91, %r90, 100;
	add.s32 	%r92, %r90, 200;
	add.s32 	%r93, %r90, 300;
	add.s32 	%r94, %r90, 400;
	add.s32 	%r95, %r90, 500;
	add.s32 	%r96, %r90, 600;
	add.s32 	%r97, %r90, 700;
	.loc	1 41 25                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:41:25
	mul.wide.s32 	%rd15, %r90, 4;
	add.s64 	%rd3, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r91, 4;
	add.s64 	%rd4, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r92, 4;
	add.s64 	%rd5, %rd12, %rd17;
	mul.wide.s32 	%rd18, %r93, 4;
	add.s64 	%rd6, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r94, 4;
	add.s64 	%rd7, %rd12, %rd19;
	mul.wide.s32 	%rd20, %r95, 4;
	add.s64 	%rd8, %rd12, %rd20;
	mul.wide.s32 	%rd21, %r96, 4;
	add.s64 	%rd9, %rd12, %rd21;
	mul.wide.s32 	%rd22, %r97, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 41 52                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:41:52
	and.pred  	%p19, %p28, %p36;
	and.pred  	%p20, %p29, %p36;
	and.pred  	%p21, %p30, %p36;
	and.pred  	%p22, %p31, %p36;
	and.pred  	%p23, %p32, %p36;
	and.pred  	%p24, %p33, %p36;
	and.pred  	%p25, %p34, %p36;
	and.pred  	%p26, %p35, %p36;
	.loc	1 41 44                         // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:41:44
	shl.b32 	%r98, %r44, 7;
	and.b32  	%r99, %r98, 896;
	or.b32  	%r100, %r99, %r59;
	and.b32  	%r101, %r44, 127;
	shr.u32 	%r102, %r99, 3;
	mov.u32 	%r103, global_smem;
	add.s32 	%r104, %r103, %r102;
	shl.b32 	%r105, %r100, 2;
	add.s32 	%r19, %r104, %r105;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r106, %r99, 32;
	shr.u32 	%r107, %r106, 3;
	add.s32 	%r108, %r103, %r107;
	add.s32 	%r109, %r108, %r105;
	add.s32 	%r21, %r109, 128;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r110, %r99, 64;
	shr.u32 	%r111, %r110, 3;
	add.s32 	%r112, %r103, %r111;
	add.s32 	%r113, %r112, %r105;
	add.s32 	%r23, %r113, 256;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r114, %r99, 96;
	shr.u32 	%r115, %r114, 3;
	add.s32 	%r116, %r103, %r115;
	add.s32 	%r117, %r116, %r105;
	add.s32 	%r25, %r117, 384;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 64;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r109, 192;
	// begin inline asm
	@%p11 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r113, 320;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r117, 448;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r118, %r58, 12;
	add.s32 	%r119, %r103, %r118;
	shl.b32 	%r120, %r101, 2;
	add.s32 	%r121, %r119, %r120;
	ld.shared.u32 	%r35, [%r121];
	or.b32  	%r122, %r101, 128;
	shr.u32 	%r123, %r122, 3;
	and.b32  	%r124, %r123, 28;
	add.s32 	%r125, %r103, %r124;
	add.s32 	%r126, %r125, %r120;
	ld.shared.u32 	%r36, [%r126+512];
	or.b32  	%r127, %r101, 256;
	shr.u32 	%r128, %r127, 3;
	and.b32  	%r129, %r128, 44;
	add.s32 	%r130, %r103, %r129;
	add.s32 	%r131, %r130, %r120;
	ld.shared.u32 	%r37, [%r131+1024];
	or.b32  	%r132, %r101, 384;
	shr.u32 	%r133, %r132, 3;
	and.b32  	%r134, %r133, 60;
	add.s32 	%r135, %r103, %r134;
	add.s32 	%r136, %r135, %r120;
	ld.shared.u32 	%r38, [%r136+1536];
	or.b32  	%r137, %r101, 512;
	shr.u32 	%r138, %r137, 3;
	and.b32  	%r139, %r138, 76;
	add.s32 	%r140, %r103, %r139;
	add.s32 	%r141, %r140, %r120;
	ld.shared.u32 	%r39, [%r141+2048];
	or.b32  	%r142, %r101, 640;
	shr.u32 	%r143, %r142, 3;
	and.b32  	%r144, %r143, 92;
	add.s32 	%r145, %r103, %r144;
	add.s32 	%r146, %r145, %r120;
	ld.shared.u32 	%r40, [%r146+2560];
	or.b32  	%r147, %r101, 768;
	shr.u32 	%r148, %r147, 3;
	and.b32  	%r149, %r148, 108;
	add.s32 	%r150, %r103, %r149;
	add.s32 	%r151, %r150, %r120;
	ld.shared.u32 	%r41, [%r151+3072];
	or.b32  	%r152, %r101, 896;
	shr.u32 	%r153, %r152, 3;
	and.b32  	%r154, %r153, 124;
	add.s32 	%r155, %r103, %r154;
	add.s32 	%r156, %r155, %r120;
	ld.shared.u32 	%r42, [%r156+3584];
	// begin inline asm
	@%p19 st.global.b32 [ %rd3 + 0 ], { %r35 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.b32 [ %rd4 + 0 ], { %r36 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.b32 [ %rd5 + 0 ], { %r37 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.b32 [ %rd6 + 0 ], { %r38 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd7 + 0 ], { %r39 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.b32 [ %rd8 + 0 ], { %r40 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.b32 [ %rd9 + 0 ], { %r41 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.b32 [ %rd10 + 0 ], { %r42 };
	// end inline asm
	.loc	1 41 4                          // ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/i6/ci67adiscjzjvhccedyab2vnhduotujrgf6fsbzfwpsrrctfn2z7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 54
.b8 55
.b8 97
.b8 100
.b8 105
.b8 115
.b8 99
.b8 106
.b8 122
.b8 106
.b8 118
.b8 104
.b8 99
.b8 99
.b8 101
.b8 100
.b8 121
.b8 97
.b8 98
.b8 50
.b8 118
.b8 110
.b8 104
.b8 100
.b8 117
.b8 111
.b8 116
.b8 117
.b8 106
.b8 114
.b8 103
.b8 102
.b8 54
.b8 102
.b8 115
.b8 98
.b8 122
.b8 102
.b8 119
.b8 112
.b8 115
.b8 114
.b8 114
.b8 99
.b8 116
.b8 102
.b8 110
.b8 50
.b8 122
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
