//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1 // -- Begin function triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1
                                        // @triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1
.visible .entry triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_2,
	.param .u32 triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<19>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:21:33
	shl.b32 	%r6, %r1, 8;
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_leaky_relu_leaky_relu_backward_1_param_2];
	.loc	1 22 36                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:22:36
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 1;
	and.b32  	%r9, %r8, 254;
	.loc	1 22 23                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:22:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 23 21                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:23:21
	setp.lt.s32 	%p1, %r10, 1024;
	.loc	1 25 21                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:25:21
	bfe.s32 	%r11, %r1, 23, 1;
	shr.u32 	%r12, %r11, 28;
	add.s32 	%r13, %r10, %r12;
	shr.s32 	%r14, %r13, 4;
	.loc	1 25 27                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:25:27
	shr.u32 	%r15, %r14, 28;
	add.s32 	%r16, %r14, %r15;
	and.b32  	%r17, %r16, -16;
	sub.s32 	%r18, %r14, %r17;
	.loc	1 26 30                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:26:30
	cvt.s64.s32 	%rd8, %r10;
	mul.wide.s32 	%rd9, %r10, 4;
	add.s64 	%rd1, %rd5, %rd9;
	.loc	1 26 35                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:27:30
	mul.wide.s32 	%rd10, %r18, 4;
	add.s64 	%rd2, %rd6, %rd10;
	.loc	1 27 35                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 25                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:35:25
	add.s64 	%rd4, %rd7, %rd8;
	.loc	1 26 35                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:26:35
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r2;
	.loc	1 27 35                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:27:35
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r4;
	.loc	1 28 18                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:28:18
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 30 18                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:30:18
	setp.gt.f32 	%p5, %f6, 0f00000000;
	setp.gt.f32 	%p6, %f5, 0f00000000;
	.loc	1 32 18                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:32:18
	mul.f32 	%f7, %f6, 0f3E4CCCCD;
	mul.f32 	%f8, %f5, 0f3E4CCCCD;
	.loc	1 33 32                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:33:32
	selp.f32 	%f9, %f5, %f8, %p6;
	selp.f32 	%f10, %f6, %f7, %p5;
	.loc	1 34 18                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:34:18
	setp.gt.f32 	%p7, %f10, 0f00000000;
	setp.gt.f32 	%p8, %f9, 0f00000000;
	.loc	1 35 36                         // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:35:36
	selp.u16 	%rs2, 1, 0, %p8;
	selp.u16 	%rs3, 1, 0, %p7;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd4 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 35 4                          // cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nd/cndk4zcx4rxibuylhrrbo3xoplw7bi6ssclubjsqat6ehytj6tbx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 100
.b8 107
.b8 52
.b8 122
.b8 99
.b8 120
.b8 52
.b8 114
.b8 120
.b8 105
.b8 98
.b8 117
.b8 121
.b8 108
.b8 104
.b8 114
.b8 114
.b8 98
.b8 111
.b8 51
.b8 120
.b8 111
.b8 112
.b8 108
.b8 119
.b8 55
.b8 98
.b8 105
.b8 54
.b8 115
.b8 115
.b8 99
.b8 108
.b8 117
.b8 98
.b8 106
.b8 115
.b8 113
.b8 97
.b8 116
.b8 54
.b8 101
.b8 104
.b8 121
.b8 116
.b8 106
.b8 54
.b8 116
.b8 98
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
