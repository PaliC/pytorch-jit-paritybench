//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<46>;
	.reg .f32 	%f<27>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:22:33
	shl.b32 	%r21, %r1, 8;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_2];
	.loc	1 23 44                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:23:44
	mov.u32 	%r22, %tid.x;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_3];
	and.b32  	%r24, %r22, 127;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_4];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_5];
	shl.b32 	%r25, %r22, 1;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_6];
	and.b32  	%r26, %r25, 254;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_7];
	.loc	1 23 23                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:23:23
	or.b32  	%r27, %r21, %r24;
	or.b32  	%r28, %r21, %r26;
	.loc	1 25 28                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:27:21
	setp.lt.s32 	%p1, %r2, 2;
	.loc	1 31 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:31:19
	bfe.s32 	%r29, %r1, 23, 1;
	shr.u32 	%r30, %r29, 24;
	add.s32 	%r31, %r28, %r30;
	.loc	1 30 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:30:19
	and.b32  	%r32, %r31, -256;
	sub.s32 	%r33, %r28, %r32;
	.loc	1 23 23                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:23:23
	shl.b32 	%r34, %r27, 1;
	.loc	1 32 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:35
	add.s32 	%r35, %r34, %r2;
	add.s32 	%r36, %r35, 256;
	.loc	1 32 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:30
	mul.wide.s32 	%rd18, %r35, 4;
	add.s64 	%rd1, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r36, 4;
	add.s64 	%rd2, %rd10, %rd19;
	.loc	1 32 42                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:30
	mul.wide.s32 	%rd20, %r2, 4;
	add.s64 	%rd3, %rd11, %rd20;
	.loc	1 33 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:34:30
	add.s64 	%rd4, %rd12, %rd20;
	.loc	1 34 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	.loc	1 35 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:31
	add.s64 	%rd5, %rd13, %rd20;
	.loc	1 35 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:31
	add.s64 	%rd6, %rd14, %rd20;
	.loc	1 36 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:31
	add.s64 	%rd7, %rd15, %rd20;
	.loc	1 37 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 40                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:40
	shl.b32 	%r37, %r2, 8;
	.loc	1 38 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:36
	add.s32 	%r38, %r33, %r37;
	.loc	1 38 49                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:49
	shl.b32 	%r39, %r31, 1;
	and.b32  	%r40, %r39, -512;
	.loc	1 38 45                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:45
	add.s32 	%r41, %r38, %r40;
	.loc	1 38 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:31
	mul.wide.s32 	%rd21, %r41, 4;
	add.s64 	%rd8, %rd16, %rd21;
	.loc	1 38 54                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:54
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 41 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:41:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 42 26                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:42:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 42                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:42
	mov.b32 	%f4, %r4;
	.loc	1 33 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:35
	mov.b32 	%f5, %r5;
	.loc	1 39 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:39:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 32 42                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:42
	mov.b32 	%f7, %r3;
	.loc	1 39 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:39:18
	sub.f32 	%f8, %f7, %f5;
	.loc	1 38 54                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:54
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r10;
	.loc	1 37 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:36
	mov.b32 	%f11, %r9;
	.loc	1 36 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:36
	mov.b32 	%f12, %r8;
	.loc	1 35 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:36
	mov.b32 	%f13, %r7;
	.loc	1 44 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:44:18
	mov.b32 	%r14, %f3;
	mov.b32 	%r13, 1065353216;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f14, %r12;
	.loc	1 47 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:47:19
	mul.f32 	%f15, %f8, %f14;
	mul.f32 	%f16, %f6, %f14;
	.loc	1 49 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:49:20
	fma.rn.f32 	%f17, %f15, %f13, %f12;
	fma.rn.f32 	%f18, %f16, %f13, %f12;
	.loc	1 51 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:51:20
	setp.gt.f32 	%p12, %f17, 0f00000000;
	setp.gt.f32 	%p13, %f18, 0f00000000;
	.loc	1 52 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:52:20
	mul.f32 	%f19, %f17, %f11;
	mul.f32 	%f20, %f18, %f11;
	.loc	1 53 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:53:35
	selp.f32 	%f21, %f17, %f19, %p12;
	selp.f32 	%f22, %f18, %f20, %p13;
	shl.b32 	%r42, %r24, 2;
	mov.u32 	%r43, global_smem;
	add.s32 	%r15, %r43, %r42;
	mov.b32 	%r16, %f21;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r15, 512;
	mov.b32 	%r18, %f22;
	// begin inline asm
	@%p9 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r44, %r26, 2;
	add.s32 	%r45, %r43, %r44;
	ld.shared.v2.f32 	{%f23, %f24}, [%r45];
	.loc	1 54 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:54:20
	add.f32 	%f25, %f23, %f10;
	add.f32 	%f26, %f24, %f9;
	.loc	1 55 25                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:25
	add.s64 	%rd9, %rd17, %rd21;
	.loc	1 55 55                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:55
	mov.b32 	%r19, %f25;
	mov.b32 	%r20, %f26;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r19, %r20 };
	// end inline asm
	.loc	1 55 4                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/f7/cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 55
.b8 110
.b8 103
.b8 109
.b8 97
.b8 108
.b8 116
.b8 104
.b8 115
.b8 112
.b8 50
.b8 107
.b8 101
.b8 114
.b8 53
.b8 112
.b8 110
.b8 116
.b8 105
.b8 122
.b8 103
.b8 54
.b8 52
.b8 115
.b8 112
.b8 110
.b8 110
.b8 100
.b8 120
.b8 50
.b8 54
.b8 55
.b8 117
.b8 115
.b8 121
.b8 119
.b8 121
.b8 117
.b8 114
.b8 115
.b8 117
.b8 100
.b8 53
.b8 111
.b8 115
.b8 109
.b8 117
.b8 119
.b8 102
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
