//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_22 // -- Begin function triton_poi_fused_cat_22
                                        // @triton_poi_fused_cat_22
.visible .entry triton_poi_fused_cat_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_22_param_5,
	.param .u32 triton_poi_fused_cat_22_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_cat_22_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_22_param_1];
$L__tmp0:
	.loc	1 21 28                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:21:33
	shl.b32 	%r24, %r1, 9;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_22_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_22_param_3];
	.loc	1 22 36                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:22:36
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 1;
	ld.param.u64 	%rd12, [triton_poi_fused_cat_22_param_4];
	and.b32  	%r27, %r26, 510;
	ld.param.u64 	%rd13, [triton_poi_fused_cat_22_param_5];
	.loc	1 22 23                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:22:23
	or.b32  	%r28, %r24, %r27;
	.loc	1 24 21                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:24:21
	shr.s32 	%r30, %r28, 31;
	shr.u32 	%r31, %r30, 22;
	add.s32 	%r32, %r28, %r31;
	shr.s32 	%r33, %r32, 10;
	.loc	1 24 29                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:24:29
	shr.u32 	%r34, %r33, 25;
	add.s32 	%r35, %r33, %r34;
	and.b32  	%r36, %r35, -128;
	sub.s32 	%r37, %r33, %r36;
	.loc	1 25 19                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:25:19
	and.b32  	%r38, %r32, -1024;
	sub.s32 	%r39, %r28, %r38;
	.loc	1 26 19                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:26:19
	shr.u32 	%r40, %r30, 15;
	add.s32 	%r41, %r28, %r40;
	shr.s32 	%r42, %r41, 17;
	.loc	1 32 18                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:32:18
	setp.lt.s32 	%p18, %r37, 96;
	.loc	1 37 18                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:37:18
	setp.lt.s32 	%p19, %r37, 64;
	.loc	1 43 20                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:43:20
	setp.lt.s32 	%p1, %r37, 32;
	.loc	1 45 36                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:45:36
	and.b32  	%r43, %r41, -131072;
	sub.s32 	%r44, %r28, %r43;
	.loc	1 45 54                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:45:54
	shl.b32 	%r45, %r42, 15;
	.loc	1 45 48                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:45:48
	add.s32 	%r46, %r45, %r44;
	.loc	1 45 31                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:45:31
	mul.wide.s32 	%rd14, %r46, 4;
	add.s64 	%rd1, %rd8, %rd14;
	mov.b32 	%r4, 0;
	.loc	1 45 59                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:45:59
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 46 31                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:46:31
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 46 36                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:46:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 47 20                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:47:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 53 20                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:53:20
	and.b32  	%r47, %r37, -32;
	setp.eq.s32 	%p8, %r47, 32;
	.loc	1 54 42                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:54:42
	shl.b32 	%r48, %r37, 10;
	add.s32 	%r49, %r45, %r39;
	.loc	1 54 31                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:54:31
	cvt.s64.s32 	%rd16, %r48;
	cvt.s64.s32 	%rd17, %r49;
	add.s64 	%rd18, %rd17, %rd16;
	shl.b64 	%rd19, %rd18, 2;
	add.s64 	%rd20, %rd10, %rd19;
	add.s64 	%rd4, %rd20, -131072;
	.loc	1 54 69                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:54:69
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p8 ld.global.v2.b32 { %r10, %r11 }, [ %rd4 + 0 ];
	@!%p8 mov.u32 %r10, %r4;
	@!%p8 mov.u32 %r11, %r4;
	// end inline asm
	.loc	1 61 20                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:61:20
	setp.eq.s32 	%p11, %r47, 64;
	.loc	1 62 31                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:62:31
	add.s64 	%rd21, %rd11, %rd19;
	add.s64 	%rd5, %rd21, -262144;
	.loc	1 62 69                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:62:69
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p11 ld.global.v2.b32 { %r14, %r15 }, [ %rd5 + 0 ];
	@!%p11 mov.u32 %r14, %r4;
	@!%p11 mov.u32 %r15, %r4;
	// end inline asm
	.loc	1 66 20                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:66:20
	setp.gt.s32 	%p14, %r37, 95;
	.loc	1 69 31                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:69:31
	add.s64 	%rd22, %rd12, %rd19;
	add.s64 	%rd6, %rd22, -393216;
	.loc	1 69 67                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:69:67
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p14 ld.global.v2.b32 { %r18, %r19 }, [ %rd6 + 0 ];
	@!%p14 mov.u32 %r18, %r4;
	@!%p14 mov.u32 %r19, %r4;
	// end inline asm
	.loc	1 71 25                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:71:25
	mul.wide.s32 	%rd23, %r28, 4;
	add.s64 	%rd7, %rd13, %rd23;
	.loc	1 71 37                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:71:37
	mov.b32 	%r50, %f5;
	.loc	1 55 35                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:55:35
	selp.b32 	%r51, %r50, %r10, %p1;
	.loc	1 63 34                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:63:34
	selp.b32 	%r52, %r51, %r14, %p19;
	.loc	1 0 0                           // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:0:0
	selp.b32 	%r22, %r52, %r18, %p18;
	.loc	1 71 37                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:71:37
	mov.b32 	%r53, %f6;
	.loc	1 55 35                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:55:35
	selp.b32 	%r54, %r53, %r11, %p1;
	.loc	1 63 34                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:63:34
	selp.b32 	%r55, %r54, %r15, %p19;
	.loc	1 0 0                           // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:0:0
	selp.b32 	%r23, %r55, %r19, %p18;
	mov.pred 	%p17, -1;
	.loc	1 71 37                         // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:71:37
	// begin inline asm
	@%p17 st.global.v2.b32 [ %rd7 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 71 4                          // chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py:71:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 101
.b8 100
.b8 51
.b8 121
.b8 100
.b8 115
.b8 51
.b8 50
.b8 120
.b8 118
.b8 54
.b8 100
.b8 112
.b8 98
.b8 51
.b8 97
.b8 53
.b8 114
.b8 112
.b8 122
.b8 114
.b8 107
.b8 106
.b8 104
.b8 120
.b8 101
.b8 55
.b8 112
.b8 104
.b8 99
.b8 101
.b8 98
.b8 112
.b8 118
.b8 120
.b8 122
.b8 122
.b8 97
.b8 97
.b8 111
.b8 114
.b8 102
.b8 121
.b8 117
.b8 98
.b8 52
.b8 108
.b8 108
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
