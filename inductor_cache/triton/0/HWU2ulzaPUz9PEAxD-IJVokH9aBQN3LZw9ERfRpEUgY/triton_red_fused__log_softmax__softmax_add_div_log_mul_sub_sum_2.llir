; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 255, !dbg !10
  %7 = and i32 %5, 252, !dbg !11
  %8 = zext nneg i32 %6 to i64, !dbg !12
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !12
  %10 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %9, i1 true, i32 0, i1 true) #4, !dbg !13
  %11 = bitcast i32 %10 to float, !dbg !13
  %12 = zext nneg i32 %7 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !14
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 true, i32 0, i1 true) #4, !dbg !15
  %15 = bitcast i32 %14 to float, !dbg !15
  %16 = or disjoint i32 %7, 1, !dbg !16
  %17 = zext nneg i32 %16 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 true, i32 0, i1 true) #4, !dbg !18
  %20 = bitcast i32 %19 to float, !dbg !18
  %21 = or disjoint i32 %7, 2, !dbg !19
  %22 = zext nneg i32 %21 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 true, i32 0, i1 true) #4, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = or disjoint i32 %7, 3, !dbg !22
  %27 = zext nneg i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 true, i32 0, i1 true) #4, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 true, i32 0, i1 true) #4, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !27
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 true, i32 0, i1 true) #4, !dbg !28
  %35 = bitcast i32 %34 to float, !dbg !28
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !29
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 true, i32 0, i1 true) #4, !dbg !30
  %38 = bitcast i32 %37 to float, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !31
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 true, i32 0, i1 true) #4, !dbg !32
  %41 = bitcast i32 %40 to float, !dbg !32
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !33
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 true, i32 0, i1 true) #4, !dbg !34
  %44 = bitcast i32 %43 to float, !dbg !34
  %45 = fadd float %15, %20, !dbg !35
  %46 = fadd float %45, %25, !dbg !36
  %47 = fadd float %46, %30, !dbg !37
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %11, float %47) #4, !dbg !38
  %49 = fadd float %48, 0x3DDB7CDFE0000000, !dbg !39
  %50 = fcmp olt float %49, 0x3810000000000000, !dbg !40
  %51 = fmul float %49, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %50, float %51, float %49, !dbg !40
  %i.i.0.i = select i1 %50, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %52 = bitcast float %.02.i to i32, !dbg !40
  %53 = add i32 %52, -1059760811, !dbg !40
  %54 = and i32 %53, -8388608, !dbg !40
  %55 = sub i32 %52, %54, !dbg !40
  %56 = bitcast i32 %55 to float, !dbg !40
  %57 = sitofp i32 %54 to float, !dbg !40
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i = icmp eq i32 %58, 0, !dbg !40
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %.08.i = select i1 %.not.i, float %60, float %59, !dbg !40
  %61 = fadd float %56, -1.000000e+00, !dbg !40
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i = icmp eq i32 %62, 0, !dbg !40
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %61, float 0x3FC2073EC0000000) #4, !dbg !40
  %64 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %61, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i = select i1 %.not1.i, float %64, float %63, !dbg !40
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i = icmp eq i32 %65, 0, !dbg !40
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %61, float 0xBFBF19B980000000) #4, !dbg !40
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %61, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i = select i1 %.not2.i, float %67, float %66, !dbg !40
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i = icmp eq i32 %68, 0, !dbg !40
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %61, float 0x3FC1E52AA0000000) #4, !dbg !40
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %61, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i = select i1 %.not3.i, float %70, float %69, !dbg !40
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i = icmp eq i32 %71, 0, !dbg !40
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %61, float 0xBFC55B1720000000) #4, !dbg !40
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %61, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i = select i1 %.not4.i, float %73, float %72, !dbg !40
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i = icmp eq i32 %74, 0, !dbg !40
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %61, float 0x3FC99DA160000000) #4, !dbg !40
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %61, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i = select i1 %.not5.i, float %76, float %75, !dbg !40
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i = icmp eq i32 %77, 0, !dbg !40
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %61, float 0xBFCFFFE440000000) #4, !dbg !40
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %61, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i = select i1 %.not6.i, float %79, float %78, !dbg !40
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i = icmp eq i32 %80, 0, !dbg !40
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %61, float 0x3FD5554F00000000) #4, !dbg !40
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %61, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i = select i1 %.not7.i, float %82, float %81, !dbg !40
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i = icmp eq i32 %83, 0, !dbg !40
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %61, float -5.000000e-01) #4, !dbg !40
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %61, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not8.i, float %85, float %84, !dbg !40
  %86 = fmul float %61, %.07.i, !dbg !40
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i = icmp eq i32 %87, 0, !dbg !40
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %86, float %61, float %61) #4, !dbg !40
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %86, float %61, float %61) #4, !dbg !40
  %.06.i = select i1 %.not9.i, float %89, float %88, !dbg !40
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i = icmp eq i32 %90, 0, !dbg !40
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %.04.i = select i1 %.not10.i, float %92, float %91, !dbg !40
  %93 = icmp ugt i32 %52, 2139095039, !dbg !40
  br i1 %93, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i = icmp eq i32 %94, 0, !dbg !40
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i = select i1 %.not11.i, float %96, float %95, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !40
  %97 = fmul float %35, 0x3FF7154760000000, !dbg !41
  %98 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %97) #4, !dbg !41
  %99 = fmul float %38, 0x3FF7154760000000, !dbg !42
  %100 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %99) #4, !dbg !42
  %101 = fadd float %98, %100, !dbg !43
  %102 = fmul float %41, 0x3FF7154760000000, !dbg !44
  %103 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %102) #4, !dbg !44
  %104 = fadd float %101, %103, !dbg !45
  %105 = fmul float %44, 0x3FF7154760000000, !dbg !46
  %106 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %105) #4, !dbg !46
  %107 = fadd float %104, %106, !dbg !47
  %108 = fcmp olt float %107, 0x3810000000000000, !dbg !48
  %109 = fmul float %107, 0x4160000000000000, !dbg !48
  %.02.i1 = select i1 %108, float %109, float %107, !dbg !48
  %i.i.0.i2 = select i1 %108, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %110 = bitcast float %.02.i1 to i32, !dbg !48
  %111 = add i32 %110, -1059760811, !dbg !48
  %112 = and i32 %111, -8388608, !dbg !48
  %113 = sub i32 %110, %112, !dbg !48
  %114 = bitcast i32 %113 to float, !dbg !48
  %115 = sitofp i32 %112 to float, !dbg !48
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i3 = icmp eq i32 %116, 0, !dbg !48
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !48
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !48
  %.08.i4 = select i1 %.not.i3, float %118, float %117, !dbg !48
  %119 = fadd float %114, -1.000000e+00, !dbg !48
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i5 = icmp eq i32 %120, 0, !dbg !48
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #4, !dbg !48
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i6 = select i1 %.not1.i5, float %122, float %121, !dbg !48
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i7 = icmp eq i32 %123, 0, !dbg !48
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %119, float 0xBFBF19B980000000) #4, !dbg !48
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %119, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i8 = select i1 %.not2.i7, float %125, float %124, !dbg !48
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i9 = icmp eq i32 %126, 0, !dbg !48
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %119, float 0x3FC1E52AA0000000) #4, !dbg !48
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %119, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i10 = select i1 %.not3.i9, float %128, float %127, !dbg !48
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i11 = icmp eq i32 %129, 0, !dbg !48
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %119, float 0xBFC55B1720000000) #4, !dbg !48
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %119, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i12 = select i1 %.not4.i11, float %131, float %130, !dbg !48
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i13 = icmp eq i32 %132, 0, !dbg !48
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %119, float 0x3FC99DA160000000) #4, !dbg !48
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %119, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i14 = select i1 %.not5.i13, float %134, float %133, !dbg !48
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i15 = icmp eq i32 %135, 0, !dbg !48
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %119, float 0xBFCFFFE440000000) #4, !dbg !48
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %119, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i16 = select i1 %.not6.i15, float %137, float %136, !dbg !48
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i17 = icmp eq i32 %138, 0, !dbg !48
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %119, float 0x3FD5554F00000000) #4, !dbg !48
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %119, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i18 = select i1 %.not7.i17, float %140, float %139, !dbg !48
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i19 = icmp eq i32 %141, 0, !dbg !48
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %119, float -5.000000e-01) #4, !dbg !48
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %119, float -5.000000e-01) #4, !dbg !48
  %.07.i20 = select i1 %.not8.i19, float %143, float %142, !dbg !48
  %144 = fmul float %119, %.07.i20, !dbg !48
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i21 = icmp eq i32 %145, 0, !dbg !48
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float %119, float %119) #4, !dbg !48
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float %119, float %119) #4, !dbg !48
  %.06.i22 = select i1 %.not9.i21, float %147, float %146, !dbg !48
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i23 = icmp eq i32 %148, 0, !dbg !48
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !48
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !48
  %.04.i24 = select i1 %.not10.i23, float %150, float %149, !dbg !48
  %151 = icmp ugt i32 %110, 2139095039, !dbg !48
  br i1 %151, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !48

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i28 = icmp eq i32 %152, 0, !dbg !48
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i29 = select i1 %.not11.i28, float %154, float %153, !dbg !48
  br label %__nv_logf.exit30, !dbg !48

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !48
  %155 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %r.i.1.i = select i1 %155, float 0xFFF0000000000000, float %r.i.0.i, !dbg !40
  %156 = bitcast i32 %32 to float, !dbg !26
  %157 = lshr i32 %5, 5, !dbg !10
  %158 = and i32 %5, 31, !dbg !10
  %159 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !48
  %r.i.1.i26 = select i1 %159, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !48
  %160 = fsub float %156, %r.i.1.i26, !dbg !49
  %161 = fsub float %r.i.1.i, %160, !dbg !50
  %162 = fmul float %48, %161, !dbg !51
  %163 = fadd float %162, 0.000000e+00, !dbg !52
  %164 = bitcast float %163 to i32, !dbg !53
  %165 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %164, i32 16, i32 31), !dbg !53
  %166 = bitcast i32 %165 to float, !dbg !53
  %167 = fadd float %163, %166, !dbg !57
  %168 = bitcast float %167 to i32, !dbg !53
  %169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %168, i32 8, i32 31), !dbg !53
  %170 = bitcast i32 %169 to float, !dbg !53
  %171 = fadd float %167, %170, !dbg !57
  %172 = bitcast float %171 to i32, !dbg !53
  %173 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 4, i32 31), !dbg !53
  %174 = bitcast i32 %173 to float, !dbg !53
  %175 = fadd float %171, %174, !dbg !57
  %176 = bitcast float %175 to i32, !dbg !53
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %176, i32 2, i32 31), !dbg !53
  %178 = bitcast i32 %177 to float, !dbg !53
  %179 = fadd float %175, %178, !dbg !57
  %180 = bitcast float %179 to i32, !dbg !53
  %181 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %180, i32 1, i32 31), !dbg !53
  %182 = bitcast i32 %181 to float, !dbg !53
  %183 = fadd float %179, %182, !dbg !57
  %184 = icmp eq i32 %158, 0, !dbg !53
  %185 = and i32 %157, 7, !dbg !53
  %186 = getelementptr float, ptr addrspace(3) @global_smem, i32 %185, !dbg !53
  %187 = bitcast float %183 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %186, <1 x i32> %187, i1 %184) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %188 = icmp slt i32 %5, 8, !dbg !53
  %189 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !53
  %190 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %189, i1 %188) #4, !dbg !53
  %191 = bitcast i32 %190 to float, !dbg !53
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %190, i32 4, i32 31), !dbg !53
  %193 = bitcast i32 %192 to float, !dbg !53
  %194 = fadd float %191, %193, !dbg !57
  %195 = bitcast float %194 to i32, !dbg !53
  %196 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %195, i32 2, i32 31), !dbg !53
  %197 = bitcast i32 %196 to float, !dbg !53
  %198 = fadd float %194, %197, !dbg !57
  %199 = bitcast float %198 to i32, !dbg !53
  %200 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %199, i32 1, i32 31), !dbg !53
  %201 = bitcast i32 %200 to float, !dbg !53
  %202 = fadd float %198, %201, !dbg !57
  %203 = and i32 %5, 7, !dbg !53
  %204 = icmp eq i32 %203, 0, !dbg !53
  %205 = and i1 %188, %204, !dbg !53
  %206 = bitcast float %202 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %189, <1 x i32> %206, i1 %205) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %207 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !53
  %208 = fmul float %207, 2.500000e-01, !dbg !59
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %209 = icmp eq i32 %6, 0, !dbg !61
  %210 = bitcast float %208 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %210, ptr addrspace(1) %0, i1 %209) #4, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py", directory: "inductor_cache/6j")
!4 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", linkageName: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 25, column: 33, scope: !7)
!11 = !DILocation(line: 33, column: 36, scope: !7)
!12 = !DILocation(line: 32, column: 34, scope: !7)
!13 = !DILocation(line: 32, column: 39, scope: !7)
!14 = !DILocation(line: 33, column: 34, scope: !7)
!15 = !DILocation(line: 33, column: 41, scope: !7)
!16 = !DILocation(line: 34, column: 38, scope: !7)
!17 = !DILocation(line: 34, column: 34, scope: !7)
!18 = !DILocation(line: 34, column: 45, scope: !7)
!19 = !DILocation(line: 35, column: 38, scope: !7)
!20 = !DILocation(line: 35, column: 34, scope: !7)
!21 = !DILocation(line: 35, column: 45, scope: !7)
!22 = !DILocation(line: 36, column: 38, scope: !7)
!23 = !DILocation(line: 36, column: 34, scope: !7)
!24 = !DILocation(line: 36, column: 45, scope: !7)
!25 = !DILocation(line: 37, column: 35, scope: !7)
!26 = !DILocation(line: 37, column: 40, scope: !7)
!27 = !DILocation(line: 38, column: 35, scope: !7)
!28 = !DILocation(line: 38, column: 42, scope: !7)
!29 = !DILocation(line: 39, column: 35, scope: !7)
!30 = !DILocation(line: 39, column: 46, scope: !7)
!31 = !DILocation(line: 40, column: 35, scope: !7)
!32 = !DILocation(line: 40, column: 46, scope: !7)
!33 = !DILocation(line: 41, column: 35, scope: !7)
!34 = !DILocation(line: 41, column: 46, scope: !7)
!35 = !DILocation(line: 42, column: 22, scope: !7)
!36 = !DILocation(line: 43, column: 22, scope: !7)
!37 = !DILocation(line: 44, column: 22, scope: !7)
!38 = !DILocation(line: 45, column: 22, scope: !7)
!39 = !DILocation(line: 47, column: 23, scope: !7)
!40 = !DILocation(line: 48, column: 28, scope: !7)
!41 = !DILocation(line: 49, column: 28, scope: !7)
!42 = !DILocation(line: 50, column: 28, scope: !7)
!43 = !DILocation(line: 51, column: 24, scope: !7)
!44 = !DILocation(line: 52, column: 28, scope: !7)
!45 = !DILocation(line: 53, column: 24, scope: !7)
!46 = !DILocation(line: 54, column: 28, scope: !7)
!47 = !DILocation(line: 55, column: 24, scope: !7)
!48 = !DILocation(line: 56, column: 28, scope: !7)
!49 = !DILocation(line: 57, column: 24, scope: !7)
!50 = !DILocation(line: 58, column: 24, scope: !7)
!51 = !DILocation(line: 59, column: 23, scope: !7)
!52 = !DILocation(line: 61, column: 25, scope: !7)
!53 = !DILocation(line: 267, column: 36, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!56 = !DILocation(line: 63, column: 27, scope: !7)
!57 = !DILocation(line: 256, column: 15, scope: !58, inlinedAt: !56)
!58 = distinct !DILexicalBlockFile(scope: !54, file: !55, discriminator: 0)
!59 = !DILocation(line: 65, column: 20, scope: !7)
!60 = !DILocation(line: 66, column: 4, scope: !7)
!61 = !DILocation(line: 67, column: 71, scope: !7)
!62 = !DILocation(line: 67, column: 4, scope: !7)
