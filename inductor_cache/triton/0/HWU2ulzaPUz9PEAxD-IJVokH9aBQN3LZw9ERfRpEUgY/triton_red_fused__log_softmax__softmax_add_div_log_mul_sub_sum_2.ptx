//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2 // -- Begin function triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2
.visible .entry triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_2,
	.param .u32 triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<64>;
	.reg .f32 	%f<116>;
	.reg .b64 	%rd<17>;
$L__func_begin0:

// %bb.0:
	.loc	1 25 33                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:25:33
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd12, [triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_1];
	and.b32  	%r2, %r1, 255;
	ld.param.u64 	%rd13, [triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_2];
	.loc	1 33 36                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:33:36
	and.b32  	%r27, %r1, 252;
	.loc	1 32 34                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:32:34
	mul.wide.u32 	%rd14, %r2, 4;
	add.s64 	%rd2, %rd12, %rd14;
	mov.b32 	%r5, 0;
	mov.pred 	%p1, -1;
	.loc	1 32 39                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:32:39
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	.loc	1 33 34                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:33:34
	mul.wide.u32 	%rd15, %r27, 4;
	add.s64 	%rd3, %rd12, %rd15;
	.loc	1 33 41                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:33:41
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f14, %r6;
	.loc	1 34 34                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:34:34
	add.s64 	%rd4, %rd3, 4;
	.loc	1 34 45                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:34:45
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r5;
	// end inline asm
	mov.b32 	%f15, %r8;
	.loc	1 35 34                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:35:34
	add.s64 	%rd5, %rd3, 8;
	.loc	1 35 45                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:35:45
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r10, %r5;
	// end inline asm
	mov.b32 	%f16, %r10;
	.loc	1 36 34                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:36:34
	add.s64 	%rd6, %rd3, 12;
	.loc	1 36 45                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:36:45
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r12, %r5;
	// end inline asm
	mov.b32 	%f17, %r12;
	.loc	1 37 35                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:37:35
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 37 40                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:37:40
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r14, %r5;
	// end inline asm
	.loc	1 38 35                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:38:35
	add.s64 	%rd8, %rd13, %rd15;
	.loc	1 38 42                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:38:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r16, %r5;
	// end inline asm
	mov.b32 	%f1, %r16;
	.loc	1 39 35                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:39:35
	add.s64 	%rd9, %rd8, 4;
	.loc	1 39 46                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:39:46
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r18, %r5;
	// end inline asm
	mov.b32 	%f2, %r18;
	.loc	1 40 35                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:40:35
	add.s64 	%rd10, %rd8, 8;
	.loc	1 40 46                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:40:46
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	@!%p1 mov.u32 %r20, %r5;
	// end inline asm
	mov.b32 	%f3, %r20;
	.loc	1 41 35                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:41:35
	add.s64 	%rd11, %rd8, 12;
	.loc	1 41 46                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:41:46
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd11 + 0 ];
	@!%p1 mov.u32 %r22, %r5;
	// end inline asm
	mov.b32 	%f4, %r22;
	.loc	1 42 22                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:42:22
	add.f32 	%f18, %f14, %f15;
	.loc	1 43 22                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:43:22
	add.f32 	%f19, %f18, %f16;
	.loc	1 44 22                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:44:22
	add.f32 	%f20, %f19, %f17;
	.loc	1 45 22                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:45:22
	mov.b32 	%r26, %f20;
	// begin inline asm
	div.full.f32 %r24, %r4, %r26;
	// end inline asm
	mov.b32 	%f5, %r24;
	.loc	1 47 23                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:47:23
	add.f32 	%f21, %f5, 0f2EDBE6FF;
	.loc	1 48 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:48:28
	setp.lt.f32 	%p21, %f21, 0f00800000;
	mul.f32 	%f22, %f21, 0f4B000000;
	selp.f32 	%f6, %f22, %f21, %p21;
	selp.f32 	%f23, 0fC1B80000, 0f00000000, %p21;
	mov.b32 	%r28, %f6;
	add.s32 	%r29, %r28, -1059760811;
	and.b32  	%r30, %r29, -8388608;
	sub.s32 	%r31, %r28, %r30;
	mov.b32 	%f24, %r31;
	cvt.rn.f32.s32 	%f25, %r30;
	mov.f32 	%f26, 0f34000000;
	fma.rn.ftz.f32 	%f27, %f25, %f26, %f23;
	add.f32 	%f28, %f24, 0fBF800000;
	mov.f32 	%f29, 0f3E1039F6;
	mov.f32 	%f30, 0fBE055027;
	fma.rn.ftz.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f33, %f31, %f28, %f32;
	mov.f32 	%f34, 0f3E0F2955;
	fma.rn.ftz.f32 	%f35, %f33, %f28, %f34;
	mov.f32 	%f36, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f37, %f35, %f28, %f36;
	mov.f32 	%f38, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f39, %f37, %f28, %f38;
	mov.f32 	%f40, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f41, %f39, %f28, %f40;
	mov.f32 	%f42, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f43, %f41, %f28, %f42;
	mov.f32 	%f44, 0fBF000000;
	fma.rn.ftz.f32 	%f45, %f43, %f28, %f44;
	mul.f32 	%f46, %f28, %f45;
	fma.rn.ftz.f32 	%f47, %f46, %f28, %f28;
	mov.f32 	%f48, 0f3F317218;
	fma.rn.ftz.f32 	%f114, %f27, %f48, %f47;
	setp.lt.u32 	%p22, %r28, 2139095040;
	mov.f32 	%f49, 0f7F800000;
	@%p22 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 28                          // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:0:28
	fma.rn.ftz.f32 	%f114, %f6, %f49, %f49;
$L__BB0_2:                              // %__nv_logf.exit
	ld.param.u64 	%rd16, [triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2_param_0];
	.loc	1 49 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:49:28
	mul.f32 	%f51, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f50, %f51;
	// end inline asm
	.loc	1 50 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:50:28
	mul.f32 	%f53, %f2, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f52, %f53;
	// end inline asm
	.loc	1 51 24                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:51:24
	add.f32 	%f58, %f50, %f52;
	.loc	1 52 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:52:28
	mul.f32 	%f55, %f3, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f54, %f55;
	// end inline asm
	.loc	1 53 24                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:53:24
	add.f32 	%f59, %f58, %f54;
	.loc	1 54 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:54:28
	mul.f32 	%f57, %f4, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f56, %f57;
	// end inline asm
	.loc	1 55 24                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:55:24
	add.f32 	%f60, %f59, %f56;
	.loc	1 56 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:56:28
	setp.lt.f32 	%p23, %f60, 0f00800000;
	mul.f32 	%f61, %f60, 0f4B000000;
	selp.f32 	%f10, %f61, %f60, %p23;
	selp.f32 	%f62, 0fC1B80000, 0f00000000, %p23;
	mov.b32 	%r32, %f10;
	add.s32 	%r33, %r32, -1059760811;
	and.b32  	%r34, %r33, -8388608;
	sub.s32 	%r35, %r32, %r34;
	mov.b32 	%f63, %r35;
	cvt.rn.f32.s32 	%f64, %r34;
	fma.rn.ftz.f32 	%f66, %f64, %f26, %f62;
	add.f32 	%f67, %f63, 0fBF800000;
	fma.rn.ftz.f32 	%f70, %f30, %f67, %f29;
	fma.rn.ftz.f32 	%f72, %f70, %f67, %f32;
	fma.rn.ftz.f32 	%f74, %f72, %f67, %f34;
	fma.rn.ftz.f32 	%f76, %f74, %f67, %f36;
	fma.rn.ftz.f32 	%f78, %f76, %f67, %f38;
	fma.rn.ftz.f32 	%f80, %f78, %f67, %f40;
	fma.rn.ftz.f32 	%f82, %f80, %f67, %f42;
	fma.rn.ftz.f32 	%f84, %f82, %f67, %f44;
	mul.f32 	%f85, %f67, %f84;
	fma.rn.ftz.f32 	%f86, %f85, %f67, %f67;
	fma.rn.ftz.f32 	%f115, %f66, %f48, %f86;
	setp.lt.u32 	%p24, %r32, 2139095040;
	@%p24 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 28                          // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:0:28
	fma.rn.ftz.f32 	%f115, %f10, %f49, %f49;
$L__BB0_4:                              // %__nv_logf.exit30
	.loc	1 48 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:48:28
	setp.eq.f32 	%p29, %f6, 0f00000000;
	selp.f32 	%f89, 0fFF800000, %f114, %p29;
	.loc	1 37 40                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:37:40
	mov.b32 	%f90, %r14;
	.loc	1 25 33                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:25:33
	and.b32  	%r43, %r1, 31;
	.loc	1 56 28                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:56:28
	setp.eq.f32 	%p30, %f10, 0f00000000;
	selp.f32 	%f91, 0fFF800000, %f115, %p30;
	.loc	1 57 24                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:57:24
	sub.f32 	%f92, %f90, %f91;
	.loc	1 58 24                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:58:24
	sub.f32 	%f93, %f89, %f92;
	.loc	1 61 25                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:61:25
	fma.rn.f32 	%f94, %f5, %f93, 0f00000000;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f94;
	shfl.sync.bfly.b32	%r45, %r44, 16, 31, -1;
	mov.b32 	%f95, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f96;
	shfl.sync.bfly.b32	%r47, %r46, 8, 31, -1;
	mov.b32 	%f97, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f98;
	shfl.sync.bfly.b32	%r49, %r48, 4, 31, -1;
	mov.b32 	%f99, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f100;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f101, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f102;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f103, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p25, %r43, 0;
	shr.u32 	%r54, %r1, 3;
	and.b32  	%r55, %r54, 28;
	mov.u32 	%r56, global_smem;
	add.s32 	%r36, %r56, %r55;
	mov.b32 	%r37, %f104;
	// begin inline asm
	@%p25 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r1, 8;
	shl.b32 	%r57, %r1, 2;
	add.s32 	%r39, %r56, %r57;
	// begin inline asm
	@%p26 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r38;
	shfl.sync.bfly.b32	%r58, %r38, 4, 31, -1;
	mov.b32 	%f106, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f105, %f106;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f107;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f108, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f107, %f108;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f109;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f110, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r63, %r1, 7;
	setp.eq.s32 	%p31, %r63, 0;
	and.pred  	%p27, %p26, %p31;
	mov.b32 	%r41, %f111;
	// begin inline asm
	@%p27 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f112, [global_smem];
$L__tmp1:
	.loc	1 65 20                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:65:20
	mul.f32 	%f113, %f112, 0f3E800000;
	.loc	1 66 4                          // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:66:4
	bar.sync 	0;
	.loc	1 67 71                         // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:67:71
	setp.eq.s32 	%p28, %r2, 0;
	mov.b32 	%r42, %f113;
	// begin inline asm
	@%p28 st.global.b32 [ %rd16 + 0 ], { %r42 };
	// end inline asm
	.loc	1 67 4                          // c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py:67:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6j/c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 209                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xca DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 106
.b8 116
.b8 113
.b8 119
.b8 104
.b8 103
.b8 122
.b8 52
.b8 107
.b8 118
.b8 113
.b8 100
.b8 98
.b8 104
.b8 110
.b8 97
.b8 111
.b8 54
.b8 101
.b8 118
.b8 112
.b8 107
.b8 109
.b8 106
.b8 104
.b8 112
.b8 113
.b8 114
.b8 105
.b8 120
.b8 112
.b8 55
.b8 113
.b8 106
.b8 52
.b8 117
.b8 102
.b8 51
.b8 121
.b8 113
.b8 99
.b8 105
.b8 106
.b8 52
.b8 117
.b8 106
.b8 102
.b8 55
.b8 115
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x43 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa6:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
