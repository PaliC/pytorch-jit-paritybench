//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_sum_15 // -- Begin function triton_red_fused_mean_sum_15
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_sum_15
.visible .entry triton_red_fused_mean_sum_15(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_sum_15_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_sum_15_param_1,
	.param .u32 triton_red_fused_mean_sum_15_param_2,
	.param .u32 triton_red_fused_mean_sum_15_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<87>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_mean_sum_15_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_mean_sum_15_param_0];
$L__tmp0:
	.loc	1 22 28                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:22:33
	shl.b32 	%r1, %r8, 6;
	.loc	1 23 44                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r9, %r2, 2;
	and.b32  	%r3, %r9, 60;
	.loc	1 23 23                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:23:23
	or.b32  	%r4, %r1, %r3;
	.loc	1 24 21                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:24:21
	setp.lt.s32 	%p5, %r4, 2048;
	.loc	1 27 19                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:27:19
	shr.s32 	%r11, %r4, 31;
	shr.u32 	%r12, %r11, 24;
	add.s32 	%r13, %r4, %r12;
	shr.s32 	%r14, %r13, 8;
	.loc	1 30 36                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:30:36
	mad.lo.s32 	%r15, %r14, 32512, %r4;
	shl.b32 	%r16, %r2, 4;
	and.b32  	%r17, %r16, 1792;
	add.s32 	%r86, %r15, %r17;
	mov.f32 	%f47, 0f00000000;
	mov.u64 	%rd12, -8;
	mov.f32 	%f48, %f47;
	mov.f32 	%f49, %f47;
	mov.f32 	%f50, %f47;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:34:34
	mul.wide.s32 	%rd8, %r86, 4;
	add.s64 	%rd6, %rd3, %rd8;
	mov.b32 	%r22, 0;
	.loc	1 34 59                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:34:59
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd6 + 0 ];
	@!%p5 mov.u32 %r18, %r22;
	@!%p5 mov.u32 %r19, %r22;
	@!%p5 mov.u32 %r20, %r22;
	@!%p5 mov.u32 %r21, %r22;
	// end inline asm
	.loc	1 35 34                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:35:34
	add.s32 	%r34, %r86, 262144;
	mul.wide.s32 	%rd9, %r34, 4;
	add.s64 	%rd7, %rd3, %rd9;
	.loc	1 35 68                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:35:68
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p5 ld.global.L1::evict_first.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd7 + 0 ];
	@!%p5 mov.u32 %r26, %r22;
	@!%p5 mov.u32 %r27, %r22;
	@!%p5 mov.u32 %r28, %r22;
	@!%p5 mov.u32 %r29, %r22;
	// end inline asm
	.loc	1 34 59                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:34:59
	mov.b32 	%f13, %r18;
	mov.b32 	%f14, %r19;
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r21;
	.loc	1 35 68                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:35:68
	mov.b32 	%f17, %r26;
	mov.b32 	%f18, %r27;
	mov.b32 	%f19, %r28;
	mov.b32 	%f20, %r29;
	.loc	1 36 22                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:36:22
	add.f32 	%f21, %f16, %f20;
	add.f32 	%f22, %f15, %f19;
	add.f32 	%f23, %f14, %f18;
	add.f32 	%f24, %f13, %f17;
	.loc	1 38 23                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:38:23
	add.f32 	%f25, %f47, %f24;
	add.f32 	%f26, %f48, %f23;
	add.f32 	%f27, %f49, %f22;
	add.f32 	%f28, %f50, %f21;
	.loc	1 39 46                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:39:46
	selp.f32 	%f50, %f28, %f50, %p5;
	selp.f32 	%f49, %f27, %f49, %p5;
	selp.f32 	%f48, %f26, %f48, %p5;
	selp.f32 	%f47, %f25, %f47, %p5;
	.loc	1 30 36                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:30:36
	add.s64 	%rd12, %rd12, 8;
	add.s32 	%r86, %r86, 2048;
	setp.lt.u64 	%p15, %rd12, 120;
	@%p15 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:23:44
	and.b32  	%r57, %r2, 63;
	.loc	1 23 23                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:23:23
	or.b32  	%r58, %r1, %r57;
	.loc	1 24 21                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:24:21
	setp.lt.s32 	%p26, %r58, 2048;
	.loc	1 23 44                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:23:44
	and.b32  	%r59, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f47;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f29, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f47, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f48;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f31, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f48, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f49;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f33, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f49, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f50;
	shfl.sync.bfly.b32	%r67, %r66, 16, 31, -1;
	mov.b32 	%f35, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f50, %f35;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r59, 0;
	bfe.u32 	%r68, %r2, 5, 2;
	shl.b32 	%r69, %r3, 2;
	or.b32  	%r70, %r69, %r68;
	shl.b32 	%r71, %r70, 2;
	mov.u32 	%r72, global_smem;
	add.s32 	%r35, %r72, %r71;
	mov.b32 	%r36, %f30;
	// begin inline asm
	@%p16 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r35, 16;
	mov.b32 	%r38, %f32;
	// begin inline asm
	@%p16 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r35, 32;
	mov.b32 	%r40, %f34;
	// begin inline asm
	@%p16 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r35, 48;
	mov.b32 	%r42, %f36;
	// begin inline asm
	@%p16 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r2, 256;
	add.s32 	%r44, %r72, %r9;
	// begin inline asm
	@%p20 ld.shared.b32 %r43, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r43;
	shfl.sync.bfly.b32	%r74, %r43, 2, 31, -1;
	mov.b32 	%f38, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f39;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f40, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r77, %r2, 3;
	setp.eq.s32 	%p27, %r77, 0;
	and.pred  	%p21, %p20, %p27;
	mov.b32 	%r46, %f41;
	// begin inline asm
	@%p21 st.shared.b32 [ %r44 + 0 ], %r46;
	// end inline asm
	add.s32 	%r48, %r44, 512;
	// begin inline asm
	@%p20 ld.shared.b32 %r47, [ %r48 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r47;
	shfl.sync.bfly.b32	%r78, %r47, 2, 31, -1;
	mov.b32 	%f43, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f44;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f45, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f46;
	// begin inline asm
	@%p21 st.shared.b32 [ %r48 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r81, %r3, 4;
	add.s32 	%r82, %r72, %r81;
	ld.shared.u32 	%r52, [%r82];
	ld.shared.u32 	%r53, [%r82+16];
	ld.shared.u32 	%r54, [%r82+32];
	ld.shared.u32 	%r55, [%r82+48];
$L__tmp2:
	.loc	1 40 28                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:40:28
	bar.sync 	0;
	add.s32 	%r51, %r72, %r69;
	mov.pred 	%p24, -1;
	// begin inline asm
	@%p24 st.shared.v4.b32 [ %r51 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r83, %r57, 2;
	add.s32 	%r84, %r72, %r83;
	ld.shared.u32 	%r56, [%r84];
	.loc	1 41 25                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:41:25
	mul.wide.s32 	%rd11, %r58, 4;
	add.s64 	%rd10, %rd4, %rd11;
	.loc	1 41 36                         // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:41:36
	and.b32  	%r85, %r2, 64;
	setp.eq.s32 	%p28, %r85, 0;
	and.pred  	%p25, %p28, %p26;
	// begin inline asm
	@%p25 st.global.b32 [ %rd10 + 0 ], { %r56 };
	// end inline asm
	.loc	1 41 4                          // cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nx/cnxcljeatq4vkqxiffx5njtd2fxn57mg5j6rk6dwpsof57di52zg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 173                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 120
.b8 99
.b8 108
.b8 106
.b8 101
.b8 97
.b8 116
.b8 113
.b8 52
.b8 118
.b8 107
.b8 113
.b8 120
.b8 105
.b8 102
.b8 102
.b8 120
.b8 53
.b8 110
.b8 106
.b8 116
.b8 100
.b8 50
.b8 102
.b8 120
.b8 110
.b8 53
.b8 55
.b8 109
.b8 103
.b8 53
.b8 106
.b8 54
.b8 114
.b8 107
.b8 54
.b8 100
.b8 119
.b8 112
.b8 115
.b8 111
.b8 102
.b8 53
.b8 55
.b8 100
.b8 105
.b8 53
.b8 50
.b8 122
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x82:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x97:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
