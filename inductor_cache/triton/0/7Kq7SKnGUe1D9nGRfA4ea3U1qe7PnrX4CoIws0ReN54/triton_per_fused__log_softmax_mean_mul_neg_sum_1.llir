; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_mean_mul_neg_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 15, !dbg !11
  %7 = shl i32 %5, 2, !dbg !12
  %8 = and i32 %7, 192, !dbg !12
  %9 = or disjoint i32 %8, %6, !dbg !13
  %10 = zext nneg i32 %9 to i64, !dbg !14
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !14
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 true) #4, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = or disjoint i32 %9, 16, !dbg !18
  %17 = zext nneg i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #4, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = or disjoint i32 %9, 32, !dbg !21
  %22 = zext nneg i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #4, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = or disjoint i32 %9, 48, !dbg !24
  %27 = zext nneg i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #4, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #4, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !29
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #4, !dbg !30
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !31
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #4, !dbg !32
  %37 = fmul float %15, 0x3FF7154760000000, !dbg !33
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #4, !dbg !33
  %39 = fmul float %20, 0x3FF7154760000000, !dbg !34
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #4, !dbg !34
  %41 = fadd float %38, %40, !dbg !35
  %42 = fmul float %25, 0x3FF7154760000000, !dbg !36
  %43 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %42) #4, !dbg !36
  %44 = fadd float %41, %43, !dbg !37
  %45 = fmul float %30, 0x3FF7154760000000, !dbg !38
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #4, !dbg !38
  %47 = fadd float %44, %46, !dbg !39
  %48 = fcmp olt float %47, 0x3810000000000000, !dbg !40
  %49 = fmul float %47, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %48, float %49, float %47, !dbg !40
  %i.i.0.i = select i1 %48, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %50 = bitcast float %.02.i to i32, !dbg !40
  %51 = add i32 %50, -1059760811, !dbg !40
  %52 = and i32 %51, -8388608, !dbg !40
  %53 = sub i32 %50, %52, !dbg !40
  %54 = bitcast i32 %53 to float, !dbg !40
  %55 = sitofp i32 %52 to float, !dbg !40
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i = icmp eq i32 %56, 0, !dbg !40
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %55, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %.08.i = select i1 %.not.i, float %58, float %57, !dbg !40
  %59 = fadd float %54, -1.000000e+00, !dbg !40
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i = icmp eq i32 %60, 0, !dbg !40
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %59, float 0x3FC2073EC0000000) #4, !dbg !40
  %62 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %59, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i = select i1 %.not1.i, float %62, float %61, !dbg !40
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i = icmp eq i32 %63, 0, !dbg !40
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %59, float 0xBFBF19B980000000) #4, !dbg !40
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %59, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i = select i1 %.not2.i, float %65, float %64, !dbg !40
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i = icmp eq i32 %66, 0, !dbg !40
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %59, float 0x3FC1E52AA0000000) #4, !dbg !40
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %59, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i = select i1 %.not3.i, float %68, float %67, !dbg !40
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i = icmp eq i32 %69, 0, !dbg !40
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %59, float 0xBFC55B1720000000) #4, !dbg !40
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %59, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i = select i1 %.not4.i, float %71, float %70, !dbg !40
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i = icmp eq i32 %72, 0, !dbg !40
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %59, float 0x3FC99DA160000000) #4, !dbg !40
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %59, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i = select i1 %.not5.i, float %74, float %73, !dbg !40
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i = icmp eq i32 %75, 0, !dbg !40
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %59, float 0xBFCFFFE440000000) #4, !dbg !40
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %59, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i = select i1 %.not6.i, float %77, float %76, !dbg !40
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i = icmp eq i32 %78, 0, !dbg !40
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %59, float 0x3FD5554F00000000) #4, !dbg !40
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %59, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i = select i1 %.not7.i, float %80, float %79, !dbg !40
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i = icmp eq i32 %81, 0, !dbg !40
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %59, float -5.000000e-01) #4, !dbg !40
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %59, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not8.i, float %83, float %82, !dbg !40
  %84 = fmul float %59, %.07.i, !dbg !40
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i = icmp eq i32 %85, 0, !dbg !40
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %84, float %59, float %59) #4, !dbg !40
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %84, float %59, float %59) #4, !dbg !40
  %.06.i = select i1 %.not9.i, float %87, float %86, !dbg !40
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i = icmp eq i32 %88, 0, !dbg !40
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %.04.i = select i1 %.not10.i, float %90, float %89, !dbg !40
  %91 = icmp ugt i32 %50, 2139095039, !dbg !40
  br i1 %91, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i = icmp eq i32 %92, 0, !dbg !40
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i = select i1 %.not11.i, float %94, float %93, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !40
  %95 = bitcast i32 %12 to float, !dbg !15
  %96 = fsub float 0.000000e+00, %95, !dbg !41
  %97 = bitcast i32 %36 to float, !dbg !32
  %98 = bitcast i32 %34 to float, !dbg !30
  %99 = bitcast i32 %32 to float, !dbg !28
  %100 = lshr i32 %5, 5, !dbg !10
  %101 = and i32 %5, 31, !dbg !10
  %102 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %r.i.1.i = select i1 %102, float 0xFFF0000000000000, float %r.i.0.i, !dbg !40
  %103 = fsub float %15, %r.i.1.i, !dbg !42
  %104 = fmul float %96, %103, !dbg !43
  %105 = fsub float 0.000000e+00, %99, !dbg !44
  %106 = fsub float %20, %r.i.1.i, !dbg !45
  %107 = fmul float %105, %106, !dbg !46
  %108 = fadd float %104, %107, !dbg !47
  %109 = fsub float 0.000000e+00, %98, !dbg !48
  %110 = fsub float %25, %r.i.1.i, !dbg !49
  %111 = fmul float %109, %110, !dbg !50
  %112 = fadd float %111, %108, !dbg !51
  %113 = fsub float 0.000000e+00, %97, !dbg !52
  %114 = fsub float %30, %r.i.1.i, !dbg !53
  %115 = fmul float %113, %114, !dbg !54
  %116 = fadd float %115, %112, !dbg !55
  %117 = bitcast float %116 to i32, !dbg !56
  %118 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %117, i32 16, i32 31), !dbg !56
  %119 = bitcast i32 %118 to float, !dbg !56
  %120 = fadd float %116, %119, !dbg !60
  %121 = bitcast float %120 to i32, !dbg !56
  %122 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %121, i32 8, i32 31), !dbg !56
  %123 = bitcast i32 %122 to float, !dbg !56
  %124 = fadd float %120, %123, !dbg !60
  %125 = bitcast float %124 to i32, !dbg !56
  %126 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %125, i32 4, i32 31), !dbg !56
  %127 = bitcast i32 %126 to float, !dbg !56
  %128 = fadd float %124, %127, !dbg !60
  %129 = bitcast float %128 to i32, !dbg !56
  %130 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %129, i32 2, i32 31), !dbg !56
  %131 = bitcast i32 %130 to float, !dbg !56
  %132 = fadd float %128, %131, !dbg !60
  %133 = bitcast float %132 to i32, !dbg !56
  %134 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %133, i32 1, i32 31), !dbg !56
  %135 = bitcast i32 %134 to float, !dbg !56
  %136 = fadd float %132, %135, !dbg !60
  %137 = icmp eq i32 %101, 0, !dbg !56
  %138 = and i32 %100, 1, !dbg !56
  %139 = getelementptr float, ptr addrspace(3) @global_smem, i32 %138, !dbg !56
  %140 = bitcast float %136 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %139, <1 x i32> %140, i1 %137) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %141 = icmp slt i32 %5, 2, !dbg !56
  %142 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !56
  %143 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %142, i1 %141) #4, !dbg !56
  %144 = bitcast i32 %143 to float, !dbg !56
  %145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %143, i32 1, i32 31), !dbg !56
  %146 = bitcast i32 %145 to float, !dbg !56
  %147 = fadd float %144, %146, !dbg !60
  %148 = and i32 %5, 1, !dbg !56
  %149 = icmp eq i32 %148, 0, !dbg !56
  %150 = and i1 %141, %149, !dbg !56
  %151 = bitcast float %147 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %142, <1 x i32> %151, i1 %150) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %152 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !56
  %153 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %152, float 6.400000e+01) #4, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %urem = and i32 %5, 63, !dbg !64
  %154 = icmp eq i32 %urem, 0, !dbg !64
  %155 = bitcast float %153 to i32, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %155, ptr addrspace(1) %0, i1 %154) #4, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cn3oequfhbvaxfj2dk6igk2i7f2kh22pohuecyqghsoywq4l6idh.py", directory: "inductor_cache/n3")
!4 = !{ptr @triton_per_fused__log_softmax_mean_mul_neg_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_mean_mul_neg_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_mean_mul_neg_sum_1", linkageName: "triton_per_fused__log_softmax_mean_mul_neg_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 29, column: 19, scope: !7)
!12 = !DILocation(line: 32, column: 38, scope: !7)
!13 = !DILocation(line: 32, column: 35, scope: !7)
!14 = !DILocation(line: 32, column: 30, scope: !7)
!15 = !DILocation(line: 32, column: 43, scope: !7)
!16 = !DILocation(line: 33, column: 30, scope: !7)
!17 = !DILocation(line: 33, column: 43, scope: !7)
!18 = !DILocation(line: 34, column: 40, scope: !7)
!19 = !DILocation(line: 34, column: 30, scope: !7)
!20 = !DILocation(line: 34, column: 48, scope: !7)
!21 = !DILocation(line: 35, column: 40, scope: !7)
!22 = !DILocation(line: 35, column: 30, scope: !7)
!23 = !DILocation(line: 35, column: 48, scope: !7)
!24 = !DILocation(line: 36, column: 41, scope: !7)
!25 = !DILocation(line: 36, column: 31, scope: !7)
!26 = !DILocation(line: 36, column: 49, scope: !7)
!27 = !DILocation(line: 37, column: 31, scope: !7)
!28 = !DILocation(line: 37, column: 49, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 49, scope: !7)
!31 = !DILocation(line: 39, column: 31, scope: !7)
!32 = !DILocation(line: 39, column: 49, scope: !7)
!33 = !DILocation(line: 41, column: 23, scope: !7)
!34 = !DILocation(line: 42, column: 23, scope: !7)
!35 = !DILocation(line: 43, column: 18, scope: !7)
!36 = !DILocation(line: 44, column: 23, scope: !7)
!37 = !DILocation(line: 45, column: 18, scope: !7)
!38 = !DILocation(line: 46, column: 24, scope: !7)
!39 = !DILocation(line: 47, column: 19, scope: !7)
!40 = !DILocation(line: 48, column: 24, scope: !7)
!41 = !DILocation(line: 40, column: 12, scope: !7)
!42 = !DILocation(line: 49, column: 19, scope: !7)
!43 = !DILocation(line: 50, column: 19, scope: !7)
!44 = !DILocation(line: 51, column: 13, scope: !7)
!45 = !DILocation(line: 52, column: 19, scope: !7)
!46 = !DILocation(line: 53, column: 20, scope: !7)
!47 = !DILocation(line: 54, column: 20, scope: !7)
!48 = !DILocation(line: 55, column: 13, scope: !7)
!49 = !DILocation(line: 56, column: 19, scope: !7)
!50 = !DILocation(line: 57, column: 20, scope: !7)
!51 = !DILocation(line: 58, column: 20, scope: !7)
!52 = !DILocation(line: 59, column: 13, scope: !7)
!53 = !DILocation(line: 60, column: 20, scope: !7)
!54 = !DILocation(line: 61, column: 20, scope: !7)
!55 = !DILocation(line: 62, column: 20, scope: !7)
!56 = !DILocation(line: 267, column: 36, scope: !57, inlinedAt: !59)
!57 = distinct !DILexicalBlockFile(scope: !7, file: !58, discriminator: 0)
!58 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!59 = !DILocation(line: 64, column: 26, scope: !7)
!60 = !DILocation(line: 256, column: 15, scope: !61, inlinedAt: !59)
!61 = distinct !DILexicalBlockFile(scope: !57, file: !58, discriminator: 0)
!62 = !DILocation(line: 66, column: 20, scope: !7)
!63 = !DILocation(line: 67, column: 4, scope: !7)
!64 = !DILocation(line: 68, column: 71, scope: !7)
!65 = !DILocation(line: 68, column: 4, scope: !7)
