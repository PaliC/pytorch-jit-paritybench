; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_add_div_gt_sigmoid_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = icmp slt i32 %5, 16, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = shl i32 %5, 4, !dbg !13
  %10 = or disjoint i32 %9, %8, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %6, i32 0, i1 %6) #2, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = fsub float 0.000000e+00, %14, !dbg !17
  %16 = fmul float %15, 0x3FF7154760000000, !dbg !21
  %17 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %16) #2, !dbg !21
  %18 = fadd float %17, 1.000000e+00, !dbg !22
  %19 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %18) #2, !dbg !23
  %20 = fcmp ogt float %19, 5.000000e-01, !dbg !24
  %narrow = select i1 %6, i1 %20, i1 false, !dbg !25
  %21 = zext i1 %narrow to i64, !dbg !25
  %22 = zext i1 %narrow to i32, !dbg !26
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 8, i32 31), !dbg !26
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 0, i32 8, i32 31), !dbg !26
  %25 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !26
  %26 = insertelement <2 x i32> %25, i32 %24, i64 1, !dbg !26
  %27 = bitcast <2 x i32> %26 to i64, !dbg !26
  %28 = add i64 %27, %21, !dbg !28
  %extelt.offset = lshr i64 %28, 32, !dbg !26
  %29 = trunc nuw i64 %extelt.offset to i32, !dbg !26
  %30 = trunc i64 %28 to i32, !dbg !26
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 4, i32 31), !dbg !26
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 4, i32 31), !dbg !26
  %33 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !26
  %34 = insertelement <2 x i32> %33, i32 %32, i64 1, !dbg !26
  %35 = bitcast <2 x i32> %34 to i64, !dbg !26
  %36 = add i64 %28, %35, !dbg !28
  %extelt.offset1 = lshr i64 %36, 32, !dbg !26
  %37 = trunc nuw i64 %extelt.offset1 to i32, !dbg !26
  %38 = trunc i64 %36 to i32, !dbg !26
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 2, i32 31), !dbg !26
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 2, i32 31), !dbg !26
  %41 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !26
  %42 = insertelement <2 x i32> %41, i32 %40, i64 1, !dbg !26
  %43 = bitcast <2 x i32> %42 to i64, !dbg !26
  %44 = add i64 %36, %43, !dbg !28
  %extelt.offset2 = lshr i64 %44, 32, !dbg !26
  %45 = trunc nuw i64 %extelt.offset2 to i32, !dbg !26
  %46 = trunc i64 %44 to i32, !dbg !26
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 1, i32 31), !dbg !26
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 1, i32 31), !dbg !26
  %49 = insertelement <2 x i32> poison, i32 %47, i64 0, !dbg !26
  %50 = insertelement <2 x i32> %49, i32 %48, i64 1, !dbg !26
  %51 = bitcast <2 x i32> %50 to i64, !dbg !26
  %52 = add i64 %44, %51, !dbg !28
  %53 = uitofp i1 %20 to float, !dbg !30
  %54 = sitofp i64 %52 to float, !dbg !31
  %55 = fadd float %54, 0x3E45798EE0000000, !dbg !32
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %53, float %55) #2, !dbg !33
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !34
  %58 = and i32 %7, 48, !dbg !35
  %59 = icmp eq i32 %58, 0, !dbg !35
  %60 = bitcast float %56 to i32, !dbg !35
  %61 = and i1 %59, %6, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %60, ptr addrspace(1) %57, i1 %61) #2, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coe6fcorqy3fglqpizr2urnk5fhc2ft3x3fdt7vhrmuclew7xusi.py", directory: "inductor_cache/oe")
!4 = !{ptr @triton_per_fused_add_div_gt_sigmoid_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_gt_sigmoid_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_gt_sigmoid_sum_0", linkageName: "triton_per_fused_add_div_gt_sigmoid_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 47, column: 30, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!20 = !DILocation(line: 32, column: 22, scope: !7)
!21 = !DILocation(line: 47, column: 29, scope: !18, inlinedAt: !20)
!22 = !DILocation(line: 47, column: 20, scope: !18, inlinedAt: !20)
!23 = !DILocation(line: 47, column: 16, scope: !18, inlinedAt: !20)
!24 = !DILocation(line: 34, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 33, scope: !7)
!26 = !DILocation(line: 267, column: 36, scope: !18, inlinedAt: !27)
!27 = !DILocation(line: 38, column: 24, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !18, file: !19, discriminator: 0)
!30 = !DILocation(line: 39, column: 19, scope: !7)
!31 = !DILocation(line: 40, column: 20, scope: !7)
!32 = !DILocation(line: 42, column: 20, scope: !7)
!33 = !DILocation(line: 43, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 25, scope: !7)
!35 = !DILocation(line: 44, column: 45, scope: !7)
!36 = !DILocation(line: 44, column: 4, scope: !7)
