; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_neg_relu_rsub_sign_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #3, !dbg !16
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %11) #3, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = fcmp ogt float %17, 0.000000e+00, !dbg !19
  %26 = fcmp ogt float %18, 0.000000e+00, !dbg !19
  %27 = zext i1 %25 to i8, !dbg !20
  %28 = zext i1 %26 to i8, !dbg !20
  %29 = fcmp olt float %17, 0.000000e+00, !dbg !21
  %30 = fcmp olt float %18, 0.000000e+00, !dbg !21
  %.neg = sext i1 %29 to i8, !dbg !22
  %.neg1 = sext i1 %30 to i8, !dbg !22
  %31 = add nsw i8 %.neg, %27, !dbg !23
  %32 = add nsw i8 %.neg1, %28, !dbg !23
  %33 = sitofp i8 %31 to float, !dbg !24
  %34 = sitofp i8 %32 to float, !dbg !24
  %35 = fcmp olt float %23, 0.000000e+00, !dbg !25
  %36 = fcmp olt float %24, 0.000000e+00, !dbg !25
  %37 = select i1 %35, float 0.000000e+00, float %23, !dbg !29
  %38 = select i1 %36, float 0.000000e+00, float %24, !dbg !29
  %39 = fsub float 0.000000e+00, %23, !dbg !30
  %40 = fsub float 0.000000e+00, %24, !dbg !30
  %41 = fcmp olt float %39, 0.000000e+00, !dbg !31
  %42 = fcmp olt float %40, 0.000000e+00, !dbg !31
  %43 = select i1 %41, float 0.000000e+00, float %39, !dbg !33
  %44 = select i1 %42, float 0.000000e+00, float %40, !dbg !33
  %45 = fadd float %37, %43, !dbg !34
  %46 = fadd float %38, %44, !dbg !34
  %47 = fmul float %45, %33, !dbg !35
  %48 = fmul float %46, %34, !dbg !35
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i = icmp eq i32 %49, 0, !dbg !36
  %50 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #3, !dbg !36
  %51 = tail call float @llvm.nvvm.fabs.f(float %47) #3, !dbg !36
  %.01.i = select i1 %.not.i, float %51, float %50, !dbg !36
  %52 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !36
  br i1 %52, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !36

__internal_fmad.exit1.i:                          ; preds = %4
  %53 = fmul float %.01.i, 0x4007154760000000, !dbg !36
  %54 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %53) #3, !dbg !36
  %55 = fadd float %54, 1.000000e+00, !dbg !36
  %56 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %55) #4, !dbg !36, !srcloc !37
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i = icmp eq i32 %57, 0, !dbg !36
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %56, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %56, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i = select i1 %.not6.i, float %59, float %58, !dbg !36
  %60 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !36
  %s.0.i = select i1 %60, float 1.000000e+00, float %.03.i, !dbg !36
  %61 = bitcast float %s.0.i to i32, !dbg !36
  %62 = bitcast float %47 to i32, !dbg !36
  %63 = and i32 %62, -2147483648, !dbg !36
  %64 = or i32 %63, %61, !dbg !36
  %65 = bitcast i32 %64 to float, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__internal_fmad.exit3.i:                          ; preds = %4
  %66 = fmul float %47, %47, !dbg !36
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i = icmp eq i32 %67, 0, !dbg !36
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %66, float 0xBFAAC795C0000000) #3, !dbg !36
  %69 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %66, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i = select i1 %.not1.i, float %69, float %68, !dbg !36
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i = icmp eq i32 %70, 0, !dbg !36
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %66, float 0x3FC10B2820000000) #3, !dbg !36
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %66, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i = select i1 %.not2.i, float %72, float %71, !dbg !36
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i = icmp eq i32 %73, 0, !dbg !36
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %66, float 0xBFD5553DA0000000) #3, !dbg !36
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %66, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i = select i1 %.not3.i, float %75, float %74, !dbg !36
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i = icmp eq i32 %76, 0, !dbg !36
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %66, float 0.000000e+00) #3, !dbg !36
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %66, float 0.000000e+00) #3, !dbg !36
  %.04.i = select i1 %.not4.i, float %78, float %77, !dbg !36
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i = icmp eq i32 %79, 0, !dbg !36
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %47, float %47) #3, !dbg !36
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %47, float %47) #3, !dbg !36
  %.02.i = select i1 %.not5.i, float %81, float %80, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %65, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !36
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i2 = icmp eq i32 %82, 0, !dbg !36
  %83 = tail call float @llvm.nvvm.fabs.ftz.f(float %48) #3, !dbg !36
  %84 = tail call float @llvm.nvvm.fabs.f(float %48) #3, !dbg !36
  %.01.i3 = select i1 %.not.i2, float %84, float %83, !dbg !36
  %85 = fcmp ult float %.01.i3, 0x3FE3333340000000, !dbg !36
  br i1 %85, label %__internal_fmad.exit3.i9, label %__internal_fmad.exit1.i4, !dbg !36

__internal_fmad.exit1.i4:                         ; preds = %__nv_tanhf.exit
  %86 = fmul float %.01.i3, 0x4007154760000000, !dbg !36
  %87 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %86) #3, !dbg !36
  %88 = fadd float %87, 1.000000e+00, !dbg !36
  %89 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %88) #4, !dbg !36, !srcloc !37
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i5 = icmp eq i32 %90, 0, !dbg !36
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %89, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i6 = select i1 %.not6.i5, float %92, float %91, !dbg !36
  %93 = fcmp oge float %.01.i3, 0x4022059680000000, !dbg !36
  %s.0.i7 = select i1 %93, float 1.000000e+00, float %.03.i6, !dbg !36
  %94 = bitcast float %s.0.i7 to i32, !dbg !36
  %95 = bitcast float %48 to i32, !dbg !36
  %96 = and i32 %95, -2147483648, !dbg !36
  %97 = or i32 %96, %94, !dbg !36
  %98 = bitcast i32 %97 to float, !dbg !36
  br label %__nv_tanhf.exit20, !dbg !36

__internal_fmad.exit3.i9:                         ; preds = %__nv_tanhf.exit
  %99 = fmul float %48, %48, !dbg !36
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i10 = icmp eq i32 %100, 0, !dbg !36
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %99, float 0xBFAAC795C0000000) #3, !dbg !36
  %102 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %99, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i11 = select i1 %.not1.i10, float %102, float %101, !dbg !36
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i12 = icmp eq i32 %103, 0, !dbg !36
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %99, float 0x3FC10B2820000000) #3, !dbg !36
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %99, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i13 = select i1 %.not2.i12, float %105, float %104, !dbg !36
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i14 = icmp eq i32 %106, 0, !dbg !36
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i13, float %99, float 0xBFD5553DA0000000) #3, !dbg !36
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i13, float %99, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i15 = select i1 %.not3.i14, float %108, float %107, !dbg !36
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i16 = icmp eq i32 %109, 0, !dbg !36
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %99, float 0.000000e+00) #3, !dbg !36
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %99, float 0.000000e+00) #3, !dbg !36
  %.04.i17 = select i1 %.not4.i16, float %111, float %110, !dbg !36
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i18 = icmp eq i32 %112, 0, !dbg !36
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i17, float %48, float %48) #3, !dbg !36
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i17, float %48, float %48) #3, !dbg !36
  %.02.i19 = select i1 %.not5.i18, float %114, float %113, !dbg !36
  br label %__nv_tanhf.exit20, !dbg !36

__nv_tanhf.exit20:                                ; preds = %__internal_fmad.exit1.i4, %__internal_fmad.exit3.i9
  %s.1.i8 = phi float [ %98, %__internal_fmad.exit1.i4 ], [ %.02.i19, %__internal_fmad.exit3.i9 ], !dbg !36
  %115 = fsub float 1.000000e+00, %s.1.i, !dbg !38
  %116 = fsub float 1.000000e+00, %s.1.i8, !dbg !38
  %117 = fmul float %115, 5.000000e-01, !dbg !39
  %118 = fmul float %116, 5.000000e-01, !dbg !39
  %119 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !40
  %120 = bitcast float %117 to i32, !dbg !41
  %121 = bitcast float %118 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %120, i32 %121, ptr addrspace(1) %119, i1 %11) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6yubw5jdeeyukawefzi6acatll6fdi2kbwxvc2i4dychjyvvyh2.py", directory: "inductor_cache/6y")
!4 = !{ptr @triton_poi_fused_add_mul_neg_relu_rsub_sign_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_neg_relu_rsub_sign_tanh_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_neg_relu_rsub_sign_tanh_0", linkageName: "triton_poi_fused_add_mul_neg_relu_rsub_sign_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 18, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 18, scope: !7)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 19, scope: !7)
!25 = !DILocation(line: 118, column: 15, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 34, column: 40, scope: !7)
!29 = !DILocation(line: 121, column: 29, scope: !26, inlinedAt: !28)
!30 = !DILocation(line: 35, column: 13, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !26, inlinedAt: !32)
!32 = !DILocation(line: 36, column: 41, scope: !7)
!33 = !DILocation(line: 121, column: 29, scope: !26, inlinedAt: !32)
!34 = !DILocation(line: 37, column: 19, scope: !7)
!35 = !DILocation(line: 38, column: 19, scope: !7)
!36 = !DILocation(line: 39, column: 27, scope: !7)
!37 = !{i32 21046}
!38 = !DILocation(line: 41, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 20, scope: !7)
!40 = !DILocation(line: 44, column: 25, scope: !7)
!41 = !DILocation(line: 44, column: 37, scope: !7)
!42 = !DILocation(line: 44, column: 4, scope: !7)
