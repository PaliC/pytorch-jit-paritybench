//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_2,
	.param .u32 triton_poi_fused_cat_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<82>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:21:33
	shl.b32 	%r42, %r1, 10;
	ld.param.u64 	%rd15, [triton_poi_fused_cat_0_param_2];
	.loc	1 22 36                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:22:36
	mov.u32 	%r43, %tid.x;
	shl.b32 	%r44, %r43, 2;
	and.b32  	%r45, %r44, 508;
	.loc	1 22 23                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:22:23
	or.b32  	%r46, %r42, %r45;
	or.b32  	%r47, %r46, 512;
	.loc	1 24 21                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:24:21
	bfe.s32 	%r48, %r1, 21, 1;
	shr.u32 	%r49, %r48, 20;
	add.s32 	%r50, %r46, %r49;
	shr.s32 	%r51, %r50, 12;
	add.s32 	%r52, %r47, %r49;
	shr.s32 	%r53, %r52, 12;
	.loc	1 24 29                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:24:29
	shr.u32 	%r54, %r51, 29;
	add.s32 	%r55, %r51, %r54;
	and.b32  	%r56, %r55, -8;
	sub.s32 	%r57, %r51, %r56;
	shr.u32 	%r58, %r53, 29;
	add.s32 	%r59, %r53, %r58;
	and.b32  	%r60, %r59, -8;
	sub.s32 	%r61, %r53, %r60;
	.loc	1 26 19                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:26:19
	shr.s32 	%r63, %r46, 31;
	shr.u32 	%r64, %r63, 17;
	add.s32 	%r65, %r46, %r64;
	shr.s32 	%r66, %r65, 15;
	shr.s32 	%r68, %r47, 31;
	shr.u32 	%r69, %r68, 17;
	add.s32 	%r70, %r47, %r69;
	shr.s32 	%r71, %r70, 15;
	.loc	1 32 18                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:32:18
	setp.lt.s32 	%p1, %r57, 4;
	setp.lt.s32 	%p6, %r61, 4;
	.loc	1 33 35                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:33:35
	and.b32  	%r72, %r65, -32768;
	sub.s32 	%r73, %r46, %r72;
	and.b32  	%r74, %r70, -32768;
	sub.s32 	%r75, %r47, %r74;
	.loc	1 33 53                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:33:53
	shl.b32 	%r76, %r66, 14;
	shl.b32 	%r77, %r71, 14;
	.loc	1 33 47                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:33:47
	add.s32 	%r78, %r76, %r73;
	add.s32 	%r79, %r77, %r75;
	.loc	1 33 30                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:33:30
	mul.wide.s32 	%rd16, %r78, 4;
	add.s64 	%rd1, %rd13, %rd16;
	mul.wide.s32 	%rd17, %r79, 4;
	add.s64 	%rd2, %rd13, %rd17;
	mov.b32 	%r6, 0;
	.loc	1 33 58                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:33:58
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 19                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:34:19
	setp.gt.s32 	%p11, %r57, 3;
	setp.gt.s32 	%p19, %r61, 3;
	.loc	1 37 32                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:37:32
	shl.b32 	%r80, %r66, 2;
	shl.b32 	%r81, %r71, 2;
	.loc	1 37 30                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:37:30
	cvt.s64.s32 	%rd18, %r80;
	cvt.s64.s32 	%rd19, %r57;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd14, %rd21;
	add.s64 	%rd3, %rd22, -16;
	cvt.s64.s32 	%rd23, %r81;
	cvt.s64.s32 	%rd24, %r61;
	add.s64 	%rd25, %rd24, %rd23;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd27, %rd14, %rd26;
	add.s64 	%rd7, %rd27, -16;
	.loc	1 37 51                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:37:51
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r20, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r22 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r22, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r24 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r24, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r26 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r26, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r28 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r28, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r30 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r30, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r32 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r32, %r6;
	// end inline asm
	.loc	1 38 33                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:38:33
	selp.b32 	%r34, %r2, %r18, %p1;
	selp.b32 	%r35, %r3, %r20, %p1;
	selp.b32 	%r36, %r4, %r22, %p1;
	selp.b32 	%r37, %r5, %r24, %p1;
	selp.b32 	%r38, %r10, %r26, %p6;
	selp.b32 	%r39, %r11, %r28, %p6;
	selp.b32 	%r40, %r12, %r30, %p6;
	selp.b32 	%r41, %r13, %r32, %p6;
	.loc	1 39 25                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:39:25
	mul.wide.s32 	%rd28, %r46, 4;
	add.s64 	%rd11, %rd15, %rd28;
	add.s64 	%rd12, %rd11, 2048;
	mov.pred 	%p27, -1;
	.loc	1 39 37                         // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:39:37
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd11 + 0 ], { %r34, %r35, %r36, %r37 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd12 + 0 ], { %r38, %r39, %r40, %r41 };
	// end inline asm
	.loc	1 39 4                          // cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py:39:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jo/cjo73e2jtqomz3msulebwbgwzdnhr557ygvejnqzjdi6ebzqv3wc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 111
.b8 55
.b8 51
.b8 101
.b8 50
.b8 106
.b8 116
.b8 113
.b8 111
.b8 109
.b8 122
.b8 51
.b8 109
.b8 115
.b8 117
.b8 108
.b8 101
.b8 98
.b8 119
.b8 98
.b8 103
.b8 119
.b8 122
.b8 100
.b8 110
.b8 104
.b8 114
.b8 53
.b8 53
.b8 55
.b8 121
.b8 103
.b8 118
.b8 101
.b8 106
.b8 110
.b8 113
.b8 122
.b8 106
.b8 100
.b8 105
.b8 54
.b8 101
.b8 98
.b8 122
.b8 113
.b8 118
.b8 51
.b8 119
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 111
.b8 0
	}
	.section	.debug_macinfo	{	}
