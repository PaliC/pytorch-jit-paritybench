//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mean_mul_pow_rsqrt_2 // -- Begin function triton_poi_fused_add_mean_mul_pow_rsqrt_2
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mean_mul_pow_rsqrt_2
.visible .entry triton_poi_fused_add_mean_mul_pow_rsqrt_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_2_param_1,
	.param .u32 triton_poi_fused_add_mean_mul_pow_rsqrt_2_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<25>;
	.reg .f32 	%f<14>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd7, [triton_poi_fused_add_mean_mul_pow_rsqrt_2_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_mean_mul_pow_rsqrt_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:21:33
	shl.b32 	%r11, %r1, 4;
	.loc	1 22 36                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 15;
	.loc	1 22 23                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:22:23
	or.b32  	%r14, %r11, %r13;
	.loc	1 23 21                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:23:21
	setp.lt.s32 	%p1, %r14, 16;
	.loc	1 25 19                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:25:19
	bfe.s32 	%r15, %r1, 27, 1;
	shr.u32 	%r16, %r15, 30;
	add.s32 	%r17, %r14, %r16;
	.loc	1 26 35                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:26:35
	add.s32 	%r18, %r14, 16;
	.loc	1 26 30                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:26:30
	mul.wide.s32 	%rd9, %r18, 4;
	add.s64 	%rd1, %rd7, %rd9;
	.loc	1 26 40                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:26:40
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 37                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:27:37
	and.b32  	%r19, %r17, -4;
	.loc	1 27 35                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:27:35
	add.s32 	%r20, %r19, 16;
	.loc	1 27 30                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:27:30
	mul.wide.s32 	%rd10, %r20, 4;
	add.s64 	%rd2, %rd7, %rd10;
	.loc	1 27 42                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:27:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 28 35                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:28:35
	add.s32 	%r21, %r19, 17;
	.loc	1 28 30                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:28:30
	mul.wide.s32 	%rd11, %r21, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 28 42                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:28:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 29 35                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:29:35
	add.s32 	%r22, %r19, 18;
	.loc	1 29 30                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:29:30
	mul.wide.s32 	%rd12, %r22, 4;
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 29 42                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:29:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 30 35                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:30:35
	add.s32 	%r23, %r19, 19;
	.loc	1 30 30                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:30:30
	mul.wide.s32 	%rd13, %r23, 4;
	add.s64 	%rd5, %rd7, %rd13;
	.loc	1 30 42                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:30:42
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 32 18                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:32:18
	mul.f32 	%f5, %f2, %f2;
	.loc	1 33 18                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:33:18
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	.loc	1 35 18                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:35:18
	fma.rn.f32 	%f7, %f3, %f3, %f6;
	.loc	1 37 19                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:37:19
	fma.rn.f32 	%f8, %f4, %f4, %f7;
	.loc	1 39 20                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:39:20
	mov.b32 	%r8, %f8;
	mov.b32 	%r9, 1082130432;
	// begin inline asm
	div.full.f32 %r7, %r8, %r9;
	// end inline asm
	mov.b32 	%f9, %r7;
	.loc	1 41 20                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:41:20
	add.f32 	%f10, %f9, 0f322BCC77;
	.loc	1 42 28                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:42:28
	rsqrt.approx.ftz.f32 	%f11, %f10;
	.loc	1 26 40                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:26:40
	mov.b32 	%f12, %r2;
	.loc	1 22 36                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:22:36
	and.b32  	%r24, %r12, 16;
	.loc	1 43 19                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:43:19
	mul.f32 	%f13, %f11, %f12;
	.loc	1 44 25                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:44:25
	mul.wide.s32 	%rd14, %r14, 4;
	add.s64 	%rd6, %rd8, %rd14;
	.loc	1 44 37                         // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:44:37
	setp.eq.s32 	%p7, %r24, 0;
	mov.b32 	%r10, %f13;
	and.pred  	%p6, %p7, %p1;
	// begin inline asm
	@%p6 st.global.b32 [ %rd6 + 0 ], { %r10 };
	// end inline asm
	.loc	1 44 4                          // cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tt/cttdpv33nlq7zr2mnhyxnlkifjx4zlxgr3rorygcgxsgirzyluk4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 116
.b8 100
.b8 112
.b8 118
.b8 51
.b8 51
.b8 110
.b8 108
.b8 113
.b8 55
.b8 122
.b8 114
.b8 50
.b8 109
.b8 110
.b8 104
.b8 121
.b8 120
.b8 110
.b8 108
.b8 107
.b8 105
.b8 102
.b8 106
.b8 120
.b8 52
.b8 122
.b8 108
.b8 120
.b8 103
.b8 114
.b8 51
.b8 114
.b8 111
.b8 114
.b8 121
.b8 103
.b8 99
.b8 103
.b8 120
.b8 115
.b8 103
.b8 105
.b8 114
.b8 122
.b8 121
.b8 108
.b8 117
.b8 107
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
