#loc = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":35:24)
#loc28 = loc(callsite(#loc1 at #loc18))
module {
  tt.func public @triton_per_fused_mean_25(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3072> : tensor<32x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<32x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<16384> : tensor<32x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1024> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc7)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.remsi %5, %cst_3 : tensor<32x1xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_3 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.muli %7, %cst_2 : tensor<1x16xi32> loc(#loc11)
    %11 = tt.broadcast %8 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc12)
    %12 = tt.broadcast %10 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<32x16xi32> loc(#loc12)
    %14 = arith.muli %9, %cst_1 : tensor<32x1xi32> loc(#loc13)
    %15 = tt.broadcast %14 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc14)
    %16 = arith.addi %13, %15 : tensor<32x16xi32> loc(#loc14)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %17, %16 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc15)
    %19 = tt.load %18 : tensor<32x16x!tt.ptr<f32>> loc(#loc16)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc18)), %arg5: f32 loc(callsite(#loc1 at #loc18))):
      %27 = arith.addf %arg4, %arg5 : f32 loc(#loc30)
      tt.reduce.return %27 : f32 loc(#loc27)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc27)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc20)
    %22 = arith.divf %21, %cst_0 : tensor<32x1xf32> loc(#loc21)
    %23 = arith.muli %9, %cst : tensor<32x1xi32> loc(#loc22)
    %24 = arith.addi %8, %23 : tensor<32x1xi32> loc(#loc23)
    %25 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.addptr %25, %24 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc24)
    tt.store %26, %22 : tensor<32x1x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":23:28)
#loc3 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":23:33)
#loc4 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":24:36)
#loc5 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":24:44)
#loc6 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":24:23)
#loc7 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":26:26)
#loc8 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":26:34)
#loc9 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":30:19)
#loc10 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":31:19)
#loc11 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:40)
#loc12 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:35)
#loc13 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:51)
#loc14 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:45)
#loc15 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:30)
#loc16 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":33:56)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":35:27)
#loc21 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":37:18)
#loc22 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":38:35)
#loc23 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":38:30)
#loc24 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":38:25)
#loc25 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":38:46)
#loc26 = loc("inductor_cache/uk/cukvssn4yeacim3vovvzarfu7doegcjo6v5t2kstkvqt7oisypzd.py":38:4)
#loc27 = loc(callsite(#loc17 at #loc18))
#loc29 = loc(callsite(#loc19 at #loc17))
#loc30 = loc(callsite(#loc29 at #loc18))
