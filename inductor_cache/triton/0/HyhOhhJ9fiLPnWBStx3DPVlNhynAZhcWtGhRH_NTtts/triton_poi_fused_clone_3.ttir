#loc = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":19:0)
module {
  tt.func public @triton_poi_fused_clone_3(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6> : tensor<128xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<128xi64> loc(#loc1)
    %cst_3 = arith.constant dense<-20> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_6 = arith.constant dense<-1> : tensor<128xi64> loc(#loc1)
    %cst_7 = arith.constant dense<true> : tensor<128xi1> loc(#loc1)
    %cst_8 = arith.constant dense<3> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<576> : tensor<128xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_11 = arith.constant dense<36> : tensor<128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<9> : tensor<128xi32> loc(#loc1)
    %cst_13 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_14 = arith.constant dense<2304> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_14 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_13 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_12 : tensor<128xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_11 : tensor<128xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_10 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_13 : tensor<128xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst_9 : tensor<128xi32> loc(#loc12)
    %12 = arith.divsi %7, %cst_8 : tensor<128xi32> loc(#loc13)
    %13 = arith.muli %12, %cst_13 : tensor<128xi32> loc(#loc14)
    %14 = arith.divsi %9, %cst_13 : tensor<128xi32> loc(#loc15)
    %15 = arith.addi %13, %14 : tensor<128xi32> loc(#loc16)
    %16 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>> loc(#loc17)
    %17 = tt.addptr %16, %15 : tensor<128x!tt.ptr<i64>>, tensor<128xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>> loc(#loc18)
    %19 = arith.remsi %7, %cst_8 : tensor<128xi32> loc(#loc19)
    %20 = arith.muli %19, %cst_13 : tensor<128xi32> loc(#loc20)
    %21 = arith.remsi %9, %cst_13 : tensor<128xi32> loc(#loc21)
    %22 = arith.addi %20, %21 : tensor<128xi32> loc(#loc22)
    %23 = tt.addptr %16, %22 : tensor<128x!tt.ptr<i64>>, tensor<128xi32> loc(#loc23)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>> loc(#loc24)
    %25 = arith.addi %18, %cst : tensor<128xi64> loc(#loc25)
    %26 = arith.cmpi slt, %18, %cst_5 : tensor<128xi64> loc(#loc26)
    %27 = arith.select %26, %25, %18 : tensor<128xi1>, tensor<128xi64> loc(#loc27)
    %28 = arith.cmpi sge, %27, %cst_5 : tensor<128xi64> loc(#loc28)
    %29 = arith.cmpi slt, %27, %cst : tensor<128xi64> loc(#loc29)
    %30 = arith.andi %28, %29 : tensor<128xi1> loc(#loc30)
    %31 = arith.xori %5, %cst_7 : tensor<128xi1> loc(#loc31)
    %32 = arith.ori %30, %31 : tensor<128xi1> loc(#loc32)
    tt.assert %32, "index out of bounds: 0 <= tmp4 < 6" : tensor<128xi1> loc(#loc33)
    %33 = arith.addi %24, %cst : tensor<128xi64> loc(#loc34)
    %34 = arith.cmpi slt, %24, %cst_5 : tensor<128xi64> loc(#loc35)
    %35 = arith.select %34, %33, %24 : tensor<128xi1>, tensor<128xi64> loc(#loc36)
    %36 = arith.cmpi sge, %35, %cst_5 : tensor<128xi64> loc(#loc37)
    %37 = arith.cmpi slt, %35, %cst : tensor<128xi64> loc(#loc38)
    %38 = arith.andi %36, %37 : tensor<128xi1> loc(#loc39)
    %39 = arith.ori %38, %31 : tensor<128xi1> loc(#loc40)
    tt.assert %39, "index out of bounds: 0 <= tmp9 < 6" : tensor<128xi1> loc(#loc41)
    %40 = arith.addi %27, %cst_6 : tensor<128xi64> loc(#loc42)
    %41 = arith.trunci %40 : tensor<128xi64> to tensor<128xi32> loc(#loc43)
    %42 = arith.extsi %41 : tensor<128xi32> to tensor<128xi64> loc(#loc44)
    %43 = arith.cmpi sge, %42, %cst_5 : tensor<128xi64> loc(#loc44)
    %44 = arith.cmpi slt, %42, %cst_4 : tensor<128xi64> loc(#loc45)
    %45 = arith.addi %35, %cst_6 : tensor<128xi64> loc(#loc46)
    %46 = arith.trunci %45 : tensor<128xi64> to tensor<128xi32> loc(#loc47)
    %47 = arith.extsi %46 : tensor<128xi32> to tensor<128xi64> loc(#loc48)
    %48 = arith.cmpi sge, %47, %cst_5 : tensor<128xi64> loc(#loc48)
    %49 = arith.cmpi slt, %47, %cst_4 : tensor<128xi64> loc(#loc49)
    %50 = arith.andi %43, %44 : tensor<128xi1> loc(#loc50)
    %51 = arith.andi %50, %48 : tensor<128xi1> loc(#loc51)
    %52 = arith.andi %51, %49 : tensor<128xi1> loc(#loc52)
    %53 = arith.addi %10, %cst_3 : tensor<128xi32> loc(#loc53)
    %54 = arith.muli %35, %cst_4 : tensor<128xi64> loc(#loc54)
    %55 = arith.extsi %53 : tensor<128xi32> to tensor<128xi64> loc(#loc55)
    %56 = arith.addi %55, %54 : tensor<128xi64> loc(#loc55)
    %57 = arith.muli %27, %cst_2 : tensor<128xi64> loc(#loc56)
    %58 = arith.addi %56, %57 : tensor<128xi64> loc(#loc57)
    %59 = arith.muli %11, %cst_1 : tensor<128xi32> loc(#loc58)
    %60 = arith.extsi %59 : tensor<128xi32> to tensor<128xi64> loc(#loc59)
    %61 = arith.addi %58, %60 : tensor<128xi64> loc(#loc59)
    %62 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc60)
    %63 = tt.addptr %62, %61 : tensor<128x!tt.ptr<f32>>, tensor<128xi64> loc(#loc60)
    %64 = arith.andi %52, %5 : tensor<128xi1> loc(#loc61)
    %65 = tt.load %63, %64, %cst_0 : tensor<128x!tt.ptr<f32>> loc(#loc62)
    %66 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc63)
    %67 = tt.addptr %66, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc63)
    tt.store %67, %65, %5 : tensor<128x!tt.ptr<f32>> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":21:28)
#loc3 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":21:33)
#loc4 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":22:36)
#loc5 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":22:23)
#loc6 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":23:21)
#loc7 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":24:21)
#loc8 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":24:26)
#loc9 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":25:21)
#loc10 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":25:27)
#loc11 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":26:19)
#loc12 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":27:19)
#loc13 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:39)
#loc14 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:33)
#loc15 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:51)
#loc16 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:45)
#loc17 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:30)
#loc18 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":29:56)
#loc19 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:39)
#loc20 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:34)
#loc21 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:52)
#loc22 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:47)
#loc23 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:30)
#loc24 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":30:58)
#loc25 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":32:18)
#loc26 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":33:18)
#loc27 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":34:32)
#loc28 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:28)
#loc29 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:44)
#loc30 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:37)
#loc31 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:52)
#loc32 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:50)
#loc33 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":35:60)
#loc34 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":36:18)
#loc35 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":37:18)
#loc36 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":38:32)
#loc37 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":39:28)
#loc38 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":39:44)
#loc39 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":39:37)
#loc40 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":39:50)
#loc41 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":39:60)
#loc42 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":40:19)
#loc43 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":41:21)
#loc44 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":43:21)
#loc45 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":45:20)
#loc46 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":46:19)
#loc47 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":47:21)
#loc48 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":48:21)
#loc49 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":49:20)
#loc50 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":50:20)
#loc51 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":51:20)
#loc52 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":52:20)
#loc53 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:39)
#loc54 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:46)
#loc55 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:44)
#loc56 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:56)
#loc57 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:53)
#loc58 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:66)
#loc59 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:63)
#loc60 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:31)
#loc61 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:79)
#loc62 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":53:71)
#loc63 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":54:25)
#loc64 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":54:37)
#loc65 = loc("inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py":54:4)
