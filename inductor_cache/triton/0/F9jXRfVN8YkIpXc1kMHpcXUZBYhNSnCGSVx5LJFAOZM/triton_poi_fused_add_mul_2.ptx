//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_2 // -- Begin function triton_poi_fused_add_mul_2
                                        // @triton_poi_fused_add_mul_2
.visible .entry triton_poi_fused_add_mul_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_2_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_2_param_4,
	.param .u32 triton_poi_fused_add_mul_2_param_5
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<38>;
	.reg .f32 	%f<38>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_add_mul_2_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused_add_mul_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:21:33
	shl.b32 	%r30, %r1, 6;
	ld.param.u64 	%rd3, [triton_poi_fused_add_mul_2_param_2];
	ld.param.u64 	%rd4, [triton_poi_fused_add_mul_2_param_3];
	.loc	1 22 36                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:22:36
	mov.u32 	%r31, %tid.x;
	shl.b32 	%r32, %r31, 1;
	ld.param.u64 	%rd13, [triton_poi_fused_add_mul_2_param_4];
	and.b32  	%r33, %r32, 62;
	.loc	1 22 23                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:22:23
	or.b32  	%r34, %r30, %r33;
	.loc	1 23 21                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:23:21
	setp.lt.s32 	%p1, %r34, 64;
	.loc	1 25 30                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:25:30
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd1, %rd12, %rd14;
	.loc	1 25 35                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:25:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	mov.pred 	%p2, -1;
	.loc	1 26 19                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:26:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r4;
	.loc	1 28 19                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:28:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r5;
	.loc	1 30 19                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:30:19
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p2 ld.global.b32 { %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 36                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:32:36
	add.s32 	%r35, %r34, 64;
	.loc	1 32 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:32:31
	mul.wide.s32 	%rd15, %r35, 4;
	add.s64 	%rd5, %rd12, %rd15;
	.loc	1 32 41                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:32:41
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v2.b32 { %r7, %r8 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r7;
	mov.b32 	%f14, %r8;
	.loc	1 33 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:33:31
	add.s64 	%rd6, %rd2, 4;
	.loc	1 33 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:33:20
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r9;
	.loc	1 35 37                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:35:37
	add.s32 	%r36, %r34, 128;
	.loc	1 35 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:35:31
	mul.wide.s32 	%rd16, %r36, 4;
	add.s64 	%rd7, %rd12, %rd16;
	.loc	1 35 42                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:35:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r10;
	mov.b32 	%f17, %r11;
	.loc	1 36 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:36:31
	add.s64 	%rd8, %rd2, 8;
	.loc	1 36 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:36:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p2 ld.global.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r12;
	.loc	1 38 37                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:38:37
	add.s32 	%r37, %r34, 192;
	.loc	1 38 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:38:31
	mul.wide.s32 	%rd17, %r37, 4;
	add.s64 	%rd9, %rd12, %rd17;
	.loc	1 38 42                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:38:42
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.v2.b32 { %r13, %r14 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r13;
	mov.b32 	%f20, %r14;
	.loc	1 39 31                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:39:31
	add.s64 	%rd10, %rd2, 12;
	.loc	1 39 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:39:20
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p2 ld.global.b32 { %r15 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r15;
	.loc	1 41 18                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:41:18
	sub.f32 	%f22, %f11, %f12;
	.loc	1 42 23                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:42:23
	mul.f32 	%f2, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	1 43 18                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:43:18
	mov.b32 	%r17, %f1;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f23, %r16;
	.loc	1 46 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:46:20
	fma.rn.f32 	%f24, %f23, %f9, 0f00000000;
	fma.rn.f32 	%f25, %f23, %f10, 0f00000000;
	.loc	1 47 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:47:20
	sub.f32 	%f26, %f15, %f12;
	.loc	1 48 24                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:48:24
	mul.f32 	%f4, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 49 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:49:20
	mov.b32 	%r20, %f3;
	// begin inline asm
	div.full.f32 %r19, %r20, %r18;
	// end inline asm
	mov.b32 	%f27, %r19;
	.loc	1 51 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:51:20
	fma.rn.f32 	%f28, %f27, %f13, %f24;
	fma.rn.f32 	%f29, %f27, %f14, %f25;
	.loc	1 52 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:52:20
	sub.f32 	%f30, %f18, %f12;
	.loc	1 53 24                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:53:24
	mul.f32 	%f6, %f30, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	.loc	1 54 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:54:20
	mov.b32 	%r23, %f5;
	// begin inline asm
	div.full.f32 %r22, %r23, %r18;
	// end inline asm
	mov.b32 	%f31, %r22;
	.loc	1 56 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:56:20
	fma.rn.f32 	%f32, %f31, %f16, %f28;
	fma.rn.f32 	%f33, %f31, %f17, %f29;
	.loc	1 57 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:57:20
	sub.f32 	%f34, %f21, %f12;
	.loc	1 58 24                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:58:24
	mul.f32 	%f8, %f34, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	1 59 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:59:20
	mov.b32 	%r26, %f7;
	// begin inline asm
	div.full.f32 %r25, %r26, %r18;
	// end inline asm
	mov.b32 	%f35, %r25;
	.loc	1 61 20                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:61:20
	fma.rn.f32 	%f36, %f35, %f19, %f32;
	fma.rn.f32 	%f37, %f35, %f20, %f33;
	.loc	1 62 25                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:62:25
	add.s64 	%rd11, %rd13, %rd14;
	.loc	1 62 37                         // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:62:37
	mov.b32 	%r28, %f36;
	mov.b32 	%r29, %f37;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 62 4                          // cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py:62:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fb/cfbzo2h27b76mduyfbx6vssh6yblqnfedqhby7r6cnvezjbwpx5x.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 98
.b8 122
.b8 111
.b8 50
.b8 104
.b8 50
.b8 55
.b8 98
.b8 55
.b8 54
.b8 109
.b8 100
.b8 117
.b8 121
.b8 102
.b8 98
.b8 120
.b8 54
.b8 118
.b8 115
.b8 115
.b8 104
.b8 54
.b8 121
.b8 98
.b8 108
.b8 113
.b8 110
.b8 102
.b8 101
.b8 100
.b8 113
.b8 104
.b8 98
.b8 121
.b8 55
.b8 114
.b8 54
.b8 99
.b8 110
.b8 118
.b8 101
.b8 122
.b8 106
.b8 98
.b8 119
.b8 112
.b8 120
.b8 53
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
