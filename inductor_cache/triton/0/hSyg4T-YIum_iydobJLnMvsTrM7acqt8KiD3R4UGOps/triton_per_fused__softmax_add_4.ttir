#loc = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0)
#loc1 = loc(unknown)
#loc33 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":43:39)
#loc43 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":48:26)
#loc50 = loc(callsite(#loc1 at #loc33))
#loc56 = loc(callsite(#loc1 at #loc43))
module {
  tt.func public @triton_per_fused__softmax_add_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<225> : tensor<32x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<32x64xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<32x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<true> : tensor<32x1xi1> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_4 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.muli %5, %cst_4 : tensor<32x1xi32> loc(#loc11)
    %11 = tt.broadcast %8 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc12)
    %12 = tt.broadcast %10 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<32x64xi32> loc(#loc12)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc13)
    %16 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc14)
    %17 = tt.load %15, %16, %cst_3 : tensor<32x64x!tt.ptr<f32>> loc(#loc14)
    %18 = arith.muli %9, %cst_4 : tensor<32x1xi32> loc(#loc15)
    %19 = tt.broadcast %18 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc16)
    %20 = arith.addi %11, %19 : tensor<32x64xi32> loc(#loc16)
    %21 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<32x64x!tt.ptr<i64>> loc(#loc17)
    %22 = tt.addptr %21, %20 : tensor<32x64x!tt.ptr<i64>>, tensor<32x64xi32> loc(#loc17)
    %23 = tt.load %22, %16, %cst_0 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<i64>> loc(#loc18)
    %24 = arith.addi %23, %cst : tensor<32x64xi64> loc(#loc19)
    %25 = arith.cmpi slt, %23, %cst_0 : tensor<32x64xi64> loc(#loc20)
    %26 = arith.select %25, %24, %23 : tensor<32x64xi1>, tensor<32x64xi64> loc(#loc21)
    %27 = arith.cmpi sge, %26, %cst_0 : tensor<32x64xi64> loc(#loc22)
    %28 = arith.cmpi slt, %26, %cst : tensor<32x64xi64> loc(#loc23)
    %29 = arith.andi %27, %28 : tensor<32x64xi1> loc(#loc24)
    %30 = arith.xori %6, %cst_2 : tensor<32x1xi1> loc(#loc25)
    %31 = tt.broadcast %30 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc26)
    %32 = arith.ori %29, %31 : tensor<32x64xi1> loc(#loc26)
    tt.assert %32, "index out of bounds: 0 <= tmp5 < 225" : tensor<32x64xi1> loc(#loc27)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc28)
    %34 = tt.addptr %33, %26 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi64> loc(#loc28)
    %35 = tt.load %34, %16 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<f32>> loc(#loc29)
    %36 = arith.addf %17, %35 : tensor<32x64xf32> loc(#loc30)
    %37 = arith.select %16, %36, %cst_1 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc31)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc33)), %arg6: f32 loc(callsite(#loc1 at #loc33))):
      %48 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc58)
      %49 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc59)
      %50 = arith.ori %48, %49 : i1 loc(#loc60)
      %51 = arith.select %50, %arg5, %arg6 : f32 loc(#loc61)
      tt.reduce.return %51 : f32 loc(#loc49)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc49)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc38)
    %40 = tt.broadcast %39 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc39)
    %41 = arith.subf %36, %40 : tensor<32x64xf32> loc(#loc39)
    %42 = math.exp %41 : tensor<32x64xf32> loc(#loc40)
    %43 = arith.select %16, %42, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc41)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc43)), %arg6: f32 loc(callsite(#loc1 at #loc43))):
      %48 = arith.addf %arg5, %arg6 : f32 loc(#loc62)
      tt.reduce.return %48 : f32 loc(#loc55)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc55)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc45)
    %46 = tt.broadcast %45 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc46)
    %47 = arith.divf %42, %46 : tensor<32x64xf32> loc(#loc46)
    tt.store %15, %47, %16 : tensor<32x64x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":23:28)
#loc3 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":23:33)
#loc4 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":24:36)
#loc5 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":24:44)
#loc6 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":24:23)
#loc7 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":25:21)
#loc8 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":26:26)
#loc9 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":26:34)
#loc10 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":31:19)
#loc11 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:42)
#loc12 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:39)
#loc13 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:34)
#loc14 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:47)
#loc15 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:38)
#loc16 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:35)
#loc17 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:30)
#loc18 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:43)
#loc19 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":35:18)
#loc20 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":36:18)
#loc21 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":37:32)
#loc22 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:28)
#loc23 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:44)
#loc24 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:37)
#loc25 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:54)
#loc26 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:52)
#loc27 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:62)
#loc28 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":39:30)
#loc29 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":39:37)
#loc30 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":40:18)
#loc31 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":42:34)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc38 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":43:42)
#loc39 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":44:19)
#loc40 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":45:24)
#loc41 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":47:35)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc45 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":48:29)
#loc46 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":49:20)
#loc47 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":50:48)
#loc48 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":50:4)
#loc49 = loc(callsite(#loc32 at #loc33))
#loc51 = loc(callsite(#loc34 at #loc32))
#loc52 = loc(callsite(#loc35 at #loc32))
#loc53 = loc(callsite(#loc36 at #loc32))
#loc54 = loc(callsite(#loc37 at #loc32))
#loc55 = loc(callsite(#loc42 at #loc43))
#loc57 = loc(callsite(#loc44 at #loc42))
#loc58 = loc(callsite(#loc51 at #loc33))
#loc59 = loc(callsite(#loc52 at #loc33))
#loc60 = loc(callsite(#loc53 at #loc33))
#loc61 = loc(callsite(#loc54 at #loc33))
#loc62 = loc(callsite(#loc57 at #loc43))
