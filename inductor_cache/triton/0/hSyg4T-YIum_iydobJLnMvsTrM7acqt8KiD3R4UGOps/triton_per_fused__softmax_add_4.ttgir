#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 16], warpsPerCTA = [8, 1], order = [1, 0]}>
#loc = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0)
#loc1 = loc(unknown)
#loc31 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":43:39)
#loc41 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":48:26)
#loc48 = loc(callsite(#loc1 at #loc31))
#loc54 = loc(callsite(#loc1 at #loc41))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_add_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<32x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<32x64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<32x64xi64, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<225> : tensor<32x64xi64, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32, #blocked1> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<true> : tensor<32x1xi1, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %9, %cst_4 : tensor<32x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %8, %cst_5 : tensor<32x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc7)
    %14 = arith.remsi %8, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc8)
    %15 = arith.muli %8, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc9)
    %16 = tt.broadcast %13 : tensor<1x64xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc10)
    %17 = tt.broadcast %15 : tensor<32x1xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc10)
    %18 = arith.addi %16, %17 : tensor<32x64xi32, #blocked1> loc(#loc10)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc11)
    %20 = tt.addptr %19, %18 : tensor<32x64x!tt.ptr<f32>, #blocked1>, tensor<32x64xi32, #blocked1> loc(#loc11)
    %21 = tt.broadcast %10 : tensor<32x1xi1, #blocked> -> tensor<32x64xi1, #blocked> loc(#loc12)
    %22 = tt.broadcast %11 : tensor<32x1xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc12)
    %23 = tt.load %20, %22, %cst_3 : tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc12)
    %24 = triton_gpu.convert_layout %23 : tensor<32x64xf32, #blocked1> -> tensor<32x64xf32, #blocked> loc(#loc12)
    %25 = arith.muli %14, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc13)
    %26 = tt.broadcast %25 : tensor<32x1xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc14)
    %27 = arith.addi %16, %26 : tensor<32x64xi32, #blocked1> loc(#loc14)
    %28 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<32x64x!tt.ptr<i64>, #blocked1> loc(#loc15)
    %29 = tt.addptr %28, %27 : tensor<32x64x!tt.ptr<i64>, #blocked1>, tensor<32x64xi32, #blocked1> loc(#loc15)
    %30 = tt.load %29, %22, %cst_1 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<i64>, #blocked1> loc(#loc16)
    %31 = arith.addi %30, %cst_2 : tensor<32x64xi64, #blocked1> loc(#loc17)
    %32 = arith.cmpi slt, %30, %cst_1 : tensor<32x64xi64, #blocked1> loc(#loc18)
    %33 = arith.select %32, %31, %30 : tensor<32x64xi1, #blocked1>, tensor<32x64xi64, #blocked1> loc(#loc19)
    %34 = arith.cmpi sge, %33, %cst_1 : tensor<32x64xi64, #blocked1> loc(#loc20)
    %35 = arith.cmpi slt, %33, %cst_2 : tensor<32x64xi64, #blocked1> loc(#loc21)
    %36 = arith.andi %34, %35 : tensor<32x64xi1, #blocked1> loc(#loc22)
    %37 = arith.xori %11, %cst_7 : tensor<32x1xi1, #blocked1> loc(#loc23)
    %38 = tt.broadcast %37 : tensor<32x1xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc24)
    %39 = arith.ori %36, %38 : tensor<32x64xi1, #blocked1> loc(#loc24)
    tt.assert %39, "index out of bounds: 0 <= tmp5 < 225" : tensor<32x64xi1, #blocked1> loc(#loc25)
    %40 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc26)
    %41 = tt.addptr %40, %33 : tensor<32x64x!tt.ptr<f32>, #blocked1>, tensor<32x64xi64, #blocked1> loc(#loc26)
    %42 = triton_gpu.convert_layout %41 : tensor<32x64x!tt.ptr<f32>, #blocked1> -> tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc27)
    %43 = tt.load %42, %21 evictionPolicy = evict_last : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc27)
    %44 = arith.addf %24, %43 : tensor<32x64xf32, #blocked> loc(#loc28)
    %45 = arith.select %21, %44, %cst_0 : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc29)
    %46 = "tt.reduce"(%45) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc31)), %arg6: f32 loc(callsite(#loc1 at #loc31))):
      %57 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc56)
      %58 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc57)
      %59 = arith.ori %57, %58 : i1 loc(#loc58)
      %60 = arith.select %59, %arg5, %arg6 : f32 loc(#loc59)
      tt.reduce.return %60 : f32 loc(#loc47)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc47)
    %47 = tt.expand_dims %46 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xf32, #blocked> loc(#loc36)
    %48 = tt.broadcast %47 : tensor<32x1xf32, #blocked> -> tensor<32x64xf32, #blocked> loc(#loc37)
    %49 = arith.subf %44, %48 : tensor<32x64xf32, #blocked> loc(#loc37)
    %50 = math.exp %49 : tensor<32x64xf32, #blocked> loc(#loc38)
    %51 = arith.select %21, %50, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc39)
    %52 = "tt.reduce"(%51) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc41)), %arg6: f32 loc(callsite(#loc1 at #loc41))):
      %57 = arith.addf %arg5, %arg6 : f32 loc(#loc60)
      tt.reduce.return %57 : f32 loc(#loc53)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc53)
    %53 = tt.expand_dims %52 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xf32, #blocked> loc(#loc43)
    %54 = tt.broadcast %53 : tensor<32x1xf32, #blocked> -> tensor<32x64xf32, #blocked> loc(#loc44)
    %55 = arith.divf %50, %54 : tensor<32x64xf32, #blocked> loc(#loc44)
    %56 = triton_gpu.convert_layout %55 : tensor<32x64xf32, #blocked> -> tensor<32x64xf32, #blocked1> loc(#loc45)
    tt.store %20, %56, %22 : tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":23:28)
#loc3 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":23:33)
#loc4 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":24:44)
#loc5 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":24:23)
#loc6 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":25:21)
#loc7 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":26:34)
#loc8 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":31:19)
#loc9 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:42)
#loc10 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:39)
#loc11 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:34)
#loc12 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":32:47)
#loc13 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:38)
#loc14 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:35)
#loc15 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:30)
#loc16 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":33:43)
#loc17 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":35:18)
#loc18 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":36:18)
#loc19 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":37:32)
#loc20 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:28)
#loc21 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:44)
#loc22 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:37)
#loc23 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:54)
#loc24 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:52)
#loc25 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":38:62)
#loc26 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":39:30)
#loc27 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":39:37)
#loc28 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":40:18)
#loc29 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":42:34)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc36 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":43:42)
#loc37 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":44:19)
#loc38 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":45:24)
#loc39 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":47:35)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc43 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":48:29)
#loc44 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":49:20)
#loc45 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":50:48)
#loc46 = loc("inductor_cache/h6/ch6pjrqhgnjjtynpmzrcy6ogwoo4hi37puqcxy2asems7demyxlg.py":50:4)
#loc47 = loc(callsite(#loc30 at #loc31))
#loc49 = loc(callsite(#loc32 at #loc30))
#loc50 = loc(callsite(#loc33 at #loc30))
#loc51 = loc(callsite(#loc34 at #loc30))
#loc52 = loc(callsite(#loc35 at #loc30))
#loc53 = loc(callsite(#loc40 at #loc41))
#loc55 = loc(callsite(#loc42 at #loc40))
#loc56 = loc(callsite(#loc49 at #loc31))
#loc57 = loc(callsite(#loc50 at #loc31))
#loc58 = loc(callsite(#loc51 at #loc31))
#loc59 = loc(callsite(#loc52 at #loc31))
#loc60 = loc(callsite(#loc55 at #loc41))
