#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_mul_sigmoid_silu_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2097152> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x1024xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1024xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x1024xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x1024xi32, #blocked1> loc(#loc5)
    %10 = tt.get_program_id x : i32 loc(#loc6)
    %11 = arith.cmpi slt, %10, %c512_i32 : i32 loc(#loc7)
    %12 = arith.divsi %8, %cst_1 : tensor<1x1024xi32, #blocked> loc(#loc8)
    %13 = arith.divsi %9, %cst_2 : tensor<1x1024xi32, #blocked1> loc(#loc8)
    %14 = arith.remsi %9, %cst_2 : tensor<1x1024xi32, #blocked1> loc(#loc9)
    %15 = arith.muli %8, %cst_3 : tensor<1x1024xi32, #blocked> loc(#loc10)
    %16 = tt.splat %10 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc11)
    %17 = arith.addi %16, %15 : tensor<1x1024xi32, #blocked> loc(#loc11)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc12)
    %19 = tt.addptr %18, %17 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc12)
    %20 = tt.splat %11 : i1 -> tensor<1x1024xi1, #blocked> loc(#loc13)
    %21 = tt.load %19, %20 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %22 = tt.addptr %arg2, %10 : !tt.ptr<f32>, i32 loc(#loc14)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %24 = tt.splat %11 : i1 -> tensor<1x1xi1, #blocked> loc(#loc15)
    %25 = tt.load %23, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %27 = tt.addptr %26, %17 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc16)
    %28 = tt.load %27, %20 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc17)
    %29 = tt.addptr %arg3, %10 : !tt.ptr<f32>, i32 loc(#loc18)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %31 = tt.load %30, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %32 = tt.addptr %arg4, %10 : !tt.ptr<f32>, i32 loc(#loc20)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc21)
    %34 = tt.load %33, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc21)
    %35 = tt.addptr %arg5, %10 : !tt.ptr<f32>, i32 loc(#loc22)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc23)
    %37 = tt.load %36, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc23)
    %38 = tt.addptr %arg6, %10 : !tt.ptr<f32>, i32 loc(#loc24)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %40 = tt.load %39, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %41 = tt.addptr %arg7, %10 : !tt.ptr<f32>, i32 loc(#loc26)
    %42 = tt.splat %41 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc27)
    %43 = tt.load %42, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc27)
    %44 = tt.addptr %arg8, %10 : !tt.ptr<f32>, i32 loc(#loc28)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %46 = tt.load %45, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %47 = tt.addptr %arg9, %10 : !tt.ptr<f32>, i32 loc(#loc30)
    %48 = tt.splat %47 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %49 = tt.load %48, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %50 = tt.addptr %arg10, %10 : !tt.ptr<f32>, i32 loc(#loc32)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %52 = tt.load %51, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %53 = tt.addptr %arg11, %10 : !tt.ptr<f32>, i32 loc(#loc34)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %55 = tt.load %54, %24 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %56 = arith.muli %12, %cst_3 : tensor<1x1024xi32, #blocked> loc(#loc36)
    %57 = arith.addi %16, %56 : tensor<1x1024xi32, #blocked> loc(#loc37)
    %58 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc38)
    %59 = tt.addptr %58, %57 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc38)
    %60 = tt.load %59, %20 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc39)
    %61 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc40)
    %62 = tt.addptr %61, %17 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc40)
    %63 = tt.load %62, %20 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc41)
    %64 = tt.broadcast %25 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc42)
    %65 = arith.addf %21, %64 : tensor<1x1024xf32, #blocked> loc(#loc42)
    %66 = tt.broadcast %31 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc43)
    %67 = arith.addf %28, %66 : tensor<1x1024xf32, #blocked> loc(#loc43)
    %68 = tt.broadcast %34 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc44)
    %69 = arith.subf %65, %68 : tensor<1x1024xf32, #blocked> loc(#loc44)
    %70 = arith.addf %37, %cst_4 : tensor<1x1xf32, #blocked> loc(#loc45)
    %71 = tt.extern_elementwise %70 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc46)
    %72 = arith.divf %cst_6, %71 : tensor<1x1xf32, #blocked> loc(#loc47)
    %73 = tt.broadcast %72 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc48)
    %74 = arith.mulf %69, %73 : tensor<1x1024xf32, #blocked> loc(#loc48)
    %75 = tt.broadcast %40 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc49)
    %76 = arith.mulf %74, %75 : tensor<1x1024xf32, #blocked> loc(#loc49)
    %77 = tt.broadcast %43 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc50)
    %78 = arith.addf %76, %77 : tensor<1x1024xf32, #blocked> loc(#loc50)
    %79 = tt.broadcast %46 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc51)
    %80 = arith.subf %67, %79 : tensor<1x1024xf32, #blocked> loc(#loc51)
    %81 = arith.addf %49, %cst_4 : tensor<1x1xf32, #blocked> loc(#loc52)
    %82 = tt.extern_elementwise %81 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc53)
    %83 = arith.divf %cst_6, %82 : tensor<1x1xf32, #blocked> loc(#loc54)
    %84 = tt.broadcast %83 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc55)
    %85 = arith.mulf %80, %84 : tensor<1x1024xf32, #blocked> loc(#loc55)
    %86 = tt.broadcast %52 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc56)
    %87 = arith.mulf %85, %86 : tensor<1x1024xf32, #blocked> loc(#loc56)
    %88 = tt.broadcast %55 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc57)
    %89 = arith.addf %87, %88 : tensor<1x1024xf32, #blocked> loc(#loc57)
    %90 = arith.addf %78, %89 : tensor<1x1024xf32, #blocked> loc(#loc58)
    %91 = arith.subf %cst_0, %60 : tensor<1x1024xf32, #blocked> loc(#loc79)
    %92 = math.exp %91 : tensor<1x1024xf32, #blocked> loc(#loc80)
    %93 = arith.addf %92, %cst : tensor<1x1024xf32, #blocked> loc(#loc81)
    %94 = arith.divf %cst, %93 : tensor<1x1024xf32, #blocked> loc(#loc82)
    %95 = arith.mulf %94, %63 : tensor<1x1024xf32, #blocked> loc(#loc64)
    %96 = arith.addf %90, %95 : tensor<1x1024xf32, #blocked> loc(#loc65)
    %97 = arith.subf %cst_0, %96 : tensor<1x1024xf32, #blocked> loc(#loc83)
    %98 = math.exp %97 : tensor<1x1024xf32, #blocked> loc(#loc84)
    %99 = arith.addf %98, %cst : tensor<1x1024xf32, #blocked> loc(#loc85)
    %100 = arith.divf %cst, %99 : tensor<1x1024xf32, #blocked> loc(#loc86)
    %101 = arith.mulf %96, %100 : tensor<1x1024xf32, #blocked> loc(#loc67)
    gpu.barrier loc(#loc68)
    tt.store %19, %65, %20 : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc69)
    gpu.barrier loc(#loc70)
    tt.store %27, %67, %20 : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc71)
    %102 = arith.muli %10, %c4096_i32 : i32 loc(#loc72)
    %103 = tt.splat %102 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc73)
    %104 = arith.addi %14, %103 : tensor<1x1024xi32, #blocked1> loc(#loc73)
    %105 = arith.muli %13, %cst_5 : tensor<1x1024xi32, #blocked1> loc(#loc74)
    %106 = arith.addi %104, %105 : tensor<1x1024xi32, #blocked1> loc(#loc75)
    %107 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc76)
    %108 = tt.addptr %107, %106 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc76)
    %109 = triton_gpu.convert_layout %101 : tensor<1x1024xf32, #blocked> -> tensor<1x1024xf32, #blocked1> loc(#loc77)
    %110 = tt.splat %11 : i1 -> tensor<1x1024xi1, #blocked1> loc(#loc77)
    tt.store %108, %109, %110 : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc77)
    tt.return loc(#loc78)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":22:28)
#loc3 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":22:33)
#loc4 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":23:44)
#loc5 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":23:23)
#loc6 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":25:28)
#loc7 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":27:21)
#loc8 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":30:19)
#loc9 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":31:19)
#loc10 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:43)
#loc11 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:39)
#loc12 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:34)
#loc13 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":32:48)
#loc14 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":33:30)
#loc15 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":33:35)
#loc16 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":34:34)
#loc17 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":34:48)
#loc18 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":35:30)
#loc19 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":35:35)
#loc20 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":36:30)
#loc21 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":36:35)
#loc22 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":37:30)
#loc23 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":37:35)
#loc24 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":38:31)
#loc25 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":38:36)
#loc26 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":39:31)
#loc27 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":39:36)
#loc28 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":40:31)
#loc29 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":40:36)
#loc30 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":41:31)
#loc31 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":41:36)
#loc32 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":42:31)
#loc33 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":42:36)
#loc34 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":43:31)
#loc35 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":43:36)
#loc36 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:41)
#loc37 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:37)
#loc38 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:32)
#loc39 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":44:46)
#loc40 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":45:32)
#loc41 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":45:46)
#loc42 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":46:18)
#loc43 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":47:18)
#loc44 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":48:18)
#loc45 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":50:19)
#loc46 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":51:27)
#loc47 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":53:20)
#loc48 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":56:19)
#loc49 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":57:20)
#loc50 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":58:20)
#loc51 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":59:19)
#loc52 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":60:20)
#loc53 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":61:27)
#loc54 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":62:20)
#loc55 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":64:20)
#loc56 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":65:20)
#loc57 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":66:20)
#loc58 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":67:20)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc60 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":68:23)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc64 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":69:20)
#loc65 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":70:20)
#loc66 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":71:23)
#loc67 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":72:20)
#loc68 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":73:4)
#loc69 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":74:48)
#loc70 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":75:4)
#loc71 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":76:48)
#loc72 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:35)
#loc73 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:30)
#loc74 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:48)
#loc75 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:40)
#loc76 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:25)
#loc77 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:60)
#loc78 = loc("inductor_cache/6h/c6hb5osixqfolktdv6zhzfoegxdcrbaouwjwi44j2o4uo4y7wgui.py":77:4)
#loc79 = loc(callsite(#loc59 at #loc60))
#loc80 = loc(callsite(#loc61 at #loc60))
#loc81 = loc(callsite(#loc62 at #loc60))
#loc82 = loc(callsite(#loc63 at #loc60))
#loc83 = loc(callsite(#loc59 at #loc66))
#loc84 = loc(callsite(#loc61 at #loc66))
#loc85 = loc(callsite(#loc62 at #loc66))
#loc86 = loc(callsite(#loc63 at #loc66))
