; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_mul_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = icmp slt i32 %15, 256, !dbg !14
  %17 = sdiv i32 %15, 16, !dbg !15
  %18 = srem i32 %17, 4, !dbg !16
  %19 = sext i32 %15 to i64, !dbg !17
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !17
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %16) #1, !dbg !18
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !18
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = bitcast i32 %23 to float, !dbg !18
  %26 = sext i32 %18 to i64, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %4, i64 %26, !dbg !19
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #1, !dbg !20
  %29 = bitcast i32 %28 to float, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #1, !dbg !20
  %31 = bitcast i32 %30 to float, !dbg !20
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !21
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %32, i1 %16) #1, !dbg !22
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !22
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !22
  %36 = bitcast i32 %34 to float, !dbg !22
  %37 = bitcast i32 %35 to float, !dbg !22
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !23
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %38, i1 %16) #1, !dbg !24
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !24
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !24
  %42 = bitcast i32 %40 to float, !dbg !24
  %43 = bitcast i32 %41 to float, !dbg !24
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %19, !dbg !25
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %44, i1 %16) #1, !dbg !26
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !26
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !26
  %48 = bitcast i32 %46 to float, !dbg !26
  %49 = bitcast i32 %47 to float, !dbg !26
  %50 = getelementptr float, ptr addrspace(1) %5, i64 %19, !dbg !27
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %50, i1 %16) #1, !dbg !28
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !28
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !28
  %54 = bitcast i32 %52 to float, !dbg !28
  %55 = bitcast i32 %53 to float, !dbg !28
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %6, i1 true) #1, !dbg !29
  %57 = bitcast i32 %56 to float, !dbg !29
  %58 = getelementptr i8, ptr addrspace(1) %6, i64 4, !dbg !30
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !31
  %60 = bitcast i32 %59 to float, !dbg !31
  %61 = getelementptr i8, ptr addrspace(1) %6, i64 8, !dbg !32
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !33
  %63 = bitcast i32 %62 to float, !dbg !33
  %64 = getelementptr i8, ptr addrspace(1) %6, i64 12, !dbg !34
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 true) #1, !dbg !35
  %66 = bitcast i32 %65 to float, !dbg !35
  %67 = getelementptr i8, ptr addrspace(1) %6, i64 16, !dbg !36
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 true) #1, !dbg !37
  %69 = bitcast i32 %68 to float, !dbg !37
  %70 = fadd float %24, %29, !dbg !38
  %71 = fadd float %25, %31, !dbg !38
  %72 = fadd float %29, %36, !dbg !39
  %73 = fadd float %31, %37, !dbg !39
  %74 = fadd float %29, %42, !dbg !40
  %75 = fadd float %31, %43, !dbg !40
  %76 = fadd float %29, %48, !dbg !41
  %77 = fadd float %31, %49, !dbg !41
  %78 = fmul float %54, %57, !dbg !42
  %79 = fmul float %55, %57, !dbg !42
  %80 = fmul float %70, %60, !dbg !43
  %81 = fmul float %71, %60, !dbg !43
  %82 = fadd float %78, %80, !dbg !44
  %83 = fadd float %79, %81, !dbg !44
  %84 = fmul float %72, %63, !dbg !45
  %85 = fmul float %73, %63, !dbg !45
  %86 = fadd float %82, %84, !dbg !46
  %87 = fadd float %83, %85, !dbg !46
  %88 = fmul float %74, %66, !dbg !47
  %89 = fmul float %75, %66, !dbg !47
  %90 = fadd float %86, %88, !dbg !48
  %91 = fadd float %87, %89, !dbg !48
  %92 = fmul float %76, %69, !dbg !49
  %93 = fmul float %77, %69, !dbg !49
  %94 = fadd float %90, %92, !dbg !50
  %95 = fadd float %91, %93, !dbg !50
  %96 = bitcast float %70 to i32, !dbg !51
  %97 = bitcast float %71 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %96, i32 %97, ptr addrspace(1) %20, i1 %16) #1, !dbg !51
  %98 = bitcast float %72 to i32, !dbg !52
  %99 = bitcast float %73 to i32, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %98, i32 %99, ptr addrspace(1) %32, i1 %16) #1, !dbg !52
  %100 = bitcast float %74 to i32, !dbg !53
  %101 = bitcast float %75 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %100, i32 %101, ptr addrspace(1) %38, i1 %16) #1, !dbg !53
  %102 = bitcast float %76 to i32, !dbg !54
  %103 = bitcast float %77 to i32, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %102, i32 %103, ptr addrspace(1) %44, i1 %16) #1, !dbg !54
  %104 = getelementptr float, ptr addrspace(1) %7, i64 %19, !dbg !55
  %105 = bitcast float %94 to i32, !dbg !56
  %106 = bitcast float %95 to i32, !dbg !56
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %105, i32 %106, ptr addrspace(1) %104, i1 %16) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdlbmlumnaeynjatqsoaokttkv77j2s7s4chksxy5eokauemrp7k.py", directory: "inductor_cache/dl")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_2", linkageName: "triton_poi_fused_add_convolution_mul_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 39, scope: !7)
!25 = !DILocation(line: 30, column: 34, scope: !7)
!26 = !DILocation(line: 30, column: 39, scope: !7)
!27 = !DILocation(line: 31, column: 30, scope: !7)
!28 = !DILocation(line: 31, column: 35, scope: !7)
!29 = !DILocation(line: 32, column: 20, scope: !7)
!30 = !DILocation(line: 34, column: 31, scope: !7)
!31 = !DILocation(line: 34, column: 20, scope: !7)
!32 = !DILocation(line: 36, column: 31, scope: !7)
!33 = !DILocation(line: 36, column: 20, scope: !7)
!34 = !DILocation(line: 38, column: 31, scope: !7)
!35 = !DILocation(line: 38, column: 20, scope: !7)
!36 = !DILocation(line: 40, column: 31, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 42, column: 18, scope: !7)
!39 = !DILocation(line: 43, column: 18, scope: !7)
!40 = !DILocation(line: 44, column: 18, scope: !7)
!41 = !DILocation(line: 45, column: 18, scope: !7)
!42 = !DILocation(line: 46, column: 19, scope: !7)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 49, column: 20, scope: !7)
!46 = !DILocation(line: 50, column: 20, scope: !7)
!47 = !DILocation(line: 51, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 20, scope: !7)
!49 = !DILocation(line: 53, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 55, column: 39, scope: !7)
!52 = !DILocation(line: 56, column: 39, scope: !7)
!53 = !DILocation(line: 57, column: 39, scope: !7)
!54 = !DILocation(line: 58, column: 39, scope: !7)
!55 = !DILocation(line: 59, column: 25, scope: !7)
!56 = !DILocation(line: 59, column: 37, scope: !7)
!57 = !DILocation(line: 59, column: 4, scope: !7)
