; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %6, 1, !dbg !13
  %12 = or disjoint i32 %6, 2, !dbg !13
  %13 = or disjoint i32 %6, 3, !dbg !13
  %14 = srem i32 %11, 4, !dbg !14
  %15 = srem i32 %12, 4, !dbg !14
  %16 = srem i32 %13, 4, !dbg !14
  %17 = shl nsw i32 %14, 1, !dbg !15
  %18 = shl nsw i32 %15, 1, !dbg !15
  %19 = shl nsw i32 %16, 1, !dbg !15
  %20 = shl i32 %10, 2, !dbg !16
  %21 = add i32 %17, %20, !dbg !17
  %22 = add i32 %18, %20, !dbg !17
  %23 = add i32 %19, %20, !dbg !17
  %24 = sext i32 %20 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !18
  %26 = sext i32 %21 to i64, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !18
  %28 = sext i32 %22 to i64, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !18
  %30 = sext i32 %23 to i64, !dbg !18
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !18
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !19
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !19
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !19
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !19
  %36 = or disjoint i32 %20, 1, !dbg !20
  %37 = or disjoint i32 %21, 1, !dbg !20
  %38 = or disjoint i32 %22, 1, !dbg !20
  %39 = or disjoint i32 %23, 1, !dbg !20
  %40 = sext i32 %36 to i64, !dbg !21
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !21
  %42 = sext i32 %37 to i64, !dbg !21
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !21
  %44 = sext i32 %38 to i64, !dbg !21
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !21
  %46 = sext i32 %39 to i64, !dbg !21
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !21
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !22
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !22
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !22
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !22
  %52 = or disjoint i32 %20, 8, !dbg !23
  %53 = add i32 %52, %17, !dbg !23
  %54 = add i32 %52, %18, !dbg !23
  %55 = add i32 %52, %19, !dbg !23
  %56 = sext i32 %52 to i64, !dbg !24
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !24
  %58 = sext i32 %53 to i64, !dbg !24
  %59 = getelementptr float, ptr addrspace(1) %0, i64 %58, !dbg !24
  %60 = sext i32 %54 to i64, !dbg !24
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !24
  %62 = sext i32 %55 to i64, !dbg !24
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !24
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #1, !dbg !25
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #1, !dbg !25
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !25
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !25
  %68 = or disjoint i32 %20, 9, !dbg !26
  %69 = add i32 %68, %17, !dbg !26
  %70 = add i32 %68, %18, !dbg !26
  %71 = add i32 %68, %19, !dbg !26
  %72 = sext i32 %68 to i64, !dbg !27
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !27
  %74 = sext i32 %69 to i64, !dbg !27
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !27
  %76 = sext i32 %70 to i64, !dbg !27
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !27
  %78 = sext i32 %71 to i64, !dbg !27
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !27
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 true) #1, !dbg !28
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #1, !dbg !28
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 true) #1, !dbg !28
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #1, !dbg !28
  %84 = insertelement <4 x i32> poison, i32 %32, i64 0, !dbg !19
  %85 = insertelement <4 x i32> %84, i32 %33, i64 1, !dbg !19
  %86 = insertelement <4 x i32> %85, i32 %34, i64 2, !dbg !19
  %87 = insertelement <4 x i32> %86, i32 %35, i64 3, !dbg !19
  %88 = bitcast <4 x i32> %87 to <4 x float>, !dbg !19
  %89 = insertelement <4 x i32> poison, i32 %48, i64 0, !dbg !22
  %90 = insertelement <4 x i32> %89, i32 %49, i64 1, !dbg !22
  %91 = insertelement <4 x i32> %90, i32 %50, i64 2, !dbg !22
  %92 = insertelement <4 x i32> %91, i32 %51, i64 3, !dbg !22
  %93 = bitcast <4 x i32> %92 to <4 x float>, !dbg !22
  %94 = insertelement <4 x i32> poison, i32 %64, i64 0, !dbg !25
  %95 = insertelement <4 x i32> %94, i32 %65, i64 1, !dbg !25
  %96 = insertelement <4 x i32> %95, i32 %66, i64 2, !dbg !25
  %97 = insertelement <4 x i32> %96, i32 %67, i64 3, !dbg !25
  %98 = bitcast <4 x i32> %97 to <4 x float>, !dbg !25
  %99 = insertelement <4 x i32> poison, i32 %80, i64 0, !dbg !28
  %100 = insertelement <4 x i32> %99, i32 %81, i64 1, !dbg !28
  %101 = insertelement <4 x i32> %100, i32 %82, i64 2, !dbg !28
  %102 = insertelement <4 x i32> %101, i32 %83, i64 3, !dbg !28
  %103 = bitcast <4 x i32> %102 to <4 x float>, !dbg !28
  %104 = fcmp ogt <4 x float> %93, %88, !dbg !29
  %105 = fcmp uno <4 x float> %93, zeroinitializer, !dbg !33
  %106 = or <4 x i1> %104, %105, !dbg !34
  %.v = select <4 x i1> %106, <4 x i32> %92, <4 x i32> %87, !dbg !35
  %107 = bitcast <4 x i32> %.v to <4 x float>, !dbg !35
  %108 = fcmp olt <4 x float> %107, %98, !dbg !36
  %109 = fcmp uno <4 x float> %98, zeroinitializer, !dbg !38
  %110 = or <4 x i1> %108, %109, !dbg !39
  %.v1 = select <4 x i1> %110, <4 x i32> %97, <4 x i32> %.v, !dbg !40
  %111 = bitcast <4 x i32> %.v1 to <4 x float>, !dbg !40
  %112 = fcmp olt <4 x float> %111, %103, !dbg !41
  %113 = fcmp uno <4 x float> %103, zeroinitializer, !dbg !43
  %114 = or <4 x i1> %112, %113, !dbg !44
  %115 = extractelement <4 x i1> %114, i64 0, !dbg !44
  %116 = or <4 x i1> %112, %113, !dbg !44
  %117 = extractelement <4 x i1> %116, i64 1, !dbg !44
  %118 = or <4 x i1> %112, %113, !dbg !44
  %119 = extractelement <4 x i1> %118, i64 2, !dbg !44
  %120 = or <4 x i1> %112, %113, !dbg !44
  %121 = extractelement <4 x i1> %120, i64 3, !dbg !44
  %122 = zext <4 x i1> %104 to <4 x i8>, !dbg !45
  %123 = select <4 x i1> %108, <4 x i8> splat (i8 2), <4 x i8> %122, !dbg !46
  %124 = select <4 x i1> %112, <4 x i8> splat (i8 3), <4 x i8> %123, !dbg !47
  %125 = sext i32 %10 to i64, !dbg !48
  %126 = getelementptr float, ptr addrspace(1) %1, i64 %125, !dbg !48
  %127 = extractelement <4 x i32> %.v1, i64 0, !dbg !49
  %128 = select i1 %115, i32 %80, i32 %127, !dbg !50
  %129 = extractelement <4 x i32> %.v1, i64 1, !dbg !49
  %130 = select i1 %117, i32 %81, i32 %129, !dbg !50
  %131 = extractelement <4 x i32> %.v1, i64 2, !dbg !49
  %132 = select i1 %119, i32 %82, i32 %131, !dbg !50
  %133 = extractelement <4 x i32> %.v1, i64 3, !dbg !49
  %134 = select i1 %121, i32 %83, i32 %133, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %128, i32 %130, i32 %132, i32 %134, ptr addrspace(1) %126, i1 true) #1, !dbg !49
  %135 = getelementptr i8, ptr addrspace(1) %2, i64 %125, !dbg !51
  %136 = bitcast <4 x i8> %124 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %136, ptr addrspace(1) %135, i1 true) #1, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5khs4bzp2dyynjf2hiksa7klqgzviaz3hb34y5swtqitt4qdipf.py", directory: "inductor_cache/5k")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_8", linkageName: "triton_poi_fused_max_pool2d_with_indices_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 27, column: 32, scope: !7)
!16 = !DILocation(line: 27, column: 40, scope: !7)
!17 = !DILocation(line: 27, column: 37, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 45, scope: !7)
!20 = !DILocation(line: 28, column: 41, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 49, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 49, scope: !7)
!26 = !DILocation(line: 30, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 49, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!32 = !DILocation(line: 31, column: 40, scope: !7)
!33 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !32)
!36 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !37)
!37 = !DILocation(line: 32, column: 40, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !37)
!41 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !42)
!42 = !DILocation(line: 33, column: 40, scope: !7)
!43 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !42)
!44 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !42)
!45 = !DILocation(line: 37, column: 33, scope: !7)
!46 = !DILocation(line: 40, column: 35, scope: !7)
!47 = !DILocation(line: 43, column: 35, scope: !7)
!48 = !DILocation(line: 44, column: 25, scope: !7)
!49 = !DILocation(line: 44, column: 36, scope: !7)
!50 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !42)
!51 = !DILocation(line: 45, column: 25, scope: !7)
!52 = !DILocation(line: 45, column: 37, scope: !7)
!53 = !DILocation(line: 45, column: 4, scope: !7)
