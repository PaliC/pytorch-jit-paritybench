; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %13 = sdiv i32 %.frozen, 256, !dbg !14
  %14 = mul i32 %13, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %14, !dbg !15
  %15 = icmp slt i32 %.decomposed, 128, !dbg !16
  %16 = shl nsw i32 %13, 7, !dbg !17
  %17 = add nsw i32 %16, %.decomposed, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %19, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #1, !dbg !20
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !20
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !20
  %23 = sext i32 %.decomposed to i64, !dbg !21
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !21
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %24, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #1, !dbg !22
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !22
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !22
  %28 = icmp sgt i32 %.decomposed, 127, !dbg !23
  %29 = add nsw i32 %.decomposed, -128, !dbg !24
  %30 = add nsw i32 %16, %29, !dbg !25
  %31 = sext i32 %30 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !26
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %32, i1 %28, i32 0, i1 %28, i32 0, i1 %28) #1, !dbg !27
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !27
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !27
  %36 = sext i32 %29 to i64, !dbg !28
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %36, !dbg !28
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %37, i1 %28, i32 0, i1 %28, i32 0, i1 %28) #1, !dbg !29
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !29
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !29
  %41 = insertelement <4 x i32> poison, i32 %35, i64 0, !dbg !27
  %42 = insertelement <4 x i32> %41, i32 %34, i64 1, !dbg !27
  %43 = insertelement <4 x i32> %42, i32 %22, i64 2, !dbg !27
  %44 = insertelement <4 x i32> %43, i32 %21, i64 3, !dbg !27
  %45 = bitcast <4 x i32> %44 to <4 x float>, !dbg !27
  %46 = insertelement <4 x i32> poison, i32 %40, i64 0, !dbg !29
  %47 = insertelement <4 x i32> %46, i32 %39, i64 1, !dbg !29
  %48 = insertelement <4 x i32> %47, i32 %27, i64 2, !dbg !29
  %49 = insertelement <4 x i32> %48, i32 %26, i64 3, !dbg !29
  %50 = bitcast <4 x i32> %49 to <4 x float>, !dbg !29
  %51 = fadd <4 x float> %45, %50, !dbg !30
  %52 = fcmp olt <4 x float> %51, zeroinitializer, !dbg !31
  %53 = extractelement <4 x i1> %52, i64 3, !dbg !35
  %54 = extractelement <4 x float> %51, i64 3, !dbg !35
  %55 = select i1 %53, float 0.000000e+00, float %54, !dbg !35
  %56 = extractelement <4 x i1> %52, i64 2, !dbg !35
  %57 = extractelement <4 x float> %51, i64 2, !dbg !35
  %58 = select i1 %56, float 0.000000e+00, float %57, !dbg !35
  %59 = extractelement <4 x i1> %52, i64 1, !dbg !37
  %60 = extractelement <4 x float> %51, i64 1, !dbg !37
  %61 = select i1 %59, float 0.000000e+00, float %60, !dbg !37
  %62 = extractelement <4 x i1> %52, i64 0, !dbg !37
  %63 = extractelement <4 x float> %51, i64 0, !dbg !37
  %64 = select i1 %62, float 0.000000e+00, float %63, !dbg !37
  %65 = select i1 %15, float %55, float %61, !dbg !38
  %66 = select i1 %15, float %58, float %64, !dbg !38
  %67 = sext i32 %12 to i64, !dbg !39
  %68 = getelementptr float, ptr addrspace(1) %4, i64 %67, !dbg !39
  %69 = bitcast float %65 to i32, !dbg !40
  %70 = bitcast float %66 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %70, ptr addrspace(1) %68, i1 true) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctsxzf5tn5cc5m5nz5fb47m3zq4uxzwi67nowbrgvragwdloh4km.py", directory: "inductor_cache/ts")
!4 = !{ptr @triton_poi_fused_cat_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_13, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_13", linkageName: "triton_poi_fused_cat_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 34, scope: !7)
!18 = !DILocation(line: 32, column: 40, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 46, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 39, column: 20, scope: !7)
!24 = !DILocation(line: 42, column: 50, scope: !7)
!25 = !DILocation(line: 42, column: 41, scope: !7)
!26 = !DILocation(line: 42, column: 31, scope: !7)
!27 = !DILocation(line: 42, column: 56, scope: !7)
!28 = !DILocation(line: 43, column: 31, scope: !7)
!29 = !DILocation(line: 43, column: 45, scope: !7)
!30 = !DILocation(line: 44, column: 20, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 46, column: 42, scope: !7)
!35 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !36)
!36 = !DILocation(line: 36, column: 40, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 0, scope: !7)
!39 = !DILocation(line: 50, column: 25, scope: !7)
!40 = !DILocation(line: 50, column: 37, scope: !7)
!41 = !DILocation(line: 50, column: 4, scope: !7)
