#loc = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":19:0)
#loc1 = loc(unknown)
#loc19 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":39:24)
#loc23 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":42:26)
#loc32 = loc(callsite(#loc1 at #loc19))
#loc35 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_per_fused__to_copy_add_div_lt_mul_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":19:0), %arg2: i32 loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_2 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<1x64xi32> loc(#loc7)
    %7 = arith.muli %0, %c16_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.addi %5, %8 : tensor<1x64xi32> loc(#loc9)
    %10 = arith.muli %6, %cst_1 : tensor<1x64xi32> loc(#loc10)
    %11 = arith.addi %9, %10 : tensor<1x64xi32> loc(#loc11)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %14 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc13)
    %15 = tt.load %13, %14, %cst_0 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.cmpf olt, %15, %cst_0 : tensor<1x64xf32> loc(#loc14)
    %17 = arith.uitofp %16 : tensor<1x64xi1> to tensor<1x64xf32> loc(#loc15)
    %18 = arith.mulf %15, %17 : tensor<1x64xf32> loc(#loc16)
    %19 = arith.select %14, %18, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc17)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc19)), %arg5: f32 loc(callsite(#loc1 at #loc19))):
      %29 = arith.addf %arg4, %arg5 : f32 loc(#loc36)
      tt.reduce.return %29 : f32 loc(#loc31)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc31)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %22 = arith.select %14, %17, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc22)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc23)), %arg5: f32 loc(callsite(#loc1 at #loc23))):
      %29 = arith.addf %arg4, %arg5 : f32 loc(#loc37)
      tt.reduce.return %29 : f32 loc(#loc34)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc34)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %25 = arith.addf %24, %cst : tensor<1x1xf32> loc(#loc25)
    %26 = arith.divf %21, %25 : tensor<1x1xf32> loc(#loc26)
    gpu.barrier loc(#loc27)
    %27 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc28)
    %28 = tt.splat %27 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.store %28, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":23:28)
#loc3 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":25:21)
#loc4 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":26:26)
#loc5 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":26:34)
#loc6 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":29:19)
#loc7 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":30:19)
#loc8 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:38)
#loc9 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:35)
#loc10 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:46)
#loc11 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:43)
#loc12 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:30)
#loc13 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":32:51)
#loc14 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":34:18)
#loc15 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":35:19)
#loc16 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":36:18)
#loc17 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":38:33)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc21 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":39:27)
#loc22 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":41:34)
#loc24 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":42:29)
#loc25 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":44:20)
#loc26 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":45:19)
#loc27 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":46:4)
#loc28 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":47:28)
#loc29 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":47:40)
#loc30 = loc("inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py":47:4)
#loc31 = loc(callsite(#loc18 at #loc19))
#loc33 = loc(callsite(#loc20 at #loc18))
#loc34 = loc(callsite(#loc18 at #loc23))
#loc36 = loc(callsite(#loc33 at #loc19))
#loc37 = loc(callsite(#loc33 at #loc23))
