//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_div_lt_mul_sum_0 // -- Begin function triton_per_fused__to_copy_add_div_lt_mul_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_add_div_lt_mul_sum_0
.visible .entry triton_per_fused__to_copy_add_div_lt_mul_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_1,
	.param .u32 triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_2,
	.param .u32 triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_0];
	ld.param.u64 	%rd4, [triton_per_fused__to_copy_add_div_lt_mul_sum_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	.loc	1 26 34                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:26:34
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 31;
	.loc	1 29 19                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:29:19
	and.b32  	%r22, %r20, 15;
	.loc	1 32 38                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:38
	shl.b32 	%r23, %r1, 4;
	.loc	1 32 46                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:46
	shl.b32 	%r24, %r20, 2;
	and.b32  	%r25, %r24, 192;
	.loc	1 32 35                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:35
	or.b32  	%r26, %r25, %r22;
	.loc	1 32 43                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:43
	add.s32 	%r27, %r26, %r23;
	.loc	1 32 30                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:30
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r3, 0;
	.loc	1 32 51                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:32:51
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 34 18                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:34:18
	setp.lt.f32 	%p10, %f1, 0f00000000;
	.loc	1 35 19                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:35:19
	selp.f32 	%f2, 0f3F800000, 0f00000000, %p10;
	.loc	1 36 18                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:36:18
	mul.f32 	%f3, %f1, %f2;
	.loc	1 38 33                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:38:33
	selp.f32 	%f4, %f3, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f4;
	shfl.sync.bfly.b32	%r29, %r28, 16, 31, -1;
	mov.b32 	%f5, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f6;
	shfl.sync.bfly.b32	%r31, %r30, 8, 31, -1;
	mov.b32 	%f7, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f8;
	shfl.sync.bfly.b32	%r33, %r32, 4, 31, -1;
	mov.b32 	%f9, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f10;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f11, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f12;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f13, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r21, 0;
	shr.u32 	%r38, %r20, 3;
	and.b32  	%r39, %r38, 4;
	mov.u32 	%r40, global_smem;
	add.s32 	%r4, %r40, %r39;
	mov.b32 	%r5, %f14;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r20, 2;
	add.s32 	%r7, %r40, %r24;
	// begin inline asm
	@%p4 ld.shared.b32 %r6, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r6;
	shfl.sync.bfly.b32	%r41, %r6, 1, 31, -1;
	mov.b32 	%f16, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r42, %r20, 1;
	setp.eq.b32 	%p11, %r42, 1;
	not.pred 	%p12, %p11;
	and.pred  	%p5, %p4, %p12;
	mov.b32 	%r9, %f17;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 41 34                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:41:34
	selp.f32 	%f18, %f2, 0f00000000, %p1;
	.loc	1 45 19                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:45:19
	ld.shared.u32 	%r17, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r43, %f18;
	shfl.sync.bfly.b32	%r44, %r43, 16, 31, -1;
	mov.b32 	%f19, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f20;
	shfl.sync.bfly.b32	%r46, %r45, 8, 31, -1;
	mov.b32 	%f21, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f22;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f23, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f24;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f25, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f26;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f27, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r11, %f28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r12, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r12;
	shfl.sync.bfly.b32	%r53, %r12, 1, 31, -1;
	mov.b32 	%f30, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f31;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f32, [global_smem];
$L__tmp4:
	.loc	1 44 20                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:44:20
	add.f32 	%f33, %f32, 0f358637BD;
	.loc	1 45 19                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:45:19
	mov.b32 	%r18, %f33;
	// begin inline asm
	div.full.f32 %r19, %r17, %r18;
	// end inline asm
	.loc	1 46 4                          // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:46:4
	bar.sync 	0;
	.loc	1 47 28                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:47:28
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 47 40                         // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:47:40
	and.b32  	%r54, %r20, 63;
	setp.eq.s32 	%p13, %r54, 0;
	and.pred  	%p9, %p13, %p1;
	// begin inline asm
	@%p9 st.global.b32 [ %rd2 + 0 ], { %r19 };
	// end inline asm
	.loc	1 47 4                          // cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py:47:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s6/cs6psy7cpta5s4p3aiyergpro2heioybe5evhugzwvd2o2ncbu3d.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 215                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 54
.b8 112
.b8 115
.b8 121
.b8 55
.b8 99
.b8 112
.b8 116
.b8 97
.b8 53
.b8 115
.b8 52
.b8 112
.b8 51
.b8 97
.b8 105
.b8 121
.b8 101
.b8 114
.b8 103
.b8 112
.b8 114
.b8 111
.b8 50
.b8 104
.b8 101
.b8 105
.b8 111
.b8 121
.b8 98
.b8 101
.b8 53
.b8 101
.b8 118
.b8 104
.b8 117
.b8 103
.b8 122
.b8 119
.b8 118
.b8 100
.b8 50
.b8 111
.b8 50
.b8 110
.b8 99
.b8 98
.b8 117
.b8 51
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x31 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
