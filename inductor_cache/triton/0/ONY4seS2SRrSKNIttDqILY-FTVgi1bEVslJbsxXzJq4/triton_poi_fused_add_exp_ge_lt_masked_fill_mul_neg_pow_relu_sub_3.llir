; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_relu_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %12 = shl i32 %11, 6, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 62, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = icmp slt i32 %16, 64, !dbg !14
  %18 = sext i32 %16 to i64, !dbg !15
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !15
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %17) #4, !dbg !16
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !16
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !16
  %23 = bitcast i32 %21 to float, !dbg !16
  %24 = bitcast i32 %22 to float, !dbg !16
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #4, !dbg !17
  %26 = bitcast i32 %25 to float, !dbg !17
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #4, !dbg !18
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #4, !dbg !19
  %29 = bitcast i32 %28 to float, !dbg !19
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #4, !dbg !20
  %31 = bitcast i32 %30 to float, !dbg !20
  %32 = fsub float 0.000000e+00, %29, !dbg !21
  %33 = fsub float %23, %26, !dbg !22
  %34 = fsub float %24, %26, !dbg !22
  %35 = fmul float %33, %33, !dbg !23
  %36 = fmul float %34, %34, !dbg !23
  %37 = fmul float %35, %32, !dbg !24
  %38 = fmul float %36, %32, !dbg !24
  %39 = fmul float %37, 0x3FF7154760000000, !dbg !25
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #4, !dbg !25
  %41 = fmul float %38, 0x3FF7154760000000, !dbg !25
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #4, !dbg !25
  %43 = fsub float 0.000000e+00, %31, !dbg !26
  %44 = fmul float %35, %43, !dbg !27
  %45 = fmul float %36, %43, !dbg !27
  %46 = fmul float %44, 0x3FF7154760000000, !dbg !28
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #4, !dbg !28
  %48 = fmul float %45, 0x3FF7154760000000, !dbg !28
  %49 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %48) #4, !dbg !28
  %50 = fcmp olt float %23, 0.000000e+00, !dbg !29
  %51 = fcmp olt float %24, 0.000000e+00, !dbg !29
  %52 = select i1 %50, float 0.000000e+00, float %23, !dbg !33
  %53 = select i1 %51, float 0.000000e+00, float %24, !dbg !33
  %54 = tail call float @llvm.nvvm.trunc.f(float 0x3FD99999A0000000) #4, !dbg !34
  %55 = fmul float %54, 2.000000e+00, !dbg !34
  %56 = fsub float 0x3FE99999A0000000, %55, !dbg !34
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i = icmp eq i32 %57, 0, !dbg !34
  %58 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #4, !dbg !34
  %59 = tail call float @llvm.nvvm.fabs.f(float %56) #4, !dbg !34
  %.08.i = select i1 %.not.i, float %59, float %58, !dbg !34
  %60 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !34
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not12.i = icmp eq i32 %61, 0, !dbg !34
  %62 = tail call float @llvm.nvvm.fabs.ftz.f(float %52) #4, !dbg !34
  %63 = tail call float @llvm.nvvm.fabs.f(float %52) #4, !dbg !34
  %.09.i = select i1 %.not12.i, float %63, float %62, !dbg !34
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not13.i = icmp eq i32 %64, 0, !dbg !34
  %65 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !34
  %66 = fmul float %.09.i, 0x4170000000000000, !dbg !34
  %67 = select i1 %.not13.i, i1 %65, i1 false, !dbg !34
  %.116.i = select i1 %67, float %66, float %.09.i, !dbg !34
  %expo.i.i.1.i = select i1 %67, float -1.510000e+02, float -1.270000e+02, !dbg !34
  %68 = bitcast float %.116.i to i32, !dbg !34
  %69 = and i32 %68, 8388607, !dbg !34
  %70 = or disjoint i32 %69, 1065353216, !dbg !34
  %71 = bitcast i32 %70 to float, !dbg !34
  %72 = lshr i32 %68, 23, !dbg !34
  %73 = uitofp nneg i32 %72 to float, !dbg !34
  %74 = fadd float %expo.i.i.1.i, %73, !dbg !34
  %75 = fcmp ogt float %71, 0x3FF6A09E60000000, !dbg !34
  %76 = fmul float %71, 5.000000e-01, !dbg !34
  %77 = fadd float %74, 1.000000e+00, !dbg !34
  %expo.i.i.2.i = select i1 %75, float %77, float %74, !dbg !34
  %m.i.i.0.i = select i1 %75, float %76, float %71, !dbg !34
  %78 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !34
  %79 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !34
  %80 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %79) #5, !dbg !34, !srcloc !35
  %81 = fmul float %78, 2.000000e+00, !dbg !34
  %82 = fmul float %80, %81, !dbg !34
  %83 = fmul float %82, %82, !dbg !34
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not14.i = icmp eq i32 %84, 0, !dbg !34
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %83, float 0x3F8995EC60000000) #4, !dbg !34
  %86 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %83, float 0x3F8995EC60000000) #4, !dbg !34
  %.020.i = select i1 %.not14.i, float %86, float %85, !dbg !34
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not15.i = icmp eq i32 %87, 0, !dbg !34
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %83, float 0x3FB55557A0000000) #4, !dbg !34
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %83, float 0x3FB55557A0000000) #4, !dbg !34
  %.021.i = select i1 %.not15.i, float %89, float %88, !dbg !34
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not16.i = icmp eq i32 %90, 0, !dbg !34
  %91 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %83) #4, !dbg !34
  %92 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %83) #4, !dbg !34
  %.022.i = select i1 %.not16.i, float %92, float %91, !dbg !34
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not17.i = icmp eq i32 %93, 0, !dbg !34
  %94 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %82) #4, !dbg !34
  %95 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %82) #4, !dbg !34
  %.024.i = select i1 %.not17.i, float %95, float %94, !dbg !34
  %96 = fsub float %78, %82, !dbg !34
  %97 = fmul float %96, 2.000000e+00, !dbg !34
  %98 = fneg float %82, !dbg !34
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not18.i = icmp eq i32 %99, 0, !dbg !34
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %98, float %78, float %97) #4, !dbg !34
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %98, float %78, float %97) #4, !dbg !34
  %.025.i = select i1 %.not18.i, float %101, float %100, !dbg !34
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not19.i = icmp eq i32 %102, 0, !dbg !34
  %103 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %80, float %.025.i) #4, !dbg !34
  %104 = tail call float @llvm.nvvm.mul.rn.f(float %80, float %.025.i) #4, !dbg !34
  %.026.i = select i1 %.not19.i, float %104, float %103, !dbg !34
  %105 = fadd float %82, %.024.i, !dbg !34
  %106 = fsub float %82, %105, !dbg !34
  %107 = fadd float %.024.i, %106, !dbg !34
  %108 = fadd float %.026.i, %107, !dbg !34
  %109 = fadd float %105, %108, !dbg !34
  %110 = fsub float %105, %109, !dbg !34
  %111 = fadd float %108, %110, !dbg !34
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not20.i = icmp eq i32 %112, 0, !dbg !34
  %113 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !34
  %114 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !34
  %.019.i = select i1 %.not20.i, float %114, float %113, !dbg !34
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not21.i = icmp eq i32 %115, 0, !dbg !34
  %116 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !34
  %117 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !34
  %.018.i = select i1 %.not21.i, float %117, float %116, !dbg !34
  %118 = fadd float %.019.i, %109, !dbg !34
  %119 = fsub float %.019.i, %118, !dbg !34
  %120 = fadd float %109, %119, !dbg !34
  %121 = fadd float %111, %120, !dbg !34
  %122 = fadd float %.018.i, %121, !dbg !34
  %123 = fadd float %118, %122, !dbg !34
  %124 = fsub float %118, %123, !dbg !34
  %125 = fadd float %122, %124, !dbg !34
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not22.i = icmp eq i32 %126, 0, !dbg !34
  %127 = tail call float @llvm.nvvm.fabs.ftz.f(float 0x3FE99999A0000000) #4, !dbg !34
  %128 = tail call float @llvm.nvvm.fabs.f(float 0x3FE99999A0000000) #4, !dbg !34
  %.027.i = select i1 %.not22.i, float %128, float %127, !dbg !34
  %129 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !34
  %.013.i = select i1 %129, float 0x3F199999A0000000, float 0x3FE99999A0000000, !dbg !34
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not23.i = icmp eq i32 %130, 0, !dbg !34
  %131 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %123) #4, !dbg !34
  %132 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %123) #4, !dbg !34
  %.028.i = select i1 %.not23.i, float %132, float %131, !dbg !34
  %133 = fneg float %.028.i, !dbg !34
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not24.i = icmp eq i32 %134, 0, !dbg !34
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %123, float %133) #4, !dbg !34
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %123, float %133) #4, !dbg !34
  %.029.i = select i1 %.not24.i, float %136, float %135, !dbg !34
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not25.i = icmp eq i32 %137, 0, !dbg !34
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %125, float %.029.i) #4, !dbg !34
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %125, float %.029.i) #4, !dbg !34
  %.030.i = select i1 %.not25.i, float %139, float %138, !dbg !34
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not26.i = icmp eq i32 %140, 0, !dbg !34
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %123, float %.030.i) #4, !dbg !34
  %142 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %123, float %.030.i) #4, !dbg !34
  %.031.i = select i1 %.not26.i, float %142, float %141, !dbg !34
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not27.i = icmp eq i32 %143, 0, !dbg !34
  %144 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !34
  %145 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !34
  %.032.i = select i1 %.not27.i, float %145, float %144, !dbg !34
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %148 = bitcast float %.032.i to i32, !dbg !34
  %149 = icmp eq i32 %148, 1118925336, !dbg !34
  %prod.i.145.0.i = select i1 %149, float 0x40562E42E0000000, float %.032.i, !dbg !34
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not30.i = icmp eq i32 %150, 0, !dbg !34
  %151 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !34
  %152 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !34
  %.017.i = select i1 %.not30.i, float %152, float %151, !dbg !34
  %153 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !34
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not31.i = icmp eq i32 %154, 0, !dbg !34
  %155 = tail call float @llvm.nvvm.fabs.ftz.f(float %153) #4, !dbg !34
  %156 = tail call float @llvm.nvvm.fabs.f(float %153) #4, !dbg !34
  %.023.i = select i1 %.not31.i, float %156, float %155, !dbg !34
  %157 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !34
  %158 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %153), !dbg !34
  %j.i.i.0.i = select i1 %157, float %158, float %153, !dbg !34
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not32.i = icmp eq i32 %159, 0, !dbg !34
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !34
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !34
  %.035.i = select i1 %.not32.i, float %161, float %160, !dbg !34
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not33.i = icmp eq i32 %162, 0, !dbg !34
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !34
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !34
  %.036.i = select i1 %.not33.i, float %164, float %163, !dbg !34
  %165 = fmul float %.036.i, 0x3FF7154760000000, !dbg !34
  %166 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !34
  %167 = bitcast float %166 to i32, !dbg !34
  %168 = shl i32 %167, 23, !dbg !34
  %169 = bitcast i32 %168 to float, !dbg !34
  %170 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %165) #4, !dbg !34
  %171 = fmul float %170, %169, !dbg !34
  %172 = fcmp une float %171, 0x7FF0000000000000, !dbg !34
  br i1 %172, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !34

__internal_fmad.exit.i.i:                         ; preds = %10
  %.not29.i = icmp eq i32 %147, 0, !dbg !34
  %.not28.i = icmp eq i32 %146, 0, !dbg !34
  %173 = fneg float %.032.i, !dbg !34
  %174 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %173) #4, !dbg !34
  %175 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %173) #4, !dbg !34
  %.033.i = select i1 %.not28.i, float %174, float %175, !dbg !34
  %176 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !34
  %177 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !34
  %.034.i = select i1 %.not29.i, float %176, float %177, !dbg !34
  %178 = fadd float %.034.i, 0x3EE0000000000000, !dbg !34
  %prod.i.044.0.i = select i1 %149, float %178, float %.034.i, !dbg !34
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not34.i = icmp eq i32 %179, 0, !dbg !34
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float %prod.i.044.0.i, float %171) #4, !dbg !34
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %171, float %prod.i.044.0.i, float %171) #4, !dbg !34
  %.014.i = select i1 %.not34.i, float %181, float %180, !dbg !34
  br label %__internal_accurate_powf.exit.i, !dbg !34

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %10
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %10 ], !dbg !34
  %182 = fcmp oeq float %52, 0.000000e+00, !dbg !34
  %183 = fadd float %52, %52, !dbg !34
  %184 = select i1 %60, float %183, float 0.000000e+00, !dbg !34
  %.212.i = select i1 %182, float %184, float %t.i.0.i, !dbg !34
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not35.i = icmp eq i32 %185, 0, !dbg !34
  %.01.i = select i1 %.not35.i, float %63, float %62, !dbg !34
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not36.i = icmp eq i32 %186, 0, !dbg !34
  %.02.i = select i1 %.not36.i, float %128, float %127, !dbg !34
  %187 = fadd float %.01.i, %.02.i, !dbg !34
  %188 = bitcast float %187 to i32, !dbg !34
  %189 = icmp sgt i32 %188, 2139095039, !dbg !34
  br i1 %189, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !34

__nv_isnanf.exit.i.i:                             ; preds = %__internal_accurate_powf.exit.i
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not37.i = icmp eq i32 %190, 0, !dbg !34
  %.06.i = select i1 %.not37.i, float %63, float %62, !dbg !34
  %191 = fcmp uno float %.06.i, 0.000000e+00, !dbg !34
  br i1 %191, label %194, label %__nv_isnanf.exit11.i.i, !dbg !34

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not38.i = icmp eq i32 %192, 0, !dbg !34
  %.07.i = select i1 %.not38.i, float %128, float %127, !dbg !34
  %193 = fcmp uno float %.07.i, 0.000000e+00, !dbg !34
  br i1 %193, label %194, label %__nv_isinff.exit8.i.i, !dbg !34

194:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %195 = fadd float %52, 0x3FE99999A0000000, !dbg !34
  br label %__nv_powf.exit, !dbg !34

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not39.i = icmp eq i32 %196, 0, !dbg !34
  %.05.i = select i1 %.not39.i, float %128, float %127, !dbg !34
  %197 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !34
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not41.i = icmp eq i32 %198, 0, !dbg !34
  %.04.i = select i1 %.not41.i, float %63, float %62, !dbg !34
  br i1 %197, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !34

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %199 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !34
  %200 = select i1 %199, float 0x7FF0000000000000, float 0.000000e+00, !dbg !34
  br label %__nv_powf.exit, !dbg !34

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %201 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !34
  br i1 %201, label %202, label %__nv_powf.exit, !dbg !34

202:                                              ; preds = %__nv_isinff.exit.i.i
  br label %__nv_powf.exit, !dbg !34

__nv_powf.exit:                                   ; preds = %__internal_accurate_powf.exit.i, %194, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %202
  %.3.i = phi float [ %.212.i, %__internal_accurate_powf.exit.i ], [ %195, %194 ], [ %200, %__nv_fabsf.exit5.i.i ], [ 0x7FF0000000000000, %202 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !34
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not.i1 = icmp eq i32 %203, 0, !dbg !34
  %.08.i2 = select i1 %.not.i1, float %59, float %58, !dbg !34
  %204 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !34
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not12.i3 = icmp eq i32 %205, 0, !dbg !34
  %206 = tail call float @llvm.nvvm.fabs.ftz.f(float %53) #4, !dbg !34
  %207 = tail call float @llvm.nvvm.fabs.f(float %53) #4, !dbg !34
  %.09.i4 = select i1 %.not12.i3, float %207, float %206, !dbg !34
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not13.i5 = icmp eq i32 %208, 0, !dbg !34
  %209 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !34
  %210 = fmul float %.09.i4, 0x4170000000000000, !dbg !34
  %211 = select i1 %.not13.i5, i1 %209, i1 false, !dbg !34
  %.116.i8 = select i1 %211, float %210, float %.09.i4, !dbg !34
  %expo.i.i.1.i9 = select i1 %211, float -1.510000e+02, float -1.270000e+02, !dbg !34
  %212 = bitcast float %.116.i8 to i32, !dbg !34
  %213 = and i32 %212, 8388607, !dbg !34
  %214 = or disjoint i32 %213, 1065353216, !dbg !34
  %215 = bitcast i32 %214 to float, !dbg !34
  %216 = lshr i32 %212, 23, !dbg !34
  %217 = uitofp nneg i32 %216 to float, !dbg !34
  %218 = fadd float %expo.i.i.1.i9, %217, !dbg !34
  %219 = fcmp ogt float %215, 0x3FF6A09E60000000, !dbg !34
  %220 = fmul float %215, 5.000000e-01, !dbg !34
  %221 = fadd float %218, 1.000000e+00, !dbg !34
  %expo.i.i.2.i10 = select i1 %219, float %221, float %218, !dbg !34
  %m.i.i.0.i11 = select i1 %219, float %220, float %215, !dbg !34
  %222 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !34
  %223 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !34
  %224 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %223) #5, !dbg !34, !srcloc !35
  %225 = fmul float %222, 2.000000e+00, !dbg !34
  %226 = fmul float %224, %225, !dbg !34
  %227 = fmul float %226, %226, !dbg !34
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not14.i12 = icmp eq i32 %228, 0, !dbg !34
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %227, float 0x3F8995EC60000000) #4, !dbg !34
  %230 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %227, float 0x3F8995EC60000000) #4, !dbg !34
  %.020.i13 = select i1 %.not14.i12, float %230, float %229, !dbg !34
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not15.i14 = icmp eq i32 %231, 0, !dbg !34
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %227, float 0x3FB55557A0000000) #4, !dbg !34
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %227, float 0x3FB55557A0000000) #4, !dbg !34
  %.021.i15 = select i1 %.not15.i14, float %233, float %232, !dbg !34
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not16.i16 = icmp eq i32 %234, 0, !dbg !34
  %235 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %227) #4, !dbg !34
  %236 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %227) #4, !dbg !34
  %.022.i17 = select i1 %.not16.i16, float %236, float %235, !dbg !34
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not17.i18 = icmp eq i32 %237, 0, !dbg !34
  %238 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %226) #4, !dbg !34
  %239 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %226) #4, !dbg !34
  %.024.i19 = select i1 %.not17.i18, float %239, float %238, !dbg !34
  %240 = fsub float %222, %226, !dbg !34
  %241 = fmul float %240, 2.000000e+00, !dbg !34
  %242 = fneg float %226, !dbg !34
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not18.i20 = icmp eq i32 %243, 0, !dbg !34
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %242, float %222, float %241) #4, !dbg !34
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %242, float %222, float %241) #4, !dbg !34
  %.025.i21 = select i1 %.not18.i20, float %245, float %244, !dbg !34
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not19.i22 = icmp eq i32 %246, 0, !dbg !34
  %247 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %224, float %.025.i21) #4, !dbg !34
  %248 = tail call float @llvm.nvvm.mul.rn.f(float %224, float %.025.i21) #4, !dbg !34
  %.026.i23 = select i1 %.not19.i22, float %248, float %247, !dbg !34
  %249 = fadd float %226, %.024.i19, !dbg !34
  %250 = fsub float %226, %249, !dbg !34
  %251 = fadd float %.024.i19, %250, !dbg !34
  %252 = fadd float %.026.i23, %251, !dbg !34
  %253 = fadd float %249, %252, !dbg !34
  %254 = fsub float %249, %253, !dbg !34
  %255 = fadd float %252, %254, !dbg !34
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not20.i24 = icmp eq i32 %256, 0, !dbg !34
  %257 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !34
  %258 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #4, !dbg !34
  %.019.i25 = select i1 %.not20.i24, float %258, float %257, !dbg !34
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not21.i26 = icmp eq i32 %259, 0, !dbg !34
  %260 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !34
  %261 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #4, !dbg !34
  %.018.i27 = select i1 %.not21.i26, float %261, float %260, !dbg !34
  %262 = fadd float %.019.i25, %253, !dbg !34
  %263 = fsub float %.019.i25, %262, !dbg !34
  %264 = fadd float %253, %263, !dbg !34
  %265 = fadd float %255, %264, !dbg !34
  %266 = fadd float %.018.i27, %265, !dbg !34
  %267 = fadd float %262, %266, !dbg !34
  %268 = fsub float %262, %267, !dbg !34
  %269 = fadd float %266, %268, !dbg !34
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not22.i28 = icmp eq i32 %270, 0, !dbg !34
  %.027.i29 = select i1 %.not22.i28, float %128, float %127, !dbg !34
  %271 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !34
  %.013.i30 = select i1 %271, float 0x3F199999A0000000, float 0x3FE99999A0000000, !dbg !34
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not23.i31 = icmp eq i32 %272, 0, !dbg !34
  %273 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %267) #4, !dbg !34
  %274 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %267) #4, !dbg !34
  %.028.i32 = select i1 %.not23.i31, float %274, float %273, !dbg !34
  %275 = fneg float %.028.i32, !dbg !34
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not24.i33 = icmp eq i32 %276, 0, !dbg !34
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %267, float %275) #4, !dbg !34
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %267, float %275) #4, !dbg !34
  %.029.i34 = select i1 %.not24.i33, float %278, float %277, !dbg !34
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not25.i35 = icmp eq i32 %279, 0, !dbg !34
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %269, float %.029.i34) #4, !dbg !34
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %269, float %.029.i34) #4, !dbg !34
  %.030.i36 = select i1 %.not25.i35, float %281, float %280, !dbg !34
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not26.i37 = icmp eq i32 %282, 0, !dbg !34
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %267, float %.030.i36) #4, !dbg !34
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %267, float %.030.i36) #4, !dbg !34
  %.031.i38 = select i1 %.not26.i37, float %284, float %283, !dbg !34
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not27.i39 = icmp eq i32 %285, 0, !dbg !34
  %286 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #4, !dbg !34
  %287 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #4, !dbg !34
  %.032.i40 = select i1 %.not27.i39, float %287, float %286, !dbg !34
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %290 = bitcast float %.032.i40 to i32, !dbg !34
  %291 = icmp eq i32 %290, 1118925336, !dbg !34
  %prod.i.145.0.i46 = select i1 %291, float 0x40562E42E0000000, float %.032.i40, !dbg !34
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not30.i47 = icmp eq i32 %292, 0, !dbg !34
  %293 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !34
  %294 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #4, !dbg !34
  %.017.i48 = select i1 %.not30.i47, float %294, float %293, !dbg !34
  %295 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #4, !dbg !34
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not31.i49 = icmp eq i32 %296, 0, !dbg !34
  %297 = tail call float @llvm.nvvm.fabs.ftz.f(float %295) #4, !dbg !34
  %298 = tail call float @llvm.nvvm.fabs.f(float %295) #4, !dbg !34
  %.023.i50 = select i1 %.not31.i49, float %298, float %297, !dbg !34
  %299 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !34
  %300 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %295), !dbg !34
  %j.i.i.0.i51 = select i1 %299, float %300, float %295, !dbg !34
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not32.i52 = icmp eq i32 %301, 0, !dbg !34
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !34
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #4, !dbg !34
  %.035.i53 = select i1 %.not32.i52, float %303, float %302, !dbg !34
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not33.i54 = icmp eq i32 %304, 0, !dbg !34
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !34
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #4, !dbg !34
  %.036.i55 = select i1 %.not33.i54, float %306, float %305, !dbg !34
  %307 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !34
  %308 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !34
  %309 = bitcast float %308 to i32, !dbg !34
  %310 = shl i32 %309, 23, !dbg !34
  %311 = bitcast i32 %310 to float, !dbg !34
  %312 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %307) #4, !dbg !34
  %313 = fmul float %312, %311, !dbg !34
  %314 = fcmp une float %313, 0x7FF0000000000000, !dbg !34
  br i1 %314, label %__internal_fmad.exit.i.i81, label %__internal_accurate_powf.exit.i56, !dbg !34

__internal_fmad.exit.i.i81:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %289, 0, !dbg !34
  %.not28.i41 = icmp eq i32 %288, 0, !dbg !34
  %315 = fneg float %.032.i40, !dbg !34
  %316 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %315) #4, !dbg !34
  %317 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %315) #4, !dbg !34
  %.033.i42 = select i1 %.not28.i41, float %316, float %317, !dbg !34
  %318 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #4, !dbg !34
  %319 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #4, !dbg !34
  %.034.i44 = select i1 %.not29.i43, float %318, float %319, !dbg !34
  %320 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !34
  %prod.i.044.0.i45 = select i1 %291, float %320, float %.034.i44, !dbg !34
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not34.i82 = icmp eq i32 %321, 0, !dbg !34
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %313, float %prod.i.044.0.i45, float %313) #4, !dbg !34
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %313, float %prod.i.044.0.i45, float %313) #4, !dbg !34
  %.014.i83 = select i1 %.not34.i82, float %323, float %322, !dbg !34
  br label %__internal_accurate_powf.exit.i56, !dbg !34

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i81, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i83, %__internal_fmad.exit.i.i81 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !34
  %324 = fcmp oeq float %53, 0.000000e+00, !dbg !34
  %325 = fadd float %53, %53, !dbg !34
  %326 = select i1 %204, float %325, float 0.000000e+00, !dbg !34
  %.212.i59 = select i1 %324, float %326, float %t.i.0.i57, !dbg !34
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not35.i60 = icmp eq i32 %327, 0, !dbg !34
  %.01.i61 = select i1 %.not35.i60, float %207, float %206, !dbg !34
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not36.i62 = icmp eq i32 %328, 0, !dbg !34
  %.02.i63 = select i1 %.not36.i62, float %128, float %127, !dbg !34
  %329 = fadd float %.01.i61, %.02.i63, !dbg !34
  %330 = bitcast float %329 to i32, !dbg !34
  %331 = icmp sgt i32 %330, 2139095039, !dbg !34
  br i1 %331, label %__nv_isnanf.exit.i.i66, label %__nv_powf.exit84, !dbg !34

__nv_isnanf.exit.i.i66:                           ; preds = %__internal_accurate_powf.exit.i56
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not37.i67 = icmp eq i32 %332, 0, !dbg !34
  %.06.i68 = select i1 %.not37.i67, float %207, float %206, !dbg !34
  %333 = fcmp uno float %.06.i68, 0.000000e+00, !dbg !34
  br i1 %333, label %336, label %__nv_isnanf.exit11.i.i69, !dbg !34

__nv_isnanf.exit11.i.i69:                         ; preds = %__nv_isnanf.exit.i.i66
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not38.i70 = icmp eq i32 %334, 0, !dbg !34
  %.07.i71 = select i1 %.not38.i70, float %128, float %127, !dbg !34
  %335 = fcmp uno float %.07.i71, 0.000000e+00, !dbg !34
  br i1 %335, label %336, label %__nv_isinff.exit8.i.i72, !dbg !34

336:                                              ; preds = %__nv_isnanf.exit11.i.i69, %__nv_isnanf.exit.i.i66
  %337 = fadd float %53, 0x3FE99999A0000000, !dbg !34
  br label %__nv_powf.exit84, !dbg !34

__nv_isinff.exit8.i.i72:                          ; preds = %__nv_isnanf.exit11.i.i69
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not39.i73 = icmp eq i32 %338, 0, !dbg !34
  %.05.i74 = select i1 %.not39.i73, float %128, float %127, !dbg !34
  %339 = fcmp oeq float %.05.i74, 0x7FF0000000000000, !dbg !34
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !34
  %.not41.i79 = icmp eq i32 %340, 0, !dbg !34
  %.04.i80 = select i1 %.not41.i79, float %207, float %206, !dbg !34
  br i1 %339, label %__nv_fabsf.exit5.i.i78, label %__nv_isinff.exit.i.i75, !dbg !34

__nv_fabsf.exit5.i.i78:                           ; preds = %__nv_isinff.exit8.i.i72
  %341 = fcmp ogt float %.04.i80, 1.000000e+00, !dbg !34
  %342 = select i1 %341, float 0x7FF0000000000000, float 0.000000e+00, !dbg !34
  br label %__nv_powf.exit84, !dbg !34

__nv_isinff.exit.i.i75:                           ; preds = %__nv_isinff.exit8.i.i72
  %343 = fcmp oeq float %.04.i80, 0x7FF0000000000000, !dbg !34
  br i1 %343, label %344, label %__nv_powf.exit84, !dbg !34

344:                                              ; preds = %__nv_isinff.exit.i.i75
  br label %__nv_powf.exit84, !dbg !34

__nv_powf.exit84:                                 ; preds = %__internal_accurate_powf.exit.i56, %336, %__nv_fabsf.exit5.i.i78, %__nv_isinff.exit.i.i75, %344
  %.3.i64 = phi float [ %.212.i59, %__internal_accurate_powf.exit.i56 ], [ %337, %336 ], [ %342, %__nv_fabsf.exit5.i.i78 ], [ 0x7FF0000000000000, %344 ], [ %.212.i59, %__nv_isinff.exit.i.i75 ], !dbg !34
  %345 = fcmp oeq float %52, 1.000000e+00, !dbg !34
  %t.0.i = select i1 %345, float 1.000000e+00, float %.3.i, !dbg !34
  %346 = fcmp oge float %24, %26, !dbg !36
  %347 = bitcast i32 %27 to float, !dbg !18
  %348 = fmul float %42, %347, !dbg !37
  %349 = select i1 %346, float 0.000000e+00, float %348, !dbg !38
  %350 = fcmp olt float %24, %26, !dbg !39
  %351 = fadd float %347, -1.000000e+00, !dbg !40
  %352 = fmul float %351, %49, !dbg !41
  %353 = fadd float %352, 1.000000e+00, !dbg !42
  %354 = select i1 %350, float 0.000000e+00, float %353, !dbg !43
  %355 = fadd float %349, %354, !dbg !44
  %356 = fcmp oge float %23, %26, !dbg !36
  %357 = fmul float %40, %347, !dbg !37
  %358 = select i1 %356, float 0.000000e+00, float %357, !dbg !38
  %359 = fcmp olt float %23, %26, !dbg !39
  %360 = fmul float %351, %47, !dbg !41
  %361 = fadd float %360, 1.000000e+00, !dbg !42
  %362 = select i1 %359, float 0.000000e+00, float %361, !dbg !43
  %363 = fadd float %358, %362, !dbg !44
  %364 = fcmp oeq float %53, 1.000000e+00, !dbg !34
  %t.0.i65 = select i1 %364, float 1.000000e+00, float %.3.i64, !dbg !34
  %365 = getelementptr i1, ptr addrspace(1) %5, i64 %18, !dbg !45
  %366 = zext i1 %359 to i8, !dbg !46
  %367 = zext i1 %350 to i8, !dbg !46
  %368 = insertelement <2 x i8> poison, i8 %366, i64 0, !dbg !46
  %369 = insertelement <2 x i8> %368, i8 %367, i64 1, !dbg !46
  %370 = bitcast <2 x i8> %369 to i16, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %370, ptr addrspace(1) %365, i1 %17) #4, !dbg !46
  %371 = getelementptr i1, ptr addrspace(1) %6, i64 %18, !dbg !47
  %372 = zext i1 %356 to i8, !dbg !48
  %373 = zext i1 %346 to i8, !dbg !48
  %374 = insertelement <2 x i8> poison, i8 %372, i64 0, !dbg !48
  %375 = insertelement <2 x i8> %374, i8 %373, i64 1, !dbg !48
  %376 = bitcast <2 x i8> %375 to i16, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %376, ptr addrspace(1) %371, i1 %17) #4, !dbg !48
  %377 = getelementptr float, ptr addrspace(1) %7, i64 %18, !dbg !49
  %378 = bitcast float %363 to i32, !dbg !50
  %379 = bitcast float %355 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %378, i32 %379, ptr addrspace(1) %377, i1 %17) #4, !dbg !50
  %380 = getelementptr float, ptr addrspace(1) %8, i64 %18, !dbg !51
  %381 = bitcast float %t.0.i to i32, !dbg !52
  %382 = bitcast float %t.0.i65 to i32, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %381, i32 %382, ptr addrspace(1) %380, i1 %17) #4, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cogra645a5pdtymj2o4cwhux4ludhg6njvs4z5kwedvluhvi2loc.py", directory: "inductor_cache/og")
!4 = !{ptr @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_relu_sub_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_relu_sub_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_relu_sub_3", linkageName: "triton_poi_fused_add_exp_ge_lt_masked_fill_mul_neg_pow_relu_sub_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 20, scope: !7)
!21 = !DILocation(line: 36, column: 12, scope: !7)
!22 = !DILocation(line: 37, column: 19, scope: !7)
!23 = !DILocation(line: 38, column: 20, scope: !7)
!24 = !DILocation(line: 39, column: 19, scope: !7)
!25 = !DILocation(line: 40, column: 24, scope: !7)
!26 = !DILocation(line: 46, column: 13, scope: !7)
!27 = !DILocation(line: 47, column: 20, scope: !7)
!28 = !DILocation(line: 48, column: 24, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!32 = !DILocation(line: 54, column: 42, scope: !7)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 56, column: 33, scope: !7)
!35 = !{i32 21046}
!36 = !DILocation(line: 35, column: 19, scope: !7)
!37 = !DILocation(line: 41, column: 19, scope: !7)
!38 = !DILocation(line: 43, column: 34, scope: !7)
!39 = !DILocation(line: 34, column: 18, scope: !7)
!40 = !DILocation(line: 45, column: 19, scope: !7)
!41 = !DILocation(line: 49, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 34, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 57, column: 25, scope: !7)
!46 = !DILocation(line: 57, column: 36, scope: !7)
!47 = !DILocation(line: 58, column: 25, scope: !7)
!48 = !DILocation(line: 58, column: 36, scope: !7)
!49 = !DILocation(line: 59, column: 25, scope: !7)
!50 = !DILocation(line: 59, column: 37, scope: !7)
!51 = !DILocation(line: 60, column: 25, scope: !7)
!52 = !DILocation(line: 60, column: 37, scope: !7)
!53 = !DILocation(line: 60, column: 4, scope: !7)
