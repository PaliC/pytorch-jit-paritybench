//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_0];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_1];
$L__tmp0:
	.loc	1 24 28                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_2];
	.loc	1 27 26                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:27:26
	mov.u32 	%r49, %tid.x;
	shl.b32 	%r50, %r49, 2;
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_3];
	and.b32  	%r51, %r50, 508;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_4];
	.loc	1 32 39                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:39
	shl.b32 	%r52, %r1, 9;
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_5];
	.loc	1 32 35                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:35
	or.b32  	%r53, %r52, %r51;
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_6];
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_no_training_add_pow_relu_sum_21_param_7];
	.loc	1 32 30                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:30
	mul.wide.s32 	%rd17, %r53, 4;
	add.s64 	%rd1, %rd10, %rd17;
	mov.pred 	%p1, -1;
	.loc	1 32 44                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:33:30
	mul.wide.u32 	%rd18, %r51, 4;
	add.s64 	%rd2, %rd11, %rd18;
	.loc	1 33 35                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:34:30
	add.s64 	%rd3, %rd12, %rd18;
	.loc	1 34 35                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:34:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r11;
	mov.b32 	%f3, %r12;
	mov.b32 	%f4, %r13;
	.loc	1 35 31                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:35:31
	add.s64 	%rd4, %rd13, %rd18;
	.loc	1 35 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:36:31
	add.s64 	%rd5, %rd14, %rd18;
	.loc	1 36 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:36:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:37:31
	add.s64 	%rd6, %rd15, %rd17;
	.loc	1 37 45                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:37:45
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 18                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:40:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 41 26                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:41:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 27 26                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:27:26
	and.b32  	%r54, %r49, 31;
	.loc	1 43 18                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:43:18
	mov.b32 	%r28, %f9;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%r31, %f10;
	// begin inline asm
	div.full.f32 %r29, %r27, %r31;
	// end inline asm
	mov.b32 	%f14, %r29;
	mov.b32 	%r34, %f11;
	// begin inline asm
	div.full.f32 %r32, %r27, %r34;
	// end inline asm
	mov.b32 	%f15, %r32;
	mov.b32 	%r37, %f12;
	// begin inline asm
	div.full.f32 %r35, %r27, %r37;
	// end inline asm
	mov.b32 	%f16, %r35;
	.loc	1 32 44                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:44
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	.loc	1 33 35                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:33:35
	mov.b32 	%f19, %r6;
	mov.b32 	%f20, %r7;
	.loc	1 38 18                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:38:18
	sub.f32 	%f21, %f18, %f20;
	sub.f32 	%f22, %f17, %f19;
	.loc	1 37 45                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:37:45
	mov.b32 	%f23, %r23;
	mov.b32 	%f24, %r22;
	.loc	1 36 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:36:36
	mov.b32 	%f25, %r18;
	mov.b32 	%f26, %r19;
	.loc	1 35 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:35:36
	mov.b32 	%f27, %r14;
	mov.b32 	%f28, %r15;
	.loc	1 46 19                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:46:19
	mul.f32 	%f29, %f22, %f13;
	mul.f32 	%f30, %f21, %f14;
	.loc	1 48 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:48:20
	fma.rn.f32 	%f31, %f30, %f28, %f26;
	fma.rn.f32 	%f32, %f29, %f27, %f25;
	.loc	1 49 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:49:20
	add.f32 	%f33, %f32, %f24;
	add.f32 	%f34, %f31, %f23;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p12, %f34, 0f00000000;
	setp.lt.f32 	%p13, %f33, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, 0f00000000, %f33, %p13;
	selp.f32 	%f36, 0f00000000, %f34, %p12;
$L__tmp2:
	.loc	1 52 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:52:20
	mul.f32 	%f37, %f36, %f36;
	.loc	1 32 44                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:32:44
	mov.b32 	%f38, %r5;
	mov.b32 	%f39, %r4;
	.loc	1 33 35                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:33:35
	mov.b32 	%f40, %r9;
	mov.b32 	%f41, %r8;
	.loc	1 38 18                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:38:18
	sub.f32 	%f42, %f39, %f41;
	sub.f32 	%f43, %f38, %f40;
	.loc	1 37 45                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:37:45
	mov.b32 	%f44, %r24;
	mov.b32 	%f45, %r25;
	.loc	1 36 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:36:36
	mov.b32 	%f46, %r21;
	mov.b32 	%f47, %r20;
	.loc	1 35 36                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:35:36
	mov.b32 	%f48, %r17;
	mov.b32 	%f49, %r16;
	.loc	1 46 19                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:46:19
	mul.f32 	%f50, %f43, %f16;
	mul.f32 	%f51, %f42, %f15;
	.loc	1 48 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:48:20
	fma.rn.f32 	%f52, %f51, %f49, %f47;
	fma.rn.f32 	%f53, %f50, %f48, %f46;
	.loc	1 49 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:49:20
	add.f32 	%f54, %f53, %f45;
	add.f32 	%f55, %f52, %f44;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p14, %f55, 0f00000000;
	setp.lt.f32 	%p15, %f54, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f56, 0f00000000, %f54, %p15;
	selp.f32 	%f57, 0f00000000, %f55, %p14;
$L__tmp4:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f58, %f35, %f35, %f37;
	fma.rn.f32 	%f59, %f57, %f57, %f58;
	fma.rn.f32 	%f60, %f56, %f56, %f59;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f60;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f61, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f62;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f63, %r58;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f64;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f65, %r60;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f66;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f67, %r62;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f68;
	shfl.sync.bfly.b32	%r64, %r63, 1, 31, -1;
	mov.b32 	%f69, %r64;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r54, 0;
	shr.u32 	%r65, %r49, 3;
	and.b32  	%r66, %r65, 12;
	mov.u32 	%r67, global_smem;
	add.s32 	%r38, %r67, %r66;
	mov.b32 	%r39, %f70;
	// begin inline asm
	@%p7 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r49, 4;
	add.s32 	%r41, %r67, %r50;
	// begin inline asm
	@%p8 ld.shared.b32 %r40, [ %r41 + 0 ];
	// end inline asm
	mov.b32 	%f71, %r40;
	shfl.sync.bfly.b32	%r68, %r40, 2, 31, -1;
	mov.b32 	%f72, %r68;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f73;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f74, %r70;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r71, %r49, 3;
	setp.eq.s32 	%p16, %r71, 0;
	and.pred  	%p9, %p8, %p16;
	mov.b32 	%r43, %f75;
	// begin inline asm
	@%p9 st.shared.b32 [ %r41 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f76, [global_smem];
$L__tmp5:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f77, %f76, 0f00000000;
$L__tmp6:
	.loc	1 56 20                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:56:20
	add.f32 	%f78, %f77, 0f358637BD;
	.loc	1 57 25                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:57:25
	add.s64 	%rd7, %rd16, %rd17;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r44, %f35;
	mov.b32 	%r45, %f36;
	mov.b32 	%r46, %f57;
	mov.b32 	%r47, %f56;
$L__tmp8:
	.loc	1 57 46                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:57:46
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 58 4                          // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:58:4
	bar.sync 	0;
	.loc	1 59 28                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:59:28
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd8, %rd9, %rd19;
	.loc	1 59 40                         // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:59:40
	and.b32  	%r72, %r49, 127;
	setp.eq.s32 	%p11, %r72, 0;
	mov.b32 	%r48, %f78;
	// begin inline asm
	@%p11 st.global.b32 [ %rd8 + 0 ], { %r48 };
	// end inline asm
	.loc	1 59 4                          // c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py:59:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7n/c7nnfqtmm6ck427i6mtytis72harcrh6xaje5zbo4e66ax5ltjlo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 266                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x103 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 110
.b8 110
.b8 102
.b8 113
.b8 116
.b8 109
.b8 109
.b8 54
.b8 99
.b8 107
.b8 52
.b8 50
.b8 55
.b8 105
.b8 54
.b8 109
.b8 116
.b8 121
.b8 116
.b8 105
.b8 115
.b8 55
.b8 50
.b8 104
.b8 97
.b8 114
.b8 99
.b8 114
.b8 104
.b8 54
.b8 120
.b8 97
.b8 106
.b8 101
.b8 53
.b8 122
.b8 98
.b8 111
.b8 52
.b8 101
.b8 54
.b8 54
.b8 97
.b8 120
.b8 53
.b8 108
.b8 116
.b8 106
.b8 108
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaf:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
