; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_mul_sigmoid_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = sdiv i32 %13, 16, !dbg !15
  %16 = srem i32 %15, 4, !dbg !16
  %17 = sext i32 %13 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !17
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %14) #1, !dbg !18
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !18
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !18
  %22 = bitcast i32 %20 to float, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = sext i32 %16 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #1, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #1, !dbg !20
  %29 = bitcast i32 %28 to float, !dbg !20
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !21
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %14) #1, !dbg !22
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !22
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !22
  %34 = bitcast i32 %32 to float, !dbg !22
  %35 = bitcast i32 %33 to float, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !23
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %14) #1, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %14) #1, !dbg !24
  %40 = bitcast i32 %39 to float, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !25
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 %14) #1, !dbg !26
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !26
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !26
  %45 = bitcast i32 %43 to float, !dbg !26
  %46 = bitcast i32 %44 to float, !dbg !26
  %47 = fadd float %22, %27, !dbg !27
  %48 = fadd float %23, %29, !dbg !27
  %49 = fadd float %34, %38, !dbg !28
  %50 = fadd float %35, %40, !dbg !28
  %51 = fsub float 0.000000e+00, %49, !dbg !29
  %52 = fsub float 0.000000e+00, %50, !dbg !29
  %53 = fmul float %51, 0x3FF7154760000000, !dbg !33
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #1, !dbg !33
  %55 = fmul float %52, 0x3FF7154760000000, !dbg !33
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #1, !dbg !33
  %57 = fadd float %54, 1.000000e+00, !dbg !34
  %58 = fadd float %56, 1.000000e+00, !dbg !34
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %57) #1, !dbg !35
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %58) #1, !dbg !35
  %61 = fmul float %47, %59, !dbg !36
  %62 = fmul float %48, %60, !dbg !36
  %63 = fmul float %61, 0x3FFCCCCCC0000000, !dbg !37
  %64 = fmul float %62, 0x3FFCCCCCC0000000, !dbg !37
  %65 = fmul float %63, 0x3FC99999A0000000, !dbg !38
  %66 = fmul float %64, 0x3FC99999A0000000, !dbg !38
  %67 = fadd float %65, %45, !dbg !39
  %68 = fadd float %66, %46, !dbg !39
  %69 = bitcast float %47 to i32, !dbg !40
  %70 = bitcast float %48 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %70, ptr addrspace(1) %18, i1 %14) #1, !dbg !40
  %71 = bitcast float %49 to i32, !dbg !41
  %72 = bitcast float %50 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %71, i32 %72, ptr addrspace(1) %30, i1 %14) #1, !dbg !41
  %73 = getelementptr float, ptr addrspace(1) %5, i64 %17, !dbg !42
  %74 = bitcast float %67 to i32, !dbg !43
  %75 = bitcast float %68 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %74, i32 %75, ptr addrspace(1) %73, i1 %14) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3s3qgwpsoc6z7sfum3bzbmbgrdtuzt2xwrcxhwaivy4as5tnugd.py", directory: "inductor_cache/3s")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_sigmoid_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_sigmoid_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_sigmoid_9", linkageName: "triton_poi_fused_add_convolution_mul_sigmoid_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 18, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 47, column: 30, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!32 = !DILocation(line: 33, column: 22, scope: !7)
!33 = !DILocation(line: 47, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 47, column: 20, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 47, column: 16, scope: !30, inlinedAt: !32)
!36 = !DILocation(line: 34, column: 18, scope: !7)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 19, scope: !7)
!39 = !DILocation(line: 39, column: 20, scope: !7)
!40 = !DILocation(line: 40, column: 39, scope: !7)
!41 = !DILocation(line: 41, column: 39, scope: !7)
!42 = !DILocation(line: 42, column: 25, scope: !7)
!43 = !DILocation(line: 42, column: 37, scope: !7)
!44 = !DILocation(line: 42, column: 4, scope: !7)
