; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_gelu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = sext i32 %10 to i64, !dbg !14
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !14
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !15
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !15
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !15
  %16 = bitcast i32 %14 to float, !dbg !15
  %17 = bitcast i32 %15 to float, !dbg !15
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #3, !dbg !16
  %19 = bitcast i32 %18 to float, !dbg !16
  %20 = fadd float %16, %19, !dbg !17
  %21 = fadd float %17, %19, !dbg !17
  %22 = fmul float %20, 0x3FE6A09E60000000, !dbg !18
  %23 = fmul float %21, 0x3FE6A09E60000000, !dbg !18
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not.i = icmp eq i32 %24, 0, !dbg !19
  %25 = tail call float @llvm.nvvm.fabs.ftz.f(float %22) #3, !dbg !19
  %26 = tail call float @llvm.nvvm.fabs.f(float %22) #3, !dbg !19
  %.0.i = select i1 %.not.i, float %26, float %25, !dbg !19
  %27 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !19
  br i1 %27, label %__nv_fabsf.exit1.i, label %29, !dbg !19

__nv_fabsf.exit1.i:                               ; preds = %4
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not1.i = icmp eq i32 %28, 0, !dbg !19
  %.01.i = select i1 %.not1.i, float %26, float %25, !dbg !19
  br label %__internal_fmad.exit.i, !dbg !19

29:                                               ; preds = %4
  %30 = fmul float %22, %22, !dbg !19
  br label %__internal_fmad.exit.i, !dbg !19

__internal_fmad.exit.i:                           ; preds = %29, %__nv_fabsf.exit1.i
  %31 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %29 ], !dbg !19
  %32 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %29 ], !dbg !19
  %33 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %29 ], !dbg !19
  %34 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %29 ], !dbg !19
  %35 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %29 ], !dbg !19
  %36 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %29 ], !dbg !19
  %37 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %29 ], !dbg !19
  %38 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %30, %29 ], !dbg !19
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not2.i = icmp eq i32 %39, 0, !dbg !19
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %37, float %38, float %36) #3, !dbg !19
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %37, float %38, float %36) #3, !dbg !19
  %.02.i = select i1 %.not2.i, float %41, float %40, !dbg !19
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not3.i = icmp eq i32 %42, 0, !dbg !19
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %38, float %35) #3, !dbg !19
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %38, float %35) #3, !dbg !19
  %.03.i = select i1 %.not3.i, float %44, float %43, !dbg !19
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not4.i = icmp eq i32 %45, 0, !dbg !19
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %38, float %34) #3, !dbg !19
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %38, float %34) #3, !dbg !19
  %.04.i = select i1 %.not4.i, float %47, float %46, !dbg !19
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not5.i = icmp eq i32 %48, 0, !dbg !19
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %38, float %33) #3, !dbg !19
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %38, float %33) #3, !dbg !19
  %.05.i = select i1 %.not5.i, float %50, float %49, !dbg !19
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not6.i = icmp eq i32 %51, 0, !dbg !19
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %38, float %32) #3, !dbg !19
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %38, float %32) #3, !dbg !19
  %.06.i = select i1 %.not6.i, float %53, float %52, !dbg !19
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not7.i = icmp eq i32 %54, 0, !dbg !19
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %38, float %31) #3, !dbg !19
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %38, float %31) #3, !dbg !19
  %.07.i = select i1 %.not7.i, float %56, float %55, !dbg !19
  %57 = fneg float %38, !dbg !19
  %58 = select i1 %27, float %57, float %22, !dbg !19
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not8.i = icmp eq i32 %59, 0, !dbg !19
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %58, float %58) #3, !dbg !19
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %58, float %58) #3, !dbg !19
  %.08.i = select i1 %.not8.i, float %61, float %60, !dbg !19
  br i1 %27, label %62, label %__nv_erff.exit, !dbg !19

62:                                               ; preds = %__internal_fmad.exit.i
  %63 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !19
  %64 = fsub float 1.000000e+00, %63, !dbg !19
  %65 = bitcast float %64 to i32, !dbg !19
  %66 = bitcast float %22 to i32, !dbg !19
  %67 = and i32 %66, -2147483648, !dbg !19
  %68 = or i32 %67, %65, !dbg !19
  %69 = bitcast i32 %68 to float, !dbg !19
  br label %__nv_erff.exit, !dbg !19

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %62
  %r.0.i = phi float [ %69, %62 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !19
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not.i1 = icmp eq i32 %70, 0, !dbg !19
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %23) #3, !dbg !19
  %72 = tail call float @llvm.nvvm.fabs.f(float %23) #3, !dbg !19
  %.0.i2 = select i1 %.not.i1, float %72, float %71, !dbg !19
  %73 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !19
  br i1 %73, label %__nv_fabsf.exit1.i19, label %75, !dbg !19

__nv_fabsf.exit1.i19:                             ; preds = %__nv_erff.exit
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not1.i20 = icmp eq i32 %74, 0, !dbg !19
  %.01.i21 = select i1 %.not1.i20, float %72, float %71, !dbg !19
  br label %__internal_fmad.exit.i3, !dbg !19

75:                                               ; preds = %__nv_erff.exit
  %76 = fmul float %23, %23, !dbg !19
  br label %__internal_fmad.exit.i3, !dbg !19

__internal_fmad.exit.i3:                          ; preds = %75, %__nv_fabsf.exit1.i19
  %77 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i19 ], [ 0x3FC06EBA60000000, %75 ], !dbg !19
  %78 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i19 ], [ 0xBFD8127580000000, %75 ], !dbg !19
  %79 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i19 ], [ 0x3FBCE315E0000000, %75 ], !dbg !19
  %80 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i19 ], [ 0xBF9B837CE0000000, %75 ], !dbg !19
  %81 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i19 ], [ 0x3F755ABD40000000, %75 ], !dbg !19
  %82 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i19 ], [ 0xBF4AE9A400000000, %75 ], !dbg !19
  %83 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i19 ], [ 0x3F163D2D40000000, %75 ], !dbg !19
  %84 = phi float [ %.01.i21, %__nv_fabsf.exit1.i19 ], [ %76, %75 ], !dbg !19
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not2.i4 = icmp eq i32 %85, 0, !dbg !19
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %84, float %82) #3, !dbg !19
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %84, float %82) #3, !dbg !19
  %.02.i5 = select i1 %.not2.i4, float %87, float %86, !dbg !19
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not3.i6 = icmp eq i32 %88, 0, !dbg !19
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i5, float %84, float %81) #3, !dbg !19
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i5, float %84, float %81) #3, !dbg !19
  %.03.i7 = select i1 %.not3.i6, float %90, float %89, !dbg !19
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not4.i8 = icmp eq i32 %91, 0, !dbg !19
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i7, float %84, float %80) #3, !dbg !19
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i7, float %84, float %80) #3, !dbg !19
  %.04.i9 = select i1 %.not4.i8, float %93, float %92, !dbg !19
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not5.i10 = icmp eq i32 %94, 0, !dbg !19
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i9, float %84, float %79) #3, !dbg !19
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i9, float %84, float %79) #3, !dbg !19
  %.05.i11 = select i1 %.not5.i10, float %96, float %95, !dbg !19
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not6.i12 = icmp eq i32 %97, 0, !dbg !19
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i11, float %84, float %78) #3, !dbg !19
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i11, float %84, float %78) #3, !dbg !19
  %.06.i13 = select i1 %.not6.i12, float %99, float %98, !dbg !19
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not7.i14 = icmp eq i32 %100, 0, !dbg !19
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %84, float %77) #3, !dbg !19
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %84, float %77) #3, !dbg !19
  %.07.i15 = select i1 %.not7.i14, float %102, float %101, !dbg !19
  %103 = fneg float %84, !dbg !19
  %104 = select i1 %73, float %103, float %23, !dbg !19
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !19
  %.not8.i16 = icmp eq i32 %105, 0, !dbg !19
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i15, float %104, float %104) #3, !dbg !19
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i15, float %104, float %104) #3, !dbg !19
  %.08.i17 = select i1 %.not8.i16, float %107, float %106, !dbg !19
  br i1 %73, label %108, label %__nv_erff.exit22, !dbg !19

108:                                              ; preds = %__internal_fmad.exit.i3
  %109 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i17) #3, !dbg !19
  %110 = fsub float 1.000000e+00, %109, !dbg !19
  %111 = bitcast float %110 to i32, !dbg !19
  %112 = bitcast float %23 to i32, !dbg !19
  %113 = and i32 %112, -2147483648, !dbg !19
  %114 = or i32 %113, %111, !dbg !19
  %115 = bitcast i32 %114 to float, !dbg !19
  br label %__nv_erff.exit22, !dbg !19

__nv_erff.exit22:                                 ; preds = %__internal_fmad.exit.i3, %108
  %r.0.i18 = phi float [ %115, %108 ], [ %.08.i17, %__internal_fmad.exit.i3 ], !dbg !19
  %116 = fmul float %21, 5.000000e-01, !dbg !20
  %117 = fmul float %20, 5.000000e-01, !dbg !20
  %118 = fadd float %r.0.i, 1.000000e+00, !dbg !21
  %119 = fadd float %r.0.i18, 1.000000e+00, !dbg !21
  %120 = fmul float %117, %118, !dbg !22
  %121 = fmul float %116, %119, !dbg !22
  %122 = bitcast float %20 to i32, !dbg !23
  %123 = bitcast float %21 to i32, !dbg !23
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %122, i32 %123, ptr addrspace(1) %12, i1 true) #3, !dbg !23
  %124 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !24
  %125 = bitcast float %120 to i32, !dbg !25
  %126 = bitcast float %121 to i32, !dbg !25
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %125, i32 %126, ptr addrspace(1) %124, i1 true) #3, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cv4urqc42q2y5ljb75auvoalvjqhqpvwv6yrodpjva2eoykj4fm3.py", directory: "inductor_cache/v4")
!4 = !{ptr @triton_poi_fused_convolution_gelu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_gelu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_gelu_0", linkageName: "triton_poi_fused_convolution_gelu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 25, scope: !7)
!20 = !DILocation(line: 30, column: 18, scope: !7)
!21 = !DILocation(line: 35, column: 19, scope: !7)
!22 = !DILocation(line: 36, column: 19, scope: !7)
!23 = !DILocation(line: 37, column: 39, scope: !7)
!24 = !DILocation(line: 38, column: 25, scope: !7)
!25 = !DILocation(line: 38, column: 37, scope: !7)
!26 = !DILocation(line: 38, column: 4, scope: !7)
