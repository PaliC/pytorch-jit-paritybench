#loc = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0)
#loc1 = loc(unknown)
#loc28 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":44:26)
#loc33 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":48:26)
#loc44 = loc(callsite(#loc1 at #loc28))
#loc47 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_per_fused_add_mse_loss_mul_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<2.500000e-01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<1x64xi64> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_4 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_3 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.divsi %1, %cst_4 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.remsi %4, %cst_4 : tensor<1x64xi32> loc(#loc7)
    %6 = arith.muli %3, %cst_4 : tensor<1x64xi32> loc(#loc8)
    %7 = arith.addi %2, %6 : tensor<1x64xi32> loc(#loc9)
    %8 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x64x!tt.ptr<i64>> loc(#loc10)
    %9 = tt.addptr %8, %7 : tensor<1x64x!tt.ptr<i64>>, tensor<1x64xi32> loc(#loc10)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>> loc(#loc11)
    %11 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %13 = tt.load %12 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.addi %10, %cst_2 : tensor<1x64xi64> loc(#loc14)
    %15 = arith.cmpi slt, %10, %cst : tensor<1x64xi64> loc(#loc15)
    %16 = arith.select %15, %14, %10 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc16)
    %17 = arith.cmpi sge, %16, %cst : tensor<1x64xi64> loc(#loc17)
    %18 = arith.cmpi slt, %16, %cst_2 : tensor<1x64xi64> loc(#loc18)
    %19 = arith.andi %17, %18 : tensor<1x64xi1> loc(#loc19)
    tt.assert %19, "index out of bounds: 0 <= tmp4 < 4" : tensor<1x64xi1> loc(#loc20)
    %20 = arith.muli %16, %cst_2 : tensor<1x64xi64> loc(#loc21)
    %21 = arith.extsi %5 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc22)
    %22 = arith.addi %21, %20 : tensor<1x64xi64> loc(#loc22)
    %23 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %24 = tt.addptr %23, %22 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi64> loc(#loc23)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc24)
    %26 = arith.subf %25, %13 : tensor<1x64xf32> loc(#loc25)
    %27 = arith.mulf %26, %26 : tensor<1x64xf32> loc(#loc26)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc28)), %arg6: f32 loc(callsite(#loc1 at #loc28))):
      %40 = arith.addf %arg5, %arg6 : f32 loc(#loc48)
      tt.reduce.return %40 : f32 loc(#loc43)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc43)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc30)
    %30 = arith.subf %13, %25 : tensor<1x64xf32> loc(#loc31)
    %31 = arith.mulf %30, %30 : tensor<1x64xf32> loc(#loc32)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc33)), %arg6: f32 loc(callsite(#loc1 at #loc33))):
      %40 = arith.addf %arg5, %arg6 : f32 loc(#loc49)
      tt.reduce.return %40 : f32 loc(#loc46)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc46)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc34)
    %34 = arith.divf %29, %cst_1 : tensor<1x1xf32> loc(#loc35)
    %35 = arith.divf %33, %cst_1 : tensor<1x1xf32> loc(#loc36)
    %36 = arith.mulf %35, %cst_0 : tensor<1x1xf32> loc(#loc37)
    %37 = arith.addf %34, %36 : tensor<1x1xf32> loc(#loc38)
    gpu.barrier loc(#loc39)
    %38 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc40)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.store %39, %37 : tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":26:26)
#loc3 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":26:34)
#loc4 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":29:19)
#loc5 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":30:19)
#loc6 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":31:21)
#loc7 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":31:26)
#loc8 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":33:37)
#loc9 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":33:35)
#loc10 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":33:30)
#loc11 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":33:42)
#loc12 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":34:30)
#loc13 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":34:35)
#loc14 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":36:18)
#loc15 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":37:18)
#loc16 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":38:32)
#loc17 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":39:27)
#loc18 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":39:43)
#loc19 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":39:36)
#loc20 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":39:47)
#loc21 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":40:37)
#loc22 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":40:35)
#loc23 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":40:30)
#loc24 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":40:44)
#loc25 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":41:18)
#loc26 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":42:18)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc30 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":44:29)
#loc31 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":45:19)
#loc32 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":46:20)
#loc34 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":48:29)
#loc35 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":50:20)
#loc36 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":51:20)
#loc37 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":53:20)
#loc38 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":54:20)
#loc39 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":55:4)
#loc40 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":56:28)
#loc41 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":56:71)
#loc42 = loc("inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py":56:4)
#loc43 = loc(callsite(#loc27 at #loc28))
#loc45 = loc(callsite(#loc29 at #loc27))
#loc46 = loc(callsite(#loc27 at #loc33))
#loc48 = loc(callsite(#loc45 at #loc28))
#loc49 = loc(callsite(#loc45 at #loc33))
