//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mse_loss_mul_3 // -- Begin function triton_per_fused_add_mse_loss_mul_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 103, 102, 47, 99, 103, 102, 109, 100, 105, 107, 105, 50, 116, 122, 52, 111, 55, 112, 106, 97, 106, 108, 97, 102, 110, 120, 100, 101, 118, 113, 102, 115, 118, 97, 112, 51, 101, 104, 101, 119, 117, 52, 98, 54, 121, 54, 53, 117, 102, 98, 121, 102, 51, 117, 54, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mse_loss_mul_3
.visible .entry triton_per_fused_add_mse_loss_mul_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mul_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mul_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mul_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mul_3_param_3,
	.param .u32 triton_per_fused_add_mse_loss_mul_3_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<58>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<24>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd7, [triton_per_fused_add_mse_loss_mul_3_param_1];
	and.b32  	%r2, %r1, 63;
	.loc	1 29 19                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:29:19
	and.b32  	%r6, %r1, 3;
	ld.param.u64 	%rd8, [triton_per_fused_add_mse_loss_mul_3_param_3];
	.loc	1 33 37                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:33:37
	shr.u32 	%r3, %r1, 2;
	and.b32  	%r7, %r3, 12;
	.loc	1 33 35                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:33:35
	or.b32  	%r8, %r7, %r6;
	.loc	1 33 30                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:33:30
	mul.wide.u32 	%rd9, %r8, 8;
	add.s64 	%rd5, %rd7, %rd9;
	mov.pred 	%p2, -1;
	.loc	1 33 42                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:33:42
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:34:30
	mul.wide.u32 	%rd10, %r2, 4;
	add.s64 	%rd6, %rd8, %rd10;
	.loc	1 34 35                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:34:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.b32 { %r5 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:38:32
	shr.u64 	%rd11, %rd4, 61;
	and.b64  	%rd12, %rd11, 4;
	add.s64 	%rd1, %rd12, %rd4;
	.loc	1 39 36                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:39:36
	setp.lt.u64 	%p3, %rd1, 4;
	.loc	1 39 47                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:39:47
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 47                          // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:0:47
	ld.param.u64 	%rd3, [triton_per_fused_add_mse_loss_mul_3_param_2];
	ld.param.u64 	%rd14, [triton_per_fused_add_mse_loss_mul_3_param_0];
	.loc	1 34 35                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:34:35
	mov.b32 	%f1, %r5;
	.loc	1 31 26                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:31:26
	and.b32  	%r29, %r3, 3;
	.loc	1 26 34                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:26:34
	and.b32  	%r30, %r1, 31;
	.loc	1 39 47                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:39:47
	bar.sync 	0;
	.loc	1 40 30                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:40:30
	shl.b64 	%rd15, %rd1, 4;
	mul.wide.u32 	%rd16, %r29, 4;
	or.b64  	%rd17, %rd15, %rd16;
	add.s64 	%rd13, %rd3, %rd17;
	.loc	1 40 44                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:40:44
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r9 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 41 18                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:41:18
	sub.f32 	%f3, %f2, %f1;
	.loc	1 42 18                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:42:18
	mul.f32 	%f4, %f3, %f3;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f4;
	shfl.sync.bfly.b32	%r32, %r31, 16, 31, -1;
	mov.b32 	%f5, %r32;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f6, %f3, %f3, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f6;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f7, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f8;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f9, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f10;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f11, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f12;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f13, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r30, 0;
	shr.u32 	%r41, %r1, 3;
	and.b32  	%r42, %r41, 4;
	mov.u32 	%r43, global_smem;
	add.s32 	%r10, %r43, %r42;
	mov.b32 	%r11, %f14;
	// begin inline asm
	@%p5 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r1, 2;
	shl.b32 	%r44, %r1, 2;
	add.s32 	%r13, %r43, %r44;
	// begin inline asm
	@%p6 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r12;
	shfl.sync.bfly.b32	%r45, %r12, 1, 31, -1;
	mov.b32 	%f16, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r46, %r1, 1;
	setp.eq.b32 	%p12, %r46, 1;
	not.pred 	%p13, %p12;
	and.pred  	%p7, %p6, %p13;
	mov.b32 	%r15, %f17;
	// begin inline asm
	@%p7 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 45 19                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:45:19
	sub.f32 	%f18, %f1, %f2;
	.loc	1 46 20                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:46:20
	mul.f32 	%f19, %f18, %f18;
	.loc	1 50 20                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:50:20
	ld.shared.u32 	%r23, [global_smem];
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r47, %f19;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f20, %r48;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f21, %f18, %f18, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f21;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f22, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f23;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f24, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f25;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f26, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f27;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f28, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f29;
	// begin inline asm
	@%p5 st.shared.b32 [ %r10 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r18, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r18;
	shfl.sync.bfly.b32	%r57, %r18, 1, 31, -1;
	mov.b32 	%f31, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r21, %f32;
	// begin inline asm
	@%p7 st.shared.b32 [ %r13 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r24, 1115684864;
$L__tmp3:
	.loc	1 50 20                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:50:20
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f33, %r22;
	.loc	1 51 20                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:51:20
	ld.shared.u32 	%r26, [global_smem];
	// begin inline asm
	div.full.f32 %r25, %r26, %r24;
	// end inline asm
	mov.b32 	%f34, %r25;
	.loc	1 54 20                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:54:20
	fma.rn.f32 	%f35, %f34, 0f3E800000, %f33;
	.loc	1 55 4                          // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:55:4
	bar.sync 	0;
	.loc	1 56 71                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:56:71
	setp.eq.s32 	%p11, %r2, 0;
	mov.b32 	%r28, %f35;
	// begin inline asm
	@%p11 st.global.b32 [ %rd14 + 0 ], { %r28 };
	// end inline asm
	.loc	1 56 4                          // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:56:4
	ret;
$L__BB0_1:
	.loc	1 39 47                         // cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py:39:47
	mov.u64 	%rd18, assertMessage_0;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, assertFile_0;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, assertFunc_0;
	cvta.global.u64 	%rd23, %rd22;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd19;
	.param .b64 param1;
	st.param.b64 	[param1], %rd21;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd23;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gf/cgfmdiki2tz4o7pjajlafnxdevqfsvap3ehewu4b6y65ufbyf3u6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 102
.b8 109
.b8 100
.b8 105
.b8 107
.b8 105
.b8 50
.b8 116
.b8 122
.b8 52
.b8 111
.b8 55
.b8 112
.b8 106
.b8 97
.b8 106
.b8 108
.b8 97
.b8 102
.b8 110
.b8 120
.b8 100
.b8 101
.b8 118
.b8 113
.b8 102
.b8 115
.b8 118
.b8 97
.b8 112
.b8 51
.b8 101
.b8 104
.b8 101
.b8 119
.b8 117
.b8 52
.b8 98
.b8 54
.b8 121
.b8 54
.b8 53
.b8 117
.b8 102
.b8 98
.b8 121
.b8 102
.b8 51
.b8 117
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
