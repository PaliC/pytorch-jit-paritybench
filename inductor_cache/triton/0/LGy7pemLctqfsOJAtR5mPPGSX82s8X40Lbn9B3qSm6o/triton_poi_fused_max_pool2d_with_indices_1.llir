; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 16, !dbg !12
  %9 = and i32 %7, 15, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %11, i32 -8388608, i1 %11) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = fcmp one float %16, 0xFFF0000000000000, !dbg !18
  %18 = fcmp uno float %16, 0.000000e+00, !dbg !22
  %19 = or i1 %17, %18, !dbg !23
  %20 = select i1 %19, float %16, float 0xFFF0000000000000, !dbg !24
  %21 = or disjoint i32 %12, 1, !dbg !25
  %22 = sext i32 %21 to i64, !dbg !26
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !26
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %11, i32 -8388608, i1 %11) #1, !dbg !27
  %25 = bitcast i32 %24 to float, !dbg !27
  %26 = fcmp olt float %20, %25, !dbg !28
  %27 = fcmp uno float %25, 0.000000e+00, !dbg !30
  %28 = or i1 %27, %26, !dbg !31
  %29 = select i1 %28, float %25, float %20, !dbg !32
  %30 = or disjoint i32 %12, 2, !dbg !33
  %31 = sext i32 %30 to i64, !dbg !34
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !34
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %11, i32 -8388608, i1 %11) #1, !dbg !35
  %34 = bitcast i32 %33 to float, !dbg !35
  %35 = fcmp olt float %29, %34, !dbg !36
  %36 = fcmp uno float %34, 0.000000e+00, !dbg !38
  %37 = or i1 %36, %35, !dbg !39
  %38 = select i1 %37, float %34, float %29, !dbg !40
  %39 = or disjoint i32 %12, 3, !dbg !41
  %40 = sext i32 %39 to i64, !dbg !42
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !42
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %11, i32 -8388608, i1 %11) #1, !dbg !43
  %43 = bitcast i32 %42 to float, !dbg !43
  %44 = fcmp olt float %38, %43, !dbg !44
  %45 = fcmp uno float %43, 0.000000e+00, !dbg !46
  %46 = or i1 %45, %44, !dbg !47
  %47 = select i1 %17, i8 4, i8 0, !dbg !48
  %48 = select i1 %26, i8 5, i8 %47, !dbg !49
  %49 = select i1 %35, i8 7, i8 %48, !dbg !50
  %50 = select i1 %44, i8 8, i8 %49, !dbg !51
  %51 = sext i32 %10 to i64, !dbg !52
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !52
  %53 = icmp eq i32 %8, 0, !dbg !53
  %54 = bitcast float %38 to i32, !dbg !53
  %55 = select i1 %46, i32 %42, i32 %54, !dbg !54
  %56 = and i1 %53, %11, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %55, ptr addrspace(1) %52, i1 %56) #1, !dbg !53
  %57 = getelementptr i8, ptr addrspace(1) %2, i64 %51, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %50, ptr addrspace(1) %57, i1 %56) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cihonztf2yxk2nbgxsyk4rpyjhrtzhaanw7zfygimysmun6nugw6.py", directory: "inductor_cache/ih")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_1", linkageName: "triton_poi_fused_max_pool2d_with_indices_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 50, column: 33, scope: !7)
!16 = !DILocation(line: 50, column: 31, scope: !7)
!17 = !DILocation(line: 50, column: 38, scope: !7)
!18 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!21 = !DILocation(line: 51, column: 42, scope: !7)
!22 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !21)
!23 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !21)
!24 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !21)
!25 = !DILocation(line: 53, column: 35, scope: !7)
!26 = !DILocation(line: 53, column: 31, scope: !7)
!27 = !DILocation(line: 53, column: 42, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !29)
!29 = !DILocation(line: 54, column: 42, scope: !7)
!30 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !29)
!31 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !29)
!32 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !29)
!33 = !DILocation(line: 59, column: 35, scope: !7)
!34 = !DILocation(line: 59, column: 31, scope: !7)
!35 = !DILocation(line: 59, column: 42, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !37)
!37 = !DILocation(line: 60, column: 42, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !37)
!41 = !DILocation(line: 62, column: 35, scope: !7)
!42 = !DILocation(line: 62, column: 31, scope: !7)
!43 = !DILocation(line: 62, column: 42, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !45)
!45 = !DILocation(line: 63, column: 42, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !45)
!48 = !DILocation(line: 76, column: 35, scope: !7)
!49 = !DILocation(line: 79, column: 35, scope: !7)
!50 = !DILocation(line: 85, column: 35, scope: !7)
!51 = !DILocation(line: 88, column: 35, scope: !7)
!52 = !DILocation(line: 89, column: 25, scope: !7)
!53 = !DILocation(line: 89, column: 37, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !45)
!55 = !DILocation(line: 90, column: 25, scope: !7)
!56 = !DILocation(line: 90, column: 37, scope: !7)
!57 = !DILocation(line: 90, column: 4, scope: !7)
