//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0 // -- Begin function triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0
                                        // @triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0
.visible .entry triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_3,
	.param .u32 triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:21:33
	shl.b32 	%r28, %r1, 6;
	ld.param.u64 	%rd10, [triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_abs_add_linalg_vector_norm_mul_reciprocal_sub_0_param_3];
	.loc	1 22 36                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:22:36
	mov.u32 	%r29, %tid.x;
	shl.b32 	%r30, %r29, 1;
	and.b32  	%r31, %r30, 62;
	.loc	1 22 23                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:22:23
	or.b32  	%r32, %r28, %r31;
	.loc	1 23 21                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:23:21
	setp.lt.s32 	%p1, %r32, 64;
	.loc	1 24 19                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:24:19
	shr.s32 	%r34, %r32, 31;
	shr.u32 	%r35, %r34, 28;
	add.s32 	%r36, %r32, %r35;
	.loc	1 25 19                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:25:19
	and.b32  	%r37, %r36, -16;
	sub.s32 	%r38, %r32, %r37;
	.loc	1 26 19                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:26:19
	bfe.s32 	%r39, %r1, 25, 1;
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r32, %r40;
	and.b32  	%r42, %r41, -4;
	sub.s32 	%r43, %r32, %r42;
	.loc	1 28 38                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:28:38
	shl.b32 	%r44, %r36, 2;
	and.b32  	%r45, %r44, -64;
	.loc	1 28 35                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:28:35
	add.s32 	%r46, %r45, %r38;
	.loc	1 28 30                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:28:30
	mul.wide.s32 	%rd12, %r46, 4;
	add.s64 	%rd1, %rd9, %rd12;
	.loc	1 28 43                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:28:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 29 30                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:29:30
	mul.wide.s32 	%rd13, %r43, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 29 35                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 30 40                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:30:40
	add.s32 	%r47, %r46, 16;
	.loc	1 30 30                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:30:30
	mul.wide.s32 	%rd14, %r47, 4;
	add.s64 	%rd3, %rd9, %rd14;
	.loc	1 30 48                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:30:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 31 40                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:31:40
	add.s32 	%r48, %r46, 32;
	.loc	1 31 30                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:31:30
	mul.wide.s32 	%rd15, %r48, 4;
	add.s64 	%rd4, %rd9, %rd15;
	.loc	1 31 48                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:31:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 32 41                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:32:41
	add.s32 	%r49, %r46, 48;
	.loc	1 32 31                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:32:31
	mul.wide.s32 	%rd16, %r49, 4;
	add.s64 	%rd5, %rd9, %rd16;
	.loc	1 32 49                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:32:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	.loc	1 33 31                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:33:31
	add.s64 	%rd6, %rd11, %rd13;
	.loc	1 33 36                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:33:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	and.b32  	%r50, %r12, 2147483647;
	mov.b32 	%f11, %r50;
	and.b32  	%r51, %r13, 2147483647;
	mov.b32 	%f12, %r51;
	.loc	1 34 18                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:34:18
	sub.f32 	%f13, %f1, %f3;
	sub.f32 	%f14, %f2, %f4;
	.loc	1 35 23                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:35:23
	abs.f32 	%f15, %f13;
	abs.f32 	%f16, %f14;
	.loc	1 36 18                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:36:18
	sub.f32 	%f17, %f5, %f3;
	sub.f32 	%f18, %f6, %f4;
	.loc	1 37 23                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:37:23
	abs.f32 	%f19, %f17;
	abs.f32 	%f20, %f18;
	.loc	1 38 18                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:38:18
	add.f32 	%f21, %f15, %f19;
	add.f32 	%f22, %f16, %f20;
	.loc	1 39 18                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:39:18
	sub.f32 	%f23, %f7, %f3;
	sub.f32 	%f24, %f8, %f4;
	.loc	1 40 24                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:40:24
	abs.f32 	%f25, %f23;
	abs.f32 	%f26, %f24;
	.loc	1 41 19                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:41:19
	add.f32 	%f27, %f21, %f25;
	add.f32 	%f28, %f22, %f26;
	.loc	1 42 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:42:20
	sub.f32 	%f29, %f9, %f3;
	sub.f32 	%f30, %f10, %f4;
	.loc	1 43 24                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:43:24
	abs.f32 	%f31, %f29;
	abs.f32 	%f32, %f30;
	.loc	1 44 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:44:20
	add.f32 	%f33, %f27, %f31;
	add.f32 	%f34, %f28, %f32;
	.loc	1 46 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:46:20
	add.f32 	%f35, %f33, 0f3F800000;
	add.f32 	%f36, %f34, 0f3F800000;
	.loc	1 48 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:48:20
	mov.b32 	%r16, %f35;
	mov.b32 	%r15, 1065353216;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f37, %r14;
	mov.b32 	%r19, %f36;
	// begin inline asm
	div.full.f32 %r17, %r15, %r19;
	// end inline asm
	mov.b32 	%f38, %r17;
	.loc	1 51 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:51:20
	sub.f32 	%f39, %f11, %f33;
	sub.f32 	%f40, %f12, %f34;
	.loc	1 52 24                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:52:24
	abs.f32 	%f41, %f39;
	abs.f32 	%f42, %f40;
	.loc	1 53 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:53:20
	add.f32 	%f43, %f41, 0f3F800000;
	add.f32 	%f44, %f42, 0f3F800000;
	.loc	1 54 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:54:20
	mov.b32 	%r22, %f43;
	// begin inline asm
	div.full.f32 %r20, %r15, %r22;
	// end inline asm
	mov.b32 	%f45, %r20;
	mov.b32 	%r25, %f44;
	// begin inline asm
	div.full.f32 %r23, %r15, %r25;
	// end inline asm
	mov.b32 	%f46, %r23;
	.loc	1 56 20                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:56:20
	sub.f32 	%f47, %f37, %f45;
	sub.f32 	%f48, %f38, %f46;
	.loc	1 57 28                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:57:28
	mul.wide.s32 	%rd17, %r32, 4;
	add.s64 	%rd7, %rd8, %rd17;
	.loc	1 57 40                         // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:57:40
	mov.b32 	%r26, %f47;
	mov.b32 	%r27, %f48;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 57 4                          // c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py:57:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6y/c6ybadripvlz7i5ihjmmn4xmkahw3dzo664iqrd5aic2rmmf5ha6.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 121
.b8 98
.b8 97
.b8 100
.b8 114
.b8 105
.b8 112
.b8 118
.b8 108
.b8 122
.b8 55
.b8 105
.b8 53
.b8 105
.b8 104
.b8 106
.b8 109
.b8 109
.b8 110
.b8 52
.b8 120
.b8 109
.b8 107
.b8 97
.b8 104
.b8 119
.b8 51
.b8 100
.b8 122
.b8 111
.b8 54
.b8 54
.b8 52
.b8 105
.b8 113
.b8 114
.b8 100
.b8 53
.b8 97
.b8 105
.b8 99
.b8 50
.b8 114
.b8 109
.b8 109
.b8 102
.b8 53
.b8 104
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
