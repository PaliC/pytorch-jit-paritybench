//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_14 // -- Begin function triton_per_fused_native_group_norm_14
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_14
.visible .entry triton_per_fused_native_group_norm_14(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_14_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_14_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_14_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_14_param_3,
	.param .u32 triton_per_fused_native_group_norm_14_param_4,
	.param .u32 triton_per_fused_native_group_norm_14_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused_native_group_norm_14_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_native_group_norm_14_param_1];
$L__tmp0:
	.loc	1 24 28                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd7, [triton_per_fused_native_group_norm_14_param_2];
	.loc	1 27 26                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:27:26
	mov.u32 	%r27, %tid.x;
	and.b32  	%r28, %r27, 31;
	ld.param.u64 	%rd8, [triton_per_fused_native_group_norm_14_param_3];
	shl.b32 	%r29, %r27, 2;
	and.b32  	%r30, %r29, 1020;
	.loc	1 32 40                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:32:40
	shl.b32 	%r31, %r1, 10;
	.loc	1 32 35                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:32:35
	or.b32  	%r32, %r31, %r30;
	.loc	1 32 30                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:32:30
	mul.wide.s32 	%rd9, %r32, 4;
	add.s64 	%rd1, %rd5, %rd9;
	mov.pred 	%p1, -1;
	.loc	1 32 45                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:32:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f7;
	shfl.sync.bfly.b32	%r34, %r33, 16, 31, -1;
	mov.b32 	%f8, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f9;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f10, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f11;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f12, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f13;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f14, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f15;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f16, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p2, %r28, 0;
	shr.u32 	%r43, %r27, 3;
	and.b32  	%r44, %r43, 28;
	mov.u32 	%r45, global_smem;
	add.s32 	%r6, %r45, %r44;
	mov.b32 	%r7, %f17;
	// begin inline asm
	@%p2 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p3, %r27, 8;
	add.s32 	%r9, %r45, %r29;
	// begin inline asm
	@%p3 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r8;
	shfl.sync.bfly.b32	%r46, %r8, 4, 31, -1;
	mov.b32 	%f19, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f20;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f21, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f22;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f23, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r51, %r27, 7;
	setp.eq.s32 	%p11, %r51, 0;
	and.pred  	%p4, %p3, %p11;
	mov.b32 	%r11, %f24;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f25, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f26, %f25, 0f00000000;
$L__tmp3:
	.loc	1 38 18                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:38:18
	mov.b32 	%r13, %f26;
	mov.b32 	%r14, 1149239296;
	// begin inline asm
	div.full.f32 %r25, %r13, %r14;
	// end inline asm
	mov.b32 	%f27, %r25;
	.loc	1 39 18                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:39:18
	sub.f32 	%f28, %f1, %f27;
	sub.f32 	%f29, %f2, %f27;
	sub.f32 	%f30, %f3, %f27;
	sub.f32 	%f31, %f4, %f27;
	.loc	1 40 19                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:40:19
	mul.f32 	%f32, %f29, %f29;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f33, %f28, %f28, %f32;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f35;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f36, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f37;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f38, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f39;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f40, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f41;
	shfl.sync.bfly.b32	%r59, %r58, 2, 31, -1;
	mov.b32 	%f42, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f43;
	shfl.sync.bfly.b32	%r61, %r60, 1, 31, -1;
	mov.b32 	%f44, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f45;
	// begin inline asm
	@%p2 st.shared.b32 [ %r6 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 ld.shared.b32 %r17, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r17;
	shfl.sync.bfly.b32	%r62, %r17, 4, 31, -1;
	mov.b32 	%f47, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f48;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f49, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f50;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f51, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f52;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f53, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f54, %f53, 0f00000000;
$L__tmp6:
	.loc	1 44 20                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:44:20
	mov.b32 	%r22, %f54;
	// begin inline asm
	div.full.f32 %r21, %r22, %r14;
	// end inline asm
	mov.b32 	%f55, %r21;
	.loc	1 46 20                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:46:20
	add.f32 	%f56, %f55, 0f3727C5AC;
	.loc	1 47 28                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:47:28
	rsqrt.approx.ftz.f32 	%f57, %f56;
	.loc	1 48 25                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:48:25
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd2, %rd8, %rd10;
	.loc	1 48 37                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:48:37
	and.b32  	%r67, %r27, 255;
	setp.eq.s32 	%p8, %r67, 0;
	mov.b32 	%r24, %f57;
	// begin inline asm
	@%p8 st.global.b32 [ %rd2 + 0 ], { %r24 };
	// end inline asm
	.loc	1 49 25                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:49:25
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 49 36                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:49:36
	// begin inline asm
	@%p8 st.global.b32 [ %rd3 + 0 ], { %r25 };
	// end inline asm
	.loc	1 50 25                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:50:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 50 37                         // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:50:37
	// begin inline asm
	@%p8 st.global.b32 [ %rd4 + 0 ], { %r22 };
	// end inline asm
	.loc	1 50 4                          // cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py:50:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/q2/cq2wdb55etx3iofsloak3bca5ghvqzdji73ypn7omcnhbvgerydo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 254                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 50
.b8 119
.b8 100
.b8 98
.b8 53
.b8 53
.b8 101
.b8 116
.b8 120
.b8 51
.b8 105
.b8 111
.b8 102
.b8 115
.b8 108
.b8 111
.b8 97
.b8 107
.b8 51
.b8 98
.b8 99
.b8 97
.b8 53
.b8 103
.b8 104
.b8 118
.b8 113
.b8 122
.b8 100
.b8 106
.b8 105
.b8 55
.b8 51
.b8 121
.b8 112
.b8 110
.b8 55
.b8 111
.b8 109
.b8 99
.b8 110
.b8 104
.b8 98
.b8 118
.b8 103
.b8 101
.b8 114
.b8 121
.b8 100
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
