; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 2, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 1, !dbg !12
  %9 = shl nuw nsw i32 %8, 1, !dbg !12
  %.lobit1 = lshr i32 %7, 3, !dbg !12
  %10 = and i32 %.lobit1, 3, !dbg !12
  %11 = or disjoint i32 %6, %9, !dbg !13
  %12 = or disjoint i32 %6, %10, !dbg !13
  %13 = icmp slt i32 %11, 4, !dbg !14
  %14 = icmp slt i32 %12, 4, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %16 = shl i32 %15, 4, !dbg !16
  %17 = lshr i32 %7, 1, !dbg !17
  %18 = and i32 %17, 15, !dbg !17
  %19 = shl i32 %7, 1, !dbg !17
  %20 = and i32 %19, 14, !dbg !17
  %21 = or disjoint i32 %16, %18, !dbg !18
  %22 = or disjoint i32 %16, %20, !dbg !18
  %23 = icmp slt i32 %21, 16, !dbg !19
  %24 = icmp slt i32 %22, 16, !dbg !19
  %25 = shl i32 %21, 2, !dbg !20
  %26 = add i32 %25, %11, !dbg !21
  %27 = sext i32 %26 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = and i1 %13, %23, !dbg !23
  %30 = and i1 %14, %24, !dbg !23
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %29) #2, !dbg !24
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !24
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !24
  %34 = shl i32 %12, 4, !dbg !25
  %35 = add i32 %22, %34, !dbg !26
  %36 = sext i32 %35 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !27
  %38 = shl nuw nsw i32 %8, 5, !dbg !28
  %39 = or disjoint i32 %38, %18, !dbg !28
  %40 = and i32 %19, 62, !dbg !28
  %.idx = shl nuw nsw i32 %8, 3, !dbg !28
  %41 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !28
  %42 = getelementptr inbounds float, ptr addrspace(3) %41, i32 %39, !dbg !28
  %43 = insertelement <1 x i32> poison, i32 %32, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %42, <1 x i32> %43, i1 true) #2, !dbg !28
  %44 = or disjoint i32 %39, 16, !dbg !28
  %45 = lshr i32 %44, 4, !dbg !28
  %46 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %45, !dbg !28
  %47 = getelementptr inbounds float, ptr addrspace(3) %46, i32 %44, !dbg !28
  %48 = insertelement <1 x i32> poison, i32 %33, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %47, <1 x i32> %48, i1 true) #2, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %49 = lshr i32 %40, 4, !dbg !28
  %50 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %49, !dbg !28
  %51 = getelementptr inbounds float, ptr addrspace(3) %50, i32 %40, !dbg !28
  %52 = load i32, ptr addrspace(3) %51, align 4, !dbg !28
  %53 = or disjoint i32 %40, 1, !dbg !28
  %54 = getelementptr inbounds float, ptr addrspace(3) %50, i32 %53, !dbg !28
  %55 = load i32, ptr addrspace(3) %54, align 4, !dbg !28
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %52, i32 %55, ptr addrspace(1) %37, i1 %30) #2, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cexieuifxu3pemcju2csk6cinru6vrh6y7o7clul3xk5cqpybokx.py", directory: "inductor_cache/ex")
!4 = !{ptr @triton_poi_fused_clone_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_5, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_5", linkageName: "triton_poi_fused_clone_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 37, scope: !7)
!21 = !DILocation(line: 30, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 50, scope: !7)
!24 = !DILocation(line: 30, column: 42, scope: !7)
!25 = !DILocation(line: 31, column: 33, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 25, scope: !7)
!28 = !DILocation(line: 31, column: 44, scope: !7)
!29 = !DILocation(line: 31, column: 4, scope: !7)
