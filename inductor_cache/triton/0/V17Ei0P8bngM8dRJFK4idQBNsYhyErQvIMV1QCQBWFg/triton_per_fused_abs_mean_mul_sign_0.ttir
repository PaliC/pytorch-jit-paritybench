#loc = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":19:0)
#loc1 = loc(unknown)
#loc8 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":33:24)
#loc23 = loc(callsite(#loc1 at #loc8))
module {
  tt.func public @triton_per_fused_abs_mean_mul_sign_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %5 = math.absf %4 : tensor<1x16xf32> loc(#loc6)
    %6 = "tt.reduce"(%5) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc8)), %arg4: f32 loc(callsite(#loc1 at #loc8))):
      %19 = arith.addf %arg3, %arg4 : f32 loc(#loc25)
      tt.reduce.return %19 : f32 loc(#loc22)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc22)
    %7 = tt.expand_dims %6 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc10)
    %8 = arith.cmpf olt, %cst, %4 : tensor<1x16xf32> loc(#loc11)
    %9 = arith.extui %8 : tensor<1x16xi1> to tensor<1x16xi8> loc(#loc12)
    %10 = arith.cmpf olt, %4, %cst : tensor<1x16xf32> loc(#loc13)
    %11 = arith.extui %10 : tensor<1x16xi1> to tensor<1x16xi8> loc(#loc14)
    %12 = arith.subi %9, %11 : tensor<1x16xi8> loc(#loc15)
    %13 = arith.sitofp %12 : tensor<1x16xi8> to tensor<1x16xf32> loc(#loc16)
    %14 = arith.divf %7, %cst_0 : tensor<1x1xf32> loc(#loc17)
    %15 = tt.broadcast %14 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc18)
    %16 = arith.mulf %13, %15 : tensor<1x16xf32> loc(#loc18)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %18 = tt.addptr %17, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc19)
    tt.store %18, %16 : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    tt.return loc(#loc21)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":26:26)
#loc3 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":26:34)
#loc4 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":30:30)
#loc5 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":30:35)
#loc6 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":31:23)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc10 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":33:27)
#loc11 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":35:18)
#loc12 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":36:19)
#loc13 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":37:18)
#loc14 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":38:19)
#loc15 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":39:19)
#loc16 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":40:21)
#loc17 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":42:19)
#loc18 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":43:20)
#loc19 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":44:25)
#loc20 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":44:72)
#loc21 = loc("inductor_cache/vv/cvvpmzy456jtbpepmg4ool5t5svje4gqq6vuvuoybr42gelwyhig.py":44:4)
#loc22 = loc(callsite(#loc7 at #loc8))
#loc24 = loc(callsite(#loc9 at #loc7))
#loc25 = loc(callsite(#loc24 at #loc8))
