#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 2], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [4, 8], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0)
#loc1 = loc(unknown)
#loc61 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":50:24)
#loc90 = loc(callsite(#loc1 at #loc61))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_max_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<16> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<8x16xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<5> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<6> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<7> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<9> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<10> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<11> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<12> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<13> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<14> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<15> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<1.600000e+01> : tensor<8x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<8x1xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_0 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst : tensor<8x1xi32, #blocked> loc(#loc6)
    %12 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16xi32, #blocked1> loc(#loc7)
    %14 = arith.muli %8, %cst_0 : tensor<8x1xi32, #blocked1> loc(#loc8)
    %15 = arith.muli %9, %cst : tensor<8x1xi32, #blocked> loc(#loc8)
    %16 = tt.broadcast %13 : tensor<1x16xi32, #blocked1> -> tensor<8x16xi32, #blocked1> loc(#loc9)
    %17 = tt.broadcast %14 : tensor<8x1xi32, #blocked1> -> tensor<8x16xi32, #blocked1> loc(#loc9)
    %18 = arith.addi %16, %17 : tensor<8x16xi32, #blocked1> loc(#loc9)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>, #blocked1> loc(#loc10)
    %20 = tt.addptr %19, %18 : tensor<8x16x!tt.ptr<f32>, #blocked1>, tensor<8x16xi32, #blocked1> loc(#loc10)
    %21 = tt.broadcast %10 : tensor<8x1xi1, #blocked1> -> tensor<8x16xi1, #blocked1> loc(#loc11)
    %22 = tt.load %20, %21, %cst_1 : tensor<8x16x!tt.ptr<f32>, #blocked1> loc(#loc11)
    %23 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc12)
    %24 = tt.addptr %23, %15 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc12)
    %25 = tt.load %24, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %26 = arith.addi %15, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc14)
    %27 = tt.addptr %23, %26 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc15)
    %28 = tt.load %27, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc16)
    %29 = arith.addi %15, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc17)
    %30 = tt.addptr %23, %29 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc18)
    %31 = tt.load %30, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %32 = arith.addi %15, %cst_4 : tensor<8x1xi32, #blocked> loc(#loc20)
    %33 = tt.addptr %23, %32 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc21)
    %34 = tt.load %33, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc22)
    %35 = arith.addi %15, %cst_5 : tensor<8x1xi32, #blocked> loc(#loc23)
    %36 = tt.addptr %23, %35 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc24)
    %37 = tt.load %36, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    %38 = arith.addi %15, %cst_6 : tensor<8x1xi32, #blocked> loc(#loc26)
    %39 = tt.addptr %23, %38 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc27)
    %40 = tt.load %39, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc28)
    %41 = arith.addi %15, %cst_7 : tensor<8x1xi32, #blocked> loc(#loc29)
    %42 = tt.addptr %23, %41 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc30)
    %43 = tt.load %42, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %44 = arith.addi %15, %cst_8 : tensor<8x1xi32, #blocked> loc(#loc32)
    %45 = tt.addptr %23, %44 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc33)
    %46 = tt.load %45, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc34)
    %47 = arith.addi %15, %cst_9 : tensor<8x1xi32, #blocked> loc(#loc35)
    %48 = tt.addptr %23, %47 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc36)
    %49 = tt.load %48, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %50 = arith.addi %15, %cst_10 : tensor<8x1xi32, #blocked> loc(#loc38)
    %51 = tt.addptr %23, %50 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc39)
    %52 = tt.load %51, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc40)
    %53 = arith.addi %15, %cst_11 : tensor<8x1xi32, #blocked> loc(#loc41)
    %54 = tt.addptr %23, %53 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc42)
    %55 = tt.load %54, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc43)
    %56 = arith.addi %15, %cst_12 : tensor<8x1xi32, #blocked> loc(#loc44)
    %57 = tt.addptr %23, %56 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc45)
    %58 = tt.load %57, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc46)
    %59 = arith.addi %15, %cst_13 : tensor<8x1xi32, #blocked> loc(#loc47)
    %60 = tt.addptr %23, %59 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc48)
    %61 = tt.load %60, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc49)
    %62 = arith.addi %15, %cst_14 : tensor<8x1xi32, #blocked> loc(#loc50)
    %63 = tt.addptr %23, %62 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc51)
    %64 = tt.load %63, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc52)
    %65 = arith.addi %15, %cst_15 : tensor<8x1xi32, #blocked> loc(#loc53)
    %66 = tt.addptr %23, %65 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc54)
    %67 = tt.load %66, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc55)
    %68 = arith.addi %15, %cst_16 : tensor<8x1xi32, #blocked> loc(#loc56)
    %69 = tt.addptr %23, %68 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc57)
    %70 = tt.load %69, %11 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc58)
    %71 = arith.select %21, %22, %cst_1 : tensor<8x16xi1, #blocked1>, tensor<8x16xf32, #blocked1> loc(#loc59)
    %72 = "tt.reduce"(%71) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc61)), %arg5: f32 loc(callsite(#loc1 at #loc61))):
      %139 = arith.addf %arg4, %arg5 : f32 loc(#loc152)
      tt.reduce.return %139 : f32 loc(#loc89)
    }) : (tensor<8x16xf32, #blocked1>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc89)
    %73 = triton_gpu.convert_layout %72 {fastmath = #arith.fastmath<none>} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc63)
    %74 = tt.expand_dims %73 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc64)
    %75 = arith.cmpf ogt, %25, %28 : tensor<8x1xf32, #blocked> loc(#loc92)
    %76 = arith.cmpf une, %25, %25 : tensor<8x1xf32, #blocked> loc(#loc93)
    %77 = arith.ori %75, %76 : tensor<8x1xi1, #blocked> loc(#loc94)
    %78 = arith.select %77, %25, %28 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc95)
    %79 = arith.cmpf ogt, %78, %31 : tensor<8x1xf32, #blocked> loc(#loc96)
    %80 = arith.cmpf une, %78, %78 : tensor<8x1xf32, #blocked> loc(#loc97)
    %81 = arith.ori %79, %80 : tensor<8x1xi1, #blocked> loc(#loc98)
    %82 = arith.select %81, %78, %31 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc99)
    %83 = arith.cmpf ogt, %82, %34 : tensor<8x1xf32, #blocked> loc(#loc100)
    %84 = arith.cmpf une, %82, %82 : tensor<8x1xf32, #blocked> loc(#loc101)
    %85 = arith.ori %83, %84 : tensor<8x1xi1, #blocked> loc(#loc102)
    %86 = arith.select %85, %82, %34 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc103)
    %87 = arith.cmpf ogt, %37, %40 : tensor<8x1xf32, #blocked> loc(#loc104)
    %88 = arith.cmpf une, %37, %37 : tensor<8x1xf32, #blocked> loc(#loc105)
    %89 = arith.ori %87, %88 : tensor<8x1xi1, #blocked> loc(#loc106)
    %90 = arith.select %89, %37, %40 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc107)
    %91 = arith.cmpf ogt, %90, %43 : tensor<8x1xf32, #blocked> loc(#loc108)
    %92 = arith.cmpf une, %90, %90 : tensor<8x1xf32, #blocked> loc(#loc109)
    %93 = arith.ori %91, %92 : tensor<8x1xi1, #blocked> loc(#loc110)
    %94 = arith.select %93, %90, %43 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc111)
    %95 = arith.cmpf ogt, %94, %46 : tensor<8x1xf32, #blocked> loc(#loc112)
    %96 = arith.cmpf une, %94, %94 : tensor<8x1xf32, #blocked> loc(#loc113)
    %97 = arith.ori %95, %96 : tensor<8x1xi1, #blocked> loc(#loc114)
    %98 = arith.select %97, %94, %46 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc115)
    %99 = arith.cmpf ogt, %86, %98 : tensor<8x1xf32, #blocked> loc(#loc116)
    %100 = arith.cmpf une, %86, %86 : tensor<8x1xf32, #blocked> loc(#loc117)
    %101 = arith.ori %99, %100 : tensor<8x1xi1, #blocked> loc(#loc118)
    %102 = arith.select %101, %86, %98 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc119)
    %103 = arith.cmpf ogt, %49, %52 : tensor<8x1xf32, #blocked> loc(#loc120)
    %104 = arith.cmpf une, %49, %49 : tensor<8x1xf32, #blocked> loc(#loc121)
    %105 = arith.ori %103, %104 : tensor<8x1xi1, #blocked> loc(#loc122)
    %106 = arith.select %105, %49, %52 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc123)
    %107 = arith.cmpf ogt, %106, %55 : tensor<8x1xf32, #blocked> loc(#loc124)
    %108 = arith.cmpf une, %106, %106 : tensor<8x1xf32, #blocked> loc(#loc125)
    %109 = arith.ori %107, %108 : tensor<8x1xi1, #blocked> loc(#loc126)
    %110 = arith.select %109, %106, %55 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc127)
    %111 = arith.cmpf ogt, %110, %58 : tensor<8x1xf32, #blocked> loc(#loc128)
    %112 = arith.cmpf une, %110, %110 : tensor<8x1xf32, #blocked> loc(#loc129)
    %113 = arith.ori %111, %112 : tensor<8x1xi1, #blocked> loc(#loc130)
    %114 = arith.select %113, %110, %58 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc131)
    %115 = arith.cmpf ogt, %102, %114 : tensor<8x1xf32, #blocked> loc(#loc132)
    %116 = arith.cmpf une, %102, %102 : tensor<8x1xf32, #blocked> loc(#loc133)
    %117 = arith.ori %115, %116 : tensor<8x1xi1, #blocked> loc(#loc134)
    %118 = arith.select %117, %102, %114 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc135)
    %119 = arith.cmpf ogt, %61, %64 : tensor<8x1xf32, #blocked> loc(#loc136)
    %120 = arith.cmpf une, %61, %61 : tensor<8x1xf32, #blocked> loc(#loc137)
    %121 = arith.ori %119, %120 : tensor<8x1xi1, #blocked> loc(#loc138)
    %122 = arith.select %121, %61, %64 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc139)
    %123 = arith.cmpf ogt, %122, %67 : tensor<8x1xf32, #blocked> loc(#loc140)
    %124 = arith.cmpf une, %122, %122 : tensor<8x1xf32, #blocked> loc(#loc141)
    %125 = arith.ori %123, %124 : tensor<8x1xi1, #blocked> loc(#loc142)
    %126 = arith.select %125, %122, %67 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc143)
    %127 = arith.cmpf ogt, %126, %70 : tensor<8x1xf32, #blocked> loc(#loc144)
    %128 = arith.cmpf une, %126, %126 : tensor<8x1xf32, #blocked> loc(#loc145)
    %129 = arith.ori %127, %128 : tensor<8x1xi1, #blocked> loc(#loc146)
    %130 = arith.select %129, %126, %70 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc147)
    %131 = arith.cmpf ogt, %118, %130 : tensor<8x1xf32, #blocked> loc(#loc148)
    %132 = arith.cmpf une, %118, %118 : tensor<8x1xf32, #blocked> loc(#loc149)
    %133 = arith.ori %131, %132 : tensor<8x1xi1, #blocked> loc(#loc150)
    %134 = arith.select %133, %118, %130 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc151)
    %135 = arith.divf %74, %cst_17 : tensor<8x1xf32, #blocked> loc(#loc84)
    %136 = arith.addf %134, %135 : tensor<8x1xf32, #blocked> loc(#loc63)
    gpu.barrier loc(#loc85)
    %137 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc86)
    %138 = tt.addptr %137, %9 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc86)
    tt.store %138, %136, %11 : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc87)
    tt.return loc(#loc88)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":23:28)
#loc3 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":23:33)
#loc4 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":24:44)
#loc5 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":24:23)
#loc6 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":25:21)
#loc7 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":26:34)
#loc8 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:38)
#loc9 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:35)
#loc10 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:30)
#loc11 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":31:43)
#loc12 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":32:30)
#loc13 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":32:38)
#loc14 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:34)
#loc15 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:30)
#loc16 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":33:42)
#loc17 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:34)
#loc18 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:30)
#loc19 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":34:42)
#loc20 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:35)
#loc21 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:31)
#loc22 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":35:43)
#loc23 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:35)
#loc24 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:31)
#loc25 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":36:43)
#loc26 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:35)
#loc27 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:31)
#loc28 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":37:43)
#loc29 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:35)
#loc30 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:31)
#loc31 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":38:43)
#loc32 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:35)
#loc33 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:31)
#loc34 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":39:43)
#loc35 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:35)
#loc36 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:31)
#loc37 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":40:43)
#loc38 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:35)
#loc39 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:31)
#loc40 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":41:43)
#loc41 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:36)
#loc42 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:31)
#loc43 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":42:44)
#loc44 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:36)
#loc45 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:31)
#loc46 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":43:44)
#loc47 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:36)
#loc48 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:31)
#loc49 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":44:44)
#loc50 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:36)
#loc51 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:31)
#loc52 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":45:44)
#loc53 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:36)
#loc54 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:31)
#loc55 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":46:44)
#loc56 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:36)
#loc57 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:31)
#loc58 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":47:44)
#loc59 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":49:33)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc63 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":68:20)
#loc64 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":50:27)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc66 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":51:40)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc70 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":52:40)
#loc71 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":53:41)
#loc72 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":54:42)
#loc73 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":55:42)
#loc74 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":56:42)
#loc75 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":57:42)
#loc76 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":58:42)
#loc77 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":59:42)
#loc78 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":60:42)
#loc79 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":61:42)
#loc80 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":62:42)
#loc81 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":63:42)
#loc82 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":64:42)
#loc83 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":65:42)
#loc84 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":67:19)
#loc85 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":69:4)
#loc86 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:28)
#loc87 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:40)
#loc88 = loc("inductor_cache/y5/cy5cvx3ueega6nhry5arrwfular6ediidwkvjrucahflz7bag6se.py":70:4)
#loc89 = loc(callsite(#loc60 at #loc61))
#loc91 = loc(callsite(#loc62 at #loc60))
#loc92 = loc(callsite(#loc65 at #loc66))
#loc93 = loc(callsite(#loc67 at #loc66))
#loc94 = loc(callsite(#loc68 at #loc66))
#loc95 = loc(callsite(#loc69 at #loc66))
#loc96 = loc(callsite(#loc65 at #loc70))
#loc97 = loc(callsite(#loc67 at #loc70))
#loc98 = loc(callsite(#loc68 at #loc70))
#loc99 = loc(callsite(#loc69 at #loc70))
#loc100 = loc(callsite(#loc65 at #loc71))
#loc101 = loc(callsite(#loc67 at #loc71))
#loc102 = loc(callsite(#loc68 at #loc71))
#loc103 = loc(callsite(#loc69 at #loc71))
#loc104 = loc(callsite(#loc65 at #loc72))
#loc105 = loc(callsite(#loc67 at #loc72))
#loc106 = loc(callsite(#loc68 at #loc72))
#loc107 = loc(callsite(#loc69 at #loc72))
#loc108 = loc(callsite(#loc65 at #loc73))
#loc109 = loc(callsite(#loc67 at #loc73))
#loc110 = loc(callsite(#loc68 at #loc73))
#loc111 = loc(callsite(#loc69 at #loc73))
#loc112 = loc(callsite(#loc65 at #loc74))
#loc113 = loc(callsite(#loc67 at #loc74))
#loc114 = loc(callsite(#loc68 at #loc74))
#loc115 = loc(callsite(#loc69 at #loc74))
#loc116 = loc(callsite(#loc65 at #loc75))
#loc117 = loc(callsite(#loc67 at #loc75))
#loc118 = loc(callsite(#loc68 at #loc75))
#loc119 = loc(callsite(#loc69 at #loc75))
#loc120 = loc(callsite(#loc65 at #loc76))
#loc121 = loc(callsite(#loc67 at #loc76))
#loc122 = loc(callsite(#loc68 at #loc76))
#loc123 = loc(callsite(#loc69 at #loc76))
#loc124 = loc(callsite(#loc65 at #loc77))
#loc125 = loc(callsite(#loc67 at #loc77))
#loc126 = loc(callsite(#loc68 at #loc77))
#loc127 = loc(callsite(#loc69 at #loc77))
#loc128 = loc(callsite(#loc65 at #loc78))
#loc129 = loc(callsite(#loc67 at #loc78))
#loc130 = loc(callsite(#loc68 at #loc78))
#loc131 = loc(callsite(#loc69 at #loc78))
#loc132 = loc(callsite(#loc65 at #loc79))
#loc133 = loc(callsite(#loc67 at #loc79))
#loc134 = loc(callsite(#loc68 at #loc79))
#loc135 = loc(callsite(#loc69 at #loc79))
#loc136 = loc(callsite(#loc65 at #loc80))
#loc137 = loc(callsite(#loc67 at #loc80))
#loc138 = loc(callsite(#loc68 at #loc80))
#loc139 = loc(callsite(#loc69 at #loc80))
#loc140 = loc(callsite(#loc65 at #loc81))
#loc141 = loc(callsite(#loc67 at #loc81))
#loc142 = loc(callsite(#loc68 at #loc81))
#loc143 = loc(callsite(#loc69 at #loc81))
#loc144 = loc(callsite(#loc65 at #loc82))
#loc145 = loc(callsite(#loc67 at #loc82))
#loc146 = loc(callsite(#loc68 at #loc82))
#loc147 = loc(callsite(#loc69 at #loc82))
#loc148 = loc(callsite(#loc65 at #loc83))
#loc149 = loc(callsite(#loc67 at #loc83))
#loc150 = loc(callsite(#loc68 at #loc83))
#loc151 = loc(callsite(#loc69 at #loc83))
#loc152 = loc(callsite(#loc91 at #loc61))
