//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_11,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_12
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<10>;
	.reg .b32 	%r<51>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:21:33
	shl.b32 	%r21, %r1, 7;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_3];
	.loc	1 22 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:22:36
	mov.u32 	%r22, %tid.x;
	and.b32  	%r23, %r22, 127;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_4];
	.loc	1 22 23                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:22:23
	or.b32  	%r24, %r21, %r23;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_5];
	.loc	1 25 21                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:25:21
	bfe.s32 	%r25, %r1, 24, 1;
	shr.u32 	%r26, %r25, 28;
	add.s32 	%r27, %r24, %r26;
	shr.s32 	%r28, %r27, 4;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_6];
	.loc	1 25 27                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:25:27
	shr.s32 	%r29, %r27, 31;
	shr.u32 	%r30, %r29, 23;
	add.s32 	%r31, %r28, %r30;
	and.b32  	%r32, %r31, -512;
	sub.s32 	%r33, %r28, %r32;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_7];
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_8];
	.loc	1 27 21                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:27:21
	shr.s32 	%r35, %r24, 31;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r24, %r36;
	shr.s32 	%r38, %r37, 2;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_9];
	.loc	1 26 19                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:26:19
	and.b32  	%r39, %r37, -4;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_10];
	sub.s32 	%r40, %r24, %r39;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_24_param_11];
	.loc	1 27 26                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:27:26
	shr.u32 	%r41, %r38, 30;
	add.s32 	%r42, %r38, %r41;
	and.b32  	%r43, %r42, 65532;
	sub.s32 	%r44, %r38, %r43;
	.loc	1 29 34                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:29:34
	mul.wide.s32 	%rd26, %r24, 4;
	add.s64 	%rd1, %rd14, %rd26;
	mov.pred 	%p1, -1;
	.loc	1 29 39                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:29:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:30:30
	mul.wide.s32 	%rd27, %r33, 4;
	add.s64 	%rd2, %rd15, %rd27;
	.loc	1 30 35                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:30:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:31:30
	add.s64 	%rd3, %rd16, %rd27;
	.loc	1 31 35                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:31:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:32:30
	add.s64 	%rd4, %rd17, %rd27;
	.loc	1 32 35                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	.loc	1 33 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:33:31
	add.s64 	%rd5, %rd18, %rd27;
	.loc	1 33 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:33:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:34:31
	add.s64 	%rd6, %rd19, %rd27;
	.loc	1 34 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:34:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 45                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:45
	cvt.u16.u32 	%rs1, %r44;
	and.b16  	%rs2, %rs1, 128;
	shr.u16 	%rs3, %rs2, 7;
	add.s16 	%rs4, %rs1, %rs3;
	cvt.s16.s8 	%rs5, %rs4;
	shr.s16 	%rs6, %rs5, 1;
	.loc	1 35 39                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:39
	mul.wide.s16 	%r45, %rs6, 4;
	.loc	1 35 59                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:59
	and.b16  	%rs7, %rs4, 254;
	sub.s16 	%rs8, %rs1, %rs7;
	.loc	1 35 54                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:54
	cvt.s16.s8 	%rs9, %rs8;
	mul.wide.s16 	%r46, %rs9, 8;
	.loc	1 35 68                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:68
	and.b32  	%r47, %r27, -16;
	.loc	1 35 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:36
	add.s32 	%r48, %r47, %r40;
	.loc	1 35 50                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:50
	add.s32 	%r49, %r48, %r45;
	.loc	1 35 65                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:65
	add.s32 	%r50, %r49, %r46;
	.loc	1 35 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:31
	mul.wide.s32 	%rd28, %r50, 4;
	add.s64 	%rd7, %rd20, %rd28;
	.loc	1 35 73                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:73
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:36:31
	add.s64 	%rd8, %rd21, %rd27;
	.loc	1 36 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:36:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:37:31
	add.s64 	%rd9, %rd22, %rd27;
	.loc	1 37 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:37:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r10;
	.loc	1 38 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:38:31
	add.s64 	%rd10, %rd23, %rd27;
	.loc	1 38 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:38:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:39:31
	add.s64 	%rd11, %rd24, %rd27;
	.loc	1 39 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:39:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 43 18                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:43:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	.loc	1 44 26                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:44:26
	sqrt.approx.ftz.f32 	%f4, %f3;
	.loc	1 46 19                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:46:19
	mov.b32 	%r15, %f4;
	mov.b32 	%r14, 1065353216;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f5, %r13;
	.loc	1 53 20                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:53:20
	add.f32 	%f6, %f2, 0f3727C5AC;
	.loc	1 54 27                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:54:27
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 35 73                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:35:73
	mov.b32 	%f8, %r8;
	.loc	1 31 35                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:31:35
	mov.b32 	%f9, %r4;
	mov.b32 	%f10, %r9;
	.loc	1 29 39                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:29:39
	mov.b32 	%f11, %r2;
	.loc	1 30 35                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:30:35
	mov.b32 	%f12, %r3;
	.loc	1 40 18                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:40:18
	add.f32 	%f13, %f11, %f12;
	.loc	1 33 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:33:36
	mov.b32 	%f14, %r6;
	mov.b32 	%f15, %r11;
	.loc	1 34 36                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:34:36
	mov.b32 	%f16, %r7;
	mov.b32 	%f17, %r12;
	.loc	1 55 19                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:55:19
	mov.b32 	%r18, %f7;
	// begin inline asm
	div.full.f32 %r16, %r14, %r18;
	// end inline asm
	mov.b32 	%f18, %r16;
	.loc	1 41 18                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:41:18
	sub.f32 	%f19, %f8, %f10;
	sub.f32 	%f20, %f13, %f9;
	.loc	1 49 19                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:49:19
	mul.f32 	%f21, %f19, %f18;
	mul.f32 	%f22, %f20, %f5;
	.loc	1 51 20                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:51:20
	fma.rn.f32 	%f23, %f21, %f15, %f17;
	fma.rn.f32 	%f24, %f22, %f14, %f16;
	.loc	1 60 20                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:60:20
	add.f32 	%f25, %f24, %f23;
	.loc	1 61 39                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:61:39
	mov.b32 	%r19, %f13;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r19 };
	// end inline asm
	.loc	1 62 25                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:62:25
	add.s64 	%rd13, %rd25, %rd26;
	.loc	1 62 37                         // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:62:37
	mov.b32 	%r20, %f25;
	// begin inline asm
	@%p1 st.global.b32 [ %rd13 + 0 ], { %r20 };
	// end inline asm
	.loc	1 62 4                          // cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py:62:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wu/cwuh5i744o3toufxxyvbwog4gumnwn4e4il7xjdbpfcvthp6ta23.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 117
.b8 104
.b8 53
.b8 105
.b8 55
.b8 52
.b8 52
.b8 111
.b8 51
.b8 116
.b8 111
.b8 117
.b8 102
.b8 120
.b8 120
.b8 121
.b8 118
.b8 98
.b8 119
.b8 111
.b8 103
.b8 52
.b8 103
.b8 117
.b8 109
.b8 110
.b8 119
.b8 110
.b8 52
.b8 101
.b8 52
.b8 105
.b8 108
.b8 55
.b8 120
.b8 106
.b8 100
.b8 98
.b8 112
.b8 102
.b8 99
.b8 118
.b8 116
.b8 104
.b8 112
.b8 54
.b8 116
.b8 97
.b8 50
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
