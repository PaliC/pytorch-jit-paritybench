; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 10, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 2, !dbg !12
  %12 = and i32 %11, 508, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = or disjoint i32 %13, 512, !dbg !13
  %.frozen = freeze i32 %13, !dbg !14
  %15 = sdiv i32 %.frozen, 98304, !dbg !14
  %16 = mul i32 %15, 98304, !dbg !15
  %.decomposed = sub i32 %.frozen, %16, !dbg !15
  %.frozen1 = freeze i32 %14, !dbg !14
  %17 = sdiv i32 %.frozen1, 98304, !dbg !14
  %18 = mul i32 %17, 98304, !dbg !15
  %.decomposed2 = sub i32 %.frozen1, %18, !dbg !15
  %19 = sext i32 %13 to i64, !dbg !16
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !16
  %21 = sext i32 %14 to i64, !dbg !16
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !16
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !17
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !17
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !17
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !17
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !17
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !17
  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !17
  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !17
  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !17
  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !17
  %33 = mul i32 %15, 491520, !dbg !18
  %34 = mul i32 %17, 491520, !dbg !18
  %35 = add i32 %33, %.decomposed, !dbg !19
  %36 = add i32 %34, %.decomposed2, !dbg !19
  %37 = sext i32 %35 to i64, !dbg !20
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !20
  %39 = sext i32 %36 to i64, !dbg !20
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !20
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %24, i32 %25, i32 %26, i32 %27, ptr addrspace(1) %38, i1 true) #1, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %29, i32 %30, i32 %31, i32 %32, ptr addrspace(1) %40, i1 true) #1, !dbg !21
  %41 = mul i32 %15, 540672, !dbg !22
  %42 = mul i32 %17, 540672, !dbg !22
  %43 = add i32 %41, %.decomposed, !dbg !23
  %44 = add i32 %42, %.decomposed2, !dbg !23
  %45 = sext i32 %43 to i64, !dbg !24
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !24
  %47 = sext i32 %44 to i64, !dbg !24
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %24, i32 %25, i32 %26, i32 %27, ptr addrspace(1) %46, i1 true) #1, !dbg !25
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %29, i32 %30, i32 %31, i32 %32, ptr addrspace(1) %48, i1 true) #1, !dbg !25
  %49 = mul i32 %15, 589824, !dbg !26
  %50 = mul i32 %17, 589824, !dbg !26
  %51 = add i32 %49, %.decomposed, !dbg !27
  %52 = add i32 %50, %.decomposed2, !dbg !27
  %53 = sext i32 %51 to i64, !dbg !28
  %54 = getelementptr float, ptr addrspace(1) %3, i64 %53, !dbg !28
  %55 = sext i32 %52 to i64, !dbg !28
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %55, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %24, i32 %25, i32 %26, i32 %27, ptr addrspace(1) %54, i1 true) #1, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %29, i32 %30, i32 %31, i32 %32, ptr addrspace(1) %56, i1 true) #1, !dbg !29
  %57 = mul i32 %15, 638976, !dbg !30
  %58 = mul i32 %17, 638976, !dbg !30
  %59 = add i32 %57, %.decomposed, !dbg !31
  %60 = add i32 %58, %.decomposed2, !dbg !31
  %61 = sext i32 %59 to i64, !dbg !32
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %61, !dbg !32
  %63 = sext i32 %60 to i64, !dbg !32
  %64 = getelementptr float, ptr addrspace(1) %4, i64 %63, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %24, i32 %25, i32 %26, i32 %27, ptr addrspace(1) %62, i1 true) #1, !dbg !33
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %29, i32 %30, i32 %31, i32 %32, ptr addrspace(1) %64, i1 true) #1, !dbg !33
  %65 = mul i32 %15, 688128, !dbg !34
  %66 = mul i32 %17, 688128, !dbg !34
  %67 = add i32 %65, %.decomposed, !dbg !35
  %68 = add i32 %66, %.decomposed2, !dbg !35
  %69 = sext i32 %67 to i64, !dbg !36
  %70 = getelementptr float, ptr addrspace(1) %5, i64 %69, !dbg !36
  %71 = sext i32 %68 to i64, !dbg !36
  %72 = getelementptr float, ptr addrspace(1) %5, i64 %71, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %24, i32 %25, i32 %26, i32 %27, ptr addrspace(1) %70, i1 true) #1, !dbg !37
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %29, i32 %30, i32 %31, i32 %32, ptr addrspace(1) %72, i1 true) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crq47sonzxvr2znqkiaas5bv2wsuvkzpfwml2nv2yftkccr76ppr.py", directory: "inductor_cache/rq")
!4 = !{ptr @triton_poi_fused_cat_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_9", linkageName: "triton_poi_fused_cat_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 30, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 28, column: 37, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 25, scope: !7)
!21 = !DILocation(line: 28, column: 48, scope: !7)
!22 = !DILocation(line: 29, column: 37, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 25, scope: !7)
!25 = !DILocation(line: 29, column: 48, scope: !7)
!26 = !DILocation(line: 30, column: 37, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 25, scope: !7)
!29 = !DILocation(line: 30, column: 48, scope: !7)
!30 = !DILocation(line: 31, column: 37, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 25, scope: !7)
!33 = !DILocation(line: 31, column: 48, scope: !7)
!34 = !DILocation(line: 32, column: 37, scope: !7)
!35 = !DILocation(line: 32, column: 30, scope: !7)
!36 = !DILocation(line: 32, column: 25, scope: !7)
!37 = !DILocation(line: 32, column: 48, scope: !7)
!38 = !DILocation(line: 32, column: 4, scope: !7)
