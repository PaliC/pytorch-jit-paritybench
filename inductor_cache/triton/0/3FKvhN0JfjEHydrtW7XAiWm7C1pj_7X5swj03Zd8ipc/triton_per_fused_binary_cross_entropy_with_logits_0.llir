; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_binary_cross_entropy_with_logits_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = shl i32 %4, 2, !dbg !10
  %6 = and i32 %5, 252, !dbg !10
  %7 = zext nneg i32 %6 to i64, !dbg !11
  %8 = getelementptr float, ptr addrspace(1) %1, i64 %7, !dbg !11
  %9 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %8, i1 true) #4, !dbg !12
  %10 = extractvalue { i32, i32, i32, i32 } %9, 0, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %9, 1, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %9, 2, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %9, 3, !dbg !12
  %14 = bitcast i32 %10 to float, !dbg !13
  %15 = tail call float @llvm.fabs.f32(float %14), !dbg !13
  %16 = bitcast i32 %11 to float, !dbg !13
  %17 = tail call float @llvm.fabs.f32(float %16), !dbg !13
  %18 = bitcast i32 %12 to float, !dbg !13
  %19 = tail call float @llvm.fabs.f32(float %18), !dbg !13
  %20 = bitcast i32 %13 to float, !dbg !13
  %21 = tail call float @llvm.fabs.f32(float %20), !dbg !13
  %22 = fsub float 0.000000e+00, %15, !dbg !14
  %23 = fsub float 0.000000e+00, %17, !dbg !14
  %24 = fsub float 0.000000e+00, %19, !dbg !14
  %25 = fsub float 0.000000e+00, %21, !dbg !14
  %26 = fmul float %22, 0x3FF7154760000000, !dbg !15
  %27 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %26) #4, !dbg !15
  %28 = fmul float %23, 0x3FF7154760000000, !dbg !15
  %29 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %28) #4, !dbg !15
  %30 = fmul float %24, 0x3FF7154760000000, !dbg !15
  %31 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %30) #4, !dbg !15
  %32 = fmul float %25, 0x3FF7154760000000, !dbg !15
  %33 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %32) #4, !dbg !15
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i = icmp eq i32 %34, 0, !dbg !16
  %35 = tail call float @llvm.nvvm.add.rz.ftz.f(float %27, float 1.000000e+00) #4, !dbg !16
  %36 = tail call float @llvm.nvvm.add.rz.f(float %27, float 1.000000e+00) #4, !dbg !16
  %.01.i = select i1 %.not.i, float %36, float %35, !dbg !16
  %37 = bitcast float %.01.i to i32, !dbg !16
  %38 = add i32 %37, -1061158912, !dbg !16
  %39 = and i32 %38, -8388608, !dbg !16
  %40 = bitcast float %27 to i32, !dbg !16
  %41 = sub i32 %40, %39, !dbg !16
  %42 = bitcast i32 %41 to float, !dbg !16
  %43 = sub i32 1082130432, %39, !dbg !16
  %44 = bitcast i32 %43 to float, !dbg !16
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not14.i = icmp eq i32 %45, 0, !dbg !16
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %44, float -1.000000e+00) #4, !dbg !16
  %47 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %44, float -1.000000e+00) #4, !dbg !16
  %.09.i = select i1 %.not14.i, float %47, float %46, !dbg !16
  %48 = fadd float %.09.i, %42, !dbg !16
  %49 = sitofp i32 %39 to float, !dbg !16
  %50 = fmul float %49, 0x3E80000000000000, !dbg !16
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i = icmp eq i32 %51, 0, !dbg !16
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %48, float 0x3FBB000240000000) #4, !dbg !16
  %53 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %48, float 0x3FBB000240000000) #4, !dbg !16
  %.012.i = select i1 %.not15.i, float %53, float %52, !dbg !16
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i = icmp eq i32 %54, 0, !dbg !16
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %48, float 0xBFC0EF1C00000000) #4, !dbg !16
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %48, float 0xBFC0EF1C00000000) #4, !dbg !16
  %.010.i = select i1 %.not16.i, float %56, float %55, !dbg !16
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i = icmp eq i32 %57, 0, !dbg !16
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %48, float 0x3FC28C8EA0000000) #4, !dbg !16
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %48, float 0x3FC28C8EA0000000) #4, !dbg !16
  %.06.i = select i1 %.not17.i, float %59, float %58, !dbg !16
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i = icmp eq i32 %60, 0, !dbg !16
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %48, float 0xBFC54D1BA0000000) #4, !dbg !16
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %48, float 0xBFC54D1BA0000000) #4, !dbg !16
  %.02.i = select i1 %.not18.i, float %62, float %61, !dbg !16
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i = icmp eq i32 %63, 0, !dbg !16
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %48, float 0x3FC995F3C0000000) #4, !dbg !16
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %48, float 0x3FC995F3C0000000) #4, !dbg !16
  %.0.i = select i1 %.not19.i, float %65, float %64, !dbg !16
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not20.i = icmp eq i32 %66, 0, !dbg !16
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %48, float 0xBFD0000840000000) #4, !dbg !16
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %48, float 0xBFD0000840000000) #4, !dbg !16
  %.011.i = select i1 %.not20.i, float %68, float %67, !dbg !16
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not21.i = icmp eq i32 %69, 0, !dbg !16
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %48, float 0x3FD5555CC0000000) #4, !dbg !16
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %48, float 0x3FD5555CC0000000) #4, !dbg !16
  %.08.i = select i1 %.not21.i, float %71, float %70, !dbg !16
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not22.i = icmp eq i32 %72, 0, !dbg !16
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %48, float -5.000000e-01) #4, !dbg !16
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %48, float -5.000000e-01) #4, !dbg !16
  %.07.i = select i1 %.not22.i, float %74, float %73, !dbg !16
  %75 = fmul float %48, %.07.i, !dbg !16
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not23.i = icmp eq i32 %76, 0, !dbg !16
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float %48, float %48) #4, !dbg !16
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %75, float %48, float %48) #4, !dbg !16
  %.05.i = select i1 %.not23.i, float %78, float %77, !dbg !16
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not24.i = icmp eq i32 %79, 0, !dbg !16
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %50, float 0x3FE62E4300000000, float %.05.i) #4, !dbg !16
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %50, float 0x3FE62E4300000000, float %.05.i) #4, !dbg !16
  %.04.i = select i1 %.not24.i, float %81, float %80, !dbg !16
  %82 = icmp ugt i32 %40, 2139095039, !dbg !16
  br i1 %82, label %83, label %__nv_log1pf.exit, !dbg !16

83:                                               ; preds = %3
  %84 = icmp sgt i32 %40, -1082130432, !dbg !16
  br i1 %84, label %__nv_fmaf_rn.exit.i, label %88, !dbg !16

__nv_fmaf_rn.exit.i:                              ; preds = %83
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not25.i = icmp eq i32 %85, 0, !dbg !16
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %27, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i = select i1 %.not25.i, float %87, float %86, !dbg !16
  br label %88, !dbg !16

88:                                               ; preds = %__nv_fmaf_rn.exit.i, %83
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %83 ], !dbg !16
  %89 = fcmp oeq float %27, 0.000000e+00, !dbg !16
  %r.1.i = select i1 %89, float -0.000000e+00, float %r.0.i, !dbg !16
  br label %__nv_log1pf.exit, !dbg !16

__nv_log1pf.exit:                                 ; preds = %3, %88
  %r.2.i = phi float [ %r.1.i, %88 ], [ %.04.i, %3 ], !dbg !16
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i1 = icmp eq i32 %90, 0, !dbg !16
  %91 = tail call float @llvm.nvvm.add.rz.ftz.f(float %29, float 1.000000e+00) #4, !dbg !16
  %92 = tail call float @llvm.nvvm.add.rz.f(float %29, float 1.000000e+00) #4, !dbg !16
  %.01.i2 = select i1 %.not.i1, float %92, float %91, !dbg !16
  %93 = bitcast float %.01.i2 to i32, !dbg !16
  %94 = add i32 %93, -1061158912, !dbg !16
  %95 = and i32 %94, -8388608, !dbg !16
  %96 = bitcast float %29 to i32, !dbg !16
  %97 = sub i32 %96, %95, !dbg !16
  %98 = bitcast i32 %97 to float, !dbg !16
  %99 = sub i32 1082130432, %95, !dbg !16
  %100 = bitcast i32 %99 to float, !dbg !16
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not14.i3 = icmp eq i32 %101, 0, !dbg !16
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %100, float -1.000000e+00) #4, !dbg !16
  %103 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %100, float -1.000000e+00) #4, !dbg !16
  %.09.i4 = select i1 %.not14.i3, float %103, float %102, !dbg !16
  %104 = fadd float %.09.i4, %98, !dbg !16
  %105 = sitofp i32 %95 to float, !dbg !16
  %106 = fmul float %105, 0x3E80000000000000, !dbg !16
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i5 = icmp eq i32 %107, 0, !dbg !16
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %104, float 0x3FBB000240000000) #4, !dbg !16
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %104, float 0x3FBB000240000000) #4, !dbg !16
  %.012.i6 = select i1 %.not15.i5, float %109, float %108, !dbg !16
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i7 = icmp eq i32 %110, 0, !dbg !16
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i6, float %104, float 0xBFC0EF1C00000000) #4, !dbg !16
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i6, float %104, float 0xBFC0EF1C00000000) #4, !dbg !16
  %.010.i8 = select i1 %.not16.i7, float %112, float %111, !dbg !16
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i9 = icmp eq i32 %113, 0, !dbg !16
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i8, float %104, float 0x3FC28C8EA0000000) #4, !dbg !16
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i8, float %104, float 0x3FC28C8EA0000000) #4, !dbg !16
  %.06.i10 = select i1 %.not17.i9, float %115, float %114, !dbg !16
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i11 = icmp eq i32 %116, 0, !dbg !16
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %104, float 0xBFC54D1BA0000000) #4, !dbg !16
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %104, float 0xBFC54D1BA0000000) #4, !dbg !16
  %.02.i12 = select i1 %.not18.i11, float %118, float %117, !dbg !16
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i13 = icmp eq i32 %119, 0, !dbg !16
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float %104, float 0x3FC995F3C0000000) #4, !dbg !16
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float %104, float 0x3FC995F3C0000000) #4, !dbg !16
  %.0.i14 = select i1 %.not19.i13, float %121, float %120, !dbg !16
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not20.i15 = icmp eq i32 %122, 0, !dbg !16
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %104, float 0xBFD0000840000000) #4, !dbg !16
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %104, float 0xBFD0000840000000) #4, !dbg !16
  %.011.i16 = select i1 %.not20.i15, float %124, float %123, !dbg !16
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not21.i17 = icmp eq i32 %125, 0, !dbg !16
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i16, float %104, float 0x3FD5555CC0000000) #4, !dbg !16
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i16, float %104, float 0x3FD5555CC0000000) #4, !dbg !16
  %.08.i18 = select i1 %.not21.i17, float %127, float %126, !dbg !16
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not22.i19 = icmp eq i32 %128, 0, !dbg !16
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i18, float %104, float -5.000000e-01) #4, !dbg !16
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i18, float %104, float -5.000000e-01) #4, !dbg !16
  %.07.i20 = select i1 %.not22.i19, float %130, float %129, !dbg !16
  %131 = fmul float %104, %.07.i20, !dbg !16
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not23.i21 = icmp eq i32 %132, 0, !dbg !16
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %131, float %104, float %104) #4, !dbg !16
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %131, float %104, float %104) #4, !dbg !16
  %.05.i22 = select i1 %.not23.i21, float %134, float %133, !dbg !16
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not24.i23 = icmp eq i32 %135, 0, !dbg !16
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float 0x3FE62E4300000000, float %.05.i22) #4, !dbg !16
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %106, float 0x3FE62E4300000000, float %.05.i22) #4, !dbg !16
  %.04.i24 = select i1 %.not24.i23, float %137, float %136, !dbg !16
  %138 = icmp ugt i32 %96, 2139095039, !dbg !16
  br i1 %138, label %139, label %__nv_log1pf.exit31, !dbg !16

139:                                              ; preds = %__nv_log1pf.exit
  %140 = icmp sgt i32 %96, -1082130432, !dbg !16
  br i1 %140, label %__nv_fmaf_rn.exit.i28, label %144, !dbg !16

__nv_fmaf_rn.exit.i28:                            ; preds = %139
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not25.i29 = icmp eq i32 %141, 0, !dbg !16
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i30 = select i1 %.not25.i29, float %143, float %142, !dbg !16
  br label %144, !dbg !16

144:                                              ; preds = %__nv_fmaf_rn.exit.i28, %139
  %r.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i28 ], [ %.04.i24, %139 ], !dbg !16
  %145 = fcmp oeq float %29, 0.000000e+00, !dbg !16
  %r.1.i27 = select i1 %145, float -0.000000e+00, float %r.0.i26, !dbg !16
  br label %__nv_log1pf.exit31, !dbg !16

__nv_log1pf.exit31:                               ; preds = %__nv_log1pf.exit, %144
  %r.2.i25 = phi float [ %r.1.i27, %144 ], [ %.04.i24, %__nv_log1pf.exit ], !dbg !16
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i32 = icmp eq i32 %146, 0, !dbg !16
  %147 = tail call float @llvm.nvvm.add.rz.ftz.f(float %31, float 1.000000e+00) #4, !dbg !16
  %148 = tail call float @llvm.nvvm.add.rz.f(float %31, float 1.000000e+00) #4, !dbg !16
  %.01.i33 = select i1 %.not.i32, float %148, float %147, !dbg !16
  %149 = bitcast float %.01.i33 to i32, !dbg !16
  %150 = add i32 %149, -1061158912, !dbg !16
  %151 = and i32 %150, -8388608, !dbg !16
  %152 = bitcast float %31 to i32, !dbg !16
  %153 = sub i32 %152, %151, !dbg !16
  %154 = bitcast i32 %153 to float, !dbg !16
  %155 = sub i32 1082130432, %151, !dbg !16
  %156 = bitcast i32 %155 to float, !dbg !16
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not14.i34 = icmp eq i32 %157, 0, !dbg !16
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %156, float -1.000000e+00) #4, !dbg !16
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %156, float -1.000000e+00) #4, !dbg !16
  %.09.i35 = select i1 %.not14.i34, float %159, float %158, !dbg !16
  %160 = fadd float %.09.i35, %154, !dbg !16
  %161 = sitofp i32 %151 to float, !dbg !16
  %162 = fmul float %161, 0x3E80000000000000, !dbg !16
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i36 = icmp eq i32 %163, 0, !dbg !16
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %160, float 0x3FBB000240000000) #4, !dbg !16
  %165 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %160, float 0x3FBB000240000000) #4, !dbg !16
  %.012.i37 = select i1 %.not15.i36, float %165, float %164, !dbg !16
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i38 = icmp eq i32 %166, 0, !dbg !16
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i37, float %160, float 0xBFC0EF1C00000000) #4, !dbg !16
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i37, float %160, float 0xBFC0EF1C00000000) #4, !dbg !16
  %.010.i39 = select i1 %.not16.i38, float %168, float %167, !dbg !16
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i40 = icmp eq i32 %169, 0, !dbg !16
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i39, float %160, float 0x3FC28C8EA0000000) #4, !dbg !16
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i39, float %160, float 0x3FC28C8EA0000000) #4, !dbg !16
  %.06.i41 = select i1 %.not17.i40, float %171, float %170, !dbg !16
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i42 = icmp eq i32 %172, 0, !dbg !16
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i41, float %160, float 0xBFC54D1BA0000000) #4, !dbg !16
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i41, float %160, float 0xBFC54D1BA0000000) #4, !dbg !16
  %.02.i43 = select i1 %.not18.i42, float %174, float %173, !dbg !16
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i44 = icmp eq i32 %175, 0, !dbg !16
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i43, float %160, float 0x3FC995F3C0000000) #4, !dbg !16
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i43, float %160, float 0x3FC995F3C0000000) #4, !dbg !16
  %.0.i45 = select i1 %.not19.i44, float %177, float %176, !dbg !16
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not20.i46 = icmp eq i32 %178, 0, !dbg !16
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i45, float %160, float 0xBFD0000840000000) #4, !dbg !16
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i45, float %160, float 0xBFD0000840000000) #4, !dbg !16
  %.011.i47 = select i1 %.not20.i46, float %180, float %179, !dbg !16
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not21.i48 = icmp eq i32 %181, 0, !dbg !16
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i47, float %160, float 0x3FD5555CC0000000) #4, !dbg !16
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i47, float %160, float 0x3FD5555CC0000000) #4, !dbg !16
  %.08.i49 = select i1 %.not21.i48, float %183, float %182, !dbg !16
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not22.i50 = icmp eq i32 %184, 0, !dbg !16
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i49, float %160, float -5.000000e-01) #4, !dbg !16
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i49, float %160, float -5.000000e-01) #4, !dbg !16
  %.07.i51 = select i1 %.not22.i50, float %186, float %185, !dbg !16
  %187 = fmul float %160, %.07.i51, !dbg !16
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not23.i52 = icmp eq i32 %188, 0, !dbg !16
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float %160, float %160) #4, !dbg !16
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float %160, float %160) #4, !dbg !16
  %.05.i53 = select i1 %.not23.i52, float %190, float %189, !dbg !16
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not24.i54 = icmp eq i32 %191, 0, !dbg !16
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0x3FE62E4300000000, float %.05.i53) #4, !dbg !16
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0x3FE62E4300000000, float %.05.i53) #4, !dbg !16
  %.04.i55 = select i1 %.not24.i54, float %193, float %192, !dbg !16
  %194 = icmp ugt i32 %152, 2139095039, !dbg !16
  br i1 %194, label %195, label %__nv_log1pf.exit62, !dbg !16

195:                                              ; preds = %__nv_log1pf.exit31
  %196 = icmp sgt i32 %152, -1082130432, !dbg !16
  br i1 %196, label %__nv_fmaf_rn.exit.i59, label %200, !dbg !16

__nv_fmaf_rn.exit.i59:                            ; preds = %195
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not25.i60 = icmp eq i32 %197, 0, !dbg !16
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i61 = select i1 %.not25.i60, float %199, float %198, !dbg !16
  br label %200, !dbg !16

200:                                              ; preds = %__nv_fmaf_rn.exit.i59, %195
  %r.0.i57 = phi float [ %.03.i61, %__nv_fmaf_rn.exit.i59 ], [ %.04.i55, %195 ], !dbg !16
  %201 = fcmp oeq float %31, 0.000000e+00, !dbg !16
  %r.1.i58 = select i1 %201, float -0.000000e+00, float %r.0.i57, !dbg !16
  br label %__nv_log1pf.exit62, !dbg !16

__nv_log1pf.exit62:                               ; preds = %__nv_log1pf.exit31, %200
  %r.2.i56 = phi float [ %r.1.i58, %200 ], [ %.04.i55, %__nv_log1pf.exit31 ], !dbg !16
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not.i63 = icmp eq i32 %202, 0, !dbg !16
  %203 = tail call float @llvm.nvvm.add.rz.ftz.f(float %33, float 1.000000e+00) #4, !dbg !16
  %204 = tail call float @llvm.nvvm.add.rz.f(float %33, float 1.000000e+00) #4, !dbg !16
  %.01.i64 = select i1 %.not.i63, float %204, float %203, !dbg !16
  %205 = bitcast float %.01.i64 to i32, !dbg !16
  %206 = add i32 %205, -1061158912, !dbg !16
  %207 = and i32 %206, -8388608, !dbg !16
  %208 = bitcast float %33 to i32, !dbg !16
  %209 = sub i32 %208, %207, !dbg !16
  %210 = bitcast i32 %209 to float, !dbg !16
  %211 = sub i32 1082130432, %207, !dbg !16
  %212 = bitcast i32 %211 to float, !dbg !16
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not14.i65 = icmp eq i32 %213, 0, !dbg !16
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %212, float -1.000000e+00) #4, !dbg !16
  %215 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %212, float -1.000000e+00) #4, !dbg !16
  %.09.i66 = select i1 %.not14.i65, float %215, float %214, !dbg !16
  %216 = fadd float %.09.i66, %210, !dbg !16
  %217 = sitofp i32 %207 to float, !dbg !16
  %218 = fmul float %217, 0x3E80000000000000, !dbg !16
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not15.i67 = icmp eq i32 %219, 0, !dbg !16
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %216, float 0x3FBB000240000000) #4, !dbg !16
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %216, float 0x3FBB000240000000) #4, !dbg !16
  %.012.i68 = select i1 %.not15.i67, float %221, float %220, !dbg !16
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not16.i69 = icmp eq i32 %222, 0, !dbg !16
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i68, float %216, float 0xBFC0EF1C00000000) #4, !dbg !16
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i68, float %216, float 0xBFC0EF1C00000000) #4, !dbg !16
  %.010.i70 = select i1 %.not16.i69, float %224, float %223, !dbg !16
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not17.i71 = icmp eq i32 %225, 0, !dbg !16
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i70, float %216, float 0x3FC28C8EA0000000) #4, !dbg !16
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i70, float %216, float 0x3FC28C8EA0000000) #4, !dbg !16
  %.06.i72 = select i1 %.not17.i71, float %227, float %226, !dbg !16
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not18.i73 = icmp eq i32 %228, 0, !dbg !16
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i72, float %216, float 0xBFC54D1BA0000000) #4, !dbg !16
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i72, float %216, float 0xBFC54D1BA0000000) #4, !dbg !16
  %.02.i74 = select i1 %.not18.i73, float %230, float %229, !dbg !16
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not19.i75 = icmp eq i32 %231, 0, !dbg !16
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i74, float %216, float 0x3FC995F3C0000000) #4, !dbg !16
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i74, float %216, float 0x3FC995F3C0000000) #4, !dbg !16
  %.0.i76 = select i1 %.not19.i75, float %233, float %232, !dbg !16
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not20.i77 = icmp eq i32 %234, 0, !dbg !16
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i76, float %216, float 0xBFD0000840000000) #4, !dbg !16
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i76, float %216, float 0xBFD0000840000000) #4, !dbg !16
  %.011.i78 = select i1 %.not20.i77, float %236, float %235, !dbg !16
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not21.i79 = icmp eq i32 %237, 0, !dbg !16
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i78, float %216, float 0x3FD5555CC0000000) #4, !dbg !16
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i78, float %216, float 0x3FD5555CC0000000) #4, !dbg !16
  %.08.i80 = select i1 %.not21.i79, float %239, float %238, !dbg !16
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not22.i81 = icmp eq i32 %240, 0, !dbg !16
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i80, float %216, float -5.000000e-01) #4, !dbg !16
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i80, float %216, float -5.000000e-01) #4, !dbg !16
  %.07.i82 = select i1 %.not22.i81, float %242, float %241, !dbg !16
  %243 = fmul float %216, %.07.i82, !dbg !16
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not23.i83 = icmp eq i32 %244, 0, !dbg !16
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %243, float %216, float %216) #4, !dbg !16
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %243, float %216, float %216) #4, !dbg !16
  %.05.i84 = select i1 %.not23.i83, float %246, float %245, !dbg !16
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not24.i85 = icmp eq i32 %247, 0, !dbg !16
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %218, float 0x3FE62E4300000000, float %.05.i84) #4, !dbg !16
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %218, float 0x3FE62E4300000000, float %.05.i84) #4, !dbg !16
  %.04.i86 = select i1 %.not24.i85, float %249, float %248, !dbg !16
  %250 = icmp ugt i32 %208, 2139095039, !dbg !16
  br i1 %250, label %251, label %__nv_log1pf.exit93, !dbg !16

251:                                              ; preds = %__nv_log1pf.exit62
  %252 = icmp sgt i32 %208, -1082130432, !dbg !16
  br i1 %252, label %__nv_fmaf_rn.exit.i90, label %256, !dbg !16

__nv_fmaf_rn.exit.i90:                            ; preds = %251
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !16
  %.not25.i91 = icmp eq i32 %253, 0, !dbg !16
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %33, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %33, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !16
  %.03.i92 = select i1 %.not25.i91, float %255, float %254, !dbg !16
  br label %256, !dbg !16

256:                                              ; preds = %__nv_fmaf_rn.exit.i90, %251
  %r.0.i88 = phi float [ %.03.i92, %__nv_fmaf_rn.exit.i90 ], [ %.04.i86, %251 ], !dbg !16
  %257 = fcmp oeq float %33, 0.000000e+00, !dbg !16
  %r.1.i89 = select i1 %257, float -0.000000e+00, float %r.0.i88, !dbg !16
  br label %__nv_log1pf.exit93, !dbg !16

__nv_log1pf.exit93:                               ; preds = %__nv_log1pf.exit62, %256
  %r.2.i87 = phi float [ %r.1.i89, %256 ], [ %.04.i86, %__nv_log1pf.exit62 ], !dbg !16
  %258 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !12
  %259 = insertelement <2 x i32> %258, i32 %13, i64 1, !dbg !12
  %260 = bitcast <2 x i32> %259 to <2 x float>, !dbg !12
  %261 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !12
  %262 = insertelement <2 x i32> %261, i32 %11, i64 1, !dbg !12
  %263 = bitcast <2 x i32> %262 to <2 x float>, !dbg !12
  %264 = fcmp ogt <2 x float> %260, zeroinitializer, !dbg !17
  %265 = fcmp ogt <2 x float> %263, zeroinitializer, !dbg !17
  %266 = fmul <2 x float> %260, zeroinitializer, !dbg !21
  %267 = fmul <2 x float> %263, zeroinitializer, !dbg !21
  %268 = lshr i32 %4, 5, !dbg !10
  %269 = and i32 %4, 31, !dbg !10
  %270 = select <2 x i1> %265, <2 x float> zeroinitializer, <2 x float> %263, !dbg !22
  %271 = insertelement <2 x float> poison, float %r.2.i, i64 0, !dbg !23
  %272 = insertelement <2 x float> %271, float %r.2.i25, i64 1, !dbg !23
  %273 = fsub <2 x float> %270, %272, !dbg !23
  %274 = fsub <2 x float> %267, %273, !dbg !24
  %275 = select <2 x i1> %264, <2 x float> zeroinitializer, <2 x float> %260, !dbg !22
  %276 = insertelement <2 x float> poison, float %r.2.i56, i64 0, !dbg !23
  %277 = insertelement <2 x float> %276, float %r.2.i87, i64 1, !dbg !23
  %278 = fsub <2 x float> %275, %277, !dbg !23
  %279 = fsub <2 x float> %266, %278, !dbg !24
  %shift = shufflevector <2 x float> %274, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !25
  %280 = fadd <2 x float> %274, %shift, !dbg !25
  %281 = fadd <2 x float> %280, %279, !dbg !25
  %shift94 = shufflevector <2 x float> %279, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !25
  %282 = fadd <2 x float> %281, %shift94, !dbg !25
  %283 = extractelement <2 x float> %282, i64 0, !dbg !25
  %284 = bitcast float %283 to i32, !dbg !30
  %285 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %284, i32 16, i32 31), !dbg !30
  %286 = bitcast i32 %285 to float, !dbg !30
  %287 = fadd float %283, %286, !dbg !25
  %288 = bitcast float %287 to i32, !dbg !30
  %289 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %288, i32 8, i32 31), !dbg !30
  %290 = bitcast i32 %289 to float, !dbg !30
  %291 = fadd float %287, %290, !dbg !25
  %292 = bitcast float %291 to i32, !dbg !30
  %293 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 4, i32 31), !dbg !30
  %294 = bitcast i32 %293 to float, !dbg !30
  %295 = fadd float %291, %294, !dbg !25
  %296 = bitcast float %295 to i32, !dbg !30
  %297 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %296, i32 2, i32 31), !dbg !30
  %298 = bitcast i32 %297 to float, !dbg !30
  %299 = fadd float %295, %298, !dbg !25
  %300 = bitcast float %299 to i32, !dbg !30
  %301 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %300, i32 1, i32 31), !dbg !30
  %302 = bitcast i32 %301 to float, !dbg !30
  %303 = fadd float %299, %302, !dbg !25
  %304 = icmp eq i32 %269, 0, !dbg !30
  %305 = and i32 %268, 1, !dbg !30
  %306 = zext nneg i32 %305 to i64, !dbg !30
  %307 = getelementptr float, ptr addrspace(3) @global_smem, i64 %306, !dbg !30
  %308 = bitcast float %303 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %307, <1 x i32> %308, i1 %304) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %309 = icmp slt i32 %4, 2, !dbg !30
  %310 = sext i32 %4 to i64, !dbg !30
  %311 = getelementptr float, ptr addrspace(3) @global_smem, i64 %310, !dbg !30
  %312 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %311, i1 %309) #4, !dbg !30
  %313 = bitcast i32 %312 to float, !dbg !30
  %314 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %312, i32 1, i32 31), !dbg !30
  %315 = bitcast i32 %314 to float, !dbg !30
  %316 = fadd float %313, %315, !dbg !25
  %317 = and i32 %4, 1, !dbg !30
  %318 = icmp eq i32 %317, 0, !dbg !30
  %319 = and i1 %309, %318, !dbg !30
  %320 = bitcast float %316 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %311, <1 x i32> %320, i1 %319) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %321 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !30
  %322 = fadd float %321, 0.000000e+00, !dbg !31
  %323 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %322, float 2.560000e+02) #4, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %urem = and i32 %4, 63, !dbg !35
  %324 = icmp eq i32 %urem, 0, !dbg !35
  %325 = bitcast float %323 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %325, ptr addrspace(1) %0, i1 %324) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7krjovhset7inps7a4iwbhbvva7rysahg6argibq3we3v34ffb7.py", directory: "inductor_cache/7k")
!4 = !{ptr @triton_per_fused_binary_cross_entropy_with_logits_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_binary_cross_entropy_with_logits_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_binary_cross_entropy_with_logits_0", linkageName: "triton_per_fused_binary_cross_entropy_with_logits_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 35, column: 23, scope: !7)
!14 = !DILocation(line: 36, column: 12, scope: !7)
!15 = !DILocation(line: 37, column: 23, scope: !7)
!16 = !DILocation(line: 38, column: 27, scope: !7)
!17 = !DILocation(line: 110, column: 15, scope: !18, inlinedAt: !20)
!18 = distinct !DILexicalBlockFile(scope: !7, file: !19, discriminator: 0)
!19 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!20 = !DILocation(line: 34, column: 40, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 113, column: 29, scope: !18, inlinedAt: !20)
!23 = !DILocation(line: 39, column: 18, scope: !7)
!24 = !DILocation(line: 40, column: 18, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !29)
!26 = distinct !DILexicalBlockFile(scope: !28, file: !27, discriminator: 0)
!27 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!28 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!29 = !DILocation(line: 42, column: 59, scope: !7)
!30 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !29)
!31 = !DILocation(line: 73, column: 15, scope: !18, inlinedAt: !32)
!32 = !DILocation(line: 42, column: 45, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 4, scope: !7)
!35 = !DILocation(line: 46, column: 63, scope: !7)
!36 = !DILocation(line: 46, column: 4, scope: !7)
