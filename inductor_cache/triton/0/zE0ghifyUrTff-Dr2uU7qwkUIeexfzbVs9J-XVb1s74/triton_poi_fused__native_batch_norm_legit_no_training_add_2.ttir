#loc = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<64xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<64x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc10)
    %11 = tt.splat %10 : f32 -> tensor<64xf32> loc(#loc11)
    %12 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc12)
    %13 = tt.load %12 : !tt.ptr<f32> loc(#loc13)
    %14 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc14)
    %15 = tt.load %14 : !tt.ptr<f32> loc(#loc15)
    %16 = tt.splat %15 : f32 -> tensor<64xf32> loc(#loc16)
    %17 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc17)
    %18 = tt.load %17 : !tt.ptr<f32> loc(#loc18)
    %19 = tt.splat %18 : f32 -> tensor<64xf32> loc(#loc19)
    %20 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %20, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc20)
    %22 = tt.load %21, %5 : tensor<64x!tt.ptr<f32>> loc(#loc21)
    %23 = tt.addptr %arg6, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %24 = tt.load %23 : !tt.ptr<f32> loc(#loc23)
    %25 = tt.splat %24 : f32 -> tensor<64xf32> loc(#loc24)
    %26 = tt.addptr %arg7, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc25)
    %27 = tt.load %26 : !tt.ptr<f32> loc(#loc26)
    %28 = tt.addptr %arg8, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %29 = tt.load %28 : !tt.ptr<f32> loc(#loc28)
    %30 = tt.splat %29 : f32 -> tensor<64xf32> loc(#loc29)
    %31 = tt.addptr %arg9, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc30)
    %32 = tt.load %31 : !tt.ptr<f32> loc(#loc31)
    %33 = tt.splat %32 : f32 -> tensor<64xf32> loc(#loc32)
    %34 = arith.subf %8, %11 : tensor<64xf32> loc(#loc33)
    %35 = arith.addf %13, %cst_0 : f32 loc(#loc34)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc35)
    %37 = arith.divf %cst, %36 : f32 loc(#loc36)
    %38 = tt.splat %37 : f32 -> tensor<64xf32> loc(#loc36)
    %39 = arith.mulf %34, %38 : tensor<64xf32> loc(#loc37)
    %40 = arith.mulf %39, %16 : tensor<64xf32> loc(#loc38)
    %41 = arith.addf %40, %19 : tensor<64xf32> loc(#loc39)
    %42 = arith.subf %22, %25 : tensor<64xf32> loc(#loc40)
    %43 = arith.addf %27, %cst_0 : f32 loc(#loc41)
    %44 = tt.extern_elementwise %43 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc42)
    %45 = arith.divf %cst, %44 : f32 loc(#loc43)
    %46 = tt.splat %45 : f32 -> tensor<64xf32> loc(#loc43)
    %47 = arith.mulf %42, %46 : tensor<64xf32> loc(#loc44)
    %48 = arith.mulf %47, %30 : tensor<64xf32> loc(#loc45)
    %49 = arith.addf %48, %33 : tensor<64xf32> loc(#loc46)
    %50 = arith.addf %41, %49 : tensor<64xf32> loc(#loc47)
    %51 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc48)
    %52 = tt.addptr %51, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc48)
    tt.store %52, %50, %5 : tensor<64x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":21:28)
#loc3 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":21:33)
#loc4 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":22:36)
#loc5 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":22:23)
#loc6 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":23:21)
#loc7 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":25:30)
#loc8 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":25:35)
#loc9 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":26:30)
#loc10 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":26:19)
#loc11 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":27:33)
#loc12 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":28:30)
#loc13 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":28:19)
#loc14 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":30:31)
#loc15 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":30:20)
#loc16 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":31:35)
#loc17 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":32:31)
#loc18 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":32:20)
#loc19 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":33:35)
#loc20 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":34:31)
#loc21 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":34:36)
#loc22 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":35:31)
#loc23 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":35:20)
#loc24 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":36:35)
#loc25 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":37:31)
#loc26 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":37:20)
#loc27 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":39:31)
#loc28 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":39:20)
#loc29 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":40:35)
#loc30 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":41:31)
#loc31 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":41:20)
#loc32 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":42:35)
#loc33 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":43:18)
#loc34 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":45:18)
#loc35 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":46:26)
#loc36 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":48:19)
#loc37 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":51:19)
#loc38 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":52:20)
#loc39 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":53:20)
#loc40 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":54:20)
#loc41 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":55:20)
#loc42 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":56:27)
#loc43 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":57:19)
#loc44 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":59:20)
#loc45 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":60:20)
#loc46 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":61:20)
#loc47 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":62:20)
#loc48 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":63:25)
#loc49 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":63:37)
#loc50 = loc("inductor_cache/dx/cdxlu4uin3yw5g5ayew7hkakl4hgyu5wshtd2wjtyszkpajk7iax.py":63:4)
