; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_28(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 6144, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 96, !dbg !15
  %12 = mul i32 %11, 96, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = srem i32 %11, 4, !dbg !17
  %14 = sdiv i32 %9, 384, !dbg !18
  %15 = sext i32 %9 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !20
  %18 = bitcast i32 %17 to float, !dbg !20
  %19 = sext i32 %.decomposed to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %10) #1, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = fadd float %18, %22, !dbg !23
  %24 = icmp slt i32 %.decomposed, 88, !dbg !24
  %25 = mul nsw i32 %13, 176, !dbg !25
  %26 = mul i32 %14, 1408, !dbg !26
  %27 = add i32 %26, %.decomposed, !dbg !27
  %28 = add i32 %27, %25, !dbg !28
  %29 = sext i32 %28 to i64, !dbg !29
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %29, !dbg !29
  %31 = and i1 %10, %24, !dbg !30
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %31, i32 0, i1 %31) #1, !dbg !31
  %33 = bitcast i32 %32 to float, !dbg !31
  %34 = add i32 %27, 88, !dbg !32
  %35 = add i32 %34, %25, !dbg !33
  %36 = sext i32 %35 to i64, !dbg !34
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !34
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %31, i32 0, i1 %31) #1, !dbg !35
  %39 = bitcast i32 %38 to float, !dbg !35
  %40 = fcmp ogt float %39, %33, !dbg !36
  %41 = fcmp uno float %39, 0.000000e+00, !dbg !40
  %42 = or i1 %40, %41, !dbg !41
  %43 = select i1 %42, float %39, float %33, !dbg !42
  %44 = add i32 %27, 704, !dbg !43
  %45 = add i32 %44, %25, !dbg !44
  %46 = sext i32 %45 to i64, !dbg !45
  %47 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !45
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %31, i32 0, i1 %31) #1, !dbg !46
  %49 = bitcast i32 %48 to float, !dbg !46
  %50 = fcmp olt float %43, %49, !dbg !47
  %51 = fcmp uno float %49, 0.000000e+00, !dbg !49
  %52 = or i1 %51, %50, !dbg !50
  %53 = select i1 %52, float %49, float %43, !dbg !51
  %54 = add i32 %27, 792, !dbg !52
  %55 = add i32 %54, %25, !dbg !53
  %56 = sext i32 %55 to i64, !dbg !54
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !54
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %31, i32 0, i1 %31) #1, !dbg !55
  %59 = bitcast i32 %58 to float, !dbg !55
  %60 = fcmp olt float %53, %59, !dbg !56
  %61 = fcmp uno float %59, 0.000000e+00, !dbg !58
  %62 = or i1 %61, %60, !dbg !59
  %63 = select i1 %62, float %59, float %53, !dbg !60
  %64 = select i1 %24, float %63, float 0.000000e+00, !dbg !61
  %65 = fadd float %23, %64, !dbg !62
  %66 = fcmp olt float %65, 0.000000e+00, !dbg !63
  %67 = select i1 %66, float 0.000000e+00, float %65, !dbg !65
  %68 = bitcast float %67 to i32, !dbg !66
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %16, i1 %10) #1, !dbg !66
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cc2357amrzr6eqytb7z4hk5aizsuzuf7alzblhyw7hc3tzb4zjuc.py", directory: "inductor_cache/c2")
!4 = !{ptr @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_28, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_28, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_28", linkageName: "triton_poi_fused_add_constant_pad_nd_convolution_max_pool2d_with_indices_relu_28", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 27, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 39, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 39, scope: !7)
!26 = !DILocation(line: 34, column: 49, scope: !7)
!27 = !DILocation(line: 34, column: 35, scope: !7)
!28 = !DILocation(line: 34, column: 44, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 61, scope: !7)
!31 = !DILocation(line: 34, column: 54, scope: !7)
!32 = !DILocation(line: 35, column: 40, scope: !7)
!33 = !DILocation(line: 35, column: 49, scope: !7)
!34 = !DILocation(line: 35, column: 30, scope: !7)
!35 = !DILocation(line: 35, column: 59, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 36, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!43 = !DILocation(line: 37, column: 41, scope: !7)
!44 = !DILocation(line: 37, column: 50, scope: !7)
!45 = !DILocation(line: 37, column: 30, scope: !7)
!46 = !DILocation(line: 37, column: 60, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !48)
!48 = !DILocation(line: 38, column: 41, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !48)
!52 = !DILocation(line: 39, column: 42, scope: !7)
!53 = !DILocation(line: 39, column: 51, scope: !7)
!54 = !DILocation(line: 39, column: 31, scope: !7)
!55 = !DILocation(line: 39, column: 61, scope: !7)
!56 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !57)
!57 = !DILocation(line: 40, column: 42, scope: !7)
!58 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !57)
!59 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !57)
!60 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !57)
!61 = !DILocation(line: 42, column: 34, scope: !7)
!62 = !DILocation(line: 43, column: 19, scope: !7)
!63 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !64)
!64 = !DILocation(line: 45, column: 42, scope: !7)
!65 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !64)
!66 = !DILocation(line: 46, column: 40, scope: !7)
!67 = !DILocation(line: 46, column: 4, scope: !7)
