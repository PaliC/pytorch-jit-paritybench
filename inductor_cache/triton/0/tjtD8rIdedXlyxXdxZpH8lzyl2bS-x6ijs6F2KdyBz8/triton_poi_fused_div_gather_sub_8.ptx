//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_gather_sub_8 // -- Begin function triton_poi_fused_div_gather_sub_8
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 50, 106, 47, 99, 50, 106, 51, 52, 103, 121, 105, 55, 99, 120, 100, 118, 102, 53, 106, 117, 51, 112, 122, 110, 116, 100, 108, 103, 52, 108, 110, 113, 119, 121, 52, 108, 118, 115, 119, 121, 122, 105, 119, 122, 115, 115, 112, 112, 112, 51, 115, 98, 112, 118, 117, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 50, 106, 47, 99, 50, 106, 51, 52, 103, 121, 105, 55, 99, 120, 100, 118, 102, 53, 106, 117, 51, 112, 122, 110, 116, 100, 108, 103, 52, 108, 110, 113, 119, 121, 52, 108, 118, 115, 119, 121, 122, 105, 119, 122, 115, 115, 112, 112, 112, 51, 115, 98, 112, 118, 117, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_div_gather_sub_8
.visible .entry triton_poi_fused_div_gather_sub_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_gather_sub_8_param_7,
	.param .u32 triton_poi_fused_div_gather_sub_8_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<60>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<60>;
	.loc	1 19 0                          // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:19:0

// %bb.0:
	ld.param.u64 	%rd17, [triton_poi_fused_div_gather_sub_8_param_0];
$L__tmp0:
	.loc	1 21 28                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:21:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:21:33
	shl.b32 	%r14, %r9, 8;
	ld.param.u64 	%rd18, [triton_poi_fused_div_gather_sub_8_param_3];
	.loc	1 22 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 1;
	and.b32  	%r17, %r16, 254;
	ld.param.u64 	%rd19, [triton_poi_fused_div_gather_sub_8_param_5];
	.loc	1 22 23                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:22:23
	or.b32  	%r1, %r14, %r17;
	.loc	1 23 21                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:23:21
	setp.gt.s32 	%p7, %r1, 255;
	setp.lt.s32 	%p6, %r1, 256;
	.loc	1 24 19                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:24:19
	bfe.s32 	%r18, %r9, 23, 1;
	shr.u32 	%r19, %r18, 28;
	add.s32 	%r20, %r1, %r19;
	shr.s32 	%r21, %r20, 4;
	.loc	1 25 21                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:25:21
	shr.s32 	%r22, %r1, 31;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r1, %r23;
	shr.s32 	%r3, %r24, 2;
	.loc	1 30 30                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:30:30
	mul.wide.s32 	%rd20, %r21, 8;
	add.s64 	%rd10, %rd17, %rd20;
	.loc	1 30 35                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:30:35
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 31 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:31:31
	mul.wide.s32 	%rd21, %r3, 4;
	add.s64 	%rd13, %rd18, %rd21;
	.loc	1 31 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:31:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r11 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 32 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:32:31
	add.s64 	%rd15, %rd19, %rd21;
	.loc	1 32 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:32:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 36 32                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:36:32
	shr.u64 	%rd22, %rd9, 61;
	and.b64  	%rd23, %rd22, 4;
	add.s64 	%rd1, %rd23, %rd9;
	.loc	1 37 37                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:37:37
	setp.lt.u64 	%p8, %rd1, 4;
	.loc	1 37 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:37:60
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:0:60
	ld.param.u64 	%rd4, [triton_poi_fused_div_gather_sub_8_param_1];
	.loc	1 26 19                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:26:19
	shr.u32 	%r26, %r22, 26;
	add.s32 	%r27, %r1, %r26;
	shr.s32 	%r28, %r27, 6;
	.loc	1 25 26                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:25:26
	shr.u32 	%r29, %r3, 30;
	add.s32 	%r30, %r3, %r29;
	and.b32  	%r31, %r30, -4;
	sub.s32 	%r32, %r3, %r31;
	.loc	1 37 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:37:60
	bar.sync 	0;
	.loc	1 38 47                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:38:47
	shl.b32 	%r8, %r28, 4;
	.loc	1 38 30                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:38:30
	shl.b64 	%rd28, %rd1, 5;
	add.s64 	%rd29, %rd4, %rd28;
	mul.wide.s32 	%rd30, %r32, 8;
	add.s64 	%rd31, %rd29, %rd30;
	mul.wide.s32 	%rd32, %r8, 8;
	add.s64 	%rd25, %rd31, %rd32;
	.loc	1 38 52                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:38:52
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 41 32                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:41:32
	shr.u64 	%rd33, %rd24, 61;
	and.b64  	%rd34, %rd33, 4;
	add.s64 	%rd3, %rd34, %rd24;
	.loc	1 42 37                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:42:37
	setp.lt.u64 	%p13, %rd3, 4;
	.loc	1 42 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:42:60
	or.pred  	%p14, %p7, %p13;
	@%p14 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %__nv_sqrtf.exit
	.loc	1 0 60                          // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:0:60
	ld.param.u64 	%rd8, [triton_poi_fused_div_gather_sub_8_param_7];
	ld.param.u64 	%rd7, [triton_poi_fused_div_gather_sub_8_param_6];
	ld.param.u64 	%rd6, [triton_poi_fused_div_gather_sub_8_param_4];
	ld.param.u64 	%rd5, [triton_poi_fused_div_gather_sub_8_param_2];
	shl.b64 	%rd2, %rd1, 2;
	.loc	1 32 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:32:36
	mov.b32 	%f1, %r13;
	mov.b32 	%f2, %r12;
	.loc	1 31 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:31:36
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r10;
	.loc	1 27 19                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:27:19
	shl.b32 	%r57, %r3, 2;
	sub.s32 	%r58, %r1, %r57;
	.loc	1 42 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:42:60
	bar.sync 	0;
	.loc	1 43 36                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:43:36
	add.s32 	%r59, %r8, %r58;
	cvt.s64.s32 	%rd41, %r59;
	.loc	1 43 45                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:43:45
	add.s64 	%rd42, %rd2, %rd41;
	.loc	1 43 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:43:31
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd35, %rd5, %rd43;
	.loc	1 43 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:43:53
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p6 ld.global.v2.b32 { %r33, %r34 }, [ %rd35 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r33;
	mov.b32 	%f6, %r34;
	.loc	1 44 38                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:44:38
	shl.b64 	%rd44, %rd3, 2;
	.loc	1 44 45                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:44:45
	add.s64 	%rd45, %rd44, %rd41;
	.loc	1 44 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:44:31
	shl.b64 	%rd46, %rd45, 2;
	add.s64 	%rd36, %rd5, %rd46;
	.loc	1 44 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:44:53
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p6 ld.global.v2.b32 { %r35, %r36 }, [ %rd36 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r35;
	mov.b32 	%f8, %r36;
	.loc	1 45 20                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:45:20
	sub.f32 	%f9, %f5, %f7;
	sub.f32 	%f10, %f6, %f8;
	.loc	1 46 27                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:46:27
	sqrt.approx.ftz.f32 	%f11, %f4;
	sqrt.approx.ftz.f32 	%f12, %f3;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p21, %f11, 0f2B8CBCCC;
	setp.gt.f32 	%p22, %f12, 0f2B8CBCCC;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f11, %f11;
	setp.nan.f32 	%p24, %f12, %f12;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, %f11, 0f2B8CBCCC, %p23;
	selp.f32 	%f14, %f11, %f13, %p21;
	selp.f32 	%f15, %f12, 0f2B8CBCCC, %p24;
	selp.f32 	%f16, %f12, %f15, %p22;
$L__tmp2:
	.loc	1 49 20                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:49:20
	mov.b32 	%r38, %f9;
	mov.b32 	%r39, %f14;
	// begin inline asm
	div.full.f32 %r53, %r38, %r39;
	// end inline asm
	mov.b32 	%r41, %f10;
	mov.b32 	%r42, %f16;
	// begin inline asm
	div.full.f32 %r54, %r41, %r42;
	// end inline asm
	.loc	1 50 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:50:31
	add.s64 	%rd37, %rd6, %rd43;
	.loc	1 50 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:50:53
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p6 ld.global.v2.b32 { %r43, %r44 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 51 31                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:51:31
	add.s64 	%rd38, %rd6, %rd46;
	.loc	1 51 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:51:53
	// begin inline asm
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p6 ld.global.v2.b32 { %r45, %r46 }, [ %rd38 + 0 ];
	// end inline asm
	.loc	1 53 27                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:53:27
	sqrt.approx.ftz.f32 	%f17, %f2;
	sqrt.approx.ftz.f32 	%f18, %f1;
	.loc	1 50 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:50:53
	mov.b32 	%f19, %r44;
	.loc	1 51 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:51:53
	mov.b32 	%f20, %r46;
	.loc	1 52 20                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:52:20
	sub.f32 	%f21, %f19, %f20;
	.loc	1 50 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:50:53
	mov.b32 	%f22, %r43;
	.loc	1 51 53                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:51:53
	mov.b32 	%f23, %r45;
	.loc	1 52 20                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:52:20
	sub.f32 	%f24, %f22, %f23;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p25, %f17, 0f2B8CBCCC;
	setp.gt.f32 	%p26, %f18, 0f2B8CBCCC;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p27, %f17, %f17;
	setp.nan.f32 	%p28, %f18, %f18;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f17, 0f2B8CBCCC, %p27;
	selp.f32 	%f26, %f17, %f25, %p25;
	selp.f32 	%f27, %f18, 0f2B8CBCCC, %p28;
	selp.f32 	%f28, %f18, %f27, %p26;
$L__tmp4:
	.loc	1 55 20                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:55:20
	mov.b32 	%r48, %f24;
	mov.b32 	%r49, %f26;
	// begin inline asm
	div.full.f32 %r55, %r48, %r49;
	// end inline asm
	mov.b32 	%r51, %f21;
	mov.b32 	%r52, %f28;
	// begin inline asm
	div.full.f32 %r56, %r51, %r52;
	// end inline asm
	.loc	1 56 25                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:56:25
	mul.wide.s32 	%rd47, %r1, 4;
	add.s64 	%rd39, %rd7, %rd47;
	.loc	1 56 37                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:56:37
	// begin inline asm
	@%p6 st.global.v2.b32 [ %rd39 + 0 ], { %r53, %r54 };
	// end inline asm
	.loc	1 57 25                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:57:25
	add.s64 	%rd40, %rd8, %rd47;
	.loc	1 57 37                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:57:37
	// begin inline asm
	@%p6 st.global.v2.b32 [ %rd40 + 0 ], { %r55, %r56 };
	// end inline asm
	.loc	1 57 4                          // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:57:4
	ret;
$L__BB0_1:
	.loc	1 37 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:37:60
	mov.u64 	%rd54, assertMessage_0;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, assertFile_0;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, assertFunc_0;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd55;
	.param .b64 param1;
	st.param.b64 	[param1], %rd57;
	.param .b32 param2;
	st.param.b32 	[param2], 37;
	.param .b64 param3;
	st.param.b64 	[param3], %rd59;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_3:
	.loc	1 42 60                         // c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py:42:60
	mov.u64 	%rd48, assertMessage_1;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, assertFile_1;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, assertFunc_1;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd49;
	.param .b64 param1;
	st.param.b64 	[param1], %rd51;
	.param .b32 param2;
	st.param.b32 	[param2], 42;
	.param .b64 param3;
	st.param.b64 	[param3], %rd53;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/2j/c2j34gyi7cxdvf5ju3pzntdlg4lnqwy4lvswyziwzssppp3sbpvu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 106
.b8 51
.b8 52
.b8 103
.b8 121
.b8 105
.b8 55
.b8 99
.b8 120
.b8 100
.b8 118
.b8 102
.b8 53
.b8 106
.b8 117
.b8 51
.b8 112
.b8 122
.b8 110
.b8 116
.b8 100
.b8 108
.b8 103
.b8 52
.b8 108
.b8 110
.b8 113
.b8 119
.b8 121
.b8 52
.b8 108
.b8 118
.b8 115
.b8 119
.b8 121
.b8 122
.b8 105
.b8 119
.b8 122
.b8 115
.b8 115
.b8 112
.b8 112
.b8 112
.b8 51
.b8 115
.b8 98
.b8 112
.b8 118
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x24 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
