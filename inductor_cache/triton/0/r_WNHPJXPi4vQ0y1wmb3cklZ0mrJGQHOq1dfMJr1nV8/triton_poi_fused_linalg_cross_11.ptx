//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_linalg_cross_11 // -- Begin function triton_poi_fused_linalg_cross_11
                                        // @triton_poi_fused_linalg_cross_11
.visible .entry triton_poi_fused_linalg_cross_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused_linalg_cross_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_linalg_cross_11_param_1,
	.param .u32 triton_poi_fused_linalg_cross_11_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_linalg_cross_11_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_linalg_cross_11_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:21:33
	shl.b32 	%r4, %r1, 7;
	.loc	1 22 36                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:22:36
	mov.u32 	%r5, %tid.x;
	and.b32  	%r6, %r5, 127;
	.loc	1 22 23                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:22:23
	or.b32  	%r7, %r4, %r6;
	.loc	1 23 21                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:23:21
	setp.lt.s32 	%p1, %r7, 288;
	.loc	1 24 19                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:24:19
	mul.hi.s32 	%r8, %r7, 1431655766;
	shr.u32 	%r9, %r8, 31;
	add.s32 	%r10, %r8, %r9;
	mul.lo.s32 	%r11, %r10, 3;
	sub.s32 	%r12, %r7, %r11;
	.loc	1 27 50                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:27:50
	setp.lt.s32 	%p3, %r12, 1;
	selp.b32 	%r13, 2, -1, %p3;
	.loc	1 27 39                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:27:39
	add.s32 	%r14, %r13, %r7;
	.loc	1 27 30                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:27:30
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 27 56                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:27:56
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 25                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:28:25
	mul.wide.s32 	%rd6, %r7, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 28 36                         // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:28:36
	// begin inline asm
	@%p1 st.global.b32 [ %rd2 + 0 ], { %r3 };
	// end inline asm
	.loc	1 28 4                          // cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py:28:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fq/cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 113
.b8 51
.b8 116
.b8 104
.b8 118
.b8 119
.b8 120
.b8 50
.b8 99
.b8 50
.b8 120
.b8 110
.b8 100
.b8 122
.b8 53
.b8 100
.b8 111
.b8 122
.b8 106
.b8 121
.b8 117
.b8 107
.b8 114
.b8 52
.b8 101
.b8 114
.b8 122
.b8 117
.b8 103
.b8 121
.b8 118
.b8 99
.b8 107
.b8 53
.b8 50
.b8 114
.b8 53
.b8 102
.b8 101
.b8 115
.b8 116
.b8 114
.b8 113
.b8 53
.b8 117
.b8 101
.b8 106
.b8 122
.b8 100
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
