//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clamp_div_gather_sub_2 // -- Begin function triton_poi_fused_clamp_div_gather_sub_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 106, 108, 47, 99, 106, 108, 119, 120, 102, 105, 107, 118, 101, 51, 55, 116, 111, 117, 99, 117, 118, 108, 118, 97, 113, 54, 120, 112, 109, 115, 121, 52, 103, 104, 114, 50, 122, 98, 99, 108, 115, 55, 105, 107, 107, 110, 51, 100, 55, 50, 122, 102, 51, 114, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 55, 32, 60, 32, 52};
                                        // @triton_poi_fused_clamp_div_gather_sub_2
.visible .entry triton_poi_fused_clamp_div_gather_sub_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_sub_2_param_2,
	.param .u32 triton_poi_fused_clamp_div_gather_sub_2_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_clamp_div_gather_sub_2_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_clamp_div_gather_sub_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:21:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:21:33
	shl.b32 	%r8, %r5, 8;
	.loc	1 22 36                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:22:36
	mov.u32 	%r9, %tid.x;
	shl.b32 	%r10, %r9, 1;
	and.b32  	%r11, %r10, 254;
	.loc	1 22 23                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:22:23
	or.b32  	%r1, %r8, %r11;
	.loc	1 23 21                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:23:21
	setp.gt.s32 	%p4, %r1, 255;
	setp.lt.s32 	%p3, %r1, 256;
	.loc	1 25 19                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:25:19
	bfe.s32 	%r12, %r5, 23, 1;
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r1, %r13;
	shr.s32 	%r2, %r14, 2;
	.loc	1 26 34                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:26:34
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd6, %rd11, %rd13;
	.loc	1 26 39                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:26:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p3 ld.global.v2.b32 { %r6, %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:27:30
	mul.wide.s32 	%rd14, %r2, 8;
	add.s64 	%rd8, %rd12, %rd14;
	.loc	1 27 35                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:27:35
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 29 18                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:29:18
	add.s64 	%rd15, %rd7, -1;
	.loc	1 31 18                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:31:18
	add.s64 	%rd16, %rd7, 3;
	.loc	1 32 18                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:32:18
	setp.lt.s64 	%p5, %rd15, 0;
	.loc	1 33 32                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:33:32
	selp.b64 	%rd4, %rd16, %rd15, %p5;
	.loc	1 34 37                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:34:37
	setp.lt.u64 	%p6, %rd4, 4;
	.loc	1 34 60                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:34:60
	or.pred  	%p7, %p4, %p6;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:0:60
	ld.param.u64 	%rd5, [triton_poi_fused_clamp_div_gather_sub_2_param_2];
	.loc	1 26 39                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:26:39
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r6;
	.loc	1 34 60                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:34:60
	bar.sync 	0;
	.loc	1 35 39                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:35:39
	shl.b32 	%r25, %r2, 2;
	.loc	1 35 30                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:35:30
	shl.b64 	%rd20, %rd4, 2;
	add.s64 	%rd21, %rd5, %rd20;
	mul.wide.s32 	%rd22, %r25, 4;
	add.s64 	%rd17, %rd21, %rd22;
	.loc	1 35 44                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:35:44
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r15 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r16 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r16;
	.loc	1 37 19                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:37:19
	add.f32 	%f5, %f3, 0fBF800000;
	add.f32 	%f6, %f4, 0fBF800000;
	.loc	1 38 20                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:38:20
	cvt.rn.f32.s64 	%f7, %rd7;
	cvt.rn.f32.s64 	%f8, %rd9;
	.loc	1 39 20                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:39:20
	mov.b32 	%r18, %f5;
	mov.b32 	%r19, %f7;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f9, %r17;
	mov.b32 	%r21, %f6;
	mov.b32 	%r22, %f8;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f10, %r20;
	.loc	1 40 19                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:40:19
	sub.f32 	%f11, %f2, %f9;
	sub.f32 	%f12, %f1, %f10;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p11, %f11, 0f00000000;
	selp.f32 	%f13, 0f00000000, %f11, %p11;
	setp.le.f32 	%p12, %f12, 0f00000000;
	selp.f32 	%f14, 0f00000000, %f12, %p12;
$L__tmp2:
	.loc	1 43 40                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:43:40
	mov.b32 	%r23, %f13;
	mov.b32 	%r24, %f14;
	// begin inline asm
	@%p3 st.global.v2.b32 [ %rd6 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 43 4                          // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:43:4
	ret;
$L__BB0_1:
	.loc	1 34 60                         // cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py:34:60
	mov.u64 	%rd23, assertMessage_0;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, assertFile_0;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, assertFunc_0;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd24;
	.param .b64 param1;
	st.param.b64 	[param1], %rd26;
	.param .b32 param2;
	st.param.b32 	[param2], 34;
	.param .b64 param3;
	st.param.b64 	[param3], %rd28;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jl/cjlwxfikve37toucuvlvaq6xpmsy4ghr2zbcls7ikkn3d72zf3rl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 184                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 108
.b8 119
.b8 120
.b8 102
.b8 105
.b8 107
.b8 118
.b8 101
.b8 51
.b8 55
.b8 116
.b8 111
.b8 117
.b8 99
.b8 117
.b8 118
.b8 108
.b8 118
.b8 97
.b8 113
.b8 54
.b8 120
.b8 112
.b8 109
.b8 115
.b8 121
.b8 52
.b8 103
.b8 104
.b8 114
.b8 50
.b8 122
.b8 98
.b8 99
.b8 108
.b8 115
.b8 55
.b8 105
.b8 107
.b8 107
.b8 110
.b8 51
.b8 100
.b8 55
.b8 50
.b8 122
.b8 102
.b8 51
.b8 114
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
