//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u32 triton_poi_fused_cat_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:21:33
	shl.b32 	%r16, %r1, 8;
	.loc	1 22 36                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:22:36
	mov.u32 	%r17, %tid.x;
	shl.b32 	%r18, %r17, 1;
	and.b32  	%r19, %r18, 254;
	.loc	1 22 23                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:22:23
	or.b32  	%r20, %r16, %r19;
	or.b32  	%r21, %r20, 1;
	.loc	1 23 21                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:23:21
	setp.lt.s32 	%p13, %r20, 384;
	.loc	1 25 19                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:25:19
	mul.hi.s32 	%r23, %r20, 715827883;
	shr.u32 	%r24, %r23, 31;
	add.s32 	%r25, %r23, %r24;
	.loc	1 24 19                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:24:19
	mul.lo.s32 	%r26, %r25, 6;
	sub.s32 	%r27, %r20, %r26;
	mul.hi.s32 	%r28, %r21, 715827883;
	shr.u32 	%r29, %r28, 31;
	add.s32 	%r30, %r28, %r29;
	mul.lo.s32 	%r31, %r30, 6;
	sub.s32 	%r32, %r21, %r31;
	.loc	1 31 18                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:31:18
	setp.lt.s32 	%p14, %r27, 1;
	setp.lt.s32 	%p15, %r32, 1;
	.loc	1 32 36                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:32:36
	shl.b32 	%r33, %r25, 2;
	.loc	1 32 30                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:32:30
	mul.wide.s32 	%rd10, %r33, 4;
	add.s64 	%rd5, %rd8, %rd10;
	add.s64 	%rd1, %rd5, 12;
	.loc	1 32 48                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:32:48
	and.pred  	%p1, %p13, %p14;
	and.pred  	%p3, %p15, %p13;
	mov.b32 	%r3, 0;
	.loc	1 32 41                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:32:41
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 36 18                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:36:18
	add.s32 	%r34, %r27, -1;
	setp.lt.u32 	%p16, %r34, 4;
	setp.lt.u32 	%p17, %r32, 5;
	.loc	1 37 31                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:37:31
	mul.wide.s32 	%rd11, %r27, 4;
	add.s64 	%rd12, %rd5, %rd11;
	add.s64 	%rd3, %rd12, -4;
	mul.wide.s32 	%rd13, %r32, 4;
	add.s64 	%rd14, %rd5, %rd13;
	add.s64 	%rd4, %rd14, -4;
	.loc	1 37 59                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:37:59
	and.pred  	%p5, %p13, %p16;
	and.pred  	%p7, %p17, %p13;
	.loc	1 37 52                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:37:52
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 38 20                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:38:20
	setp.gt.s32 	%p18, %r27, 4;
	setp.gt.s32 	%p19, %r32, 4;
	.loc	1 41 46                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:41:46
	and.pred  	%p9, %p13, %p18;
	and.pred  	%p11, %p19, %p13;
	.loc	1 41 38                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:41:38
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 42 34                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:42:34
	selp.b32 	%r35, %r6, %r10, %p16;
	selp.b32 	%r36, %r8, %r12, %p17;
	.loc	1 43 33                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:43:33
	selp.b32 	%r14, %r2, %r35, %p14;
	selp.b32 	%r15, %r4, %r36, %p15;
	.loc	1 44 25                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:44:25
	mul.wide.s32 	%rd15, %r20, 4;
	add.s64 	%rd7, %rd9, %rd15;
	.loc	1 44 37                         // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:44:37
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd7 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 44 4                          // cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xh/cxhrv5e33j4crjkpnq2tu76hfyq5nbfxwhb2pljz6gddgrmz4uly.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 104
.b8 114
.b8 118
.b8 53
.b8 101
.b8 51
.b8 51
.b8 106
.b8 52
.b8 99
.b8 114
.b8 106
.b8 107
.b8 112
.b8 110
.b8 113
.b8 50
.b8 116
.b8 117
.b8 55
.b8 54
.b8 104
.b8 102
.b8 121
.b8 113
.b8 53
.b8 110
.b8 98
.b8 102
.b8 120
.b8 119
.b8 104
.b8 98
.b8 50
.b8 112
.b8 108
.b8 106
.b8 122
.b8 54
.b8 103
.b8 100
.b8 100
.b8 103
.b8 114
.b8 109
.b8 122
.b8 52
.b8 117
.b8 108
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
