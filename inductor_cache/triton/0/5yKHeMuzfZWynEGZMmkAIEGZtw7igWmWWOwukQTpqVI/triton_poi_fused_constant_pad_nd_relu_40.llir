; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_relu_40(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 156672, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 18, !dbg !15
  %13 = srem i32 %12, 17, !dbg !16
  %14 = mul i32 %12, 18, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = srem i32 %10, 18, !dbg !17
  %16 = sdiv i32 %9, 306, !dbg !18
  %17 = icmp sgt i32 %13, 0, !dbg !19
  %18 = add nsw i32 %.decomposed, -1, !dbg !20
  %19 = icmp ult i32 %18, 16, !dbg !20
  %20 = and i1 %17, %19, !dbg !20
  %21 = icmp ult i32 %15, 17, !dbg !20
  %22 = and i1 %21, %17, !dbg !20
  %23 = shl nsw i32 %13, 4, !dbg !21
  %24 = shl nsw i32 %16, 8, !dbg !22
  %25 = add nsw i32 %24, -17, !dbg !23
  %26 = add nsw i32 %25, %.decomposed, !dbg !24
  %27 = add nsw i32 %26, %23, !dbg !25
  %28 = add nsw i32 %25, %15, !dbg !24
  %29 = add nsw i32 %28, %23, !dbg !25
  %30 = sext i32 %27 to i64, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !26
  %32 = sext i32 %29 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !26
  %34 = and i1 %11, %20, !dbg !27
  %35 = and i1 %11, %22, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %34, i32 0, i1 %34) #1, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %35, i32 0, i1 %35) #1, !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = fcmp olt float %37, 0.000000e+00, !dbg !29
  %41 = fcmp olt float %39, 0.000000e+00, !dbg !29
  %42 = select i1 %40, float 0.000000e+00, float %37, !dbg !33
  %43 = select i1 %41, float 0.000000e+00, float %39, !dbg !33
  %44 = sext i32 %9 to i64, !dbg !34
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !34
  %46 = bitcast float %42 to i32, !dbg !35
  %47 = select i1 %20, i32 %46, i32 0, !dbg !36
  %48 = bitcast float %43 to i32, !dbg !35
  %49 = select i1 %22, i32 %48, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %47, i32 %49, ptr addrspace(1) %45, i1 %11) #1, !dbg !35
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crsaaduiiim3di7h5wgydt5vbwfhs7vyuoxopfuqcjjmc4dpw6zn.py", directory: "inductor_cache/rs")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_relu_40, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_relu_40, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_relu_40", linkageName: "triton_poi_fused_constant_pad_nd_relu_40", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 36, column: 18, scope: !7)
!21 = !DILocation(line: 37, column: 46, scope: !7)
!22 = !DILocation(line: 37, column: 55, scope: !7)
!23 = !DILocation(line: 37, column: 38, scope: !7)
!24 = !DILocation(line: 37, column: 43, scope: !7)
!25 = !DILocation(line: 37, column: 51, scope: !7)
!26 = !DILocation(line: 37, column: 30, scope: !7)
!27 = !DILocation(line: 37, column: 67, scope: !7)
!28 = !DILocation(line: 37, column: 60, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!32 = !DILocation(line: 39, column: 42, scope: !7)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 42, column: 25, scope: !7)
!35 = !DILocation(line: 42, column: 37, scope: !7)
!36 = !DILocation(line: 41, column: 34, scope: !7)
!37 = !DILocation(line: 42, column: 4, scope: !7)
