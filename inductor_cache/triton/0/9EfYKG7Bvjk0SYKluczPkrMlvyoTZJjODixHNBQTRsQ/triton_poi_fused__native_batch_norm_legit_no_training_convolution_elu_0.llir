; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 1024, !dbg !14
  %16 = sdiv i32 %14, 64, !dbg !15
  %17 = srem i32 %16, 4, !dbg !16
  %18 = sext i32 %14 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %15) #3, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = sext i32 %17 to i64, !dbg !19
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #3, !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #3, !dbg !20
  %30 = bitcast i32 %29 to float, !dbg !20
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %25, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !22
  %33 = bitcast i32 %32 to float, !dbg !22
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !22
  %35 = bitcast i32 %34 to float, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %4, i64 %25, !dbg !23
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #3, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #3, !dbg !24
  %40 = bitcast i32 %39 to float, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %5, i64 %25, !dbg !25
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %15) #3, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %15) #3, !dbg !26
  %45 = bitcast i32 %44 to float, !dbg !26
  %46 = getelementptr float, ptr addrspace(1) %6, i64 %25, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %15) #3, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %15) #3, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = fadd float %23, %28, !dbg !29
  %52 = fadd float %24, %30, !dbg !29
  %53 = fsub float %51, %33, !dbg !30
  %54 = fsub float %52, %35, !dbg !30
  %55 = fadd float %38, 0x3EE4F8B580000000, !dbg !31
  %56 = fadd float %40, 0x3EE4F8B580000000, !dbg !31
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i = icmp eq i32 %57, 0, !dbg !32
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !32
  %.not1.i = icmp eq i32 %58, 0, !dbg !32
  br i1 %.not.i, label %64, label %59, !dbg !32

59:                                               ; preds = %8
  br i1 %.not1.i, label %62, label %60, !dbg !32

60:                                               ; preds = %59
  %61 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %55) #3, !dbg !32
  br label %__nv_sqrtf.exit, !dbg !32

62:                                               ; preds = %59
  %63 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %55) #3, !dbg !32
  br label %__nv_sqrtf.exit, !dbg !32

64:                                               ; preds = %8
  br i1 %.not1.i, label %67, label %65, !dbg !32

65:                                               ; preds = %64
  %66 = tail call float @llvm.nvvm.sqrt.rn.f(float %55) #3, !dbg !32
  br label %__nv_sqrtf.exit, !dbg !32

67:                                               ; preds = %64
  %68 = tail call float @llvm.nvvm.sqrt.approx.f(float %55) #3, !dbg !32
  br label %__nv_sqrtf.exit, !dbg !32

__nv_sqrtf.exit:                                  ; preds = %60, %62, %65, %67
  %.0.i = phi float [ %61, %60 ], [ %63, %62 ], [ %66, %65 ], [ %68, %67 ], !dbg !32
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i1 = icmp eq i32 %69, 0, !dbg !32
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !32
  %.not1.i4 = icmp eq i32 %70, 0, !dbg !32
  br i1 %.not.i1, label %76, label %71, !dbg !32

71:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %74, label %72, !dbg !32

72:                                               ; preds = %71
  %73 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %56) #3, !dbg !32
  br label %__nv_sqrtf.exit5, !dbg !32

74:                                               ; preds = %71
  %75 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %56) #3, !dbg !32
  br label %__nv_sqrtf.exit5, !dbg !32

76:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %79, label %77, !dbg !32

77:                                               ; preds = %76
  %78 = tail call float @llvm.nvvm.sqrt.rn.f(float %56) #3, !dbg !32
  br label %__nv_sqrtf.exit5, !dbg !32

79:                                               ; preds = %76
  %80 = tail call float @llvm.nvvm.sqrt.approx.f(float %56) #3, !dbg !32
  br label %__nv_sqrtf.exit5, !dbg !32

__nv_sqrtf.exit5:                                 ; preds = %72, %74, %77, %79
  %.0.i3 = phi float [ %73, %72 ], [ %75, %74 ], [ %78, %77 ], [ %80, %79 ], !dbg !32
  %81 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !33
  %82 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !33
  %83 = fmul float %53, %81, !dbg !34
  %84 = fmul float %54, %82, !dbg !34
  %85 = fmul float %83, %43, !dbg !35
  %86 = fmul float %84, %45, !dbg !35
  %87 = fadd float %85, %48, !dbg !36
  %88 = fadd float %86, %50, !dbg !36
  %89 = fmul float %87, 0x3FF7154760000000, !dbg !37
  %90 = tail call float @llvm.nvvm.round.f(float %89) #3, !dbg !37
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i6 = icmp eq i32 %91, 0, !dbg !37
  %92 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #3, !dbg !37
  %93 = tail call float @llvm.nvvm.fabs.f(float %87) #3, !dbg !37
  %.03.i = select i1 %.not.i6, float %93, float %92, !dbg !37
  %94 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !37
  %t.0.i = select i1 %94, float 0.000000e+00, float %90, !dbg !37
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %97 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !37
  %j.0.i = select i1 %97, float 1.270000e+02, float %t.0.i, !dbg !37
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not8.i = icmp eq i32 %103, 0, !dbg !37
  br i1 %.not8.i, label %106, label %104, !dbg !37

104:                                              ; preds = %__nv_sqrtf.exit5
  %105 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !37
  br label %__nv_expm1f.exit, !dbg !37

106:                                              ; preds = %__nv_sqrtf.exit5
  %107 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !37
  br label %__nv_expm1f.exit, !dbg !37

__nv_expm1f.exit:                                 ; preds = %104, %106
  %.0.i7 = phi float [ %105, %104 ], [ %107, %106 ], !dbg !37
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %109 = fmul float %88, 0x3FF7154760000000, !dbg !37
  %110 = tail call float @llvm.nvvm.round.f(float %109) #3, !dbg !37
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i10 = icmp eq i32 %111, 0, !dbg !37
  %112 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #3, !dbg !37
  %113 = tail call float @llvm.nvvm.fabs.f(float %88) #3, !dbg !37
  %.03.i11 = select i1 %.not.i10, float %113, float %112, !dbg !37
  %114 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !37
  %t.0.i12 = select i1 %114, float 0.000000e+00, float %110, !dbg !37
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %117 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !37
  %j.0.i13 = select i1 %117, float 1.270000e+02, float %t.0.i12, !dbg !37
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not8.i14 = icmp eq i32 %123, 0, !dbg !37
  br i1 %.not8.i14, label %126, label %124, !dbg !37

124:                                              ; preds = %__nv_expm1f.exit
  %125 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !37
  br label %__nv_expm1f.exit36, !dbg !37

126:                                              ; preds = %__nv_expm1f.exit
  %127 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !37
  br label %__nv_expm1f.exit36, !dbg !37

__nv_expm1f.exit36:                               ; preds = %124, %126
  %.0.i15 = phi float [ %125, %124 ], [ %127, %126 ], !dbg !37
  %128 = fcmp oeq float %87, 0.000000e+00, !dbg !37
  %129 = fadd float %87, %87, !dbg !37
  %130 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !37
  %131 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !37
  %.not9.i = icmp eq i32 %108, 0, !dbg !37
  %.not7.i = icmp eq i32 %102, 0, !dbg !37
  %.not6.i = icmp eq i32 %101, 0, !dbg !37
  %.not5.i = icmp eq i32 %100, 0, !dbg !37
  %.not4.i = icmp eq i32 %99, 0, !dbg !37
  %.not3.i = icmp eq i32 %98, 0, !dbg !37
  %.not2.i8 = icmp eq i32 %96, 0, !dbg !37
  %132 = fneg float %t.0.i, !dbg !37
  %.not1.i9 = icmp eq i32 %95, 0, !dbg !37
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0x3FE62E4000000000, float %87) #3, !dbg !37
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0x3FE62E4000000000, float %87) #3, !dbg !37
  %.04.i = select i1 %.not1.i9, float %133, float %134, !dbg !37
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !37
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !37
  %.05.i = select i1 %.not2.i8, float %135, float %136, !dbg !37
  %137 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !37
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !37
  %.07.i = select i1 %.not3.i, float %137, float %138, !dbg !37
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !37
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !37
  %.08.i = select i1 %.not4.i, float %139, float %140, !dbg !37
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !37
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !37
  %.09.i = select i1 %.not5.i, float %141, float %142, !dbg !37
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !37
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !37
  %.06.i = select i1 %.not6.i, float %143, float %144, !dbg !37
  %145 = fmul float %.05.i, %.06.i, !dbg !37
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %145, float %.05.i, float %.05.i) #3, !dbg !37
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float %.05.i, float %.05.i) #3, !dbg !37
  %.01.i = select i1 %.not7.i, float %146, float %147, !dbg !37
  %148 = fadd float %.0.i7, -1.000000e+00, !dbg !37
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %148) #3, !dbg !37
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %148) #3, !dbg !37
  %.02.i = select i1 %.not9.i, float %149, float %150, !dbg !37
  %151 = fadd float %.02.i, %.02.i, !dbg !37
  %u.0.i = select i1 %97, float %151, float %.02.i, !dbg !37
  %u.1.i = select i1 %131, float 0x7FF0000000000000, float %u.0.i, !dbg !37
  %u.2.i = select i1 %130, float -1.000000e+00, float %u.1.i, !dbg !37
  %u.3.i = select i1 %128, float %129, float %u.2.i, !dbg !37
  %152 = fcmp ogt float %88, 0.000000e+00, !dbg !38
  %153 = fcmp ogt float %87, 0.000000e+00, !dbg !38
  %.not7.i16 = icmp eq i32 %122, 0, !dbg !37
  %.not6.i17 = icmp eq i32 %121, 0, !dbg !37
  %.not5.i18 = icmp eq i32 %120, 0, !dbg !37
  %.not4.i19 = icmp eq i32 %119, 0, !dbg !37
  %.not3.i20 = icmp eq i32 %118, 0, !dbg !37
  %.not2.i21 = icmp eq i32 %116, 0, !dbg !37
  %154 = fneg float %t.0.i12, !dbg !37
  %.not1.i22 = icmp eq i32 %115, 0, !dbg !37
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %154, float 0x3FE62E4000000000, float %88) #3, !dbg !37
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float 0x3FE62E4000000000, float %88) #3, !dbg !37
  %.04.i23 = select i1 %.not1.i22, float %155, float %156, !dbg !37
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %154, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !37
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !37
  %.05.i24 = select i1 %.not2.i21, float %157, float %158, !dbg !37
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !37
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !37
  %.07.i25 = select i1 %.not3.i20, float %159, float %160, !dbg !37
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !37
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !37
  %.08.i26 = select i1 %.not4.i19, float %161, float %162, !dbg !37
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !37
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !37
  %.09.i27 = select i1 %.not5.i18, float %163, float %164, !dbg !37
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !37
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !37
  %.06.i28 = select i1 %.not6.i17, float %165, float %166, !dbg !37
  %167 = fmul float %.05.i24, %.06.i28, !dbg !37
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %167, float %.05.i24, float %.05.i24) #3, !dbg !37
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %167, float %.05.i24, float %.05.i24) #3, !dbg !37
  %.01.i29 = select i1 %.not7.i16, float %168, float %169, !dbg !37
  %170 = fadd float %.0.i15, -1.000000e+00, !dbg !37
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not9.i30 = icmp eq i32 %171, 0, !dbg !37
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %170) #3, !dbg !37
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %170) #3, !dbg !37
  %.02.i31 = select i1 %.not9.i30, float %173, float %172, !dbg !37
  %174 = fadd float %.02.i31, %.02.i31, !dbg !37
  %u.0.i32 = select i1 %117, float %174, float %.02.i31, !dbg !37
  %175 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !37
  %u.1.i33 = select i1 %175, float 0x7FF0000000000000, float %u.0.i32, !dbg !37
  %176 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !37
  %u.2.i34 = select i1 %176, float -1.000000e+00, float %u.1.i33, !dbg !37
  %177 = fcmp oeq float %88, 0.000000e+00, !dbg !37
  %178 = fadd float %88, %88, !dbg !37
  %u.3.i35 = select i1 %177, float %178, float %u.2.i34, !dbg !37
  %179 = select i1 %153, float %87, float %u.3.i, !dbg !39
  %180 = select i1 %152, float %88, float %u.3.i35, !dbg !39
  %181 = bitcast float %51 to i32, !dbg !40
  %182 = bitcast float %52 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %181, i32 %182, ptr addrspace(1) %19, i1 %15) #3, !dbg !40
  %183 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !41
  %184 = bitcast float %179 to i32, !dbg !42
  %185 = bitcast float %180 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %184, i32 %185, ptr addrspace(1) %183, i1 %15) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqdt5ae2hd6dcrw7c7p6ivujp5h5adqtpvmtwmj7u5gc2kmah4md.py", directory: "inductor_cache/qd")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 33, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 26, scope: !7)
!33 = !DILocation(line: 38, column: 19, scope: !7)
!34 = !DILocation(line: 41, column: 19, scope: !7)
!35 = !DILocation(line: 42, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 20, scope: !7)
!37 = !DILocation(line: 47, column: 28, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 35, scope: !7)
!40 = !DILocation(line: 50, column: 39, scope: !7)
!41 = !DILocation(line: 51, column: 28, scope: !7)
!42 = !DILocation(line: 51, column: 40, scope: !7)
!43 = !DILocation(line: 51, column: 4, scope: !7)
