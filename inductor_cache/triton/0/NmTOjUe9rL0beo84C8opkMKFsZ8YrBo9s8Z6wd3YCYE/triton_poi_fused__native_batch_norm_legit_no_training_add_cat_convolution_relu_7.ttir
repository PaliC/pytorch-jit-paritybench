#loc = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<512xf32> loc(#loc1)
    %cst_1 = arith.constant dense<8388608> : tensor<512xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-16> : tensor<512xi32> loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<512xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<512xi64> loc(#loc1)
    %cst_6 = arith.constant dense<16777216> : tensor<512xi32> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<512xi32> loc(#loc1)
    %cst_8 = arith.constant dense<262144> : tensor<512xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_8 : tensor<512xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_7 : tensor<512xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_8 : tensor<512xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_6 : tensor<512xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc10)
    %11 = tt.load %10 : tensor<512x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc12)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc14)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc16)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc18)
    %22 = tt.addptr %21, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc18)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc19)
    %24 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc20)
    %25 = tt.addptr %24, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc20)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc21)
    %27 = arith.addf %11, %14 : tensor<512xf32> loc(#loc22)
    %28 = arith.extsi %6 : tensor<512xi32> to tensor<512xi64> loc(#loc23)
    %29 = arith.cmpi slt, %28, %cst_5 : tensor<512xi64> loc(#loc23)
    %30 = arith.cmpi sge, %28, %cst_5 : tensor<512xi64> loc(#loc24)
    %31 = arith.cmpi slt, %28, %cst_3 : tensor<512xi64> loc(#loc25)
    %32 = arith.andi %30, %31 : tensor<512xi1> loc(#loc26)
    %33 = arith.addi %6, %cst_2 : tensor<512xi32> loc(#loc27)
    %34 = arith.muli %33, %cst_8 : tensor<512xi32> loc(#loc28)
    %35 = arith.addi %7, %34 : tensor<512xi32> loc(#loc29)
    %36 = arith.muli %8, %cst_1 : tensor<512xi32> loc(#loc30)
    %37 = arith.addi %35, %36 : tensor<512xi32> loc(#loc31)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc32)
    %39 = tt.addptr %38, %37 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc32)
    %40 = tt.load %39, %32, %cst_4 : tensor<512x!tt.ptr<f32>> loc(#loc33)
    %41 = arith.select %32, %40, %cst_4 : tensor<512xi1>, tensor<512xf32> loc(#loc34)
    %42 = arith.select %29, %cst_4, %41 : tensor<512xi1>, tensor<512xf32> loc(#loc35)
    %43 = arith.addf %27, %42 : tensor<512xf32> loc(#loc36)
    %44 = arith.subf %43, %17 : tensor<512xf32> loc(#loc37)
    %45 = arith.addf %20, %cst_0 : tensor<512xf32> loc(#loc38)
    %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32>) -> tensor<512xf32> loc(#loc39)
    %47 = arith.divf %cst, %46 : tensor<512xf32> loc(#loc40)
    %48 = arith.mulf %44, %47 : tensor<512xf32> loc(#loc41)
    %49 = arith.mulf %48, %23 : tensor<512xf32> loc(#loc42)
    %50 = arith.addf %49, %26 : tensor<512xf32> loc(#loc43)
    %51 = arith.cmpf ogt, %cst_4, %50 : tensor<512xf32> loc(#loc53)
    %52 = arith.select %51, %cst_4, %50 : tensor<512xi1>, tensor<512xf32> loc(#loc54)
    tt.store %10, %27 : tensor<512x!tt.ptr<f32>> loc(#loc47)
    %53 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc48)
    %54 = tt.addptr %53, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc48)
    tt.store %54, %42 : tensor<512x!tt.ptr<f32>> loc(#loc49)
    %55 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc50)
    %56 = tt.addptr %55, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc50)
    tt.store %56, %52 : tensor<512x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":21:28)
#loc3 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":21:33)
#loc4 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":22:36)
#loc5 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":22:23)
#loc6 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":25:21)
#loc7 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":25:31)
#loc8 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":26:19)
#loc9 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":27:19)
#loc10 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":28:34)
#loc11 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":28:39)
#loc12 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":29:30)
#loc13 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":29:35)
#loc14 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":30:31)
#loc15 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":30:36)
#loc16 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":31:31)
#loc17 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":31:36)
#loc18 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":32:31)
#loc19 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":32:36)
#loc20 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":33:31)
#loc21 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":33:36)
#loc22 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":34:18)
#loc23 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":39:18)
#loc24 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":43:20)
#loc25 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":45:19)
#loc26 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":46:20)
#loc27 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:52)
#loc28 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:44)
#loc29 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:36)
#loc30 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:66)
#loc31 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:58)
#loc32 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:31)
#loc33 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":47:71)
#loc34 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":54:35)
#loc35 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":55:34)
#loc36 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":56:19)
#loc37 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":57:20)
#loc38 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":59:20)
#loc39 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":60:27)
#loc40 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":62:20)
#loc41 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":65:20)
#loc42 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":66:20)
#loc43 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":67:20)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc45 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":69:42)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc47 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":70:39)
#loc48 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":71:25)
#loc49 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":71:37)
#loc50 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":72:25)
#loc51 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":72:37)
#loc52 = loc("inductor_cache/5q/c5qapx5pao7sskoqq2gfnhie2fodevfopv4lnz243tohpjmp37uh.py":72:4)
#loc53 = loc(callsite(#loc44 at #loc45))
#loc54 = loc(callsite(#loc46 at #loc45))
