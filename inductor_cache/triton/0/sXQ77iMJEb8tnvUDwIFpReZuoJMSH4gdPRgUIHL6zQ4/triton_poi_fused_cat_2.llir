; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = icmp slt i32 %.decomposed, 2, !dbg !17
  %15 = shl nsw i32 %12, 1, !dbg !18
  %16 = add nsw i32 %15, %.decomposed, !dbg !19
  %17 = sext i32 %16 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = and i1 %11, %14, !dbg !21
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %18, i1 %19, i32 0, i1 %19, i32 0, i1 %19) #1, !dbg !22
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !22
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !22
  %23 = bitcast i32 %21 to float, !dbg !22
  %24 = bitcast i32 %22 to float, !dbg !22
  %25 = sext i32 %12 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %19, i32 0, i1 %19) #1, !dbg !24
  %28 = bitcast i32 %27 to float, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %19, i32 0, i1 %19) #1, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = fadd float %23, %28, !dbg !25
  %32 = fadd float %24, %30, !dbg !25
  %33 = fmul float %31, 0x3FF7154760000000, !dbg !26
  %34 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %33) #1, !dbg !26
  %35 = fmul float %32, 0x3FF7154760000000, !dbg !26
  %36 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %35) #1, !dbg !26
  %37 = icmp sgt i32 %.decomposed, 1, !dbg !27
  %38 = sext i32 %16 to i64, !dbg !28
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !28
  %40 = getelementptr i8, ptr addrspace(1) %39, i64 -8, !dbg !28
  %41 = and i1 %11, %37, !dbg !29
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41, i32 0, i1 %41) #1, !dbg !30
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !30
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !30
  %45 = bitcast i32 %43 to float, !dbg !30
  %46 = bitcast i32 %44 to float, !dbg !30
  %47 = fsub float 0.000000e+00, %45, !dbg !31
  %48 = fsub float 0.000000e+00, %46, !dbg !31
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %41, i32 0, i1 %41) #1, !dbg !32
  %50 = bitcast i32 %49 to float, !dbg !32
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %41, i32 0, i1 %41) #1, !dbg !32
  %52 = bitcast i32 %51 to float, !dbg !32
  %53 = fadd float %47, %50, !dbg !33
  %54 = fadd float %48, %52, !dbg !33
  %55 = fmul float %53, 0x3FF7154760000000, !dbg !34
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #1, !dbg !34
  %57 = fmul float %54, 0x3FF7154760000000, !dbg !34
  %58 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %57) #1, !dbg !34
  %59 = select i1 %14, float %34, float %56, !dbg !35
  %60 = select i1 %14, float %36, float %58, !dbg !35
  %61 = sext i32 %10 to i64, !dbg !36
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !36
  %63 = bitcast float %59 to i32, !dbg !37
  %64 = bitcast float %60 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %63, i32 %64, ptr addrspace(1) %62, i1 %11) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjkposv3i6x4eofwjksxio5ssmc2zbpzbnpempwnwiqkq6qdgvpe.py", directory: "inductor_cache/jk")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 32, column: 38, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 51, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 35, column: 23, scope: !7)
!27 = !DILocation(line: 38, column: 20, scope: !7)
!28 = !DILocation(line: 41, column: 31, scope: !7)
!29 = !DILocation(line: 41, column: 60, scope: !7)
!30 = !DILocation(line: 41, column: 52, scope: !7)
!31 = !DILocation(line: 42, column: 13, scope: !7)
!32 = !DILocation(line: 43, column: 36, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 24, scope: !7)
!35 = !DILocation(line: 0, scope: !7)
!36 = !DILocation(line: 49, column: 25, scope: !7)
!37 = !DILocation(line: 49, column: 37, scope: !7)
!38 = !DILocation(line: 49, column: 4, scope: !7)
