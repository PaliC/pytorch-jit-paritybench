#loc = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":38:24)
#loc23 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":46:26)
#loc47 = loc(callsite(#loc1 at #loc16))
#loc50 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_per_fused_lift_fresh_maximum_mul_rsqrt_sub_var_mean_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg2: i64 {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg6: i32 loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0), %arg7: i32 loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":19:0)) attributes {noinline = false} {
    %c36_i32 = arith.constant 36 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-5> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3.500000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<36> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.muli %0, %c36_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x64xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x64xi32> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc10)
    %12 = arith.andi %5, %11 : tensor<1x64xi1> loc(#loc10)
    %13 = tt.load %10, %12, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc12)
    %15 = tt.splat %14 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.load %15, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.select %12, %13, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc16)), %arg9: f32 loc(callsite(#loc1 at #loc16))):
      %48 = arith.addf %arg8, %arg9 : f32 loc(#loc55)
      tt.reduce.return %48 : f32 loc(#loc46)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc46)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %20 = arith.divf %19, %cst_0 : tensor<1x1xf32> loc(#loc19)
    %21 = tt.broadcast %20 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc20)
    %22 = arith.subf %13, %21 : tensor<1x64xf32> loc(#loc20)
    %23 = arith.mulf %22, %22 : tensor<1x64xf32> loc(#loc21)
    %24 = arith.select %12, %23, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc22)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc23)), %arg9: f32 loc(callsite(#loc1 at #loc23))):
      %48 = arith.addf %arg8, %arg9 : f32 loc(#loc56)
      tt.reduce.return %48 : f32 loc(#loc49)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc49)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %27 = arith.divf %26, %cst_1 : tensor<1x1xf32> loc(#loc25)
    %28 = arith.sitofp %arg2 : i64 to f32 loc(#loc26)
    %29 = tt.splat %28 : f32 -> tensor<1x1xf32> loc(#loc27)
    %30 = arith.mulf %27, %29 : tensor<1x1xf32> loc(#loc27)
    %31 = arith.cmpf ogt, %30, %cst : tensor<1x1xf32> loc(#loc51)
    %32 = arith.cmpf une, %30, %30 : tensor<1x1xf32> loc(#loc52)
    %33 = arith.ori %31, %32 : tensor<1x1xi1> loc(#loc53)
    %34 = arith.select %33, %30, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc54)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc33)
    %36 = arith.mulf %35, %16 : tensor<1x1xf32> loc(#loc34)
    %37 = tt.broadcast %36 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc35)
    %38 = arith.mulf %13, %37 : tensor<1x64xf32> loc(#loc35)
    %39 = arith.mulf %20, %36 : tensor<1x1xf32> loc(#loc36)
    %40 = tt.broadcast %39 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc37)
    %41 = arith.subf %38, %40 : tensor<1x64xf32> loc(#loc37)
    gpu.barrier loc(#loc38)
    %42 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc39)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    tt.store %43, %30, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    %44 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc41)
    %45 = tt.addptr %44, %8 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc41)
    tt.store %45, %41, %12 : tensor<1x64x!tt.ptr<f32>> loc(#loc42)
    %46 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc43)
    %47 = tt.splat %46 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.store %47, %20, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":23:28)
#loc3 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":25:21)
#loc4 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":26:26)
#loc5 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":26:34)
#loc6 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":28:21)
#loc7 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":31:38)
#loc8 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":31:35)
#loc9 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":31:30)
#loc10 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":31:51)
#loc11 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":31:43)
#loc12 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":33:31)
#loc13 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":33:36)
#loc14 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":37:41)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":38:27)
#loc19 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":41:19)
#loc20 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":42:19)
#loc21 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":43:20)
#loc22 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":45:43)
#loc24 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":46:29)
#loc25 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":48:20)
#loc26 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":49:21)
#loc27 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":50:20)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc29 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":52:42)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":53:28)
#loc34 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":54:20)
#loc35 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":55:19)
#loc36 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":56:20)
#loc37 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":57:20)
#loc38 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":58:4)
#loc39 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":59:28)
#loc40 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":59:40)
#loc41 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":60:25)
#loc42 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":60:45)
#loc43 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":61:25)
#loc44 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":61:37)
#loc45 = loc("inductor_cache/cl/ccle6j4rmjfgpm3v7a6kxcwbtbo256j5y7ywuuxmhhiwutgotnby.py":61:4)
#loc46 = loc(callsite(#loc15 at #loc16))
#loc48 = loc(callsite(#loc17 at #loc15))
#loc49 = loc(callsite(#loc15 at #loc23))
#loc51 = loc(callsite(#loc28 at #loc29))
#loc52 = loc(callsite(#loc30 at #loc29))
#loc53 = loc(callsite(#loc31 at #loc29))
#loc54 = loc(callsite(#loc32 at #loc29))
#loc55 = loc(callsite(#loc48 at #loc16))
#loc56 = loc(callsite(#loc48 at #loc23))
