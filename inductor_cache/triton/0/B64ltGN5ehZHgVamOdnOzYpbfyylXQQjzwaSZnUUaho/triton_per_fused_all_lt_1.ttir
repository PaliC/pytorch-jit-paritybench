#loc = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":19:0)
#loc1 = loc(unknown)
#loc9 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":33:36)
#loc18 = loc(callsite(#loc1 at #loc9))
module {
  tt.func public @triton_per_fused_all_lt_1(%arg0: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":19:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":19:0), %arg2: i32 loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0> : tensor<1x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x8xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x8xi8> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<1x8xi32> loc(#loc1)
    %0 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_2 : tensor<1x8xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<1x8x!tt.ptr<i1>> loc(#loc5)
    %4 = tt.addptr %3, %1 : tensor<1x8x!tt.ptr<i1>>, tensor<1x8xi32> loc(#loc5)
    %5 = tt.bitcast %4 : tensor<1x8x!tt.ptr<i1>> -> tensor<1x8x!tt.ptr<i8>> loc(#loc6)
    %6 = tt.load %5, %2, %cst_1 : tensor<1x8x!tt.ptr<i8>> loc(#loc6)
    %7 = arith.cmpi ne, %6, %cst_1 : tensor<1x8xi8> loc(#loc6)
    %8 = arith.extui %7 : tensor<1x8xi1> to tensor<1x8xi32> loc(#loc7)
    %9 = arith.select %2, %8, %cst_0 : tensor<1x8xi1>, tensor<1x8xi32> loc(#loc7)
    %10 = "tt.reduce"(%9) <{axis = 1 : i32}> ({
    ^bb0(%arg3: i32 loc(callsite(#loc1 at #loc9)), %arg4: i32 loc(callsite(#loc1 at #loc9))):
      %17 = arith.ori %arg3, %arg4 : i32 loc(#loc20)
      tt.reduce.return %17 : i32 loc(#loc17)
    }) : (tensor<1x8xi32>) -> tensor<1xi32> loc(#loc17)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xi32> -> tensor<1x1xi32> loc(#loc11)
    %12 = arith.cmpi eq, %11, %cst : tensor<1x1xi32> loc(#loc12)
    gpu.barrier loc(#loc13)
    %13 = tt.addptr %arg0, %c0_i32 : !tt.ptr<i1>, i32 loc(#loc14)
    %14 = tt.bitcast %13 : !tt.ptr<i1> -> !tt.ptr<i8> loc(#loc15)
    %15 = tt.splat %14 : !tt.ptr<i8> -> tensor<1x1x!tt.ptr<i8>> loc(#loc15)
    %16 = arith.extui %12 : tensor<1x1xi1> to tensor<1x1xi8> loc(#loc15)
    tt.store %15, %16 : tensor<1x1x!tt.ptr<i8>> loc(#loc15)
    tt.return loc(#loc16)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":26:26)
#loc3 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":26:34)
#loc4 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":28:21)
#loc5 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":30:30)
#loc6 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":30:35)
#loc7 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":32:33)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc11 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":33:39)
#loc12 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":34:19)
#loc13 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":35:4)
#loc14 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":36:28)
#loc15 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":36:70)
#loc16 = loc("inductor_cache/ig/cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py":36:4)
#loc17 = loc(callsite(#loc8 at #loc9))
#loc19 = loc(callsite(#loc10 at #loc8))
#loc20 = loc(callsite(#loc19 at #loc9))
