; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_all_lt_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 7, !dbg !10
  %6 = icmp samesign ult i32 %5, 6, !dbg !11
  %7 = zext nneg i32 %5 to i64, !dbg !12
  %8 = getelementptr i1, ptr addrspace(1) %1, i64 %7, !dbg !12
  %9 = tail call i8 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b8 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u16 $0, 0x0;", "=c,l,b,b"(ptr addrspace(1) %8, i1 %6, i1 %6) #3, !dbg !13
  %10 = icmp ne i8 %9, 0, !dbg !13
  %narrow = select i1 %6, i1 %10, i1 false, !dbg !14
  %11 = zext i1 %narrow to i32, !dbg !14
  %12 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %11, i32 4, i32 31), !dbg !15
  %13 = or i32 %12, %11, !dbg !19
  %14 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %13, i32 2, i32 31), !dbg !15
  %15 = or i32 %13, %14, !dbg !19
  %16 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %15, i32 1, i32 31), !dbg !15
  %17 = or i32 %15, %16, !dbg !19
  %18 = icmp eq i32 %17, 0, !dbg !21
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %19 = zext i1 %18 to i8, !dbg !23
  %20 = and i32 %4, 63, !dbg !23
  %21 = icmp eq i32 %20, 0, !dbg !23
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %19, ptr addrspace(1) %0, i1 %21) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cig5gu3ly2uc2r7r456fnmxvfgxdfrzjogfdo5tgtmx3gyfa6rwa.py", directory: "inductor_cache/ig")
!4 = !{ptr @triton_per_fused_all_lt_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_all_lt_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_all_lt_1", linkageName: "triton_per_fused_all_lt_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 28, column: 21, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 35, scope: !7)
!14 = !DILocation(line: 32, column: 33, scope: !7)
!15 = !DILocation(line: 232, column: 29, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!18 = !DILocation(line: 33, column: 36, scope: !7)
!19 = !DILocation(line: 227, column: 15, scope: !20, inlinedAt: !18)
!20 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!21 = !DILocation(line: 34, column: 19, scope: !7)
!22 = !DILocation(line: 35, column: 4, scope: !7)
!23 = !DILocation(line: 36, column: 70, scope: !7)
!24 = !DILocation(line: 36, column: 4, scope: !7)
