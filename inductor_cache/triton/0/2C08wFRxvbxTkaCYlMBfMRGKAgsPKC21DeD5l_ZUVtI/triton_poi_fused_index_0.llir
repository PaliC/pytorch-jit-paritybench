; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_1 = internal constant [8 x i8] c"unknown\00"
@assertFile_1 = internal constant [74 x i8] c"inductor_cache/pi/cpicimmhjwu2wm7ve7g3xpt2zehec5aple4ojt3cfuvkilstfkgj.py\00"
@assertMessage_1 = internal constant [36 x i8] c"index out of bounds: 0 <= tmp96 < 4\00"
@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [74 x i8] c"inductor_cache/pi/cpicimmhjwu2wm7ve7g3xpt2zehec5aple4ojt3cfuvkilstfkgj.py\00"
@assertMessage_0 = internal constant [36 x i8] c"index out of bounds: 0 <= tmp49 < 4\00"

; Function Attrs: noreturn
declare !dbg !7 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define void @triton_poi_fused_index_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !11 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !12
  %5 = shl i32 %4, 7, !dbg !13
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %7 = and i32 %6, 127, !dbg !14
  %8 = or disjoint i32 %5, %7, !dbg !15
  %9 = icmp slt i32 %8, 96, !dbg !16
  %.frozen = freeze i32 %8, !dbg !17
  %10 = sdiv i32 %.frozen, 6, !dbg !17
  %11 = mul i32 %10, 6, !dbg !18
  %.decomposed = sub i32 %.frozen, %11, !dbg !18
  %12 = sitofp i32 %.decomposed to double, !dbg !19
  %13 = fmul double %12, 2.000000e+00, !dbg !20
  %14 = fsub double 1.225000e+01, %13, !dbg !21
  %15 = tail call double @llvm.nvvm.sqrt.rn.d(double %14), !dbg !22
  %16 = fsub double 3.500000e+00, %15, !dbg !23
  %17 = tail call double @llvm.nvvm.floor.d(double %16), !dbg !24
  %18 = fptosi double %17 to i64, !dbg !25
  %19 = lshr i64 %18, 61, !dbg !26
  %20 = and i64 %19, 4, !dbg !26
  %21 = add i64 %20, %18, !dbg !26
  %22 = icmp ugt i64 %21, 3, !dbg !27
  %.not1 = and i1 %9, %22, !dbg !28
  br i1 %.not1, label %23, label %24, !dbg !28

23:                                               ; preds = %3
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 77, ptr nonnull @assertFunc_0, i64 1), !dbg !28
  unreachable, !dbg !28

24:                                               ; preds = %3
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %25 = add nsw i32 %.decomposed, 6, !dbg !29
  %26 = icmp slt i32 %.decomposed, 0, !dbg !30
  %27 = uitofp nneg i32 %25 to double, !dbg !31
  %28 = fmul double %27, 2.000000e+00, !dbg !32
  %29 = fsub double 1.225000e+01, %28, !dbg !33
  %30 = tail call double @llvm.nvvm.sqrt.rn.d(double %29), !dbg !34
  %31 = fsub double 3.500000e+00, %30, !dbg !35
  %32 = tail call double @llvm.nvvm.floor.d(double %31), !dbg !36
  %33 = fptosi double %32 to i64, !dbg !37
  %34 = fsub double 5.000000e+00, %17, !dbg !38
  %35 = fmul double %17, %34, !dbg !39
  %36 = fmul double %35, 5.000000e-01, !dbg !40
  %37 = fsub double %12, %36, !dbg !41
  %38 = tail call double @llvm.nvvm.floor.d(double %37), !dbg !42
  %39 = fptosi double %38 to i64, !dbg !43
  %40 = add i64 %39, 1, !dbg !44
  %41 = select i1 %26, i64 %33, i64 %40, !dbg !45
  %42 = lshr i64 %41, 61, !dbg !46
  %43 = and i64 %42, 4, !dbg !46
  %44 = add i64 %43, %41, !dbg !46
  %45 = icmp ugt i64 %44, 3, !dbg !47
  %.not2 = and i1 %9, %45, !dbg !48
  br i1 %.not2, label %46, label %47, !dbg !48

46:                                               ; preds = %24
  tail call void @__assertfail(ptr nonnull @assertMessage_1, ptr nonnull @assertFile_1, i32 124, ptr nonnull @assertFunc_1, i64 1), !dbg !48
  unreachable, !dbg !48

47:                                               ; preds = %24
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %48 = shl i32 %10, 4, !dbg !49
  %49 = sext i32 %48 to i64, !dbg !50
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !51
  %.idx = shl i64 %21, 4, !dbg !51
  %51 = getelementptr i8, ptr addrspace(1) %50, i64 %.idx, !dbg !51
  %52 = getelementptr float, ptr addrspace(1) %51, i64 %49, !dbg !51
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %9) #4, !dbg !52
  %54 = sext i32 %8 to i64, !dbg !53
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %55, i1 %9) #4, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.nvvm.floor.d(double) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare double @llvm.nvvm.sqrt.rn.d(double) #3

attributes #0 = { noreturn }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpicimmhjwu2wm7ve7g3xpt2zehec5aple4ojt3cfuvkilstfkgj.py", directory: "inductor_cache/pi")
!4 = !{ptr @triton_poi_fused_index_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_index_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !8, file: !8, type: !9, spFlags: DISPFlagOptimized)
!8 = !DIFile(filename: "<unknown>", directory: "")
!9 = !DISubroutineType(cc: DW_CC_normal, types: !10)
!10 = !{}
!11 = distinct !DISubprogram(name: "triton_poi_fused_index_0", linkageName: "triton_poi_fused_index_0", scope: !3, file: !3, line: 19, type: !9, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!12 = !DILocation(line: 21, column: 28, scope: !11)
!13 = !DILocation(line: 21, column: 33, scope: !11)
!14 = !DILocation(line: 22, column: 36, scope: !11)
!15 = !DILocation(line: 22, column: 23, scope: !11)
!16 = !DILocation(line: 23, column: 21, scope: !11)
!17 = !DILocation(line: 25, column: 19, scope: !11)
!18 = !DILocation(line: 24, column: 19, scope: !11)
!19 = !DILocation(line: 33, column: 19, scope: !11)
!20 = !DILocation(line: 35, column: 18, scope: !11)
!21 = !DILocation(line: 37, column: 19, scope: !11)
!22 = !DILocation(line: 38, column: 27, scope: !11)
!23 = !DILocation(line: 40, column: 20, scope: !11)
!24 = !DILocation(line: 41, column: 28, scope: !11)
!25 = !DILocation(line: 42, column: 21, scope: !11)
!26 = !DILocation(line: 76, column: 35, scope: !11)
!27 = !DILocation(line: 77, column: 38, scope: !11)
!28 = !DILocation(line: 77, column: 62, scope: !11)
!29 = !DILocation(line: 78, column: 16, scope: !11)
!30 = !DILocation(line: 80, column: 20, scope: !11)
!31 = !DILocation(line: 82, column: 21, scope: !11)
!32 = !DILocation(line: 84, column: 20, scope: !11)
!33 = !DILocation(line: 86, column: 20, scope: !11)
!34 = !DILocation(line: 87, column: 27, scope: !11)
!35 = !DILocation(line: 89, column: 20, scope: !11)
!36 = !DILocation(line: 90, column: 28, scope: !11)
!37 = !DILocation(line: 91, column: 21, scope: !11)
!38 = !DILocation(line: 109, column: 20, scope: !11)
!39 = !DILocation(line: 110, column: 20, scope: !11)
!40 = !DILocation(line: 112, column: 20, scope: !11)
!41 = !DILocation(line: 113, column: 20, scope: !11)
!42 = !DILocation(line: 114, column: 28, scope: !11)
!43 = !DILocation(line: 115, column: 21, scope: !11)
!44 = !DILocation(line: 117, column: 20, scope: !11)
!45 = !DILocation(line: 0, scope: !11)
!46 = !DILocation(line: 123, column: 35, scope: !11)
!47 = !DILocation(line: 124, column: 38, scope: !11)
!48 = !DILocation(line: 124, column: 62, scope: !11)
!49 = !DILocation(line: 125, column: 52, scope: !11)
!50 = !DILocation(line: 125, column: 49, scope: !11)
!51 = !DILocation(line: 125, column: 31, scope: !11)
!52 = !DILocation(line: 125, column: 57, scope: !11)
!53 = !DILocation(line: 126, column: 25, scope: !11)
!54 = !DILocation(line: 126, column: 37, scope: !11)
!55 = !DILocation(line: 126, column: 4, scope: !11)
