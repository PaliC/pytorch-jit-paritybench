#loc = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0)
#loc1 = loc(unknown)
#loc21 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":42:57)
#loc28 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":49:59)
#loc49 = loc(callsite(#loc1 at #loc21))
#loc53 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_add_convolution_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<2.560000e+02> : tensor<1xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %0, %c256_i32 : i32 loc(#loc4)
    %3 = arith.muli %0, %c256_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<256xi32> loc(#loc6)
    %5 = arith.addi %1, %4 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg2, %2 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %14 = tt.load %13 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %17 = tt.load %16 : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc15)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc17)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.broadcast %11 : tensor<1xf32> -> tensor<256xf32> loc(#loc19)
    %25 = arith.addf %8, %24 : tensor<256xf32> loc(#loc19)
    %26 = "tt.reduce"(%25) <{axis = 0 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc21)), %arg11: f32 loc(callsite(#loc1 at #loc21))):
      %54 = arith.addf %arg10, %arg11 : f32 loc(#loc55)
      tt.reduce.return %54 : f32 loc(#loc48)
    }) : (tensor<256xf32>) -> f32 loc(#loc48)
    %27 = arith.addf %26, %cst_1 : f32 loc(#loc51)
    %28 = arith.divf %27, %cst_0 : f32 loc(#loc25)
    %29 = tt.splat %28 : f32 -> tensor<1xf32> loc(#loc25)
    %30 = tt.splat %28 : f32 -> tensor<256xf32> loc(#loc26)
    %31 = arith.subf %25, %30 : tensor<256xf32> loc(#loc26)
    %32 = arith.mulf %31, %31 : tensor<256xf32> loc(#loc27)
    %33 = "tt.reduce"(%32) <{axis = 0 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc28)), %arg11: f32 loc(callsite(#loc1 at #loc28))):
      %54 = arith.addf %arg10, %arg11 : f32 loc(#loc56)
      tt.reduce.return %54 : f32 loc(#loc52)
    }) : (tensor<256xf32>) -> f32 loc(#loc52)
    %34 = arith.addf %33, %cst_1 : f32 loc(#loc54)
    %35 = tt.broadcast %20 : tensor<1xf32> -> tensor<256xf32> loc(#loc30)
    %36 = arith.subf %17, %35 : tensor<256xf32> loc(#loc30)
    %37 = arith.divf %23, %cst_3 : tensor<1xf32> loc(#loc31)
    %38 = arith.addf %37, %cst_2 : tensor<1xf32> loc(#loc32)
    %39 = tt.extern_elementwise %38 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1xf32>) -> tensor<1xf32> loc(#loc33)
    %40 = tt.broadcast %39 : tensor<1xf32> -> tensor<256xf32> loc(#loc34)
    %41 = arith.mulf %36, %40 : tensor<256xf32> loc(#loc34)
    %42 = arith.addf %14, %41 : tensor<256xf32> loc(#loc35)
    %43 = arith.divf %34, %cst_0 : f32 loc(#loc36)
    %44 = arith.addf %43, %cst : f32 loc(#loc37)
    %45 = tt.extern_elementwise %44 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc38)
    %46 = tt.splat %45 : f32 -> tensor<1xf32> loc(#loc38)
    %47 = tt.splat %45 : f32 -> tensor<256xf32> loc(#loc39)
    %48 = arith.mulf %31, %47 : tensor<256xf32> loc(#loc39)
    %49 = arith.addf %42, %48 : tensor<256xf32> loc(#loc40)
    tt.store %7, %25 : tensor<256x!tt.ptr<f32>> loc(#loc41)
    tt.store %13, %49 : tensor<256x!tt.ptr<f32>> loc(#loc42)
    %50 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc43)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc43)
    tt.store %51, %46 : tensor<1x!tt.ptr<f32>> loc(#loc44)
    %52 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %53 = tt.splat %52 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc45)
    tt.store %53, %29 : tensor<1x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":24:28)
#loc3 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":27:26)
#loc4 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":32:19)
#loc5 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":33:43)
#loc6 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":33:39)
#loc7 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":33:34)
#loc8 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":33:48)
#loc9 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":34:30)
#loc10 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":34:35)
#loc11 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":35:35)
#loc12 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":35:49)
#loc13 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":36:31)
#loc14 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":36:45)
#loc15 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":37:31)
#loc16 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":37:36)
#loc17 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":38:31)
#loc18 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":38:36)
#loc19 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":39:18)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc24 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":42:44)
#loc25 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":45:19)
#loc26 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":46:19)
#loc27 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":47:20)
#loc29 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":49:45)
#loc30 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":50:20)
#loc31 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":52:20)
#loc32 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":54:20)
#loc33 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":55:28)
#loc34 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":56:20)
#loc35 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":57:20)
#loc36 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":59:20)
#loc37 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":60:20)
#loc38 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":61:28)
#loc39 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":62:20)
#loc40 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":63:20)
#loc41 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":64:48)
#loc42 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":65:49)
#loc43 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":66:25)
#loc44 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":66:37)
#loc45 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":67:25)
#loc46 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":67:37)
#loc47 = loc("inductor_cache/el/celshxadz66nerl5ieqyoyoljgzg3zno6vszypzcafngxaijhadi.py":67:4)
#loc48 = loc(callsite(#loc20 at #loc21))
#loc50 = loc(callsite(#loc22 at #loc20))
#loc51 = loc(callsite(#loc23 at #loc24))
#loc52 = loc(callsite(#loc20 at #loc28))
#loc54 = loc(callsite(#loc23 at #loc29))
#loc55 = loc(callsite(#loc50 at #loc21))
#loc56 = loc(callsite(#loc50 at #loc28))
