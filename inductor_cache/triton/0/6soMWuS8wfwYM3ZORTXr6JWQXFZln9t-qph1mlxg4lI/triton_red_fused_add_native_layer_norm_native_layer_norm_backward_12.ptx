//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12 // -- Begin function triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12
.visible .entry triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_9,
	.param .u32 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_10,
	.param .u32 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_11
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<145>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<69>;
	.loc	1 19 0                          // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd28, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_9];
	ld.param.u64 	%rd27, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_8];
	ld.param.u64 	%rd26, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_7];
	ld.param.u64 	%rd25, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_6];
	ld.param.u64 	%rd24, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_5];
	ld.param.u64 	%rd23, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_3];
	ld.param.u64 	%rd22, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_1];
	ld.param.u64 	%rd21, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:22:28
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:22:33
	shl.b32 	%r26, %r12, 6;
	ld.param.u64 	%rd36, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_2];
	.loc	1 23 44                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r27, %r1, 3;
	ld.param.u64 	%rd37, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_12_param_4];
	and.b32  	%r2, %r1, 63;
	bfe.u32 	%r3, %r1, 2, 6;
	.loc	1 23 23                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:23:23
	or.b32  	%r4, %r26, %r2;
	or.b32  	%r5, %r26, %r3;
	.loc	1 24 21                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:24:21
	setp.lt.s32 	%p1, %r4, 1024;
	setp.lt.s32 	%p4, %r5, 1024;
	.loc	1 25 33                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:25:33
	bfe.u32 	%r28, %r1, 6, 2;
	.loc	1 26 19                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:26:19
	shr.s32 	%r30, %r4, 31;
	shr.u32 	%r31, %r30, 24;
	add.s32 	%r32, %r4, %r31;
	shr.s32 	%r33, %r32, 8;
	bfe.s32 	%r34, %r12, 25, 1;
	shr.u32 	%r35, %r34, 24;
	add.s32 	%r36, %r5, %r35;
	shr.u32 	%r37, %r36, 8;
	.loc	1 27 19                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:27:19
	and.b32  	%r38, %r32, -256;
	sub.s32 	%r39, %r4, %r38;
	.loc	1 30 21                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:30:21
	shr.s32 	%r41, %r5, 31;
	shr.u32 	%r42, %r41, 28;
	add.s32 	%r43, %r5, %r42;
	shr.s32 	%r44, %r43, 4;
	.loc	1 29 19                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:29:19
	and.b32  	%r45, %r43, 65520;
	sub.s32 	%r46, %r5, %r45;
	.loc	1 30 27                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:30:27
	shr.u32 	%r47, %r44, 28;
	add.s32 	%r48, %r44, %r47;
	and.b32  	%r49, %r48, 65520;
	sub.s32 	%r50, %r44, %r49;
	.loc	1 39 46                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:46
	mul.lo.s32 	%r51, %r5, 96;
	.loc	1 41 49                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:49
	cvt.u16.u32 	%rs1, %r46;
	cvt.s8.s32 	%rs2, %r46;
	.loc	1 41 84                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:84
	shr.u16 	%rs3, %rs2, 12;
	and.b16  	%rs4, %rs3, 7;
	add.s16 	%rs5, %rs1, %rs4;
	cvt.s16.s8 	%rs6, %rs5;
	shr.u16 	%rs7, %rs6, 3;
	.loc	1 41 49                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:49
	and.b16  	%rs8, %rs5, 248;
	sub.s16 	%rs9, %rs1, %rs8;
	cvt.u32.u16 	%r52, %rs9;
	cvt.s32.s8 	%r53, %r52;
	.loc	1 41 66                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:66
	cvt.u16.u32 	%rs10, %r50;
	cvt.s8.s32 	%rs11, %r50;
	.loc	1 41 102                        // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:102
	shr.u16 	%rs12, %rs11, 12;
	and.b16  	%rs13, %rs12, 7;
	add.s16 	%rs14, %rs10, %rs13;
	cvt.s16.s8 	%rs15, %rs14;
	shr.s16 	%rs16, %rs15, 3;
	.loc	1 41 66                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:66
	and.b16  	%rs17, %rs14, 248;
	sub.s16 	%rs18, %rs10, %rs17;
	.loc	1 41 44                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:44
	cvt.u32.u16 	%r54, %rs18;
	cvt.s32.s8 	%r55, %r54;
	cvt.u32.u16 	%r56, %rs7;
	cvt.s32.s8 	%r57, %r56;
	mul.lo.s32 	%r58, %r55, 768;
	mul.lo.s32 	%r59, %r57, 6144;
	.loc	1 41 102                        // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:102
	cvt.s32.s16 	%r60, %rs16;
	mad.lo.s32 	%r61, %r33, 24576, %r39;
	shl.b32 	%r62, %r1, 2;
	and.b32  	%r63, %r62, 252;
	or.b32  	%r64, %r63, %r28;
	and.b32  	%r65, %r1, 255;
	mov.u32 	%r66, global_smem;
	add.s32 	%r67, %r66, %r63;
	shl.b32 	%r68, %r64, 2;
	add.s32 	%r89, %r67, %r68;
	and.b32  	%r69, %r1, 252;
	add.s32 	%r70, %r66, %r69;
	shl.b32 	%r71, %r65, 2;
	add.s32 	%r7, %r70, %r71;
	mad.lo.s32 	%r72, %r53, 96, %r59;
	mad.lo.s32 	%r73, %r37, 24576, %r58;
	add.s32 	%r74, %r72, %r73;
	.loc	1 34 36                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:34:36
	mad.lo.s32 	%r75, %r60, 12288, %r74;
	.loc	1 38 43                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:43
	shl.b32 	%r76, %r28, 8;
	.loc	1 38 48                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:48
	add.s32 	%r77, %r61, %r76;
	.loc	1 38 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:34
	mul.wide.s32 	%rd38, %r77, 4;
	add.s64 	%rd29, %rd22, %rd38;
	mov.b32 	%r14, 0;
	.loc	1 38 59                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:59
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_first.b32 { %r16 }, [ %rd29 + 0 ];
	@!%p1 mov.u32 %r16, %r14;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r89 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [%r7];
	.loc	1 39 43                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:43
	or.b32  	%r78, %r27, %r51;
	.loc	1 39 38                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:38
	mul.wide.s32 	%rd39, %r78, 4;
	add.s64 	%rd30, %rd21, %rd39;
	.loc	1 39 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:51
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r17 }, [ %rd30 + 0 ];
	@!%p4 mov.u32 %r17, %r14;
	// end inline asm
	.loc	1 40 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:40:34
	mul.wide.u32 	%rd1, %r27, 4;
	add.s64 	%rd31, %rd36, %rd1;
	.loc	1 40 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:40:39
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r19 }, [ %rd31 + 0 ];
	@!%p3 mov.u32 %r19, %r14;
	// end inline asm
	.loc	1 41 107                        // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:107
	or.b32  	%r79, %r75, %r27;
	.loc	1 41 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:34
	mul.wide.s32 	%rd40, %r79, 4;
	add.s64 	%rd32, %rd23, %rd40;
	.loc	1 41 118                        // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:118
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r21 }, [ %rd32 + 0 ];
	@!%p4 mov.u32 %r21, %r14;
	// end inline asm
	.loc	1 42 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:42:34
	add.s64 	%rd33, %rd37, %rd1;
	.loc	1 42 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:42:39
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r23 }, [ %rd33 + 0 ];
	@!%p3 mov.u32 %r23, %r14;
	// end inline asm
	.loc	1 39 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:51
	mov.b32 	%f14, %r21;
	mov.b32 	%f15, %r17;
	.loc	1 40 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:40:39
	mov.b32 	%f16, %r19;
	mov.b32 	%f17, %r23;
	.loc	1 43 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:43:22
	add.f32 	%f18, %f14, %f17;
	add.f32 	%f19, %f15, %f16;
	.loc	1 44 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:44:22
	add.f32 	%f20, %f13, %f19;
	.loc	1 46 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:46:22
	add.f32 	%f21, %f20, %f18;
	.loc	1 54 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:54:51
	mov.b32 	%r25, %f21;
	// begin inline asm
	@%p4 st.global.b32 [ %rd30 + 0 ], { %r25 };
	// end inline asm
	.loc	1 53 66                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:53:66
	selp.f32 	%f72, 0f3F800000, 0f00000000, %p4;
	.loc	1 51 62                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:51:62
	selp.f32 	%f74, %f21, 0f00000000, %p4;
	.loc	1 34 36                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:34:36
	mad.lo.s32 	%r80, %r33, 24320, %r4;
	add.s32 	%r81, %r80, %r76;
	add.s32 	%r144, %r81, 1024;
	or.b64  	%rd41, %rd1, 16;
	add.s64 	%rd64, %rd37, %rd41;
	add.s64 	%rd63, %rd36, %rd41;
	add.s32 	%r82, %r75, %r27;
	add.s32 	%r83, %r82, 4;
	cvt.u64.u32 	%rd4, %r83;
	mul.lo.s32 	%r84, %r3, 96;
	mad.lo.s32 	%r85, %r12, 6144, %r84;
	or.b32  	%r9, %r85, %r27;
	or.b32  	%r86, %r9, 4;
	cvt.u64.u32 	%rd5, %r86;
	mov.f32 	%f73, 0f00000000;
	mov.u64 	%rd65, 0;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 38 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:34
	mul.wide.s32 	%rd48, %r144, 4;
	add.s64 	%rd42, %rd22, %rd48;
	.loc	1 38 59                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:38:59
	// begin inline asm
	mov.u32 %r87, 0x0;
	@%p1 ld.global.L1::evict_first.b32 { %r87 }, [ %rd42 + 0 ];
	@!%p1 mov.u32 %r87, %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.b32 [ %r89 + 0 ], %r87;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f22, [%r7];
	.loc	1 39 38                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:38
	add.s64 	%rd49, %rd5, %rd65;
	cvt.u32.u64 	%r103, %rd49;
	mul.wide.s32 	%rd50, %r103, 4;
	add.s64 	%rd43, %rd21, %rd50;
	.loc	1 39 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:51
	// begin inline asm
	mov.u32 %r91, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r91 }, [ %rd43 + 0 ];
	@!%p4 mov.u32 %r91, %r14;
	// end inline asm
	.loc	1 40 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:40:39
	// begin inline asm
	mov.u32 %r93, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r93 }, [ %rd63 + 0 ];
	@!%p3 mov.u32 %r93, %r14;
	// end inline asm
	.loc	1 41 34                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:34
	add.s64 	%rd51, %rd4, %rd65;
	cvt.u32.u64 	%r104, %rd51;
	mul.wide.s32 	%rd52, %r104, 4;
	add.s64 	%rd45, %rd23, %rd52;
	.loc	1 41 118                        // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:41:118
	// begin inline asm
	mov.u32 %r95, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r95 }, [ %rd45 + 0 ];
	@!%p4 mov.u32 %r95, %r14;
	// end inline asm
	.loc	1 42 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:42:39
	// begin inline asm
	mov.u32 %r97, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r97 }, [ %rd64 + 0 ];
	@!%p3 mov.u32 %r97, %r14;
	// end inline asm
	.loc	1 39 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:39:51
	mov.b32 	%f23, %r91;
	mov.b32 	%f24, %r95;
	.loc	1 40 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:40:39
	mov.b32 	%f25, %r93;
	mov.b32 	%f26, %r97;
	.loc	1 43 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:43:22
	add.f32 	%f27, %f24, %f26;
	add.f32 	%f28, %f23, %f25;
	.loc	1 44 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:44:22
	add.f32 	%f29, %f22, %f28;
	.loc	1 46 22                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:46:22
	add.f32 	%f30, %f29, %f27;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f31, %f30, %f74;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f32, %f72, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r100, %f31;
	mov.b32 	%r101, %f32;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f33, %r99;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f34, %f74, %f33;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f35, %f30, %f34;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f36, %f31, %f35, %f73;
$L__tmp2:
	.loc	1 51 62                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:51:62
	selp.f32 	%f74, %f34, %f74, %p4;
	.loc	1 52 58                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:52:58
	selp.f32 	%f73, %f36, %f73, %p4;
	.loc	1 53 66                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:53:66
	selp.f32 	%f72, %f32, %f72, %p4;
	.loc	1 54 51                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:54:51
	mov.b32 	%r102, %f30;
	// begin inline asm
	@%p4 st.global.b32 [ %rd43 + 0 ], { %r102 };
	// end inline asm
	.loc	1 34 36                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:34:36
	add.s64 	%rd65, %rd65, 4;
	add.s32 	%r144, %r144, 1024;
	add.s64 	%rd64, %rd64, 16;
	add.s64 	%rd63, %rd63, 16;
	setp.lt.u64 	%p25, %rd65, 92;
	@%p25 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r116, %f74;
	shfl.sync.bfly.b32	%r117, %r116, 2, 31, -1;
	mov.b32 	%f37, %r117;
	mov.b32 	%r118, %f73;
	shfl.sync.bfly.b32	%r119, %r118, 2, 31, -1;
	mov.b32 	%f38, %r119;
	mov.b32 	%r120, %f72;
	shfl.sync.bfly.b32	%r106, %r120, 2, 31, -1;
	mov.b32 	%f39, %r106;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f40, %f37, %f74;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f41, %f72, %f39;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p27, %f41, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r107, %f41;
	// begin inline asm
	div.full.f32 %r105, %r106, %r107;
	// end inline asm
	mov.b32 	%f42, %r105;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f43, 0f00000000, %f42, %p27;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f44, %f40, %f43, %f74;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f45, %f73, %f38;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f46, %f40, %f40;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f47, %f72, %f46;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f48, %f47, %f43, %f45;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r121, %f44;
	shfl.sync.bfly.b32	%r122, %r121, 1, 31, -1;
	mov.b32 	%f49, %r122;
	mov.b32 	%r123, %f48;
	shfl.sync.bfly.b32	%r124, %r123, 1, 31, -1;
	mov.b32 	%f50, %r124;
	shfl.sync.bfly.b32	%r109, %r107, 1, 31, -1;
	mov.b32 	%f51, %r109;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f52, %f49, %f44;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f53, %f41, %f51;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p28, %f53, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r110, %f53;
	// begin inline asm
	div.full.f32 %r108, %r109, %r110;
	// end inline asm
	mov.b32 	%f54, %r108;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f55, 0f00000000, %f54, %p28;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f9, %f52, %f55, %f44;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f56, %f48, %f50;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f57, %f52, %f52;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f58, %f41, %f57;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f59, %f55, %f58, %f56;
$L__tmp4:
	.loc	1 85 20                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:85:20
	bar.sync 	0;
	shl.b32 	%r125, %r3, 2;
	add.s32 	%r111, %r66, %r125;
	mov.b32 	%r112, %f59;
	// begin inline asm
	@%p3 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r127, %r2, 2;
	add.s32 	%r128, %r66, %r127;
	ld.shared.f32 	%f10, [%r128];
	mov.b32 	%r115, 1119879168;
	.loc	1 70 24                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:70:24
	// begin inline asm
	div.full.f32 %r113, %r112, %r115;
	// end inline asm
	mov.b32 	%f60, %r113;
	.loc	1 72 24                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:72:24
	add.f32 	%f61, %f60, 0f358637BD;
	.loc	1 73 32                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:73:32
	rsqrt.approx.ftz.f32 	%f11, %f61;
	.loc	1 61 36                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:61:36
	add.s64 	%rd67, %rd25, %rd1;
	add.s64 	%rd66, %rd24, %rd1;
	cvt.u64.u32 	%rd14, %r9;
	mov.u64 	%rd68, -4;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 65 39                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:65:39
	add.s64 	%rd59, %rd14, %rd68;
	cvt.u32.u64 	%r137, %rd59;
	add.s32 	%r138, %r137, 4;
	mul.wide.s32 	%rd60, %r138, 4;
	add.s64 	%rd54, %rd21, %rd60;
	.loc	1 65 52                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:65:52
	// begin inline asm
	mov.u32 %r129, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r129 }, [ %rd54 + 0 ];
	@!%p4 mov.u32 %r129, %r14;
	// end inline asm
	mov.b32 	%f62, %r129;
	.loc	1 66 40                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:66:40
	// begin inline asm
	mov.u32 %r131, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r131 }, [ %rd66 + 0 ];
	@!%p3 mov.u32 %r131, %r14;
	// end inline asm
	mov.b32 	%f63, %r131;
	.loc	1 67 40                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:67:40
	// begin inline asm
	mov.u32 %r133, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r133 }, [ %rd67 + 0 ];
	@!%p3 mov.u32 %r133, %r14;
	// end inline asm
	mov.b32 	%f64, %r133;
	.loc	1 68 24                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:68:24
	sub.f32 	%f65, %f62, %f9;
	.loc	1 74 24                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:74:24
	mul.f32 	%f66, %f11, %f65;
	.loc	1 76 24                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:76:24
	fma.rn.f32 	%f67, %f66, %f63, %f64;
	.loc	1 77 29                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:77:29
	add.s64 	%rd57, %rd26, %rd60;
	.loc	1 77 49                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:77:49
	mov.b32 	%r135, %f66;
	// begin inline asm
	@%p4 st.global.b32 [ %rd57 + 0 ], { %r135 };
	// end inline asm
	.loc	1 78 29                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:78:29
	add.s64 	%rd58, %rd27, %rd60;
	.loc	1 78 49                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:78:49
	mov.b32 	%r136, %f67;
	// begin inline asm
	@%p4 st.global.b32 [ %rd58 + 0 ], { %r136 };
	// end inline asm
	.loc	1 61 36                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:61:36
	add.s64 	%rd68, %rd68, 4;
	add.s64 	%rd67, %rd67, 16;
	add.s64 	%rd66, %rd66, 16;
	setp.lt.u64 	%p37, %rd68, 92;
	@%p37 bra 	$L__BB0_3;
// %bb.4:                               // %__nv_rsqrtf.exit8
	.loc	1 80 20                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:80:20
	mov.b32 	%r140, %f10;
	// begin inline asm
	div.full.f32 %r139, %r140, %r115;
	// end inline asm
	mov.b32 	%f68, %r139;
	.loc	1 82 20                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:82:20
	add.f32 	%f69, %f68, 0f358637BD;
	.loc	1 83 28                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:83:28
	rsqrt.approx.ftz.f32 	%f70, %f69;
	.loc	1 85 20                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:85:20
	mul.f32 	%f71, %f70, 0f3C2AAAAB;
	.loc	1 86 25                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:86:25
	mul.wide.s32 	%rd62, %r4, 4;
	add.s64 	%rd61, %rd28, %rd62;
	.loc	1 86 37                         // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:86:37
	and.b32  	%r143, %r1, 192;
	setp.eq.s32 	%p40, %r143, 0;
	mov.b32 	%r142, %f71;
	and.pred  	%p38, %p40, %p1;
	// begin inline asm
	@%p38 st.global.b32 [ %rd61 + 0 ], { %r142 };
	// end inline asm
	.loc	1 86 4                          // cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py:86:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jx/cjxwqvqcclhynjvdhdgoqxxosqxlt6fzk3ya3wfw4czbetpzmvol.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 237                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 120
.b8 119
.b8 113
.b8 118
.b8 113
.b8 99
.b8 99
.b8 108
.b8 104
.b8 121
.b8 110
.b8 106
.b8 118
.b8 100
.b8 104
.b8 100
.b8 103
.b8 111
.b8 113
.b8 120
.b8 120
.b8 111
.b8 115
.b8 113
.b8 120
.b8 108
.b8 116
.b8 54
.b8 102
.b8 122
.b8 107
.b8 51
.b8 121
.b8 97
.b8 51
.b8 119
.b8 102
.b8 119
.b8 52
.b8 99
.b8 122
.b8 98
.b8 101
.b8 116
.b8 112
.b8 122
.b8 109
.b8 118
.b8 111
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 54                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
