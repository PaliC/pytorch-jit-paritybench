; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 64, !dbg !14
  %12 = mul i32 %11, 64, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = icmp slt i32 %.decomposed, 32, !dbg !16
  %14 = shl nsw i32 %11, 5, !dbg !17
  %15 = add nsw i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %17, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13) #1, !dbg !20
  %19 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !20
  %20 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !20
  %21 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !20
  %22 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !20
  %23 = bitcast i32 %19 to float, !dbg !20
  %24 = bitcast i32 %20 to float, !dbg !20
  %25 = bitcast i32 %21 to float, !dbg !20
  %26 = bitcast i32 %22 to float, !dbg !20
  %27 = fcmp ogt float %23, 0.000000e+00, !dbg !21
  %28 = fcmp ogt float %24, 0.000000e+00, !dbg !21
  %29 = fcmp ogt float %25, 0.000000e+00, !dbg !21
  %30 = fcmp ogt float %26, 0.000000e+00, !dbg !21
  %31 = fmul float %23, 0x3FB99999A0000000, !dbg !22
  %32 = fmul float %24, 0x3FB99999A0000000, !dbg !22
  %33 = fmul float %25, 0x3FB99999A0000000, !dbg !22
  %34 = fmul float %26, 0x3FB99999A0000000, !dbg !22
  %35 = select i1 %27, float %23, float %31, !dbg !23
  %36 = select i1 %28, float %24, float %32, !dbg !23
  %37 = select i1 %29, float %25, float %33, !dbg !23
  %38 = select i1 %30, float %26, float %34, !dbg !23
  %39 = icmp sgt i32 %.decomposed, 31, !dbg !24
  %40 = sext i32 %15 to i64, !dbg !25
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !25
  %42 = getelementptr i8, ptr addrspace(1) %41, i64 -128, !dbg !25
  %43 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %42, i1 %39, i32 0, i1 %39, i32 0, i1 %39, i32 0, i1 %39, i32 0, i1 %39) #1, !dbg !26
  %44 = extractvalue { i32, i32, i32, i32 } %43, 0, !dbg !26
  %45 = extractvalue { i32, i32, i32, i32 } %43, 1, !dbg !26
  %46 = extractvalue { i32, i32, i32, i32 } %43, 2, !dbg !26
  %47 = extractvalue { i32, i32, i32, i32 } %43, 3, !dbg !26
  %48 = sext i32 %10 to i64, !dbg !27
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !27
  %50 = bitcast float %35 to i32, !dbg !28
  %51 = select i1 %13, i32 %50, i32 %44, !dbg !29
  %52 = bitcast float %36 to i32, !dbg !28
  %53 = select i1 %13, i32 %52, i32 %45, !dbg !29
  %54 = bitcast float %37 to i32, !dbg !28
  %55 = select i1 %13, i32 %54, i32 %46, !dbg !29
  %56 = bitcast float %38 to i32, !dbg !28
  %57 = select i1 %13, i32 %56, i32 %47, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %51, i32 %53, i32 %55, i32 %57, ptr addrspace(1) %49, i1 true) #1, !dbg !28
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjjpkhu2jxu6s73tooavazpjx4qs4cs7ugdtzyau342jftrzsqhu.py", directory: "inductor_cache/jj")
!4 = !{ptr @triton_poi_fused_cat_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_14", linkageName: "triton_poi_fused_cat_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 33, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 45, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 36, column: 18, scope: !7)
!23 = !DILocation(line: 37, column: 33, scope: !7)
!24 = !DILocation(line: 40, column: 20, scope: !7)
!25 = !DILocation(line: 43, column: 31, scope: !7)
!26 = !DILocation(line: 43, column: 54, scope: !7)
!27 = !DILocation(line: 45, column: 25, scope: !7)
!28 = !DILocation(line: 45, column: 37, scope: !7)
!29 = !DILocation(line: 0, scope: !7)
!30 = !DILocation(line: 45, column: 4, scope: !7)
