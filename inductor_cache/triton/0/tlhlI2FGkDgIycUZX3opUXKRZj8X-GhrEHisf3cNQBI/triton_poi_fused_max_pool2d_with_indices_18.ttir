#loc = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_18(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<512xi8> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<512xi8> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<512xi8> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<512xi8> loc(#loc1)
    %cst_3 = arith.constant dense<9216> : tensor<512xi32> loc(#loc1)
    %cst_4 = arith.constant dense<8704> : tensor<512xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<512xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0xFF800000> : tensor<512xf32> loc(#loc1)
    %cst_7 = arith.constant dense<147968> : tensor<512xi32> loc(#loc1)
    %cst_8 = arith.constant dense<17408> : tensor<512xi32> loc(#loc1)
    %cst_9 = arith.constant dense<1024> : tensor<512xi32> loc(#loc1)
    %cst_10 = arith.constant dense<17> : tensor<512xi64> loc(#loc1)
    %cst_11 = arith.constant dense<0> : tensor<512xi64> loc(#loc1)
    %cst_12 = arith.constant dense<2> : tensor<512xi32> loc(#loc1)
    %cst_13 = arith.constant dense<41472> : tensor<512xi32> loc(#loc1)
    %cst_14 = arith.constant dense<512> : tensor<512xi32> loc(#loc1)
    %cst_15 = arith.constant dense<9> : tensor<512xi32> loc(#loc1)
    %cst_16 = arith.constant dense<4608> : tensor<512xi32> loc(#loc1)
    %cst_17 = arith.constant dense<165888> : tensor<512xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_17 : tensor<512xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_16 : tensor<512xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_15 : tensor<512xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_14 : tensor<512xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_15 : tensor<512xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_14 : tensor<512xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst_13 : tensor<512xi32> loc(#loc12)
    %12 = arith.muli %7, %cst_12 : tensor<512xi32> loc(#loc13)
    %13 = arith.extsi %12 : tensor<512xi32> to tensor<512xi64> loc(#loc14)
    %14 = arith.cmpi sge, %13, %cst_11 : tensor<512xi64> loc(#loc14)
    %15 = arith.cmpi slt, %13, %cst_10 : tensor<512xi64> loc(#loc15)
    %16 = arith.andi %14, %15 : tensor<512xi1> loc(#loc16)
    %17 = arith.muli %9, %cst_12 : tensor<512xi32> loc(#loc17)
    %18 = arith.extsi %17 : tensor<512xi32> to tensor<512xi64> loc(#loc18)
    %19 = arith.cmpi sge, %18, %cst_11 : tensor<512xi64> loc(#loc18)
    %20 = arith.cmpi slt, %18, %cst_10 : tensor<512xi64> loc(#loc19)
    %21 = arith.andi %19, %20 : tensor<512xi1> loc(#loc20)
    %22 = arith.andi %16, %21 : tensor<512xi1> loc(#loc21)
    %23 = arith.muli %9, %cst_9 : tensor<512xi32> loc(#loc22)
    %24 = arith.addi %10, %23 : tensor<512xi32> loc(#loc23)
    %25 = arith.muli %7, %cst_8 : tensor<512xi32> loc(#loc24)
    %26 = arith.addi %24, %25 : tensor<512xi32> loc(#loc25)
    %27 = arith.muli %11, %cst_7 : tensor<512xi32> loc(#loc26)
    %28 = arith.addi %26, %27 : tensor<512xi32> loc(#loc27)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc28)
    %30 = tt.addptr %29, %28 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc28)
    %31 = arith.andi %22, %5 : tensor<512xi1> loc(#loc29)
    %32 = tt.load %30, %31, %cst_6 : tensor<512x!tt.ptr<f32>> loc(#loc30)
    %33 = arith.addi %17, %cst_5 : tensor<512xi32> loc(#loc31)
    %34 = arith.extsi %33 : tensor<512xi32> to tensor<512xi64> loc(#loc32)
    %35 = arith.cmpi sge, %34, %cst_11 : tensor<512xi64> loc(#loc32)
    %36 = arith.cmpi slt, %34, %cst_10 : tensor<512xi64> loc(#loc33)
    %37 = arith.andi %35, %36 : tensor<512xi1> loc(#loc34)
    %38 = arith.andi %16, %37 : tensor<512xi1> loc(#loc35)
    %39 = arith.addi %10, %cst_14 : tensor<512xi32> loc(#loc36)
    %40 = arith.addi %39, %23 : tensor<512xi32> loc(#loc37)
    %41 = arith.addi %40, %25 : tensor<512xi32> loc(#loc38)
    %42 = arith.addi %41, %27 : tensor<512xi32> loc(#loc39)
    %43 = tt.addptr %29, %42 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc40)
    %44 = arith.andi %38, %5 : tensor<512xi1> loc(#loc41)
    %45 = tt.load %43, %44, %cst_6 : tensor<512x!tt.ptr<f32>> loc(#loc42)
    %46 = arith.cmpf ogt, %45, %32 : tensor<512xf32> loc(#loc78)
    %47 = arith.cmpf une, %45, %45 : tensor<512xf32> loc(#loc79)
    %48 = arith.ori %46, %47 : tensor<512xi1> loc(#loc80)
    %49 = arith.select %48, %45, %32 : tensor<512xi1>, tensor<512xf32> loc(#loc81)
    %50 = arith.addi %12, %cst_5 : tensor<512xi32> loc(#loc48)
    %51 = arith.extsi %50 : tensor<512xi32> to tensor<512xi64> loc(#loc49)
    %52 = arith.cmpi sge, %51, %cst_11 : tensor<512xi64> loc(#loc49)
    %53 = arith.cmpi slt, %51, %cst_10 : tensor<512xi64> loc(#loc50)
    %54 = arith.andi %52, %53 : tensor<512xi1> loc(#loc51)
    %55 = arith.andi %54, %21 : tensor<512xi1> loc(#loc52)
    %56 = arith.addi %10, %cst_4 : tensor<512xi32> loc(#loc53)
    %57 = arith.addi %56, %23 : tensor<512xi32> loc(#loc54)
    %58 = arith.addi %57, %25 : tensor<512xi32> loc(#loc55)
    %59 = arith.addi %58, %27 : tensor<512xi32> loc(#loc56)
    %60 = tt.addptr %29, %59 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc57)
    %61 = arith.andi %55, %5 : tensor<512xi1> loc(#loc58)
    %62 = tt.load %60, %61, %cst_6 : tensor<512x!tt.ptr<f32>> loc(#loc59)
    %63 = arith.cmpf ogt, %62, %49 : tensor<512xf32> loc(#loc82)
    %64 = arith.cmpf une, %62, %62 : tensor<512xf32> loc(#loc83)
    %65 = arith.ori %63, %64 : tensor<512xi1> loc(#loc84)
    %66 = arith.select %65, %62, %49 : tensor<512xi1>, tensor<512xf32> loc(#loc85)
    %67 = arith.andi %54, %37 : tensor<512xi1> loc(#loc61)
    %68 = arith.addi %10, %cst_3 : tensor<512xi32> loc(#loc62)
    %69 = arith.addi %68, %23 : tensor<512xi32> loc(#loc63)
    %70 = arith.addi %69, %25 : tensor<512xi32> loc(#loc64)
    %71 = arith.addi %70, %27 : tensor<512xi32> loc(#loc65)
    %72 = tt.addptr %29, %71 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc66)
    %73 = arith.andi %67, %5 : tensor<512xi1> loc(#loc67)
    %74 = tt.load %72, %73, %cst_6 : tensor<512x!tt.ptr<f32>> loc(#loc68)
    %75 = arith.cmpf ogt, %74, %66 : tensor<512xf32> loc(#loc86)
    %76 = arith.cmpf une, %74, %74 : tensor<512xf32> loc(#loc87)
    %77 = arith.ori %75, %76 : tensor<512xi1> loc(#loc88)
    %78 = arith.select %77, %74, %66 : tensor<512xi1>, tensor<512xf32> loc(#loc89)
    %79 = arith.select %46, %cst_2, %cst_1 : tensor<512xi1>, tensor<512xi8> loc(#loc70)
    %80 = arith.select %63, %cst_0, %79 : tensor<512xi1>, tensor<512xi8> loc(#loc71)
    %81 = arith.select %75, %cst, %80 : tensor<512xi1>, tensor<512xi8> loc(#loc72)
    %82 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc73)
    %83 = tt.addptr %82, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc73)
    tt.store %83, %78, %5 : tensor<512x!tt.ptr<f32>> loc(#loc74)
    %84 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<512x!tt.ptr<i8>> loc(#loc75)
    %85 = tt.addptr %84, %4 : tensor<512x!tt.ptr<i8>>, tensor<512xi32> loc(#loc75)
    tt.store %85, %81, %5 : tensor<512x!tt.ptr<i8>> loc(#loc76)
    tt.return loc(#loc77)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":21:28)
#loc3 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":21:33)
#loc4 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":22:36)
#loc5 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":22:23)
#loc6 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":23:21)
#loc7 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":24:21)
#loc8 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":24:29)
#loc9 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":25:21)
#loc10 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":25:28)
#loc11 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":26:19)
#loc12 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":27:19)
#loc13 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":29:13)
#loc14 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":31:19)
#loc15 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":33:18)
#loc16 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":34:18)
#loc17 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":35:13)
#loc18 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":36:19)
#loc19 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":37:18)
#loc20 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":38:18)
#loc21 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":39:19)
#loc22 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:41)
#loc23 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:36)
#loc24 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:52)
#loc25 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:46)
#loc26 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:64)
#loc27 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:57)
#loc28 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:31)
#loc29 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:77)
#loc30 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":40:69)
#loc31 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":41:16)
#loc32 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":42:21)
#loc33 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":43:20)
#loc34 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":44:20)
#loc35 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":45:19)
#loc36 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:37)
#loc37 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:42)
#loc38 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:52)
#loc39 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:63)
#loc40 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:31)
#loc41 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:83)
#loc42 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":46:75)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc44 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":47:42)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc48 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":48:16)
#loc49 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":49:21)
#loc50 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":50:20)
#loc51 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":51:20)
#loc52 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":52:20)
#loc53 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:38)
#loc54 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:43)
#loc55 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:53)
#loc56 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:64)
#loc57 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:31)
#loc58 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:84)
#loc59 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":53:76)
#loc60 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":54:42)
#loc61 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":55:20)
#loc62 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:38)
#loc63 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:43)
#loc64 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:53)
#loc65 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:64)
#loc66 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:31)
#loc67 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:84)
#loc68 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":56:76)
#loc69 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":57:42)
#loc70 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":61:35)
#loc71 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":64:35)
#loc72 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":67:35)
#loc73 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":68:25)
#loc74 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":68:37)
#loc75 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":69:25)
#loc76 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":69:37)
#loc77 = loc("inductor_cache/w5/cw5qfei7uokddnq2mkjhg7fq4xffwwvwwvbwi2xrbuk4ixbjwsin.py":69:4)
#loc78 = loc(callsite(#loc43 at #loc44))
#loc79 = loc(callsite(#loc45 at #loc44))
#loc80 = loc(callsite(#loc46 at #loc44))
#loc81 = loc(callsite(#loc47 at #loc44))
#loc82 = loc(callsite(#loc43 at #loc60))
#loc83 = loc(callsite(#loc45 at #loc60))
#loc84 = loc(callsite(#loc46 at #loc60))
#loc85 = loc(callsite(#loc47 at #loc60))
#loc86 = loc(callsite(#loc43 at #loc69))
#loc87 = loc(callsite(#loc45 at #loc69))
#loc88 = loc(callsite(#loc46 at #loc69))
#loc89 = loc(callsite(#loc47 at #loc69))
