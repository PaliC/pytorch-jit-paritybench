#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_hardtanh_mul_sub_14(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg8: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg11: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg12: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg15: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg16: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg17: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg18: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg19: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg20: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg21: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg22: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0), %arg23: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999974E-6> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_6 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.remsi %9, %cst_6 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = tt.splat %arg3 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc12)
    %12 = tt.addptr %11, %7 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc12)
    %13 = tt.load %12, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc13)
    %14 = tt.splat %arg4 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc14)
    %15 = tt.addptr %14, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc14)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc15)
    %17 = tt.splat %arg6 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc16)
    %18 = tt.addptr %17, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc16)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc17)
    %20 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.addptr %20, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc18)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.splat %arg8 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc20)
    %24 = tt.addptr %23, %7 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc20)
    %25 = tt.load %24, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc21)
    %26 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc22)
    %27 = tt.addptr %26, %7 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc22)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc23)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc24)
    %30 = tt.addptr %29, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc24)
    %31 = tt.load %30, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc25)
    %32 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc26)
    %33 = tt.addptr %32, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc26)
    %34 = tt.load %33, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %35 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    %36 = tt.addptr %35, %9 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc28)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc29)
    %38 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc30)
    %39 = tt.addptr %38, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc30)
    %40 = tt.load %39, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc31)
    %41 = tt.splat %arg16 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc32)
    %42 = tt.addptr %41, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc32)
    %43 = tt.load %42, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc33)
    %44 = tt.splat %arg17 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc34)
    %45 = tt.addptr %44, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc34)
    %46 = tt.load %45, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc35)
    %47 = tt.splat %arg18 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc36)
    %48 = tt.addptr %47, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc36)
    %49 = tt.load %48, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc37)
    %50 = tt.splat %arg19 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc38)
    %51 = tt.addptr %50, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc38)
    %52 = tt.load %51, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc39)
    %53 = tt.splat %arg20 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc40)
    %54 = tt.addptr %53, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc40)
    %55 = tt.load %54, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc41)
    %56 = tt.splat %arg22 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc42)
    %57 = tt.addptr %56, %7 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc42)
    %58 = tt.load %57, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc43)
    %59 = arith.addi %13, %cst_4 : tensor<128xi64, #blocked> loc(#loc44)
    %60 = arith.cmpi slt, %13, %cst_2 : tensor<128xi64, #blocked> loc(#loc45)
    %61 = arith.select %60, %59, %13 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc46)
    %62 = arith.addi %16, %cst_4 : tensor<128xi64, #blocked> loc(#loc47)
    %63 = arith.cmpi slt, %16, %cst_2 : tensor<128xi64, #blocked> loc(#loc48)
    %64 = arith.select %63, %62, %16 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc49)
    %65 = arith.muli %61, %cst_4 : tensor<128xi64, #blocked> loc(#loc50)
    %66 = arith.addi %64, %65 : tensor<128xi64, #blocked> loc(#loc51)
    %67 = arith.muli %9, %cst_6 : tensor<128xi32, #blocked> loc(#loc52)
    %68 = arith.extsi %67 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc53)
    %69 = arith.addi %66, %68 : tensor<128xi64, #blocked> loc(#loc53)
    %70 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc54)
    %71 = tt.addptr %70, %69 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc54)
    %72 = tt.load %71, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc55)
    %73 = arith.addi %19, %cst_4 : tensor<128xi64, #blocked> loc(#loc56)
    %74 = arith.cmpi slt, %19, %cst_2 : tensor<128xi64, #blocked> loc(#loc57)
    %75 = arith.select %74, %73, %19 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc58)
    %76 = arith.addi %75, %65 : tensor<128xi64, #blocked> loc(#loc59)
    %77 = arith.addi %76, %68 : tensor<128xi64, #blocked> loc(#loc60)
    %78 = tt.addptr %70, %77 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc61)
    %79 = tt.load %78, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc62)
    %80 = arith.subf %79, %72 : tensor<128xf32, #blocked> loc(#loc63)
    %81 = arith.mulf %80, %22 : tensor<128xf32, #blocked> loc(#loc64)
    %82 = arith.addf %72, %81 : tensor<128xf32, #blocked> loc(#loc65)
    %83 = arith.addi %25, %cst_4 : tensor<128xi64, #blocked> loc(#loc66)
    %84 = arith.cmpi slt, %25, %cst_2 : tensor<128xi64, #blocked> loc(#loc67)
    %85 = arith.select %84, %83, %25 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc68)
    %86 = arith.muli %85, %cst_4 : tensor<128xi64, #blocked> loc(#loc69)
    %87 = arith.addi %64, %86 : tensor<128xi64, #blocked> loc(#loc70)
    %88 = arith.addi %87, %68 : tensor<128xi64, #blocked> loc(#loc71)
    %89 = tt.addptr %70, %88 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc72)
    %90 = tt.load %89, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc73)
    %91 = arith.addi %75, %86 : tensor<128xi64, #blocked> loc(#loc74)
    %92 = arith.addi %91, %68 : tensor<128xi64, #blocked> loc(#loc75)
    %93 = tt.addptr %70, %92 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc76)
    %94 = tt.load %93, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc77)
    %95 = arith.subf %94, %90 : tensor<128xf32, #blocked> loc(#loc78)
    %96 = arith.mulf %95, %22 : tensor<128xf32, #blocked> loc(#loc79)
    %97 = arith.addf %90, %96 : tensor<128xf32, #blocked> loc(#loc80)
    %98 = arith.subf %97, %82 : tensor<128xf32, #blocked> loc(#loc81)
    %99 = arith.mulf %98, %28 : tensor<128xf32, #blocked> loc(#loc82)
    %100 = arith.addf %82, %99 : tensor<128xf32, #blocked> loc(#loc83)
    %101 = arith.addf %31, %34 : tensor<128xf32, #blocked> loc(#loc84)
    %102 = arith.addf %37, %40 : tensor<128xf32, #blocked> loc(#loc85)
    %103 = arith.subf %102, %102 : tensor<128xf32, #blocked> loc(#loc86)
    %104 = arith.mulf %103, %43 : tensor<128xf32, #blocked> loc(#loc87)
    %105 = arith.addf %102, %104 : tensor<128xf32, #blocked> loc(#loc88)
    %106 = arith.subf %101, %46 : tensor<128xf32, #blocked> loc(#loc89)
    %107 = arith.addf %49, %cst_3 : tensor<128xf32, #blocked> loc(#loc90)
    %108 = tt.extern_elementwise %107 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc91)
    %109 = arith.divf %cst_1, %108 : tensor<128xf32, #blocked> loc(#loc92)
    %110 = arith.mulf %106, %109 : tensor<128xf32, #blocked> loc(#loc93)
    %111 = arith.mulf %110, %52 : tensor<128xf32, #blocked> loc(#loc94)
    %112 = arith.addf %111, %55 : tensor<128xf32, #blocked> loc(#loc95)
    %113 = arith.cmpf ogt, %112, %cst_0 : tensor<128xf32, #blocked> loc(#loc117)
    %114 = arith.cmpf une, %112, %112 : tensor<128xf32, #blocked> loc(#loc118)
    %115 = arith.ori %113, %114 : tensor<128xi1, #blocked> loc(#loc119)
    %116 = arith.select %115, %112, %cst_0 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc120)
    %117 = arith.cmpf olt, %116, %cst : tensor<128xf32, #blocked> loc(#loc121)
    %118 = arith.cmpf une, %116, %116 : tensor<128xf32, #blocked> loc(#loc122)
    %119 = arith.ori %117, %118 : tensor<128xi1, #blocked> loc(#loc123)
    %120 = arith.select %119, %116, %cst : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc124)
    %121 = arith.mulf %100, %120 : tensor<128xf32, #blocked> loc(#loc106)
    %122 = arith.subf %105, %105 : tensor<128xf32, #blocked> loc(#loc107)
    %123 = arith.mulf %122, %58 : tensor<128xf32, #blocked> loc(#loc108)
    %124 = arith.addf %105, %123 : tensor<128xf32, #blocked> loc(#loc109)
    %125 = arith.addf %121, %124 : tensor<128xf32, #blocked> loc(#loc110)
    %126 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc111)
    %127 = tt.addptr %126, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc111)
    tt.store %127, %100, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc112)
    tt.store %30, %101, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc113)
    %128 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc114)
    %129 = tt.addptr %128, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc114)
    tt.store %129, %125, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc115)
    tt.return loc(#loc116)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":21:28)
#loc3 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":21:33)
#loc4 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":22:36)
#loc5 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":22:23)
#loc6 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":23:21)
#loc7 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":24:21)
#loc8 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":24:26)
#loc9 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":25:19)
#loc10 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":26:19)
#loc11 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":28:27)
#loc12 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":29:30)
#loc13 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":29:35)
#loc14 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":30:30)
#loc15 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":30:35)
#loc16 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":31:31)
#loc17 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":31:36)
#loc18 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":32:31)
#loc19 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":32:36)
#loc20 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":33:31)
#loc21 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":33:36)
#loc22 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":34:31)
#loc23 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":34:36)
#loc24 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":35:35)
#loc25 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":35:40)
#loc26 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":36:31)
#loc27 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":36:36)
#loc28 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":39:32)
#loc29 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":39:37)
#loc30 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":40:32)
#loc31 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":40:37)
#loc32 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":42:32)
#loc33 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":42:37)
#loc34 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":43:32)
#loc35 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":43:37)
#loc36 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":44:32)
#loc37 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":44:37)
#loc38 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":45:32)
#loc39 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":45:37)
#loc40 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":46:32)
#loc41 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":46:37)
#loc42 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":48:32)
#loc43 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":48:37)
#loc44 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":50:18)
#loc45 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":51:18)
#loc46 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":52:32)
#loc47 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":53:18)
#loc48 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":54:18)
#loc49 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":55:32)
#loc50 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:39)
#loc51 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:37)
#loc52 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:48)
#loc53 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:46)
#loc54 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:30)
#loc55 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":56:53)
#loc56 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":57:20)
#loc57 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":58:20)
#loc58 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":59:35)
#loc59 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":60:39)
#loc60 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":60:48)
#loc61 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":60:31)
#loc62 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":60:55)
#loc63 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":61:20)
#loc64 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":62:20)
#loc65 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":63:19)
#loc66 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":64:20)
#loc67 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":65:20)
#loc68 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":66:35)
#loc69 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":67:40)
#loc70 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":67:38)
#loc71 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":67:48)
#loc72 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":67:31)
#loc73 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":67:55)
#loc74 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":68:39)
#loc75 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":68:49)
#loc76 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":68:31)
#loc77 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":68:56)
#loc78 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":69:20)
#loc79 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":70:20)
#loc80 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":71:20)
#loc81 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":72:20)
#loc82 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":73:20)
#loc83 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":74:20)
#loc84 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":75:20)
#loc85 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":83:20)
#loc86 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":87:20)
#loc87 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":88:20)
#loc88 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":89:20)
#loc89 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":90:20)
#loc90 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":92:20)
#loc91 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":93:27)
#loc92 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":95:20)
#loc93 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":98:20)
#loc94 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":99:20)
#loc95 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":100:20)
#loc96 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc97 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":102:42)
#loc98 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc99 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc100 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc101 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc102 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":104:42)
#loc103 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc104 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc105 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc106 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":105:20)
#loc107 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":109:20)
#loc108 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":110:20)
#loc109 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":111:20)
#loc110 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":112:20)
#loc111 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":113:28)
#loc112 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":113:40)
#loc113 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":114:40)
#loc114 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":115:28)
#loc115 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":115:40)
#loc116 = loc("inductor_cache/yl/cylpdmhzj6xziqno3hwn47kdkkvngov6eiphceqixypcr7krrelg.py":115:4)
#loc117 = loc(callsite(#loc96 at #loc97))
#loc118 = loc(callsite(#loc98 at #loc97))
#loc119 = loc(callsite(#loc99 at #loc97))
#loc120 = loc(callsite(#loc100 at #loc97))
#loc121 = loc(callsite(#loc101 at #loc102))
#loc122 = loc(callsite(#loc103 at #loc102))
#loc123 = loc(callsite(#loc104 at #loc102))
#loc124 = loc(callsite(#loc105 at #loc102))
