#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<1024> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32768> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<528> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<17424> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<-16> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<544> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_0 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_1 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %8, %cst_1 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc12)
    %12 = arith.cmpi slt, %11, %cst_3 : tensor<512xi64, #blocked> loc(#loc12)
    %13 = arith.muli %7, %cst_4 : tensor<512xi32, #blocked> loc(#loc13)
    %14 = arith.muli %9, %cst_5 : tensor<512xi32, #blocked> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<512xi32, #blocked> loc(#loc15)
    %16 = arith.muli %10, %cst_6 : tensor<512xi32, #blocked> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<512xi32, #blocked> loc(#loc17)
    %18 = arith.addi %17, %6 : tensor<512xi32, #blocked> loc(#loc18)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %20 = tt.addptr %19, %18 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %21 = tt.load %20, %12, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = arith.addi %13, %cst_4 : tensor<512xi32, #blocked> loc(#loc21)
    %23 = arith.addi %22, %14 : tensor<512xi32, #blocked> loc(#loc22)
    %24 = arith.addi %23, %16 : tensor<512xi32, #blocked> loc(#loc23)
    %25 = arith.addi %24, %6 : tensor<512xi32, #blocked> loc(#loc24)
    %26 = tt.addptr %19, %25 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %27 = tt.load %26, %12, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %28 = arith.cmpf ogt, %27, %21 : tensor<512xf32, #blocked> loc(#loc69)
    %29 = arith.cmpf une, %27, %27 : tensor<512xf32, #blocked> loc(#loc70)
    %30 = arith.ori %28, %29 : tensor<512xi1, #blocked> loc(#loc71)
    %31 = arith.select %30, %27, %21 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc72)
    %32 = arith.addi %13, %cst_5 : tensor<512xi32, #blocked> loc(#loc32)
    %33 = arith.addi %32, %14 : tensor<512xi32, #blocked> loc(#loc33)
    %34 = arith.addi %33, %16 : tensor<512xi32, #blocked> loc(#loc34)
    %35 = arith.addi %34, %6 : tensor<512xi32, #blocked> loc(#loc35)
    %36 = tt.addptr %19, %35 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc36)
    %37 = tt.load %36, %12, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc37)
    %38 = arith.cmpf ogt, %37, %31 : tensor<512xf32, #blocked> loc(#loc73)
    %39 = arith.cmpf une, %37, %37 : tensor<512xf32, #blocked> loc(#loc74)
    %40 = arith.ori %38, %39 : tensor<512xi1, #blocked> loc(#loc75)
    %41 = arith.select %40, %37, %31 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc76)
    %42 = arith.addi %13, %cst_8 : tensor<512xi32, #blocked> loc(#loc39)
    %43 = arith.addi %42, %14 : tensor<512xi32, #blocked> loc(#loc40)
    %44 = arith.addi %43, %16 : tensor<512xi32, #blocked> loc(#loc41)
    %45 = arith.addi %44, %6 : tensor<512xi32, #blocked> loc(#loc42)
    %46 = tt.addptr %19, %45 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc43)
    %47 = tt.load %46, %12, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %48 = arith.cmpf ogt, %47, %41 : tensor<512xf32, #blocked> loc(#loc77)
    %49 = arith.cmpf une, %47, %47 : tensor<512xf32, #blocked> loc(#loc78)
    %50 = arith.ori %48, %49 : tensor<512xi1, #blocked> loc(#loc79)
    %51 = arith.select %50, %47, %41 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc80)
    %52 = arith.cmpi sge, %11, %cst_3 : tensor<512xi64, #blocked> loc(#loc46)
    %53 = arith.addi %6, %cst_7 : tensor<512xi32, #blocked> loc(#loc47)
    %54 = arith.addi %17, %53 : tensor<512xi32, #blocked> loc(#loc48)
    %55 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc49)
    %56 = tt.addptr %55, %54 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc49)
    %57 = tt.load %56, %52, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc50)
    %58 = arith.addi %24, %53 : tensor<512xi32, #blocked> loc(#loc51)
    %59 = tt.addptr %55, %58 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc52)
    %60 = tt.load %59, %52, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc53)
    %61 = arith.cmpf ogt, %60, %57 : tensor<512xf32, #blocked> loc(#loc81)
    %62 = arith.cmpf une, %60, %60 : tensor<512xf32, #blocked> loc(#loc82)
    %63 = arith.ori %61, %62 : tensor<512xi1, #blocked> loc(#loc83)
    %64 = arith.select %63, %60, %57 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc84)
    %65 = arith.addi %34, %53 : tensor<512xi32, #blocked> loc(#loc55)
    %66 = tt.addptr %55, %65 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc56)
    %67 = tt.load %66, %52, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc57)
    %68 = arith.cmpf ogt, %67, %64 : tensor<512xf32, #blocked> loc(#loc85)
    %69 = arith.cmpf une, %67, %67 : tensor<512xf32, #blocked> loc(#loc86)
    %70 = arith.ori %68, %69 : tensor<512xi1, #blocked> loc(#loc87)
    %71 = arith.select %70, %67, %64 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc88)
    %72 = arith.addi %44, %53 : tensor<512xi32, #blocked> loc(#loc59)
    %73 = tt.addptr %55, %72 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc60)
    %74 = tt.load %73, %52, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc61)
    %75 = arith.cmpf ogt, %74, %71 : tensor<512xf32, #blocked> loc(#loc89)
    %76 = arith.cmpf une, %74, %74 : tensor<512xf32, #blocked> loc(#loc90)
    %77 = arith.ori %75, %76 : tensor<512xi1, #blocked> loc(#loc91)
    %78 = arith.select %77, %74, %71 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc92)
    %79 = arith.select %52, %78, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc63)
    %80 = arith.select %12, %51, %79 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc93)
    %81 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc66)
    %82 = tt.addptr %81, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc66)
    tt.store %82, %80 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc67)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":21:28)
#loc3 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":21:33)
#loc4 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":22:36)
#loc5 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":22:23)
#loc6 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":24:21)
#loc7 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":24:29)
#loc8 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":25:19)
#loc9 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":26:21)
#loc10 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":26:27)
#loc11 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":27:19)
#loc12 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":33:18)
#loc13 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:33)
#loc14 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:42)
#loc15 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:38)
#loc16 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:53)
#loc17 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:47)
#loc18 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:59)
#loc19 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:30)
#loc20 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":34:65)
#loc21 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:35)
#loc22 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:43)
#loc23 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:52)
#loc24 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:64)
#loc25 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:30)
#loc26 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":35:70)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":36:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:36)
#loc33 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:44)
#loc34 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:53)
#loc35 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:65)
#loc36 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:30)
#loc37 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":37:71)
#loc38 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":38:40)
#loc39 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:37)
#loc40 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:45)
#loc41 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:54)
#loc42 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:66)
#loc43 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:31)
#loc44 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":39:72)
#loc45 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":40:42)
#loc46 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":43:20)
#loc47 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":46:68)
#loc48 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":46:60)
#loc49 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":46:31)
#loc50 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":46:74)
#loc51 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":47:65)
#loc52 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":47:31)
#loc53 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":47:79)
#loc54 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":48:42)
#loc55 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":49:66)
#loc56 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":49:31)
#loc57 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":49:80)
#loc58 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":50:42)
#loc59 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":51:66)
#loc60 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":51:31)
#loc61 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":51:80)
#loc62 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":52:42)
#loc63 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":54:35)
#loc64 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":55:34)
#loc65 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":42:34)
#loc66 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":56:25)
#loc67 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":56:37)
#loc68 = loc("inductor_cache/5z/c5zrwi77fvdfxzcogi622fiqxc3jy56wonmwttm46eyvjeoib4xk.py":56:4)
#loc69 = loc(callsite(#loc27 at #loc28))
#loc70 = loc(callsite(#loc29 at #loc28))
#loc71 = loc(callsite(#loc30 at #loc28))
#loc72 = loc(callsite(#loc31 at #loc28))
#loc73 = loc(callsite(#loc27 at #loc38))
#loc74 = loc(callsite(#loc29 at #loc38))
#loc75 = loc(callsite(#loc30 at #loc38))
#loc76 = loc(callsite(#loc31 at #loc38))
#loc77 = loc(callsite(#loc27 at #loc45))
#loc78 = loc(callsite(#loc29 at #loc45))
#loc79 = loc(callsite(#loc30 at #loc45))
#loc80 = loc(callsite(#loc31 at #loc45))
#loc81 = loc(callsite(#loc27 at #loc54))
#loc82 = loc(callsite(#loc29 at #loc54))
#loc83 = loc(callsite(#loc30 at #loc54))
#loc84 = loc(callsite(#loc31 at #loc54))
#loc85 = loc(callsite(#loc27 at #loc58))
#loc86 = loc(callsite(#loc29 at #loc58))
#loc87 = loc(callsite(#loc30 at #loc58))
#loc88 = loc(callsite(#loc31 at #loc58))
#loc89 = loc(callsite(#loc27 at #loc62))
#loc90 = loc(callsite(#loc29 at #loc62))
#loc91 = loc(callsite(#loc30 at #loc62))
#loc92 = loc(callsite(#loc31 at #loc62))
#loc93 = loc(fused[#loc64, #loc65])
