//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_15 // -- Begin function triton_per_fused__native_batch_norm_legit_15
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_15
.visible .entry triton_per_fused__native_batch_norm_legit_15(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_15_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_15_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_15_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_15_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_15_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_15_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<150>;
	.reg .f32 	%f<90>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_15_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_15_param_1];
$L__tmp0:
	.loc	1 23 28                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:23:33
	shl.b32 	%r78, %r1, 5;
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_15_param_2];
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_15_param_3];
	.loc	1 24 44                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:24:44
	mov.u32 	%r79, %tid.x;
	and.b32  	%r80, %r79, 24;
	shl.b32 	%r81, %r79, 2;
	and.b32  	%r82, %r81, 28;
	and.b32  	%r83, %r79, 31;
	.loc	1 24 23                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:24:23
	or.b32  	%r84, %r78, %r82;
	.loc	1 25 21                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:25:21
	setp.lt.s32 	%p1, %r84, 512;
	.loc	1 31 34                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:34
	shl.b32 	%r85, %r79, 4;
	and.b32  	%r86, %r85, 3968;
	.loc	1 31 51                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:51
	shr.s32 	%r88, %r84, 31;
	shr.u32 	%r89, %r88, 25;
	add.s32 	%r90, %r84, %r89;
	.loc	1 31 45                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:45
	shl.b32 	%r91, %r90, 6;
	and.b32  	%r92, %r91, -8192;
	.loc	1 31 65                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:65
	and.b32  	%r93, %r90, -128;
	sub.s32 	%r94, %r84, %r93;
	.loc	1 31 39                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:39
	add.s32 	%r95, %r94, %r86;
	.loc	1 31 60                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:60
	add.s32 	%r96, %r95, %r92;
	add.s32 	%r97, %r96, 4096;
	.loc	1 31 30                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:30
	mul.wide.s32 	%rd10, %r96, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mul.wide.s32 	%rd11, %r97, 4;
	add.s64 	%rd2, %rd6, %rd11;
	mov.b32 	%r6, 0;
	.loc	1 31 73                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:31:73
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f5;
	selp.f32 	%f10, %f9, 0f00000000, %p1;
	add.f32 	%f11, %f2, %f6;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	add.f32 	%f13, %f3, %f7;
	selp.f32 	%f14, %f13, 0f00000000, %p1;
	add.f32 	%f15, %f4, %f8;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f10;
	shfl.sync.bfly.b32	%r99, %r98, 16, 31, -1;
	mov.b32 	%f17, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f10, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f18;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f19, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f12;
	shfl.sync.bfly.b32	%r103, %r102, 16, 31, -1;
	mov.b32 	%f21, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f12, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f22;
	shfl.sync.bfly.b32	%r105, %r104, 8, 31, -1;
	mov.b32 	%f23, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f14;
	shfl.sync.bfly.b32	%r107, %r106, 16, 31, -1;
	mov.b32 	%f25, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f14, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f26;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	mov.b32 	%f27, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f16;
	shfl.sync.bfly.b32	%r111, %r110, 16, 31, -1;
	mov.b32 	%f29, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f16, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f30;
	shfl.sync.bfly.b32	%r113, %r112, 8, 31, -1;
	mov.b32 	%f31, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r80, 0;
	bfe.u32 	%r114, %r79, 5, 3;
	shl.b32 	%r115, %r114, 2;
	shl.b32 	%r116, %r82, 5;
	or.b32  	%r117, %r116, %r115;
	mov.u32 	%r118, global_smem;
	add.s32 	%r18, %r118, %r117;
	mov.b32 	%r19, %f20;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 32;
	mov.b32 	%r21, %f24;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 64;
	mov.b32 	%r23, %f28;
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 96;
	mov.b32 	%r25, %f32;
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r79, 256;
	add.s32 	%r27, %r118, %r81;
	// begin inline asm
	@%p15 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r26;
	shfl.sync.bfly.b32	%r119, %r26, 4, 31, -1;
	mov.b32 	%f34, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f35;
	shfl.sync.bfly.b32	%r121, %r120, 2, 31, -1;
	mov.b32 	%f36, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f37;
	shfl.sync.bfly.b32	%r123, %r122, 1, 31, -1;
	mov.b32 	%f38, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r124, %r79, 7;
	setp.eq.s32 	%p29, %r124, 0;
	and.pred  	%p16, %p15, %p29;
	mov.b32 	%r29, %f39;
	// begin inline asm
	@%p16 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r125, %r118, %r116;
$L__tmp2:
	.loc	1 39 19                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:39:19
	ld.shared.u32 	%r31, [%r125];
	ld.shared.u32 	%r32, [%r125+32];
	ld.shared.u32 	%r33, [%r125+64];
	ld.shared.u32 	%r34, [%r125+96];
	bar.sync 	0;
	mad.lo.s32 	%r62, %r82, -28, %r125;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r62 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r126, %r83, 2;
	add.s32 	%r127, %r118, %r126;
	ld.shared.u32 	%r36, [%r127];
	mov.b32 	%r37, 1115684864;
	// begin inline asm
	div.full.f32 %r76, %r36, %r37;
	// end inline asm
	// begin inline asm
	div.full.f32 %r38, %r31, %r37;
	// end inline asm
	mov.b32 	%f40, %r38;
	// begin inline asm
	div.full.f32 %r41, %r32, %r37;
	// end inline asm
	mov.b32 	%f41, %r41;
	// begin inline asm
	div.full.f32 %r44, %r33, %r37;
	// end inline asm
	mov.b32 	%f42, %r44;
	// begin inline asm
	div.full.f32 %r47, %r34, %r37;
	// end inline asm
	mov.b32 	%f43, %r47;
	.loc	1 40 19                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:40:19
	sub.f32 	%f44, %f1, %f40;
	sub.f32 	%f45, %f2, %f41;
	sub.f32 	%f46, %f3, %f42;
	sub.f32 	%f47, %f4, %f43;
	sub.f32 	%f48, %f5, %f40;
	sub.f32 	%f49, %f6, %f41;
	sub.f32 	%f50, %f7, %f42;
	sub.f32 	%f51, %f8, %f43;
	.loc	1 41 20                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:41:20
	mul.f32 	%f52, %f48, %f48;
	mul.f32 	%f53, %f49, %f49;
	mul.f32 	%f54, %f50, %f50;
	mul.f32 	%f55, %f51, %f51;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f56, %f44, %f44, %f52;
	selp.f32 	%f57, %f56, 0f00000000, %p1;
	fma.rn.f32 	%f58, %f45, %f45, %f53;
	selp.f32 	%f59, %f58, 0f00000000, %p1;
	fma.rn.f32 	%f60, %f46, %f46, %f54;
	selp.f32 	%f61, %f60, 0f00000000, %p1;
	fma.rn.f32 	%f62, %f47, %f47, %f55;
	selp.f32 	%f63, %f62, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f57;
	shfl.sync.bfly.b32	%r129, %r128, 16, 31, -1;
	mov.b32 	%f64, %r129;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f57, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f65;
	shfl.sync.bfly.b32	%r131, %r130, 8, 31, -1;
	mov.b32 	%f66, %r131;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f59;
	shfl.sync.bfly.b32	%r133, %r132, 16, 31, -1;
	mov.b32 	%f68, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f59, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r134, %f69;
	shfl.sync.bfly.b32	%r135, %r134, 8, 31, -1;
	mov.b32 	%f70, %r135;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r136, %f61;
	shfl.sync.bfly.b32	%r137, %r136, 16, 31, -1;
	mov.b32 	%f72, %r137;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f61, %f72;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r138, %f73;
	shfl.sync.bfly.b32	%r139, %r138, 8, 31, -1;
	mov.b32 	%f74, %r139;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r140, %f63;
	shfl.sync.bfly.b32	%r141, %r140, 16, 31, -1;
	mov.b32 	%f76, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f63, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r142, %f77;
	shfl.sync.bfly.b32	%r143, %r142, 8, 31, -1;
	mov.b32 	%f78, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f67;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r51;
	// end inline asm
	mov.b32 	%r53, %f71;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r53;
	// end inline asm
	mov.b32 	%r55, %f75;
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r55;
	// end inline asm
	mov.b32 	%r57, %f79;
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p15 ld.shared.b32 %r58, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f80, %r58;
	shfl.sync.bfly.b32	%r144, %r58, 4, 31, -1;
	mov.b32 	%f81, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f82;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f83, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f84;
	shfl.sync.bfly.b32	%r148, %r147, 1, 31, -1;
	mov.b32 	%f85, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f86;
	// begin inline asm
	@%p16 st.shared.b32 [ %r27 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r68, [%r125];
	ld.shared.u32 	%r69, [%r125+32];
	ld.shared.u32 	%r70, [%r125+64];
	ld.shared.u32 	%r71, [%r125+96];
$L__tmp4:
	.loc	1 49 28                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:49:28
	bar.sync 	0;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r62 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:46:20
	ld.shared.u32 	%r73, [%r127];
	.loc	1 44 29                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:44:29
	bar.sync 	0;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r62 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r77, [%r127];
	.loc	1 46 20                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:46:20
	// begin inline asm
	div.full.f32 %r72, %r73, %r37;
	// end inline asm
	mov.b32 	%f87, %r72;
	.loc	1 48 20                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:48:20
	add.f32 	%f88, %f87, 0f3727C5AC;
	.loc	1 49 28                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:49:28
	rsqrt.approx.ftz.f32 	%f89, %f88;
	.loc	1 24 23                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:24:23
	or.b32  	%r149, %r78, %r83;
	.loc	1 25 21                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:25:21
	setp.lt.s32 	%p30, %r149, 512;
	.loc	1 50 25                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:50:25
	mul.wide.s32 	%rd12, %r149, 4;
	add.s64 	%rd3, %rd9, %rd12;
	.loc	1 50 37                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:50:37
	setp.eq.s32 	%p31, %r114, 0;
	mov.b32 	%r75, %f89;
	and.pred  	%p26, %p31, %p30;
	// begin inline asm
	@%p26 st.global.b32 [ %rd3 + 0 ], { %r75 };
	// end inline asm
	.loc	1 51 25                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:51:25
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 51 37                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:51:37
	// begin inline asm
	@%p26 st.global.b32 [ %rd4 + 0 ], { %r76 };
	// end inline asm
	.loc	1 52 25                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:52:25
	add.s64 	%rd5, %rd8, %rd12;
	.loc	1 52 37                         // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:52:37
	// begin inline asm
	@%p26 st.global.b32 [ %rd5 + 0 ], { %r77 };
	// end inline asm
	.loc	1 52 4                          // cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/j7/cj7nwuskspldniwd6ezjt5pcfboretlmqgjpgerntvtqtr54xohb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 55
.b8 110
.b8 119
.b8 117
.b8 115
.b8 107
.b8 115
.b8 112
.b8 108
.b8 100
.b8 110
.b8 105
.b8 119
.b8 100
.b8 54
.b8 101
.b8 122
.b8 106
.b8 116
.b8 53
.b8 112
.b8 99
.b8 102
.b8 98
.b8 111
.b8 114
.b8 101
.b8 116
.b8 108
.b8 109
.b8 113
.b8 103
.b8 106
.b8 112
.b8 103
.b8 101
.b8 114
.b8 110
.b8 116
.b8 118
.b8 116
.b8 113
.b8 116
.b8 114
.b8 53
.b8 52
.b8 120
.b8 111
.b8 104
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 49
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
