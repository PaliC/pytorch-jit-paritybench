//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mul_sub_sum_2 // -- Begin function triton_per_fused_mul_sub_sum_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mul_sub_sum_2
.visible .entry triton_per_fused_mul_sub_sum_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_2_param_5,
	.param .u32 triton_per_fused_mul_sub_sum_2_param_6,
	.param .u32 triton_per_fused_mul_sub_sum_2_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<67>;
	.reg .b32 	%r<212>;
	.reg .f32 	%f<85>;
	.reg .b64 	%rd<45>;
	.loc	1 19 0                          // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:19:0

// %bb.0:
	ld.param.u64 	%rd24, [triton_per_fused_mul_sub_sum_2_param_0];
	ld.param.u64 	%rd25, [triton_per_fused_mul_sub_sum_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:23:33
	shl.b32 	%r119, %r1, 7;
	ld.param.u64 	%rd26, [triton_per_fused_mul_sub_sum_2_param_2];
	ld.param.u64 	%rd27, [triton_per_fused_mul_sub_sum_2_param_3];
	.loc	1 24 44                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:24:44
	mov.u32 	%r120, %tid.x;
	and.b32  	%r121, %r120, 127;
	ld.param.u64 	%rd28, [triton_per_fused_mul_sub_sum_2_param_4];
	and.b32  	%r122, %r120, 128;
	ld.param.u64 	%rd29, [triton_per_fused_mul_sub_sum_2_param_5];
	bfe.u32 	%r123, %r120, 2, 6;
	.loc	1 24 23                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:24:23
	or.b32  	%r124, %r119, %r121;
	or.b32  	%r125, %r119, %r123;
	or.b32  	%r126, %r125, 64;
	.loc	1 25 21                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:25:21
	setp.lt.s32 	%p25, %r125, 512;
	setp.lt.s32 	%p30, %r126, 512;
	setp.lt.s32 	%p1, %r124, 512;
	.loc	1 26 34                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:26:34
	bfe.u32 	%r127, %r120, 7, 1;
	shl.b32 	%r128, %r120, 2;
	and.b32  	%r129, %r128, 12;
	.loc	1 30 21                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:30:21
	bfe.s32 	%r130, %r1, 24, 1;
	.loc	1 32 19                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:32:19
	shr.u32 	%r131, %r130, 30;
	.loc	1 30 21                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:30:21
	add.s32 	%r132, %r124, %r131;
	shr.s32 	%r133, %r132, 2;
	.loc	1 30 26                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:30:26
	shr.s32 	%r134, %r132, 31;
	shr.u32 	%r135, %r134, 27;
	add.s32 	%r136, %r133, %r135;
	and.b32  	%r137, %r136, -32;
	sub.s32 	%r138, %r133, %r137;
	.loc	1 31 19                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:31:19
	shr.u32 	%r139, %r130, 25;
	add.s32 	%r140, %r124, %r139;
	shr.s32 	%r142, %r125, 31;
	shr.u32 	%r143, %r142, 25;
	add.s32 	%r144, %r125, %r143;
	shr.s32 	%r145, %r144, 7;
	shr.s32 	%r147, %r126, 31;
	shr.u32 	%r148, %r147, 25;
	add.s32 	%r149, %r126, %r148;
	shr.s32 	%r150, %r149, 7;
	.loc	1 32 19                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:32:19
	add.s32 	%r151, %r125, %r131;
	and.b32  	%r152, %r151, 268435452;
	sub.s32 	%r153, %r125, %r152;
	add.s32 	%r154, %r126, %r131;
	and.b32  	%r155, %r154, 268435452;
	sub.s32 	%r156, %r126, %r155;
	.loc	1 33 19                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:33:19
	and.b32  	%r157, %r144, -128;
	sub.s32 	%r158, %r125, %r157;
	and.b32  	%r159, %r149, -128;
	sub.s32 	%r160, %r126, %r159;
	.loc	1 35 38                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:38
	shr.u32 	%r161, %r122, 2;
	.loc	1 35 47                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:47
	shl.b32 	%r162, %r140, 2;
	and.b32  	%r163, %r162, -512;
	.loc	1 35 35                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:35
	add.s32 	%r164, %r163, %r138;
	.loc	1 35 43                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:43
	add.s32 	%r165, %r164, %r161;
	add.s32 	%r166, %r165, 64;
	add.s32 	%r167, %r165, 128;
	add.s32 	%r168, %r165, 192;
	add.s32 	%r169, %r165, 256;
	add.s32 	%r170, %r165, 320;
	add.s32 	%r171, %r165, 384;
	add.s32 	%r172, %r165, 448;
	.loc	1 35 30                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:30
	mul.wide.s32 	%rd30, %r165, 4;
	add.s64 	%rd1, %rd24, %rd30;
	mul.wide.s32 	%rd31, %r166, 4;
	add.s64 	%rd2, %rd24, %rd31;
	mul.wide.s32 	%rd32, %r167, 4;
	add.s64 	%rd3, %rd24, %rd32;
	mul.wide.s32 	%rd33, %r168, 4;
	add.s64 	%rd4, %rd24, %rd33;
	mul.wide.s32 	%rd34, %r169, 4;
	add.s64 	%rd5, %rd24, %rd34;
	mul.wide.s32 	%rd35, %r170, 4;
	add.s64 	%rd6, %rd24, %rd35;
	mul.wide.s32 	%rd36, %r171, 4;
	add.s64 	%rd7, %rd24, %rd36;
	mul.wide.s32 	%rd37, %r172, 4;
	add.s64 	%rd8, %rd24, %rd37;
	mov.b32 	%r3, 0;
	.loc	1 35 52                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:35:52
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r19, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r21, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r23, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r25, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r27, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r29, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r31, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r33, %r3;
	// end inline asm
	shl.b32 	%r173, %r120, 4;
	and.b32  	%r174, %r173, 2032;
	or.b32  	%r175, %r174, %r127;
	and.b32  	%r176, %r128, 1020;
	mov.u32 	%r177, global_smem;
	add.s32 	%r178, %r177, %r174;
	shl.b32 	%r179, %r175, 2;
	add.s32 	%r18, %r178, %r179;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 8;
	// begin inline asm
	@%p17 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 16;
	// begin inline asm
	@%p17 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 24;
	// begin inline asm
	@%p17 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	add.s32 	%r26, %r18, 32;
	// begin inline asm
	@%p17 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r18, 40;
	// begin inline asm
	@%p17 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r18, 48;
	// begin inline asm
	@%p17 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r18, 56;
	// begin inline asm
	@%p17 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r180, %r120, 252;
	shl.b32 	%r181, %r180, 2;
	add.s32 	%r182, %r177, %r181;
	shl.b32 	%r183, %r176, 2;
	add.s32 	%r184, %r182, %r183;
	ld.shared.v4.f32 	{%f17, %f18, %f19, %f20}, [%r184];
	or.b32  	%r185, %r176, 1024;
	and.b32  	%r186, %r185, 2032;
	add.s32 	%r187, %r177, %r186;
	add.s32 	%r188, %r187, %r183;
	ld.shared.v4.f32 	{%f21, %f22, %f23, %f24}, [%r188+4096];
	.loc	1 36 38                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:36:38
	shl.b32 	%r189, %r145, 4;
	shl.b32 	%r190, %r150, 4;
	.loc	1 36 35                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:36:35
	or.b32  	%r191, %r189, %r129;
	or.b32  	%r192, %r190, %r129;
	.loc	1 36 30                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:36:30
	mul.wide.s32 	%rd38, %r191, 4;
	add.s64 	%rd9, %rd25, %rd38;
	mul.wide.s32 	%rd39, %r192, 4;
	add.s64 	%rd10, %rd25, %rd39;
	.loc	1 36 43                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:36:43
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd9 + 0 ];
	@!%p25 mov.u32 %r34, %r3;
	@!%p25 mov.u32 %r35, %r3;
	@!%p25 mov.u32 %r36, %r3;
	@!%p25 mov.u32 %r37, %r3;
	// end inline asm
	mov.b32 	%f25, %r34;
	mov.b32 	%f26, %r35;
	mov.b32 	%f27, %r36;
	mov.b32 	%f28, %r37;
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p30 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd10 + 0 ];
	@!%p30 mov.u32 %r42, %r3;
	@!%p30 mov.u32 %r43, %r3;
	@!%p30 mov.u32 %r44, %r3;
	@!%p30 mov.u32 %r45, %r3;
	// end inline asm
	mov.b32 	%f29, %r42;
	mov.b32 	%f30, %r43;
	mov.b32 	%f31, %r44;
	mov.b32 	%f32, %r45;
	.loc	1 37 30                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:37:30
	add.s64 	%rd11, %rd26, %rd38;
	add.s64 	%rd12, %rd26, %rd39;
	.loc	1 37 43                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:37:43
	// begin inline asm
	mov.u32 %r92, 0x0;
	mov.u32 %r95, 0x0;
	mov.u32 %r98, 0x0;
	mov.u32 %r101, 0x0;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r92, %r95, %r98, %r101 }, [ %rd11 + 0 ];
	@!%p25 mov.u32 %r92, %r3;
	@!%p25 mov.u32 %r95, %r3;
	@!%p25 mov.u32 %r98, %r3;
	@!%p25 mov.u32 %r101, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r104, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r110, 0x0;
	mov.u32 %r113, 0x0;
	@%p30 ld.global.L1::evict_last.v4.b32 { %r104, %r107, %r110, %r113 }, [ %rd12 + 0 ];
	@!%p30 mov.u32 %r104, %r3;
	@!%p30 mov.u32 %r107, %r3;
	@!%p30 mov.u32 %r110, %r3;
	@!%p30 mov.u32 %r113, %r3;
	// end inline asm
	.loc	1 38 38                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:38
	shl.b32 	%r193, %r153, 4;
	shl.b32 	%r194, %r156, 4;
	.loc	1 38 35                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:35
	or.b32  	%r195, %r193, %r129;
	or.b32  	%r196, %r194, %r129;
	.loc	1 38 46                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:46
	shl.b32 	%r197, %r145, 6;
	shl.b32 	%r198, %r150, 6;
	.loc	1 38 43                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:43
	add.s32 	%r199, %r195, %r197;
	add.s32 	%r200, %r196, %r198;
	.loc	1 38 30                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:30
	mul.wide.s32 	%rd40, %r199, 4;
	add.s64 	%rd13, %rd27, %rd40;
	mul.wide.s32 	%rd41, %r200, 4;
	add.s64 	%rd14, %rd27, %rd41;
	.loc	1 38 51                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:38:51
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd13 + 0 ];
	@!%p25 mov.u32 %r66, %r3;
	@!%p25 mov.u32 %r67, %r3;
	@!%p25 mov.u32 %r68, %r3;
	@!%p25 mov.u32 %r69, %r3;
	// end inline asm
	mov.b32 	%f33, %r66;
	mov.b32 	%f34, %r67;
	mov.b32 	%f35, %r68;
	mov.b32 	%f36, %r69;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p30 ld.global.L1::evict_last.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd14 + 0 ];
	@!%p30 mov.u32 %r74, %r3;
	@!%p30 mov.u32 %r75, %r3;
	@!%p30 mov.u32 %r76, %r3;
	@!%p30 mov.u32 %r77, %r3;
	// end inline asm
	mov.b32 	%f37, %r74;
	mov.b32 	%f38, %r75;
	mov.b32 	%f39, %r76;
	mov.b32 	%f40, %r77;
	.loc	1 39 30                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:39:30
	mul.wide.s32 	%rd42, %r158, 4;
	add.s64 	%rd15, %rd28, %rd42;
	mul.wide.s32 	%rd43, %r160, 4;
	add.s64 	%rd19, %rd28, %rd43;
	.loc	1 39 35                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:39:35
	// begin inline asm
	mov.u32 %r82, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r82 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r83, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r83 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r84 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r85, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r85 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r85;
	// begin inline asm
	mov.u32 %r86, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r86 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r87, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r87 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r88, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r88 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r89, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r89 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r89;
	.loc	1 40 18                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:40:18
	sub.f32 	%f43, %f17, %f25;
	sub.f32 	%f44, %f18, %f26;
	sub.f32 	%f45, %f19, %f27;
	sub.f32 	%f46, %f20, %f28;
	sub.f32 	%f47, %f21, %f29;
	sub.f32 	%f48, %f22, %f30;
	sub.f32 	%f49, %f23, %f31;
	sub.f32 	%f50, %f24, %f32;
	.loc	1 41 23                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:41:23
	mul.f32 	%f2, %f43, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f45, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f47, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f50, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	1 42 18                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:42:18
	mov.b32 	%r91, %f1;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f51, %r90;
	mov.b32 	%r94, %f3;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f52, %r93;
	mov.b32 	%r97, %f5;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f53, %r96;
	mov.b32 	%r100, %f7;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f54, %r99;
	mov.b32 	%r103, %f9;
	// begin inline asm
	div.full.f32 %r102, %r103, %r104;
	// end inline asm
	mov.b32 	%f55, %r102;
	mov.b32 	%r106, %f11;
	// begin inline asm
	div.full.f32 %r105, %r106, %r107;
	// end inline asm
	mov.b32 	%f56, %r105;
	mov.b32 	%r109, %f13;
	// begin inline asm
	div.full.f32 %r108, %r109, %r110;
	// end inline asm
	mov.b32 	%f57, %r108;
	mov.b32 	%r112, %f15;
	// begin inline asm
	div.full.f32 %r111, %r112, %r113;
	// end inline asm
	mov.b32 	%f58, %r111;
	.loc	1 43 18                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:43:18
	sub.f32 	%f59, %f33, %f41;
	sub.f32 	%f60, %f34, %f41;
	sub.f32 	%f61, %f35, %f41;
	sub.f32 	%f62, %f36, %f41;
	sub.f32 	%f63, %f37, %f42;
	sub.f32 	%f64, %f38, %f42;
	sub.f32 	%f65, %f39, %f42;
	sub.f32 	%f66, %f40, %f42;
	.loc	1 44 18                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:44:18
	mul.f32 	%f67, %f60, %f52;
	mul.f32 	%f68, %f64, %f56;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f69, %f59, %f51, %f67;
	fma.rn.f32 	%f70, %f61, %f53, %f69;
	fma.rn.f32 	%f71, %f62, %f54, %f70;
	selp.f32 	%f72, %f71, 0f00000000, %p25;
	fma.rn.f32 	%f73, %f63, %f55, %f68;
	fma.rn.f32 	%f74, %f65, %f57, %f73;
	fma.rn.f32 	%f75, %f66, %f58, %f74;
	selp.f32 	%f76, %f75, 0f00000000, %p30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r201, %f72;
	shfl.sync.bfly.b32	%r202, %r201, 2, 31, -1;
	mov.b32 	%f77, %r202;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f72, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r203, %f78;
	shfl.sync.bfly.b32	%r204, %r203, 1, 31, -1;
	mov.b32 	%f79, %r204;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r205, %f76;
	shfl.sync.bfly.b32	%r206, %r205, 2, 31, -1;
	mov.b32 	%f81, %r206;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f76, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r207, %f82;
	shfl.sync.bfly.b32	%r208, %r207, 1, 31, -1;
	mov.b32 	%f83, %r208;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
$L__tmp2:
	.loc	1 47 29                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:47:29
	bar.sync 	0;
	shl.b32 	%r209, %r123, 2;
	add.s32 	%r114, %r177, %r209;
	mov.b32 	%r115, %f80;
	// begin inline asm
	@%p17 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	add.s32 	%r116, %r114, 256;
	mov.b32 	%r117, %f84;
	// begin inline asm
	@%p17 st.shared.b32 [ %r116 + 0 ], %r117;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r210, %r121, 2;
	add.s32 	%r211, %r177, %r210;
	ld.shared.u32 	%r118, [%r211];
	.loc	1 48 25                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:48:25
	mul.wide.s32 	%rd44, %r124, 4;
	add.s64 	%rd23, %rd29, %rd44;
	.loc	1 48 37                         // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:48:37
	setp.eq.s32 	%p66, %r122, 0;
	and.pred  	%p65, %p66, %p1;
	// begin inline asm
	@%p65 st.global.b32 [ %rd23 + 0 ], { %r118 };
	// end inline asm
	.loc	1 48 4                          // cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py:48:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 175                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 116
.b8 98
.b8 112
.b8 110
.b8 105
.b8 100
.b8 103
.b8 113
.b8 116
.b8 100
.b8 115
.b8 107
.b8 106
.b8 54
.b8 121
.b8 105
.b8 50
.b8 110
.b8 104
.b8 100
.b8 121
.b8 102
.b8 116
.b8 55
.b8 119
.b8 99
.b8 104
.b8 50
.b8 114
.b8 104
.b8 50
.b8 117
.b8 54
.b8 102
.b8 51
.b8 122
.b8 115
.b8 102
.b8 115
.b8 120
.b8 118
.b8 55
.b8 118
.b8 116
.b8 122
.b8 106
.b8 105
.b8 118
.b8 98
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
