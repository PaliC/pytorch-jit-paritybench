#loc = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":47:26)
#loc49 = loc(callsite(#loc1 at #loc42))
module {
  tt.func public @triton_per_fused_mul_sub_sum_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<64> : tensor<128x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<128x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<128x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<128x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<128x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_5 : tensor<128x1xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_4 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_3 : tensor<128x1xi32> loc(#loc12)
    %12 = arith.remsi %5, %cst_5 : tensor<128x1xi32> loc(#loc13)
    %13 = arith.remsi %5, %cst_3 : tensor<128x1xi32> loc(#loc14)
    %14 = arith.muli %8, %cst_2 : tensor<1x16xi32> loc(#loc15)
    %15 = tt.broadcast %10 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc16)
    %16 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<128x16xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<128x16xi32> loc(#loc16)
    %18 = arith.muli %11, %cst_6 : tensor<128x1xi32> loc(#loc17)
    %19 = tt.broadcast %18 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc18)
    %20 = arith.addi %17, %19 : tensor<128x16xi32> loc(#loc18)
    %21 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x16x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %20 : tensor<128x16x!tt.ptr<f32>>, tensor<128x16xi32> loc(#loc19)
    %23 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x16xi1> loc(#loc20)
    %24 = tt.load %22, %23, %cst_1 evictionPolicy = evict_last : tensor<128x16x!tt.ptr<f32>> loc(#loc20)
    %25 = arith.muli %11, %cst_0 : tensor<128x1xi32> loc(#loc21)
    %26 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<128x16xi32> loc(#loc22)
    %27 = tt.broadcast %25 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc22)
    %28 = arith.addi %26, %27 : tensor<128x16xi32> loc(#loc22)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x16x!tt.ptr<f32>> loc(#loc23)
    %30 = tt.addptr %29, %28 : tensor<128x16x!tt.ptr<f32>>, tensor<128x16xi32> loc(#loc23)
    %31 = tt.load %30, %23, %cst_1 evictionPolicy = evict_last : tensor<128x16x!tt.ptr<f32>> loc(#loc24)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x16x!tt.ptr<f32>> loc(#loc25)
    %33 = tt.addptr %32, %28 : tensor<128x16x!tt.ptr<f32>>, tensor<128x16xi32> loc(#loc25)
    %34 = tt.load %33, %23, %cst_1 evictionPolicy = evict_last : tensor<128x16x!tt.ptr<f32>> loc(#loc26)
    %35 = arith.muli %12, %cst_0 : tensor<128x1xi32> loc(#loc27)
    %36 = tt.broadcast %35 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc28)
    %37 = arith.addi %26, %36 : tensor<128x16xi32> loc(#loc28)
    %38 = arith.muli %11, %cst : tensor<128x1xi32> loc(#loc29)
    %39 = tt.broadcast %38 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc30)
    %40 = arith.addi %37, %39 : tensor<128x16xi32> loc(#loc30)
    %41 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x16x!tt.ptr<f32>> loc(#loc31)
    %42 = tt.addptr %41, %40 : tensor<128x16x!tt.ptr<f32>>, tensor<128x16xi32> loc(#loc31)
    %43 = tt.load %42, %23, %cst_1 evictionPolicy = evict_last : tensor<128x16x!tt.ptr<f32>> loc(#loc32)
    %44 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc33)
    %45 = tt.addptr %44, %13 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc33)
    %46 = tt.load %45, %6 evictionPolicy = evict_last : tensor<128x1x!tt.ptr<f32>> loc(#loc34)
    %47 = arith.subf %24, %31 : tensor<128x16xf32> loc(#loc35)
    %48 = math.exp %47 : tensor<128x16xf32> loc(#loc36)
    %49 = arith.divf %48, %34 : tensor<128x16xf32> loc(#loc37)
    %50 = tt.broadcast %46 : tensor<128x1xf32> -> tensor<128x16xf32> loc(#loc38)
    %51 = arith.subf %43, %50 : tensor<128x16xf32> loc(#loc38)
    %52 = arith.mulf %49, %51 : tensor<128x16xf32> loc(#loc39)
    %53 = arith.select %23, %52, %cst_1 : tensor<128x16xi1>, tensor<128x16xf32> loc(#loc40)
    %54 = "tt.reduce"(%53) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc42)), %arg9: f32 loc(callsite(#loc1 at #loc42))):
      %58 = arith.addf %arg8, %arg9 : f32 loc(#loc51)
      tt.reduce.return %58 : f32 loc(#loc48)
    }) : (tensor<128x16xf32>) -> tensor<128xf32> loc(#loc48)
    %55 = tt.expand_dims %54 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc44)
    %56 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc45)
    %57 = tt.addptr %56, %5 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc45)
    tt.store %57, %55, %6 : tensor<128x1x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":23:28)
#loc3 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":23:33)
#loc4 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":24:36)
#loc5 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":24:44)
#loc6 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":24:23)
#loc7 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":25:21)
#loc8 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":26:26)
#loc9 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":26:34)
#loc10 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":30:21)
#loc11 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":30:26)
#loc12 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":31:19)
#loc13 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":32:19)
#loc14 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":33:19)
#loc15 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:38)
#loc16 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:35)
#loc17 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:47)
#loc18 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:43)
#loc19 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:30)
#loc20 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":35:52)
#loc21 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":36:38)
#loc22 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":36:35)
#loc23 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":36:30)
#loc24 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":36:43)
#loc25 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":37:30)
#loc26 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":37:43)
#loc27 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:38)
#loc28 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:35)
#loc29 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:46)
#loc30 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:43)
#loc31 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:30)
#loc32 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":38:51)
#loc33 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":39:30)
#loc34 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":39:35)
#loc35 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":40:18)
#loc36 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":41:23)
#loc37 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":42:18)
#loc38 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":43:18)
#loc39 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":44:18)
#loc40 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":46:35)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":47:29)
#loc45 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":48:25)
#loc46 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":48:37)
#loc47 = loc("inductor_cache/qt/cqtbpnidgqtdskj6yi2nhdyft7wch2rh2u6f3zsfsxv7vtzjivbz.py":48:4)
#loc48 = loc(callsite(#loc41 at #loc42))
#loc50 = loc(callsite(#loc43 at #loc41))
#loc51 = loc(callsite(#loc50 at #loc42))
