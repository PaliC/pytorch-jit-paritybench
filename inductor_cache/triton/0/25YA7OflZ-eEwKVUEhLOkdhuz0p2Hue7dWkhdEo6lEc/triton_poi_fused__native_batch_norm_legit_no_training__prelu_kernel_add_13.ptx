//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_13,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_14,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_15,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_16
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<35>;
	.loc	1 19 0                          // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_1];
$L__tmp0:
	.loc	1 21 28                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:21:33
	shl.b32 	%r21, %r1, 7;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_2];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_3];
	.loc	1 22 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:22:36
	mov.u32 	%r22, %tid.x;
	and.b32  	%r23, %r22, 127;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_4];
	.loc	1 22 23                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:22:23
	or.b32  	%r24, %r21, %r23;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_5];
	.loc	1 25 21                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:25:21
	bfe.s32 	%r25, %r1, 24, 1;
	shr.u32 	%r26, %r25, 24;
	add.s32 	%r27, %r24, %r26;
	shr.s32 	%r28, %r27, 8;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_6];
	.loc	1 25 28                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:25:28
	mul.hi.s32 	%r29, %r28, 715827883;
	shr.u32 	%r30, %r29, 31;
	shr.u32 	%r31, %r29, 2;
	add.s32 	%r32, %r31, %r30;
	mul.lo.s32 	%r33, %r32, 24;
	sub.s32 	%r34, %r28, %r33;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_7];
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_8];
	.loc	1 26 30                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:26:30
	mul.wide.s32 	%rd26, %r24, 4;
	add.s64 	%rd1, %rd18, %rd26;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_9];
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_10];
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_11];
	.loc	1 27 30                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:27:30
	mul.wide.s32 	%rd30, %r34, 4;
	add.s64 	%rd2, %rd19, %rd30;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_12];
	.loc	1 27 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:27:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_13];
	.loc	1 28 30                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:28:30
	add.s64 	%rd3, %rd20, %rd30;
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_14];
	.loc	1 28 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:28:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	ld.param.u64 	%rd34, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_13_param_15];
	mov.b32 	%f1, %r4;
	.loc	1 29 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:29:31
	add.s64 	%rd4, %rd21, %rd30;
	.loc	1 29 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:29:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:30:31
	add.s64 	%rd5, %rd22, %rd30;
	.loc	1 30 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:30:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:31:31
	add.s64 	%rd6, %rd23, %rd30;
	.loc	1 31 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:31:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:32:31
	add.s64 	%rd7, %rd24, %rd26;
	.loc	1 32 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:32:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:33:31
	add.s64 	%rd8, %rd25, %rd30;
	.loc	1 33 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:33:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:34:31
	add.s64 	%rd9, %rd27, %rd26;
	.loc	1 34 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:34:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:35:31
	add.s64 	%rd10, %rd28, %rd30;
	.loc	1 35 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:35:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 32                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:36:32
	add.s64 	%rd11, %rd29, %rd26;
	.loc	1 36 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:36:37
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 32                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:37:32
	add.s64 	%rd12, %rd31, %rd30;
	.loc	1 37 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:37:37
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:38:32
	add.s64 	%rd13, %rd32, %rd26;
	.loc	1 38 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:38:37
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 39 32                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:39:32
	add.s64 	%rd14, %rd33, %rd30;
	.loc	1 39 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:39:37
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 42 18                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:42:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 43 26                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:43:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 26 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:26:35
	mov.b32 	%f4, %r2;
	.loc	1 27 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:27:35
	mov.b32 	%f5, %r3;
	.loc	1 40 18                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:40:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 39 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:39:37
	mov.b32 	%f7, %r15;
	mov.b32 	%f8, %r7;
	.loc	1 37 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:37:37
	mov.b32 	%f9, %r13;
	.loc	1 36 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:36:37
	mov.b32 	%f10, %r12;
	.loc	1 33 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:33:36
	mov.b32 	%f11, %r9;
	mov.b32 	%f12, %r11;
	.loc	1 32 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:32:36
	mov.b32 	%f13, %r8;
	mov.b32 	%f14, %r10;
	.loc	1 30 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:30:36
	mov.b32 	%f15, %r6;
	.loc	1 29 36                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:29:36
	mov.b32 	%f16, %r5;
	.loc	1 45 18                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:45:18
	mov.b32 	%r18, %f3;
	mov.b32 	%r17, 1065353216;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f17, %r16;
	.loc	1 48 19                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:48:19
	mul.f32 	%f18, %f6, %f17;
	.loc	1 50 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:50:20
	fma.rn.f32 	%f19, %f18, %f16, %f15;
	.loc	1 55 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:55:20
	setp.gt.f32 	%p17, %f14, 0f00000000;
	setp.gt.f32 	%p18, %f13, 0f00000000;
	.loc	1 56 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:56:20
	mul.f32 	%f20, %f14, %f12;
	mul.f32 	%f21, %f13, %f11;
	.loc	1 57 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:57:35
	selp.f32 	%f22, %f13, %f21, %p18;
	selp.f32 	%f23, %f14, %f20, %p17;
	.loc	1 61 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:61:20
	add.f32 	%f24, %f22, %f23;
	.loc	1 63 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:63:20
	setp.gt.f32 	%p19, %f10, 0f00000000;
	.loc	1 64 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:64:20
	mul.f32 	%f25, %f10, %f9;
	.loc	1 65 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:65:35
	selp.f32 	%f26, %f10, %f25, %p19;
	.loc	1 66 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:66:20
	mov.b32 	%f27, %r14;
	setp.gt.f32 	%p20, %f19, 0f00000000;
	setp.gt.f32 	%p21, %f27, 0f00000000;
	.loc	1 67 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:67:20
	mul.f32 	%f28, %f19, %f8;
	mul.f32 	%f29, %f27, %f7;
	.loc	1 68 35                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:68:35
	selp.f32 	%f30, %f19, %f28, %p20;
	selp.f32 	%f31, %f27, %f29, %p21;
	.loc	1 69 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:69:20
	add.f32 	%f32, %f24, %f30;
	mov.b32 	%r19, %f32;
	add.f32 	%f33, %f26, %f31;
	.loc	1 70 20                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:70:20
	add.f32 	%f34, %f33, %f32;
	.loc	1 71 28                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:71:28
	add.s64 	%rd15, %rd17, %rd26;
	.loc	1 71 40                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:71:40
	// begin inline asm
	@%p1 st.global.b32 [ %rd15 + 0 ], { %r19 };
	// end inline asm
	.loc	1 72 25                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:72:25
	add.s64 	%rd16, %rd34, %rd26;
	.loc	1 72 37                         // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:72:37
	mov.b32 	%r20, %f34;
	// begin inline asm
	@%p1 st.global.b32 [ %rd16 + 0 ], { %r20 };
	// end inline asm
	.loc	1 72 4                          // cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py:72:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uo/cuoqsypdigzsv7fpqjtripkaipa5uz32a5oit3rwpvxicavockzl.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 111
.b8 113
.b8 115
.b8 121
.b8 112
.b8 100
.b8 105
.b8 103
.b8 122
.b8 115
.b8 118
.b8 55
.b8 102
.b8 112
.b8 113
.b8 106
.b8 116
.b8 114
.b8 105
.b8 112
.b8 107
.b8 97
.b8 105
.b8 112
.b8 97
.b8 53
.b8 117
.b8 122
.b8 51
.b8 50
.b8 97
.b8 53
.b8 111
.b8 105
.b8 116
.b8 51
.b8 114
.b8 119
.b8 112
.b8 118
.b8 120
.b8 105
.b8 99
.b8 97
.b8 118
.b8 111
.b8 99
.b8 107
.b8 122
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 111
.b8 0
	}
	.section	.debug_macinfo	{	}
