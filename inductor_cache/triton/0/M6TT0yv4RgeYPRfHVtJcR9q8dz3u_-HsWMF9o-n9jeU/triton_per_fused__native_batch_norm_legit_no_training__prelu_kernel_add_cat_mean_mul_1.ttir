#loc = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0)
#loc1 = loc(unknown)
#loc60 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":71:26)
#loc77 = loc(callsite(#loc1 at #loc60))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training__prelu_kernel_add_cat_mean_mul_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":19:0)) attributes {noinline = false} {
    %c-2_i32 = arith.constant -2 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c2_i64 = arith.constant 2 : i64 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c4_i32 : i32 loc(#loc7)
    %7 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc8)
    %8 = tt.splat %7 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.load %8, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.load %11, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %arg5, %5 : !tt.ptr<f32>, i32 loc(#loc12)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %arg6, %5 : !tt.ptr<f32>, i32 loc(#loc14)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %arg7, %5 : !tt.ptr<f32>, i32 loc(#loc16)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc18)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.load %23, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %25 = arith.muli %0, %c16_i32 : i32 loc(#loc20)
    %26 = tt.splat %25 : i32 -> tensor<1x16xi32> loc(#loc21)
    %27 = arith.addi %4, %26 : tensor<1x16xi32> loc(#loc21)
    %28 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %29 = tt.addptr %28, %27 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc22)
    %30 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc23)
    %31 = tt.load %29, %30, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc23)
    %32 = arith.extsi %5 : i32 to i64 loc(#loc24)
    %33 = arith.cmpi slt, %32, %c2_i64 : i64 loc(#loc24)
    %34 = arith.muli %5, %c16_i32 : i32 loc(#loc25)
    %35 = tt.splat %34 : i32 -> tensor<1x16xi32> loc(#loc26)
    %36 = arith.addi %4, %35 : tensor<1x16xi32> loc(#loc26)
    %37 = arith.muli %6, %c32_i32 : i32 loc(#loc27)
    %38 = tt.splat %37 : i32 -> tensor<1x16xi32> loc(#loc28)
    %39 = arith.addi %36, %38 : tensor<1x16xi32> loc(#loc28)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc29)
    %41 = tt.addptr %40, %39 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc29)
    %42 = arith.andi %33, %1 : i1 loc(#loc30)
    %43 = tt.splat %42 : i1 -> tensor<1x16xi1> loc(#loc31)
    %44 = tt.load %41, %43, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc31)
    %45 = arith.cmpi sge, %32, %c2_i64 : i64 loc(#loc32)
    %46 = arith.addi %5, %c-2_i32 : i32 loc(#loc33)
    %47 = arith.muli %46, %c16_i32 : i32 loc(#loc34)
    %48 = tt.splat %47 : i32 -> tensor<1x16xi32> loc(#loc35)
    %49 = arith.addi %4, %48 : tensor<1x16xi32> loc(#loc35)
    %50 = arith.addi %49, %38 : tensor<1x16xi32> loc(#loc36)
    %51 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc37)
    %52 = tt.addptr %51, %50 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc37)
    %53 = arith.andi %45, %1 : i1 loc(#loc38)
    %54 = tt.splat %53 : i1 -> tensor<1x16xi1> loc(#loc39)
    %55 = tt.load %52, %54, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc39)
    %56 = tt.splat %33 : i1 -> tensor<1x16xi1> loc(#loc40)
    %57 = arith.select %56, %44, %55 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc40)
    %58 = tt.broadcast %9 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc41)
    %59 = arith.subf %57, %58 : tensor<1x16xf32> loc(#loc41)
    %60 = arith.addf %12, %cst_2 : tensor<1x1xf32> loc(#loc42)
    %61 = tt.extern_elementwise %60 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc43)
    %62 = arith.divf %cst_0, %61 : tensor<1x1xf32> loc(#loc44)
    %63 = tt.broadcast %62 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc45)
    %64 = arith.mulf %59, %63 : tensor<1x16xf32> loc(#loc45)
    %65 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc46)
    %66 = arith.mulf %64, %65 : tensor<1x16xf32> loc(#loc46)
    %67 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc47)
    %68 = arith.addf %66, %67 : tensor<1x16xf32> loc(#loc47)
    %69 = arith.cmpf ogt, %68, %cst_3 : tensor<1x16xf32> loc(#loc48)
    %70 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc49)
    %71 = arith.mulf %70, %68 : tensor<1x16xf32> loc(#loc49)
    %72 = arith.select %69, %68, %71 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc50)
    %73 = arith.subf %cst, %24 : tensor<1x1xf32> loc(#loc72)
    %74 = math.exp %73 : tensor<1x1xf32> loc(#loc73)
    %75 = arith.addf %74, %cst_0 : tensor<1x1xf32> loc(#loc74)
    %76 = arith.divf %cst_0, %75 : tensor<1x1xf32> loc(#loc75)
    %77 = tt.broadcast %76 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc56)
    %78 = arith.mulf %72, %77 : tensor<1x16xf32> loc(#loc56)
    %79 = arith.addf %78, %31 : tensor<1x16xf32> loc(#loc57)
    %80 = arith.select %30, %72, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc58)
    %81 = "tt.reduce"(%80) <{axis = 1 : i32}> ({
    ^bb0(%arg14: f32 loc(callsite(#loc1 at #loc60)), %arg15: f32 loc(callsite(#loc1 at #loc60))):
      %90 = arith.addf %arg14, %arg15 : f32 loc(#loc79)
      tt.reduce.return %90 : f32 loc(#loc76)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc76)
    %82 = tt.expand_dims %81 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc62)
    %83 = arith.divf %82, %cst_1 : tensor<1x1xf32> loc(#loc63)
    %84 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc64)
    %85 = tt.addptr %84, %27 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc64)
    tt.store %85, %57, %30 : tensor<1x16x!tt.ptr<f32>> loc(#loc65)
    %86 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc66)
    %87 = tt.addptr %86, %27 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc66)
    tt.store %87, %79, %30 : tensor<1x16x!tt.ptr<f32>> loc(#loc67)
    gpu.barrier loc(#loc68)
    %88 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc69)
    %89 = tt.splat %88 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc69)
    tt.store %89, %83, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":23:28)
#loc3 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":25:21)
#loc4 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":26:26)
#loc5 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":26:34)
#loc6 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":29:19)
#loc7 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":31:19)
#loc8 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":33:31)
#loc9 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":33:36)
#loc10 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":34:31)
#loc11 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":34:36)
#loc12 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":35:31)
#loc13 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":35:36)
#loc14 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":36:31)
#loc15 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":36:36)
#loc16 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":37:31)
#loc17 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":37:36)
#loc18 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":38:31)
#loc19 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":38:36)
#loc20 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:39)
#loc21 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:36)
#loc22 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:31)
#loc23 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":39:44)
#loc24 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":44:18)
#loc25 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:39)
#loc26 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:35)
#loc27 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:48)
#loc28 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:45)
#loc29 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:30)
#loc30 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:60)
#loc31 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":45:53)
#loc32 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":46:19)
#loc33 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:46)
#loc34 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:39)
#loc35 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:35)
#loc36 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:52)
#loc37 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:30)
#loc38 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:67)
#loc39 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":49:60)
#loc40 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":50:33)
#loc41 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":51:20)
#loc42 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":53:20)
#loc43 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":54:27)
#loc44 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":56:20)
#loc45 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":59:20)
#loc46 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":60:20)
#loc47 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":61:20)
#loc48 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":63:20)
#loc49 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":64:20)
#loc50 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":65:35)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc52 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":66:23)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc56 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":67:20)
#loc57 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":68:20)
#loc58 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":70:35)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc62 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":71:29)
#loc63 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":73:20)
#loc64 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":74:25)
#loc65 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":74:45)
#loc66 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":75:25)
#loc67 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":75:45)
#loc68 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":76:4)
#loc69 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:28)
#loc70 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:40)
#loc71 = loc("inductor_cache/vj/cvjrq4j6zeua22obkmiuphzaro2zbs4artbxoqfb7q2r2bz4b3h4.py":77:4)
#loc72 = loc(callsite(#loc51 at #loc52))
#loc73 = loc(callsite(#loc53 at #loc52))
#loc74 = loc(callsite(#loc54 at #loc52))
#loc75 = loc(callsite(#loc55 at #loc52))
#loc76 = loc(callsite(#loc59 at #loc60))
#loc78 = loc(callsite(#loc61 at #loc59))
#loc79 = loc(callsite(#loc78 at #loc60))
