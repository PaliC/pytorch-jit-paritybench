; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_21(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 9, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 510, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %.frozen = freeze i32 %16, !dbg !14
  %17 = sdiv i32 %.frozen, 4096, !dbg !14
  %18 = srem i32 %17, 128, !dbg !15
  %19 = mul i32 %17, 4096, !dbg !16
  %.decomposed = sub i32 %.frozen, %19, !dbg !16
  %.frozen1 = freeze i32 %16, !dbg !17
  %20 = sdiv i32 %.frozen1, 524288, !dbg !17
  %21 = mul i32 %20, 524288, !dbg !18
  %.decomposed2 = sub i32 %.frozen1, %21, !dbg !18
  %22 = icmp slt i32 %18, 96, !dbg !19
  %23 = icmp slt i32 %18, 64, !dbg !20
  %24 = icmp slt i32 %18, 32, !dbg !21
  %25 = shl nsw i32 %20, 17, !dbg !22
  %26 = add nsw i32 %25, %.decomposed2, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 %24, i32 0, i1 %24, i32 0, i1 %24) #1, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %32 = bitcast i32 %30 to float, !dbg !25
  %33 = bitcast i32 %31 to float, !dbg !25
  %34 = sext i32 %18 to i64, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !26
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %24, i32 0, i1 %24) #1, !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %24, i32 0, i1 %24) #1, !dbg !27
  %39 = bitcast i32 %38 to float, !dbg !27
  %40 = fadd float %32, %37, !dbg !28
  %41 = fadd float %33, %39, !dbg !28
  %42 = and i32 %18, -32, !dbg !29
  %43 = icmp eq i32 %42, 32, !dbg !29
  %44 = shl nsw i32 %18, 12, !dbg !30
  %45 = add nsw i32 %25, %.decomposed, !dbg !30
  %46 = add nsw i32 %45, -131072, !dbg !31
  %47 = add nsw i32 %46, %44, !dbg !32
  %48 = sext i32 %47 to i64, !dbg !33
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !33
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %49, i1 %43, i32 0, i1 %43, i32 0, i1 %43) #1, !dbg !34
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !34
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !34
  %53 = icmp eq i32 %42, 64, !dbg !35
  %54 = add nsw i32 %45, -262144, !dbg !36
  %55 = add nsw i32 %54, %44, !dbg !37
  %56 = sext i32 %55 to i64, !dbg !38
  %57 = getelementptr float, ptr addrspace(1) %3, i64 %56, !dbg !38
  %58 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %57, i1 %53, i32 0, i1 %53, i32 0, i1 %53) #1, !dbg !39
  %59 = extractvalue { i32, i32 } %58, 0, !dbg !39
  %60 = extractvalue { i32, i32 } %58, 1, !dbg !39
  %61 = icmp sgt i32 %18, 95, !dbg !40
  %62 = add nsw i32 %45, -393216, !dbg !41
  %63 = add nsw i32 %62, %44, !dbg !42
  %64 = sext i32 %63 to i64, !dbg !43
  %65 = getelementptr float, ptr addrspace(1) %4, i64 %64, !dbg !43
  %66 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %65, i1 %61, i32 0, i1 %61, i32 0, i1 %61) #1, !dbg !44
  %67 = extractvalue { i32, i32 } %66, 0, !dbg !44
  %68 = extractvalue { i32, i32 } %66, 1, !dbg !44
  %69 = getelementptr float, ptr addrspace(1) %5, i64 %27, !dbg !45
  %70 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %69, i1 %24, i32 0, i1 %24, i32 0, i1 %24) #1, !dbg !46
  %71 = extractvalue { i32, i32 } %70, 0, !dbg !46
  %72 = extractvalue { i32, i32 } %70, 1, !dbg !46
  %73 = bitcast i32 %71 to float, !dbg !46
  %74 = bitcast i32 %72 to float, !dbg !46
  %75 = getelementptr float, ptr addrspace(1) %6, i64 %34, !dbg !47
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 %24, i32 0, i1 %24) #1, !dbg !48
  %77 = bitcast i32 %76 to float, !dbg !48
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 %24, i32 0, i1 %24) #1, !dbg !48
  %79 = bitcast i32 %78 to float, !dbg !48
  %80 = fadd float %73, %77, !dbg !49
  %81 = fadd float %74, %79, !dbg !49
  %82 = sext i32 %16 to i64, !dbg !50
  %83 = getelementptr float, ptr addrspace(1) %7, i64 %82, !dbg !50
  %84 = bitcast float %40 to i32, !dbg !51
  %85 = select i1 %24, i32 %84, i32 %51, !dbg !52
  %86 = select i1 %23, i32 %85, i32 %59, !dbg !53
  %87 = select i1 %22, i32 %86, i32 %67, !dbg !54
  %88 = bitcast float %41 to i32, !dbg !51
  %89 = select i1 %24, i32 %88, i32 %52, !dbg !52
  %90 = select i1 %23, i32 %89, i32 %60, !dbg !53
  %91 = select i1 %22, i32 %90, i32 %68, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %87, i32 %91, ptr addrspace(1) %83, i1 true) #1, !dbg !51
  %92 = mul i32 %20, 655360, !dbg !55
  %93 = add i32 %92, %.decomposed2, !dbg !56
  %94 = sext i32 %93 to i64, !dbg !57
  %95 = getelementptr float, ptr addrspace(1) %8, i64 %94, !dbg !57
  %96 = bitcast float %80 to i32, !dbg !58
  %97 = select i1 %24, i32 %96, i32 %51, !dbg !59
  %98 = select i1 %23, i32 %97, i32 %59, !dbg !60
  %99 = select i1 %22, i32 %98, i32 %67, !dbg !54
  %100 = bitcast float %81 to i32, !dbg !58
  %101 = select i1 %24, i32 %100, i32 %52, !dbg !59
  %102 = select i1 %23, i32 %101, i32 %60, !dbg !60
  %103 = select i1 %22, i32 %102, i32 %68, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %99, i32 %103, ptr addrspace(1) %95, i1 true) #1, !dbg !58
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7oiyaew7mz4agpx7o4kvbp4xe24pbcpbhauxrtu64of5kdspxyr.py", directory: "inductor_cache/7o")
!4 = !{ptr @triton_poi_fused_cat_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_21, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_21", linkageName: "triton_poi_fused_cat_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 29, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 38, column: 18, scope: !7)
!21 = !DILocation(line: 44, column: 20, scope: !7)
!22 = !DILocation(line: 46, column: 55, scope: !7)
!23 = !DILocation(line: 46, column: 48, scope: !7)
!24 = !DILocation(line: 46, column: 31, scope: !7)
!25 = !DILocation(line: 46, column: 60, scope: !7)
!26 = !DILocation(line: 47, column: 31, scope: !7)
!27 = !DILocation(line: 47, column: 36, scope: !7)
!28 = !DILocation(line: 48, column: 20, scope: !7)
!29 = !DILocation(line: 54, column: 20, scope: !7)
!30 = !DILocation(line: 55, column: 42, scope: !7)
!31 = !DILocation(line: 55, column: 36, scope: !7)
!32 = !DILocation(line: 55, column: 58, scope: !7)
!33 = !DILocation(line: 55, column: 31, scope: !7)
!34 = !DILocation(line: 55, column: 70, scope: !7)
!35 = !DILocation(line: 62, column: 20, scope: !7)
!36 = !DILocation(line: 63, column: 36, scope: !7)
!37 = !DILocation(line: 63, column: 58, scope: !7)
!38 = !DILocation(line: 63, column: 31, scope: !7)
!39 = !DILocation(line: 63, column: 70, scope: !7)
!40 = !DILocation(line: 67, column: 20, scope: !7)
!41 = !DILocation(line: 70, column: 36, scope: !7)
!42 = !DILocation(line: 70, column: 56, scope: !7)
!43 = !DILocation(line: 70, column: 31, scope: !7)
!44 = !DILocation(line: 70, column: 68, scope: !7)
!45 = !DILocation(line: 72, column: 31, scope: !7)
!46 = !DILocation(line: 72, column: 60, scope: !7)
!47 = !DILocation(line: 73, column: 31, scope: !7)
!48 = !DILocation(line: 73, column: 36, scope: !7)
!49 = !DILocation(line: 74, column: 20, scope: !7)
!50 = !DILocation(line: 84, column: 25, scope: !7)
!51 = !DILocation(line: 84, column: 37, scope: !7)
!52 = !DILocation(line: 56, column: 35, scope: !7)
!53 = !DILocation(line: 64, column: 34, scope: !7)
!54 = !DILocation(line: 0, scope: !7)
!55 = !DILocation(line: 85, column: 37, scope: !7)
!56 = !DILocation(line: 85, column: 30, scope: !7)
!57 = !DILocation(line: 85, column: 25, scope: !7)
!58 = !DILocation(line: 85, column: 49, scope: !7)
!59 = !DILocation(line: 77, column: 35, scope: !7)
!60 = !DILocation(line: 80, column: 34, scope: !7)
!61 = !DILocation(line: 85, column: 4, scope: !7)
