//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_mul_pow_sub_2 // -- Begin function triton_per_fused_add_mean_mul_pow_sub_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mean_mul_pow_sub_2
.visible .entry triton_per_fused_add_mean_mul_pow_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_pow_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_pow_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_pow_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mul_pow_sub_2_param_3,
	.param .u32 triton_per_fused_add_mean_mul_pow_sub_2_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_add_mean_mul_pow_sub_2_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_add_mean_mul_pow_sub_2_param_1];
$L__tmp0:
	.loc	1 26 34                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:26:34
	mov.u32 	%r32, %tid.x;
	and.b32  	%r33, %r32, 31;
	ld.param.u64 	%rd6, [triton_per_fused_add_mean_mul_pow_sub_2_param_2];
	ld.param.u64 	%rd7, [triton_per_fused_add_mean_mul_pow_sub_2_param_3];
	and.b32  	%r34, %r32, 63;
	.loc	1 30 30                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:30:30
	mul.wide.u32 	%rd8, %r34, 4;
	add.s64 	%rd1, %rd5, %rd8;
	mov.pred 	%p1, -1;
	.loc	1 30 35                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:30:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 31 30                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:31:30
	add.s64 	%rd2, %rd6, %rd8;
	.loc	1 31 35                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:31:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 32 31                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:32:31
	add.s64 	%rd3, %rd7, %rd8;
	.loc	1 32 36                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:32:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 33 18                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:33:18
	mul.f32 	%f4, %f1, %f1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f4;
	shfl.sync.bfly.b32	%r36, %r35, 16, 31, -1;
	mov.b32 	%f5, %r36;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f6;
	shfl.sync.bfly.b32	%r38, %r37, 8, 31, -1;
	mov.b32 	%f7, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f8;
	shfl.sync.bfly.b32	%r40, %r39, 4, 31, -1;
	mov.b32 	%f9, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f10;
	shfl.sync.bfly.b32	%r42, %r41, 2, 31, -1;
	mov.b32 	%f11, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f12;
	shfl.sync.bfly.b32	%r44, %r43, 1, 31, -1;
	mov.b32 	%f13, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r33, 0;
	shr.u32 	%r45, %r32, 3;
	and.b32  	%r46, %r45, 4;
	mov.u32 	%r47, global_smem;
	add.s32 	%r4, %r47, %r46;
	mov.b32 	%r5, %f14;
	// begin inline asm
	@%p4 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r32, 2;
	shl.b32 	%r48, %r32, 2;
	add.s32 	%r7, %r47, %r48;
	// begin inline asm
	@%p5 ld.shared.b32 %r6, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r6;
	shfl.sync.bfly.b32	%r49, %r6, 1, 31, -1;
	mov.b32 	%f16, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r50, %r32, 1;
	setp.eq.b32 	%p14, %r50, 1;
	not.pred 	%p15, %p14;
	and.pred  	%p6, %p5, %p15;
	mov.b32 	%r9, %f17;
	// begin inline asm
	@%p6 st.shared.b32 [ %r7 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 36 18                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:36:18
	mul.f32 	%f18, %f2, %f2;
	.loc	1 43 19                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:43:19
	ld.shared.u32 	%r23, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r51, %f18;
	shfl.sync.bfly.b32	%r52, %r51, 16, 31, -1;
	mov.b32 	%f19, %r52;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f20, %f2, %f2, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f20;
	shfl.sync.bfly.b32	%r54, %r53, 8, 31, -1;
	mov.b32 	%f21, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f22;
	shfl.sync.bfly.b32	%r56, %r55, 4, 31, -1;
	mov.b32 	%f23, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f24;
	shfl.sync.bfly.b32	%r58, %r57, 2, 31, -1;
	mov.b32 	%f25, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f26;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	mov.b32 	%f27, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r11, %f28;
	// begin inline asm
	@%p4 st.shared.b32 [ %r4 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r12, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r12;
	shfl.sync.bfly.b32	%r61, %r12, 1, 31, -1;
	mov.b32 	%f30, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f31;
	// begin inline asm
	@%p6 st.shared.b32 [ %r7 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 39 20                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:39:20
	mul.f32 	%f32, %f3, %f3;
	.loc	1 44 19                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:44:19
	ld.shared.u32 	%r26, [global_smem];
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r62, %f32;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f33, %r63;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f3, %f3, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f34;
	shfl.sync.bfly.b32	%r65, %r64, 8, 31, -1;
	mov.b32 	%f35, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f36;
	shfl.sync.bfly.b32	%r67, %r66, 4, 31, -1;
	mov.b32 	%f37, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f38;
	shfl.sync.bfly.b32	%r69, %r68, 2, 31, -1;
	mov.b32 	%f39, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f40;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	mov.b32 	%f41, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f42;
	// begin inline asm
	@%p4 st.shared.b32 [ %r4 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r18, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r18;
	shfl.sync.bfly.b32	%r72, %r18, 1, 31, -1;
	mov.b32 	%f44, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r21, %f45;
	// begin inline asm
	@%p6 st.shared.b32 [ %r7 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r24, 1115684864;
$L__tmp6:
	.loc	1 43 19                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:43:19
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f46, %r22;
	.loc	1 44 19                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:44:19
	// begin inline asm
	div.full.f32 %r25, %r26, %r24;
	// end inline asm
	mov.b32 	%f47, %r25;
	.loc	1 45 20                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:45:20
	add.f32 	%f48, %f46, %f47;
	.loc	1 46 20                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:46:20
	ld.shared.u32 	%r29, [global_smem];
	// begin inline asm
	div.full.f32 %r28, %r29, %r24;
	// end inline asm
	mov.b32 	%f49, %r28;
	.loc	1 49 20                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:49:20
	fma.rn.f32 	%f50, %f49, 0fC0000000, %f48;
	.loc	1 50 4                          // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:50:4
	bar.sync 	0;
	.loc	1 51 71                         // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:51:71
	setp.eq.s32 	%p13, %r34, 0;
	mov.b32 	%r31, %f50;
	// begin inline asm
	@%p13 st.global.b32 [ %rd4 + 0 ], { %r31 };
	// end inline asm
	.loc	1 51 4                          // ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py:51:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/eo/ceoah26evhyq5lqfrtogn2vwpiqt45g2nscwtxskm6xmphzvxahl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 111
.b8 97
.b8 104
.b8 50
.b8 54
.b8 101
.b8 118
.b8 104
.b8 121
.b8 113
.b8 53
.b8 108
.b8 113
.b8 102
.b8 114
.b8 116
.b8 111
.b8 103
.b8 110
.b8 50
.b8 118
.b8 119
.b8 112
.b8 105
.b8 113
.b8 116
.b8 52
.b8 53
.b8 103
.b8 50
.b8 110
.b8 115
.b8 99
.b8 119
.b8 116
.b8 120
.b8 115
.b8 107
.b8 109
.b8 54
.b8 120
.b8 109
.b8 112
.b8 104
.b8 122
.b8 118
.b8 120
.b8 97
.b8 104
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
