; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_gelu_mul_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = sdiv i32 %12, 64, !dbg !17
  %17 = srem i32 %14, 4, !dbg !18
  %18 = sext i32 %12 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %13) #3, !dbg !20
  %21 = shl nsw i32 %16, 4, !dbg !21
  %22 = add nsw i32 %21, %.decomposed, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !23
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %13) #3, !dbg !24
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !24
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !24
  %28 = bitcast i32 %26 to float, !dbg !24
  %29 = bitcast i32 %27 to float, !dbg !24
  %30 = sext i32 %17 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %13) #3, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %13) #3, !dbg !26
  %34 = fmul float %28, 0x3FE6A09E60000000, !dbg !27
  %35 = fmul float %29, 0x3FE6A09E60000000, !dbg !27
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i = icmp eq i32 %36, 0, !dbg !28
  %37 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #3, !dbg !28
  %38 = tail call float @llvm.nvvm.fabs.f(float %34) #3, !dbg !28
  %.0.i = select i1 %.not.i, float %38, float %37, !dbg !28
  %39 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !28
  br i1 %39, label %__nv_fabsf.exit1.i, label %41, !dbg !28

__nv_fabsf.exit1.i:                               ; preds = %6
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i = icmp eq i32 %40, 0, !dbg !28
  %.01.i = select i1 %.not1.i, float %38, float %37, !dbg !28
  br label %__internal_fmad.exit.i, !dbg !28

41:                                               ; preds = %6
  %42 = fmul float %34, %34, !dbg !28
  br label %__internal_fmad.exit.i, !dbg !28

__internal_fmad.exit.i:                           ; preds = %41, %__nv_fabsf.exit1.i
  %43 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %41 ], !dbg !28
  %44 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %41 ], !dbg !28
  %45 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %41 ], !dbg !28
  %46 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %41 ], !dbg !28
  %47 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %41 ], !dbg !28
  %48 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %41 ], !dbg !28
  %49 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %41 ], !dbg !28
  %50 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %42, %41 ], !dbg !28
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i = icmp eq i32 %51, 0, !dbg !28
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float %50, float %48) #3, !dbg !28
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %49, float %50, float %48) #3, !dbg !28
  %.02.i = select i1 %.not2.i, float %53, float %52, !dbg !28
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i = icmp eq i32 %54, 0, !dbg !28
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %50, float %47) #3, !dbg !28
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %50, float %47) #3, !dbg !28
  %.03.i = select i1 %.not3.i, float %56, float %55, !dbg !28
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i = icmp eq i32 %57, 0, !dbg !28
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %50, float %46) #3, !dbg !28
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %50, float %46) #3, !dbg !28
  %.04.i = select i1 %.not4.i, float %59, float %58, !dbg !28
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i = icmp eq i32 %60, 0, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %50, float %45) #3, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %50, float %45) #3, !dbg !28
  %.05.i = select i1 %.not5.i, float %62, float %61, !dbg !28
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i = icmp eq i32 %63, 0, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %50, float %44) #3, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %50, float %44) #3, !dbg !28
  %.06.i = select i1 %.not6.i, float %65, float %64, !dbg !28
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not7.i = icmp eq i32 %66, 0, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %50, float %43) #3, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %50, float %43) #3, !dbg !28
  %.07.i = select i1 %.not7.i, float %68, float %67, !dbg !28
  %69 = fneg float %50, !dbg !28
  %70 = select i1 %39, float %69, float %34, !dbg !28
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i = icmp eq i32 %71, 0, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %70, float %70) #3, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %70, float %70) #3, !dbg !28
  %.08.i = select i1 %.not8.i, float %73, float %72, !dbg !28
  br i1 %39, label %74, label %__nv_erff.exit, !dbg !28

74:                                               ; preds = %__internal_fmad.exit.i
  %75 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !28
  %76 = fsub float 1.000000e+00, %75, !dbg !28
  %77 = bitcast float %76 to i32, !dbg !28
  %78 = bitcast float %34 to i32, !dbg !28
  %79 = and i32 %78, -2147483648, !dbg !28
  %80 = or i32 %79, %77, !dbg !28
  %81 = bitcast i32 %80 to float, !dbg !28
  br label %__nv_erff.exit, !dbg !28

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %74
  %r.0.i = phi float [ %81, %74 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !28
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i1 = icmp eq i32 %82, 0, !dbg !28
  %83 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !28
  %84 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !28
  %.0.i2 = select i1 %.not.i1, float %84, float %83, !dbg !28
  %85 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !28
  br i1 %85, label %__nv_fabsf.exit1.i19, label %87, !dbg !28

__nv_fabsf.exit1.i19:                             ; preds = %__nv_erff.exit
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i20 = icmp eq i32 %86, 0, !dbg !28
  %.01.i21 = select i1 %.not1.i20, float %84, float %83, !dbg !28
  br label %__internal_fmad.exit.i3, !dbg !28

87:                                               ; preds = %__nv_erff.exit
  %88 = fmul float %35, %35, !dbg !28
  br label %__internal_fmad.exit.i3, !dbg !28

__internal_fmad.exit.i3:                          ; preds = %87, %__nv_fabsf.exit1.i19
  %89 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i19 ], [ 0x3FC06EBA60000000, %87 ], !dbg !28
  %90 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i19 ], [ 0xBFD8127580000000, %87 ], !dbg !28
  %91 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i19 ], [ 0x3FBCE315E0000000, %87 ], !dbg !28
  %92 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i19 ], [ 0xBF9B837CE0000000, %87 ], !dbg !28
  %93 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i19 ], [ 0x3F755ABD40000000, %87 ], !dbg !28
  %94 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i19 ], [ 0xBF4AE9A400000000, %87 ], !dbg !28
  %95 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i19 ], [ 0x3F163D2D40000000, %87 ], !dbg !28
  %96 = phi float [ %.01.i21, %__nv_fabsf.exit1.i19 ], [ %88, %87 ], !dbg !28
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i4 = icmp eq i32 %97, 0, !dbg !28
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %95, float %96, float %94) #3, !dbg !28
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %95, float %96, float %94) #3, !dbg !28
  %.02.i5 = select i1 %.not2.i4, float %99, float %98, !dbg !28
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i6 = icmp eq i32 %100, 0, !dbg !28
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i5, float %96, float %93) #3, !dbg !28
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i5, float %96, float %93) #3, !dbg !28
  %.03.i7 = select i1 %.not3.i6, float %102, float %101, !dbg !28
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i8 = icmp eq i32 %103, 0, !dbg !28
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i7, float %96, float %92) #3, !dbg !28
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i7, float %96, float %92) #3, !dbg !28
  %.04.i9 = select i1 %.not4.i8, float %105, float %104, !dbg !28
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i10 = icmp eq i32 %106, 0, !dbg !28
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i9, float %96, float %91) #3, !dbg !28
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i9, float %96, float %91) #3, !dbg !28
  %.05.i11 = select i1 %.not5.i10, float %108, float %107, !dbg !28
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i12 = icmp eq i32 %109, 0, !dbg !28
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i11, float %96, float %90) #3, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i11, float %96, float %90) #3, !dbg !28
  %.06.i13 = select i1 %.not6.i12, float %111, float %110, !dbg !28
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not7.i14 = icmp eq i32 %112, 0, !dbg !28
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %96, float %89) #3, !dbg !28
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %96, float %89) #3, !dbg !28
  %.07.i15 = select i1 %.not7.i14, float %114, float %113, !dbg !28
  %115 = fneg float %96, !dbg !28
  %116 = select i1 %85, float %115, float %35, !dbg !28
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i16 = icmp eq i32 %117, 0, !dbg !28
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i15, float %116, float %116) #3, !dbg !28
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i15, float %116, float %116) #3, !dbg !28
  %.08.i17 = select i1 %.not8.i16, float %119, float %118, !dbg !28
  br i1 %85, label %120, label %__nv_erff.exit22, !dbg !28

120:                                              ; preds = %__internal_fmad.exit.i3
  %121 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i17) #3, !dbg !28
  %122 = fsub float 1.000000e+00, %121, !dbg !28
  %123 = bitcast float %122 to i32, !dbg !28
  %124 = bitcast float %35 to i32, !dbg !28
  %125 = and i32 %124, -2147483648, !dbg !28
  %126 = or i32 %125, %123, !dbg !28
  %127 = bitcast i32 %126 to float, !dbg !28
  br label %__nv_erff.exit22, !dbg !28

__nv_erff.exit22:                                 ; preds = %__internal_fmad.exit.i3, %120
  %r.0.i18 = phi float [ %127, %120 ], [ %.08.i17, %__internal_fmad.exit.i3 ], !dbg !28
  %128 = fmul float %29, 5.000000e-01, !dbg !29
  %129 = fmul float %28, 5.000000e-01, !dbg !29
  %130 = bitcast i32 %33 to float, !dbg !26
  %131 = bitcast i32 %32 to float, !dbg !26
  %132 = extractvalue { i32, i32 } %20, 1, !dbg !20
  %133 = bitcast i32 %132 to float, !dbg !20
  %134 = extractvalue { i32, i32 } %20, 0, !dbg !20
  %135 = bitcast i32 %134 to float, !dbg !20
  %136 = fadd float %r.0.i, 1.000000e+00, !dbg !30
  %137 = fadd float %r.0.i18, 1.000000e+00, !dbg !30
  %138 = fmul float %129, %136, !dbg !31
  %139 = fmul float %128, %137, !dbg !31
  %140 = fsub float %135, %138, !dbg !32
  %141 = fsub float %133, %139, !dbg !32
  %142 = fmul float %140, %131, !dbg !33
  %143 = fmul float %141, %130, !dbg !33
  %144 = fadd float %142, %135, !dbg !34
  %145 = fadd float %143, %133, !dbg !34
  %146 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !35
  %147 = bitcast float %140 to i32, !dbg !36
  %148 = bitcast float %141 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %147, i32 %148, ptr addrspace(1) %146, i1 %13) #3, !dbg !36
  %149 = getelementptr float, ptr addrspace(1) %4, i64 %18, !dbg !37
  %150 = bitcast float %144 to i32, !dbg !38
  %151 = bitcast float %145 to i32, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %150, i32 %151, ptr addrspace(1) %149, i1 %13) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cc3amiewyibmtmicu4u4s6poksfncxfde3ezoif4bkkaqhz4eb43.py", directory: "inductor_cache/c3")
!4 = !{ptr @triton_poi_fused_add_gelu_mul_sub_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_gelu_mul_sub_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_gelu_mul_sub_3", linkageName: "triton_poi_fused_add_gelu_mul_sub_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 27, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 38, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 43, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 35, column: 25, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 38, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 19, scope: !7)
!33 = !DILocation(line: 40, column: 20, scope: !7)
!34 = !DILocation(line: 41, column: 19, scope: !7)
!35 = !DILocation(line: 42, column: 25, scope: !7)
!36 = !DILocation(line: 42, column: 37, scope: !7)
!37 = !DILocation(line: 43, column: 25, scope: !7)
!38 = !DILocation(line: 43, column: 37, scope: !7)
!39 = !DILocation(line: 43, column: 4, scope: !7)
