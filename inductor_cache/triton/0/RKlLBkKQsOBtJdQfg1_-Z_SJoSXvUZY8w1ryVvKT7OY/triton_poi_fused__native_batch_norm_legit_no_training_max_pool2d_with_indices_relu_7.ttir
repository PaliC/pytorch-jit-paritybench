#loc = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg5: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1024xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<1024xi8> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<1024xi8> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1024xi8> loc(#loc1)
    %cst_6 = arith.constant dense<4224> : tensor<1024xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<1024xi32> loc(#loc1)
    %cst_8 = arith.constant dense<8192> : tensor<1024xi32> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<1024xi32> loc(#loc1)
    %cst_10 = arith.constant dense<2048> : tensor<1024xi32> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<1024xi32> loc(#loc1)
    %cst_12 = arith.constant dense<128> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_12 : tensor<1024xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_12 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_11 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_10 : tensor<1024xi32> loc(#loc9)
    %9 = arith.muli %7, %cst_9 : tensor<1024xi32> loc(#loc10)
    %10 = arith.addi %5, %9 : tensor<1024xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_8 : tensor<1024xi32> loc(#loc12)
    %12 = arith.addi %10, %11 : tensor<1024xi32> loc(#loc13)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc14)
    %14 = tt.addptr %13, %12 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc14)
    %15 = tt.load %14 : tensor<1024x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %5, %cst_12 : tensor<1024xi32> loc(#loc16)
    %17 = arith.addi %16, %9 : tensor<1024xi32> loc(#loc17)
    %18 = arith.addi %17, %11 : tensor<1024xi32> loc(#loc18)
    %19 = tt.addptr %13, %18 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc19)
    %20 = tt.load %19 : tensor<1024x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %5, %cst_7 : tensor<1024xi32> loc(#loc21)
    %22 = arith.addi %21, %9 : tensor<1024xi32> loc(#loc22)
    %23 = arith.addi %22, %11 : tensor<1024xi32> loc(#loc23)
    %24 = tt.addptr %13, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc24)
    %25 = tt.load %24 : tensor<1024x!tt.ptr<f32>> loc(#loc25)
    %26 = arith.addi %5, %cst_6 : tensor<1024xi32> loc(#loc26)
    %27 = arith.addi %26, %9 : tensor<1024xi32> loc(#loc27)
    %28 = arith.addi %27, %11 : tensor<1024xi32> loc(#loc28)
    %29 = tt.addptr %13, %28 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc29)
    %30 = tt.load %29 : tensor<1024x!tt.ptr<f32>> loc(#loc30)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc31)
    %32 = tt.addptr %31, %5 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc31)
    %33 = tt.load %32 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc32)
    %34 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc33)
    %35 = tt.addptr %34, %5 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc33)
    %36 = tt.load %35 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc34)
    %37 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc35)
    %38 = tt.addptr %37, %5 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc35)
    %39 = tt.load %38 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc36)
    %40 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc37)
    %41 = tt.addptr %40, %5 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc37)
    %42 = tt.load %41 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc38)
    %43 = arith.cmpf ogt, %20, %15 : tensor<1024xf32> loc(#loc39)
    %44 = arith.select %43, %cst_5, %cst_4 : tensor<1024xi1>, tensor<1024xi8> loc(#loc40)
    %45 = arith.cmpf une, %20, %20 : tensor<1024xf32> loc(#loc65)
    %46 = arith.ori %43, %45 : tensor<1024xi1> loc(#loc66)
    %47 = arith.select %46, %20, %15 : tensor<1024xi1>, tensor<1024xf32> loc(#loc67)
    %48 = arith.cmpf ogt, %25, %47 : tensor<1024xf32> loc(#loc45)
    %49 = arith.select %48, %cst_3, %44 : tensor<1024xi1>, tensor<1024xi8> loc(#loc46)
    %50 = arith.cmpf une, %25, %25 : tensor<1024xf32> loc(#loc68)
    %51 = arith.ori %48, %50 : tensor<1024xi1> loc(#loc69)
    %52 = arith.select %51, %25, %47 : tensor<1024xi1>, tensor<1024xf32> loc(#loc70)
    %53 = arith.cmpf ogt, %30, %52 : tensor<1024xf32> loc(#loc48)
    %54 = arith.select %53, %cst_2, %49 : tensor<1024xi1>, tensor<1024xi8> loc(#loc49)
    %55 = arith.cmpf une, %30, %30 : tensor<1024xf32> loc(#loc71)
    %56 = arith.ori %53, %55 : tensor<1024xi1> loc(#loc72)
    %57 = arith.select %56, %30, %52 : tensor<1024xi1>, tensor<1024xf32> loc(#loc73)
    %58 = arith.subf %57, %33 : tensor<1024xf32> loc(#loc51)
    %59 = arith.addf %36, %cst_1 : tensor<1024xf32> loc(#loc52)
    %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024xf32>) -> tensor<1024xf32> loc(#loc53)
    %61 = arith.divf %cst_0, %60 : tensor<1024xf32> loc(#loc54)
    %62 = arith.mulf %58, %61 : tensor<1024xf32> loc(#loc55)
    %63 = arith.mulf %62, %39 : tensor<1024xf32> loc(#loc56)
    %64 = arith.addf %63, %42 : tensor<1024xf32> loc(#loc57)
    %65 = arith.cmpf ogt, %cst, %64 : tensor<1024xf32> loc(#loc74)
    %66 = arith.select %65, %cst, %64 : tensor<1024xi1>, tensor<1024xf32> loc(#loc75)
    %67 = tt.splat %arg5 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>> loc(#loc60)
    %68 = tt.addptr %67, %4 : tensor<1024x!tt.ptr<i8>>, tensor<1024xi32> loc(#loc60)
    tt.store %68, %54 : tensor<1024x!tt.ptr<i8>> loc(#loc61)
    %69 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc62)
    %70 = tt.addptr %69, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc62)
    tt.store %70, %66 : tensor<1024x!tt.ptr<f32>> loc(#loc63)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":21:28)
#loc3 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":21:33)
#loc4 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":22:36)
#loc5 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":22:23)
#loc6 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":24:19)
#loc7 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":25:21)
#loc8 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":25:28)
#loc9 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":26:19)
#loc10 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:39)
#loc11 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:35)
#loc12 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:49)
#loc13 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:44)
#loc14 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:30)
#loc15 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":28:54)
#loc16 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":29:36)
#loc17 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":29:41)
#loc18 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":29:50)
#loc19 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":29:30)
#loc20 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":29:60)
#loc21 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":30:37)
#loc22 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":30:42)
#loc23 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":30:51)
#loc24 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":30:30)
#loc25 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":30:61)
#loc26 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":31:38)
#loc27 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":31:43)
#loc28 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":31:52)
#loc29 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":31:31)
#loc30 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":31:62)
#loc31 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":32:31)
#loc32 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":32:36)
#loc33 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":33:31)
#loc34 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":33:36)
#loc35 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":34:31)
#loc36 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":34:36)
#loc37 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":35:31)
#loc38 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":35:36)
#loc39 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":36:18)
#loc40 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":39:32)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc42 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":40:40)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":41:18)
#loc46 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":43:33)
#loc47 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":44:41)
#loc48 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":45:20)
#loc49 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":47:35)
#loc50 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":48:42)
#loc51 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":49:20)
#loc52 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":51:20)
#loc53 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":52:27)
#loc54 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":54:20)
#loc55 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":57:20)
#loc56 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":58:20)
#loc57 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":59:20)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc59 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":61:42)
#loc60 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":62:25)
#loc61 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":62:37)
#loc62 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":63:25)
#loc63 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":63:37)
#loc64 = loc("inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py":63:4)
#loc65 = loc(callsite(#loc41 at #loc42))
#loc66 = loc(callsite(#loc43 at #loc42))
#loc67 = loc(callsite(#loc44 at #loc42))
#loc68 = loc(callsite(#loc41 at #loc47))
#loc69 = loc(callsite(#loc43 at #loc47))
#loc70 = loc(callsite(#loc44 at #loc47))
#loc71 = loc(callsite(#loc41 at #loc50))
#loc72 = loc(callsite(#loc43 at #loc50))
#loc73 = loc(callsite(#loc44 at #loc50))
#loc74 = loc(callsite(#loc58 at #loc59))
#loc75 = loc(callsite(#loc44 at #loc59))
