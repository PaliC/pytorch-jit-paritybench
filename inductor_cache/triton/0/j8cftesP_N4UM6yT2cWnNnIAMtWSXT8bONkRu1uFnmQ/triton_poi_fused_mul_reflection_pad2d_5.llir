; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_reflection_pad2d_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 1, !dbg !11
  %9 = or disjoint i32 %8, 1, !dbg !12
  %10 = icmp slt i32 %8, 16, !dbg !13
  %11 = icmp slt i32 %9, 16, !dbg !13
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !14
  %13 = shl i32 %12, 7, !dbg !15
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !16
  %15 = and i32 %14, 127, !dbg !16
  %16 = or disjoint i32 %13, %15, !dbg !17
  %17 = icmp slt i32 %16, 100, !dbg !18
  %.frozen = freeze i32 %16, !dbg !19
  %18 = sdiv i32 %.frozen, 10, !dbg !19
  %19 = mul i32 %18, 10, !dbg !20
  %.decomposed = sub i32 %.frozen, %19, !dbg !20
  %.frozen1 = freeze i32 %8, !dbg !21
  %20 = sdiv i32 %.frozen1, 4, !dbg !21
  %21 = mul i32 %20, 4, !dbg !22
  %.decomposed2 = sub i32 %.frozen1, %21, !dbg !22
  %22 = add nsw i32 %.decomposed, -3, !dbg !23
  %23 = tail call i32 @llvm.abs.i32(i32 %22, i1 true), !dbg !24
  %24 = add nsw i32 %23, -3, !dbg !25
  %25 = tail call i32 @llvm.abs.i32(i32 %24, i1 true), !dbg !26
  %26 = add nsw i32 %18, -3, !dbg !27
  %27 = tail call i32 @llvm.abs.i32(i32 %26, i1 true), !dbg !28
  %28 = add nsw i32 %27, -3, !dbg !29
  %29 = tail call i32 @llvm.abs.i32(i32 %28, i1 true), !dbg !30
  %30 = mul nsw i32 %29, -4, !dbg !31
  %reass.sub = sub nsw i32 %30, %25, !dbg !32
  %31 = add nsw i32 %reass.sub, 15, !dbg !32
  %32 = shl i32 %7, 5, !dbg !33
  %33 = shl i32 %9, 4, !dbg !33
  %34 = add i32 %31, %32, !dbg !34
  %35 = add i32 %31, %33, !dbg !34
  %36 = sext i32 %34 to i64, !dbg !35
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !35
  %38 = sext i32 %35 to i64, !dbg !35
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !35
  %40 = and i1 %10, %17, !dbg !36
  %41 = and i1 %11, %17, !dbg !36
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %40) #1, !dbg !37
  %43 = bitcast i32 %42 to float, !dbg !37
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %41) #1, !dbg !37
  %45 = bitcast i32 %44 to float, !dbg !37
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !38
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !38
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %40) #1, !dbg !39
  %49 = bitcast i32 %48 to float, !dbg !39
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %41) #1, !dbg !39
  %51 = bitcast i32 %50 to float, !dbg !39
  %52 = fmul float %43, %49, !dbg !40
  %53 = fmul float %45, %51, !dbg !40
  %54 = shl i32 %16, 2, !dbg !41
  %55 = mul i32 %20, 400, !dbg !42
  %56 = add i32 %55, %.decomposed2, !dbg !43
  %57 = add i32 %56, %54, !dbg !44
  %58 = sext i32 %57 to i64, !dbg !45
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !45
  %60 = bitcast float %52 to i32, !dbg !46
  %61 = bitcast float %53 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %60, i32 %61, ptr addrspace(1) %59, i1 %40) #1, !dbg !46
  %62 = getelementptr float, ptr addrspace(1) %3, i64 %58, !dbg !47
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %48, i32 %50, ptr addrspace(1) %62, i1 %40) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccz3syobdwf2qjusl7u5yxorsohclzq4rey7ak7wndcwtjxivziu.py", directory: "inductor_cache/cz")
!4 = !{ptr @triton_poi_fused_mul_reflection_pad2d_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_reflection_pad2d_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_reflection_pad2d_5", linkageName: "triton_poi_fused_mul_reflection_pad2d_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 23, scope: !7)
!13 = !DILocation(line: 24, column: 21, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 33, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 79, scope: !7)
!24 = !DILocation(line: 34, column: 72, scope: !7)
!25 = !DILocation(line: 34, column: 60, scope: !7)
!26 = !DILocation(line: 34, column: 53, scope: !7)
!27 = !DILocation(line: 34, column: 131, scope: !7)
!28 = !DILocation(line: 34, column: 124, scope: !7)
!29 = !DILocation(line: 34, column: 112, scope: !7)
!30 = !DILocation(line: 34, column: 105, scope: !7)
!31 = !DILocation(line: 34, column: 93, scope: !7)
!32 = !DILocation(line: 34, column: 88, scope: !7)
!33 = !DILocation(line: 34, column: 142, scope: !7)
!34 = !DILocation(line: 34, column: 139, scope: !7)
!35 = !DILocation(line: 34, column: 30, scope: !7)
!36 = !DILocation(line: 34, column: 155, scope: !7)
!37 = !DILocation(line: 34, column: 147, scope: !7)
!38 = !DILocation(line: 35, column: 30, scope: !7)
!39 = !DILocation(line: 35, column: 147, scope: !7)
!40 = !DILocation(line: 36, column: 18, scope: !7)
!41 = !DILocation(line: 37, column: 32, scope: !7)
!42 = !DILocation(line: 37, column: 41, scope: !7)
!43 = !DILocation(line: 37, column: 30, scope: !7)
!44 = !DILocation(line: 37, column: 37, scope: !7)
!45 = !DILocation(line: 37, column: 25, scope: !7)
!46 = !DILocation(line: 37, column: 52, scope: !7)
!47 = !DILocation(line: 38, column: 25, scope: !7)
!48 = !DILocation(line: 38, column: 52, scope: !7)
!49 = !DILocation(line: 38, column: 4, scope: !7)
