; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax__softmax_mean_mul_sub_xlogy_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = bitcast i32 %11 to float, !dbg !12
  %16 = bitcast i32 %12 to float, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = and i32 %6, 204, !dbg !13
  %20 = zext nneg i32 %19 to i64, !dbg !14
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !14
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #4, !dbg !15
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !15
  %24 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !15
  %25 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !15
  %26 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !15
  %27 = bitcast i32 %23 to float, !dbg !15
  %28 = bitcast i32 %24 to float, !dbg !15
  %29 = bitcast i32 %25 to float, !dbg !15
  %30 = bitcast i32 %26 to float, !dbg !15
  %31 = or disjoint i32 %19, 16, !dbg !16
  %32 = zext nneg i32 %31 to i64, !dbg !17
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !17
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 true) #4, !dbg !18
  %35 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !18
  %36 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !18
  %37 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !18
  %38 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !18
  %39 = bitcast i32 %35 to float, !dbg !18
  %40 = bitcast i32 %36 to float, !dbg !18
  %41 = bitcast i32 %37 to float, !dbg !18
  %42 = bitcast i32 %38 to float, !dbg !18
  %43 = or disjoint i32 %19, 32, !dbg !19
  %44 = zext nneg i32 %43 to i64, !dbg !20
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !20
  %46 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %45, i1 true) #4, !dbg !21
  %47 = extractvalue { i32, i32, i32, i32 } %46, 0, !dbg !21
  %48 = extractvalue { i32, i32, i32, i32 } %46, 1, !dbg !21
  %49 = extractvalue { i32, i32, i32, i32 } %46, 2, !dbg !21
  %50 = extractvalue { i32, i32, i32, i32 } %46, 3, !dbg !21
  %51 = bitcast i32 %47 to float, !dbg !21
  %52 = bitcast i32 %48 to float, !dbg !21
  %53 = bitcast i32 %49 to float, !dbg !21
  %54 = bitcast i32 %50 to float, !dbg !21
  %55 = or disjoint i32 %19, 48, !dbg !22
  %56 = zext nneg i32 %55 to i64, !dbg !23
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !23
  %58 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %57, i1 true) #4, !dbg !24
  %59 = extractvalue { i32, i32, i32, i32 } %58, 0, !dbg !24
  %60 = extractvalue { i32, i32, i32, i32 } %58, 1, !dbg !24
  %61 = extractvalue { i32, i32, i32, i32 } %58, 2, !dbg !24
  %62 = extractvalue { i32, i32, i32, i32 } %58, 3, !dbg !24
  %63 = bitcast i32 %59 to float, !dbg !24
  %64 = bitcast i32 %60 to float, !dbg !24
  %65 = bitcast i32 %61 to float, !dbg !24
  %66 = bitcast i32 %62 to float, !dbg !24
  %67 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !25
  %68 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %67, i1 true) #4, !dbg !26
  %69 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !27
  %70 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %69, i1 true) #4, !dbg !28
  %71 = extractvalue { i32, i32, i32, i32 } %70, 0, !dbg !28
  %72 = extractvalue { i32, i32, i32, i32 } %70, 1, !dbg !28
  %73 = extractvalue { i32, i32, i32, i32 } %70, 2, !dbg !28
  %74 = extractvalue { i32, i32, i32, i32 } %70, 3, !dbg !28
  %75 = bitcast i32 %71 to float, !dbg !28
  %76 = bitcast i32 %72 to float, !dbg !28
  %77 = bitcast i32 %73 to float, !dbg !28
  %78 = bitcast i32 %74 to float, !dbg !28
  %79 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !29
  %80 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %79, i1 true) #4, !dbg !30
  %81 = extractvalue { i32, i32, i32, i32 } %80, 0, !dbg !30
  %82 = extractvalue { i32, i32, i32, i32 } %80, 1, !dbg !30
  %83 = extractvalue { i32, i32, i32, i32 } %80, 2, !dbg !30
  %84 = extractvalue { i32, i32, i32, i32 } %80, 3, !dbg !30
  %85 = bitcast i32 %81 to float, !dbg !30
  %86 = bitcast i32 %82 to float, !dbg !30
  %87 = bitcast i32 %83 to float, !dbg !30
  %88 = bitcast i32 %84 to float, !dbg !30
  %89 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !31
  %90 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %89, i1 true) #4, !dbg !32
  %91 = extractvalue { i32, i32, i32, i32 } %90, 0, !dbg !32
  %92 = extractvalue { i32, i32, i32, i32 } %90, 1, !dbg !32
  %93 = extractvalue { i32, i32, i32, i32 } %90, 2, !dbg !32
  %94 = extractvalue { i32, i32, i32, i32 } %90, 3, !dbg !32
  %95 = bitcast i32 %91 to float, !dbg !32
  %96 = bitcast i32 %92 to float, !dbg !32
  %97 = bitcast i32 %93 to float, !dbg !32
  %98 = bitcast i32 %94 to float, !dbg !32
  %99 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !33
  %100 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %99, i1 true) #4, !dbg !34
  %101 = extractvalue { i32, i32, i32, i32 } %100, 0, !dbg !34
  %102 = extractvalue { i32, i32, i32, i32 } %100, 1, !dbg !34
  %103 = extractvalue { i32, i32, i32, i32 } %100, 2, !dbg !34
  %104 = extractvalue { i32, i32, i32, i32 } %100, 3, !dbg !34
  %105 = bitcast i32 %101 to float, !dbg !34
  %106 = bitcast i32 %102 to float, !dbg !34
  %107 = bitcast i32 %103 to float, !dbg !34
  %108 = bitcast i32 %104 to float, !dbg !34
  %109 = fadd float %27, %39, !dbg !35
  %110 = fadd float %28, %40, !dbg !35
  %111 = fadd float %29, %41, !dbg !35
  %112 = fadd float %30, %42, !dbg !35
  %113 = fadd float %109, %51, !dbg !36
  %114 = fadd float %110, %52, !dbg !36
  %115 = fadd float %111, %53, !dbg !36
  %116 = fadd float %112, %54, !dbg !36
  %117 = fadd float %113, %63, !dbg !37
  %118 = fadd float %114, %64, !dbg !37
  %119 = fadd float %115, %65, !dbg !37
  %120 = fadd float %116, %66, !dbg !37
  %121 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %15, float %117) #4, !dbg !38
  %122 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %16, float %118) #4, !dbg !38
  %123 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %17, float %119) #4, !dbg !38
  %124 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %18, float %120) #4, !dbg !38
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %129 = fcmp olt float %121, 0x3810000000000000, !dbg !40
  %130 = fmul float %121, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %129, float %130, float %121, !dbg !40
  %i.i.0.i = select i1 %129, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %131 = bitcast float %.02.i to i32, !dbg !40
  %132 = add i32 %131, -1059760811, !dbg !40
  %133 = and i32 %132, -8388608, !dbg !40
  %134 = sub i32 %131, %133, !dbg !40
  %135 = bitcast i32 %134 to float, !dbg !40
  %136 = sitofp i32 %133 to float, !dbg !40
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i10 = icmp eq i32 %137, 0, !dbg !40
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %136, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %.08.i = select i1 %.not.i10, float %139, float %138, !dbg !40
  %140 = fadd float %135, -1.000000e+00, !dbg !40
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i = icmp eq i32 %141, 0, !dbg !40
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %140, float 0x3FC2073EC0000000) #4, !dbg !40
  %143 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %140, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i = select i1 %.not1.i, float %143, float %142, !dbg !40
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i = icmp eq i32 %144, 0, !dbg !40
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %140, float 0xBFBF19B980000000) #4, !dbg !40
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %140, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i = select i1 %.not2.i, float %146, float %145, !dbg !40
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i = icmp eq i32 %147, 0, !dbg !40
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %140, float 0x3FC1E52AA0000000) #4, !dbg !40
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %140, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i = select i1 %.not3.i, float %149, float %148, !dbg !40
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i = icmp eq i32 %150, 0, !dbg !40
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %140, float 0xBFC55B1720000000) #4, !dbg !40
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %140, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i = select i1 %.not4.i, float %152, float %151, !dbg !40
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i = icmp eq i32 %153, 0, !dbg !40
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %140, float 0x3FC99DA160000000) #4, !dbg !40
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %140, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i = select i1 %.not5.i, float %155, float %154, !dbg !40
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i = icmp eq i32 %156, 0, !dbg !40
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %140, float 0xBFCFFFE440000000) #4, !dbg !40
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %140, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i = select i1 %.not6.i, float %158, float %157, !dbg !40
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i = icmp eq i32 %159, 0, !dbg !40
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %140, float 0x3FD5554F00000000) #4, !dbg !40
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %140, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i11 = select i1 %.not7.i, float %161, float %160, !dbg !40
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i = icmp eq i32 %162, 0, !dbg !40
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i11, float %140, float -5.000000e-01) #4, !dbg !40
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i11, float %140, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not8.i, float %164, float %163, !dbg !40
  %165 = fmul float %140, %.07.i, !dbg !40
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i = icmp eq i32 %166, 0, !dbg !40
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %165, float %140, float %140) #4, !dbg !40
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %165, float %140, float %140) #4, !dbg !40
  %.06.i = select i1 %.not9.i, float %168, float %167, !dbg !40
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i = icmp eq i32 %169, 0, !dbg !40
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %.04.i = select i1 %.not10.i, float %171, float %170, !dbg !40
  %172 = icmp ugt i32 %131, 2139095039, !dbg !40
  br i1 %172, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i = icmp eq i32 %173, 0, !dbg !40
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i = select i1 %.not11.i, float %175, float %174, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !40
  %176 = fcmp olt float %122, 0x3810000000000000, !dbg !40
  %177 = fmul float %122, 0x4160000000000000, !dbg !40
  %.02.i12 = select i1 %176, float %177, float %122, !dbg !40
  %i.i.0.i13 = select i1 %176, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %178 = bitcast float %.02.i12 to i32, !dbg !40
  %179 = add i32 %178, -1059760811, !dbg !40
  %180 = and i32 %179, -8388608, !dbg !40
  %181 = sub i32 %178, %180, !dbg !40
  %182 = bitcast i32 %181 to float, !dbg !40
  %183 = sitofp i32 %180 to float, !dbg !40
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i14 = icmp eq i32 %184, 0, !dbg !40
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %183, float 0x3E80000000000000, float %i.i.0.i13) #4, !dbg !40
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %183, float 0x3E80000000000000, float %i.i.0.i13) #4, !dbg !40
  %.08.i15 = select i1 %.not.i14, float %186, float %185, !dbg !40
  %187 = fadd float %182, -1.000000e+00, !dbg !40
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i16 = icmp eq i32 %188, 0, !dbg !40
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %187, float 0x3FC2073EC0000000) #4, !dbg !40
  %190 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %187, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i17 = select i1 %.not1.i16, float %190, float %189, !dbg !40
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i18 = icmp eq i32 %191, 0, !dbg !40
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i17, float %187, float 0xBFBF19B980000000) #4, !dbg !40
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i17, float %187, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i19 = select i1 %.not2.i18, float %193, float %192, !dbg !40
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i20 = icmp eq i32 %194, 0, !dbg !40
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i19, float %187, float 0x3FC1E52AA0000000) #4, !dbg !40
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i19, float %187, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i21 = select i1 %.not3.i20, float %196, float %195, !dbg !40
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i22 = icmp eq i32 %197, 0, !dbg !40
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i21, float %187, float 0xBFC55B1720000000) #4, !dbg !40
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i21, float %187, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i23 = select i1 %.not4.i22, float %199, float %198, !dbg !40
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i24 = icmp eq i32 %200, 0, !dbg !40
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i23, float %187, float 0x3FC99DA160000000) #4, !dbg !40
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i23, float %187, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i25 = select i1 %.not5.i24, float %202, float %201, !dbg !40
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i26 = icmp eq i32 %203, 0, !dbg !40
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i25, float %187, float 0xBFCFFFE440000000) #4, !dbg !40
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i25, float %187, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i27 = select i1 %.not6.i26, float %205, float %204, !dbg !40
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i28 = icmp eq i32 %206, 0, !dbg !40
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i27, float %187, float 0x3FD5554F00000000) #4, !dbg !40
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i27, float %187, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i29 = select i1 %.not7.i28, float %208, float %207, !dbg !40
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i30 = icmp eq i32 %209, 0, !dbg !40
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %187, float -5.000000e-01) #4, !dbg !40
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %187, float -5.000000e-01) #4, !dbg !40
  %.07.i31 = select i1 %.not8.i30, float %211, float %210, !dbg !40
  %212 = fmul float %187, %.07.i31, !dbg !40
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i32 = icmp eq i32 %213, 0, !dbg !40
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float %187, float %187) #4, !dbg !40
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float %187, float %187) #4, !dbg !40
  %.06.i33 = select i1 %.not9.i32, float %215, float %214, !dbg !40
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i34 = icmp eq i32 %216, 0, !dbg !40
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i15, float 0x3FE62E4300000000, float %.06.i33) #4, !dbg !40
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i15, float 0x3FE62E4300000000, float %.06.i33) #4, !dbg !40
  %.04.i35 = select i1 %.not10.i34, float %218, float %217, !dbg !40
  %219 = icmp ugt i32 %178, 2139095039, !dbg !40
  br i1 %219, label %__nv_fmaf_rn.exit.i.i38, label %__nv_logf.exit41, !dbg !40

__nv_fmaf_rn.exit.i.i38:                          ; preds = %__nv_logf.exit
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i39 = icmp eq i32 %220, 0, !dbg !40
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i40 = select i1 %.not11.i39, float %222, float %221, !dbg !40
  br label %__nv_logf.exit41, !dbg !40

__nv_logf.exit41:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i38
  %r.i.0.i36 = phi float [ %.03.i40, %__nv_fmaf_rn.exit.i.i38 ], [ %.04.i35, %__nv_logf.exit ], !dbg !40
  %223 = fcmp olt float %123, 0x3810000000000000, !dbg !40
  %224 = fmul float %123, 0x4160000000000000, !dbg !40
  %.02.i42 = select i1 %223, float %224, float %123, !dbg !40
  %i.i.0.i43 = select i1 %223, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %225 = bitcast float %.02.i42 to i32, !dbg !40
  %226 = add i32 %225, -1059760811, !dbg !40
  %227 = and i32 %226, -8388608, !dbg !40
  %228 = sub i32 %225, %227, !dbg !40
  %229 = bitcast i32 %228 to float, !dbg !40
  %230 = sitofp i32 %227 to float, !dbg !40
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i44 = icmp eq i32 %231, 0, !dbg !40
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %230, float 0x3E80000000000000, float %i.i.0.i43) #4, !dbg !40
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %230, float 0x3E80000000000000, float %i.i.0.i43) #4, !dbg !40
  %.08.i45 = select i1 %.not.i44, float %233, float %232, !dbg !40
  %234 = fadd float %229, -1.000000e+00, !dbg !40
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i46 = icmp eq i32 %235, 0, !dbg !40
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %234, float 0x3FC2073EC0000000) #4, !dbg !40
  %237 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %234, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i47 = select i1 %.not1.i46, float %237, float %236, !dbg !40
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i48 = icmp eq i32 %238, 0, !dbg !40
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i47, float %234, float 0xBFBF19B980000000) #4, !dbg !40
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i47, float %234, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i49 = select i1 %.not2.i48, float %240, float %239, !dbg !40
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i50 = icmp eq i32 %241, 0, !dbg !40
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i49, float %234, float 0x3FC1E52AA0000000) #4, !dbg !40
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i49, float %234, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i51 = select i1 %.not3.i50, float %243, float %242, !dbg !40
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i52 = icmp eq i32 %244, 0, !dbg !40
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i51, float %234, float 0xBFC55B1720000000) #4, !dbg !40
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i51, float %234, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i53 = select i1 %.not4.i52, float %246, float %245, !dbg !40
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i54 = icmp eq i32 %247, 0, !dbg !40
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i53, float %234, float 0x3FC99DA160000000) #4, !dbg !40
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i53, float %234, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i55 = select i1 %.not5.i54, float %249, float %248, !dbg !40
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i56 = icmp eq i32 %250, 0, !dbg !40
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i55, float %234, float 0xBFCFFFE440000000) #4, !dbg !40
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i55, float %234, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i57 = select i1 %.not6.i56, float %252, float %251, !dbg !40
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i58 = icmp eq i32 %253, 0, !dbg !40
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i57, float %234, float 0x3FD5554F00000000) #4, !dbg !40
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i57, float %234, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i59 = select i1 %.not7.i58, float %255, float %254, !dbg !40
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i60 = icmp eq i32 %256, 0, !dbg !40
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i59, float %234, float -5.000000e-01) #4, !dbg !40
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i59, float %234, float -5.000000e-01) #4, !dbg !40
  %.07.i61 = select i1 %.not8.i60, float %258, float %257, !dbg !40
  %259 = fmul float %234, %.07.i61, !dbg !40
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i62 = icmp eq i32 %260, 0, !dbg !40
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %259, float %234, float %234) #4, !dbg !40
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %259, float %234, float %234) #4, !dbg !40
  %.06.i63 = select i1 %.not9.i62, float %262, float %261, !dbg !40
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i64 = icmp eq i32 %263, 0, !dbg !40
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i45, float 0x3FE62E4300000000, float %.06.i63) #4, !dbg !40
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i45, float 0x3FE62E4300000000, float %.06.i63) #4, !dbg !40
  %.04.i65 = select i1 %.not10.i64, float %265, float %264, !dbg !40
  %266 = icmp ugt i32 %225, 2139095039, !dbg !40
  br i1 %266, label %__nv_fmaf_rn.exit.i.i68, label %__nv_logf.exit71, !dbg !40

__nv_fmaf_rn.exit.i.i68:                          ; preds = %__nv_logf.exit41
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i69 = icmp eq i32 %267, 0, !dbg !40
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i42, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i70 = select i1 %.not11.i69, float %269, float %268, !dbg !40
  br label %__nv_logf.exit71, !dbg !40

__nv_logf.exit71:                                 ; preds = %__nv_logf.exit41, %__nv_fmaf_rn.exit.i.i68
  %r.i.0.i66 = phi float [ %.03.i70, %__nv_fmaf_rn.exit.i.i68 ], [ %.04.i65, %__nv_logf.exit41 ], !dbg !40
  %270 = fcmp olt float %124, 0x3810000000000000, !dbg !40
  %271 = fmul float %124, 0x4160000000000000, !dbg !40
  %.02.i72 = select i1 %270, float %271, float %124, !dbg !40
  %i.i.0.i73 = select i1 %270, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %272 = bitcast float %.02.i72 to i32, !dbg !40
  %273 = add i32 %272, -1059760811, !dbg !40
  %274 = and i32 %273, -8388608, !dbg !40
  %275 = sub i32 %272, %274, !dbg !40
  %276 = bitcast i32 %275 to float, !dbg !40
  %277 = sitofp i32 %274 to float, !dbg !40
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i74 = icmp eq i32 %278, 0, !dbg !40
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float 0x3E80000000000000, float %i.i.0.i73) #4, !dbg !40
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float 0x3E80000000000000, float %i.i.0.i73) #4, !dbg !40
  %.08.i75 = select i1 %.not.i74, float %280, float %279, !dbg !40
  %281 = fadd float %276, -1.000000e+00, !dbg !40
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i76 = icmp eq i32 %282, 0, !dbg !40
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %281, float 0x3FC2073EC0000000) #4, !dbg !40
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %281, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i77 = select i1 %.not1.i76, float %284, float %283, !dbg !40
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i78 = icmp eq i32 %285, 0, !dbg !40
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i77, float %281, float 0xBFBF19B980000000) #4, !dbg !40
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i77, float %281, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i79 = select i1 %.not2.i78, float %287, float %286, !dbg !40
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i80 = icmp eq i32 %288, 0, !dbg !40
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i79, float %281, float 0x3FC1E52AA0000000) #4, !dbg !40
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i79, float %281, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i81 = select i1 %.not3.i80, float %290, float %289, !dbg !40
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i82 = icmp eq i32 %291, 0, !dbg !40
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i81, float %281, float 0xBFC55B1720000000) #4, !dbg !40
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i81, float %281, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i83 = select i1 %.not4.i82, float %293, float %292, !dbg !40
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i84 = icmp eq i32 %294, 0, !dbg !40
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i83, float %281, float 0x3FC99DA160000000) #4, !dbg !40
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i83, float %281, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i85 = select i1 %.not5.i84, float %296, float %295, !dbg !40
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i86 = icmp eq i32 %297, 0, !dbg !40
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i85, float %281, float 0xBFCFFFE440000000) #4, !dbg !40
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i85, float %281, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i87 = select i1 %.not6.i86, float %299, float %298, !dbg !40
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i88 = icmp eq i32 %300, 0, !dbg !40
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i87, float %281, float 0x3FD5554F00000000) #4, !dbg !40
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i87, float %281, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i89 = select i1 %.not7.i88, float %302, float %301, !dbg !40
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i90 = icmp eq i32 %303, 0, !dbg !40
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i89, float %281, float -5.000000e-01) #4, !dbg !40
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i89, float %281, float -5.000000e-01) #4, !dbg !40
  %.07.i91 = select i1 %.not8.i90, float %305, float %304, !dbg !40
  %306 = fmul float %281, %.07.i91, !dbg !40
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i92 = icmp eq i32 %307, 0, !dbg !40
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %306, float %281, float %281) #4, !dbg !40
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %306, float %281, float %281) #4, !dbg !40
  %.06.i93 = select i1 %.not9.i92, float %309, float %308, !dbg !40
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i94 = icmp eq i32 %310, 0, !dbg !40
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i75, float 0x3FE62E4300000000, float %.06.i93) #4, !dbg !40
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i75, float 0x3FE62E4300000000, float %.06.i93) #4, !dbg !40
  %.04.i95 = select i1 %.not10.i94, float %312, float %311, !dbg !40
  %313 = icmp ugt i32 %272, 2139095039, !dbg !40
  br i1 %313, label %__nv_fmaf_rn.exit.i.i98, label %__nv_logf.exit101, !dbg !40

__nv_fmaf_rn.exit.i.i98:                          ; preds = %__nv_logf.exit71
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i99 = icmp eq i32 %314, 0, !dbg !40
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i72, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i100 = select i1 %.not11.i99, float %316, float %315, !dbg !40
  br label %__nv_logf.exit101, !dbg !40

__nv_logf.exit101:                                ; preds = %__nv_logf.exit71, %__nv_fmaf_rn.exit.i.i98
  %r.i.0.i96 = phi float [ %.03.i100, %__nv_fmaf_rn.exit.i.i98 ], [ %.04.i95, %__nv_logf.exit71 ], !dbg !40
  %317 = fmul float %75, 0x3FF7154760000000, !dbg !41
  %318 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %317) #4, !dbg !41
  %319 = fmul float %76, 0x3FF7154760000000, !dbg !41
  %320 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %319) #4, !dbg !41
  %321 = fmul float %77, 0x3FF7154760000000, !dbg !41
  %322 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %321) #4, !dbg !41
  %323 = fmul float %78, 0x3FF7154760000000, !dbg !41
  %324 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %323) #4, !dbg !41
  %325 = fmul float %85, 0x3FF7154760000000, !dbg !42
  %326 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %325) #4, !dbg !42
  %327 = fmul float %86, 0x3FF7154760000000, !dbg !42
  %328 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %327) #4, !dbg !42
  %329 = fmul float %87, 0x3FF7154760000000, !dbg !42
  %330 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %329) #4, !dbg !42
  %331 = fmul float %88, 0x3FF7154760000000, !dbg !42
  %332 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %331) #4, !dbg !42
  %333 = fadd float %318, %326, !dbg !43
  %334 = fadd float %320, %328, !dbg !43
  %335 = fadd float %322, %330, !dbg !43
  %336 = fadd float %324, %332, !dbg !43
  %337 = fmul float %95, 0x3FF7154760000000, !dbg !44
  %338 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %337) #4, !dbg !44
  %339 = fmul float %96, 0x3FF7154760000000, !dbg !44
  %340 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %339) #4, !dbg !44
  %341 = fmul float %97, 0x3FF7154760000000, !dbg !44
  %342 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %341) #4, !dbg !44
  %343 = fmul float %98, 0x3FF7154760000000, !dbg !44
  %344 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %343) #4, !dbg !44
  %345 = fadd float %333, %338, !dbg !45
  %346 = fadd float %334, %340, !dbg !45
  %347 = fadd float %335, %342, !dbg !45
  %348 = fadd float %336, %344, !dbg !45
  %349 = fmul float %105, 0x3FF7154760000000, !dbg !46
  %350 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %349) #4, !dbg !46
  %351 = fmul float %106, 0x3FF7154760000000, !dbg !46
  %352 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %351) #4, !dbg !46
  %353 = fmul float %107, 0x3FF7154760000000, !dbg !46
  %354 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %353) #4, !dbg !46
  %355 = fmul float %108, 0x3FF7154760000000, !dbg !46
  %356 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %355) #4, !dbg !46
  %357 = fadd float %345, %350, !dbg !47
  %358 = fadd float %346, %352, !dbg !47
  %359 = fadd float %347, %354, !dbg !47
  %360 = fadd float %348, %356, !dbg !47
  %361 = fcmp olt float %357, 0x3810000000000000, !dbg !48
  %362 = fmul float %357, 0x4160000000000000, !dbg !48
  %.02.i102 = select i1 %361, float %362, float %357, !dbg !48
  %i.i.0.i103 = select i1 %361, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %363 = bitcast float %.02.i102 to i32, !dbg !48
  %364 = add i32 %363, -1059760811, !dbg !48
  %365 = and i32 %364, -8388608, !dbg !48
  %366 = sub i32 %363, %365, !dbg !48
  %367 = bitcast i32 %366 to float, !dbg !48
  %368 = sitofp i32 %365 to float, !dbg !48
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i104 = icmp eq i32 %369, 0, !dbg !48
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %368, float 0x3E80000000000000, float %i.i.0.i103) #4, !dbg !48
  %371 = tail call float @llvm.nvvm.fma.rn.f(float %368, float 0x3E80000000000000, float %i.i.0.i103) #4, !dbg !48
  %.08.i105 = select i1 %.not.i104, float %371, float %370, !dbg !48
  %372 = fadd float %367, -1.000000e+00, !dbg !48
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i106 = icmp eq i32 %373, 0, !dbg !48
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %372, float 0x3FC2073EC0000000) #4, !dbg !48
  %375 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %372, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i107 = select i1 %.not1.i106, float %375, float %374, !dbg !48
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i108 = icmp eq i32 %376, 0, !dbg !48
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i107, float %372, float 0xBFBF19B980000000) #4, !dbg !48
  %378 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i107, float %372, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i109 = select i1 %.not2.i108, float %378, float %377, !dbg !48
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i110 = icmp eq i32 %379, 0, !dbg !48
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i109, float %372, float 0x3FC1E52AA0000000) #4, !dbg !48
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i109, float %372, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i111 = select i1 %.not3.i110, float %381, float %380, !dbg !48
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i112 = icmp eq i32 %382, 0, !dbg !48
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i111, float %372, float 0xBFC55B1720000000) #4, !dbg !48
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i111, float %372, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i113 = select i1 %.not4.i112, float %384, float %383, !dbg !48
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i114 = icmp eq i32 %385, 0, !dbg !48
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i113, float %372, float 0x3FC99DA160000000) #4, !dbg !48
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i113, float %372, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i115 = select i1 %.not5.i114, float %387, float %386, !dbg !48
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i116 = icmp eq i32 %388, 0, !dbg !48
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i115, float %372, float 0xBFCFFFE440000000) #4, !dbg !48
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i115, float %372, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i117 = select i1 %.not6.i116, float %390, float %389, !dbg !48
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i118 = icmp eq i32 %391, 0, !dbg !48
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i117, float %372, float 0x3FD5554F00000000) #4, !dbg !48
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i117, float %372, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i119 = select i1 %.not7.i118, float %393, float %392, !dbg !48
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i120 = icmp eq i32 %394, 0, !dbg !48
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i119, float %372, float -5.000000e-01) #4, !dbg !48
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i119, float %372, float -5.000000e-01) #4, !dbg !48
  %.07.i121 = select i1 %.not8.i120, float %396, float %395, !dbg !48
  %397 = fmul float %372, %.07.i121, !dbg !48
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i122 = icmp eq i32 %398, 0, !dbg !48
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float %372, float %372) #4, !dbg !48
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %397, float %372, float %372) #4, !dbg !48
  %.06.i123 = select i1 %.not9.i122, float %400, float %399, !dbg !48
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i124 = icmp eq i32 %401, 0, !dbg !48
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i105, float 0x3FE62E4300000000, float %.06.i123) #4, !dbg !48
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i105, float 0x3FE62E4300000000, float %.06.i123) #4, !dbg !48
  %.04.i125 = select i1 %.not10.i124, float %403, float %402, !dbg !48
  %404 = icmp ugt i32 %363, 2139095039, !dbg !48
  br i1 %404, label %__nv_fmaf_rn.exit.i.i128, label %__nv_logf.exit131, !dbg !48

__nv_fmaf_rn.exit.i.i128:                         ; preds = %__nv_logf.exit101
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i129 = icmp eq i32 %405, 0, !dbg !48
  %406 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i102, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %407 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i102, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i130 = select i1 %.not11.i129, float %407, float %406, !dbg !48
  br label %__nv_logf.exit131, !dbg !48

__nv_logf.exit131:                                ; preds = %__nv_logf.exit101, %__nv_fmaf_rn.exit.i.i128
  %r.i.0.i126 = phi float [ %.03.i130, %__nv_fmaf_rn.exit.i.i128 ], [ %.04.i125, %__nv_logf.exit101 ], !dbg !48
  %408 = fcmp olt float %358, 0x3810000000000000, !dbg !48
  %409 = fmul float %358, 0x4160000000000000, !dbg !48
  %.02.i132 = select i1 %408, float %409, float %358, !dbg !48
  %i.i.0.i133 = select i1 %408, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %410 = bitcast float %.02.i132 to i32, !dbg !48
  %411 = add i32 %410, -1059760811, !dbg !48
  %412 = and i32 %411, -8388608, !dbg !48
  %413 = sub i32 %410, %412, !dbg !48
  %414 = bitcast i32 %413 to float, !dbg !48
  %415 = sitofp i32 %412 to float, !dbg !48
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i134 = icmp eq i32 %416, 0, !dbg !48
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %415, float 0x3E80000000000000, float %i.i.0.i133) #4, !dbg !48
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %415, float 0x3E80000000000000, float %i.i.0.i133) #4, !dbg !48
  %.08.i135 = select i1 %.not.i134, float %418, float %417, !dbg !48
  %419 = fadd float %414, -1.000000e+00, !dbg !48
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i136 = icmp eq i32 %420, 0, !dbg !48
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %419, float 0x3FC2073EC0000000) #4, !dbg !48
  %422 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %419, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i137 = select i1 %.not1.i136, float %422, float %421, !dbg !48
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i138 = icmp eq i32 %423, 0, !dbg !48
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i137, float %419, float 0xBFBF19B980000000) #4, !dbg !48
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i137, float %419, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i139 = select i1 %.not2.i138, float %425, float %424, !dbg !48
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i140 = icmp eq i32 %426, 0, !dbg !48
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i139, float %419, float 0x3FC1E52AA0000000) #4, !dbg !48
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i139, float %419, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i141 = select i1 %.not3.i140, float %428, float %427, !dbg !48
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i142 = icmp eq i32 %429, 0, !dbg !48
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i141, float %419, float 0xBFC55B1720000000) #4, !dbg !48
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i141, float %419, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i143 = select i1 %.not4.i142, float %431, float %430, !dbg !48
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i144 = icmp eq i32 %432, 0, !dbg !48
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i143, float %419, float 0x3FC99DA160000000) #4, !dbg !48
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i143, float %419, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i145 = select i1 %.not5.i144, float %434, float %433, !dbg !48
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i146 = icmp eq i32 %435, 0, !dbg !48
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i145, float %419, float 0xBFCFFFE440000000) #4, !dbg !48
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i145, float %419, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i147 = select i1 %.not6.i146, float %437, float %436, !dbg !48
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i148 = icmp eq i32 %438, 0, !dbg !48
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i147, float %419, float 0x3FD5554F00000000) #4, !dbg !48
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i147, float %419, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i149 = select i1 %.not7.i148, float %440, float %439, !dbg !48
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i150 = icmp eq i32 %441, 0, !dbg !48
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %419, float -5.000000e-01) #4, !dbg !48
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %419, float -5.000000e-01) #4, !dbg !48
  %.07.i151 = select i1 %.not8.i150, float %443, float %442, !dbg !48
  %444 = fmul float %419, %.07.i151, !dbg !48
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i152 = icmp eq i32 %445, 0, !dbg !48
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %444, float %419, float %419) #4, !dbg !48
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %444, float %419, float %419) #4, !dbg !48
  %.06.i153 = select i1 %.not9.i152, float %447, float %446, !dbg !48
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i154 = icmp eq i32 %448, 0, !dbg !48
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i135, float 0x3FE62E4300000000, float %.06.i153) #4, !dbg !48
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i135, float 0x3FE62E4300000000, float %.06.i153) #4, !dbg !48
  %.04.i155 = select i1 %.not10.i154, float %450, float %449, !dbg !48
  %451 = icmp ugt i32 %410, 2139095039, !dbg !48
  br i1 %451, label %__nv_fmaf_rn.exit.i.i158, label %__nv_logf.exit161, !dbg !48

__nv_fmaf_rn.exit.i.i158:                         ; preds = %__nv_logf.exit131
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i159 = icmp eq i32 %452, 0, !dbg !48
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i132, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i132, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i160 = select i1 %.not11.i159, float %454, float %453, !dbg !48
  br label %__nv_logf.exit161, !dbg !48

__nv_logf.exit161:                                ; preds = %__nv_logf.exit131, %__nv_fmaf_rn.exit.i.i158
  %r.i.0.i156 = phi float [ %.03.i160, %__nv_fmaf_rn.exit.i.i158 ], [ %.04.i155, %__nv_logf.exit131 ], !dbg !48
  %455 = fcmp olt float %359, 0x3810000000000000, !dbg !48
  %456 = fmul float %359, 0x4160000000000000, !dbg !48
  %.02.i162 = select i1 %455, float %456, float %359, !dbg !48
  %i.i.0.i163 = select i1 %455, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %457 = bitcast float %.02.i162 to i32, !dbg !48
  %458 = add i32 %457, -1059760811, !dbg !48
  %459 = and i32 %458, -8388608, !dbg !48
  %460 = sub i32 %457, %459, !dbg !48
  %461 = bitcast i32 %460 to float, !dbg !48
  %462 = sitofp i32 %459 to float, !dbg !48
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i164 = icmp eq i32 %463, 0, !dbg !48
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %462, float 0x3E80000000000000, float %i.i.0.i163) #4, !dbg !48
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %462, float 0x3E80000000000000, float %i.i.0.i163) #4, !dbg !48
  %.08.i165 = select i1 %.not.i164, float %465, float %464, !dbg !48
  %466 = fadd float %461, -1.000000e+00, !dbg !48
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i166 = icmp eq i32 %467, 0, !dbg !48
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %466, float 0x3FC2073EC0000000) #4, !dbg !48
  %469 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %466, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i167 = select i1 %.not1.i166, float %469, float %468, !dbg !48
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i168 = icmp eq i32 %470, 0, !dbg !48
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i167, float %466, float 0xBFBF19B980000000) #4, !dbg !48
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i167, float %466, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i169 = select i1 %.not2.i168, float %472, float %471, !dbg !48
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i170 = icmp eq i32 %473, 0, !dbg !48
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i169, float %466, float 0x3FC1E52AA0000000) #4, !dbg !48
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i169, float %466, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i171 = select i1 %.not3.i170, float %475, float %474, !dbg !48
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i172 = icmp eq i32 %476, 0, !dbg !48
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i171, float %466, float 0xBFC55B1720000000) #4, !dbg !48
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i171, float %466, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i173 = select i1 %.not4.i172, float %478, float %477, !dbg !48
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i174 = icmp eq i32 %479, 0, !dbg !48
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i173, float %466, float 0x3FC99DA160000000) #4, !dbg !48
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i173, float %466, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i175 = select i1 %.not5.i174, float %481, float %480, !dbg !48
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i176 = icmp eq i32 %482, 0, !dbg !48
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i175, float %466, float 0xBFCFFFE440000000) #4, !dbg !48
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i175, float %466, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i177 = select i1 %.not6.i176, float %484, float %483, !dbg !48
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i178 = icmp eq i32 %485, 0, !dbg !48
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i177, float %466, float 0x3FD5554F00000000) #4, !dbg !48
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i177, float %466, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i179 = select i1 %.not7.i178, float %487, float %486, !dbg !48
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i180 = icmp eq i32 %488, 0, !dbg !48
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i179, float %466, float -5.000000e-01) #4, !dbg !48
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i179, float %466, float -5.000000e-01) #4, !dbg !48
  %.07.i181 = select i1 %.not8.i180, float %490, float %489, !dbg !48
  %491 = fmul float %466, %.07.i181, !dbg !48
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i182 = icmp eq i32 %492, 0, !dbg !48
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %491, float %466, float %466) #4, !dbg !48
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %491, float %466, float %466) #4, !dbg !48
  %.06.i183 = select i1 %.not9.i182, float %494, float %493, !dbg !48
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i184 = icmp eq i32 %495, 0, !dbg !48
  %496 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i165, float 0x3FE62E4300000000, float %.06.i183) #4, !dbg !48
  %497 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i165, float 0x3FE62E4300000000, float %.06.i183) #4, !dbg !48
  %.04.i185 = select i1 %.not10.i184, float %497, float %496, !dbg !48
  %498 = icmp ugt i32 %457, 2139095039, !dbg !48
  br i1 %498, label %__nv_fmaf_rn.exit.i.i188, label %__nv_logf.exit191, !dbg !48

__nv_fmaf_rn.exit.i.i188:                         ; preds = %__nv_logf.exit161
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i189 = icmp eq i32 %499, 0, !dbg !48
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i162, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i162, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i190 = select i1 %.not11.i189, float %501, float %500, !dbg !48
  br label %__nv_logf.exit191, !dbg !48

__nv_logf.exit191:                                ; preds = %__nv_logf.exit161, %__nv_fmaf_rn.exit.i.i188
  %r.i.0.i186 = phi float [ %.03.i190, %__nv_fmaf_rn.exit.i.i188 ], [ %.04.i185, %__nv_logf.exit161 ], !dbg !48
  %502 = fcmp olt float %360, 0x3810000000000000, !dbg !48
  %503 = fmul float %360, 0x4160000000000000, !dbg !48
  %.02.i192 = select i1 %502, float %503, float %360, !dbg !48
  %i.i.0.i193 = select i1 %502, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %504 = bitcast float %.02.i192 to i32, !dbg !48
  %505 = add i32 %504, -1059760811, !dbg !48
  %506 = and i32 %505, -8388608, !dbg !48
  %507 = sub i32 %504, %506, !dbg !48
  %508 = bitcast i32 %507 to float, !dbg !48
  %509 = sitofp i32 %506 to float, !dbg !48
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i194 = icmp eq i32 %510, 0, !dbg !48
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %509, float 0x3E80000000000000, float %i.i.0.i193) #4, !dbg !48
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %509, float 0x3E80000000000000, float %i.i.0.i193) #4, !dbg !48
  %.08.i195 = select i1 %.not.i194, float %512, float %511, !dbg !48
  %513 = fadd float %508, -1.000000e+00, !dbg !48
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i196 = icmp eq i32 %514, 0, !dbg !48
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %513, float 0x3FC2073EC0000000) #4, !dbg !48
  %516 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %513, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i197 = select i1 %.not1.i196, float %516, float %515, !dbg !48
  %517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i198 = icmp eq i32 %517, 0, !dbg !48
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i197, float %513, float 0xBFBF19B980000000) #4, !dbg !48
  %519 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i197, float %513, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i199 = select i1 %.not2.i198, float %519, float %518, !dbg !48
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i200 = icmp eq i32 %520, 0, !dbg !48
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i199, float %513, float 0x3FC1E52AA0000000) #4, !dbg !48
  %522 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i199, float %513, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i201 = select i1 %.not3.i200, float %522, float %521, !dbg !48
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i202 = icmp eq i32 %523, 0, !dbg !48
  %524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i201, float %513, float 0xBFC55B1720000000) #4, !dbg !48
  %525 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i201, float %513, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i203 = select i1 %.not4.i202, float %525, float %524, !dbg !48
  %526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i204 = icmp eq i32 %526, 0, !dbg !48
  %527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i203, float %513, float 0x3FC99DA160000000) #4, !dbg !48
  %528 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i203, float %513, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i205 = select i1 %.not5.i204, float %528, float %527, !dbg !48
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i206 = icmp eq i32 %529, 0, !dbg !48
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i205, float %513, float 0xBFCFFFE440000000) #4, !dbg !48
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i205, float %513, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i207 = select i1 %.not6.i206, float %531, float %530, !dbg !48
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i208 = icmp eq i32 %532, 0, !dbg !48
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i207, float %513, float 0x3FD5554F00000000) #4, !dbg !48
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i207, float %513, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i209 = select i1 %.not7.i208, float %534, float %533, !dbg !48
  %535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i210 = icmp eq i32 %535, 0, !dbg !48
  %536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i209, float %513, float -5.000000e-01) #4, !dbg !48
  %537 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i209, float %513, float -5.000000e-01) #4, !dbg !48
  %.07.i211 = select i1 %.not8.i210, float %537, float %536, !dbg !48
  %538 = fmul float %513, %.07.i211, !dbg !48
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i212 = icmp eq i32 %539, 0, !dbg !48
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %538, float %513, float %513) #4, !dbg !48
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %538, float %513, float %513) #4, !dbg !48
  %.06.i213 = select i1 %.not9.i212, float %541, float %540, !dbg !48
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i214 = icmp eq i32 %542, 0, !dbg !48
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i195, float 0x3FE62E4300000000, float %.06.i213) #4, !dbg !48
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i195, float 0x3FE62E4300000000, float %.06.i213) #4, !dbg !48
  %.04.i215 = select i1 %.not10.i214, float %544, float %543, !dbg !48
  %545 = icmp ugt i32 %504, 2139095039, !dbg !48
  br i1 %545, label %__nv_fmaf_rn.exit.i.i218, label %__nv_logf.exit221, !dbg !48

__nv_fmaf_rn.exit.i.i218:                         ; preds = %__nv_logf.exit191
  %546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i219 = icmp eq i32 %546, 0, !dbg !48
  %547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i192, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %548 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i192, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i220 = select i1 %.not11.i219, float %548, float %547, !dbg !48
  br label %__nv_logf.exit221, !dbg !48

__nv_logf.exit221:                                ; preds = %__nv_logf.exit191, %__nv_fmaf_rn.exit.i.i218
  %r.i.0.i216 = phi float [ %.03.i220, %__nv_fmaf_rn.exit.i.i218 ], [ %.04.i215, %__nv_logf.exit191 ], !dbg !48
  %549 = insertelement <2 x float> poison, float %.02.i162, i64 0, !dbg !48
  %550 = insertelement <2 x float> %549, float %.02.i192, i64 1, !dbg !48
  %551 = fcmp oeq <2 x float> %550, zeroinitializer, !dbg !48
  %552 = insertelement <2 x float> poison, float %.02.i102, i64 0, !dbg !48
  %553 = insertelement <2 x float> %552, float %.02.i132, i64 1, !dbg !48
  %554 = fcmp oeq <2 x float> %553, zeroinitializer, !dbg !48
  %555 = insertelement <2 x i32> poison, i32 %127, i64 0, !dbg !39
  %556 = insertelement <2 x i32> %555, i32 %128, i64 1, !dbg !39
  %557 = icmp eq <2 x i32> %556, zeroinitializer, !dbg !39
  %558 = tail call float @llvm.nvvm.fabs.f(float %124) #4, !dbg !39
  %559 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #4, !dbg !39
  %560 = insertelement <2 x float> poison, float %123, i64 0, !dbg !49
  %561 = insertelement <2 x float> %560, float %124, i64 1, !dbg !49
  %562 = fcmp oeq <2 x float> %561, zeroinitializer, !dbg !49
  %563 = insertelement <2 x float> poison, float %.02.i42, i64 0, !dbg !40
  %564 = insertelement <2 x float> %563, float %.02.i72, i64 1, !dbg !40
  %565 = fcmp oeq <2 x float> %564, zeroinitializer, !dbg !40
  %566 = tail call float @llvm.nvvm.fabs.f(float %123) #4, !dbg !39
  %567 = tail call float @llvm.nvvm.fabs.ftz.f(float %123) #4, !dbg !39
  %568 = insertelement <2 x i32> poison, i32 %125, i64 0, !dbg !39
  %569 = insertelement <2 x i32> %568, i32 %126, i64 1, !dbg !39
  %570 = icmp eq <2 x i32> %569, zeroinitializer, !dbg !39
  %571 = tail call float @llvm.nvvm.fabs.f(float %122) #4, !dbg !39
  %572 = tail call float @llvm.nvvm.fabs.ftz.f(float %122) #4, !dbg !39
  %573 = insertelement <2 x float> poison, float %121, i64 0, !dbg !49
  %574 = insertelement <2 x float> %573, float %122, i64 1, !dbg !49
  %575 = fcmp oeq <2 x float> %574, zeroinitializer, !dbg !49
  %576 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !40
  %577 = insertelement <2 x float> %576, float %.02.i12, i64 1, !dbg !40
  %578 = fcmp oeq <2 x float> %577, zeroinitializer, !dbg !40
  %579 = tail call float @llvm.nvvm.fabs.f(float %121) #4, !dbg !39
  %580 = tail call float @llvm.nvvm.fabs.ftz.f(float %121) #4, !dbg !39
  %581 = extractvalue { i32, i32, i32, i32 } %68, 3, !dbg !26
  %582 = extractvalue { i32, i32, i32, i32 } %68, 2, !dbg !26
  %583 = extractvalue { i32, i32, i32, i32 } %68, 1, !dbg !26
  %584 = extractvalue { i32, i32, i32, i32 } %68, 0, !dbg !26
  %585 = lshr i32 %5, 5, !dbg !10
  %586 = and i32 %5, 31, !dbg !10
  %587 = insertelement <2 x float> poison, float %r.i.0.i126, i64 0, !dbg !48
  %588 = insertelement <2 x float> %587, float %r.i.0.i156, i64 1, !dbg !48
  %589 = select <2 x i1> %554, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %588, !dbg !48
  %590 = insertelement <2 x float> poison, float %579, i64 0, !dbg !39
  %591 = insertelement <2 x float> %590, float %571, i64 1, !dbg !39
  %592 = insertelement <2 x float> poison, float %580, i64 0, !dbg !39
  %593 = insertelement <2 x float> %592, float %572, i64 1, !dbg !39
  %594 = select <2 x i1> %570, <2 x float> %591, <2 x float> %593, !dbg !39
  %595 = fcmp ord <2 x float> %594, zeroinitializer, !dbg !39
  %596 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !40
  %597 = insertelement <2 x float> %596, float %r.i.0.i36, i64 1, !dbg !40
  %598 = select <2 x i1> %578, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %597, !dbg !40
  %599 = fmul <2 x float> %574, %598, !dbg !50
  %600 = select <2 x i1> %575, <2 x float> zeroinitializer, <2 x float> %599, !dbg !51
  %601 = select <2 x i1> %595, <2 x float> %600, <2 x float> splat (float 0x7FF8000000000000), !dbg !52
  %602 = insertelement <2 x i32> poison, i32 %584, i64 0, !dbg !26
  %603 = insertelement <2 x i32> %602, i32 %583, i64 1, !dbg !26
  %604 = bitcast <2 x i32> %603 to <2 x float>, !dbg !26
  %605 = fsub <2 x float> %604, %589, !dbg !53
  %606 = fmul <2 x float> %574, %605, !dbg !54
  %607 = fsub <2 x float> %601, %606, !dbg !55
  %608 = insertelement <2 x float> poison, float %566, i64 0, !dbg !39
  %609 = insertelement <2 x float> %608, float %558, i64 1, !dbg !39
  %610 = insertelement <2 x float> poison, float %567, i64 0, !dbg !39
  %611 = insertelement <2 x float> %610, float %559, i64 1, !dbg !39
  %612 = select <2 x i1> %557, <2 x float> %609, <2 x float> %611, !dbg !39
  %613 = fcmp ord <2 x float> %612, zeroinitializer, !dbg !39
  %614 = insertelement <2 x float> poison, float %r.i.0.i66, i64 0, !dbg !40
  %615 = insertelement <2 x float> %614, float %r.i.0.i96, i64 1, !dbg !40
  %616 = select <2 x i1> %565, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %615, !dbg !40
  %617 = fmul <2 x float> %561, %616, !dbg !50
  %618 = select <2 x i1> %562, <2 x float> zeroinitializer, <2 x float> %617, !dbg !51
  %619 = select <2 x i1> %613, <2 x float> %618, <2 x float> splat (float 0x7FF8000000000000), !dbg !52
  %620 = insertelement <2 x i32> poison, i32 %582, i64 0, !dbg !26
  %621 = insertelement <2 x i32> %620, i32 %581, i64 1, !dbg !26
  %622 = bitcast <2 x i32> %621 to <2 x float>, !dbg !26
  %623 = insertelement <2 x float> poison, float %r.i.0.i186, i64 0, !dbg !48
  %624 = insertelement <2 x float> %623, float %r.i.0.i216, i64 1, !dbg !48
  %625 = select <2 x i1> %551, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %624, !dbg !48
  %626 = fsub <2 x float> %622, %625, !dbg !53
  %627 = fmul <2 x float> %561, %626, !dbg !54
  %628 = fsub <2 x float> %619, %627, !dbg !55
  %shift = shufflevector <2 x float> %607, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !56
  %629 = fadd <2 x float> %607, %shift, !dbg !56
  %630 = fadd <2 x float> %629, %628, !dbg !56
  %shift222 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !56
  %631 = fadd <2 x float> %630, %shift222, !dbg !56
  %632 = extractelement <2 x float> %631, i64 0, !dbg !56
  %633 = bitcast float %632 to i32, !dbg !61
  %634 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %633, i32 16, i32 31), !dbg !61
  %635 = bitcast i32 %634 to float, !dbg !61
  %636 = fadd float %632, %635, !dbg !56
  %637 = bitcast float %636 to i32, !dbg !61
  %638 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %637, i32 8, i32 31), !dbg !61
  %639 = bitcast i32 %638 to float, !dbg !61
  %640 = fadd float %636, %639, !dbg !56
  %641 = bitcast float %640 to i32, !dbg !61
  %642 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %641, i32 4, i32 31), !dbg !61
  %643 = bitcast i32 %642 to float, !dbg !61
  %644 = fadd float %640, %643, !dbg !56
  %645 = bitcast float %644 to i32, !dbg !61
  %646 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %645, i32 2, i32 31), !dbg !61
  %647 = bitcast i32 %646 to float, !dbg !61
  %648 = fadd float %644, %647, !dbg !56
  %649 = bitcast float %648 to i32, !dbg !61
  %650 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %649, i32 1, i32 31), !dbg !61
  %651 = bitcast i32 %650 to float, !dbg !61
  %652 = fadd float %648, %651, !dbg !56
  %653 = icmp eq i32 %586, 0, !dbg !61
  %654 = and i32 %585, 1, !dbg !61
  %655 = getelementptr float, ptr addrspace(3) @global_smem, i32 %654, !dbg !61
  %656 = bitcast float %652 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %655, <1 x i32> %656, i1 %653) #4, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %657 = icmp slt i32 %5, 2, !dbg !61
  %658 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !61
  %659 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %658, i1 %657) #4, !dbg !61
  %660 = bitcast i32 %659 to float, !dbg !61
  %661 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %659, i32 1, i32 31), !dbg !61
  %662 = bitcast i32 %661 to float, !dbg !61
  %663 = fadd float %660, %662, !dbg !56
  %664 = and i32 %5, 1, !dbg !61
  %665 = icmp eq i32 %664, 0, !dbg !61
  %666 = and i1 %657, %665, !dbg !61
  %667 = bitcast float %663 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %658, <1 x i32> %667, i1 %666) #4, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %668 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !61
  %669 = fadd float %668, 0.000000e+00, !dbg !62
  %670 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %669, float 2.560000e+02) #4, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !67
  %urem = and i32 %5, 63, !dbg !68
  %671 = icmp eq i32 %urem, 0, !dbg !68
  %672 = bitcast float %670 to i32, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %672, ptr addrspace(1) %0, i1 %671) #4, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjvnykazc32zap37hg23xfbxqeqdm2xmjpfql74l4qmr3vriz5kb.py", directory: "inductor_cache/jv")
!4 = !{ptr @triton_per_fused__log_softmax__softmax_mean_mul_sub_xlogy_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax__softmax_mean_mul_sub_xlogy_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax__softmax_mean_mul_sub_xlogy_2", linkageName: "triton_per_fused__log_softmax__softmax_mean_mul_sub_xlogy_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 33, column: 30, scope: !7)
!12 = !DILocation(line: 33, column: 35, scope: !7)
!13 = !DILocation(line: 34, column: 35, scope: !7)
!14 = !DILocation(line: 34, column: 30, scope: !7)
!15 = !DILocation(line: 34, column: 43, scope: !7)
!16 = !DILocation(line: 35, column: 40, scope: !7)
!17 = !DILocation(line: 35, column: 30, scope: !7)
!18 = !DILocation(line: 35, column: 48, scope: !7)
!19 = !DILocation(line: 36, column: 40, scope: !7)
!20 = !DILocation(line: 36, column: 30, scope: !7)
!21 = !DILocation(line: 36, column: 48, scope: !7)
!22 = !DILocation(line: 37, column: 40, scope: !7)
!23 = !DILocation(line: 37, column: 30, scope: !7)
!24 = !DILocation(line: 37, column: 48, scope: !7)
!25 = !DILocation(line: 38, column: 31, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 39, column: 31, scope: !7)
!28 = !DILocation(line: 39, column: 44, scope: !7)
!29 = !DILocation(line: 40, column: 31, scope: !7)
!30 = !DILocation(line: 40, column: 49, scope: !7)
!31 = !DILocation(line: 41, column: 31, scope: !7)
!32 = !DILocation(line: 41, column: 49, scope: !7)
!33 = !DILocation(line: 42, column: 31, scope: !7)
!34 = !DILocation(line: 42, column: 49, scope: !7)
!35 = !DILocation(line: 43, column: 18, scope: !7)
!36 = !DILocation(line: 44, column: 18, scope: !7)
!37 = !DILocation(line: 45, column: 18, scope: !7)
!38 = !DILocation(line: 46, column: 18, scope: !7)
!39 = !DILocation(line: 47, column: 27, scope: !7)
!40 = !DILocation(line: 50, column: 24, scope: !7)
!41 = !DILocation(line: 55, column: 24, scope: !7)
!42 = !DILocation(line: 56, column: 24, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 58, column: 24, scope: !7)
!45 = !DILocation(line: 59, column: 20, scope: !7)
!46 = !DILocation(line: 60, column: 24, scope: !7)
!47 = !DILocation(line: 61, column: 20, scope: !7)
!48 = !DILocation(line: 62, column: 24, scope: !7)
!49 = !DILocation(line: 49, column: 20, scope: !7)
!50 = !DILocation(line: 51, column: 19, scope: !7)
!51 = !DILocation(line: 52, column: 35, scope: !7)
!52 = !DILocation(line: 54, column: 34, scope: !7)
!53 = !DILocation(line: 63, column: 20, scope: !7)
!54 = !DILocation(line: 64, column: 19, scope: !7)
!55 = !DILocation(line: 65, column: 20, scope: !7)
!56 = !DILocation(line: 256, column: 15, scope: !57, inlinedAt: !60)
!57 = distinct !DILexicalBlockFile(scope: !59, file: !58, discriminator: 0)
!58 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!59 = distinct !DILexicalBlockFile(scope: !7, file: !58, discriminator: 0)
!60 = !DILocation(line: 69, column: 59, scope: !7)
!61 = !DILocation(line: 267, column: 36, scope: !59, inlinedAt: !60)
!62 = !DILocation(line: 73, column: 15, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !7, file: !64, discriminator: 0)
!64 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!65 = !DILocation(line: 69, column: 45, scope: !7)
!66 = !DILocation(line: 71, column: 20, scope: !7)
!67 = !DILocation(line: 73, column: 4, scope: !7)
!68 = !DILocation(line: 74, column: 63, scope: !7)
!69 = !DILocation(line: 74, column: 4, scope: !7)
