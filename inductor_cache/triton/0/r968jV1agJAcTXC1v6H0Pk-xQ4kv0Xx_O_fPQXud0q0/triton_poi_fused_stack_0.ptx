//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_stack_0 // -- Begin function triton_poi_fused_stack_0
                                        // @triton_poi_fused_stack_0
.visible .entry triton_poi_fused_stack_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_stack_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_stack_0_param_1,
	.param .u32 triton_poi_fused_stack_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<24>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_stack_0_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_stack_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:21:33
	shl.b32 	%r14, %r1, 3;
	.loc	1 22 36                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:22:36
	mov.u32 	%r15, %tid.x;
	and.b32  	%r16, %r15, 24;
	and.b32  	%r17, %r15, 7;
	.loc	1 22 23                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:22:23
	or.b32  	%r18, %r14, %r17;
	.loc	1 23 21                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:23:21
	setp.lt.s32 	%p10, %r18, 8;
	.loc	1 29 18                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:29:18
	setp.lt.s32 	%p1, %r18, 4;
	.loc	1 30 33                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:30:33
	shl.b32 	%r19, %r18, 2;
	.loc	1 30 30                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:30:30
	mul.wide.s32 	%rd8, %r19, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mov.b32 	%r3, 0;
	.loc	1 30 39                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:30:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	and.b32  	%r20, %r2, 2147483647;
	mov.b32 	%f1, %r20;
	.loc	1 32 30                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:32:30
	add.s64 	%rd2, %rd1, 4;
	.loc	1 32 43                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:32:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	and.b32  	%r21, %r4, 2147483647;
	mov.b32 	%f2, %r21;
	.loc	1 34 18                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 35 31                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:35:31
	add.s64 	%rd3, %rd1, 8;
	.loc	1 35 44                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:35:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	and.b32  	%r22, %r6, 2147483647;
	mov.b32 	%f4, %r22;
	.loc	1 37 19                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:37:19
	add.f32 	%f5, %f3, %f4;
	.loc	1 38 31                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:38:31
	add.s64 	%rd4, %rd1, 12;
	.loc	1 38 44                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:38:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	and.b32  	%r23, %r8, 2147483647;
	mov.b32 	%f6, %r23;
	.loc	1 40 20                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:40:20
	add.f32 	%f7, %f5, %f6;
	.loc	1 42 20                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:42:20
	mov.b32 	%r12, %f7;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	.loc	1 54 25                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:54:25
	mul.wide.s32 	%rd9, %r18, 4;
	add.s64 	%rd5, %rd7, %rd9;
	.loc	1 54 37                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:54:37
	setp.eq.s32 	%p11, %r16, 0;
	.loc	1 0 0                           // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:0:0
	selp.b32 	%r13, %r10, 1065353216, %p1;
	.loc	1 54 37                         // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:54:37
	and.pred  	%p9, %p11, %p10;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r13 };
	// end inline asm
	.loc	1 54 4                          // cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py:54:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/x7/cx7hno2kgabytrybuwpzvnniwbghqyr7ni222b66km3nvymuimnr.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 55
.b8 104
.b8 110
.b8 111
.b8 50
.b8 107
.b8 103
.b8 97
.b8 98
.b8 121
.b8 116
.b8 114
.b8 121
.b8 98
.b8 117
.b8 119
.b8 112
.b8 122
.b8 118
.b8 110
.b8 110
.b8 105
.b8 119
.b8 98
.b8 103
.b8 104
.b8 113
.b8 121
.b8 114
.b8 55
.b8 110
.b8 105
.b8 50
.b8 50
.b8 50
.b8 98
.b8 54
.b8 54
.b8 107
.b8 109
.b8 51
.b8 110
.b8 118
.b8 121
.b8 109
.b8 117
.b8 105
.b8 109
.b8 110
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
