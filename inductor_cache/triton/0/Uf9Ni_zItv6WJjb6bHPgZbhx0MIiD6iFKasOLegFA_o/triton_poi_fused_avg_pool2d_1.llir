; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 3072, !dbg !14
  %10 = sdiv i32 %8, 16, !dbg !15
  %.frozen = freeze i32 %8, !dbg !16
  %11 = sdiv i32 %.frozen, 768, !dbg !16
  %12 = srem i32 %10, 48, !dbg !17
  %13 = mul i32 %11, 768, !dbg !18
  %.decomposed = sub i32 %.frozen, %13, !dbg !18
  %14 = shl nsw i32 %12, 6, !dbg !19
  %15 = mul i32 %11, 19456, !dbg !20
  %16 = add i32 %14, %15, !dbg !21
  %17 = add i32 %16, -33, !dbg !22
  %18 = add i32 %16, -32, !dbg !23
  %19 = add i32 %16, -31, !dbg !24
  %20 = add i32 %16, -1, !dbg !25
  %21 = or disjoint i32 %16, 1, !dbg !26
  %22 = or disjoint i32 %16, 31, !dbg !27
  %23 = or disjoint i32 %16, 32, !dbg !28
  %24 = or disjoint i32 %16, 33, !dbg !29
  %25 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !30
  %26 = insertelement <2 x i32> %25, i32 %10, i64 1, !dbg !30
  %27 = srem <2 x i32> %26, splat (i32 16), !dbg !30
  %28 = extractelement <2 x i32> %27, i64 0, !dbg !30
  %29 = extractelement <2 x i32> %27, i64 1, !dbg !31
  %30 = icmp sgt i32 %29, 0, !dbg !32
  %31 = shl nsw <2 x i32> %27, splat (i32 1), !dbg !33
  %32 = shl nsw i32 %28, 1, !dbg !33
  %33 = icmp sgt i32 %28, 0, !dbg !34
  %34 = and i1 %33, %30, !dbg !35
  %35 = add i32 %17, %32, !dbg !36
  %36 = sext i32 %35 to i64, !dbg !37
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !37
  %38 = and i1 %9, %34, !dbg !38
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %38, i32 0, i1 %38) #1, !dbg !39
  %40 = bitcast i32 %39 to float, !dbg !39
  %41 = icmp sgt i32 %28, -1, !dbg !40
  %42 = and i1 %41, %30, !dbg !41
  %43 = add i32 %18, %32, !dbg !42
  %44 = sext i32 %43 to i64, !dbg !43
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !43
  %46 = and i1 %9, %42, !dbg !44
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %46, i32 0, i1 %46) #1, !dbg !45
  %48 = bitcast i32 %47 to float, !dbg !45
  %49 = fadd float %40, %48, !dbg !46
  %50 = add i32 %19, %32, !dbg !47
  %51 = sext i32 %50 to i64, !dbg !48
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !48
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %46, i32 0, i1 %46) #1, !dbg !49
  %54 = bitcast i32 %53 to float, !dbg !49
  %55 = fadd float %49, %54, !dbg !50
  %56 = icmp sgt i32 %29, -1, !dbg !51
  %57 = and i1 %33, %56, !dbg !52
  %58 = add i32 %20, %32, !dbg !53
  %59 = sext i32 %58 to i64, !dbg !54
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !54
  %61 = and i1 %9, %57, !dbg !55
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %61, i32 0, i1 %61) #1, !dbg !56
  %63 = bitcast i32 %62 to float, !dbg !56
  %64 = fadd float %55, %63, !dbg !57
  %65 = or i32 %29, %28, !dbg !31
  %66 = icmp sgt i32 %65, -1, !dbg !31
  %67 = add i32 %16, %32, !dbg !58
  %68 = sext i32 %67 to i64, !dbg !59
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !59
  %70 = and i1 %9, %66, !dbg !60
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %70, i32 0, i1 %70) #1, !dbg !61
  %72 = bitcast i32 %71 to float, !dbg !61
  %73 = fadd float %64, %72, !dbg !62
  %74 = add i32 %21, %32, !dbg !63
  %75 = sext i32 %74 to i64, !dbg !64
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !64
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %70, i32 0, i1 %70) #1, !dbg !65
  %78 = bitcast i32 %77 to float, !dbg !65
  %79 = fadd float %73, %78, !dbg !66
  %80 = add i32 %22, %32, !dbg !67
  %81 = sext i32 %80 to i64, !dbg !68
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !68
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %82, i1 %61, i32 0, i1 %61) #1, !dbg !69
  %84 = bitcast i32 %83 to float, !dbg !69
  %85 = fadd float %79, %84, !dbg !70
  %86 = add i32 %23, %32, !dbg !71
  %87 = sext i32 %86 to i64, !dbg !72
  %88 = getelementptr float, ptr addrspace(1) %0, i64 %87, !dbg !72
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %70, i32 0, i1 %70) #1, !dbg !73
  %90 = bitcast i32 %89 to float, !dbg !73
  %91 = fadd float %85, %90, !dbg !74
  %92 = add i32 %24, %32, !dbg !75
  %93 = sext i32 %92 to i64, !dbg !76
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !76
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %70, i32 0, i1 %70) #1, !dbg !77
  %96 = bitcast i32 %95 to float, !dbg !77
  %97 = fadd float %91, %96, !dbg !78
  %98 = mul nsw i32 %28, -2, !dbg !79
  %99 = mul nsw i32 %29, -2, !dbg !80
  %100 = add nsw <2 x i32> %31, splat (i32 2), !dbg !81
  %101 = extractelement <2 x i32> %100, i64 0, !dbg !82
  %102 = mul nsw i32 %99, %101, !dbg !83
  %103 = shl nsw i32 %28, 2, !dbg !84
  %104 = mul nsw i32 %103, %29, !dbg !85
  %reass.add = add nsw i32 %101, %98
  %105 = extractelement <2 x i32> %100, i64 1, !dbg !86
  %reass.mul = mul nsw i32 %reass.add, %105
  %106 = or disjoint i32 %98, 1, !dbg !87
  %107 = add nsw i32 %106, %99, !dbg !88
  %108 = add nsw i32 %107, %104, !dbg !89
  %109 = add nsw i32 %108, %101, !dbg !82
  %110 = add nsw i32 %109, %102, !dbg !90
  %111 = add i32 %110, %105, !dbg !86
  %112 = add i32 %111, %reass.mul, !dbg !91
  %113 = sitofp i32 %112 to float, !dbg !92
  %114 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %97, float %113) #1, !dbg !92
  %115 = mul i32 %11, 33536, !dbg !93
  %116 = add i32 %115, %.decomposed, !dbg !94
  %117 = sext i32 %116 to i64, !dbg !95
  %118 = getelementptr float, ptr addrspace(1) %1, i64 %117, !dbg !95
  %119 = bitcast float %114 to i32, !dbg !96
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %118, i1 %9) #1, !dbg !96
  ret void, !dbg !97
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgag2skrvc6xuwirx6h2powgrwvulv4vesfx72fbe7l5qjhfzise.py", directory: "inductor_cache/ga")
!4 = !{ptr @triton_poi_fused_avg_pool2d_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_1", linkageName: "triton_poi_fused_avg_pool2d_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 27, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 40, column: 49, scope: !7)
!20 = !DILocation(line: 40, column: 60, scope: !7)
!21 = !DILocation(line: 40, column: 39, scope: !7)
!22 = !DILocation(line: 40, column: 46, scope: !7)
!23 = !DILocation(line: 46, column: 46, scope: !7)
!24 = !DILocation(line: 53, column: 46, scope: !7)
!25 = !DILocation(line: 60, column: 45, scope: !7)
!26 = !DILocation(line: 66, column: 42, scope: !7)
!27 = !DILocation(line: 73, column: 43, scope: !7)
!28 = !DILocation(line: 76, column: 43, scope: !7)
!29 = !DILocation(line: 79, column: 43, scope: !7)
!30 = !DILocation(line: 25, column: 19, scope: !7)
!31 = !DILocation(line: 62, column: 20, scope: !7)
!32 = !DILocation(line: 31, column: 19, scope: !7)
!33 = !DILocation(line: 35, column: 20, scope: !7)
!34 = !DILocation(line: 36, column: 19, scope: !7)
!35 = !DILocation(line: 39, column: 19, scope: !7)
!36 = !DILocation(line: 40, column: 54, scope: !7)
!37 = !DILocation(line: 40, column: 31, scope: !7)
!38 = !DILocation(line: 40, column: 73, scope: !7)
!39 = !DILocation(line: 40, column: 65, scope: !7)
!40 = !DILocation(line: 42, column: 21, scope: !7)
!41 = !DILocation(line: 45, column: 19, scope: !7)
!42 = !DILocation(line: 46, column: 54, scope: !7)
!43 = !DILocation(line: 46, column: 31, scope: !7)
!44 = !DILocation(line: 46, column: 73, scope: !7)
!45 = !DILocation(line: 46, column: 65, scope: !7)
!46 = !DILocation(line: 47, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 54, scope: !7)
!48 = !DILocation(line: 53, column: 31, scope: !7)
!49 = !DILocation(line: 53, column: 65, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 21, scope: !7)
!52 = !DILocation(line: 59, column: 20, scope: !7)
!53 = !DILocation(line: 60, column: 53, scope: !7)
!54 = !DILocation(line: 60, column: 31, scope: !7)
!55 = !DILocation(line: 60, column: 72, scope: !7)
!56 = !DILocation(line: 60, column: 64, scope: !7)
!57 = !DILocation(line: 61, column: 20, scope: !7)
!58 = !DILocation(line: 63, column: 46, scope: !7)
!59 = !DILocation(line: 63, column: 31, scope: !7)
!60 = !DILocation(line: 63, column: 65, scope: !7)
!61 = !DILocation(line: 63, column: 57, scope: !7)
!62 = !DILocation(line: 64, column: 20, scope: !7)
!63 = !DILocation(line: 66, column: 50, scope: !7)
!64 = !DILocation(line: 66, column: 31, scope: !7)
!65 = !DILocation(line: 66, column: 61, scope: !7)
!66 = !DILocation(line: 67, column: 20, scope: !7)
!67 = !DILocation(line: 73, column: 51, scope: !7)
!68 = !DILocation(line: 73, column: 31, scope: !7)
!69 = !DILocation(line: 73, column: 62, scope: !7)
!70 = !DILocation(line: 74, column: 20, scope: !7)
!71 = !DILocation(line: 76, column: 51, scope: !7)
!72 = !DILocation(line: 76, column: 31, scope: !7)
!73 = !DILocation(line: 76, column: 62, scope: !7)
!74 = !DILocation(line: 77, column: 20, scope: !7)
!75 = !DILocation(line: 79, column: 51, scope: !7)
!76 = !DILocation(line: 79, column: 31, scope: !7)
!77 = !DILocation(line: 79, column: 62, scope: !7)
!78 = !DILocation(line: 80, column: 20, scope: !7)
!79 = !DILocation(line: 81, column: 22, scope: !7)
!80 = !DILocation(line: 81, column: 34, scope: !7)
!81 = !DILocation(line: 81, column: 62, scope: !7)
!82 = !DILocation(line: 81, column: 250, scope: !7)
!83 = !DILocation(line: 81, column: 259, scope: !7)
!84 = !DILocation(line: 81, column: 328, scope: !7)
!85 = !DILocation(line: 81, column: 331, scope: !7)
!86 = !DILocation(line: 81, column: 337, scope: !7)
!87 = !DILocation(line: 81, column: 29, scope: !7)
!88 = !DILocation(line: 81, column: 40, scope: !7)
!89 = !DILocation(line: 81, column: 173, scope: !7)
!90 = !DILocation(line: 81, column: 326, scope: !7)
!91 = !DILocation(line: 81, column: 404, scope: !7)
!92 = !DILocation(line: 82, column: 20, scope: !7)
!93 = !DILocation(line: 83, column: 36, scope: !7)
!94 = !DILocation(line: 83, column: 30, scope: !7)
!95 = !DILocation(line: 83, column: 25, scope: !7)
!96 = !DILocation(line: 83, column: 48, scope: !7)
!97 = !DILocation(line: 83, column: 4, scope: !7)
