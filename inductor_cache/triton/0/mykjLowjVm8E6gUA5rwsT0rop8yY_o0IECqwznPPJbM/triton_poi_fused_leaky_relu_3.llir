; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_leaky_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %9, 128, !dbg !12
  %11 = shl i32 %8, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %7, %9, !dbg !13
  %14 = or disjoint i32 %7, %10, !dbg !13
  %15 = or disjoint i32 %7, %12, !dbg !13
  %16 = icmp slt i32 %13, 256, !dbg !14
  %17 = icmp slt i32 %14, 256, !dbg !14
  %18 = icmp slt i32 %15, 256, !dbg !14
  %19 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %20 = icmp slt i32 %19, 16, !dbg !16
  %21 = sdiv i32 %13, 4, !dbg !17
  %22 = sdiv i32 %14, 4, !dbg !17
  %.frozen = freeze i32 %15, !dbg !17
  %23 = sdiv i32 %.frozen, 4, !dbg !17
  %24 = mul i32 %23, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %24, !dbg !18
  %25 = shl i32 %13, 4, !dbg !19
  %26 = shl i32 %14, 4, !dbg !19
  %27 = add i32 %25, %19, !dbg !20
  %28 = add i32 %26, %19, !dbg !20
  %29 = sext i32 %27 to i64, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !21
  %31 = sext i32 %28 to i64, !dbg !21
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !21
  %33 = and i1 %20, %16, !dbg !22
  %34 = and i1 %20, %17, !dbg !22
  %35 = and i1 %20, %18, !dbg !22
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %33) #2, !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %34) #2, !dbg !23
  %39 = bitcast i32 %38 to float, !dbg !23
  %40 = sext i32 %21 to i64, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !24
  %42 = sext i32 %22 to i64, !dbg !24
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !24
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %16) #2, !dbg !25
  %45 = bitcast i32 %44 to float, !dbg !25
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %17) #2, !dbg !25
  %47 = bitcast i32 %46 to float, !dbg !25
  %48 = fadd float %37, %45, !dbg !26
  %49 = fadd float %39, %47, !dbg !26
  %50 = fcmp ogt float %48, 0.000000e+00, !dbg !27
  %51 = fcmp ogt float %49, 0.000000e+00, !dbg !27
  %52 = fmul float %48, 0x3FC99999A0000000, !dbg !28
  %53 = fmul float %49, 0x3FC99999A0000000, !dbg !28
  %54 = select i1 %50, float %48, float %52, !dbg !29
  %55 = select i1 %51, float %49, float %53, !dbg !29
  %56 = shl i32 %19, 2, !dbg !30
  %57 = add i32 %.decomposed, %56, !dbg !31
  %58 = shl i32 %23, 6, !dbg !32
  %59 = add i32 %57, %58, !dbg !33
  %60 = sext i32 %59 to i64, !dbg !34
  %61 = getelementptr i1, ptr addrspace(1) %2, i64 %60, !dbg !34
  %62 = zext i1 %50 to i8, !dbg !35
  %63 = zext i1 %51 to i8, !dbg !35
  %64 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %9, !dbg !35
  %65 = insertelement <1 x i8> poison, i8 %62, i64 0, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b8 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) %64, <1 x i8> %65, i1 true) #2, !dbg !35
  %66 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %10, !dbg !35
  %67 = insertelement <1 x i8> poison, i8 %63, i64 0, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b8 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) %66, <1 x i8> %67, i1 true) #2, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %68 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %12, !dbg !35
  %69 = load <16 x i1>, ptr addrspace(3) %68, align 2, !dbg !35
  %70 = shufflevector <16 x i1> %69, <16 x i1> poison, <2 x i32> <i32 0, i32 8>, !dbg !35
  %71 = zext <2 x i1> %70 to <2 x i8>, !dbg !35
  %72 = bitcast <2 x i8> %71 to i16, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %72, ptr addrspace(1) %61, i1 %35) #2, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %73 = bitcast float %54 to i32, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %30, i1 %33) #2, !dbg !37
  %74 = bitcast float %55 to i32, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %74, ptr addrspace(1) %32, i1 %34) #2, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7cqfwnowe5murzy4swx4xim5ahkvyyw23p7xfqmxg4jxhm7ckbs.py", directory: "inductor_cache/7c")
!4 = !{ptr @triton_poi_fused_leaky_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_leaky_relu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_leaky_relu_3", linkageName: "triton_poi_fused_leaky_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 30, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 34, scope: !7)
!22 = !DILocation(line: 32, column: 55, scope: !7)
!23 = !DILocation(line: 32, column: 47, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 38, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 32, scope: !7)
!30 = !DILocation(line: 40, column: 32, scope: !7)
!31 = !DILocation(line: 40, column: 30, scope: !7)
!32 = !DILocation(line: 40, column: 40, scope: !7)
!33 = !DILocation(line: 40, column: 37, scope: !7)
!34 = !DILocation(line: 40, column: 25, scope: !7)
!35 = !DILocation(line: 40, column: 51, scope: !7)
!36 = !DILocation(line: 41, column: 4, scope: !7)
!37 = !DILocation(line: 42, column: 47, scope: !7)
!38 = !DILocation(line: 42, column: 4, scope: !7)
