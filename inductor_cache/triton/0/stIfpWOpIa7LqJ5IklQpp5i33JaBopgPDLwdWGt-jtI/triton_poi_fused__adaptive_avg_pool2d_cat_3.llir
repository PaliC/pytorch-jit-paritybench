; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 1024, !dbg !14
  %10 = sdiv i32 %8, 8, !dbg !15
  %.frozen = freeze i32 %8, !dbg !16
  %11 = sdiv i32 %.frozen, 64, !dbg !16
  %12 = mul i32 %11, 64, !dbg !17
  %.decomposed = sub i32 %.frozen, %12, !dbg !17
  %13 = shl nsw i32 %11, 4, !dbg !18
  %14 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !19
  %15 = insertelement <2 x i32> %14, i32 %10, i64 1, !dbg !19
  %16 = srem <2 x i32> %15, splat (i32 8), !dbg !19
  %17 = trunc nsw <2 x i32> %16 to <2 x i8>, !dbg !20
  %18 = sdiv <2 x i8> %17, splat (i8 2), !dbg !20
  %19 = shl nsw <2 x i8> %17, splat (i8 2), !dbg !21
  %20 = add nsw <2 x i8> %19, splat (i8 11), !dbg !21
  %21 = sdiv <2 x i8> %20, splat (i8 8), !dbg !21
  %22 = icmp slt <2 x i8> %18, %21, !dbg !22
  %23 = extractelement <2 x i1> %22, i64 0, !dbg !23
  %24 = extractelement <2 x i1> %22, i64 1, !dbg !23
  %25 = and i1 %23, %24, !dbg !23
  %26 = extractelement <2 x i8> %18, i64 1, !dbg !24
  %27 = sext i8 %26 to i32, !dbg !24
  %28 = extractelement <2 x i8> %18, i64 0, !dbg !25
  %29 = sext i8 %28 to i32, !dbg !25
  %30 = add nsw i32 %13, %29, !dbg !25
  %31 = and i1 %9, %25, !dbg !26
  %32 = add nsw <2 x i8> %18, splat (i8 1), !dbg !27
  %33 = icmp slt <2 x i8> %32, %21, !dbg !28
  %34 = extractelement <2 x i1> %33, i64 0, !dbg !29
  %35 = and i1 %24, %34, !dbg !30
  %36 = and i1 %9, %35, !dbg !31
  %37 = extractelement <2 x i1> %33, i64 1, !dbg !29
  %38 = and i1 %23, %37, !dbg !32
  %39 = and i1 %9, %38, !dbg !33
  %40 = and i1 %34, %37, !dbg !29
  %41 = insertelement <4 x i32> poison, i32 %27, i64 0, !dbg !24
  %42 = insertelement <4 x i32> %41, i32 %30, i64 1, !dbg !24
  %43 = shufflevector <4 x i32> %42, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 1, i32 1>, !dbg !24
  %44 = shl nsw <4 x i32> %43, <i32 2, i32 1, i32 4, i32 5>, !dbg !24
  %45 = add nsw <4 x i32> %43, <i32 poison, i32 1, i32 4, i32 5>, !dbg !24
  %46 = shufflevector <4 x i32> %44, <4 x i32> %45, <4 x i32> <i32 0, i32 5, i32 6, i32 7>, !dbg !24
  %47 = shufflevector <4 x i32> %42, <4 x i32> %46, <4 x i32> <i32 1, i32 4, i32 4, i32 4>, !dbg !34
  %48 = add nsw <4 x i32> %46, %47, !dbg !34
  %49 = extractelement <4 x i32> %48, i64 0, !dbg !35
  %50 = sext i32 %49 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !35
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %31, i32 0, i1 %31) #1, !dbg !36
  %53 = bitcast i32 %52 to float, !dbg !36
  %54 = extractelement <4 x i32> %48, i64 1, !dbg !37
  %55 = sext i32 %54 to i64, !dbg !37
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !37
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %36, i32 0, i1 %36) #1, !dbg !38
  %58 = bitcast i32 %57 to float, !dbg !38
  %59 = fadd float %53, %58, !dbg !39
  %60 = extractelement <4 x i32> %48, i64 2, !dbg !40
  %61 = sext i32 %60 to i64, !dbg !40
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !40
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %39, i32 0, i1 %39) #1, !dbg !41
  %64 = bitcast i32 %63 to float, !dbg !41
  %65 = fadd float %59, %64, !dbg !42
  %66 = extractelement <4 x i32> %48, i64 3, !dbg !43
  %67 = sext i32 %66 to i64, !dbg !43
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !43
  %69 = and i1 %9, %40, !dbg !44
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %69, i32 0, i1 %69) #1, !dbg !45
  %71 = bitcast i32 %70 to float, !dbg !45
  %72 = fadd float %65, %71, !dbg !46
  %73 = select i1 %25, float 1.000000e+00, float 0.000000e+00, !dbg !47
  %74 = select i1 %35, float 1.000000e+00, float 0.000000e+00, !dbg !48
  %75 = fadd float %74, %73, !dbg !49
  %76 = select i1 %38, float 1.000000e+00, float 0.000000e+00, !dbg !50
  %77 = fadd float %76, %75, !dbg !51
  %78 = select i1 %40, float 1.000000e+00, float 0.000000e+00, !dbg !52
  %79 = fadd float %78, %77, !dbg !53
  %80 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float %79) #1, !dbg !54
  %81 = mul i32 %11, 110, !dbg !55
  %82 = add i32 %81, %.decomposed, !dbg !56
  %83 = sext i32 %82 to i64, !dbg !57
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !57
  %85 = bitcast float %80 to i32, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %84, i1 %9) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnqt5t65aadhnkxckudje5bjhav3xxw4vvji7sys34lgtddlzvb3.py", directory: "inductor_cache/nq")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_cat_3", linkageName: "triton_poi_fused__adaptive_avg_pool2d_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 36, column: 47, scope: !7)
!19 = !DILocation(line: 25, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 17, scope: !7)
!21 = !DILocation(line: 33, column: 26, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 36, column: 33, scope: !7)
!25 = !DILocation(line: 36, column: 44, scope: !7)
!26 = !DILocation(line: 36, column: 71, scope: !7)
!27 = !DILocation(line: 37, column: 16, scope: !7)
!28 = !DILocation(line: 38, column: 18, scope: !7)
!29 = !DILocation(line: 47, column: 20, scope: !7)
!30 = !DILocation(line: 39, column: 19, scope: !7)
!31 = !DILocation(line: 40, column: 77, scope: !7)
!32 = !DILocation(line: 44, column: 20, scope: !7)
!33 = !DILocation(line: 45, column: 77, scope: !7)
!34 = !DILocation(line: 36, column: 53, scope: !7)
!35 = !DILocation(line: 36, column: 30, scope: !7)
!36 = !DILocation(line: 36, column: 64, scope: !7)
!37 = !DILocation(line: 40, column: 31, scope: !7)
!38 = !DILocation(line: 40, column: 69, scope: !7)
!39 = !DILocation(line: 41, column: 20, scope: !7)
!40 = !DILocation(line: 45, column: 31, scope: !7)
!41 = !DILocation(line: 45, column: 69, scope: !7)
!42 = !DILocation(line: 46, column: 20, scope: !7)
!43 = !DILocation(line: 48, column: 31, scope: !7)
!44 = !DILocation(line: 48, column: 77, scope: !7)
!45 = !DILocation(line: 48, column: 69, scope: !7)
!46 = !DILocation(line: 49, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 34, scope: !7)
!48 = !DILocation(line: 55, column: 35, scope: !7)
!49 = !DILocation(line: 56, column: 20, scope: !7)
!50 = !DILocation(line: 59, column: 35, scope: !7)
!51 = !DILocation(line: 60, column: 20, scope: !7)
!52 = !DILocation(line: 63, column: 35, scope: !7)
!53 = !DILocation(line: 64, column: 20, scope: !7)
!54 = !DILocation(line: 65, column: 20, scope: !7)
!55 = !DILocation(line: 66, column: 34, scope: !7)
!56 = !DILocation(line: 66, column: 30, scope: !7)
!57 = !DILocation(line: 66, column: 25, scope: !7)
!58 = !DILocation(line: 66, column: 46, scope: !7)
!59 = !DILocation(line: 66, column: 4, scope: !7)
