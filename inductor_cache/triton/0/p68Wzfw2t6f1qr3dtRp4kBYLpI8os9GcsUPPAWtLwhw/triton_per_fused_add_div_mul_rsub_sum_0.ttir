#loc = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":36:24)
#loc17 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":39:25)
#loc20 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":42:26)
#loc32 = loc(callsite(#loc1 at #loc13))
#loc35 = loc(callsite(#loc1 at #loc17))
#loc37 = loc(callsite(#loc1 at #loc20))
module {
  tt.func public @triton_per_fused_add_div_mul_rsub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<2.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1x16x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.load %9 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %11 = arith.mulf %4, %7 : tensor<1x16xf32> loc(#loc10)
    %12 = arith.mulf %11, %10 : tensor<1x16xf32> loc(#loc11)
    %13 = "tt.reduce"(%12) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc13)), %arg6: f32 loc(callsite(#loc1 at #loc13))):
      %28 = arith.addf %arg5, %arg6 : f32 loc(#loc38)
      tt.reduce.return %28 : f32 loc(#loc31)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc31)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc15)
    %15 = arith.mulf %4, %10 : tensor<1x16xf32> loc(#loc16)
    %16 = "tt.reduce"(%15) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc17)), %arg6: f32 loc(callsite(#loc1 at #loc17))):
      %28 = arith.addf %arg5, %arg6 : f32 loc(#loc39)
      tt.reduce.return %28 : f32 loc(#loc34)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc34)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %18 = arith.mulf %7, %10 : tensor<1x16xf32> loc(#loc19)
    %19 = "tt.reduce"(%18) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc20)), %arg6: f32 loc(callsite(#loc1 at #loc20))):
      %28 = arith.addf %arg5, %arg6 : f32 loc(#loc40)
      tt.reduce.return %28 : f32 loc(#loc36)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc36)
    %20 = tt.expand_dims %19 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %21 = arith.mulf %14, %cst_1 : tensor<1x1xf32> loc(#loc22)
    %22 = arith.addf %17, %20 : tensor<1x1xf32> loc(#loc23)
    %23 = arith.addf %22, %cst_0 : tensor<1x1xf32> loc(#loc24)
    %24 = arith.divf %21, %23 : tensor<1x1xf32> loc(#loc25)
    %25 = arith.subf %cst, %24 : tensor<1x1xf32> loc(#loc26)
    gpu.barrier loc(#loc27)
    %26 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc28)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.store %27, %25 : tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":26:26)
#loc3 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":26:34)
#loc4 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":30:30)
#loc5 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":30:35)
#loc6 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":31:30)
#loc7 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":31:35)
#loc8 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":32:30)
#loc9 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":32:35)
#loc10 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":33:18)
#loc11 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":34:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc15 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":36:27)
#loc16 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":37:18)
#loc18 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":39:28)
#loc19 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":40:19)
#loc21 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":42:29)
#loc22 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":44:19)
#loc23 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":45:20)
#loc24 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":47:20)
#loc25 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":48:20)
#loc26 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":50:20)
#loc27 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":51:4)
#loc28 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":52:28)
#loc29 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":52:71)
#loc30 = loc("inductor_cache/bi/cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py":52:4)
#loc31 = loc(callsite(#loc12 at #loc13))
#loc33 = loc(callsite(#loc14 at #loc12))
#loc34 = loc(callsite(#loc12 at #loc17))
#loc36 = loc(callsite(#loc12 at #loc20))
#loc38 = loc(callsite(#loc33 at #loc13))
#loc39 = loc(callsite(#loc33 at #loc17))
#loc40 = loc(callsite(#loc33 at #loc20))
