; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_add_div_mul_rsub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = and i32 %6, 15, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #3, !dbg !12
  %11 = bitcast i32 %10 to float, !dbg !12
  %12 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !14
  %14 = bitcast i32 %13 to float, !dbg !14
  %15 = getelementptr float, ptr addrspace(1) %3, i64 %8, !dbg !15
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #3, !dbg !16
  %17 = bitcast i32 %16 to float, !dbg !16
  %18 = fmul float %11, %14, !dbg !17
  %19 = fmul float %18, %17, !dbg !18
  %20 = bitcast float %19 to i32, !dbg !19
  %21 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %20, i32 8, i32 31), !dbg !19
  %22 = bitcast i32 %21 to float, !dbg !19
  %23 = fadd float %19, %22, !dbg !23
  %24 = bitcast float %23 to i32, !dbg !19
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 4, i32 31), !dbg !19
  %26 = bitcast i32 %25 to float, !dbg !19
  %27 = fadd float %23, %26, !dbg !23
  %28 = bitcast float %27 to i32, !dbg !19
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 2, i32 31), !dbg !19
  %30 = bitcast i32 %29 to float, !dbg !19
  %31 = fadd float %27, %30, !dbg !23
  %32 = bitcast float %31 to i32, !dbg !19
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 1, i32 31), !dbg !19
  %34 = bitcast i32 %33 to float, !dbg !19
  %35 = fadd float %31, %34, !dbg !23
  %36 = fmul float %11, %17, !dbg !25
  %37 = bitcast float %36 to i32, !dbg !26
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 8, i32 31), !dbg !26
  %39 = bitcast i32 %38 to float, !dbg !26
  %40 = fadd float %36, %39, !dbg !28
  %41 = bitcast float %40 to i32, !dbg !26
  %42 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 4, i32 31), !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = fadd float %40, %43, !dbg !28
  %45 = bitcast float %44 to i32, !dbg !26
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 2, i32 31), !dbg !26
  %47 = bitcast i32 %46 to float, !dbg !26
  %48 = fadd float %44, %47, !dbg !28
  %49 = bitcast float %48 to i32, !dbg !26
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !26
  %51 = bitcast i32 %50 to float, !dbg !26
  %52 = fadd float %48, %51, !dbg !28
  %53 = fmul float %14, %17, !dbg !29
  %54 = bitcast float %53 to i32, !dbg !30
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 8, i32 31), !dbg !30
  %56 = bitcast i32 %55 to float, !dbg !30
  %57 = fadd float %53, %56, !dbg !32
  %58 = bitcast float %57 to i32, !dbg !30
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 4, i32 31), !dbg !30
  %60 = bitcast i32 %59 to float, !dbg !30
  %61 = fadd float %57, %60, !dbg !32
  %62 = bitcast float %61 to i32, !dbg !30
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 2, i32 31), !dbg !30
  %64 = bitcast i32 %63 to float, !dbg !30
  %65 = fadd float %61, %64, !dbg !32
  %66 = bitcast float %65 to i32, !dbg !30
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 1, i32 31), !dbg !30
  %68 = bitcast i32 %67 to float, !dbg !30
  %69 = fadd float %65, %68, !dbg !32
  %70 = fmul float %35, 2.000000e+00, !dbg !33
  %71 = fadd float %52, %69, !dbg !34
  %72 = fadd float %71, 0x3EB0C6F7A0000000, !dbg !35
  %73 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %70, float %72) #3, !dbg !36
  %74 = fsub float 1.000000e+00, %73, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %75 = and i32 %6, 63, !dbg !39
  %76 = icmp eq i32 %75, 0, !dbg !39
  %77 = bitcast float %74 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %77, ptr addrspace(1) %0, i1 %76) #3, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbi7krqbjrhkqbsxl4uzg7ilyv5rkqmoj7vsreulmg6vgmxvyurj.py", directory: "inductor_cache/bi")
!4 = !{ptr @triton_per_fused_add_div_mul_rsub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_mul_rsub_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_mul_rsub_sum_0", linkageName: "triton_per_fused_add_div_mul_rsub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 30, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 32, column: 30, scope: !7)
!16 = !DILocation(line: 32, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 18, scope: !7)
!18 = !DILocation(line: 34, column: 18, scope: !7)
!19 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 36, column: 24, scope: !7)
!23 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !22)
!24 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !27)
!27 = !DILocation(line: 39, column: 25, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !27)
!29 = !DILocation(line: 40, column: 19, scope: !7)
!30 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !31)
!31 = !DILocation(line: 42, column: 26, scope: !7)
!32 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !31)
!33 = !DILocation(line: 44, column: 19, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 48, column: 20, scope: !7)
!37 = !DILocation(line: 50, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 4, scope: !7)
!39 = !DILocation(line: 52, column: 71, scope: !7)
!40 = !DILocation(line: 52, column: 4, scope: !7)
