//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_5,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_6,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<83>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd4, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_5];
	ld.param.u64 	%rd3, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_0];
	ld.param.u64 	%rd10, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:22:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:22:33
	shl.b32 	%r1, %r7, 6;
	ld.param.u64 	%rd11, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_2];
	.loc	1 23 44                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:23:44
	mov.u32 	%r36, %tid.x;
	ld.param.u64 	%rd12, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_3];
	shl.b32 	%r37, %r36, 2;
	ld.param.u64 	%rd13, [triton_red_fused__native_batch_norm_legit_no_training_mean_relu_6_param_4];
	and.b32  	%r3, %r37, 60;
	.loc	1 23 23                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:23:23
	or.b32  	%r38, %r1, %r3;
	.loc	1 27 19                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:27:19
	bfe.s32 	%r39, %r7, 25, 1;
	shr.u32 	%r40, %r39, 21;
	add.s32 	%r41, %r38, %r40;
	shr.s32 	%r42, %r41, 11;
	.loc	1 26 19                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:26:19
	and.b32  	%r43, %r41, -2048;
	sub.s32 	%r44, %r38, %r43;
	.loc	1 28 30                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:28:30
	mul.wide.s32 	%rd14, %r44, 4;
	add.s64 	%rd5, %rd10, %rd14;
	mov.pred 	%p1, -1;
	.loc	1 28 35                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:28:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r11;
	mov.b32 	%f3, %r10;
	mov.b32 	%f2, %r9;
	mov.b32 	%f1, %r8;
	.loc	1 29 30                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:29:30
	add.s64 	%rd6, %rd11, %rd14;
	.loc	1 29 35                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:29:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r12;
	mov.b32 	%f30, %r13;
	mov.b32 	%f31, %r14;
	mov.b32 	%f32, %r15;
	.loc	1 30 31                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:30:31
	add.s64 	%rd7, %rd12, %rd14;
	.loc	1 30 36                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:30:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r19;
	mov.b32 	%f7, %r18;
	mov.b32 	%f6, %r17;
	mov.b32 	%f5, %r16;
	.loc	1 31 31                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:31:31
	add.s64 	%rd8, %rd13, %rd14;
	.loc	1 31 36                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:31:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r23;
	mov.b32 	%f11, %r22;
	mov.b32 	%f10, %r21;
	mov.b32 	%f9, %r20;
	.loc	1 41 22                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:41:22
	add.f32 	%f33, %f29, 0f3727C5AC;
	add.f32 	%f34, %f30, 0f3727C5AC;
	add.f32 	%f35, %f31, 0f3727C5AC;
	add.f32 	%f36, %f32, 0f3727C5AC;
	.loc	1 42 30                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:42:30
	sqrt.approx.ftz.f32 	%f37, %f33;
	sqrt.approx.ftz.f32 	%f38, %f34;
	sqrt.approx.ftz.f32 	%f39, %f35;
	sqrt.approx.ftz.f32 	%f40, %f36;
	.loc	1 44 22                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:44:22
	mov.b32 	%r26, %f37;
	mov.b32 	%r25, 1065353216;
	// begin inline asm
	div.full.f32 %r24, %r25, %r26;
	// end inline asm
	mov.b32 	%f13, %r24;
	mov.b32 	%r29, %f38;
	// begin inline asm
	div.full.f32 %r27, %r25, %r29;
	// end inline asm
	mov.b32 	%f14, %r27;
	mov.b32 	%r32, %f39;
	// begin inline asm
	div.full.f32 %r30, %r25, %r32;
	// end inline asm
	mov.b32 	%f15, %r30;
	mov.b32 	%r35, %f40;
	// begin inline asm
	div.full.f32 %r33, %r25, %r35;
	// end inline asm
	mov.b32 	%f16, %r33;
	.loc	1 34 36                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:34:36
	mad.lo.s32 	%r45, %r42, 260096, %r38;
	shl.b32 	%r46, %r36, 7;
	and.b32  	%r47, %r46, 14336;
	add.s32 	%r107, %r45, %r47;
	mov.f32 	%f79, 0f00000000;
	mov.u64 	%rd19, -8;
	mov.f32 	%f80, %f79;
	mov.f32 	%f81, %f79;
	mov.f32 	%f82, %f79;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 38 34                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:38:34
	mul.wide.s32 	%rd16, %r107, 4;
	add.s64 	%rd15, %rd3, %rd16;
	mov.b32 	%r52, 0;
	.loc	1 38 61                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:38:61
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd15 + 0 ];
	@!%p1 mov.u32 %r48, %r52;
	@!%p1 mov.u32 %r49, %r52;
	@!%p1 mov.u32 %r50, %r52;
	@!%p1 mov.u32 %r51, %r52;
	// end inline asm
	mov.b32 	%f41, %r51;
	mov.b32 	%f42, %r50;
	mov.b32 	%f43, %r49;
	mov.b32 	%f44, %r48;
	.loc	1 39 22                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:39:22
	sub.f32 	%f45, %f44, %f1;
	sub.f32 	%f46, %f43, %f2;
	sub.f32 	%f47, %f42, %f3;
	sub.f32 	%f48, %f41, %f4;
	.loc	1 47 23                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:47:23
	mul.f32 	%f49, %f16, %f48;
	mul.f32 	%f50, %f15, %f47;
	mul.f32 	%f51, %f14, %f46;
	mul.f32 	%f52, %f13, %f45;
	.loc	1 49 24                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:49:24
	fma.rn.f32 	%f53, %f52, %f5, %f9;
	fma.rn.f32 	%f54, %f51, %f6, %f10;
	fma.rn.f32 	%f55, %f50, %f7, %f11;
	fma.rn.f32 	%f56, %f49, %f8, %f12;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p10, %f56, 0f00000000;
	setp.lt.f32 	%p11, %f55, 0f00000000;
	setp.lt.f32 	%p12, %f54, 0f00000000;
	setp.lt.f32 	%p13, %f53, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f57, 0f00000000, %f53, %p13;
	selp.f32 	%f58, 0f00000000, %f54, %p12;
	selp.f32 	%f59, 0f00000000, %f55, %p11;
	selp.f32 	%f60, 0f00000000, %f56, %p10;
$L__tmp2:
	.loc	1 53 25                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:53:25
	add.f32 	%f82, %f82, %f60;
	add.f32 	%f81, %f81, %f59;
	add.f32 	%f80, %f80, %f58;
	add.f32 	%f79, %f79, %f57;
	.loc	1 34 36                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:34:36
	add.s64 	%rd19, %rd19, 8;
	add.s32 	%r107, %r107, 16384;
	setp.lt.u64 	%p14, %rd19, 120;
	@%p14 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:23:44
	and.b32  	%r78, %r36, 63;
	.loc	1 23 23                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:23:23
	or.b32  	%r79, %r1, %r78;
	.loc	1 23 44                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:23:44
	and.b32  	%r80, %r36, 16;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f79;
	shfl.sync.bfly.b32	%r82, %r81, 16, 31, -1;
	mov.b32 	%f61, %r82;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f62, %f79, %f61;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f80;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f63, %r84;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f64, %f80, %f63;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f81;
	shfl.sync.bfly.b32	%r86, %r85, 16, 31, -1;
	mov.b32 	%f65, %r86;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f81, %f65;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f82;
	shfl.sync.bfly.b32	%r88, %r87, 16, 31, -1;
	mov.b32 	%f67, %r88;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f82, %f67;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p15, %r80, 0;
	bfe.u32 	%r89, %r36, 5, 2;
	shl.b32 	%r90, %r3, 2;
	or.b32  	%r91, %r90, %r89;
	shl.b32 	%r92, %r91, 2;
	mov.u32 	%r93, global_smem;
	add.s32 	%r56, %r93, %r92;
	mov.b32 	%r57, %f62;
	// begin inline asm
	@%p15 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r56, 16;
	mov.b32 	%r59, %f64;
	// begin inline asm
	@%p15 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r56, 32;
	mov.b32 	%r61, %f66;
	// begin inline asm
	@%p15 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r56, 48;
	mov.b32 	%r63, %f68;
	// begin inline asm
	@%p15 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r36, 256;
	add.s32 	%r65, %r93, %r37;
	// begin inline asm
	@%p19 ld.shared.b32 %r64, [ %r65 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r64;
	shfl.sync.bfly.b32	%r95, %r64, 2, 31, -1;
	mov.b32 	%f70, %r95;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f71;
	shfl.sync.bfly.b32	%r97, %r96, 1, 31, -1;
	mov.b32 	%f72, %r97;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r98, %r36, 3;
	setp.eq.s32 	%p25, %r98, 0;
	and.pred  	%p20, %p19, %p25;
	mov.b32 	%r67, %f73;
	// begin inline asm
	@%p20 st.shared.b32 [ %r65 + 0 ], %r67;
	// end inline asm
	add.s32 	%r69, %r65, 512;
	// begin inline asm
	@%p19 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f74, %r68;
	shfl.sync.bfly.b32	%r99, %r68, 2, 31, -1;
	mov.b32 	%f75, %r99;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f76;
	shfl.sync.bfly.b32	%r101, %r100, 1, 31, -1;
	mov.b32 	%f77, %r101;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f78;
	// begin inline asm
	@%p20 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r102, %r3, 4;
	add.s32 	%r103, %r93, %r102;
	ld.shared.u32 	%r73, [%r103];
	ld.shared.u32 	%r74, [%r103+16];
	ld.shared.u32 	%r75, [%r103+32];
	ld.shared.u32 	%r76, [%r103+48];
$L__tmp4:
	.loc	1 55 30                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:55:30
	bar.sync 	0;
	add.s32 	%r72, %r93, %r90;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r72 + 0 ], { %r73, %r74, %r75, %r76 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r104, %r78, 2;
	add.s32 	%r105, %r93, %r104;
	ld.shared.u32 	%r77, [%r105];
	.loc	1 56 25                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:56:25
	mul.wide.s32 	%rd18, %r79, 4;
	add.s64 	%rd17, %rd4, %rd18;
	.loc	1 56 37                         // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:56:37
	and.b32  	%r106, %r36, 64;
	setp.eq.s32 	%p24, %r106, 0;
	// begin inline asm
	@%p24 st.global.b32 [ %rd17 + 0 ], { %r77 };
	// end inline asm
	.loc	1 56 4                          // ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py:56:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tf/ctfz3xr2uu7f4pbroa5q4n5ub2rk3jmx7o2m4iepmyzjrmsssgj5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 102
.b8 122
.b8 51
.b8 120
.b8 114
.b8 50
.b8 117
.b8 117
.b8 55
.b8 102
.b8 52
.b8 112
.b8 98
.b8 114
.b8 111
.b8 97
.b8 53
.b8 113
.b8 52
.b8 110
.b8 53
.b8 117
.b8 98
.b8 50
.b8 114
.b8 107
.b8 51
.b8 106
.b8 109
.b8 120
.b8 55
.b8 111
.b8 50
.b8 109
.b8 52
.b8 105
.b8 101
.b8 112
.b8 109
.b8 121
.b8 122
.b8 106
.b8 114
.b8 109
.b8 115
.b8 115
.b8 115
.b8 103
.b8 106
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 46                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
