; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = icmp slt i32 %4, 25, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = icmp samesign ult i32 %7, 10, !dbg !13
  %9 = mul i32 %4, 10, !dbg !14
  %10 = add i32 %9, %7, !dbg !15
  %11 = sext i32 %10 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = and i1 %8, %5, !dbg !17
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %13, i32 0, i1 %13) #3, !dbg !18
  %15 = bitcast i32 %14 to float, !dbg !18
  %16 = select i1 %13, float %15, float 0xFFF0000000000000, !dbg !19
  %17 = bitcast float %16 to i32, !dbg !20
  %18 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %17, i32 8, i32 31), !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = fcmp ogt float %16, %19, !dbg !24
  %21 = fcmp uno float %16, 0.000000e+00, !dbg !26
  %22 = or i1 %20, %21, !dbg !27
  %23 = select i1 %22, float %16, float %19, !dbg !28
  %24 = bitcast float %23 to i32, !dbg !20
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 4, i32 31), !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = fcmp ogt float %23, %26, !dbg !24
  %28 = fcmp uno float %23, 0.000000e+00, !dbg !26
  %29 = or i1 %27, %28, !dbg !27
  %30 = select i1 %29, float %23, float %26, !dbg !28
  %31 = bitcast float %30 to i32, !dbg !20
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 2, i32 31), !dbg !20
  %33 = bitcast i32 %32 to float, !dbg !20
  %34 = fcmp ogt float %30, %33, !dbg !24
  %35 = fcmp uno float %30, 0.000000e+00, !dbg !26
  %36 = or i1 %34, %35, !dbg !27
  %37 = select i1 %36, float %30, float %33, !dbg !28
  %38 = bitcast float %37 to i32, !dbg !20
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 1, i32 31), !dbg !20
  %40 = bitcast i32 %39 to float, !dbg !20
  %41 = fcmp ogt float %37, %40, !dbg !24
  %42 = fcmp uno float %37, 0.000000e+00, !dbg !26
  %43 = or i1 %41, %42, !dbg !27
  %44 = select i1 %43, float %37, float %40, !dbg !28
  %45 = fsub float %15, %44, !dbg !29
  %46 = fmul float %45, 0x3FF7154760000000, !dbg !30
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #3, !dbg !30
  %48 = select i1 %13, float %47, float 0.000000e+00, !dbg !31
  %49 = bitcast float %48 to i32, !dbg !32
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 8, i32 31), !dbg !32
  %51 = bitcast i32 %50 to float, !dbg !32
  %52 = fadd float %48, %51, !dbg !36
  %53 = bitcast float %52 to i32, !dbg !32
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 4, i32 31), !dbg !32
  %55 = bitcast i32 %54 to float, !dbg !32
  %56 = fadd float %52, %55, !dbg !36
  %57 = bitcast float %56 to i32, !dbg !32
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 2, i32 31), !dbg !32
  %59 = bitcast i32 %58 to float, !dbg !32
  %60 = fadd float %56, %59, !dbg !36
  %61 = bitcast float %60 to i32, !dbg !32
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 1, i32 31), !dbg !32
  %63 = bitcast i32 %62 to float, !dbg !32
  %64 = fadd float %60, %63, !dbg !36
  %65 = fcmp olt float %64, 0x3810000000000000, !dbg !38
  %66 = fmul float %64, 0x4160000000000000, !dbg !38
  %.02.i = select i1 %65, float %66, float %64, !dbg !38
  %i.i.0.i = select i1 %65, float -2.300000e+01, float 0.000000e+00, !dbg !38
  %67 = bitcast float %.02.i to i32, !dbg !38
  %68 = add i32 %67, -1059760811, !dbg !38
  %69 = and i32 %68, -8388608, !dbg !38
  %70 = sub i32 %67, %69, !dbg !38
  %71 = bitcast i32 %70 to float, !dbg !38
  %72 = sitofp i32 %69 to float, !dbg !38
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i = icmp eq i32 %73, 0, !dbg !38
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !38
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !38
  %.08.i = select i1 %.not.i, float %75, float %74, !dbg !38
  %76 = fadd float %71, -1.000000e+00, !dbg !38
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not1.i = icmp eq i32 %77, 0, !dbg !38
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %76, float 0x3FC2073EC0000000) #3, !dbg !38
  %79 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %76, float 0x3FC2073EC0000000) #3, !dbg !38
  %.010.i = select i1 %.not1.i, float %79, float %78, !dbg !38
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not2.i = icmp eq i32 %80, 0, !dbg !38
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %76, float 0xBFBF19B980000000) #3, !dbg !38
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %76, float 0xBFBF19B980000000) #3, !dbg !38
  %.011.i = select i1 %.not2.i, float %82, float %81, !dbg !38
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not3.i = icmp eq i32 %83, 0, !dbg !38
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %76, float 0x3FC1E52AA0000000) #3, !dbg !38
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %76, float 0x3FC1E52AA0000000) #3, !dbg !38
  %.012.i = select i1 %.not3.i, float %85, float %84, !dbg !38
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not4.i = icmp eq i32 %86, 0, !dbg !38
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %76, float 0xBFC55B1720000000) #3, !dbg !38
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %76, float 0xBFC55B1720000000) #3, !dbg !38
  %.09.i = select i1 %.not4.i, float %88, float %87, !dbg !38
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not5.i = icmp eq i32 %89, 0, !dbg !38
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %76, float 0x3FC99DA160000000) #3, !dbg !38
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %76, float 0x3FC99DA160000000) #3, !dbg !38
  %.05.i = select i1 %.not5.i, float %91, float %90, !dbg !38
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not6.i = icmp eq i32 %92, 0, !dbg !38
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %76, float 0xBFCFFFE440000000) #3, !dbg !38
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %76, float 0xBFCFFFE440000000) #3, !dbg !38
  %.01.i = select i1 %.not6.i, float %94, float %93, !dbg !38
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not7.i = icmp eq i32 %95, 0, !dbg !38
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %76, float 0x3FD5554F00000000) #3, !dbg !38
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %76, float 0x3FD5554F00000000) #3, !dbg !38
  %.0.i = select i1 %.not7.i, float %97, float %96, !dbg !38
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not8.i = icmp eq i32 %98, 0, !dbg !38
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %76, float -5.000000e-01) #3, !dbg !38
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %76, float -5.000000e-01) #3, !dbg !38
  %.07.i = select i1 %.not8.i, float %100, float %99, !dbg !38
  %101 = fmul float %76, %.07.i, !dbg !38
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not9.i = icmp eq i32 %102, 0, !dbg !38
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float %76, float %76) #3, !dbg !38
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %101, float %76, float %76) #3, !dbg !38
  %.06.i = select i1 %.not9.i, float %104, float %103, !dbg !38
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not10.i = icmp eq i32 %105, 0, !dbg !38
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !38
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !38
  %.04.i = select i1 %.not10.i, float %107, float %106, !dbg !38
  %108 = icmp ugt i32 %67, 2139095039, !dbg !38
  br i1 %108, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !38

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not11.i = icmp eq i32 %109, 0, !dbg !38
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %.03.i = select i1 %.not11.i, float %111, float %110, !dbg !38
  br label %__nv_logf.exit, !dbg !38

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !38
  %112 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !38
  %r.i.1.i = select i1 %112, float 0xFFF0000000000000, float %r.i.0.i, !dbg !38
  %113 = fsub float %45, %r.i.1.i, !dbg !39
  %114 = and i32 %6, 48, !dbg !40
  %115 = icmp eq i32 %114, 0, !dbg !40
  %116 = bitcast float %113 to i32, !dbg !40
  %117 = and i1 %115, %13, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %116, ptr addrspace(1) %12, i1 %117) #3, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py", directory: "inductor_cache/ac")
!4 = !{ptr @triton_per_fused__log_softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_4, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_4", linkageName: "triton_per_fused__log_softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 42, scope: !7)
!15 = !DILocation(line: 31, column: 39, scope: !7)
!16 = !DILocation(line: 31, column: 34, scope: !7)
!17 = !DILocation(line: 31, column: 55, scope: !7)
!18 = !DILocation(line: 31, column: 47, scope: !7)
!19 = !DILocation(line: 33, column: 41, scope: !7)
!20 = !DILocation(line: 131, column: 29, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 34, column: 37, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !23)
!25 = distinct !DILexicalBlockFile(scope: !21, file: !22, discriminator: 0)
!26 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !23)
!27 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !23)
!28 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !23)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 23, scope: !7)
!31 = !DILocation(line: 38, column: 41, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 39, column: 25, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 40, column: 24, scope: !7)
!39 = !DILocation(line: 41, column: 19, scope: !7)
!40 = !DILocation(line: 42, column: 48, scope: !7)
!41 = !DILocation(line: 42, column: 4, scope: !7)
