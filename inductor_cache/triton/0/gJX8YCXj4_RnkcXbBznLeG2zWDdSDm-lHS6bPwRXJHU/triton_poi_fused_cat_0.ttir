#loc = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e-07> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-16> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<128xi64> loc(#loc1)
    %cst_11 = arith.constant dense<32> : tensor<128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_12 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_11 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_11 : tensor<128xi32> loc(#loc8)
    %8 = arith.extsi %6 : tensor<128xi32> to tensor<128xi64> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_10 : tensor<128xi64> loc(#loc9)
    %10 = arith.remsi %6, %cst_9 : tensor<128xi32> loc(#loc10)
    %11 = arith.muli %10, %cst_8 : tensor<128xi32> loc(#loc11)
    %12 = arith.muli %7, %cst_7 : tensor<128xi32> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<128xi32> loc(#loc13)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %13 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc14)
    %16 = arith.andi %9, %5 : tensor<128xi1> loc(#loc15)
    %17 = tt.load %15, %16, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.addi %11, %cst_5 : tensor<128xi32> loc(#loc17)
    %19 = arith.addi %18, %12 : tensor<128xi32> loc(#loc18)
    %20 = tt.addptr %14, %19 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc19)
    %21 = tt.load %20, %16, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc20)
    %22 = arith.addf %17, %21 : tensor<128xf32> loc(#loc21)
    %23 = arith.addi %11, %cst_4 : tensor<128xi32> loc(#loc22)
    %24 = arith.addi %23, %12 : tensor<128xi32> loc(#loc23)
    %25 = tt.addptr %14, %24 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc24)
    %26 = tt.load %25, %16, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc25)
    %27 = arith.addf %22, %26 : tensor<128xf32> loc(#loc26)
    %28 = arith.addi %11, %cst_3 : tensor<128xi32> loc(#loc27)
    %29 = arith.addi %28, %12 : tensor<128xi32> loc(#loc28)
    %30 = tt.addptr %14, %29 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc29)
    %31 = tt.load %30, %16, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc30)
    %32 = arith.addf %27, %31 : tensor<128xf32> loc(#loc31)
    %33 = arith.divf %32, %cst_2 : tensor<128xf32> loc(#loc32)
    %34 = arith.cmpi sge, %8, %cst_10 : tensor<128xi64> loc(#loc33)
    %35 = arith.addi %6, %cst_1 : tensor<128xi32> loc(#loc34)
    %36 = arith.remsi %35, %cst_9 : tensor<128xi32> loc(#loc35)
    %37 = arith.muli %36, %cst_8 : tensor<128xi32> loc(#loc36)
    %38 = arith.addi %37, %12 : tensor<128xi32> loc(#loc37)
    %39 = tt.addptr %14, %38 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc38)
    %40 = arith.andi %34, %5 : tensor<128xi1> loc(#loc39)
    %41 = tt.load %39, %40, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc40)
    %42 = arith.addi %37, %cst_5 : tensor<128xi32> loc(#loc41)
    %43 = arith.addi %42, %12 : tensor<128xi32> loc(#loc42)
    %44 = tt.addptr %14, %43 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc43)
    %45 = tt.load %44, %40, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc44)
    %46 = arith.addf %41, %45 : tensor<128xf32> loc(#loc45)
    %47 = arith.addi %37, %cst_4 : tensor<128xi32> loc(#loc46)
    %48 = arith.addi %47, %12 : tensor<128xi32> loc(#loc47)
    %49 = tt.addptr %14, %48 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc48)
    %50 = tt.load %49, %40, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc49)
    %51 = arith.addf %46, %50 : tensor<128xf32> loc(#loc50)
    %52 = arith.addi %37, %cst_3 : tensor<128xi32> loc(#loc51)
    %53 = arith.addi %52, %12 : tensor<128xi32> loc(#loc52)
    %54 = tt.addptr %14, %53 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc53)
    %55 = tt.load %54, %40, %cst_6 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc54)
    %56 = arith.addf %51, %55 : tensor<128xf32> loc(#loc55)
    %57 = arith.divf %56, %cst_2 : tensor<128xf32> loc(#loc56)
    %58 = arith.subf %41, %57 : tensor<128xf32> loc(#loc57)
    %59 = arith.mulf %58, %58 : tensor<128xf32> loc(#loc58)
    %60 = arith.subf %45, %57 : tensor<128xf32> loc(#loc59)
    %61 = arith.mulf %60, %60 : tensor<128xf32> loc(#loc60)
    %62 = arith.addf %59, %61 : tensor<128xf32> loc(#loc61)
    %63 = arith.subf %50, %57 : tensor<128xf32> loc(#loc62)
    %64 = arith.mulf %63, %63 : tensor<128xf32> loc(#loc63)
    %65 = arith.addf %62, %64 : tensor<128xf32> loc(#loc64)
    %66 = arith.subf %55, %57 : tensor<128xf32> loc(#loc65)
    %67 = arith.mulf %66, %66 : tensor<128xf32> loc(#loc66)
    %68 = arith.addf %65, %67 : tensor<128xf32> loc(#loc67)
    %69 = arith.divf %68, %cst_0 : tensor<128xf32> loc(#loc68)
    %70 = arith.addf %69, %cst : tensor<128xf32> loc(#loc69)
    %71 = tt.extern_elementwise %70 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc70)
    %72 = arith.select %34, %71, %cst_6 : tensor<128xi1>, tensor<128xf32> loc(#loc71)
    %73 = arith.select %9, %33, %72 : tensor<128xi1>, tensor<128xf32> loc(#loc77)
    %74 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc74)
    %75 = tt.addptr %74, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc74)
    tt.store %75, %73, %5 : tensor<128x!tt.ptr<f32>> loc(#loc75)
    tt.return loc(#loc76)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":21:28)
#loc3 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":21:33)
#loc4 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":22:36)
#loc5 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":22:23)
#loc6 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":23:21)
#loc7 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":24:19)
#loc8 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":25:19)
#loc9 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":31:18)
#loc10 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:41)
#loc11 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:34)
#loc12 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:51)
#loc13 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:48)
#loc14 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:30)
#loc15 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:63)
#loc16 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":32:56)
#loc17 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":33:34)
#loc18 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":33:52)
#loc19 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":33:30)
#loc20 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":33:60)
#loc21 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":34:18)
#loc22 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":35:34)
#loc23 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":35:52)
#loc24 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":35:30)
#loc25 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":35:60)
#loc26 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":36:18)
#loc27 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":37:35)
#loc28 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":37:53)
#loc29 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":37:31)
#loc30 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":37:61)
#loc31 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":38:19)
#loc32 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":40:20)
#loc33 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":43:20)
#loc34 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:44)
#loc35 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:50)
#loc36 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:35)
#loc37 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:57)
#loc38 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:31)
#loc39 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:73)
#loc40 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":46:65)
#loc41 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":47:35)
#loc42 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":47:61)
#loc43 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":47:31)
#loc44 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":47:69)
#loc45 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":48:20)
#loc46 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":49:35)
#loc47 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":49:61)
#loc48 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":49:31)
#loc49 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":49:69)
#loc50 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":50:20)
#loc51 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":51:35)
#loc52 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":51:61)
#loc53 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":51:31)
#loc54 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":51:69)
#loc55 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":52:20)
#loc56 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":54:20)
#loc57 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":55:20)
#loc58 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":56:20)
#loc59 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":57:20)
#loc60 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":58:20)
#loc61 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":59:20)
#loc62 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":60:20)
#loc63 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":61:20)
#loc64 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":62:20)
#loc65 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":63:20)
#loc66 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":64:20)
#loc67 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":65:20)
#loc68 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":67:20)
#loc69 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":69:20)
#loc70 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":70:27)
#loc71 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":72:35)
#loc72 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":73:34)
#loc73 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":42:34)
#loc74 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":74:25)
#loc75 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":74:37)
#loc76 = loc("inductor_cache/sk/csktwj6rb6pjlp3gaxxoj7is5hwhxsr6hjha7sbzs4l7pudr62t3.py":74:4)
#loc77 = loc(fused[#loc72, #loc73])
