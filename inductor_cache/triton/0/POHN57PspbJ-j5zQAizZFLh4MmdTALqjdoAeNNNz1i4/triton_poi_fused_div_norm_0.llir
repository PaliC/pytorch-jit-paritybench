; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_div_norm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #3, !dbg !10
  %5 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #3, !dbg !11
  %6 = bitcast i32 %5 to float, !dbg !11
  %7 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !12
  %8 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %7, i1 true) #3, !dbg !13
  %9 = bitcast i32 %8 to float, !dbg !13
  %10 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !14
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !15
  %12 = bitcast i32 %11 to float, !dbg !15
  %13 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 true) #3, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = fmul float %6, %6, !dbg !18
  %17 = fmul float %9, %9, !dbg !19
  %18 = fadd float %16, %17, !dbg !20
  %19 = fmul float %12, %12, !dbg !21
  %20 = fadd float %18, %19, !dbg !22
  %21 = fmul float %15, %15, !dbg !23
  %22 = fadd float %20, %21, !dbg !24
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not.i = icmp eq i32 %23, 0, !dbg !25
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !25
  %.not1.i = icmp eq i32 %24, 0, !dbg !25
  br i1 %.not.i, label %30, label %25, !dbg !25

25:                                               ; preds = %3
  br i1 %.not1.i, label %28, label %26, !dbg !25

26:                                               ; preds = %25
  %27 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %22) #3, !dbg !25
  br label %__nv_sqrtf.exit, !dbg !25

28:                                               ; preds = %25
  %29 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %22) #3, !dbg !25
  br label %__nv_sqrtf.exit, !dbg !25

30:                                               ; preds = %3
  br i1 %.not1.i, label %33, label %31, !dbg !25

31:                                               ; preds = %30
  %32 = tail call float @llvm.nvvm.sqrt.rn.f(float %22) #3, !dbg !25
  br label %__nv_sqrtf.exit, !dbg !25

33:                                               ; preds = %30
  %34 = tail call float @llvm.nvvm.sqrt.approx.f(float %22) #3, !dbg !25
  br label %__nv_sqrtf.exit, !dbg !25

__nv_sqrtf.exit:                                  ; preds = %26, %28, %31, %33
  %.0.i = phi float [ %27, %26 ], [ %29, %28 ], [ %32, %31 ], [ %34, %33 ], !dbg !25
  %35 = bitcast i32 %4 to float, !dbg !10
  %36 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float %.0.i) #3, !dbg !26
  %37 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !27
  %38 = and i32 %37, 31, !dbg !27
  %39 = icmp eq i32 %38, 0, !dbg !27
  %40 = bitcast float %36 to i32, !dbg !27
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %40, ptr addrspace(1) %2, i1 %39) #3, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4oqfgmnj4dzm2jynrwbbswutjvwojloe2ija2iuuyuhb7eehhg5.py", directory: "inductor_cache/4o")
!4 = !{ptr @triton_poi_fused_div_norm_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_div_norm_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_div_norm_0", linkageName: "triton_poi_fused_div_norm_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 19, scope: !7)
!12 = !DILocation(line: 28, column: 30, scope: !7)
!13 = !DILocation(line: 28, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 30, scope: !7)
!15 = !DILocation(line: 30, column: 19, scope: !7)
!16 = !DILocation(line: 32, column: 31, scope: !7)
!17 = !DILocation(line: 32, column: 20, scope: !7)
!18 = !DILocation(line: 34, column: 18, scope: !7)
!19 = !DILocation(line: 35, column: 18, scope: !7)
!20 = !DILocation(line: 36, column: 18, scope: !7)
!21 = !DILocation(line: 37, column: 20, scope: !7)
!22 = !DILocation(line: 38, column: 19, scope: !7)
!23 = !DILocation(line: 39, column: 20, scope: !7)
!24 = !DILocation(line: 40, column: 20, scope: !7)
!25 = !DILocation(line: 41, column: 27, scope: !7)
!26 = !DILocation(line: 42, column: 19, scope: !7)
!27 = !DILocation(line: 43, column: 65, scope: !7)
!28 = !DILocation(line: 43, column: 4, scope: !7)
