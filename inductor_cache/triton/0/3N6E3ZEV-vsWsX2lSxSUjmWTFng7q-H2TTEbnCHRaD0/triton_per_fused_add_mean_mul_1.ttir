#loc = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0)
#loc1 = loc(unknown)
#loc19 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":37:24)
#loc39 = loc(callsite(#loc1 at #loc19))
module {
  tt.func public @triton_per_fused_add_mean_mul_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = arith.muli %5, %c16_i32 : i32 loc(#loc13)
    %17 = tt.splat %16 : i32 -> tensor<1x16xi32> loc(#loc14)
    %18 = arith.addi %4, %17 : tensor<1x16xi32> loc(#loc14)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.addptr %19, %18 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc15)
    %21 = tt.load %20, %11, %cst_3 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc16)
    %22 = arith.select %11, %12, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc17)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc19)), %arg8: f32 loc(callsite(#loc1 at #loc19))):
      %42 = arith.addf %arg7, %arg8 : f32 loc(#loc49)
      tt.reduce.return %42 : f32 loc(#loc38)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc38)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc21)
    %25 = arith.subf %cst_0, %15 : tensor<1x1xf32> loc(#loc41)
    %26 = math.exp %25 : tensor<1x1xf32> loc(#loc42)
    %27 = arith.addf %26, %cst_1 : tensor<1x1xf32> loc(#loc43)
    %28 = arith.divf %cst_1, %27 : tensor<1x1xf32> loc(#loc44)
    %29 = tt.broadcast %28 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc27)
    %30 = arith.mulf %12, %29 : tensor<1x16xf32> loc(#loc27)
    %31 = arith.subf %cst_3, %21 : tensor<1x16xf32> loc(#loc45)
    %32 = math.exp %31 : tensor<1x16xf32> loc(#loc46)
    %33 = arith.addf %32, %cst : tensor<1x16xf32> loc(#loc47)
    %34 = arith.divf %cst, %33 : tensor<1x16xf32> loc(#loc48)
    %35 = arith.mulf %12, %34 : tensor<1x16xf32> loc(#loc29)
    %36 = arith.addf %30, %35 : tensor<1x16xf32> loc(#loc30)
    %37 = arith.divf %24, %cst_2 : tensor<1x1xf32> loc(#loc31)
    %38 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc32)
    %39 = tt.addptr %38, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc32)
    tt.store %39, %36, %11 : tensor<1x16x!tt.ptr<f32>> loc(#loc33)
    gpu.barrier loc(#loc34)
    %40 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc35)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    tt.store %41, %37, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":23:28)
#loc3 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":25:21)
#loc4 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":26:26)
#loc5 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":26:34)
#loc6 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":31:19)
#loc7 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":32:38)
#loc8 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":32:35)
#loc9 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":32:30)
#loc10 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":32:43)
#loc11 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":33:30)
#loc12 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":33:35)
#loc13 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":34:38)
#loc14 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":34:35)
#loc15 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":34:30)
#loc16 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":34:43)
#loc17 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":36:33)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc21 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":37:27)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc23 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":38:22)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc27 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":39:18)
#loc28 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":40:22)
#loc29 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":41:19)
#loc30 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":42:19)
#loc31 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":44:19)
#loc32 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":45:25)
#loc33 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":45:45)
#loc34 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":46:4)
#loc35 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":47:28)
#loc36 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":47:40)
#loc37 = loc("inductor_cache/ju/cju55vyc3aidkalriyyiqmfqbpp2qmh42xqcaxgjuakhcenntnba.py":47:4)
#loc38 = loc(callsite(#loc18 at #loc19))
#loc40 = loc(callsite(#loc20 at #loc18))
#loc41 = loc(callsite(#loc22 at #loc23))
#loc42 = loc(callsite(#loc24 at #loc23))
#loc43 = loc(callsite(#loc25 at #loc23))
#loc44 = loc(callsite(#loc26 at #loc23))
#loc45 = loc(callsite(#loc22 at #loc28))
#loc46 = loc(callsite(#loc24 at #loc28))
#loc47 = loc(callsite(#loc25 at #loc28))
#loc48 = loc(callsite(#loc26 at #loc28))
#loc49 = loc(callsite(#loc40 at #loc19))
