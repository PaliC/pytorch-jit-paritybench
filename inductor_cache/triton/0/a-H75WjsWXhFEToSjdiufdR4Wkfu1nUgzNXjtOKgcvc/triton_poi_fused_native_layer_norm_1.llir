; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_native_layer_norm_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %9 = shl i32 %8, 5, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = or disjoint i32 %9, %11, !dbg !13
  %13 = icmp slt i32 %12, 64, !dbg !14
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %15 = shl i32 %14, 2, !dbg !16
  %16 = lshr i32 %10, 5, !dbg !17
  %17 = and i32 %16, 3, !dbg !17
  %18 = or disjoint i32 %15, %17, !dbg !18
  %19 = icmp slt i32 %18, 4, !dbg !19
  %.frozen = freeze i32 %12, !dbg !20
  %20 = sdiv i32 %.frozen, 16, !dbg !20
  %21 = mul i32 %20, 16, !dbg !21
  %.decomposed = sub i32 %.frozen, %21, !dbg !21
  %22 = shl i32 %18, 4, !dbg !22
  %23 = add i32 %22, %.decomposed, !dbg !23
  %24 = shl i32 %20, 6, !dbg !24
  %25 = add i32 %23, %24, !dbg !25
  %26 = sext i32 %25 to i64, !dbg !26
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !26
  %28 = and i1 %13, %19, !dbg !27
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %28) #4, !dbg !28
  %30 = sext i32 %18 to i64, !dbg !29
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !29
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %19) #4, !dbg !30
  %33 = sext i32 %12 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !31
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %13) #4, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %33, !dbg !33
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %13) #4, !dbg !34
  %38 = bitcast i32 %37 to float, !dbg !34
  %39 = fadd float %38, 0x3EB0C6F7A0000000, !dbg !35
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !36
  %.not.i = icmp eq i32 %40, 0, !dbg !36
  br i1 %.not.i, label %43, label %41, !dbg !36

41:                                               ; preds = %7
  %42 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %39), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

43:                                               ; preds = %7
  %44 = tail call float @llvm.nvvm.rsqrt.approx.f(float %39), !dbg !36
  br label %__nv_rsqrtf.exit, !dbg !36

__nv_rsqrtf.exit:                                 ; preds = %41, %43
  %.0.i = phi float [ %42, %41 ], [ %44, %43 ], !dbg !36
  %45 = bitcast i32 %29 to float, !dbg !28
  %46 = bitcast i32 %32 to float, !dbg !30
  %47 = fadd float %45, %46, !dbg !37
  %48 = bitcast i32 %35 to float, !dbg !32
  %49 = fsub float %47, %48, !dbg !38
  %50 = and i32 %10, 3, !dbg !12
  %51 = or disjoint i32 %15, %50, !dbg !18
  %52 = icmp slt i32 %51, 4, !dbg !19
  %53 = lshr i32 %10, 2, !dbg !12
  %54 = and i32 %53, 31, !dbg !12
  %55 = or disjoint i32 %9, %54, !dbg !13
  %56 = icmp slt i32 %55, 64, !dbg !14
  %57 = and i1 %56, %52, !dbg !27
  %58 = fmul float %49, %.0.i, !dbg !39
  %59 = shl i32 %55, 2, !dbg !40
  %60 = add i32 %51, %59, !dbg !41
  %61 = sext i32 %60 to i64, !dbg !42
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %61, !dbg !42
  %63 = shl i32 %10, 2, !dbg !43
  %64 = and i32 %63, 124, !dbg !43
  %65 = or disjoint i32 %64, %17, !dbg !43
  %66 = and i32 %10, 127, !dbg !43
  %67 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %64, !dbg !43
  %68 = getelementptr float, ptr addrspace(3) %67, i32 %65, !dbg !43
  %69 = bitcast float %58 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %68, <1 x i32> %69, i1 true) #4, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %70 = lshr i32 %66, 2, !dbg !43
  %71 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %70, !dbg !43
  %72 = getelementptr inbounds float, ptr addrspace(3) %71, i32 %66, !dbg !43
  %73 = load i32, ptr addrspace(3) %72, align 4, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %62, i1 %57) #4, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvfn6e7n2z6bl7lnm2epmycdprnz4ffjgvis6wqk2yd7n2m5scll.py", directory: "inductor_cache/vf")
!4 = !{ptr @triton_poi_fused_native_layer_norm_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_native_layer_norm_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_native_layer_norm_1", linkageName: "triton_poi_fused_native_layer_norm_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 38, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 46, scope: !7)
!25 = !DILocation(line: 32, column: 43, scope: !7)
!26 = !DILocation(line: 32, column: 30, scope: !7)
!27 = !DILocation(line: 32, column: 59, scope: !7)
!28 = !DILocation(line: 32, column: 51, scope: !7)
!29 = !DILocation(line: 33, column: 30, scope: !7)
!30 = !DILocation(line: 33, column: 35, scope: !7)
!31 = !DILocation(line: 34, column: 30, scope: !7)
!32 = !DILocation(line: 34, column: 35, scope: !7)
!33 = !DILocation(line: 35, column: 30, scope: !7)
!34 = !DILocation(line: 35, column: 35, scope: !7)
!35 = !DILocation(line: 39, column: 18, scope: !7)
!36 = !DILocation(line: 40, column: 27, scope: !7)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 37, column: 18, scope: !7)
!39 = !DILocation(line: 41, column: 18, scope: !7)
!40 = !DILocation(line: 42, column: 32, scope: !7)
!41 = !DILocation(line: 42, column: 30, scope: !7)
!42 = !DILocation(line: 42, column: 25, scope: !7)
!43 = !DILocation(line: 42, column: 43, scope: !7)
!44 = !DILocation(line: 42, column: 4, scope: !7)
