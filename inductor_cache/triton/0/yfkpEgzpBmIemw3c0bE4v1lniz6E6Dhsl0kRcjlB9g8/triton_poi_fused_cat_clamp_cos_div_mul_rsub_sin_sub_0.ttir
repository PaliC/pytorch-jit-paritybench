#loc = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_clamp_cos_div_mul_rsub_sin_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg2: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg3: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg5: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg6: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg7: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg9: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg10: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg11: !tt.ptr<f32> loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<36> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<3.14159274> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<2.500000e-01> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4.000000e+00> : tensor<256xf32> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_6 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_6 : tensor<256xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %13 = tt.load %12, %5 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %15 = tt.load %14 : !tt.ptr<f32> loc(#loc14)
    %16 = tt.splat %15 : f32 -> tensor<256xf32> loc(#loc15)
    %17 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc16)
    %18 = tt.load %17 : !tt.ptr<f32> loc(#loc17)
    %19 = tt.splat %18 : f32 -> tensor<256xf32> loc(#loc18)
    %20 = tt.addptr %arg2, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %21 = tt.load %20 : !tt.ptr<f32> loc(#loc20)
    %22 = tt.splat %21 : f32 -> tensor<256xf32> loc(#loc21)
    %23 = tt.addptr %arg3, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %24 = tt.load %23 : !tt.ptr<f32> loc(#loc23)
    %25 = tt.splat %24 : f32 -> tensor<256xf32> loc(#loc24)
    %26 = tt.addptr %arg2, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc25)
    %27 = tt.load %26 : !tt.ptr<f32> loc(#loc26)
    %28 = tt.splat %27 : f32 -> tensor<256xf32> loc(#loc27)
    %29 = tt.addptr %arg3, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc28)
    %30 = tt.load %29 : !tt.ptr<f32> loc(#loc29)
    %31 = tt.splat %30 : f32 -> tensor<256xf32> loc(#loc30)
    %32 = tt.addptr %arg2, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc31)
    %33 = tt.load %32 : !tt.ptr<f32> loc(#loc32)
    %34 = tt.splat %33 : f32 -> tensor<256xf32> loc(#loc33)
    %35 = tt.addptr %arg3, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc34)
    %36 = tt.load %35 : !tt.ptr<f32> loc(#loc35)
    %37 = tt.splat %36 : f32 -> tensor<256xf32> loc(#loc36)
    %38 = arith.mulf %13, %cst_5 : tensor<256xf32> loc(#loc37)
    %39 = arith.mulf %38, %cst_4 : tensor<256xf32> loc(#loc38)
    %40 = arith.subf %39, %16 : tensor<256xf32> loc(#loc39)
    %41 = arith.cmpf ogt, %40, %cst : tensor<256xf32> loc(#loc116)
    %42 = arith.cmpf une, %40, %40 : tensor<256xf32> loc(#loc117)
    %43 = arith.ori %41, %42 : tensor<256xi1> loc(#loc118)
    %44 = arith.select %43, %40, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc119)
    %45 = arith.cmpf olt, %44, %cst_2 : tensor<256xf32> loc(#loc120)
    %46 = arith.cmpf une, %44, %44 : tensor<256xf32> loc(#loc121)
    %47 = arith.ori %45, %46 : tensor<256xi1> loc(#loc122)
    %48 = arith.select %47, %44, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc123)
    %49 = arith.mulf %48, %cst_3 : tensor<256xf32> loc(#loc50)
    %50 = math.cos %49 : tensor<256xf32> loc(#loc51)
    %51 = arith.subf %cst_2, %50 : tensor<256xf32> loc(#loc52)
    %52 = arith.mulf %51, %cst_1 : tensor<256xf32> loc(#loc53)
    %53 = arith.mulf %19, %10 : tensor<256xf32> loc(#loc54)
    %54 = math.sin %53 : tensor<256xf32> loc(#loc55)
    %55 = arith.mulf %52, %54 : tensor<256xf32> loc(#loc56)
    %56 = math.cos %53 : tensor<256xf32> loc(#loc57)
    %57 = arith.mulf %52, %56 : tensor<256xf32> loc(#loc58)
    %58 = arith.subf %39, %22 : tensor<256xf32> loc(#loc59)
    %59 = arith.cmpf ogt, %58, %cst : tensor<256xf32> loc(#loc124)
    %60 = arith.cmpf une, %58, %58 : tensor<256xf32> loc(#loc125)
    %61 = arith.ori %59, %60 : tensor<256xi1> loc(#loc126)
    %62 = arith.select %61, %58, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc127)
    %63 = arith.cmpf olt, %62, %cst_2 : tensor<256xf32> loc(#loc128)
    %64 = arith.cmpf une, %62, %62 : tensor<256xf32> loc(#loc129)
    %65 = arith.ori %63, %64 : tensor<256xi1> loc(#loc130)
    %66 = arith.select %65, %62, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc131)
    %67 = arith.mulf %66, %cst_3 : tensor<256xf32> loc(#loc62)
    %68 = math.cos %67 : tensor<256xf32> loc(#loc63)
    %69 = arith.subf %cst_2, %68 : tensor<256xf32> loc(#loc64)
    %70 = arith.mulf %69, %cst_1 : tensor<256xf32> loc(#loc65)
    %71 = arith.mulf %25, %10 : tensor<256xf32> loc(#loc66)
    %72 = math.sin %71 : tensor<256xf32> loc(#loc67)
    %73 = arith.mulf %70, %72 : tensor<256xf32> loc(#loc68)
    %74 = math.cos %71 : tensor<256xf32> loc(#loc69)
    %75 = arith.mulf %70, %74 : tensor<256xf32> loc(#loc70)
    %76 = arith.subf %39, %28 : tensor<256xf32> loc(#loc71)
    %77 = arith.cmpf ogt, %76, %cst : tensor<256xf32> loc(#loc132)
    %78 = arith.cmpf une, %76, %76 : tensor<256xf32> loc(#loc133)
    %79 = arith.ori %77, %78 : tensor<256xi1> loc(#loc134)
    %80 = arith.select %79, %76, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc135)
    %81 = arith.cmpf olt, %80, %cst_2 : tensor<256xf32> loc(#loc136)
    %82 = arith.cmpf une, %80, %80 : tensor<256xf32> loc(#loc137)
    %83 = arith.ori %81, %82 : tensor<256xi1> loc(#loc138)
    %84 = arith.select %83, %80, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc139)
    %85 = arith.mulf %84, %cst_3 : tensor<256xf32> loc(#loc74)
    %86 = math.cos %85 : tensor<256xf32> loc(#loc75)
    %87 = arith.subf %cst_2, %86 : tensor<256xf32> loc(#loc76)
    %88 = arith.mulf %87, %cst_1 : tensor<256xf32> loc(#loc77)
    %89 = arith.mulf %31, %10 : tensor<256xf32> loc(#loc78)
    %90 = math.sin %89 : tensor<256xf32> loc(#loc79)
    %91 = arith.mulf %88, %90 : tensor<256xf32> loc(#loc80)
    %92 = math.cos %89 : tensor<256xf32> loc(#loc81)
    %93 = arith.mulf %88, %92 : tensor<256xf32> loc(#loc82)
    %94 = arith.subf %39, %34 : tensor<256xf32> loc(#loc83)
    %95 = arith.cmpf ogt, %94, %cst : tensor<256xf32> loc(#loc140)
    %96 = arith.cmpf une, %94, %94 : tensor<256xf32> loc(#loc141)
    %97 = arith.ori %95, %96 : tensor<256xi1> loc(#loc142)
    %98 = arith.select %97, %94, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc143)
    %99 = arith.cmpf olt, %98, %cst_2 : tensor<256xf32> loc(#loc144)
    %100 = arith.cmpf une, %98, %98 : tensor<256xf32> loc(#loc145)
    %101 = arith.ori %99, %100 : tensor<256xi1> loc(#loc146)
    %102 = arith.select %101, %98, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc147)
    %103 = arith.mulf %102, %cst_3 : tensor<256xf32> loc(#loc86)
    %104 = math.cos %103 : tensor<256xf32> loc(#loc87)
    %105 = arith.subf %cst_2, %104 : tensor<256xf32> loc(#loc88)
    %106 = arith.mulf %105, %cst_1 : tensor<256xf32> loc(#loc89)
    %107 = arith.mulf %37, %10 : tensor<256xf32> loc(#loc90)
    %108 = math.sin %107 : tensor<256xf32> loc(#loc91)
    %109 = arith.mulf %106, %108 : tensor<256xf32> loc(#loc92)
    %110 = math.cos %107 : tensor<256xf32> loc(#loc93)
    %111 = arith.mulf %106, %110 : tensor<256xf32> loc(#loc94)
    %112 = arith.muli %7, %cst_0 : tensor<256xi32> loc(#loc95)
    %113 = arith.addi %6, %112 : tensor<256xi32> loc(#loc96)
    %114 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc97)
    %115 = tt.addptr %114, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc97)
    tt.store %115, %10, %5 : tensor<256x!tt.ptr<f32>> loc(#loc98)
    %116 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc99)
    %117 = tt.addptr %116, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc99)
    tt.store %117, %55, %5 : tensor<256x!tt.ptr<f32>> loc(#loc100)
    %118 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc101)
    %119 = tt.addptr %118, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc101)
    tt.store %119, %57, %5 : tensor<256x!tt.ptr<f32>> loc(#loc102)
    %120 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc103)
    %121 = tt.addptr %120, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc103)
    tt.store %121, %73, %5 : tensor<256x!tt.ptr<f32>> loc(#loc104)
    %122 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc105)
    %123 = tt.addptr %122, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc105)
    tt.store %123, %75, %5 : tensor<256x!tt.ptr<f32>> loc(#loc106)
    %124 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc107)
    %125 = tt.addptr %124, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc107)
    tt.store %125, %91, %5 : tensor<256x!tt.ptr<f32>> loc(#loc108)
    %126 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc109)
    %127 = tt.addptr %126, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc109)
    tt.store %127, %93, %5 : tensor<256x!tt.ptr<f32>> loc(#loc110)
    %128 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc111)
    %129 = tt.addptr %128, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc111)
    tt.store %129, %109, %5 : tensor<256x!tt.ptr<f32>> loc(#loc112)
    %130 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc113)
    %131 = tt.addptr %130, %113 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc113)
    tt.store %131, %111, %5 : tensor<256x!tt.ptr<f32>> loc(#loc114)
    tt.return loc(#loc115)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":21:28)
#loc3 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":21:33)
#loc4 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":22:36)
#loc5 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":22:23)
#loc6 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":23:21)
#loc7 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":25:19)
#loc8 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":26:19)
#loc9 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":27:30)
#loc10 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":27:35)
#loc11 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":28:30)
#loc12 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":28:35)
#loc13 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":29:30)
#loc14 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":29:19)
#loc15 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":30:33)
#loc16 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":31:31)
#loc17 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":31:20)
#loc18 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":32:35)
#loc19 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":33:31)
#loc20 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":33:20)
#loc21 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":34:35)
#loc22 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":35:31)
#loc23 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":35:20)
#loc24 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":36:35)
#loc25 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":37:31)
#loc26 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":37:20)
#loc27 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":38:35)
#loc28 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":39:31)
#loc29 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":39:20)
#loc30 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":40:35)
#loc31 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":41:31)
#loc32 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":41:20)
#loc33 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":42:35)
#loc34 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":43:31)
#loc35 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":43:20)
#loc36 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":44:35)
#loc37 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":46:18)
#loc38 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":48:18)
#loc39 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":49:18)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":51:41)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc46 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":53:42)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc50 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":55:20)
#loc51 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":56:24)
#loc52 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":57:20)
#loc53 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":59:20)
#loc54 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":60:20)
#loc55 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":61:24)
#loc56 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":62:20)
#loc57 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":63:24)
#loc58 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":64:20)
#loc59 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":65:19)
#loc60 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":66:42)
#loc61 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":67:42)
#loc62 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":68:20)
#loc63 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":69:24)
#loc64 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":70:20)
#loc65 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":71:20)
#loc66 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":72:20)
#loc67 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":73:24)
#loc68 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":74:20)
#loc69 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":75:24)
#loc70 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":76:20)
#loc71 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":77:19)
#loc72 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":78:42)
#loc73 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":79:42)
#loc74 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":80:20)
#loc75 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":81:24)
#loc76 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":82:20)
#loc77 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":83:20)
#loc78 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":84:20)
#loc79 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":85:24)
#loc80 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":86:20)
#loc81 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":87:24)
#loc82 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":88:20)
#loc83 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":89:19)
#loc84 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":90:42)
#loc85 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":91:42)
#loc86 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":92:20)
#loc87 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":93:24)
#loc88 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":94:20)
#loc89 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":95:20)
#loc90 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":96:20)
#loc91 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":97:24)
#loc92 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":98:20)
#loc93 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":99:24)
#loc94 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":100:20)
#loc95 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":101:33)
#loc96 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":101:30)
#loc97 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":101:25)
#loc98 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":101:44)
#loc99 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":102:25)
#loc100 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":102:45)
#loc101 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":103:25)
#loc102 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":103:45)
#loc103 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":104:25)
#loc104 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":104:45)
#loc105 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":105:25)
#loc106 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":105:45)
#loc107 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":106:25)
#loc108 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":106:45)
#loc109 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":107:25)
#loc110 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":107:45)
#loc111 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":108:25)
#loc112 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":108:45)
#loc113 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":109:25)
#loc114 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":109:45)
#loc115 = loc("inductor_cache/xx/cxxkxc63gz3xfocjzan7zw4xyvdte3p27ams5wlkuzqqzsbszze7.py":109:4)
#loc116 = loc(callsite(#loc40 at #loc41))
#loc117 = loc(callsite(#loc42 at #loc41))
#loc118 = loc(callsite(#loc43 at #loc41))
#loc119 = loc(callsite(#loc44 at #loc41))
#loc120 = loc(callsite(#loc45 at #loc46))
#loc121 = loc(callsite(#loc47 at #loc46))
#loc122 = loc(callsite(#loc48 at #loc46))
#loc123 = loc(callsite(#loc49 at #loc46))
#loc124 = loc(callsite(#loc40 at #loc60))
#loc125 = loc(callsite(#loc42 at #loc60))
#loc126 = loc(callsite(#loc43 at #loc60))
#loc127 = loc(callsite(#loc44 at #loc60))
#loc128 = loc(callsite(#loc45 at #loc61))
#loc129 = loc(callsite(#loc47 at #loc61))
#loc130 = loc(callsite(#loc48 at #loc61))
#loc131 = loc(callsite(#loc49 at #loc61))
#loc132 = loc(callsite(#loc40 at #loc72))
#loc133 = loc(callsite(#loc42 at #loc72))
#loc134 = loc(callsite(#loc43 at #loc72))
#loc135 = loc(callsite(#loc44 at #loc72))
#loc136 = loc(callsite(#loc45 at #loc73))
#loc137 = loc(callsite(#loc47 at #loc73))
#loc138 = loc(callsite(#loc48 at #loc73))
#loc139 = loc(callsite(#loc49 at #loc73))
#loc140 = loc(callsite(#loc40 at #loc84))
#loc141 = loc(callsite(#loc42 at #loc84))
#loc142 = loc(callsite(#loc43 at #loc84))
#loc143 = loc(callsite(#loc44 at #loc84))
#loc144 = loc(callsite(#loc45 at #loc85))
#loc145 = loc(callsite(#loc47 at #loc85))
#loc146 = loc(callsite(#loc48 at #loc85))
#loc147 = loc(callsite(#loc49 at #loc85))
