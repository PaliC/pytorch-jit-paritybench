//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_cat_22 // -- Begin function triton_poi_fused__unsafe_index_add_cat_22
                                        // @triton_poi_fused__unsafe_index_add_cat_22
.visible .entry triton_poi_fused__unsafe_index_add_cat_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_cat_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_cat_22_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_cat_22_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_cat_22_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_cat_22_param_4,
	.param .u32 triton_poi_fused__unsafe_index_add_cat_22_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_poi_fused__unsafe_index_add_cat_22_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused__unsafe_index_add_cat_22_param_1];
$L__tmp0:
	.loc	1 21 28                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:21:33
	shl.b32 	%r14, %r1, 8;
	ld.param.u64 	%rd15, [triton_poi_fused__unsafe_index_add_cat_22_param_2];
	ld.param.u64 	%rd16, [triton_poi_fused__unsafe_index_add_cat_22_param_3];
	.loc	1 22 36                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 1;
	ld.param.u64 	%rd17, [triton_poi_fused__unsafe_index_add_cat_22_param_4];
	and.b32  	%r17, %r16, 254;
	.loc	1 22 23                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:22:23
	or.b32  	%r18, %r14, %r17;
	.loc	1 23 21                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:23:21
	setp.lt.s32 	%p1, %r18, 33792;
	.loc	1 24 21                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:24:21
	shr.s32 	%r20, %r18, 31;
	shr.u32 	%r21, %r20, 29;
	add.s32 	%r22, %r18, %r21;
	shr.s32 	%r23, %r22, 3;
	.loc	1 24 26                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:24:26
	shr.u32 	%r24, %r23, 29;
	add.s32 	%r25, %r23, %r24;
	and.b32  	%r26, %r25, -8;
	sub.s32 	%r27, %r23, %r26;
	.loc	1 25 19                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:25:19
	and.b32  	%r28, %r22, -8;
	sub.s32 	%r29, %r18, %r28;
	.loc	1 26 19                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:26:19
	shr.u32 	%r30, %r20, 26;
	add.s32 	%r31, %r18, %r30;
	shr.s32 	%r32, %r31, 6;
	.loc	1 27 27                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:27:27
	mul.hi.s32 	%r33, %r32, 1041204193;
	shr.u32 	%r34, %r33, 31;
	shr.s32 	%r35, %r33, 5;
	add.s32 	%r36, %r35, %r34;
	mul.lo.s32 	%r37, %r36, 132;
	sub.s32 	%r38, %r32, %r37;
	.loc	1 28 19                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:28:19
	mul.hi.s32 	%r39, %r18, 1041204193;
	shr.u32 	%r40, %r39, 31;
	shr.s32 	%r41, %r39, 11;
	add.s32 	%r42, %r41, %r40;
	.loc	1 29 19                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:29:19
	and.b32  	%r43, %r31, -64;
	sub.s32 	%r44, %r18, %r43;
	.loc	1 31 30                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:31:30
	mul.wide.s32 	%rd18, %r27, 8;
	add.s64 	%rd2, %rd13, %rd18;
	.loc	1 31 35                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:31:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:32:30
	mul.wide.s32 	%rd19, %r29, 8;
	add.s64 	%rd7, %rd13, %rd19;
	.loc	1 32 35                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:32:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	mov.u64 %rd6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd5, %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 32                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:36:32
	shr.u64 	%rd20, %rd1, 61;
	and.b64  	%rd21, %rd20, 4;
	add.s64 	%rd22, %rd21, %rd1;
	.loc	1 40 49                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:40:49
	shl.b32 	%r45, %r32, 4;
	.loc	1 40 30                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:40:30
	shl.b64 	%rd23, %rd5, 2;
	add.s64 	%rd24, %rd14, %rd23;
	shr.u64 	%rd25, %rd5, 59;
	and.b64  	%rd26, %rd25, 16;
	add.s64 	%rd27, %rd24, %rd26;
	shl.b64 	%rd28, %rd22, 4;
	add.s64 	%rd29, %rd27, %rd28;
	mul.wide.s32 	%rd30, %r45, 4;
	add.s64 	%rd8, %rd29, %rd30;
	shl.b64 	%rd31, %rd6, 2;
	add.s64 	%rd32, %rd14, %rd31;
	shr.u64 	%rd33, %rd6, 59;
	and.b64  	%rd34, %rd33, 16;
	add.s64 	%rd35, %rd32, %rd34;
	add.s64 	%rd36, %rd35, %rd28;
	add.s64 	%rd9, %rd36, %rd30;
	.loc	1 40 54                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:40:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 45 20                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:45:20
	setp.lt.s32 	%p13, %r38, 96;
	.loc	1 46 36                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:46:36
	mul.lo.s32 	%r46, %r42, 8448;
	sub.s32 	%r47, %r18, %r46;
	.loc	1 46 46                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:46:46
	mad.lo.s32 	%r48, %r42, 6144, %r47;
	.loc	1 46 31                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:46:31
	mul.wide.s32 	%rd37, %r48, 4;
	add.s64 	%rd10, %rd15, %rd37;
	.loc	1 46 64                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:46:64
	and.pred  	%p6, %p1, %p13;
	mov.b32 	%r6, 0;
	.loc	1 46 56                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:46:56
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p6 ld.global.v2.b32 { %r4, %r5 }, [ %rd10 + 0 ];
	@!%p6 mov.u32 %r4, %r6;
	@!%p6 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 47 21                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:47:21
	setp.gt.s32 	%p14, %r38, 95;
	.loc	1 50 40                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:50:40
	shl.b32 	%r49, %r38, 6;
	.loc	1 50 59                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:50:59
	mul.lo.s32 	%r50, %r42, 2304;
	.loc	1 50 31                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:50:31
	cvt.s64.s32 	%rd38, %r49;
	cvt.s64.s32 	%rd39, %r50;
	cvt.s64.s32 	%rd40, %r44;
	add.s64 	%rd41, %rd40, %rd39;
	add.s64 	%rd42, %rd41, %rd38;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd44, %rd16, %rd43;
	add.s64 	%rd11, %rd44, -24576;
	.loc	1 50 72                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:50:72
	and.pred  	%p9, %p1, %p14;
	.loc	1 50 64                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:50:64
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p9 ld.global.v2.b32 { %r8, %r9 }, [ %rd11 + 0 ];
	@!%p9 mov.u32 %r8, %r6;
	@!%p9 mov.u32 %r9, %r6;
	// end inline asm
	.loc	1 51 35                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:51:35
	selp.b32 	%r51, %r4, %r8, %p13;
	mov.b32 	%f3, %r51;
	selp.b32 	%r52, %r5, %r9, %p13;
	mov.b32 	%f4, %r52;
	.loc	1 52 19                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:52:19
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 53 25                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:53:25
	mul.wide.s32 	%rd45, %r18, 4;
	add.s64 	%rd12, %rd17, %rd45;
	.loc	1 53 37                         // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:53:37
	mov.b32 	%r12, %f5;
	mov.b32 	%r13, %f6;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r12, %r13 };
	// end inline asm
	.loc	1 53 4                          // ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py:53:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tp/ctpkr4aklheogd7tcdqxohd43p3ebbd7ctw6btiiqie3wyvhmn4p.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 112
.b8 107
.b8 114
.b8 52
.b8 97
.b8 107
.b8 108
.b8 104
.b8 101
.b8 111
.b8 103
.b8 100
.b8 55
.b8 116
.b8 99
.b8 100
.b8 113
.b8 120
.b8 111
.b8 104
.b8 100
.b8 52
.b8 51
.b8 112
.b8 51
.b8 101
.b8 98
.b8 98
.b8 100
.b8 55
.b8 99
.b8 116
.b8 119
.b8 54
.b8 98
.b8 116
.b8 105
.b8 105
.b8 113
.b8 105
.b8 101
.b8 51
.b8 119
.b8 121
.b8 118
.b8 104
.b8 109
.b8 110
.b8 52
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
