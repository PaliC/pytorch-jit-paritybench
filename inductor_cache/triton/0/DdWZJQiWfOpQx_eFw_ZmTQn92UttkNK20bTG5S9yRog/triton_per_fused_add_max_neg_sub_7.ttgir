#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":40:67)
#loc35 = loc(callsite(#loc1 at #loc16))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_max_neg_sub_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0), %arg3: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc3)
    %2 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc4)
    %3 = tt.splat %2 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.load %3 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>, #blocked> loc(#loc5)
    %5 = arith.muli %0, %c1024_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.addi %1, %6 : tensor<1024xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc8)
    %10 = tt.load %9 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %1 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc10)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = tt.broadcast %4 : tensor<1xf32, #blocked> -> tensor<1024xf32, #blocked> loc(#loc12)
    %15 = arith.subf %14, %10 : tensor<1024xf32, #blocked> loc(#loc12)
    %16 = arith.addf %15, %13 : tensor<1024xf32, #blocked> loc(#loc13)
    %17 = arith.subf %cst, %16 : tensor<1024xf32, #blocked> loc(#loc14)
    %18:2 = "tt.reduce"(%17, %1) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc16)), %arg7: i32 loc(callsite(#loc1 at #loc16)), %arg8: f32 loc(callsite(#loc1 at #loc16)), %arg9: i32 loc(callsite(#loc1 at #loc16))):
      %23 = arith.cmpf ogt, %arg6, %arg8 : f32 loc(#loc50)
      %24 = arith.cmpf oeq, %arg6, %arg8 : f32 loc(#loc51)
      %25 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc52)
      %26 = arith.cmpf une, %arg8, %arg8 : f32 loc(#loc53)
      %27 = arith.xori %26, %true : i1 loc(#loc54)
      %28 = arith.andi %25, %27 : i1 loc(#loc55)
      %29 = arith.ori %23, %28 : i1 loc(#loc56)
      %30 = arith.andi %25, %26 : i1 loc(#loc57)
      %31 = arith.ori %24, %30 : i1 loc(#loc58)
      %32 = arith.cmpi slt, %arg7, %arg9 : i32 loc(#loc59)
      %33 = arith.andi %31, %32 : i1 loc(#loc60)
      %34 = arith.ori %29, %33 : i1 loc(#loc61)
      %35 = arith.select %34, %arg6, %arg8 : f32 loc(#loc62)
      %36 = arith.select %34, %arg7, %arg9 : i32 loc(#loc63)
      tt.reduce.return %35, %36 : f32, i32 loc(#loc34)
    }) : (tensor<1024xf32, #blocked>, tensor<1024xi32, #blocked>) -> (f32, i32) loc(#loc34)
    %19 = tt.addptr %arg3, %0 : !tt.ptr<i64>, i32 loc(#loc31)
    %20 = tt.splat %19 : !tt.ptr<i64> -> tensor<1x!tt.ptr<i64>, #blocked1> loc(#loc31)
    %21 = arith.extsi %18#1 : i32 to i64 loc(#loc32)
    %22 = tt.splat %21 : i64 -> tensor<1xi64, #blocked1> loc(#loc32)
    tt.store %20, %22 : tensor<1x!tt.ptr<i64>, #blocked1> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":24:28)
#loc3 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":27:26)
#loc4 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":32:30)
#loc5 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":32:35)
#loc6 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":33:40)
#loc7 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":33:35)
#loc8 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":33:30)
#loc9 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":33:45)
#loc10 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":34:30)
#loc11 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":34:35)
#loc12 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":35:18)
#loc13 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":36:18)
#loc14 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":37:12)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":152:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":153:23)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":155:29)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":156:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:32)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:28)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:29)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:17)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:31)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:21)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:12)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:35)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:69)
#loc31 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":42:25)
#loc32 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":42:36)
#loc33 = loc("inductor_cache/sq/csqsocghae66rej7x4rmykdmcqxoxznzebjlpczyns4z6r7a6cll.py":42:4)
#loc34 = loc(callsite(#loc15 at #loc16))
#loc36 = loc(callsite(#loc17 at #loc15))
#loc37 = loc(callsite(#loc18 at #loc15))
#loc38 = loc(callsite(#loc19 at #loc15))
#loc39 = loc(callsite(#loc20 at #loc15))
#loc40 = loc(callsite(#loc21 at #loc15))
#loc41 = loc(callsite(#loc22 at #loc15))
#loc42 = loc(callsite(#loc23 at #loc15))
#loc43 = loc(callsite(#loc24 at #loc15))
#loc44 = loc(callsite(#loc25 at #loc15))
#loc45 = loc(callsite(#loc26 at #loc15))
#loc46 = loc(callsite(#loc27 at #loc15))
#loc47 = loc(callsite(#loc28 at #loc15))
#loc48 = loc(callsite(#loc29 at #loc15))
#loc49 = loc(callsite(#loc30 at #loc15))
#loc50 = loc(callsite(#loc36 at #loc16))
#loc51 = loc(callsite(#loc37 at #loc16))
#loc52 = loc(callsite(#loc38 at #loc16))
#loc53 = loc(callsite(#loc39 at #loc16))
#loc54 = loc(callsite(#loc40 at #loc16))
#loc55 = loc(callsite(#loc41 at #loc16))
#loc56 = loc(callsite(#loc42 at #loc16))
#loc57 = loc(callsite(#loc43 at #loc16))
#loc58 = loc(callsite(#loc44 at #loc16))
#loc59 = loc(callsite(#loc45 at #loc16))
#loc60 = loc(callsite(#loc46 at #loc16))
#loc61 = loc(callsite(#loc47 at #loc16))
#loc62 = loc(callsite(#loc48 at #loc16))
#loc63 = loc(callsite(#loc49 at #loc16))
