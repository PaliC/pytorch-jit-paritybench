; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 2, !dbg !14
  %11 = mul i32 %10, 2, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = srem i32 %10, 2, !dbg !16
  %13 = sdiv i32 %9, 4, !dbg !17
  %.frozen1 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen1, 4096, !dbg !18
  %15 = mul i32 %14, 4096, !dbg !19
  %.decomposed2 = sub i32 %.frozen1, %15, !dbg !19
  %16 = shl nsw i32 %.decomposed, 1, !dbg !20
  %17 = mul nsw i32 %12, 12, !dbg !21
  %18 = mul i32 %13, 36, !dbg !22
  %19 = add i32 %17, %18, !dbg !23
  %20 = add i32 %19, %16, !dbg !24
  %21 = sext i32 %20 to i64, !dbg !25
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !25
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !26
  %24 = bitcast i32 %23 to float, !dbg !26
  %25 = or disjoint i32 %19, 1, !dbg !27
  %26 = add i32 %25, %16, !dbg !28
  %27 = sext i32 %26 to i64, !dbg !29
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !29
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !30
  %30 = bitcast i32 %29 to float, !dbg !30
  %31 = or disjoint i32 %19, 2, !dbg !31
  %32 = add i32 %31, %16, !dbg !32
  %33 = sext i32 %32 to i64, !dbg !33
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !33
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !34
  %36 = bitcast i32 %35 to float, !dbg !34
  %37 = add i32 %19, 6, !dbg !35
  %38 = add i32 %37, %16, !dbg !36
  %39 = sext i32 %38 to i64, !dbg !37
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !37
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !38
  %42 = bitcast i32 %41 to float, !dbg !38
  %43 = add i32 %19, 7, !dbg !39
  %44 = add i32 %43, %16, !dbg !40
  %45 = sext i32 %44 to i64, !dbg !41
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !41
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !42
  %48 = bitcast i32 %47 to float, !dbg !42
  %49 = add i32 %19, 8, !dbg !43
  %50 = add i32 %49, %16, !dbg !44
  %51 = sext i32 %50 to i64, !dbg !45
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !45
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !46
  %54 = bitcast i32 %53 to float, !dbg !46
  %55 = add i32 %19, 12, !dbg !47
  %56 = add i32 %55, %16, !dbg !48
  %57 = sext i32 %56 to i64, !dbg !49
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !49
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !50
  %60 = bitcast i32 %59 to float, !dbg !50
  %61 = add i32 %19, 13, !dbg !51
  %62 = add i32 %61, %16, !dbg !52
  %63 = sext i32 %62 to i64, !dbg !53
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !53
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 true) #1, !dbg !54
  %66 = bitcast i32 %65 to float, !dbg !54
  %67 = add i32 %19, 14, !dbg !55
  %68 = add i32 %67, %16, !dbg !56
  %69 = sext i32 %68 to i64, !dbg !57
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !57
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 true) #1, !dbg !58
  %72 = bitcast i32 %71 to float, !dbg !58
  %73 = fcmp ogt float %30, %24, !dbg !59
  %74 = fcmp uno float %30, 0.000000e+00, !dbg !63
  %75 = or i1 %73, %74, !dbg !64
  %76 = select i1 %75, float %30, float %24, !dbg !65
  %77 = fcmp olt float %76, %36, !dbg !66
  %78 = fcmp uno float %36, 0.000000e+00, !dbg !68
  %79 = or i1 %78, %77, !dbg !69
  %80 = select i1 %79, float %36, float %76, !dbg !70
  %81 = fcmp olt float %80, %42, !dbg !71
  %82 = fcmp uno float %42, 0.000000e+00, !dbg !73
  %83 = or i1 %82, %81, !dbg !74
  %84 = select i1 %83, float %42, float %80, !dbg !75
  %85 = fcmp olt float %84, %48, !dbg !76
  %86 = fcmp uno float %48, 0.000000e+00, !dbg !78
  %87 = or i1 %86, %85, !dbg !79
  %88 = select i1 %87, float %48, float %84, !dbg !80
  %89 = fcmp olt float %88, %54, !dbg !81
  %90 = fcmp uno float %54, 0.000000e+00, !dbg !83
  %91 = or i1 %90, %89, !dbg !84
  %92 = select i1 %91, float %54, float %88, !dbg !85
  %93 = fcmp olt float %92, %60, !dbg !86
  %94 = fcmp uno float %60, 0.000000e+00, !dbg !88
  %95 = or i1 %94, %93, !dbg !89
  %96 = select i1 %95, float %60, float %92, !dbg !90
  %97 = fcmp olt float %96, %66, !dbg !91
  %98 = fcmp uno float %66, 0.000000e+00, !dbg !93
  %99 = or i1 %98, %97, !dbg !94
  %100 = select i1 %99, float %66, float %96, !dbg !95
  %101 = fcmp olt float %100, %72, !dbg !96
  %102 = fcmp uno float %72, 0.000000e+00, !dbg !98
  %103 = or i1 %102, %101, !dbg !99
  %104 = zext i1 %73 to i8, !dbg !100
  %105 = select i1 %77, i8 2, i8 %104, !dbg !101
  %106 = select i1 %81, i8 3, i8 %105, !dbg !102
  %107 = select i1 %85, i8 4, i8 %106, !dbg !103
  %108 = select i1 %89, i8 5, i8 %107, !dbg !104
  %109 = select i1 %93, i8 6, i8 %108, !dbg !105
  %110 = select i1 %97, i8 7, i8 %109, !dbg !106
  %111 = select i1 %101, i8 8, i8 %110, !dbg !107
  %112 = mul i32 %14, 6144, !dbg !108
  %113 = add i32 %112, %.decomposed2, !dbg !109
  %114 = sext i32 %113 to i64, !dbg !110
  %115 = getelementptr float, ptr addrspace(1) %1, i64 %114, !dbg !110
  %116 = bitcast float %100 to i32, !dbg !111
  %117 = select i1 %103, i32 %71, i32 %116, !dbg !112
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %117, ptr addrspace(1) %115, i1 true) #1, !dbg !111
  %118 = sext i32 %9 to i64, !dbg !113
  %119 = getelementptr i8, ptr addrspace(1) %2, i64 %118, !dbg !113
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %111, ptr addrspace(1) %119, i1 true) #1, !dbg !114
  ret void, !dbg !115
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ci34orjsnf45xepm5xxy3svymu6oexbbzz36dthh4vtjmg6ynzif.py", directory: "inductor_cache/i3")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_24", linkageName: "triton_poi_fused_max_pool2d_with_indices_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 32, scope: !7)
!21 = !DILocation(line: 30, column: 40, scope: !7)
!22 = !DILocation(line: 30, column: 48, scope: !7)
!23 = !DILocation(line: 30, column: 37, scope: !7)
!24 = !DILocation(line: 30, column: 45, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 53, scope: !7)
!27 = !DILocation(line: 31, column: 41, scope: !7)
!28 = !DILocation(line: 31, column: 49, scope: !7)
!29 = !DILocation(line: 31, column: 30, scope: !7)
!30 = !DILocation(line: 31, column: 57, scope: !7)
!31 = !DILocation(line: 32, column: 41, scope: !7)
!32 = !DILocation(line: 32, column: 49, scope: !7)
!33 = !DILocation(line: 32, column: 30, scope: !7)
!34 = !DILocation(line: 32, column: 57, scope: !7)
!35 = !DILocation(line: 33, column: 41, scope: !7)
!36 = !DILocation(line: 33, column: 49, scope: !7)
!37 = !DILocation(line: 33, column: 30, scope: !7)
!38 = !DILocation(line: 33, column: 57, scope: !7)
!39 = !DILocation(line: 34, column: 41, scope: !7)
!40 = !DILocation(line: 34, column: 49, scope: !7)
!41 = !DILocation(line: 34, column: 30, scope: !7)
!42 = !DILocation(line: 34, column: 57, scope: !7)
!43 = !DILocation(line: 35, column: 41, scope: !7)
!44 = !DILocation(line: 35, column: 49, scope: !7)
!45 = !DILocation(line: 35, column: 30, scope: !7)
!46 = !DILocation(line: 35, column: 57, scope: !7)
!47 = !DILocation(line: 36, column: 43, scope: !7)
!48 = !DILocation(line: 36, column: 51, scope: !7)
!49 = !DILocation(line: 36, column: 31, scope: !7)
!50 = !DILocation(line: 36, column: 59, scope: !7)
!51 = !DILocation(line: 37, column: 43, scope: !7)
!52 = !DILocation(line: 37, column: 51, scope: !7)
!53 = !DILocation(line: 37, column: 31, scope: !7)
!54 = !DILocation(line: 37, column: 59, scope: !7)
!55 = !DILocation(line: 38, column: 43, scope: !7)
!56 = !DILocation(line: 38, column: 51, scope: !7)
!57 = !DILocation(line: 38, column: 31, scope: !7)
!58 = !DILocation(line: 38, column: 59, scope: !7)
!59 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !62)
!60 = distinct !DILexicalBlockFile(scope: !7, file: !61, discriminator: 0)
!61 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!62 = !DILocation(line: 39, column: 40, scope: !7)
!63 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !62)
!64 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !62)
!65 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !62)
!66 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !67)
!67 = !DILocation(line: 40, column: 40, scope: !7)
!68 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !67)
!69 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !67)
!70 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !67)
!71 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !72)
!72 = !DILocation(line: 41, column: 40, scope: !7)
!73 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !72)
!74 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !72)
!75 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !72)
!76 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !77)
!77 = !DILocation(line: 42, column: 40, scope: !7)
!78 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !77)
!79 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !77)
!80 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !77)
!81 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !82)
!82 = !DILocation(line: 43, column: 41, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !82)
!86 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !87)
!87 = !DILocation(line: 44, column: 42, scope: !7)
!88 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !87)
!89 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !87)
!90 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !87)
!91 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !92)
!92 = !DILocation(line: 45, column: 42, scope: !7)
!93 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !92)
!94 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !92)
!95 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !92)
!96 = !DILocation(line: 118, column: 15, scope: !60, inlinedAt: !97)
!97 = !DILocation(line: 46, column: 42, scope: !7)
!98 = !DILocation(line: 120, column: 21, scope: !60, inlinedAt: !97)
!99 = !DILocation(line: 120, column: 16, scope: !60, inlinedAt: !97)
!100 = !DILocation(line: 50, column: 35, scope: !7)
!101 = !DILocation(line: 53, column: 35, scope: !7)
!102 = !DILocation(line: 56, column: 35, scope: !7)
!103 = !DILocation(line: 59, column: 35, scope: !7)
!104 = !DILocation(line: 62, column: 35, scope: !7)
!105 = !DILocation(line: 65, column: 35, scope: !7)
!106 = !DILocation(line: 68, column: 35, scope: !7)
!107 = !DILocation(line: 71, column: 35, scope: !7)
!108 = !DILocation(line: 72, column: 35, scope: !7)
!109 = !DILocation(line: 72, column: 30, scope: !7)
!110 = !DILocation(line: 72, column: 25, scope: !7)
!111 = !DILocation(line: 72, column: 47, scope: !7)
!112 = !DILocation(line: 121, column: 29, scope: !60, inlinedAt: !97)
!113 = !DILocation(line: 73, column: 25, scope: !7)
!114 = !DILocation(line: 73, column: 37, scope: !7)
!115 = !DILocation(line: 73, column: 4, scope: !7)
