; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = srem i32 %12, 256, !dbg !14
  %14 = sdiv i32 %11, 256, !dbg !15
  %15 = sdiv i32 %11, 65536, !dbg !16
  %.lhs.trunc = trunc nsw i32 %15 to i16, !dbg !17
  %16 = srem i16 %.lhs.trunc, 3, !dbg !17
  %.sext = sext i16 %16 to i32, !dbg !17
  %.lhs.trunc5 = trunc nsw i32 %13 to i16, !dbg !18
  %.lhs.trunc5.frozen = freeze i16 %.lhs.trunc5, !dbg !19
  %17 = sdiv i16 %.lhs.trunc5.frozen, 4, !dbg !19
  %18 = mul i16 %17, 4, !dbg !18
  %.decomposed = sub i16 %.lhs.trunc5.frozen, %18, !dbg !18
  %.sext6 = sext i16 %.decomposed to i32, !dbg !18
  %19 = shl nsw i32 %.sext6, 12, !dbg !20
  %20 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !14
  %21 = insertelement <2 x i32> %20, i32 %14, i64 1, !dbg !14
  %22 = srem <2 x i32> %21, splat (i32 256), !dbg !14
  %23 = extractelement <2 x i32> %22, i64 1, !dbg !14
  %24 = extractelement <2 x i32> %22, i64 0, !dbg !14
  %.lhs.trunc1 = trunc nsw i32 %23 to i16, !dbg !21
  %25 = trunc nsw <2 x i32> %22 to <2 x i16>, !dbg !18
  %.lhs.trunc3 = trunc nsw i32 %24 to i16, !dbg !18
  %26 = sdiv i16 %.lhs.trunc1, 4, !dbg !21
  %.sext2 = sext i16 %26 to i32, !dbg !21
  %27 = shl nsw i32 %.sext2, 6, !dbg !22
  %28 = srem <2 x i16> %25, splat (i16 4), !dbg !18
  %29 = sext <2 x i16> %28 to <2 x i32>, !dbg !18
  %30 = shl nsw <2 x i32> %29, <i32 12, i32 14>, !dbg !20
  %31 = shl nsw i32 %15, 16, !dbg !23
  %32 = sdiv i16 %.lhs.trunc3, 4, !dbg !19
  %.sext10 = sext i16 %32 to i32, !dbg !19
  %.sext12 = sext i16 %17 to i32, !dbg !19
  %33 = add i32 %27, %31, !dbg !24
  %34 = add i32 %33, %.sext10, !dbg !25
  %35 = extractelement <2 x i32> %30, i64 0, !dbg !26
  %36 = add i32 %34, %35, !dbg !26
  %37 = extractelement <2 x i32> %30, i64 1, !dbg !27
  %38 = add i32 %36, %37, !dbg !27
  %39 = add i32 %33, %.sext12, !dbg !25
  %40 = add i32 %39, %19, !dbg !26
  %41 = add i32 %40, %37, !dbg !27
  %42 = sext i32 %38 to i64, !dbg !28
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !28
  %44 = sext i32 %41 to i64, !dbg !28
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !28
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !29
  %47 = bitcast i32 %46 to float, !dbg !29
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = extractelement <2 x i32> %29, i64 1, !dbg !30
  %51 = shl nsw i32 %50, 2, !dbg !30
  %52 = shl nsw i32 %.sext, 4, !dbg !31
  %53 = add nsw i32 %51, %52, !dbg !32
  %54 = extractelement <2 x i32> %29, i64 0, !dbg !33
  %55 = add nsw i32 %53, %54, !dbg !33
  %56 = add nsw i32 %53, %.sext6, !dbg !33
  %57 = sext i32 %55 to i64, !dbg !34
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !34
  %59 = sext i32 %56 to i64, !dbg !34
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !34
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #1, !dbg !35
  %62 = bitcast i32 %61 to float, !dbg !35
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 true) #1, !dbg !35
  %64 = bitcast i32 %63 to float, !dbg !35
  %65 = fadd float %47, %62, !dbg !36
  %66 = fadd float %49, %64, !dbg !36
  %67 = sitofp i32 %23 to float, !dbg !37
  %68 = fmul float %67, 2.500000e-01, !dbg !38
  %69 = fptosi float %68 to i32, !dbg !39
  %70 = sitofp i32 %24 to float, !dbg !40
  %71 = sitofp i32 %13 to float, !dbg !40
  %72 = fmul float %70, 2.500000e-01, !dbg !41
  %73 = fmul float %71, 2.500000e-01, !dbg !41
  %74 = fptosi float %72 to i32, !dbg !42
  %75 = fptosi float %73 to i32, !dbg !42
  %76 = shl i32 %69, 6, !dbg !43
  %77 = shl nsw i32 %15, 12, !dbg !44
  %78 = add i32 %76, %77, !dbg !45
  %79 = add i32 %78, %74, !dbg !46
  %80 = add i32 %78, %75, !dbg !46
  %81 = sext i32 %79 to i64, !dbg !47
  %82 = getelementptr float, ptr addrspace(1) %2, i64 %81, !dbg !47
  %83 = sext i32 %80 to i64, !dbg !47
  %84 = getelementptr float, ptr addrspace(1) %2, i64 %83, !dbg !47
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 true) #1, !dbg !48
  %86 = bitcast i32 %85 to float, !dbg !48
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 true) #1, !dbg !48
  %88 = bitcast i32 %87 to float, !dbg !48
  %89 = fadd float %65, %86, !dbg !49
  %90 = fadd float %66, %88, !dbg !49
  %91 = sext i32 %11 to i64, !dbg !50
  %92 = getelementptr float, ptr addrspace(1) %3, i64 %91, !dbg !50
  %93 = bitcast float %89 to i32, !dbg !51
  %94 = bitcast float %90 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %93, i32 %94, ptr addrspace(1) %92, i1 true) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cif4wrfhoewrzmmzbv7ovqbrp6lxm7okp2v7vkmjalr7spsbtein.py", directory: "inductor_cache/if")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_1, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_1", linkageName: "triton_poi_fused__unsafe_index_add_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 29, column: 57, scope: !7)
!19 = !DILocation(line: 29, column: 100, scope: !7)
!20 = !DILocation(line: 29, column: 52, scope: !7)
!21 = !DILocation(line: 29, column: 40, scope: !7)
!22 = !DILocation(line: 29, column: 34, scope: !7)
!23 = !DILocation(line: 29, column: 88, scope: !7)
!24 = !DILocation(line: 29, column: 45, scope: !7)
!25 = !DILocation(line: 29, column: 63, scope: !7)
!26 = !DILocation(line: 29, column: 82, scope: !7)
!27 = !DILocation(line: 29, column: 94, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 105, scope: !7)
!30 = !DILocation(line: 30, column: 34, scope: !7)
!31 = !DILocation(line: 30, column: 48, scope: !7)
!32 = !DILocation(line: 30, column: 45, scope: !7)
!33 = !DILocation(line: 30, column: 55, scope: !7)
!34 = !DILocation(line: 30, column: 30, scope: !7)
!35 = !DILocation(line: 30, column: 66, scope: !7)
!36 = !DILocation(line: 31, column: 18, scope: !7)
!37 = !DILocation(line: 33, column: 19, scope: !7)
!38 = !DILocation(line: 35, column: 18, scope: !7)
!39 = !DILocation(line: 36, column: 19, scope: !7)
!40 = !DILocation(line: 38, column: 19, scope: !7)
!41 = !DILocation(line: 39, column: 19, scope: !7)
!42 = !DILocation(line: 40, column: 21, scope: !7)
!43 = !DILocation(line: 41, column: 42, scope: !7)
!44 = !DILocation(line: 41, column: 54, scope: !7)
!45 = !DILocation(line: 41, column: 39, scope: !7)
!46 = !DILocation(line: 41, column: 49, scope: !7)
!47 = !DILocation(line: 41, column: 31, scope: !7)
!48 = !DILocation(line: 41, column: 59, scope: !7)
!49 = !DILocation(line: 42, column: 19, scope: !7)
!50 = !DILocation(line: 43, column: 25, scope: !7)
!51 = !DILocation(line: 43, column: 37, scope: !7)
!52 = !DILocation(line: 43, column: 4, scope: !7)
