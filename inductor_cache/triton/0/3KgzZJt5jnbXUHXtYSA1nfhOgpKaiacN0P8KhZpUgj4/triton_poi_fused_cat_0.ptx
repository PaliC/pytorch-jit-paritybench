//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u32 triton_poi_fused_cat_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:21:33
	shl.b32 	%r19, %r1, 7;
	.loc	1 22 36                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:23:21
	setp.lt.s32 	%p17, %r22, 256;
	.loc	1 24 21                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:24:21
	bfe.s32 	%r23, %r1, 24, 1;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r22, %r24;
	shr.s32 	%r26, %r25, 2;
	.loc	1 24 26                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:24:26
	shr.s32 	%r27, %r25, 31;
	shr.u32 	%r28, %r27, 28;
	add.s32 	%r29, %r26, %r28;
	and.b32  	%r30, %r29, -16;
	sub.s32 	%r31, %r26, %r30;
	.loc	1 26 19                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:26:19
	shr.s32 	%r33, %r22, 31;
	shr.u32 	%r34, %r33, 26;
	add.s32 	%r35, %r22, %r34;
	shr.s32 	%r36, %r35, 6;
	.loc	1 32 18                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:32:18
	setp.lt.s32 	%p18, %r31, 2;
	.loc	1 33 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:35
	and.b32  	%r37, %r35, -64;
	sub.s32 	%r38, %r22, %r37;
	.loc	1 33 47                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:47
	shl.b32 	%r39, %r36, 4;
	.loc	1 33 44                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:44
	add.s32 	%r40, %r39, %r38;
	.loc	1 33 30                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:30
	mul.wide.s32 	%rd12, %r40, 4;
	add.s64 	%rd1, %rd10, %rd12;
	.loc	1 33 59                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:59
	and.pred  	%p1, %p17, %p18;
	mov.b32 	%r3, 0;
	.loc	1 33 52                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:33:52
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 37 18                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:37:18
	and.b32  	%r41, %r31, -2;
	setp.eq.s32 	%p19, %r41, 2;
	.loc	1 38 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:38:31
	add.s64 	%rd2, %rd1, 224;
	.loc	1 38 72                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:38:72
	and.pred  	%p3, %p17, %p19;
	.loc	1 38 65                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:38:65
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 42 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:42:20
	setp.eq.s32 	%p20, %r41, 4;
	.loc	1 43 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:43:31
	add.s64 	%rd3, %rd1, 448;
	.loc	1 43 74                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:43:74
	and.pred  	%p5, %p17, %p20;
	.loc	1 43 66                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:43:66
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	.loc	1 47 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:47:20
	setp.eq.s32 	%p21, %r41, 6;
	.loc	1 48 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:48:31
	add.s64 	%rd4, %rd1, 672;
	.loc	1 48 74                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:48:74
	and.pred  	%p7, %p17, %p21;
	.loc	1 48 66                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:48:66
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 52 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:52:20
	setp.eq.s32 	%p22, %r41, 8;
	.loc	1 53 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:53:31
	add.s64 	%rd5, %rd1, -96;
	.loc	1 53 72                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:53:72
	and.pred  	%p9, %p17, %p22;
	.loc	1 53 64                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:53:64
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	.loc	1 57 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:57:20
	setp.eq.s32 	%p23, %r41, 10;
	.loc	1 58 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:58:31
	add.s64 	%rd6, %rd1, 128;
	.loc	1 58 74                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:58:74
	and.pred  	%p11, %p17, %p23;
	.loc	1 58 66                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:58:66
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 62 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:62:20
	setp.eq.s32 	%p24, %r41, 12;
	.loc	1 63 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:63:31
	add.s64 	%rd7, %rd1, 352;
	.loc	1 63 75                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:63:75
	and.pred  	%p13, %p17, %p24;
	.loc	1 63 67                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:63:67
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	.loc	1 64 20                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:64:20
	setp.gt.s32 	%p25, %r31, 13;
	.loc	1 67 31                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:67:31
	add.s64 	%rd8, %rd1, 576;
	.loc	1 67 75                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:67:75
	and.pred  	%p15, %p17, %p25;
	.loc	1 67 67                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:67:67
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p15 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 68 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:68:35
	selp.b32 	%r42, %r14, %r16, %p24;
	.loc	1 69 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:69:35
	selp.b32 	%r43, %r12, %r42, %p23;
	.loc	1 70 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:70:35
	selp.b32 	%r44, %r10, %r43, %p22;
	.loc	1 71 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:71:35
	selp.b32 	%r45, %r8, %r44, %p21;
	.loc	1 72 35                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:72:35
	selp.b32 	%r46, %r6, %r45, %p20;
	.loc	1 73 34                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:73:34
	selp.b32 	%r47, %r4, %r46, %p19;
	.loc	1 74 33                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:74:33
	selp.b32 	%r18, %r2, %r47, %p18;
	.loc	1 75 25                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:75:25
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd9, %rd11, %rd13;
	.loc	1 75 37                         // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:75:37
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 75 4                          // cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py:75:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nk/cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 107
.b8 115
.b8 117
.b8 120
.b8 122
.b8 109
.b8 103
.b8 118
.b8 112
.b8 109
.b8 120
.b8 108
.b8 113
.b8 104
.b8 112
.b8 98
.b8 101
.b8 112
.b8 51
.b8 53
.b8 55
.b8 106
.b8 112
.b8 55
.b8 55
.b8 100
.b8 112
.b8 120
.b8 55
.b8 113
.b8 98
.b8 115
.b8 104
.b8 112
.b8 105
.b8 104
.b8 105
.b8 115
.b8 118
.b8 107
.b8 53
.b8 113
.b8 104
.b8 121
.b8 109
.b8 51
.b8 122
.b8 115
.b8 122
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
