; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = srem i32 %10, 16, !dbg !16
  %.frozen = freeze i32 %8, !dbg !17
  %12 = sdiv i32 %.frozen, 64, !dbg !17
  %13 = icmp slt i32 %11, 2, !dbg !18
  %14 = mul i32 %12, 64, !dbg !19
  %srem.decomposed = sub i32 %.frozen, %14, !dbg !19
  %15 = shl nsw i32 %12, 4, !dbg !20
  %16 = add nsw i32 %15, %srem.decomposed, !dbg !21
  %17 = sext i32 %16 to i64, !dbg !22
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !22
  %19 = and i1 %9, %13, !dbg !23
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %19, i32 0, i1 %19) #1, !dbg !24
  %21 = and i32 %11, -2, !dbg !25
  %22 = icmp eq i32 %21, 2, !dbg !25
  %23 = getelementptr i8, ptr addrspace(1) %18, i64 224, !dbg !26
  %24 = and i1 %9, %22, !dbg !27
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %24, i32 0, i1 %24) #1, !dbg !28
  %26 = icmp eq i32 %21, 4, !dbg !29
  %27 = getelementptr i8, ptr addrspace(1) %18, i64 448, !dbg !30
  %28 = and i1 %9, %26, !dbg !31
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !32
  %30 = icmp eq i32 %21, 6, !dbg !33
  %31 = getelementptr i8, ptr addrspace(1) %18, i64 672, !dbg !34
  %32 = and i1 %9, %30, !dbg !35
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %32, i32 0, i1 %32) #1, !dbg !36
  %34 = icmp eq i32 %21, 8, !dbg !37
  %35 = getelementptr i8, ptr addrspace(1) %18, i64 -96, !dbg !38
  %36 = and i1 %9, %34, !dbg !39
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #1, !dbg !40
  %38 = icmp eq i32 %21, 10, !dbg !41
  %39 = getelementptr i8, ptr addrspace(1) %18, i64 128, !dbg !42
  %40 = and i1 %9, %38, !dbg !43
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40) #1, !dbg !44
  %42 = icmp eq i32 %21, 12, !dbg !45
  %43 = getelementptr i8, ptr addrspace(1) %18, i64 352, !dbg !46
  %44 = and i1 %9, %42, !dbg !47
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %44, i32 0, i1 %44) #1, !dbg !48
  %46 = icmp sgt i32 %11, 13, !dbg !49
  %47 = getelementptr i8, ptr addrspace(1) %18, i64 576, !dbg !50
  %48 = and i1 %9, %46, !dbg !51
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48) #1, !dbg !52
  %.v = select i1 %42, i32 %45, i32 %49, !dbg !53
  %.v8 = select i1 %38, i32 %41, i32 %.v, !dbg !54
  %.v9 = select i1 %34, i32 %37, i32 %.v8, !dbg !55
  %.v10 = select i1 %30, i32 %33, i32 %.v9, !dbg !56
  %.v11 = select i1 %26, i32 %29, i32 %.v10, !dbg !57
  %.v12 = select i1 %22, i32 %25, i32 %.v11, !dbg !58
  %.v13 = select i1 %13, i32 %20, i32 %.v12, !dbg !59
  %50 = sext i32 %8 to i64, !dbg !60
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !60
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v13, ptr addrspace(1) %51, i1 %9) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnksuxzmgvpmxlqhpbep357jp77dpx7qbshpihisvk5qhym3zsz3.py", directory: "inductor_cache/nk")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 47, scope: !7)
!21 = !DILocation(line: 33, column: 44, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 59, scope: !7)
!24 = !DILocation(line: 33, column: 52, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 31, scope: !7)
!27 = !DILocation(line: 38, column: 72, scope: !7)
!28 = !DILocation(line: 38, column: 65, scope: !7)
!29 = !DILocation(line: 42, column: 20, scope: !7)
!30 = !DILocation(line: 43, column: 31, scope: !7)
!31 = !DILocation(line: 43, column: 74, scope: !7)
!32 = !DILocation(line: 43, column: 66, scope: !7)
!33 = !DILocation(line: 47, column: 20, scope: !7)
!34 = !DILocation(line: 48, column: 31, scope: !7)
!35 = !DILocation(line: 48, column: 74, scope: !7)
!36 = !DILocation(line: 48, column: 66, scope: !7)
!37 = !DILocation(line: 52, column: 20, scope: !7)
!38 = !DILocation(line: 53, column: 31, scope: !7)
!39 = !DILocation(line: 53, column: 72, scope: !7)
!40 = !DILocation(line: 53, column: 64, scope: !7)
!41 = !DILocation(line: 57, column: 20, scope: !7)
!42 = !DILocation(line: 58, column: 31, scope: !7)
!43 = !DILocation(line: 58, column: 74, scope: !7)
!44 = !DILocation(line: 58, column: 66, scope: !7)
!45 = !DILocation(line: 62, column: 20, scope: !7)
!46 = !DILocation(line: 63, column: 31, scope: !7)
!47 = !DILocation(line: 63, column: 75, scope: !7)
!48 = !DILocation(line: 63, column: 67, scope: !7)
!49 = !DILocation(line: 64, column: 20, scope: !7)
!50 = !DILocation(line: 67, column: 31, scope: !7)
!51 = !DILocation(line: 67, column: 75, scope: !7)
!52 = !DILocation(line: 67, column: 67, scope: !7)
!53 = !DILocation(line: 68, column: 35, scope: !7)
!54 = !DILocation(line: 69, column: 35, scope: !7)
!55 = !DILocation(line: 70, column: 35, scope: !7)
!56 = !DILocation(line: 71, column: 35, scope: !7)
!57 = !DILocation(line: 72, column: 35, scope: !7)
!58 = !DILocation(line: 73, column: 34, scope: !7)
!59 = !DILocation(line: 74, column: 33, scope: !7)
!60 = !DILocation(line: 75, column: 25, scope: !7)
!61 = !DILocation(line: 75, column: 37, scope: !7)
!62 = !DILocation(line: 75, column: 4, scope: !7)
