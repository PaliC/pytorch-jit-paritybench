//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0 // -- Begin function triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0
.visible .entry triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<56>;
	.reg .f32 	%f<52>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd1, [triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_0];
	mov.pred 	%p1, -1;
$L__tmp0:
	.loc	1 24 19                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:24:19
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.b32 { %r18 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd2, [triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_1];
	ld.param.u64 	%rd3, [triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_2];
	.loc	1 26 19                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:26:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd4, [triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_3];
	mov.b32 	%f1, %r2;
	ld.param.u64 	%rd17, [triton_poi_fused_abs_add_div_mul_reciprocal_sqrt_sub_sum_0_param_4];
	.loc	1 28 19                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:28:19
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.b32 { %r21 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:30:20
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 32 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:32:31
	add.s64 	%rd5, %rd1, 4;
	.loc	1 32 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:32:20
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.b32 { %r27 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:34:31
	add.s64 	%rd6, %rd2, 4;
	.loc	1 34 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:34:20
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	.loc	1 36 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:36:31
	add.s64 	%rd7, %rd3, 4;
	.loc	1 36 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:36:20
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.b32 { %r30 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:38:31
	add.s64 	%rd8, %rd4, 4;
	.loc	1 38 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:38:20
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 40 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:40:31
	add.s64 	%rd9, %rd1, 8;
	.loc	1 40 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:40:20
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.b32 { %r36 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 42 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:42:31
	add.s64 	%rd10, %rd2, 8;
	.loc	1 42 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:42:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r10;
	.loc	1 44 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:44:31
	add.s64 	%rd11, %rd3, 8;
	.loc	1 44 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:44:20
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.b32 { %r39 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 46 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:46:31
	add.s64 	%rd12, %rd4, 8;
	.loc	1 46 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:46:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r12;
	.loc	1 48 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:48:31
	add.s64 	%rd13, %rd1, 12;
	.loc	1 48 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:48:20
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p1 ld.global.b32 { %r45 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 50 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:50:31
	add.s64 	%rd14, %rd2, 12;
	.loc	1 50 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:50:20
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r14;
	.loc	1 52 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:52:31
	add.s64 	%rd15, %rd3, 12;
	.loc	1 52 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:52:20
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p1 ld.global.b32 { %r48 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 54 31                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:54:31
	add.s64 	%rd16, %rd4, 12;
	.loc	1 54 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:54:20
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 57 18                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:57:18
	add.f32 	%f9, %f1, 0f3727C5AC;
	.loc	1 58 26                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:58:26
	sqrt.approx.ftz.f32 	%f10, %f9;
	.loc	1 59 18                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:59:18
	mov.b32 	%r19, %f10;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f11, %r17;
	.loc	1 60 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:60:20
	add.f32 	%f12, %f2, 0f3727C5AC;
	.loc	1 61 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:61:27
	sqrt.approx.ftz.f32 	%f13, %f12;
	.loc	1 62 19                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:62:19
	mov.b32 	%r22, %f13;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f14, %r20;
	.loc	1 63 19                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:63:19
	sub.f32 	%f15, %f11, %f14;
	.loc	1 64 24                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:64:24
	abs.f32 	%f16, %f15;
	.loc	1 66 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:66:20
	add.f32 	%f17, %f16, 0f3F800000;
	.loc	1 68 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:68:20
	mov.b32 	%r25, %f17;
	mov.b32 	%r24, 1065353216;
	// begin inline asm
	div.full.f32 %r23, %r24, %r25;
	// end inline asm
	mov.b32 	%f18, %r23;
	.loc	1 70 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:70:20
	add.f32 	%f19, %f3, 0f3727C5AC;
	.loc	1 71 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:71:27
	sqrt.approx.ftz.f32 	%f20, %f19;
	.loc	1 72 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:72:20
	mov.b32 	%r28, %f20;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f21, %r26;
	.loc	1 73 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:73:20
	add.f32 	%f22, %f4, 0f3727C5AC;
	.loc	1 74 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:74:27
	sqrt.approx.ftz.f32 	%f23, %f22;
	.loc	1 75 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:75:20
	mov.b32 	%r31, %f23;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f24, %r29;
	.loc	1 76 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:76:20
	sub.f32 	%f25, %f21, %f24;
	.loc	1 77 24                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:77:24
	abs.f32 	%f26, %f25;
	.loc	1 78 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:78:20
	add.f32 	%f27, %f26, 0f3F800000;
	.loc	1 79 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:79:20
	mov.b32 	%r34, %f27;
	// begin inline asm
	div.full.f32 %r32, %r24, %r34;
	// end inline asm
	mov.b32 	%f28, %r32;
	.loc	1 82 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:82:20
	add.f32 	%f29, %f5, 0f3727C5AC;
	.loc	1 83 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:83:27
	sqrt.approx.ftz.f32 	%f30, %f29;
	.loc	1 84 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:84:20
	mov.b32 	%r37, %f30;
	// begin inline asm
	div.full.f32 %r35, %r36, %r37;
	// end inline asm
	mov.b32 	%f31, %r35;
	.loc	1 85 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:85:20
	add.f32 	%f32, %f6, 0f3727C5AC;
	.loc	1 86 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:86:27
	sqrt.approx.ftz.f32 	%f33, %f32;
	.loc	1 87 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:87:20
	mov.b32 	%r40, %f33;
	// begin inline asm
	div.full.f32 %r38, %r39, %r40;
	// end inline asm
	mov.b32 	%f34, %r38;
	.loc	1 88 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:88:20
	sub.f32 	%f35, %f31, %f34;
	.loc	1 89 24                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:89:24
	abs.f32 	%f36, %f35;
	.loc	1 90 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:90:20
	add.f32 	%f37, %f36, 0f3F800000;
	.loc	1 91 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:91:20
	mov.b32 	%r43, %f37;
	// begin inline asm
	div.full.f32 %r41, %r24, %r43;
	// end inline asm
	mov.b32 	%f38, %r41;
	.loc	1 94 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:94:20
	add.f32 	%f39, %f7, 0f3727C5AC;
	.loc	1 95 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:95:27
	sqrt.approx.ftz.f32 	%f40, %f39;
	.loc	1 96 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:96:20
	mov.b32 	%r46, %f40;
	// begin inline asm
	div.full.f32 %r44, %r45, %r46;
	// end inline asm
	mov.b32 	%f41, %r44;
	.loc	1 97 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:97:20
	add.f32 	%f42, %f8, 0f3727C5AC;
	.loc	1 98 27                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:98:27
	sqrt.approx.ftz.f32 	%f43, %f42;
	.loc	1 81 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:81:20
	add.f32 	%f44, %f18, %f28;
	.loc	1 93 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:93:20
	add.f32 	%f45, %f44, %f38;
	.loc	1 99 20                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:99:20
	mov.b32 	%r49, %f43;
	// begin inline asm
	div.full.f32 %r47, %r48, %r49;
	// end inline asm
	mov.b32 	%f46, %r47;
	.loc	1 100 20                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:100:20
	sub.f32 	%f47, %f41, %f46;
	.loc	1 101 24                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:101:24
	abs.f32 	%f48, %f47;
	.loc	1 102 20                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:102:20
	add.f32 	%f49, %f48, 0f3F800000;
	.loc	1 103 20                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:103:20
	mov.b32 	%r52, %f49;
	// begin inline asm
	div.full.f32 %r50, %r24, %r52;
	// end inline asm
	mov.b32 	%f50, %r50;
	.loc	1 105 20                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:105:20
	add.f32 	%f51, %f45, %f50;
	.loc	1 106 65                        // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:106:65
	mov.u32 	%r54, %tid.x;
	and.b32  	%r55, %r54, 31;
	setp.eq.s32 	%p17, %r55, 0;
	mov.b32 	%r53, %f51;
	// begin inline asm
	@%p17 st.global.b32 [ %rd17 + 0 ], { %r53 };
	// end inline asm
	.loc	1 106 4                         // cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py:106:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bv/cbvirxij63zjh4hhj4vfztwfd6iipesbo34q4cnsf4td6e5fnnyy.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 118
.b8 105
.b8 114
.b8 120
.b8 105
.b8 106
.b8 54
.b8 51
.b8 122
.b8 106
.b8 104
.b8 52
.b8 104
.b8 104
.b8 106
.b8 52
.b8 118
.b8 102
.b8 122
.b8 116
.b8 119
.b8 102
.b8 100
.b8 54
.b8 105
.b8 105
.b8 112
.b8 101
.b8 115
.b8 98
.b8 111
.b8 51
.b8 52
.b8 113
.b8 52
.b8 99
.b8 110
.b8 115
.b8 102
.b8 52
.b8 116
.b8 100
.b8 54
.b8 101
.b8 53
.b8 102
.b8 110
.b8 110
.b8 121
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
