//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__log_softmax_mean_mul_sub_sum_3 // -- Begin function triton_per_fused__log_softmax_mean_mul_sub_sum_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__log_softmax_mean_mul_sub_sum_3
.visible .entry triton_per_fused__log_softmax_mean_mul_sub_sum_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_3,
	.param .u32 triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<75>;
	.reg .f32 	%f<150>;
	.reg .b64 	%rd<19>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_1];
	and.b32  	%r2, %r1, 31;
	ld.param.u64 	%rd15, [triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_2];
	shr.u32 	%r3, %r1, 5;
	ld.param.u64 	%rd16, [triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_3];
	.loc	1 30 32                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:30:32
	shl.b32 	%r18, %r1, 2;
	and.b32  	%r19, %r18, 252;
	.loc	1 30 30                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:30:30
	mul.wide.u32 	%rd17, %r19, 4;
	add.s64 	%rd2, %rd14, %rd17;
	mov.pred 	%p2, -1;
	.loc	1 30 37                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:30:37
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	.loc	1 31 30                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:31:30
	add.s64 	%rd3, %rd2, 4;
	.loc	1 31 41                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:31:41
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r7;
	.loc	1 32 30                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:32:30
	add.s64 	%rd4, %rd2, 8;
	.loc	1 32 41                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:32:41
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r8;
	.loc	1 33 30                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:33:30
	add.s64 	%rd5, %rd2, 12;
	.loc	1 33 41                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:33:41
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 34 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:34:31
	add.s64 	%rd6, %rd15, %rd17;
	.loc	1 34 38                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:34:38
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r10;
	.loc	1 35 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:35:31
	add.s64 	%rd7, %rd6, 4;
	.loc	1 35 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:35:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r11;
	.loc	1 36 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:36:31
	add.s64 	%rd8, %rd6, 8;
	.loc	1 36 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:36:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r12;
	.loc	1 37 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:37:31
	add.s64 	%rd9, %rd6, 12;
	.loc	1 37 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:37:42
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 38 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:38:31
	add.s64 	%rd10, %rd16, %rd17;
	.loc	1 38 38                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:38:38
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r14;
	.loc	1 39 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:39:31
	add.s64 	%rd11, %rd10, 4;
	.loc	1 39 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:39:42
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r15;
	.loc	1 40 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:40:31
	add.s64 	%rd12, %rd10, 8;
	.loc	1 40 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:40:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r16;
	.loc	1 41 31                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:41:31
	add.s64 	%rd13, %rd10, 12;
	.loc	1 41 42                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:41:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r17;
	.loc	1 42 23                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:42:23
	mul.f32 	%f23, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f22, %f23;
	// end inline asm
	.loc	1 43 23                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:43:23
	mul.f32 	%f25, %f2, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f24, %f25;
	// end inline asm
	.loc	1 44 18                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:44:18
	add.f32 	%f30, %f22, %f24;
	.loc	1 45 23                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:45:23
	mul.f32 	%f27, %f3, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f26, %f27;
	// end inline asm
	.loc	1 46 18                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:46:18
	add.f32 	%f31, %f30, %f26;
	.loc	1 47 23                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:47:23
	mul.f32 	%f29, %f4, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f28, %f29;
	// end inline asm
	.loc	1 48 19                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:48:19
	add.f32 	%f32, %f31, %f28;
	.loc	1 49 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:49:24
	setp.lt.f32 	%p14, %f32, 0f00800000;
	mul.f32 	%f33, %f32, 0f4B000000;
	selp.f32 	%f13, %f33, %f32, %p14;
	selp.f32 	%f34, 0fC1B80000, 0f00000000, %p14;
	mov.b32 	%r20, %f13;
	add.s32 	%r21, %r20, -1059760811;
	and.b32  	%r22, %r21, -8388608;
	sub.s32 	%r23, %r20, %r22;
	mov.b32 	%f35, %r23;
	cvt.rn.f32.s32 	%f36, %r22;
	mov.f32 	%f37, 0f34000000;
	fma.rn.ftz.f32 	%f38, %f36, %f37, %f34;
	add.f32 	%f39, %f35, 0fBF800000;
	mov.f32 	%f40, 0f3E1039F6;
	mov.f32 	%f41, 0fBE055027;
	fma.rn.ftz.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f44, %f42, %f39, %f43;
	mov.f32 	%f45, 0f3E0F2955;
	fma.rn.ftz.f32 	%f46, %f44, %f39, %f45;
	mov.f32 	%f47, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f48, %f46, %f39, %f47;
	mov.f32 	%f49, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f50, %f48, %f39, %f49;
	mov.f32 	%f51, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f52, %f50, %f39, %f51;
	mov.f32 	%f53, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f54, %f52, %f39, %f53;
	mov.f32 	%f55, 0fBF000000;
	fma.rn.ftz.f32 	%f56, %f54, %f39, %f55;
	mul.f32 	%f57, %f39, %f56;
	fma.rn.ftz.f32 	%f58, %f57, %f39, %f39;
	mov.f32 	%f59, 0f3F317218;
	fma.rn.ftz.f32 	%f148, %f38, %f59, %f58;
	setp.lt.u32 	%p15, %r20, 2139095040;
	mov.f32 	%f60, 0f7F800000;
	@%p15 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:0:24
	fma.rn.ftz.f32 	%f148, %f13, %f60, %f60;
$L__BB0_2:                              // %__nv_logf.exit
	ld.param.u64 	%rd18, [triton_per_fused__log_softmax_mean_mul_sub_sum_3_param_0];
	.loc	1 49 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:49:24
	setp.eq.f32 	%p19, %f13, 0f00000000;
	selp.f32 	%f69, 0fFF800000, %f148, %p19;
	.loc	1 50 19                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:50:19
	sub.f32 	%f70, %f1, %f69;
	.loc	1 52 19                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:52:19
	sub.f32 	%f71, %f2, %f69;
	.loc	1 53 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:53:20
	mul.f32 	%f72, %f71, %f6;
	.loc	1 54 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:54:20
	fma.rn.f32 	%f73, %f70, %f5, %f72;
	.loc	1 55 19                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:55:19
	sub.f32 	%f74, %f3, %f69;
	.loc	1 57 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:57:20
	fma.rn.f32 	%f75, %f74, %f7, %f73;
	.loc	1 58 19                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:58:19
	sub.f32 	%f76, %f4, %f69;
	.loc	1 60 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:60:20
	fma.rn.f32 	%f77, %f76, %f8, %f75;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f77;
	shfl.sync.bfly.b32	%r31, %r30, 16, 31, -1;
	mov.b32 	%f78, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f79;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f80, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f81;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f82, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f83;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f84, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f85;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f86, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r2, 0;
	and.b32  	%r40, %r3, 1;
	shl.b32 	%r41, %r40, 2;
	mov.u32 	%r42, global_smem;
	add.s32 	%r50, %r42, %r41;
	mov.b32 	%r25, %f87;
	// begin inline asm
	@%p16 st.shared.b32 [ %r50 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r1, 2;
	add.s32 	%r53, %r42, %r18;
	// begin inline asm
	@%p17 ld.shared.b32 %r26, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f88, %r26;
	shfl.sync.bfly.b32	%r44, %r26, 1, 31, -1;
	mov.b32 	%f89, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r45, %r1, 1;
	setp.eq.b32 	%p20, %r45, 1;
	not.pred 	%p21, %p20;
	and.pred  	%p26, %p17, %p21;
	mov.b32 	%r29, %f90;
	// begin inline asm
	@%p26 st.shared.b32 [ %r53 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f17, [global_smem];
$L__tmp1:
	.loc	1 63 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:63:24
	mul.f32 	%f62, %f9, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f61, %f62;
	// end inline asm
	.loc	1 64 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:64:24
	mul.f32 	%f64, %f10, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f63, %f64;
	// end inline asm
	.loc	1 65 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:65:20
	add.f32 	%f91, %f61, %f63;
	.loc	1 66 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:66:24
	mul.f32 	%f66, %f11, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f65, %f66;
	// end inline asm
	.loc	1 67 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:67:20
	add.f32 	%f92, %f91, %f65;
	.loc	1 68 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:68:24
	mul.f32 	%f68, %f12, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f67, %f68;
	// end inline asm
	.loc	1 69 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:69:20
	add.f32 	%f93, %f92, %f67;
	.loc	1 70 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:70:24
	setp.lt.f32 	%p22, %f93, 0f00800000;
	mul.f32 	%f94, %f93, 0f4B000000;
	selp.f32 	%f18, %f94, %f93, %p22;
	selp.f32 	%f95, 0fC1B80000, 0f00000000, %p22;
	mov.b32 	%r46, %f18;
	add.s32 	%r47, %r46, -1059760811;
	and.b32  	%r48, %r47, -8388608;
	sub.s32 	%r49, %r46, %r48;
	mov.b32 	%f96, %r49;
	cvt.rn.f32.s32 	%f97, %r48;
	fma.rn.ftz.f32 	%f99, %f97, %f37, %f95;
	add.f32 	%f100, %f96, 0fBF800000;
	fma.rn.ftz.f32 	%f103, %f41, %f100, %f40;
	fma.rn.ftz.f32 	%f105, %f103, %f100, %f43;
	fma.rn.ftz.f32 	%f107, %f105, %f100, %f45;
	fma.rn.ftz.f32 	%f109, %f107, %f100, %f47;
	fma.rn.ftz.f32 	%f111, %f109, %f100, %f49;
	fma.rn.ftz.f32 	%f113, %f111, %f100, %f51;
	fma.rn.ftz.f32 	%f115, %f113, %f100, %f53;
	fma.rn.ftz.f32 	%f117, %f115, %f100, %f55;
	mul.f32 	%f118, %f100, %f117;
	fma.rn.ftz.f32 	%f119, %f118, %f100, %f100;
	fma.rn.ftz.f32 	%f149, %f99, %f59, %f119;
	setp.lt.u32 	%p23, %r46, 2139095040;
	@%p23 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:0:24
	fma.rn.ftz.f32 	%f149, %f18, %f60, %f60;
$L__BB0_4:                              // %__nv_logf.exit30
	.loc	1 70 24                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:70:24
	setp.eq.f32 	%p28, %f18, 0f00000000;
	selp.f32 	%f122, 0fFF800000, %f149, %p28;
	.loc	1 71 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:71:20
	sub.f32 	%f123, %f9, %f122;
	.loc	1 73 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:73:20
	sub.f32 	%f124, %f10, %f122;
	.loc	1 74 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:74:20
	mul.f32 	%f125, %f124, %f6;
	.loc	1 75 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:75:20
	fma.rn.f32 	%f126, %f123, %f5, %f125;
	.loc	1 76 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:76:20
	sub.f32 	%f127, %f11, %f122;
	.loc	1 78 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:78:20
	fma.rn.f32 	%f128, %f127, %f7, %f126;
	.loc	1 79 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:79:20
	sub.f32 	%f129, %f12, %f122;
	.loc	1 81 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:81:20
	fma.rn.f32 	%f130, %f129, %f8, %f128;
$L__tmp2:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r63, %f130;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f131, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f132;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f133, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f134;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f135, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f136;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	mov.b32 	%f137, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f138;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f139, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f140;
	// begin inline asm
	@%p16 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f141, %r52;
	shfl.sync.bfly.b32	%r73, %r52, 1, 31, -1;
	mov.b32 	%f142, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f143, %f141, %f142;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f143;
	// begin inline asm
	@%p26 st.shared.b32 [ %r53 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
$L__tmp3:
	.loc	1 85 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:85:20
	mov.b32 	%r57, %f17;
	mov.b32 	%r58, 1115684864;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f144, %r56;
	.loc	1 86 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:86:20
	ld.shared.u32 	%r60, [global_smem];
	// begin inline asm
	div.full.f32 %r59, %r60, %r58;
	// end inline asm
	mov.b32 	%f145, %r59;
	.loc	1 87 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:87:20
	sub.f32 	%f146, %f144, %f145;
	.loc	1 89 20                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:89:20
	mul.f32 	%f147, %f146, 0f3DCCCCCD;
	.loc	1 90 4                          // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:90:4
	bar.sync 	0;
	.loc	1 91 71                         // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:91:71
	and.b32  	%r74, %r1, 63;
	setp.eq.s32 	%p27, %r74, 0;
	mov.b32 	%r62, %f147;
	// begin inline asm
	@%p27 st.global.b32 [ %rd18 + 0 ], { %r62 };
	// end inline asm
	.loc	1 91 4                          // czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py:91:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zf/czfecyk23e2goqr7kaeaszzrltwruaxzl5bonp6wkfbph5tmq3vv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 102
.b8 101
.b8 99
.b8 121
.b8 107
.b8 50
.b8 51
.b8 101
.b8 50
.b8 103
.b8 111
.b8 113
.b8 114
.b8 55
.b8 107
.b8 97
.b8 101
.b8 97
.b8 115
.b8 122
.b8 122
.b8 114
.b8 108
.b8 116
.b8 119
.b8 114
.b8 117
.b8 97
.b8 120
.b8 122
.b8 108
.b8 53
.b8 98
.b8 111
.b8 110
.b8 112
.b8 54
.b8 119
.b8 107
.b8 102
.b8 98
.b8 112
.b8 104
.b8 53
.b8 116
.b8 109
.b8 113
.b8 51
.b8 118
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 83                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
