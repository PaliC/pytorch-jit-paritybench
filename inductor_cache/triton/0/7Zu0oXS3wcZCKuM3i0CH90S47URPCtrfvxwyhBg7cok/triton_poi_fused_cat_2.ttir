#loc = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-12> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<-8> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<12> : tensor<256xi64> loc(#loc1)
    %cst_2 = arith.constant dense<-4> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_8 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_8 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_7 : tensor<256xi32> loc(#loc10)
    %10 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_6 : tensor<256xi64> loc(#loc11)
    %12 = arith.muli %7, %cst_8 : tensor<256xi32> loc(#loc12)
    %13 = arith.addi %8, %12 : tensor<256xi32> loc(#loc13)
    %14 = arith.muli %9, %cst_5 : tensor<256xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<256xi32> loc(#loc15)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %16, %15 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc16)
    %18 = arith.andi %11, %5 : tensor<256xi1> loc(#loc17)
    %19 = tt.load %17, %18, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc19)
    %21 = tt.addptr %20, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %22 = tt.load %21, %18, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %23 = arith.addf %19, %22 : tensor<256xf32> loc(#loc21)
    %24 = arith.cmpf ogt, %cst_4, %23 : tensor<256xf32> loc(#loc75)
    %25 = arith.select %24, %cst_4, %23 : tensor<256xi1>, tensor<256xf32> loc(#loc76)
    %26 = arith.cmpi sge, %10, %cst_6 : tensor<256xi64> loc(#loc25)
    %27 = arith.cmpi slt, %10, %cst_3 : tensor<256xi64> loc(#loc26)
    %28 = arith.andi %26, %27 : tensor<256xi1> loc(#loc27)
    %29 = arith.addi %7, %cst_2 : tensor<256xi32> loc(#loc28)
    %30 = arith.muli %29, %cst_8 : tensor<256xi32> loc(#loc29)
    %31 = arith.addi %8, %30 : tensor<256xi32> loc(#loc30)
    %32 = arith.addi %31, %14 : tensor<256xi32> loc(#loc31)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc32)
    %34 = tt.addptr %33, %32 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc32)
    %35 = arith.andi %28, %5 : tensor<256xi1> loc(#loc33)
    %36 = tt.load %34, %35, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %37 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc35)
    %38 = tt.addptr %37, %29 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %39 = tt.load %38, %35, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc36)
    %40 = arith.addf %36, %39 : tensor<256xf32> loc(#loc37)
    %41 = arith.cmpf ogt, %cst_4, %40 : tensor<256xf32> loc(#loc77)
    %42 = arith.select %41, %cst_4, %40 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %43 = arith.cmpi sge, %10, %cst_3 : tensor<256xi64> loc(#loc39)
    %44 = arith.cmpi slt, %10, %cst_1 : tensor<256xi64> loc(#loc40)
    %45 = arith.andi %43, %44 : tensor<256xi1> loc(#loc41)
    %46 = arith.addi %7, %cst_0 : tensor<256xi32> loc(#loc42)
    %47 = arith.muli %46, %cst_8 : tensor<256xi32> loc(#loc43)
    %48 = arith.addi %8, %47 : tensor<256xi32> loc(#loc44)
    %49 = arith.addi %48, %14 : tensor<256xi32> loc(#loc45)
    %50 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc46)
    %51 = tt.addptr %50, %49 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc46)
    %52 = arith.andi %45, %5 : tensor<256xi1> loc(#loc47)
    %53 = tt.load %51, %52, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %54 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc49)
    %55 = tt.addptr %54, %46 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc49)
    %56 = tt.load %55, %52, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc50)
    %57 = arith.addf %53, %56 : tensor<256xf32> loc(#loc51)
    %58 = arith.cmpf ogt, %cst_4, %57 : tensor<256xf32> loc(#loc79)
    %59 = arith.select %58, %cst_4, %57 : tensor<256xi1>, tensor<256xf32> loc(#loc80)
    %60 = arith.cmpi sge, %10, %cst_1 : tensor<256xi64> loc(#loc53)
    %61 = arith.addi %7, %cst : tensor<256xi32> loc(#loc54)
    %62 = arith.muli %61, %cst_8 : tensor<256xi32> loc(#loc55)
    %63 = arith.addi %8, %62 : tensor<256xi32> loc(#loc56)
    %64 = arith.addi %63, %14 : tensor<256xi32> loc(#loc57)
    %65 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc58)
    %66 = tt.addptr %65, %64 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc58)
    %67 = arith.andi %60, %5 : tensor<256xi1> loc(#loc59)
    %68 = tt.load %66, %67, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc60)
    %69 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc61)
    %70 = tt.addptr %69, %61 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc61)
    %71 = tt.load %70, %67, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc62)
    %72 = arith.addf %68, %71 : tensor<256xf32> loc(#loc63)
    %73 = arith.cmpf ogt, %cst_4, %72 : tensor<256xf32> loc(#loc81)
    %74 = arith.select %73, %cst_4, %72 : tensor<256xi1>, tensor<256xf32> loc(#loc82)
    %75 = arith.select %60, %74, %cst_4 : tensor<256xi1>, tensor<256xf32> loc(#loc65)
    %76 = arith.select %45, %59, %75 : tensor<256xi1>, tensor<256xf32> loc(#loc83)
    %77 = arith.select %28, %42, %76 : tensor<256xi1>, tensor<256xf32> loc(#loc84)
    %78 = arith.select %11, %25, %77 : tensor<256xi1>, tensor<256xf32> loc(#loc85)
    %79 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc72)
    %80 = tt.addptr %79, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc72)
    tt.store %80, %78, %5 : tensor<256x!tt.ptr<f32>> loc(#loc73)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":21:28)
#loc3 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":21:33)
#loc4 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":22:36)
#loc5 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":22:23)
#loc6 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":23:21)
#loc7 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":24:21)
#loc8 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":24:27)
#loc9 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":25:19)
#loc10 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":26:19)
#loc11 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":32:18)
#loc12 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:39)
#loc13 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:35)
#loc14 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:48)
#loc15 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:45)
#loc16 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:30)
#loc17 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:60)
#loc18 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":33:53)
#loc19 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":34:30)
#loc20 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":34:35)
#loc21 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":35:18)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc23 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":37:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":40:20)
#loc26 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":42:19)
#loc27 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":43:20)
#loc28 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:47)
#loc29 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:40)
#loc30 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:36)
#loc31 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:53)
#loc32 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:31)
#loc33 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:69)
#loc34 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":44:61)
#loc35 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":45:31)
#loc36 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":45:43)
#loc37 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":46:20)
#loc38 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":48:42)
#loc39 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":51:20)
#loc40 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":53:19)
#loc41 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":54:20)
#loc42 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:47)
#loc43 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:40)
#loc44 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:36)
#loc45 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:53)
#loc46 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:31)
#loc47 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:69)
#loc48 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":55:61)
#loc49 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":56:31)
#loc50 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":56:43)
#loc51 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":57:20)
#loc52 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":59:42)
#loc53 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":62:20)
#loc54 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:48)
#loc55 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:40)
#loc56 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:36)
#loc57 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:54)
#loc58 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:31)
#loc59 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:70)
#loc60 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":65:62)
#loc61 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":66:31)
#loc62 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":66:44)
#loc63 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":67:20)
#loc64 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":69:42)
#loc65 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":71:35)
#loc66 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":72:35)
#loc67 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":61:35)
#loc68 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":73:35)
#loc69 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":50:35)
#loc70 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":74:34)
#loc71 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":39:33)
#loc72 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":75:25)
#loc73 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":75:37)
#loc74 = loc("inductor_cache/dj/cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py":75:4)
#loc75 = loc(callsite(#loc22 at #loc23))
#loc76 = loc(callsite(#loc24 at #loc23))
#loc77 = loc(callsite(#loc22 at #loc38))
#loc78 = loc(callsite(#loc24 at #loc38))
#loc79 = loc(callsite(#loc22 at #loc52))
#loc80 = loc(callsite(#loc24 at #loc52))
#loc81 = loc(callsite(#loc22 at #loc64))
#loc82 = loc(callsite(#loc24 at #loc64))
#loc83 = loc(fused[#loc66, #loc67])
#loc84 = loc(fused[#loc68, #loc69])
#loc85 = loc(fused[#loc70, #loc71])
