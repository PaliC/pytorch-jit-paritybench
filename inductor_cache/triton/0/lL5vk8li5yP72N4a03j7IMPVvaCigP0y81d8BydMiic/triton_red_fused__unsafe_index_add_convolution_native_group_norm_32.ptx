//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_add_convolution_native_group_norm_32 // -- Begin function triton_red_fused__unsafe_index_add_convolution_native_group_norm_32
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_add_convolution_native_group_norm_32
.visible .entry triton_red_fused__unsafe_index_add_convolution_native_group_norm_32(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_7,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_8,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_9
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<90>;
	.reg .b32 	%r<321>;
	.reg .f32 	%f<343>;
	.reg .b64 	%rd<142>;
	.loc	1 19 0                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_7];
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_6];
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_5];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_1];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_0];
$L__tmp0:
	.loc	1 22 28                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:22:28
	// begin inline asm
	mov.u32 %r39, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:22:33
	shl.b32 	%r41, %r39, 3;
	ld.param.u64 	%rd19, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_2];
	.loc	1 23 44                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd20, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_3];
	and.b32  	%r2, %r1, 7;
	ld.param.u64 	%rd21, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_32_param_4];
	bfe.u32 	%r42, %r1, 7, 2;
	.loc	1 23 23                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:23:23
	or.b32  	%r3, %r41, %r2;
	or.b32  	%r4, %r41, %r42;
	or.b32  	%r5, %r4, 4;
	.loc	1 24 21                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:24:21
	setp.lt.s32 	%p2, %r3, 1024;
	.loc	1 25 33                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:25:33
	shr.u32 	%r43, %r1, 3;
	bfe.u32 	%r44, %r1, 3, 4;
	and.b32  	%r45, %r43, 16;
	and.b32  	%r46, %r43, 32;
	or.b32  	%r47, %r45, %r44;
	or.b32  	%r48, %r47, %r46;
	and.b32  	%r49, %r1, 511;
	shl.b32 	%r50, %r1, 2;
	.loc	1 27 19                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:27:19
	shr.s32 	%r52, %r3, 31;
	shr.u32 	%r53, %r52, 30;
	add.s32 	%r54, %r3, %r53;
	shr.s32 	%r55, %r54, 2;
	.loc	1 26 19                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:26:19
	and.b32  	%r56, %r54, 536870908;
	sub.s32 	%r57, %r3, %r56;
	.loc	1 28 26                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:28:26
	shr.s32 	%r58, %r54, 31;
	shr.u32 	%r59, %r58, 26;
	add.s32 	%r60, %r55, %r59;
	and.b32  	%r61, %r60, -64;
	sub.s32 	%r62, %r55, %r61;
	.loc	1 29 31                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:29:31
	mul.wide.s32 	%rd22, %r62, 4;
	add.s64 	%rd16, %rd19, %rd22;
	.loc	1 29 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:29:36
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r40 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r40;
	.loc	1 41 41                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:41
	shl.b32 	%r6, %r57, 3;
	.loc	1 55 69                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:69
	shl.b32 	%r63, %r55, 12;
	.loc	1 55 64                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:64
	cvt.s64.s32 	%rd1, %r63;
	and.b32  	%r7, %r1, 31;
	.loc	1 34 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:34:36
	shl.b32 	%r64, %r49, 2;
	mov.u32 	%r65, global_smem;
	add.s32 	%r66, %r65, %r64;
	mul.wide.u32 	%rd23, %r7, 8;
	add.s64 	%rd48, %rd11, %rd23;
	shl.b32 	%r67, %r1, 5;
	and.b32  	%r68, %r67, 4064;
	or.b32  	%r69, %r68, %r42;
	shr.u32 	%r70, %r68, 1;
	add.s32 	%r71, %r65, %r70;
	shl.b32 	%r72, %r69, 2;
	add.s32 	%r147, %r71, %r72;
	or.b32  	%r73, %r68, 8;
	shr.u32 	%r74, %r73, 1;
	add.s32 	%r75, %r65, %r74;
	add.s32 	%r76, %r75, %r72;
	add.s32 	%r149, %r76, 32;
	or.b32  	%r77, %r68, 16;
	shr.u32 	%r78, %r77, 1;
	add.s32 	%r79, %r65, %r78;
	add.s32 	%r80, %r79, %r72;
	add.s32 	%r151, %r80, 64;
	or.b32  	%r81, %r68, 24;
	shr.u32 	%r82, %r81, 1;
	add.s32 	%r83, %r65, %r82;
	add.s32 	%r84, %r83, %r72;
	add.s32 	%r153, %r84, 96;
	add.s32 	%r155, %r147, 16;
	add.s32 	%r157, %r76, 48;
	add.s32 	%r159, %r80, 80;
	add.s32 	%r161, %r84, 112;
	shr.u32 	%r85, %r1, 1;
	and.b32  	%r86, %r85, 252;
	add.s32 	%r16, %r66, %r86;
	or.b32  	%r87, %r49, 512;
	shr.u32 	%r88, %r87, 1;
	and.b32  	%r89, %r88, 508;
	add.s32 	%r17, %r66, %r89;
	or.b32  	%r90, %r49, 1024;
	shr.u32 	%r91, %r90, 1;
	and.b32  	%r92, %r91, 764;
	add.s32 	%r18, %r66, %r92;
	or.b32  	%r93, %r49, 1536;
	shr.u32 	%r94, %r93, 1;
	and.b32  	%r95, %r94, 1020;
	add.s32 	%r19, %r66, %r95;
	or.b32  	%r96, %r49, 2048;
	shr.u32 	%r97, %r96, 1;
	and.b32  	%r98, %r97, 1276;
	add.s32 	%r20, %r66, %r98;
	or.b32  	%r99, %r49, 2560;
	shr.u32 	%r100, %r99, 1;
	and.b32  	%r101, %r100, 1532;
	add.s32 	%r21, %r66, %r101;
	or.b32  	%r102, %r49, 3072;
	shr.u32 	%r103, %r102, 1;
	and.b32  	%r104, %r103, 1788;
	add.s32 	%r22, %r66, %r104;
	or.b32  	%r105, %r49, 3584;
	shr.u32 	%r106, %r105, 1;
	and.b32  	%r107, %r106, 2044;
	add.s32 	%r23, %r66, %r107;
	mad.lo.s32 	%r163, %r49, 12, %r66;
	shl.b32 	%r108, %r48, 4;
	add.s32 	%r25, %r65, %r108;
	shl.b32 	%r109, %r1, 9;
	and.b32  	%r110, %r109, 3584;
	or.b32  	%r111, %r46, %r44;
	or.b32  	%r112, %r111, %r45;
	or.b32  	%r113, %r112, %r110;
	and.b32  	%r114, %r50, 2044;
	shr.u32 	%r115, %r110, 5;
	add.s32 	%r116, %r65, %r115;
	shl.b32 	%r117, %r113, 2;
	add.s32 	%r200, %r116, %r117;
	add.s32 	%r202, %r200, 256;
	add.s32 	%r204, %r200, 512;
	add.s32 	%r206, %r200, 768;
	add.s32 	%r208, %r200, 1024;
	add.s32 	%r210, %r200, 1280;
	add.s32 	%r212, %r200, 1536;
	add.s32 	%r214, %r200, 1792;
	and.b32  	%r118, %r43, 48;
	add.s32 	%r119, %r65, %r118;
	shl.b32 	%r120, %r114, 2;
	add.s32 	%r34, %r119, %r120;
	or.b32  	%r121, %r114, 2048;
	shr.u32 	%r122, %r121, 5;
	and.b32  	%r123, %r122, 112;
	add.s32 	%r124, %r65, %r123;
	add.s32 	%r35, %r124, %r120;
	bfe.u32 	%r320, %r1, 5, 4;
	and.b32  	%r125, %r1, 127;
	mul.wide.u32 	%rd24, %r125, 16;
	shl.b32 	%r126, %r4, 13;
	or.b32  	%r127, %r126, 32768;
	mul.wide.s32 	%rd25, %r127, 4;
	or.b64  	%rd26, %rd24, %rd25;
	add.s64 	%rd3, %rd21, %rd26;
	add.s64 	%rd4, %rd20, %rd26;
	shl.b32 	%r128, %r39, 16;
	shl.b32 	%r129, %r42, 13;
	or.b32  	%r130, %r128, %r129;
	mul.wide.s32 	%rd27, %r130, 4;
	or.b64  	%rd28, %rd24, %rd27;
	add.s64 	%rd5, %rd21, %rd28;
	add.s64 	%rd6, %rd20, %rd28;
	mov.f32 	%f106, 0f00000000;
	mov.u64 	%rd141, -512;
	mov.u64 	%rd140, 0;
	setp.lt.s32 	%p27, %r5, 1024;
	setp.lt.s32 	%p22, %r4, 1024;
	shl.b64 	%rd105, %rd1, 2;
	mov.f32 	%f108, 0f3F800000;
	mov.f32 	%f295, %f106;
	mov.f32 	%f296, %f106;
	mov.f32 	%f297, %f106;
	mov.f32 	%f298, %f106;
	mov.f32 	%f299, %f106;
	mov.f32 	%f300, %f106;
	mov.f32 	%f301, %f106;
	mov.f32 	%f302, %f106;
	mov.f32 	%f303, %f106;
	mov.f32 	%f304, %f106;
	mov.f32 	%f305, %f106;
	mov.f32 	%f306, %f106;
	mov.f32 	%f307, %f106;
	mov.f32 	%f308, %f106;
	mov.f32 	%f309, %f106;
	mov.f32 	%f310, %f106;
	mov.f32 	%f311, %f106;
	mov.f32 	%f312, %f106;
	mov.f32 	%f313, %f106;
	mov.f32 	%f314, %f106;
	mov.f32 	%f315, %f106;
	mov.f32 	%f316, %f106;
	mov.f32 	%f317, %f106;
	mov.f32 	%f318, %f106;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 62 62                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:62:62
	selp.f32 	%f311, %f327, %f311, %p2;
	selp.f32 	%f312, %f328, %f312, %p2;
	selp.f32 	%f313, %f329, %f313, %p2;
	selp.f32 	%f314, %f330, %f314, %p2;
	selp.f32 	%f315, %f331, %f315, %p2;
	selp.f32 	%f316, %f332, %f316, %p2;
	selp.f32 	%f317, %f333, %f317, %p2;
	selp.f32 	%f318, %f334, %f318, %p2;
	.loc	1 63 58                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:63:58
	selp.f32 	%f303, %f319, %f303, %p2;
	selp.f32 	%f304, %f320, %f304, %p2;
	selp.f32 	%f305, %f321, %f305, %p2;
	selp.f32 	%f306, %f322, %f306, %p2;
	selp.f32 	%f307, %f323, %f307, %p2;
	selp.f32 	%f308, %f324, %f308, %p2;
	selp.f32 	%f309, %f325, %f309, %p2;
	selp.f32 	%f310, %f326, %f310, %p2;
	.loc	1 64 66                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:64:66
	selp.f32 	%f295, %f335, %f295, %p2;
	selp.f32 	%f296, %f336, %f296, %p2;
	selp.f32 	%f297, %f337, %f297, %p2;
	selp.f32 	%f298, %f338, %f298, %p2;
	selp.f32 	%f299, %f339, %f299, %p2;
	selp.f32 	%f300, %f340, %f300, %p2;
	selp.f32 	%f301, %f341, %f301, %p2;
	selp.f32 	%f302, %f342, %f302, %p2;
	.loc	1 65 29                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:65:29
	add.s64 	%rd134, %rd5, %rd140;
	.loc	1 65 51                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:65:51
	add.s64 	%rd135, %rd3, %rd140;
	bar.sync 	0;
	mov.b32 	%r201, %f26;
	// begin inline asm
	@%p50 st.shared.b32 [ %r200 + 0 ], %r201;
	// end inline asm
	mov.b32 	%r203, %f27;
	// begin inline asm
	@%p50 st.shared.b32 [ %r202 + 0 ], %r203;
	// end inline asm
	mov.b32 	%r205, %f28;
	// begin inline asm
	@%p50 st.shared.b32 [ %r204 + 0 ], %r205;
	// end inline asm
	mov.b32 	%r207, %f29;
	// begin inline asm
	@%p50 st.shared.b32 [ %r206 + 0 ], %r207;
	// end inline asm
	mov.b32 	%r209, %f30;
	// begin inline asm
	@%p50 st.shared.b32 [ %r208 + 0 ], %r209;
	// end inline asm
	mov.b32 	%r211, %f31;
	// begin inline asm
	@%p50 st.shared.b32 [ %r210 + 0 ], %r211;
	// end inline asm
	mov.b32 	%r213, %f32;
	// begin inline asm
	@%p50 st.shared.b32 [ %r212 + 0 ], %r213;
	// end inline asm
	mov.b32 	%r215, %f33;
	// begin inline asm
	@%p50 st.shared.b32 [ %r214 + 0 ], %r215;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r220, %r221, %r222, %r223}, [%r35+8192];
	ld.shared.v4.u32 	{%r216, %r217, %r218, %r219}, [%r34];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd134 + 0 ], { %r216, %r217, %r218, %r219 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd135 + 0 ], { %r220, %r221, %r222, %r223 };
	// end inline asm
	.loc	1 34 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:34:36
	add.s64 	%rd140, %rd140, 2048;
	add.s32 	%r320, %r320, 16;
	setp.lt.u64 	%p61, %rd141, 7680;
	@%p61 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 37 23                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:37:23
	add.s64 	%rd141, %rd141, 512;
	cvt.u32.u64 	%r172, %rd141;
	shr.u32 	%r173, %r172, 10;
	.loc	1 38 31                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:38:31
	and.b32  	%r174, %r320, 31;
	.loc	1 41 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:39
	or.b32  	%r175, %r173, %r6;
	.loc	1 41 34                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:34
	mul.wide.s32 	%rd60, %r175, 8;
	add.s64 	%rd30, %rd11, %rd60;
	.loc	1 41 46                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:41:46
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd29, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd31, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd33 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd33, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd35 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd35, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd37 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd37, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd39 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd39, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd41 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd41, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd43, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd43 }, [ %rd30 + 0 ];
	@!%p2 mov.u64 %rd43, 0x0;
	// end inline asm
	.loc	1 42 34                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:42:34
	mul.wide.u32 	%rd61, %r174, 8;
	add.s64 	%rd46, %rd11, %rd61;
	mov.pred 	%p50, -1;
	.loc	1 42 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:42:39
	// begin inline asm
	mov.u64 %rd45, 0x0;
	@%p50 ld.global.L1::evict_last.b64 { %rd45 }, [ %rd46 + 0 ];
	@!%p50 mov.u64 %rd45, 0x0;
	// end inline asm
	.loc	1 43 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:43:39
	// begin inline asm
	mov.u64 %rd47, 0x0;
	@%p50 ld.global.L1::evict_last.b64 { %rd47 }, [ %rd48 + 0 ];
	@!%p50 mov.u64 %rd47, 0x0;
	// end inline asm
	.loc	1 44 35                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:44:35
	add.s64 	%rd49, %rd6, %rd140;
	.loc	1 44 50                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:44:50
	add.s64 	%rd50, %rd4, %rd140;
	mov.b32 	%r135, 0;
	// begin inline asm
	mov.u32 %r131, 0x0;
	mov.u32 %r132, 0x0;
	mov.u32 %r133, 0x0;
	mov.u32 %r134, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r131, %r132, %r133, %r134 }, [ %rd49 + 0 ];
	@!%p22 mov.u32 %r131, %r135;
	@!%p22 mov.u32 %r132, %r135;
	@!%p22 mov.u32 %r133, %r135;
	@!%p22 mov.u32 %r134, %r135;
	// end inline asm
	// begin inline asm
	mov.u32 %r139, 0x0;
	mov.u32 %r140, 0x0;
	mov.u32 %r141, 0x0;
	mov.u32 %r142, 0x0;
	@%p27 ld.global.L1::evict_first.v4.b32 { %r139, %r140, %r141, %r142 }, [ %rd50 + 0 ];
	@!%p27 mov.u32 %r139, %r135;
	@!%p27 mov.u32 %r140, %r135;
	@!%p27 mov.u32 %r141, %r135;
	@!%p27 mov.u32 %r142, %r135;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p50 st.shared.b32 [ %r147 + 0 ], %r131;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r149 + 0 ], %r132;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r151 + 0 ], %r133;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r153 + 0 ], %r134;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r155 + 0 ], %r139;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r157 + 0 ], %r140;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r159 + 0 ], %r141;
	// end inline asm
	// begin inline asm
	@%p50 st.shared.b32 [ %r161 + 0 ], %r142;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f109, [%r16];
	ld.shared.f32 	%f110, [%r17+2048];
	ld.shared.f32 	%f111, [%r18+4096];
	ld.shared.f32 	%f112, [%r19+6144];
	ld.shared.f32 	%f113, [%r20+8192];
	ld.shared.f32 	%f114, [%r21+10240];
	ld.shared.f32 	%f115, [%r22+12288];
	ld.shared.f32 	%f116, [%r23+14336];
	.loc	1 48 36                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:48:36
	shr.u64 	%rd62, %rd29, 59;
	and.b64  	%rd63, %rd62, 16;
	add.s64 	%rd64, %rd63, %rd29;
	shr.u64 	%rd65, %rd31, 59;
	and.b64  	%rd66, %rd65, 16;
	add.s64 	%rd67, %rd66, %rd31;
	shr.u64 	%rd68, %rd33, 59;
	and.b64  	%rd69, %rd68, 16;
	add.s64 	%rd70, %rd69, %rd33;
	shr.u64 	%rd71, %rd35, 59;
	and.b64  	%rd72, %rd71, 16;
	add.s64 	%rd73, %rd72, %rd35;
	shr.u64 	%rd74, %rd37, 59;
	and.b64  	%rd75, %rd74, 16;
	add.s64 	%rd76, %rd75, %rd37;
	shr.u64 	%rd77, %rd39, 59;
	and.b64  	%rd78, %rd77, 16;
	add.s64 	%rd79, %rd78, %rd39;
	shr.u64 	%rd80, %rd41, 59;
	and.b64  	%rd81, %rd80, 16;
	add.s64 	%rd82, %rd81, %rd41;
	shr.u64 	%rd83, %rd43, 59;
	and.b64  	%rd84, %rd83, 16;
	add.s64 	%rd85, %rd84, %rd43;
	.loc	1 54 39                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:54:39
	shr.u64 	%rd86, %rd47, 59;
	shr.u64 	%rd87, %rd45, 59;
	and.b64  	%rd88, %rd87, 16;
	and.b64  	%rd89, %rd86, 16;
	add.s64 	%rd90, %rd89, %rd47;
	add.s64 	%rd91, %rd88, %rd45;
	.loc	1 55 46                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:46
	shl.b64 	%rd92, %rd91, 4;
	.loc	1 55 43                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:43
	add.s64 	%rd51, %rd90, %rd92;
	.loc	1 55 35                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:35
	bar.sync 	0;
	// begin inline asm
	@%p50 st.shared.b64 [ %r163 + 0 ], %rd51;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd93, [%r25];
	ld.shared.u64 	%rd94, [%r25+1024];
	ld.shared.u64 	%rd95, [%r25+2048];
	ld.shared.u64 	%rd96, [%r25+3072];
	ld.shared.u64 	%rd97, [%r25+4096];
	ld.shared.u64 	%rd98, [%r25+5120];
	ld.shared.u64 	%rd99, [%r25+6144];
	ld.shared.u64 	%rd100, [%r25+7168];
	shl.b64 	%rd101, %rd93, 2;
	add.s64 	%rd102, %rd12, %rd101;
	shl.b64 	%rd103, %rd64, 10;
	add.s64 	%rd104, %rd102, %rd103;
	add.s64 	%rd52, %rd104, %rd105;
	shl.b64 	%rd106, %rd94, 2;
	add.s64 	%rd107, %rd12, %rd106;
	shl.b64 	%rd108, %rd67, 10;
	add.s64 	%rd109, %rd107, %rd108;
	add.s64 	%rd53, %rd109, %rd105;
	shl.b64 	%rd110, %rd95, 2;
	add.s64 	%rd111, %rd12, %rd110;
	shl.b64 	%rd112, %rd70, 10;
	add.s64 	%rd113, %rd111, %rd112;
	add.s64 	%rd54, %rd113, %rd105;
	shl.b64 	%rd114, %rd96, 2;
	add.s64 	%rd115, %rd12, %rd114;
	shl.b64 	%rd116, %rd73, 10;
	add.s64 	%rd117, %rd115, %rd116;
	add.s64 	%rd55, %rd117, %rd105;
	shl.b64 	%rd118, %rd97, 2;
	add.s64 	%rd119, %rd12, %rd118;
	shl.b64 	%rd120, %rd76, 10;
	add.s64 	%rd121, %rd119, %rd120;
	add.s64 	%rd56, %rd121, %rd105;
	shl.b64 	%rd122, %rd98, 2;
	add.s64 	%rd123, %rd12, %rd122;
	shl.b64 	%rd124, %rd79, 10;
	add.s64 	%rd125, %rd123, %rd124;
	add.s64 	%rd57, %rd125, %rd105;
	shl.b64 	%rd126, %rd99, 2;
	add.s64 	%rd127, %rd12, %rd126;
	shl.b64 	%rd128, %rd82, 10;
	add.s64 	%rd129, %rd127, %rd128;
	add.s64 	%rd58, %rd129, %rd105;
	shl.b64 	%rd130, %rd100, 2;
	add.s64 	%rd131, %rd12, %rd130;
	shl.b64 	%rd132, %rd85, 10;
	add.s64 	%rd133, %rd131, %rd132;
	add.s64 	%rd59, %rd133, %rd105;
	.loc	1 55 74                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:55:74
	// begin inline asm
	mov.u32 %r164, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r164 }, [ %rd52 + 0 ];
	// end inline asm
	mov.b32 	%f117, %r164;
	// begin inline asm
	mov.u32 %r165, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r165 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f118, %r165;
	// begin inline asm
	mov.u32 %r166, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r166 }, [ %rd54 + 0 ];
	// end inline asm
	mov.b32 	%f119, %r166;
	// begin inline asm
	mov.u32 %r167, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r167 }, [ %rd55 + 0 ];
	// end inline asm
	mov.b32 	%f120, %r167;
	// begin inline asm
	mov.u32 %r168, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r168 }, [ %rd56 + 0 ];
	// end inline asm
	mov.b32 	%f121, %r168;
	// begin inline asm
	mov.u32 %r169, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r169 }, [ %rd57 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r169;
	// begin inline asm
	mov.u32 %r170, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r170 }, [ %rd58 + 0 ];
	// end inline asm
	mov.b32 	%f123, %r170;
	// begin inline asm
	mov.u32 %r171, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r171 }, [ %rd59 + 0 ];
	// end inline asm
	mov.b32 	%f124, %r171;
	.loc	1 56 24                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:56:24
	add.f32 	%f125, %f1, %f117;
	add.f32 	%f126, %f1, %f118;
	add.f32 	%f127, %f1, %f119;
	add.f32 	%f128, %f1, %f120;
	add.f32 	%f129, %f1, %f121;
	add.f32 	%f130, %f1, %f122;
	add.f32 	%f131, %f1, %f123;
	add.f32 	%f132, %f1, %f124;
	.loc	1 57 24                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:57:24
	add.f32 	%f26, %f109, %f125;
	add.f32 	%f27, %f110, %f126;
	add.f32 	%f28, %f111, %f127;
	add.f32 	%f29, %f112, %f128;
	add.f32 	%f30, %f113, %f129;
	add.f32 	%f31, %f114, %f130;
	add.f32 	%f32, %f115, %f131;
	add.f32 	%f33, %f116, %f132;
	.loc	1 60 66                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:60:66
	setp.eq.s64 	%p49, %rd140, 0;
	mov.f32 	%f319, %f106;
	mov.f32 	%f320, %f106;
	mov.f32 	%f321, %f106;
	mov.f32 	%f322, %f106;
	mov.f32 	%f323, %f106;
	mov.f32 	%f324, %f106;
	mov.f32 	%f325, %f106;
	mov.f32 	%f326, %f106;
	mov.f32 	%f327, %f26;
	mov.f32 	%f328, %f27;
	mov.f32 	%f329, %f28;
	mov.f32 	%f330, %f29;
	mov.f32 	%f331, %f30;
	mov.f32 	%f332, %f31;
	mov.f32 	%f333, %f32;
	mov.f32 	%f334, %f33;
	mov.f32 	%f335, %f108;
	mov.f32 	%f336, %f108;
	mov.f32 	%f337, %f108;
	mov.f32 	%f338, %f108;
	mov.f32 	%f339, %f108;
	mov.f32 	%f340, %f108;
	mov.f32 	%f341, %f108;
	mov.f32 	%f342, %f108;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p49 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f133, %f26, %f311;
	sub.f32 	%f134, %f27, %f312;
	sub.f32 	%f135, %f28, %f313;
	sub.f32 	%f136, %f29, %f314;
	sub.f32 	%f137, %f30, %f315;
	sub.f32 	%f138, %f31, %f316;
	sub.f32 	%f139, %f32, %f317;
	sub.f32 	%f140, %f33, %f318;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f335, %f295, 0f3F800000;
	add.f32 	%f336, %f296, 0f3F800000;
	add.f32 	%f337, %f297, 0f3F800000;
	add.f32 	%f338, %f298, 0f3F800000;
	add.f32 	%f339, %f299, 0f3F800000;
	add.f32 	%f340, %f300, 0f3F800000;
	add.f32 	%f341, %f301, 0f3F800000;
	add.f32 	%f342, %f302, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r177, %f133;
	mov.b32 	%r178, %f335;
	// begin inline asm
	div.full.f32 %r176, %r177, %r178;
	// end inline asm
	mov.b32 	%f141, %r176;
	mov.b32 	%r180, %f134;
	mov.b32 	%r181, %f336;
	// begin inline asm
	div.full.f32 %r179, %r180, %r181;
	// end inline asm
	mov.b32 	%f142, %r179;
	mov.b32 	%r183, %f135;
	mov.b32 	%r184, %f337;
	// begin inline asm
	div.full.f32 %r182, %r183, %r184;
	// end inline asm
	mov.b32 	%f143, %r182;
	mov.b32 	%r186, %f136;
	mov.b32 	%r187, %f338;
	// begin inline asm
	div.full.f32 %r185, %r186, %r187;
	// end inline asm
	mov.b32 	%f144, %r185;
	mov.b32 	%r189, %f137;
	mov.b32 	%r190, %f339;
	// begin inline asm
	div.full.f32 %r188, %r189, %r190;
	// end inline asm
	mov.b32 	%f145, %r188;
	mov.b32 	%r192, %f138;
	mov.b32 	%r193, %f340;
	// begin inline asm
	div.full.f32 %r191, %r192, %r193;
	// end inline asm
	mov.b32 	%f146, %r191;
	mov.b32 	%r195, %f139;
	mov.b32 	%r196, %f341;
	// begin inline asm
	div.full.f32 %r194, %r195, %r196;
	// end inline asm
	mov.b32 	%f147, %r194;
	mov.b32 	%r198, %f140;
	mov.b32 	%r199, %f342;
	// begin inline asm
	div.full.f32 %r197, %r198, %r199;
	// end inline asm
	mov.b32 	%f148, %r197;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f327, %f311, %f141;
	add.f32 	%f328, %f312, %f142;
	add.f32 	%f329, %f313, %f143;
	add.f32 	%f330, %f314, %f144;
	add.f32 	%f331, %f315, %f145;
	add.f32 	%f332, %f316, %f146;
	add.f32 	%f333, %f317, %f147;
	add.f32 	%f334, %f318, %f148;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f149, %f26, %f327;
	sub.f32 	%f150, %f27, %f328;
	sub.f32 	%f151, %f28, %f329;
	sub.f32 	%f152, %f29, %f330;
	sub.f32 	%f153, %f30, %f331;
	sub.f32 	%f154, %f31, %f332;
	sub.f32 	%f155, %f32, %f333;
	sub.f32 	%f156, %f33, %f334;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f319, %f133, %f149, %f303;
	fma.rn.f32 	%f320, %f134, %f150, %f304;
	fma.rn.f32 	%f321, %f135, %f151, %f305;
	fma.rn.f32 	%f322, %f136, %f152, %f306;
	fma.rn.f32 	%f323, %f137, %f153, %f307;
	fma.rn.f32 	%f324, %f138, %f154, %f308;
	fma.rn.f32 	%f325, %f139, %f155, %f309;
	fma.rn.f32 	%f326, %f140, %f156, %f310;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f157, %f312, %f311;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f158, %f295, %f296;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p75, %f158, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r226, %f158;
	mov.b32 	%r225, %f296;
	// begin inline asm
	div.full.f32 %r224, %r225, %r226;
	// end inline asm
	mov.b32 	%f159, %r224;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f160, 0f00000000, %f159, %p75;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f161, %f157, %f160, %f311;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f162, %f303, %f304;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f163, %f157, %f157;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f164, %f163, %f295;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f165, %f164, %f160, %f162;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f166, %f313, %f161;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f167, %f297, %f158;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p76, %f167, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r229, %f167;
	mov.b32 	%r228, %f297;
	// begin inline asm
	div.full.f32 %r227, %r228, %r229;
	// end inline asm
	mov.b32 	%f168, %r227;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f169, 0f00000000, %f168, %p76;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f170, %f169, %f166, %f161;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f171, %f305, %f165;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f172, %f166, %f166;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f173, %f158, %f172;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f174, %f169, %f173, %f171;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f175, %f314, %f170;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f176, %f298, %f167;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p77, %f176, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r232, %f176;
	mov.b32 	%r231, %f298;
	// begin inline asm
	div.full.f32 %r230, %r231, %r232;
	// end inline asm
	mov.b32 	%f177, %r230;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f178, 0f00000000, %f177, %p77;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f179, %f178, %f175, %f170;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f180, %f306, %f174;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f181, %f175, %f175;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f182, %f167, %f181;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f183, %f178, %f182, %f180;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f184, %f315, %f179;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f185, %f299, %f176;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p78, %f185, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r235, %f185;
	mov.b32 	%r234, %f299;
	// begin inline asm
	div.full.f32 %r233, %r234, %r235;
	// end inline asm
	mov.b32 	%f186, %r233;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f187, 0f00000000, %f186, %p78;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f188, %f187, %f184, %f179;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f189, %f307, %f183;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f190, %f184, %f184;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f191, %f176, %f190;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f192, %f187, %f191, %f189;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f193, %f316, %f188;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f194, %f300, %f185;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p79, %f194, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r238, %f194;
	mov.b32 	%r237, %f300;
	// begin inline asm
	div.full.f32 %r236, %r237, %r238;
	// end inline asm
	mov.b32 	%f195, %r236;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f196, 0f00000000, %f195, %p79;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f197, %f196, %f193, %f188;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f198, %f308, %f192;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f199, %f193, %f193;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f200, %f185, %f199;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f201, %f196, %f200, %f198;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f202, %f317, %f197;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f203, %f301, %f194;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p80, %f203, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r241, %f203;
	mov.b32 	%r240, %f301;
	// begin inline asm
	div.full.f32 %r239, %r240, %r241;
	// end inline asm
	mov.b32 	%f204, %r239;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f205, 0f00000000, %f204, %p80;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f206, %f205, %f202, %f197;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f207, %f309, %f201;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f208, %f202, %f202;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f209, %f194, %f208;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f210, %f205, %f209, %f207;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f211, %f318, %f206;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f212, %f302, %f203;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p81, %f212, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r244, %f212;
	mov.b32 	%r243, %f302;
	// begin inline asm
	div.full.f32 %r242, %r243, %r244;
	// end inline asm
	mov.b32 	%f213, %r242;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f214, 0f00000000, %f213, %p81;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f215, %f214, %f211, %f206;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f216, %f310, %f210;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f217, %f211, %f211;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f218, %f203, %f217;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f219, %f214, %f218, %f216;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r284, %f215;
	shfl.sync.bfly.b32	%r285, %r284, 16, 31, -1;
	mov.b32 	%f220, %r285;
	mov.b32 	%r286, %f219;
	shfl.sync.bfly.b32	%r287, %r286, 16, 31, -1;
	mov.b32 	%f221, %r287;
	shfl.sync.bfly.b32	%r246, %r244, 16, 31, -1;
	mov.b32 	%f222, %r246;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f223, %f220, %f215;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f224, %f212, %f222;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p82, %f224, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r247, %f224;
	// begin inline asm
	div.full.f32 %r245, %r246, %r247;
	// end inline asm
	mov.b32 	%f225, %r245;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f226, 0f00000000, %f225, %p82;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f227, %f226, %f223, %f215;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f228, %f219, %f221;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f229, %f223, %f223;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f230, %f212, %f229;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f231, %f226, %f230, %f228;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r288, %f227;
	shfl.sync.bfly.b32	%r289, %r288, 8, 31, -1;
	mov.b32 	%f232, %r289;
	mov.b32 	%r290, %f231;
	shfl.sync.bfly.b32	%r291, %r290, 8, 31, -1;
	mov.b32 	%f233, %r291;
	shfl.sync.bfly.b32	%r249, %r247, 8, 31, -1;
	mov.b32 	%f234, %r249;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f235, %f232, %f227;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f236, %f224, %f234;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p83, %f236, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r250, %f236;
	// begin inline asm
	div.full.f32 %r248, %r249, %r250;
	// end inline asm
	mov.b32 	%f237, %r248;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f238, 0f00000000, %f237, %p83;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f239, %f238, %f235, %f227;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f240, %f231, %f233;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f241, %f235, %f235;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f242, %f224, %f241;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f243, %f238, %f242, %f240;
	.loc	2 204 46                        // triton_helpers.py:204:46
	shr.u32 	%r292, %r7, 3;
	setp.lt.u32 	%p62, %r7, 8;
	shl.b32 	%r293, %r2, 6;
	and.b32  	%r295, %r43, 60;
	or.b32  	%r296, %r293, %r295;
	add.s32 	%r251, %r65, %r296;
	mov.b32 	%r252, %f239;
	// begin inline asm
	@%p62 st.shared.b32 [ %r251 + 0 ], %r252;
	// end inline asm
	add.s32 	%r298, %r65, 512;
	add.s32 	%r253, %r298, %r296;
	mov.b32 	%r254, %f243;
	// begin inline asm
	@%p62 st.shared.b32 [ %r253 + 0 ], %r254;
	// end inline asm
	add.s32 	%r299, %r65, 1024;
	add.s32 	%r255, %r299, %r296;
	// begin inline asm
	@%p62 st.shared.b32 [ %r255 + 0 ], %r250;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p65, %r1, 128;
	add.s32 	%r258, %r65, %r50;
	// begin inline asm
	@%p65 ld.shared.b32 %r257, [ %r258 + 0 ];
	// end inline asm
	mov.b32 	%f244, %r257;
	add.s32 	%r260, %r298, %r50;
	// begin inline asm
	@%p65 ld.shared.b32 %r259, [ %r260 + 0 ];
	// end inline asm
	mov.b32 	%f245, %r259;
	add.s32 	%r262, %r299, %r50;
	// begin inline asm
	@%p65 ld.shared.b32 %r261, [ %r262 + 0 ];
	// end inline asm
	mov.b32 	%f246, %r261;
	shfl.sync.bfly.b32	%r301, %r257, 8, 31, -1;
	mov.b32 	%f247, %r301;
	shfl.sync.bfly.b32	%r302, %r259, 8, 31, -1;
	mov.b32 	%f248, %r302;
	shfl.sync.bfly.b32	%r264, %r261, 8, 31, -1;
	mov.b32 	%f249, %r264;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f250, %f247, %f244;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f251, %f246, %f249;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p84, %f251, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r265, %f251;
	// begin inline asm
	div.full.f32 %r263, %r264, %r265;
	// end inline asm
	mov.b32 	%f252, %r263;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f253, 0f00000000, %f252, %p84;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f254, %f250, %f253, %f244;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f255, %f245, %f248;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f256, %f250, %f250;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f257, %f256, %f246;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f258, %f257, %f253, %f255;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r303, %f254;
	shfl.sync.bfly.b32	%r304, %r303, 4, 31, -1;
	mov.b32 	%f259, %r304;
	mov.b32 	%r305, %f258;
	shfl.sync.bfly.b32	%r306, %r305, 4, 31, -1;
	mov.b32 	%f260, %r306;
	shfl.sync.bfly.b32	%r267, %r265, 4, 31, -1;
	mov.b32 	%f261, %r267;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f262, %f259, %f254;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f263, %f251, %f261;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p85, %f263, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r268, %f263;
	// begin inline asm
	div.full.f32 %r266, %r267, %r268;
	// end inline asm
	mov.b32 	%f264, %r266;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f265, 0f00000000, %f264, %p85;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f266, %f262, %f265, %f254;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f267, %f258, %f260;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f268, %f262, %f262;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f269, %f251, %f268;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f270, %f265, %f269, %f267;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r307, %f266;
	shfl.sync.bfly.b32	%r308, %r307, 2, 31, -1;
	mov.b32 	%f271, %r308;
	mov.b32 	%r309, %f270;
	shfl.sync.bfly.b32	%r310, %r309, 2, 31, -1;
	mov.b32 	%f272, %r310;
	shfl.sync.bfly.b32	%r270, %r268, 2, 31, -1;
	mov.b32 	%f273, %r270;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f274, %f271, %f266;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f275, %f263, %f273;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p86, %f275, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r271, %f275;
	// begin inline asm
	div.full.f32 %r269, %r270, %r271;
	// end inline asm
	mov.b32 	%f276, %r269;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f277, 0f00000000, %f276, %p86;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f278, %f274, %f277, %f266;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f279, %f270, %f272;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f280, %f274, %f274;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f281, %f263, %f280;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f282, %f277, %f281, %f279;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r311, %f278;
	shfl.sync.bfly.b32	%r312, %r311, 1, 31, -1;
	mov.b32 	%f283, %r312;
	mov.b32 	%r313, %f282;
	shfl.sync.bfly.b32	%r314, %r313, 1, 31, -1;
	mov.b32 	%f284, %r314;
	shfl.sync.bfly.b32	%r273, %r271, 1, 31, -1;
	mov.b32 	%f285, %r273;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f286, %f283, %f278;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f287, %f275, %f285;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p87, %f287, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r274, %f287;
	// begin inline asm
	div.full.f32 %r272, %r273, %r274;
	// end inline asm
	mov.b32 	%f288, %r272;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f289, 0f00000000, %f288, %p87;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f290, %f286, %f289, %f278;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f291, %f282, %f284;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f292, %f286, %f286;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f293, %f275, %f292;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f294, %f289, %f293, %f291;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r315, %r1, 15;
	setp.eq.s32 	%p88, %r315, 0;
	and.pred  	%p68, %p65, %p88;
	mov.b32 	%r276, %f290;
	// begin inline asm
	@%p68 st.shared.b32 [ %r258 + 0 ], %r276;
	// end inline asm
	mov.b32 	%r278, %f294;
	// begin inline asm
	@%p68 st.shared.b32 [ %r260 + 0 ], %r278;
	// end inline asm
	// begin inline asm
	@%p68 st.shared.b32 [ %r262 + 0 ], %r274;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r316, %r65, %r293;
	ld.shared.u32 	%r281, [%r316];
	add.s32 	%r317, %r298, %r293;
	ld.shared.u32 	%r282, [%r317];
	add.s32 	%r318, %r299, %r293;
	ld.shared.u32 	%r283, [%r318];
$L__tmp3:
	.loc	1 72 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:72:25
	mul.wide.s32 	%rd139, %r3, 4;
	add.s64 	%rd136, %rd13, %rd139;
	.loc	1 72 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:72:37
	or.b32  	%r319, %r295, %r292;
	setp.eq.s32 	%p89, %r319, 0;
	and.pred  	%p71, %p89, %p2;
	// begin inline asm
	@%p71 st.global.b32 [ %rd136 + 0 ], { %r281 };
	// end inline asm
	.loc	1 73 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:73:25
	add.s64 	%rd137, %rd14, %rd139;
	.loc	1 73 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:73:37
	// begin inline asm
	@%p71 st.global.b32 [ %rd137 + 0 ], { %r282 };
	// end inline asm
	.loc	1 74 25                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:25
	add.s64 	%rd138, %rd15, %rd139;
	.loc	1 74 37                         // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:37
	// begin inline asm
	@%p71 st.global.b32 [ %rd138 + 0 ], { %r283 };
	// end inline asm
	.loc	1 74 4                          // cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py:74:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ev/cevs6i6q26spr7hsyvqpkfcs2drivefnrj7vzvsvq37xezghna4p.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 118
.b8 115
.b8 54
.b8 105
.b8 54
.b8 113
.b8 50
.b8 54
.b8 115
.b8 112
.b8 114
.b8 55
.b8 104
.b8 115
.b8 121
.b8 118
.b8 113
.b8 112
.b8 107
.b8 102
.b8 99
.b8 115
.b8 50
.b8 100
.b8 114
.b8 105
.b8 118
.b8 101
.b8 102
.b8 110
.b8 114
.b8 106
.b8 55
.b8 118
.b8 122
.b8 118
.b8 115
.b8 118
.b8 113
.b8 51
.b8 55
.b8 120
.b8 101
.b8 122
.b8 103
.b8 104
.b8 110
.b8 97
.b8 52
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
