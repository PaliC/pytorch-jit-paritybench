; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = mul i32 %11, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = sext i32 %9 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !17
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %10) #1, !dbg !18
  %16 = bitcast i32 %15 to float, !dbg !18
  %17 = shl nsw i32 %11, 2, !dbg !19
  %18 = sext i32 %17 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %10, i32 0, i1 %10) #1, !dbg !21
  %21 = bitcast i32 %20 to float, !dbg !21
  %22 = or disjoint i32 %17, 1, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %10, i32 0, i1 %10) #1, !dbg !24
  %26 = bitcast i32 %25 to float, !dbg !24
  %27 = fmul float %26, 5.000000e-01, !dbg !25
  %28 = fadd float %27, %21, !dbg !26
  %29 = fsub float %21, %27, !dbg !27
  %30 = fsub float %28, %29, !dbg !28
  %31 = shl nsw i32 %.decomposed, 2, !dbg !29
  %32 = sext i32 %31 to i64, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !30
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %10, i32 0, i1 %10) #1, !dbg !31
  %35 = bitcast i32 %34 to float, !dbg !31
  %36 = or disjoint i32 %31, 1, !dbg !32
  %37 = sext i32 %36 to i64, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !33
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %10, i32 0, i1 %10) #1, !dbg !34
  %40 = bitcast i32 %39 to float, !dbg !34
  %41 = fmul float %40, 5.000000e-01, !dbg !35
  %42 = fadd float %41, %35, !dbg !36
  %43 = fsub float %35, %41, !dbg !37
  %44 = fsub float %42, %43, !dbg !38
  %45 = fadd float %30, %44, !dbg !39
  %46 = fcmp olt float %28, %42, !dbg !40
  %47 = fcmp uno float %28, 0.000000e+00, !dbg !44
  %48 = or i1 %47, %46, !dbg !45
  %49 = select i1 %48, float %28, float %42, !dbg !46
  %50 = fcmp ogt float %29, %43, !dbg !47
  %51 = fcmp uno float %29, 0.000000e+00, !dbg !49
  %52 = or i1 %51, %50, !dbg !50
  %53 = select i1 %52, float %29, float %43, !dbg !51
  %54 = fsub float %49, %53, !dbg !52
  %55 = fcmp ogt float %28, %42, !dbg !53
  %56 = or i1 %47, %55, !dbg !55
  %57 = select i1 %56, float %28, float %42, !dbg !56
  %58 = fcmp olt float %29, %43, !dbg !57
  %59 = or i1 %51, %58, !dbg !59
  %60 = select i1 %59, float %29, float %43, !dbg !60
  %61 = fsub float %57, %60, !dbg !61
  %.inv = fcmp ole float %54, 0.000000e+00, !dbg !62
  %62 = select i1 %.inv, float 0.000000e+00, float %54, !dbg !62
  %63 = fsub float %45, %62, !dbg !64
  %64 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float %63) #1, !dbg !65
  %.inv1 = fcmp ole float %61, 0.000000e+00, !dbg !66
  %65 = select i1 %.inv1, float 0.000000e+00, float %61, !dbg !66
  %66 = fsub float %65, %63, !dbg !68
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float %65) #1, !dbg !69
  %68 = fsub float %67, %64, !dbg !70
  %69 = fadd float %68, 0.000000e+00, !dbg !70
  %70 = fadd float %69, %16, !dbg !71
  %71 = bitcast float %70 to i32, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %14, i1 %10) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceotr6ywccnluilnldvb7ecuepnf4hhl4vk2jrrkrgbc2rorobwl.py", directory: "inductor_cache/eo")
!4 = !{ptr @triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1", linkageName: "triton_poi_fused_add_clamp_div_maximum_minimum_mul_neg_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 40, scope: !7)
!19 = !DILocation(line: 42, column: 33, scope: !7)
!20 = !DILocation(line: 42, column: 31, scope: !7)
!21 = !DILocation(line: 42, column: 38, scope: !7)
!22 = !DILocation(line: 43, column: 35, scope: !7)
!23 = !DILocation(line: 43, column: 31, scope: !7)
!24 = !DILocation(line: 43, column: 42, scope: !7)
!25 = !DILocation(line: 45, column: 20, scope: !7)
!26 = !DILocation(line: 46, column: 20, scope: !7)
!27 = !DILocation(line: 56, column: 20, scope: !7)
!28 = !DILocation(line: 69, column: 20, scope: !7)
!29 = !DILocation(line: 76, column: 33, scope: !7)
!30 = !DILocation(line: 76, column: 31, scope: !7)
!31 = !DILocation(line: 76, column: 38, scope: !7)
!32 = !DILocation(line: 77, column: 35, scope: !7)
!33 = !DILocation(line: 77, column: 31, scope: !7)
!34 = !DILocation(line: 77, column: 42, scope: !7)
!35 = !DILocation(line: 78, column: 20, scope: !7)
!36 = !DILocation(line: 79, column: 20, scope: !7)
!37 = !DILocation(line: 86, column: 20, scope: !7)
!38 = !DILocation(line: 96, column: 20, scope: !7)
!39 = !DILocation(line: 97, column: 20, scope: !7)
!40 = !DILocation(line: 110, column: 15, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !7, file: !42, discriminator: 0)
!42 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!43 = !DILocation(line: 98, column: 42, scope: !7)
!44 = !DILocation(line: 112, column: 21, scope: !41, inlinedAt: !43)
!45 = !DILocation(line: 112, column: 16, scope: !41, inlinedAt: !43)
!46 = !DILocation(line: 113, column: 29, scope: !41, inlinedAt: !43)
!47 = !DILocation(line: 118, column: 15, scope: !41, inlinedAt: !48)
!48 = !DILocation(line: 99, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !41, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !41, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !48)
!52 = !DILocation(line: 100, column: 20, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !41, inlinedAt: !54)
!54 = !DILocation(line: 101, column: 42, scope: !7)
!55 = !DILocation(line: 120, column: 16, scope: !41, inlinedAt: !54)
!56 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !54)
!57 = !DILocation(line: 110, column: 15, scope: !41, inlinedAt: !58)
!58 = !DILocation(line: 102, column: 42, scope: !7)
!59 = !DILocation(line: 112, column: 16, scope: !41, inlinedAt: !58)
!60 = !DILocation(line: 113, column: 29, scope: !41, inlinedAt: !58)
!61 = !DILocation(line: 103, column: 20, scope: !7)
!62 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !63)
!63 = !DILocation(line: 107, column: 42, scope: !7)
!64 = !DILocation(line: 108, column: 20, scope: !7)
!65 = !DILocation(line: 109, column: 20, scope: !7)
!66 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !67)
!67 = !DILocation(line: 110, column: 42, scope: !7)
!68 = !DILocation(line: 111, column: 20, scope: !7)
!69 = !DILocation(line: 112, column: 20, scope: !7)
!70 = !DILocation(line: 114, column: 13, scope: !7)
!71 = !DILocation(line: 116, column: 20, scope: !7)
!72 = !DILocation(line: 117, column: 40, scope: !7)
!73 = !DILocation(line: 117, column: 4, scope: !7)
