#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":19:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst = arith.constant dense<32768> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<33> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<1024> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<256> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<512> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<512> : tensor<1x32xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x32xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x32xi32, #blocked1> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x32xi32, #blocked> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x32xi32, #blocked1> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x32xi32, #blocked> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_11 : tensor<1x32xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_12 : tensor<1x32xi32, #blocked> loc(#loc6)
    %12 = tt.get_program_id x : i32 loc(#loc7)
    %13 = arith.muli %12, %c32_i32 : i32 loc(#loc8)
    %14 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc9)
    %15 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc9)
    %16 = tt.expand_dims %14 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc9)
    %17 = tt.expand_dims %15 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc9)
    %18 = tt.splat %13 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc10)
    %19 = tt.splat %13 : i32 -> tensor<32x1xi32, #blocked> loc(#loc10)
    %20 = arith.addi %18, %16 : tensor<32x1xi32, #blocked1> loc(#loc10)
    %21 = arith.addi %19, %17 : tensor<32x1xi32, #blocked> loc(#loc10)
    %22 = arith.cmpi slt, %20, %cst_9 : tensor<32x1xi32, #blocked1> loc(#loc11)
    %23 = arith.cmpi slt, %21, %cst_10 : tensor<32x1xi32, #blocked> loc(#loc11)
    %24 = arith.remsi %20, %cst_8 : tensor<32x1xi32, #blocked1> loc(#loc12)
    %25 = arith.divsi %20, %cst_8 : tensor<32x1xi32, #blocked1> loc(#loc13)
    %26 = arith.remsi %9, %cst_7 : tensor<1x32xi32, #blocked> loc(#loc14)
    %27 = arith.divsi %9, %cst_7 : tensor<1x32xi32, #blocked> loc(#loc15)
    %28 = arith.muli %24, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc16)
    %29 = arith.muli %25, %cst_5 : tensor<32x1xi32, #blocked1> loc(#loc17)
    %30 = arith.addi %28, %29 : tensor<32x1xi32, #blocked1> loc(#loc18)
    %31 = arith.muli %8, %cst_4 : tensor<1x32xi32, #blocked1> loc(#loc19)
    %32 = tt.broadcast %30 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc20)
    %33 = tt.broadcast %31 : tensor<1x32xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc20)
    %34 = arith.addi %32, %33 : tensor<32x32xi32, #blocked1> loc(#loc20)
    %35 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %36 = tt.addptr %35, %34 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc21)
    %37 = tt.broadcast %22 : tensor<32x1xi1, #blocked1> -> tensor<32x32xi1, #blocked1> loc(#loc22)
    %38 = tt.broadcast %23 : tensor<32x1xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc22)
    %39 = tt.broadcast %10 : tensor<1x32xi1, #blocked1> -> tensor<32x32xi1, #blocked1> loc(#loc22)
    %40 = tt.broadcast %11 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc22)
    %41 = arith.andi %37, %39 : tensor<32x32xi1, #blocked1> loc(#loc22)
    %42 = arith.andi %38, %40 : tensor<32x32xi1, #blocked> loc(#loc22)
    %43 = tt.load %36, %41 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %44 = arith.addi %28, %cst_3 : tensor<32x1xi32, #blocked1> loc(#loc24)
    %45 = arith.addi %44, %29 : tensor<32x1xi32, #blocked1> loc(#loc25)
    %46 = tt.broadcast %45 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc26)
    %47 = arith.addi %46, %33 : tensor<32x32xi32, #blocked1> loc(#loc26)
    %48 = tt.addptr %35, %47 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc27)
    %49 = tt.load %48, %41 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc28)
    %50 = arith.addi %28, %cst_2 : tensor<32x1xi32, #blocked1> loc(#loc29)
    %51 = arith.addi %50, %29 : tensor<32x1xi32, #blocked1> loc(#loc30)
    %52 = tt.broadcast %51 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc31)
    %53 = arith.addi %52, %33 : tensor<32x32xi32, #blocked1> loc(#loc31)
    %54 = tt.addptr %35, %53 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc32)
    %55 = tt.load %54, %41 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc33)
    %56 = arith.addi %28, %cst_1 : tensor<32x1xi32, #blocked1> loc(#loc34)
    %57 = arith.addi %56, %29 : tensor<32x1xi32, #blocked1> loc(#loc35)
    %58 = tt.broadcast %57 : tensor<32x1xi32, #blocked1> -> tensor<32x32xi32, #blocked1> loc(#loc36)
    %59 = arith.addi %58, %33 : tensor<32x32xi32, #blocked1> loc(#loc36)
    %60 = tt.addptr %35, %59 : tensor<32x32x!tt.ptr<f32>, #blocked1>, tensor<32x32xi32, #blocked1> loc(#loc37)
    %61 = tt.load %60, %41 evictionPolicy = evict_last : tensor<32x32x!tt.ptr<f32>, #blocked1> loc(#loc38)
    %62 = arith.cmpf ogt, %49, %43 : tensor<32x32xf32, #blocked1> loc(#loc53)
    %63 = arith.cmpf une, %49, %49 : tensor<32x32xf32, #blocked1> loc(#loc54)
    %64 = arith.ori %62, %63 : tensor<32x32xi1, #blocked1> loc(#loc55)
    %65 = arith.select %64, %49, %43 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc56)
    %66 = arith.cmpf ogt, %55, %65 : tensor<32x32xf32, #blocked1> loc(#loc57)
    %67 = arith.cmpf une, %55, %55 : tensor<32x32xf32, #blocked1> loc(#loc58)
    %68 = arith.ori %66, %67 : tensor<32x32xi1, #blocked1> loc(#loc59)
    %69 = arith.select %68, %55, %65 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc60)
    %70 = arith.cmpf ogt, %61, %69 : tensor<32x32xf32, #blocked1> loc(#loc61)
    %71 = arith.cmpf une, %61, %61 : tensor<32x32xf32, #blocked1> loc(#loc62)
    %72 = arith.ori %70, %71 : tensor<32x32xi1, #blocked1> loc(#loc63)
    %73 = arith.select %72, %61, %69 : tensor<32x32xi1, #blocked1>, tensor<32x32xf32, #blocked1> loc(#loc64)
    %74 = arith.muli %21, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc46)
    %75 = tt.broadcast %26 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc47)
    %76 = tt.broadcast %74 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc47)
    %77 = arith.addi %75, %76 : tensor<32x32xi32, #blocked> loc(#loc47)
    %78 = arith.muli %27, %cst : tensor<1x32xi32, #blocked> loc(#loc48)
    %79 = tt.broadcast %78 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc49)
    %80 = arith.addi %77, %79 : tensor<32x32xi32, #blocked> loc(#loc49)
    %81 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc50)
    %82 = tt.addptr %81, %80 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc50)
    %83 = triton_gpu.convert_layout %73 : tensor<32x32xf32, #blocked1> -> tensor<32x32xf32, #blocked> loc(#loc51)
    tt.store %82, %83, %42 : tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":22:28)
#loc3 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":22:33)
#loc4 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":23:44)
#loc5 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":23:23)
#loc6 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":24:21)
#loc7 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":25:28)
#loc8 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":25:33)
#loc9 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":26:44)
#loc10 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":26:23)
#loc11 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":27:21)
#loc12 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":28:19)
#loc13 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":29:19)
#loc14 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":32:19)
#loc15 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":33:19)
#loc16 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:32)
#loc17 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:40)
#loc18 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:37)
#loc19 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:50)
#loc20 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:45)
#loc21 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:30)
#loc22 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:63)
#loc23 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":34:55)
#loc24 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":35:34)
#loc25 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":35:41)
#loc26 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":35:49)
#loc27 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":35:30)
#loc28 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":35:59)
#loc29 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":36:35)
#loc30 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":36:42)
#loc31 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":36:50)
#loc32 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":36:30)
#loc33 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":36:60)
#loc34 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":37:35)
#loc35 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":37:42)
#loc36 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":37:50)
#loc37 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":37:30)
#loc38 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":37:60)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc40 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":38:40)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":39:40)
#loc45 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":40:40)
#loc46 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:34)
#loc47 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:30)
#loc48 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:45)
#loc49 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:39)
#loc50 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:25)
#loc51 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:56)
#loc52 = loc("inductor_cache/vh/cvhv6omazpxjao6z2akms6khzlberh3fwibqdqgli5mabxngskv4.py":41:4)
#loc53 = loc(callsite(#loc39 at #loc40))
#loc54 = loc(callsite(#loc41 at #loc40))
#loc55 = loc(callsite(#loc42 at #loc40))
#loc56 = loc(callsite(#loc43 at #loc40))
#loc57 = loc(callsite(#loc39 at #loc44))
#loc58 = loc(callsite(#loc41 at #loc44))
#loc59 = loc(callsite(#loc42 at #loc44))
#loc60 = loc(callsite(#loc43 at #loc44))
#loc61 = loc(callsite(#loc39 at #loc45))
#loc62 = loc(callsite(#loc41 at #loc45))
#loc63 = loc(callsite(#loc42 at #loc45))
#loc64 = loc(callsite(#loc43 at #loc45))
