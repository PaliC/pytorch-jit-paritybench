//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:21:33
	shl.b32 	%r27, %r1, 9;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_3];
	.loc	1 22 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:22:36
	mov.u32 	%r28, %tid.x;
	shl.b32 	%r29, %r28, 1;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_4];
	and.b32  	%r30, %r29, 510;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_5];
	.loc	1 22 23                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:22:23
	or.b32  	%r31, %r27, %r30;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_0_param_6];
	or.b32  	%r32, %r31, 1;
	.loc	1 23 21                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:23:21
	setp.lt.s32 	%p1, %r31, 1336704;
	.loc	1 25 21                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:25:21
	mul.hi.s32 	%r33, %r31, -1768080475;
	mad.lo.s32 	%r34, %r31, 1, %r33;
	shr.u32 	%r35, %r34, 31;
	shr.s32 	%r36, %r34, 11;
	add.s32 	%r37, %r36, %r35;
	mul.hi.s32 	%r38, %r32, -1768080475;
	mad.lo.s32 	%r39, %r32, 1, %r38;
	shr.u32 	%r40, %r39, 31;
	shr.s32 	%r41, %r39, 11;
	add.s32 	%r42, %r41, %r40;
	.loc	1 25 29                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:25:29
	mul.hi.s32 	%r43, %r37, 715827883;
	shr.u32 	%r44, %r43, 31;
	shr.u32 	%r45, %r43, 4;
	add.s32 	%r46, %r45, %r44;
	mul.lo.s32 	%r47, %r46, 96;
	sub.s32 	%r48, %r37, %r47;
	mul.hi.s32 	%r49, %r42, 715827883;
	shr.u32 	%r50, %r49, 31;
	shr.u32 	%r51, %r49, 4;
	add.s32 	%r52, %r51, %r50;
	mul.lo.s32 	%r53, %r52, 96;
	sub.s32 	%r54, %r42, %r53;
	.loc	1 28 34                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:28:34
	mul.wide.s32 	%rd22, %r31, 4;
	add.s64 	%rd1, %rd15, %rd22;
	.loc	1 28 39                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:28:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:29:30
	mul.wide.s32 	%rd23, %r48, 4;
	add.s64 	%rd2, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r54, 4;
	add.s64 	%rd3, %rd16, %rd24;
	.loc	1 29 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:30:30
	add.s64 	%rd4, %rd17, %rd23;
	add.s64 	%rd5, %rd17, %rd24;
	.loc	1 30 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:30:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:31:30
	add.s64 	%rd6, %rd18, %rd23;
	add.s64 	%rd7, %rd18, %rd24;
	.loc	1 31 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:31:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 32 31                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:32:31
	add.s64 	%rd8, %rd19, %rd23;
	add.s64 	%rd9, %rd19, %rd24;
	.loc	1 32 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:32:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:33:31
	add.s64 	%rd10, %rd20, %rd23;
	add.s64 	%rd11, %rd20, %rd24;
	.loc	1 33 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:33:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:37:18
	add.f32 	%f3, %f1, 0f358637BD;
	add.f32 	%f4, %f2, 0f358637BD;
	.loc	1 38 26                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:38:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 28 39                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:28:39
	mov.b32 	%f7, %r3;
	.loc	1 29 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:29:35
	mov.b32 	%f8, %r5;
	.loc	1 34 18                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:34:18
	add.f32 	%f9, %f7, %f8;
	.loc	1 30 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:30:35
	mov.b32 	%f10, %r7;
	.loc	1 35 18                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:35:18
	sub.f32 	%f11, %f9, %f10;
	.loc	1 28 39                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:28:39
	mov.b32 	%f12, %r2;
	.loc	1 29 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:29:35
	mov.b32 	%f13, %r4;
	.loc	1 34 18                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:34:18
	add.f32 	%f14, %f12, %f13;
	.loc	1 30 35                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:30:35
	mov.b32 	%f15, %r6;
	.loc	1 35 18                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:35:18
	sub.f32 	%f16, %f14, %f15;
	.loc	1 33 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:33:36
	mov.b32 	%f17, %r13;
	mov.b32 	%f18, %r12;
	.loc	1 32 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:32:36
	mov.b32 	%f19, %r11;
	mov.b32 	%f20, %r10;
	.loc	1 22 36                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:22:36
	and.b32  	%r55, %r28, 255;
	.loc	1 22 23                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:22:23
	or.b32  	%r56, %r27, %r55;
	or.b32  	%r57, %r56, 256;
	.loc	1 25 21                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:25:21
	mul.hi.s32 	%r59, %r57, -1768080475;
	mad.lo.s32 	%r60, %r57, 1, %r59;
	shr.u32 	%r61, %r60, 31;
	shr.s32 	%r62, %r60, 11;
	add.s32 	%r63, %r62, %r61;
	.loc	1 26 19                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:26:19
	mul.lo.s32 	%r64, %r63, 3481;
	sub.s32 	%r65, %r57, %r64;
	.loc	1 25 21                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:25:21
	mul.hi.s32 	%r67, %r56, -1768080475;
	mad.lo.s32 	%r68, %r56, 1, %r67;
	shr.u32 	%r69, %r68, 31;
	shr.s32 	%r70, %r68, 11;
	add.s32 	%r71, %r70, %r69;
	.loc	1 26 19                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:26:19
	mul.lo.s32 	%r72, %r71, 3481;
	sub.s32 	%r73, %r56, %r72;
	.loc	1 23 21                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:23:21
	setp.lt.s32 	%p15, %r57, 1336704;
	setp.lt.s32 	%p14, %r56, 1336704;
	.loc	1 40 19                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:40:19
	mov.b32 	%r16, %f5;
	mov.b32 	%r15, 1065353216;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f21, %r14;
	mov.b32 	%r19, %f6;
	// begin inline asm
	div.full.f32 %r17, %r15, %r19;
	// end inline asm
	mov.b32 	%f22, %r17;
	.loc	1 43 19                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:43:19
	mul.f32 	%f23, %f16, %f21;
	mul.f32 	%f24, %f11, %f22;
	.loc	1 45 20                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:45:20
	fma.rn.f32 	%f25, %f23, %f20, %f18;
	fma.rn.f32 	%f26, %f24, %f19, %f17;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f25, 0f00000000;
	setp.lt.f32 	%p17, %f26, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f27, 0f00000000, %f25, %p16;
	selp.f32 	%f28, 0f00000000, %f26, %p17;
$L__tmp2:
	.loc	1 48 39                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:48:39
	mov.b32 	%r20, %f14;
	mov.b32 	%r21, %f9;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 49 30                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:49:30
	mad.lo.s32 	%r74, %r71, 3488, %r73;
	mad.lo.s32 	%r75, %r63, 3488, %r65;
	.loc	1 49 25                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:49:25
	mul.wide.s32 	%rd25, %r74, 4;
	add.s64 	%rd13, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r75, 4;
	add.s64 	%rd14, %rd21, %rd26;
	.loc	1 49 47                         // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:49:47
	shl.b32 	%r76, %r30, 2;
	mov.u32 	%r77, global_smem;
	add.s32 	%r22, %r77, %r76;
	mov.b32 	%r23, %f27;
	mov.b32 	%r24, %f28;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.v2.b32 [ %r22 + 0 ], { %r23, %r24 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r55, 2;
	add.s32 	%r79, %r77, %r78;
	ld.shared.u32 	%r25, [%r79];
	ld.shared.u32 	%r26, [%r79+1024];
	// begin inline asm
	@%p14 st.global.b32 [ %rd13 + 0 ], { %r25 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.b32 [ %rd14 + 0 ], { %r26 };
	// end inline asm
	.loc	1 49 4                          // cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ry/cryfb6lnphadz7frx6xunilnthatlvgkmgxfpe5263ohbdo3p4gk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 121
.b8 102
.b8 98
.b8 54
.b8 108
.b8 110
.b8 112
.b8 104
.b8 97
.b8 100
.b8 122
.b8 55
.b8 102
.b8 114
.b8 120
.b8 54
.b8 120
.b8 117
.b8 110
.b8 105
.b8 108
.b8 110
.b8 116
.b8 104
.b8 97
.b8 116
.b8 108
.b8 118
.b8 103
.b8 107
.b8 109
.b8 103
.b8 120
.b8 102
.b8 112
.b8 101
.b8 53
.b8 50
.b8 54
.b8 51
.b8 111
.b8 104
.b8 98
.b8 100
.b8 111
.b8 51
.b8 112
.b8 52
.b8 103
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xae:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
