//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mse_loss_0 // -- Begin function triton_per_fused_add_mse_loss_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mse_loss_0
.visible .entry triton_per_fused_add_mse_loss_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_0_param_4,
	.param .u32 triton_per_fused_add_mse_loss_0_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<75>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused_add_mse_loss_0_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_add_mse_loss_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:27:26
	mov.u32 	%r36, %tid.x;
	and.b32  	%r37, %r36, 31;
	ld.param.u64 	%rd7, [triton_per_fused_add_mse_loss_0_param_2];
	ld.param.u64 	%rd8, [triton_per_fused_add_mse_loss_0_param_3];
	shl.b32 	%r38, %r36, 2;
	ld.param.u64 	%rd9, [triton_per_fused_add_mse_loss_0_param_4];
	and.b32  	%r39, %r38, 60;
	and.b32  	%r40, %r38, 252;
	and.b32  	%r41, %r36, 192;
	.loc	1 33 30                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:33:30
	mul.wide.u32 	%rd10, %r40, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mov.pred 	%p1, -1;
	.loc	1 33 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:33:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:34:35
	or.b32  	%r42, %r39, %r41;
	.loc	1 34 30                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:34:30
	mul.wide.u32 	%rd11, %r42, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 34 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:34:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:35:30
	add.s64 	%rd3, %rd8, %rd10;
	.loc	1 35 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:35:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:36:30
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 36 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:36:43
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:33:35
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r1;
	.loc	1 34 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:34:43
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r5;
	.loc	1 37 18                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:37:18
	sub.f32 	%f5, %f2, %f4;
	sub.f32 	%f6, %f1, %f3;
	.loc	1 38 18                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:38:18
	mul.f32 	%f7, %f6, %f6;
	.loc	1 33 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:33:35
	mov.b32 	%f8, %r3;
	mov.b32 	%f9, %r4;
	.loc	1 34 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:34:43
	mov.b32 	%f10, %r7;
	mov.b32 	%f11, %r8;
	.loc	1 37 18                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:37:18
	sub.f32 	%f12, %f9, %f11;
	sub.f32 	%f13, %f8, %f10;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f5, %f5, %f7;
	fma.rn.f32 	%f15, %f13, %f13, %f14;
	fma.rn.f32 	%f16, %f12, %f12, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f16;
	shfl.sync.bfly.b32	%r44, %r43, 16, 31, -1;
	mov.b32 	%f17, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f18;
	shfl.sync.bfly.b32	%r46, %r45, 8, 31, -1;
	mov.b32 	%f19, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f20;
	shfl.sync.bfly.b32	%r48, %r47, 4, 31, -1;
	mov.b32 	%f21, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f22;
	shfl.sync.bfly.b32	%r50, %r49, 2, 31, -1;
	mov.b32 	%f23, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f24;
	shfl.sync.bfly.b32	%r52, %r51, 1, 31, -1;
	mov.b32 	%f25, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r37, 0;
	shr.u32 	%r53, %r36, 3;
	and.b32  	%r54, %r53, 28;
	mov.u32 	%r55, global_smem;
	add.s32 	%r17, %r55, %r54;
	mov.b32 	%r18, %f26;
	// begin inline asm
	@%p5 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r36, 8;
	add.s32 	%r20, %r55, %r38;
	// begin inline asm
	@%p6 ld.shared.b32 %r19, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r19;
	shfl.sync.bfly.b32	%r56, %r19, 4, 31, -1;
	mov.b32 	%f28, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f29;
	shfl.sync.bfly.b32	%r58, %r57, 2, 31, -1;
	mov.b32 	%f30, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f31;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	mov.b32 	%f32, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r61, %r36, 7;
	setp.eq.s32 	%p12, %r61, 0;
	and.pred  	%p7, %p6, %p12;
	mov.b32 	%r22, %f33;
	// begin inline asm
	@%p7 st.shared.b32 [ %r20 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f34, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f35, %f34, 0f00000000;
$L__tmp3:
	.loc	1 35 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:35:35
	mov.b32 	%f36, %r10;
	mov.b32 	%f37, %r9;
	.loc	1 36 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:36:43
	mov.b32 	%f38, %r14;
	mov.b32 	%f39, %r13;
	.loc	1 41 18                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:41:18
	sub.f32 	%f40, %f37, %f39;
	sub.f32 	%f41, %f36, %f38;
	.loc	1 42 19                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:42:19
	mul.f32 	%f42, %f41, %f41;
	.loc	1 35 35                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:35:35
	mov.b32 	%f43, %r11;
	mov.b32 	%f44, %r12;
	.loc	1 36 43                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:36:43
	mov.b32 	%f45, %r15;
	mov.b32 	%f46, %r16;
	.loc	1 41 18                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:41:18
	sub.f32 	%f47, %f44, %f46;
	sub.f32 	%f48, %f43, %f45;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f49, %f40, %f40, %f42;
	fma.rn.f32 	%f50, %f48, %f48, %f49;
	fma.rn.f32 	%f51, %f47, %f47, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f51;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f52, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f53;
	shfl.sync.bfly.b32	%r65, %r64, 8, 31, -1;
	mov.b32 	%f54, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f55;
	shfl.sync.bfly.b32	%r67, %r66, 4, 31, -1;
	mov.b32 	%f56, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f57;
	shfl.sync.bfly.b32	%r69, %r68, 2, 31, -1;
	mov.b32 	%f58, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f59;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	mov.b32 	%f60, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f61;
	// begin inline asm
	@%p5 st.shared.b32 [ %r17 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r25, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r25;
	shfl.sync.bfly.b32	%r72, %r25, 4, 31, -1;
	mov.b32 	%f63, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f64;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f65, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f66;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f67, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f68;
	// begin inline asm
	@%p7 st.shared.b32 [ %r20 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f69, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f70, %f69, 0f00000000;
$L__tmp6:
	.loc	1 46 19                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:46:19
	mov.b32 	%r30, %f35;
	mov.b32 	%r31, 1149239296;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f71, %r29;
	.loc	1 48 20                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:48:20
	add.f32 	%f72, %f71, 0f00000000;
	.loc	1 49 20                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:49:20
	mov.b32 	%r33, %f70;
	// begin inline asm
	div.full.f32 %r32, %r33, %r31;
	// end inline asm
	mov.b32 	%f73, %r32;
	.loc	1 50 20                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:50:20
	add.f32 	%f74, %f72, %f73;
	.loc	1 51 4                          // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:51:4
	bar.sync 	0;
	.loc	1 52 63                         // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:52:63
	and.b32  	%r77, %r36, 255;
	setp.eq.s32 	%p11, %r77, 0;
	mov.b32 	%r35, %f74;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r35 };
	// end inline asm
	.loc	1 52 4                          // cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py:52:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ms/cmswehxdx5tlwpltozhqi3u6haoj55p5yrhx623subguezqmpvsl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 248                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 115
.b8 119
.b8 101
.b8 104
.b8 120
.b8 100
.b8 120
.b8 53
.b8 116
.b8 108
.b8 119
.b8 112
.b8 108
.b8 116
.b8 111
.b8 122
.b8 104
.b8 113
.b8 105
.b8 51
.b8 117
.b8 54
.b8 104
.b8 97
.b8 111
.b8 106
.b8 53
.b8 53
.b8 112
.b8 53
.b8 121
.b8 114
.b8 104
.b8 120
.b8 54
.b8 50
.b8 51
.b8 115
.b8 117
.b8 98
.b8 103
.b8 117
.b8 101
.b8 122
.b8 113
.b8 109
.b8 112
.b8 118
.b8 115
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x22 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
