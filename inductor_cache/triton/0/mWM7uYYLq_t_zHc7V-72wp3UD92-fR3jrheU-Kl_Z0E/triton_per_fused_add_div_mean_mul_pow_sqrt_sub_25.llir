; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_per_fused_add_div_mean_mul_pow_sqrt_sub_25(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, ptr addrspace(1) %15, ptr addrspace(1) %16, ptr addrspace(1) %17, ptr addrspace(1) %18, ptr addrspace(1) %19, i32 %20) local_unnamed_addr !dbg !7 {
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %23 = and i32 %22, 31, !dbg !10
  %24 = zext nneg i32 %23 to i64, !dbg !11
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !11
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #5, !dbg !12
  %27 = bitcast i32 %26 to float, !dbg !12
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !13
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #5, !dbg !14
  %30 = bitcast i32 %29 to float, !dbg !14
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !15
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #5, !dbg !16
  %33 = bitcast i32 %32 to float, !dbg !16
  %34 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !17
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #5, !dbg !18
  %36 = bitcast i32 %35 to float, !dbg !18
  %37 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !19
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #5, !dbg !20
  %39 = bitcast i32 %38 to float, !dbg !20
  %40 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !21
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #5, !dbg !22
  %42 = bitcast i32 %41 to float, !dbg !22
  %43 = getelementptr float, ptr addrspace(1) %7, i64 %24, !dbg !23
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #5, !dbg !24
  %45 = bitcast i32 %44 to float, !dbg !24
  %46 = getelementptr float, ptr addrspace(1) %8, i64 %24, !dbg !25
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #5, !dbg !26
  %48 = bitcast i32 %47 to float, !dbg !26
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #5, !dbg !27
  %50 = bitcast i32 %49 to float, !dbg !27
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #5, !dbg !28
  %52 = bitcast i32 %51 to float, !dbg !28
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #5, !dbg !29
  %54 = bitcast i32 %53 to float, !dbg !29
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #5, !dbg !30
  %56 = bitcast i32 %55 to float, !dbg !30
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #5, !dbg !31
  %58 = bitcast i32 %57 to float, !dbg !31
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 true) #5, !dbg !32
  %60 = bitcast i32 %59 to float, !dbg !32
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #5, !dbg !33
  %62 = bitcast i32 %61 to float, !dbg !33
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #5, !dbg !34
  %64 = bitcast i32 %63 to float, !dbg !34
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #5, !dbg !35
  %66 = bitcast i32 %65 to float, !dbg !35
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #5, !dbg !36
  %68 = bitcast i32 %67 to float, !dbg !36
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #5, !dbg !37
  %70 = bitcast i32 %69 to float, !dbg !37
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #5, !dbg !38
  %72 = bitcast i32 %71 to float, !dbg !38
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 16, i32 31), !dbg !39
  %74 = bitcast i32 %73 to float, !dbg !39
  %75 = fadd float %27, %74, !dbg !43
  %76 = bitcast float %75 to i32, !dbg !39
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 8, i32 31), !dbg !39
  %78 = bitcast i32 %77 to float, !dbg !39
  %79 = fadd float %75, %78, !dbg !43
  %80 = bitcast float %79 to i32, !dbg !39
  %81 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %80, i32 4, i32 31), !dbg !39
  %82 = bitcast i32 %81 to float, !dbg !39
  %83 = fadd float %79, %82, !dbg !43
  %84 = bitcast float %83 to i32, !dbg !39
  %85 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %84, i32 2, i32 31), !dbg !39
  %86 = bitcast i32 %85 to float, !dbg !39
  %87 = fadd float %83, %86, !dbg !43
  %88 = bitcast float %87 to i32, !dbg !39
  %89 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %88, i32 1, i32 31), !dbg !39
  %90 = bitcast i32 %89 to float, !dbg !39
  %91 = fadd float %87, %90, !dbg !43
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 16, i32 31), !dbg !45
  %93 = bitcast i32 %92 to float, !dbg !45
  %94 = fadd float %30, %93, !dbg !47
  %95 = bitcast float %94 to i32, !dbg !45
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %95, i32 8, i32 31), !dbg !45
  %97 = bitcast i32 %96 to float, !dbg !45
  %98 = fadd float %94, %97, !dbg !47
  %99 = bitcast float %98 to i32, !dbg !45
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 4, i32 31), !dbg !45
  %101 = bitcast i32 %100 to float, !dbg !45
  %102 = fadd float %98, %101, !dbg !47
  %103 = bitcast float %102 to i32, !dbg !45
  %104 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %103, i32 2, i32 31), !dbg !45
  %105 = bitcast i32 %104 to float, !dbg !45
  %106 = fadd float %102, %105, !dbg !47
  %107 = bitcast float %106 to i32, !dbg !45
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %107, i32 1, i32 31), !dbg !45
  %109 = bitcast i32 %108 to float, !dbg !45
  %110 = fadd float %106, %109, !dbg !47
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 16, i32 31), !dbg !48
  %112 = bitcast i32 %111 to float, !dbg !48
  %113 = fadd float %33, %112, !dbg !50
  %114 = bitcast float %113 to i32, !dbg !48
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 8, i32 31), !dbg !48
  %116 = bitcast i32 %115 to float, !dbg !48
  %117 = fadd float %113, %116, !dbg !50
  %118 = bitcast float %117 to i32, !dbg !48
  %119 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %118, i32 4, i32 31), !dbg !48
  %120 = bitcast i32 %119 to float, !dbg !48
  %121 = fadd float %117, %120, !dbg !50
  %122 = bitcast float %121 to i32, !dbg !48
  %123 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 2, i32 31), !dbg !48
  %124 = bitcast i32 %123 to float, !dbg !48
  %125 = fadd float %121, %124, !dbg !50
  %126 = bitcast float %125 to i32, !dbg !48
  %127 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %126, i32 1, i32 31), !dbg !48
  %128 = bitcast i32 %127 to float, !dbg !48
  %129 = fadd float %125, %128, !dbg !50
  %130 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 16, i32 31), !dbg !51
  %131 = bitcast i32 %130 to float, !dbg !51
  %132 = fadd float %36, %131, !dbg !53
  %133 = bitcast float %132 to i32, !dbg !51
  %134 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %133, i32 8, i32 31), !dbg !51
  %135 = bitcast i32 %134 to float, !dbg !51
  %136 = fadd float %132, %135, !dbg !53
  %137 = bitcast float %136 to i32, !dbg !51
  %138 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %137, i32 4, i32 31), !dbg !51
  %139 = bitcast i32 %138 to float, !dbg !51
  %140 = fadd float %136, %139, !dbg !53
  %141 = bitcast float %140 to i32, !dbg !51
  %142 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %141, i32 2, i32 31), !dbg !51
  %143 = bitcast i32 %142 to float, !dbg !51
  %144 = fadd float %140, %143, !dbg !53
  %145 = bitcast float %144 to i32, !dbg !51
  %146 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %145, i32 1, i32 31), !dbg !51
  %147 = bitcast i32 %146 to float, !dbg !51
  %148 = fadd float %144, %147, !dbg !53
  %149 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 16, i32 31), !dbg !54
  %150 = bitcast i32 %149 to float, !dbg !54
  %151 = fadd float %39, %150, !dbg !56
  %152 = bitcast float %151 to i32, !dbg !54
  %153 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %152, i32 8, i32 31), !dbg !54
  %154 = bitcast i32 %153 to float, !dbg !54
  %155 = fadd float %151, %154, !dbg !56
  %156 = bitcast float %155 to i32, !dbg !54
  %157 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %156, i32 4, i32 31), !dbg !54
  %158 = bitcast i32 %157 to float, !dbg !54
  %159 = fadd float %155, %158, !dbg !56
  %160 = bitcast float %159 to i32, !dbg !54
  %161 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %160, i32 2, i32 31), !dbg !54
  %162 = bitcast i32 %161 to float, !dbg !54
  %163 = fadd float %159, %162, !dbg !56
  %164 = bitcast float %163 to i32, !dbg !54
  %165 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %164, i32 1, i32 31), !dbg !54
  %166 = bitcast i32 %165 to float, !dbg !54
  %167 = fadd float %163, %166, !dbg !56
  %168 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 16, i32 31), !dbg !57
  %169 = bitcast i32 %168 to float, !dbg !57
  %170 = fadd float %42, %169, !dbg !59
  %171 = bitcast float %170 to i32, !dbg !57
  %172 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 8, i32 31), !dbg !57
  %173 = bitcast i32 %172 to float, !dbg !57
  %174 = fadd float %170, %173, !dbg !59
  %175 = bitcast float %174 to i32, !dbg !57
  %176 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %175, i32 4, i32 31), !dbg !57
  %177 = bitcast i32 %176 to float, !dbg !57
  %178 = fadd float %174, %177, !dbg !59
  %179 = bitcast float %178 to i32, !dbg !57
  %180 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %179, i32 2, i32 31), !dbg !57
  %181 = bitcast i32 %180 to float, !dbg !57
  %182 = fadd float %178, %181, !dbg !59
  %183 = bitcast float %182 to i32, !dbg !57
  %184 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %183, i32 1, i32 31), !dbg !57
  %185 = bitcast i32 %184 to float, !dbg !57
  %186 = fadd float %182, %185, !dbg !59
  %187 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %44, i32 16, i32 31), !dbg !60
  %188 = bitcast i32 %187 to float, !dbg !60
  %189 = fadd float %45, %188, !dbg !62
  %190 = bitcast float %189 to i32, !dbg !60
  %191 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %190, i32 8, i32 31), !dbg !60
  %192 = bitcast i32 %191 to float, !dbg !60
  %193 = fadd float %189, %192, !dbg !62
  %194 = bitcast float %193 to i32, !dbg !60
  %195 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %194, i32 4, i32 31), !dbg !60
  %196 = bitcast i32 %195 to float, !dbg !60
  %197 = fadd float %193, %196, !dbg !62
  %198 = bitcast float %197 to i32, !dbg !60
  %199 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %198, i32 2, i32 31), !dbg !60
  %200 = bitcast i32 %199 to float, !dbg !60
  %201 = fadd float %197, %200, !dbg !62
  %202 = bitcast float %201 to i32, !dbg !60
  %203 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %202, i32 1, i32 31), !dbg !60
  %204 = bitcast i32 %203 to float, !dbg !60
  %205 = fadd float %201, %204, !dbg !62
  %206 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 16, i32 31), !dbg !63
  %207 = bitcast i32 %206 to float, !dbg !63
  %208 = fadd float %48, %207, !dbg !65
  %209 = bitcast float %208 to i32, !dbg !63
  %210 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %209, i32 8, i32 31), !dbg !63
  %211 = bitcast i32 %210 to float, !dbg !63
  %212 = fadd float %208, %211, !dbg !65
  %213 = bitcast float %212 to i32, !dbg !63
  %214 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %213, i32 4, i32 31), !dbg !63
  %215 = bitcast i32 %214 to float, !dbg !63
  %216 = fadd float %212, %215, !dbg !65
  %217 = bitcast float %216 to i32, !dbg !63
  %218 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %217, i32 2, i32 31), !dbg !63
  %219 = bitcast i32 %218 to float, !dbg !63
  %220 = fadd float %216, %219, !dbg !65
  %221 = bitcast float %220 to i32, !dbg !63
  %222 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %221, i32 1, i32 31), !dbg !63
  %223 = bitcast i32 %222 to float, !dbg !63
  %224 = fadd float %220, %223, !dbg !65
  %225 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %50, float 4.096000e+03) #5, !dbg !66
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i = icmp eq i32 %226, 0, !dbg !67
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !67
  %.not1.i = icmp eq i32 %227, 0, !dbg !67
  br i1 %.not.i, label %233, label %228, !dbg !67

228:                                              ; preds = %21
  br i1 %.not1.i, label %231, label %229, !dbg !67

229:                                              ; preds = %228
  %230 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %225) #5, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

231:                                              ; preds = %228
  %232 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %225) #5, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

233:                                              ; preds = %21
  br i1 %.not1.i, label %236, label %234, !dbg !67

234:                                              ; preds = %233
  %235 = tail call float @llvm.nvvm.sqrt.rn.f(float %225) #5, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

236:                                              ; preds = %233
  %237 = tail call float @llvm.nvvm.sqrt.approx.f(float %225) #5, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

__nv_sqrtf.exit:                                  ; preds = %229, %231, %234, %236
  %.0.i = phi float [ %230, %229 ], [ %232, %231 ], [ %235, %234 ], [ %237, %236 ], !dbg !67
  %238 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 4.096000e+03) #5, !dbg !68
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not.i1 = icmp eq i32 %239, 0, !dbg !69
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !69
  %.not1.i4 = icmp eq i32 %240, 0, !dbg !69
  br i1 %.not.i1, label %246, label %241, !dbg !69

241:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %244, label %242, !dbg !69

242:                                              ; preds = %241
  %243 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %238) #5, !dbg !69
  br label %__nv_sqrtf.exit5, !dbg !69

244:                                              ; preds = %241
  %245 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %238) #5, !dbg !69
  br label %__nv_sqrtf.exit5, !dbg !69

246:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %249, label %247, !dbg !69

247:                                              ; preds = %246
  %248 = tail call float @llvm.nvvm.sqrt.rn.f(float %238) #5, !dbg !69
  br label %__nv_sqrtf.exit5, !dbg !69

249:                                              ; preds = %246
  %250 = tail call float @llvm.nvvm.sqrt.approx.f(float %238) #5, !dbg !69
  br label %__nv_sqrtf.exit5, !dbg !69

__nv_sqrtf.exit5:                                 ; preds = %242, %244, %247, %249
  %.0.i3 = phi float [ %243, %242 ], [ %245, %244 ], [ %248, %247 ], [ %250, %249 ], !dbg !69
  %251 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float 4.096000e+03) #5, !dbg !70
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !71
  %.not.i6 = icmp eq i32 %252, 0, !dbg !71
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !71
  %.not1.i9 = icmp eq i32 %253, 0, !dbg !71
  br i1 %.not.i6, label %259, label %254, !dbg !71

254:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %257, label %255, !dbg !71

255:                                              ; preds = %254
  %256 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %251) #5, !dbg !71
  br label %__nv_sqrtf.exit10, !dbg !71

257:                                              ; preds = %254
  %258 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %251) #5, !dbg !71
  br label %__nv_sqrtf.exit10, !dbg !71

259:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %262, label %260, !dbg !71

260:                                              ; preds = %259
  %261 = tail call float @llvm.nvvm.sqrt.rn.f(float %251) #5, !dbg !71
  br label %__nv_sqrtf.exit10, !dbg !71

262:                                              ; preds = %259
  %263 = tail call float @llvm.nvvm.sqrt.approx.f(float %251) #5, !dbg !71
  br label %__nv_sqrtf.exit10, !dbg !71

__nv_sqrtf.exit10:                                ; preds = %255, %257, %260, %262
  %.0.i8 = phi float [ %256, %255 ], [ %258, %257 ], [ %261, %260 ], [ %263, %262 ], !dbg !71
  %264 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float 4.096000e+03) #5, !dbg !72
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !73
  %.not.i11 = icmp eq i32 %265, 0, !dbg !73
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !73
  %.not1.i14 = icmp eq i32 %266, 0, !dbg !73
  br i1 %.not.i11, label %272, label %267, !dbg !73

267:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %270, label %268, !dbg !73

268:                                              ; preds = %267
  %269 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %264) #5, !dbg !73
  br label %__nv_sqrtf.exit15, !dbg !73

270:                                              ; preds = %267
  %271 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %264) #5, !dbg !73
  br label %__nv_sqrtf.exit15, !dbg !73

272:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %275, label %273, !dbg !73

273:                                              ; preds = %272
  %274 = tail call float @llvm.nvvm.sqrt.rn.f(float %264) #5, !dbg !73
  br label %__nv_sqrtf.exit15, !dbg !73

275:                                              ; preds = %272
  %276 = tail call float @llvm.nvvm.sqrt.approx.f(float %264) #5, !dbg !73
  br label %__nv_sqrtf.exit15, !dbg !73

__nv_sqrtf.exit15:                                ; preds = %268, %270, %273, %275
  %.0.i13 = phi float [ %269, %268 ], [ %271, %270 ], [ %274, %273 ], [ %276, %275 ], !dbg !73
  %277 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %58, float 1.638400e+04) #5, !dbg !74
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not.i16 = icmp eq i32 %278, 0, !dbg !75
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !75
  %.not1.i19 = icmp eq i32 %279, 0, !dbg !75
  br i1 %.not.i16, label %285, label %280, !dbg !75

280:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %283, label %281, !dbg !75

281:                                              ; preds = %280
  %282 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %277) #5, !dbg !75
  br label %__nv_sqrtf.exit20, !dbg !75

283:                                              ; preds = %280
  %284 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %277) #5, !dbg !75
  br label %__nv_sqrtf.exit20, !dbg !75

285:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %288, label %286, !dbg !75

286:                                              ; preds = %285
  %287 = tail call float @llvm.nvvm.sqrt.rn.f(float %277) #5, !dbg !75
  br label %__nv_sqrtf.exit20, !dbg !75

288:                                              ; preds = %285
  %289 = tail call float @llvm.nvvm.sqrt.approx.f(float %277) #5, !dbg !75
  br label %__nv_sqrtf.exit20, !dbg !75

__nv_sqrtf.exit20:                                ; preds = %281, %283, %286, %288
  %.0.i18 = phi float [ %282, %281 ], [ %284, %283 ], [ %287, %286 ], [ %289, %288 ], !dbg !75
  %290 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float 1.638400e+04) #5, !dbg !76
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !77
  %.not.i21 = icmp eq i32 %291, 0, !dbg !77
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !77
  %.not1.i24 = icmp eq i32 %292, 0, !dbg !77
  br i1 %.not.i21, label %298, label %293, !dbg !77

293:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %296, label %294, !dbg !77

294:                                              ; preds = %293
  %295 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %290) #5, !dbg !77
  br label %__nv_sqrtf.exit25, !dbg !77

296:                                              ; preds = %293
  %297 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %290) #5, !dbg !77
  br label %__nv_sqrtf.exit25, !dbg !77

298:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %301, label %299, !dbg !77

299:                                              ; preds = %298
  %300 = tail call float @llvm.nvvm.sqrt.rn.f(float %290) #5, !dbg !77
  br label %__nv_sqrtf.exit25, !dbg !77

301:                                              ; preds = %298
  %302 = tail call float @llvm.nvvm.sqrt.approx.f(float %290) #5, !dbg !77
  br label %__nv_sqrtf.exit25, !dbg !77

__nv_sqrtf.exit25:                                ; preds = %294, %296, %299, %301
  %.0.i23 = phi float [ %295, %294 ], [ %297, %296 ], [ %300, %299 ], [ %302, %301 ], !dbg !77
  %303 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float 1.638400e+04) #5, !dbg !78
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !79
  %.not.i26 = icmp eq i32 %304, 0, !dbg !79
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !79
  %.not1.i29 = icmp eq i32 %305, 0, !dbg !79
  br i1 %.not.i26, label %311, label %306, !dbg !79

306:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %309, label %307, !dbg !79

307:                                              ; preds = %306
  %308 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %303) #5, !dbg !79
  br label %__nv_sqrtf.exit30, !dbg !79

309:                                              ; preds = %306
  %310 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %303) #5, !dbg !79
  br label %__nv_sqrtf.exit30, !dbg !79

311:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %314, label %312, !dbg !79

312:                                              ; preds = %311
  %313 = tail call float @llvm.nvvm.sqrt.rn.f(float %303) #5, !dbg !79
  br label %__nv_sqrtf.exit30, !dbg !79

314:                                              ; preds = %311
  %315 = tail call float @llvm.nvvm.sqrt.approx.f(float %303) #5, !dbg !79
  br label %__nv_sqrtf.exit30, !dbg !79

__nv_sqrtf.exit30:                                ; preds = %307, %309, %312, %314
  %.0.i28 = phi float [ %308, %307 ], [ %310, %309 ], [ %313, %312 ], [ %315, %314 ], !dbg !79
  %316 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %64, float 1.638400e+04) #5, !dbg !80
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !81
  %.not.i31 = icmp eq i32 %317, 0, !dbg !81
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !81
  %.not1.i34 = icmp eq i32 %318, 0, !dbg !81
  br i1 %.not.i31, label %324, label %319, !dbg !81

319:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %322, label %320, !dbg !81

320:                                              ; preds = %319
  %321 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %316) #5, !dbg !81
  br label %__nv_sqrtf.exit35, !dbg !81

322:                                              ; preds = %319
  %323 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %316) #5, !dbg !81
  br label %__nv_sqrtf.exit35, !dbg !81

324:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %327, label %325, !dbg !81

325:                                              ; preds = %324
  %326 = tail call float @llvm.nvvm.sqrt.rn.f(float %316) #5, !dbg !81
  br label %__nv_sqrtf.exit35, !dbg !81

327:                                              ; preds = %324
  %328 = tail call float @llvm.nvvm.sqrt.approx.f(float %316) #5, !dbg !81
  br label %__nv_sqrtf.exit35, !dbg !81

__nv_sqrtf.exit35:                                ; preds = %320, %322, %325, %327
  %.0.i33 = phi float [ %321, %320 ], [ %323, %322 ], [ %326, %325 ], [ %328, %327 ], !dbg !81
  %329 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float 6.553600e+04) #5, !dbg !82
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !83
  %.not.i36 = icmp eq i32 %330, 0, !dbg !83
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !83
  %.not1.i39 = icmp eq i32 %331, 0, !dbg !83
  br i1 %.not.i36, label %337, label %332, !dbg !83

332:                                              ; preds = %__nv_sqrtf.exit35
  br i1 %.not1.i39, label %335, label %333, !dbg !83

333:                                              ; preds = %332
  %334 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %329) #5, !dbg !83
  br label %__nv_sqrtf.exit40, !dbg !83

335:                                              ; preds = %332
  %336 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %329) #5, !dbg !83
  br label %__nv_sqrtf.exit40, !dbg !83

337:                                              ; preds = %__nv_sqrtf.exit35
  br i1 %.not1.i39, label %340, label %338, !dbg !83

338:                                              ; preds = %337
  %339 = tail call float @llvm.nvvm.sqrt.rn.f(float %329) #5, !dbg !83
  br label %__nv_sqrtf.exit40, !dbg !83

340:                                              ; preds = %337
  %341 = tail call float @llvm.nvvm.sqrt.approx.f(float %329) #5, !dbg !83
  br label %__nv_sqrtf.exit40, !dbg !83

__nv_sqrtf.exit40:                                ; preds = %333, %335, %338, %340
  %.0.i38 = phi float [ %334, %333 ], [ %336, %335 ], [ %339, %338 ], [ %341, %340 ], !dbg !83
  %342 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %68, float 6.553600e+04) #5, !dbg !84
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !85
  %.not.i41 = icmp eq i32 %343, 0, !dbg !85
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !85
  %.not1.i44 = icmp eq i32 %344, 0, !dbg !85
  br i1 %.not.i41, label %350, label %345, !dbg !85

345:                                              ; preds = %__nv_sqrtf.exit40
  br i1 %.not1.i44, label %348, label %346, !dbg !85

346:                                              ; preds = %345
  %347 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %342) #5, !dbg !85
  br label %__nv_sqrtf.exit45, !dbg !85

348:                                              ; preds = %345
  %349 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %342) #5, !dbg !85
  br label %__nv_sqrtf.exit45, !dbg !85

350:                                              ; preds = %__nv_sqrtf.exit40
  br i1 %.not1.i44, label %353, label %351, !dbg !85

351:                                              ; preds = %350
  %352 = tail call float @llvm.nvvm.sqrt.rn.f(float %342) #5, !dbg !85
  br label %__nv_sqrtf.exit45, !dbg !85

353:                                              ; preds = %350
  %354 = tail call float @llvm.nvvm.sqrt.approx.f(float %342) #5, !dbg !85
  br label %__nv_sqrtf.exit45, !dbg !85

__nv_sqrtf.exit45:                                ; preds = %346, %348, %351, %353
  %.0.i43 = phi float [ %347, %346 ], [ %349, %348 ], [ %352, %351 ], [ %354, %353 ], !dbg !85
  %355 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %70, float 6.553600e+04) #5, !dbg !86
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !87
  %.not.i46 = icmp eq i32 %356, 0, !dbg !87
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !87
  %.not1.i49 = icmp eq i32 %357, 0, !dbg !87
  br i1 %.not.i46, label %363, label %358, !dbg !87

358:                                              ; preds = %__nv_sqrtf.exit45
  br i1 %.not1.i49, label %361, label %359, !dbg !87

359:                                              ; preds = %358
  %360 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %355) #5, !dbg !87
  br label %__nv_sqrtf.exit50, !dbg !87

361:                                              ; preds = %358
  %362 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %355) #5, !dbg !87
  br label %__nv_sqrtf.exit50, !dbg !87

363:                                              ; preds = %__nv_sqrtf.exit45
  br i1 %.not1.i49, label %366, label %364, !dbg !87

364:                                              ; preds = %363
  %365 = tail call float @llvm.nvvm.sqrt.rn.f(float %355) #5, !dbg !87
  br label %__nv_sqrtf.exit50, !dbg !87

366:                                              ; preds = %363
  %367 = tail call float @llvm.nvvm.sqrt.approx.f(float %355) #5, !dbg !87
  br label %__nv_sqrtf.exit50, !dbg !87

__nv_sqrtf.exit50:                                ; preds = %359, %361, %364, %366
  %.0.i48 = phi float [ %360, %359 ], [ %362, %361 ], [ %365, %364 ], [ %367, %366 ], !dbg !87
  %368 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float 6.553600e+04) #5, !dbg !88
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !89
  %.not.i51 = icmp eq i32 %369, 0, !dbg !89
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !89
  %.not1.i54 = icmp eq i32 %370, 0, !dbg !89
  br i1 %.not.i51, label %376, label %371, !dbg !89

371:                                              ; preds = %__nv_sqrtf.exit50
  br i1 %.not1.i54, label %374, label %372, !dbg !89

372:                                              ; preds = %371
  %373 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %368) #5, !dbg !89
  br label %__nv_sqrtf.exit55, !dbg !89

374:                                              ; preds = %371
  %375 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %368) #5, !dbg !89
  br label %__nv_sqrtf.exit55, !dbg !89

376:                                              ; preds = %__nv_sqrtf.exit50
  br i1 %.not1.i54, label %379, label %377, !dbg !89

377:                                              ; preds = %376
  %378 = tail call float @llvm.nvvm.sqrt.rn.f(float %368) #5, !dbg !89
  br label %__nv_sqrtf.exit55, !dbg !89

379:                                              ; preds = %376
  %380 = tail call float @llvm.nvvm.sqrt.approx.f(float %368) #5, !dbg !89
  br label %__nv_sqrtf.exit55, !dbg !89

__nv_sqrtf.exit55:                                ; preds = %372, %374, %377, %379
  %.0.i53 = phi float [ %373, %372 ], [ %375, %374 ], [ %378, %377 ], [ %380, %379 ], !dbg !89
  %381 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %91, float 2.621440e+05) #5, !dbg !90
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !91
  %.not.i56 = icmp eq i32 %382, 0, !dbg !91
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !91
  %.not1.i59 = icmp eq i32 %383, 0, !dbg !91
  br i1 %.not.i56, label %389, label %384, !dbg !91

384:                                              ; preds = %__nv_sqrtf.exit55
  br i1 %.not1.i59, label %387, label %385, !dbg !91

385:                                              ; preds = %384
  %386 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %381) #5, !dbg !91
  br label %__nv_sqrtf.exit60, !dbg !91

387:                                              ; preds = %384
  %388 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %381) #5, !dbg !91
  br label %__nv_sqrtf.exit60, !dbg !91

389:                                              ; preds = %__nv_sqrtf.exit55
  br i1 %.not1.i59, label %392, label %390, !dbg !91

390:                                              ; preds = %389
  %391 = tail call float @llvm.nvvm.sqrt.rn.f(float %381) #5, !dbg !91
  br label %__nv_sqrtf.exit60, !dbg !91

392:                                              ; preds = %389
  %393 = tail call float @llvm.nvvm.sqrt.approx.f(float %381) #5, !dbg !91
  br label %__nv_sqrtf.exit60, !dbg !91

__nv_sqrtf.exit60:                                ; preds = %385, %387, %390, %392
  %.0.i58 = phi float [ %386, %385 ], [ %388, %387 ], [ %391, %390 ], [ %393, %392 ], !dbg !91
  %394 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %110, float 2.621440e+05) #5, !dbg !92
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !93
  %.not.i61 = icmp eq i32 %395, 0, !dbg !93
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !93
  %.not1.i64 = icmp eq i32 %396, 0, !dbg !93
  br i1 %.not.i61, label %402, label %397, !dbg !93

397:                                              ; preds = %__nv_sqrtf.exit60
  br i1 %.not1.i64, label %400, label %398, !dbg !93

398:                                              ; preds = %397
  %399 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %394) #5, !dbg !93
  br label %__nv_sqrtf.exit65, !dbg !93

400:                                              ; preds = %397
  %401 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %394) #5, !dbg !93
  br label %__nv_sqrtf.exit65, !dbg !93

402:                                              ; preds = %__nv_sqrtf.exit60
  br i1 %.not1.i64, label %405, label %403, !dbg !93

403:                                              ; preds = %402
  %404 = tail call float @llvm.nvvm.sqrt.rn.f(float %394) #5, !dbg !93
  br label %__nv_sqrtf.exit65, !dbg !93

405:                                              ; preds = %402
  %406 = tail call float @llvm.nvvm.sqrt.approx.f(float %394) #5, !dbg !93
  br label %__nv_sqrtf.exit65, !dbg !93

__nv_sqrtf.exit65:                                ; preds = %398, %400, %403, %405
  %.0.i63 = phi float [ %399, %398 ], [ %401, %400 ], [ %404, %403 ], [ %406, %405 ], !dbg !93
  %407 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %129, float 2.621440e+05) #5, !dbg !94
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !95
  %.not.i66 = icmp eq i32 %408, 0, !dbg !95
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !95
  %.not1.i69 = icmp eq i32 %409, 0, !dbg !95
  br i1 %.not.i66, label %415, label %410, !dbg !95

410:                                              ; preds = %__nv_sqrtf.exit65
  br i1 %.not1.i69, label %413, label %411, !dbg !95

411:                                              ; preds = %410
  %412 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %407) #5, !dbg !95
  br label %__nv_sqrtf.exit70, !dbg !95

413:                                              ; preds = %410
  %414 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %407) #5, !dbg !95
  br label %__nv_sqrtf.exit70, !dbg !95

415:                                              ; preds = %__nv_sqrtf.exit65
  br i1 %.not1.i69, label %418, label %416, !dbg !95

416:                                              ; preds = %415
  %417 = tail call float @llvm.nvvm.sqrt.rn.f(float %407) #5, !dbg !95
  br label %__nv_sqrtf.exit70, !dbg !95

418:                                              ; preds = %415
  %419 = tail call float @llvm.nvvm.sqrt.approx.f(float %407) #5, !dbg !95
  br label %__nv_sqrtf.exit70, !dbg !95

__nv_sqrtf.exit70:                                ; preds = %411, %413, %416, %418
  %.0.i68 = phi float [ %412, %411 ], [ %414, %413 ], [ %417, %416 ], [ %419, %418 ], !dbg !95
  %420 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %148, float 2.621440e+05) #5, !dbg !96
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !97
  %.not.i71 = icmp eq i32 %421, 0, !dbg !97
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !97
  %.not1.i74 = icmp eq i32 %422, 0, !dbg !97
  br i1 %.not.i71, label %428, label %423, !dbg !97

423:                                              ; preds = %__nv_sqrtf.exit70
  br i1 %.not1.i74, label %426, label %424, !dbg !97

424:                                              ; preds = %423
  %425 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %420) #5, !dbg !97
  br label %__nv_sqrtf.exit75, !dbg !97

426:                                              ; preds = %423
  %427 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %420) #5, !dbg !97
  br label %__nv_sqrtf.exit75, !dbg !97

428:                                              ; preds = %__nv_sqrtf.exit70
  br i1 %.not1.i74, label %431, label %429, !dbg !97

429:                                              ; preds = %428
  %430 = tail call float @llvm.nvvm.sqrt.rn.f(float %420) #5, !dbg !97
  br label %__nv_sqrtf.exit75, !dbg !97

431:                                              ; preds = %428
  %432 = tail call float @llvm.nvvm.sqrt.approx.f(float %420) #5, !dbg !97
  br label %__nv_sqrtf.exit75, !dbg !97

__nv_sqrtf.exit75:                                ; preds = %424, %426, %429, %431
  %.0.i73 = phi float [ %425, %424 ], [ %427, %426 ], [ %430, %429 ], [ %432, %431 ], !dbg !97
  %433 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %167, float 2.621440e+05) #5, !dbg !98
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !99
  %.not.i76 = icmp eq i32 %434, 0, !dbg !99
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !99
  %.not1.i79 = icmp eq i32 %435, 0, !dbg !99
  br i1 %.not.i76, label %441, label %436, !dbg !99

436:                                              ; preds = %__nv_sqrtf.exit75
  br i1 %.not1.i79, label %439, label %437, !dbg !99

437:                                              ; preds = %436
  %438 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %433) #5, !dbg !99
  br label %__nv_sqrtf.exit80, !dbg !99

439:                                              ; preds = %436
  %440 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %433) #5, !dbg !99
  br label %__nv_sqrtf.exit80, !dbg !99

441:                                              ; preds = %__nv_sqrtf.exit75
  br i1 %.not1.i79, label %444, label %442, !dbg !99

442:                                              ; preds = %441
  %443 = tail call float @llvm.nvvm.sqrt.rn.f(float %433) #5, !dbg !99
  br label %__nv_sqrtf.exit80, !dbg !99

444:                                              ; preds = %441
  %445 = tail call float @llvm.nvvm.sqrt.approx.f(float %433) #5, !dbg !99
  br label %__nv_sqrtf.exit80, !dbg !99

__nv_sqrtf.exit80:                                ; preds = %437, %439, %442, %444
  %.0.i78 = phi float [ %438, %437 ], [ %440, %439 ], [ %443, %442 ], [ %445, %444 ], !dbg !99
  %446 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %186, float 2.621440e+05) #5, !dbg !100
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !101
  %.not.i81 = icmp eq i32 %447, 0, !dbg !101
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !101
  %.not1.i84 = icmp eq i32 %448, 0, !dbg !101
  br i1 %.not.i81, label %454, label %449, !dbg !101

449:                                              ; preds = %__nv_sqrtf.exit80
  br i1 %.not1.i84, label %452, label %450, !dbg !101

450:                                              ; preds = %449
  %451 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %446) #5, !dbg !101
  br label %__nv_sqrtf.exit85, !dbg !101

452:                                              ; preds = %449
  %453 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %446) #5, !dbg !101
  br label %__nv_sqrtf.exit85, !dbg !101

454:                                              ; preds = %__nv_sqrtf.exit80
  br i1 %.not1.i84, label %457, label %455, !dbg !101

455:                                              ; preds = %454
  %456 = tail call float @llvm.nvvm.sqrt.rn.f(float %446) #5, !dbg !101
  br label %__nv_sqrtf.exit85, !dbg !101

457:                                              ; preds = %454
  %458 = tail call float @llvm.nvvm.sqrt.approx.f(float %446) #5, !dbg !101
  br label %__nv_sqrtf.exit85, !dbg !101

__nv_sqrtf.exit85:                                ; preds = %450, %452, %455, %457
  %.0.i83 = phi float [ %451, %450 ], [ %453, %452 ], [ %456, %455 ], [ %458, %457 ], !dbg !101
  %459 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %224, float 2.621440e+05) #5, !dbg !102
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !103
  %.not.i86 = icmp eq i32 %460, 0, !dbg !103
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !103
  %.not1.i89 = icmp eq i32 %461, 0, !dbg !103
  br i1 %.not.i86, label %467, label %462, !dbg !103

462:                                              ; preds = %__nv_sqrtf.exit85
  br i1 %.not1.i89, label %465, label %463, !dbg !103

463:                                              ; preds = %462
  %464 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %459) #5, !dbg !103
  br label %__nv_sqrtf.exit90, !dbg !103

465:                                              ; preds = %462
  %466 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %459) #5, !dbg !103
  br label %__nv_sqrtf.exit90, !dbg !103

467:                                              ; preds = %__nv_sqrtf.exit85
  br i1 %.not1.i89, label %470, label %468, !dbg !103

468:                                              ; preds = %467
  %469 = tail call float @llvm.nvvm.sqrt.rn.f(float %459) #5, !dbg !103
  br label %__nv_sqrtf.exit90, !dbg !103

470:                                              ; preds = %467
  %471 = tail call float @llvm.nvvm.sqrt.approx.f(float %459) #5, !dbg !103
  br label %__nv_sqrtf.exit90, !dbg !103

__nv_sqrtf.exit90:                                ; preds = %463, %465, %468, %470
  %.0.i88 = phi float [ %464, %463 ], [ %466, %465 ], [ %469, %468 ], [ %471, %470 ], !dbg !103
  %472 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %205, float 2.621440e+05) #5, !dbg !104
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !105
  %.not.i91 = icmp eq i32 %473, 0, !dbg !105
  %474 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !105
  %.not1.i94 = icmp eq i32 %474, 0, !dbg !105
  br i1 %.not.i91, label %480, label %475, !dbg !105

475:                                              ; preds = %__nv_sqrtf.exit90
  br i1 %.not1.i94, label %478, label %476, !dbg !105

476:                                              ; preds = %475
  %477 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %472) #5, !dbg !105
  br label %__nv_sqrtf.exit95, !dbg !105

478:                                              ; preds = %475
  %479 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %472) #5, !dbg !105
  br label %__nv_sqrtf.exit95, !dbg !105

480:                                              ; preds = %__nv_sqrtf.exit90
  br i1 %.not1.i94, label %483, label %481, !dbg !105

481:                                              ; preds = %480
  %482 = tail call float @llvm.nvvm.sqrt.rn.f(float %472) #5, !dbg !105
  br label %__nv_sqrtf.exit95, !dbg !105

483:                                              ; preds = %480
  %484 = tail call float @llvm.nvvm.sqrt.approx.f(float %472) #5, !dbg !105
  br label %__nv_sqrtf.exit95, !dbg !105

__nv_sqrtf.exit95:                                ; preds = %476, %478, %481, %483
  %.0.i93 = phi float [ %477, %476 ], [ %479, %478 ], [ %482, %481 ], [ %484, %483 ], !dbg !105
  %485 = fmul float %.0.i, 3.125000e-02, !dbg !106
  %486 = fadd float %485, 0.000000e+00, !dbg !107
  %487 = fmul float %.0.i3, 3.125000e-02, !dbg !108
  %488 = fadd float %486, %487, !dbg !109
  %489 = fmul float %.0.i8, 3.125000e-02, !dbg !110
  %490 = fadd float %488, %489, !dbg !111
  %491 = fmul float %.0.i13, 3.125000e-02, !dbg !112
  %492 = fadd float %490, %491, !dbg !113
  %493 = fmul float %.0.i18, 6.250000e-02, !dbg !114
  %494 = fadd float %492, %493, !dbg !115
  %495 = fmul float %.0.i23, 6.250000e-02, !dbg !116
  %496 = fadd float %494, %495, !dbg !117
  %497 = fmul float %.0.i28, 6.250000e-02, !dbg !118
  %498 = fadd float %496, %497, !dbg !119
  %499 = fmul float %.0.i33, 6.250000e-02, !dbg !120
  %500 = fadd float %498, %499, !dbg !121
  %501 = fmul float %.0.i38, 1.250000e-01, !dbg !122
  %502 = fadd float %500, %501, !dbg !123
  %503 = fmul float %.0.i43, 1.250000e-01, !dbg !124
  %504 = fadd float %502, %503, !dbg !125
  %505 = fmul float %.0.i48, 1.250000e-01, !dbg !126
  %506 = fadd float %504, %505, !dbg !127
  %507 = fmul float %.0.i53, 1.250000e-01, !dbg !128
  %508 = fadd float %506, %507, !dbg !129
  %509 = fmul float %.0.i58, 2.500000e-01, !dbg !130
  %510 = fadd float %508, %509, !dbg !131
  %511 = fmul float %.0.i63, 2.500000e-01, !dbg !132
  %512 = fadd float %510, %511, !dbg !133
  %513 = fmul float %.0.i68, 2.500000e-01, !dbg !134
  %514 = fadd float %512, %513, !dbg !135
  %515 = fmul float %.0.i73, 2.500000e-01, !dbg !136
  %516 = fadd float %514, %515, !dbg !137
  %517 = fadd float %516, %.0.i78, !dbg !138
  %518 = fadd float %517, %.0.i83, !dbg !139
  %519 = fadd float %518, %.0.i88, !dbg !140
  %520 = fadd float %519, %.0.i93, !dbg !141
  tail call void @llvm.nvvm.barrier0(), !dbg !142
  %521 = and i32 %22, 63, !dbg !143
  %522 = icmp eq i32 %521, 0, !dbg !143
  %523 = bitcast float %520 to i32, !dbg !143
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %523, ptr addrspace(1) %0, i1 %522) #5, !dbg !143
  ret void, !dbg !144
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnuuldwkom5k34lhpgnvy2c6ag7midpaonz4j5urv47zv5eidsst.py", directory: "inductor_cache/nu")
!4 = !{ptr @triton_per_fused_add_div_mean_mul_pow_sqrt_sub_25, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_mean_mul_pow_sqrt_sub_25, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_mean_mul_pow_sqrt_sub_25", linkageName: "triton_per_fused_add_div_mean_mul_pow_sqrt_sub_25", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 30, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 32, column: 30, scope: !7)
!16 = !DILocation(line: 32, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 31, scope: !7)
!18 = !DILocation(line: 33, column: 36, scope: !7)
!19 = !DILocation(line: 34, column: 31, scope: !7)
!20 = !DILocation(line: 34, column: 36, scope: !7)
!21 = !DILocation(line: 35, column: 31, scope: !7)
!22 = !DILocation(line: 35, column: 36, scope: !7)
!23 = !DILocation(line: 36, column: 31, scope: !7)
!24 = !DILocation(line: 36, column: 36, scope: !7)
!25 = !DILocation(line: 37, column: 31, scope: !7)
!26 = !DILocation(line: 37, column: 36, scope: !7)
!27 = !DILocation(line: 38, column: 20, scope: !7)
!28 = !DILocation(line: 40, column: 20, scope: !7)
!29 = !DILocation(line: 42, column: 20, scope: !7)
!30 = !DILocation(line: 44, column: 20, scope: !7)
!31 = !DILocation(line: 46, column: 20, scope: !7)
!32 = !DILocation(line: 48, column: 20, scope: !7)
!33 = !DILocation(line: 50, column: 20, scope: !7)
!34 = !DILocation(line: 52, column: 20, scope: !7)
!35 = !DILocation(line: 54, column: 20, scope: !7)
!36 = !DILocation(line: 56, column: 20, scope: !7)
!37 = !DILocation(line: 58, column: 20, scope: !7)
!38 = !DILocation(line: 60, column: 21, scope: !7)
!39 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!42 = !DILocation(line: 63, column: 24, scope: !7)
!43 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !42)
!44 = distinct !DILexicalBlockFile(scope: !40, file: !41, discriminator: 0)
!45 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !46)
!46 = !DILocation(line: 65, column: 24, scope: !7)
!47 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !46)
!48 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !49)
!49 = !DILocation(line: 67, column: 25, scope: !7)
!50 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !49)
!51 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !52)
!52 = !DILocation(line: 69, column: 26, scope: !7)
!53 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !52)
!54 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !55)
!55 = !DILocation(line: 71, column: 26, scope: !7)
!56 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !55)
!57 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !58)
!58 = !DILocation(line: 73, column: 26, scope: !7)
!59 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !58)
!60 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !61)
!61 = !DILocation(line: 75, column: 26, scope: !7)
!62 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !61)
!63 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !64)
!64 = !DILocation(line: 77, column: 26, scope: !7)
!65 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !64)
!66 = !DILocation(line: 79, column: 20, scope: !7)
!67 = !DILocation(line: 80, column: 27, scope: !7)
!68 = !DILocation(line: 85, column: 20, scope: !7)
!69 = !DILocation(line: 86, column: 27, scope: !7)
!70 = !DILocation(line: 89, column: 20, scope: !7)
!71 = !DILocation(line: 90, column: 27, scope: !7)
!72 = !DILocation(line: 93, column: 20, scope: !7)
!73 = !DILocation(line: 94, column: 27, scope: !7)
!74 = !DILocation(line: 98, column: 20, scope: !7)
!75 = !DILocation(line: 99, column: 27, scope: !7)
!76 = !DILocation(line: 103, column: 20, scope: !7)
!77 = !DILocation(line: 104, column: 27, scope: !7)
!78 = !DILocation(line: 107, column: 20, scope: !7)
!79 = !DILocation(line: 108, column: 27, scope: !7)
!80 = !DILocation(line: 111, column: 20, scope: !7)
!81 = !DILocation(line: 112, column: 27, scope: !7)
!82 = !DILocation(line: 116, column: 20, scope: !7)
!83 = !DILocation(line: 117, column: 27, scope: !7)
!84 = !DILocation(line: 121, column: 20, scope: !7)
!85 = !DILocation(line: 122, column: 27, scope: !7)
!86 = !DILocation(line: 125, column: 22, scope: !7)
!87 = !DILocation(line: 126, column: 28, scope: !7)
!88 = !DILocation(line: 129, column: 22, scope: !7)
!89 = !DILocation(line: 130, column: 28, scope: !7)
!90 = !DILocation(line: 134, column: 20, scope: !7)
!91 = !DILocation(line: 135, column: 28, scope: !7)
!92 = !DILocation(line: 139, column: 20, scope: !7)
!93 = !DILocation(line: 140, column: 28, scope: !7)
!94 = !DILocation(line: 143, column: 21, scope: !7)
!95 = !DILocation(line: 144, column: 28, scope: !7)
!96 = !DILocation(line: 147, column: 21, scope: !7)
!97 = !DILocation(line: 148, column: 28, scope: !7)
!98 = !DILocation(line: 151, column: 21, scope: !7)
!99 = !DILocation(line: 152, column: 28, scope: !7)
!100 = !DILocation(line: 156, column: 21, scope: !7)
!101 = !DILocation(line: 157, column: 28, scope: !7)
!102 = !DILocation(line: 160, column: 21, scope: !7)
!103 = !DILocation(line: 161, column: 28, scope: !7)
!104 = !DILocation(line: 164, column: 21, scope: !7)
!105 = !DILocation(line: 165, column: 28, scope: !7)
!106 = !DILocation(line: 82, column: 20, scope: !7)
!107 = !DILocation(line: 84, column: 20, scope: !7)
!108 = !DILocation(line: 87, column: 20, scope: !7)
!109 = !DILocation(line: 88, column: 20, scope: !7)
!110 = !DILocation(line: 91, column: 20, scope: !7)
!111 = !DILocation(line: 92, column: 20, scope: !7)
!112 = !DILocation(line: 95, column: 20, scope: !7)
!113 = !DILocation(line: 96, column: 20, scope: !7)
!114 = !DILocation(line: 101, column: 20, scope: !7)
!115 = !DILocation(line: 102, column: 20, scope: !7)
!116 = !DILocation(line: 105, column: 20, scope: !7)
!117 = !DILocation(line: 106, column: 20, scope: !7)
!118 = !DILocation(line: 109, column: 20, scope: !7)
!119 = !DILocation(line: 110, column: 20, scope: !7)
!120 = !DILocation(line: 113, column: 20, scope: !7)
!121 = !DILocation(line: 114, column: 20, scope: !7)
!122 = !DILocation(line: 119, column: 20, scope: !7)
!123 = !DILocation(line: 120, column: 20, scope: !7)
!124 = !DILocation(line: 123, column: 20, scope: !7)
!125 = !DILocation(line: 124, column: 20, scope: !7)
!126 = !DILocation(line: 127, column: 22, scope: !7)
!127 = !DILocation(line: 128, column: 21, scope: !7)
!128 = !DILocation(line: 131, column: 22, scope: !7)
!129 = !DILocation(line: 132, column: 22, scope: !7)
!130 = !DILocation(line: 137, column: 22, scope: !7)
!131 = !DILocation(line: 138, column: 22, scope: !7)
!132 = !DILocation(line: 141, column: 22, scope: !7)
!133 = !DILocation(line: 142, column: 22, scope: !7)
!134 = !DILocation(line: 145, column: 22, scope: !7)
!135 = !DILocation(line: 146, column: 22, scope: !7)
!136 = !DILocation(line: 149, column: 22, scope: !7)
!137 = !DILocation(line: 150, column: 22, scope: !7)
!138 = !DILocation(line: 155, column: 22, scope: !7)
!139 = !DILocation(line: 159, column: 22, scope: !7)
!140 = !DILocation(line: 163, column: 22, scope: !7)
!141 = !DILocation(line: 167, column: 22, scope: !7)
!142 = !DILocation(line: 168, column: 4, scope: !7)
!143 = !DILocation(line: 169, column: 72, scope: !7)
!144 = !DILocation(line: 169, column: 4, scope: !7)
