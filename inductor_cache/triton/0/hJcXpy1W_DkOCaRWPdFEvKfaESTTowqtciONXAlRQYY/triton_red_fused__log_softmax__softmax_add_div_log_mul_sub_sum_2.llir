; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 63, !dbg !10
  %7 = or disjoint i32 %6, 64, !dbg !10
  %8 = or disjoint i32 %6, 128, !dbg !10
  %9 = or disjoint i32 %6, 192, !dbg !10
  %10 = shl i32 %5, 2, !dbg !10
  %11 = and i32 %10, 252, !dbg !10
  %12 = and i32 %5, 60, !dbg !11
  %13 = and i32 %7, 124, !dbg !11
  %14 = and i32 %8, 188, !dbg !11
  %15 = and i32 %9, 252, !dbg !11
  %16 = zext nneg i32 %11 to i64, !dbg !12
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !12
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %17, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #4, !dbg !13
  %19 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !13
  %20 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !13
  %21 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !13
  %22 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !13
  %23 = shl nuw nsw i32 %11, 1, !dbg !13
  %24 = zext nneg i32 %23 to i64, !dbg !13
  %25 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %24, !dbg !13
  %26 = insertelement <1 x i32> poison, i32 %19, i64 0, !dbg !13
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %25, <1 x i32> %26, i1 true) #4, !dbg !13
  %27 = or disjoint i32 %23, 2, !dbg !13
  %28 = zext nneg i32 %27 to i64, !dbg !13
  %29 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %28, !dbg !13
  %30 = insertelement <1 x i32> poison, i32 %20, i64 0, !dbg !13
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %30, i1 true) #4, !dbg !13
  %31 = or disjoint i32 %23, 4, !dbg !13
  %32 = zext nneg i32 %31 to i64, !dbg !13
  %33 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %32, !dbg !13
  %34 = insertelement <1 x i32> poison, i32 %21, i64 0, !dbg !13
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %33, <1 x i32> %34, i1 true) #4, !dbg !13
  %35 = or disjoint i32 %23, 6, !dbg !13
  %36 = zext nneg i32 %35 to i64, !dbg !13
  %37 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %36, !dbg !13
  %38 = insertelement <1 x i32> poison, i32 %22, i64 0, !dbg !13
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %37, <1 x i32> %38, i1 true) #4, !dbg !13
  tail call void @llvm.nvvm.barrier0(), !dbg !13
  %39 = shl nuw nsw i32 %6, 1, !dbg !13
  %40 = zext nneg i32 %39 to i64, !dbg !13
  %41 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %40, !dbg !13
  %42 = load float, ptr addrspace(3) %41, align 8, !dbg !13
  %43 = shl nuw nsw i32 %7, 1, !dbg !13
  %44 = zext nneg i32 %43 to i64, !dbg !13
  %45 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %44, !dbg !13
  %46 = load float, ptr addrspace(3) %45, align 8, !dbg !13
  %47 = shl nuw nsw i32 %8, 1, !dbg !13
  %48 = zext nneg i32 %47 to i64, !dbg !13
  %49 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %48, !dbg !13
  %50 = load float, ptr addrspace(3) %49, align 8, !dbg !13
  %51 = shl nuw nsw i32 %9, 1, !dbg !13
  %52 = zext nneg i32 %51 to i64, !dbg !13
  %53 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %52, !dbg !13
  %54 = load float, ptr addrspace(3) %53, align 8, !dbg !13
  %55 = zext nneg i32 %12 to i64, !dbg !14
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !14
  %57 = zext nneg i32 %13 to i64, !dbg !14
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !14
  %59 = zext nneg i32 %14 to i64, !dbg !14
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !14
  %61 = zext nneg i32 %15 to i64, !dbg !14
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !14
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 true, i32 0, i1 true) #4, !dbg !15
  %64 = bitcast i32 %63 to float, !dbg !15
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 true, i32 0, i1 true) #4, !dbg !15
  %66 = bitcast i32 %65 to float, !dbg !15
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 true, i32 0, i1 true) #4, !dbg !15
  %68 = bitcast i32 %67 to float, !dbg !15
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 true, i32 0, i1 true) #4, !dbg !15
  %70 = bitcast i32 %69 to float, !dbg !15
  %71 = or disjoint i32 %12, 1, !dbg !16
  %72 = or disjoint i32 %13, 1, !dbg !16
  %73 = or disjoint i32 %14, 1, !dbg !16
  %74 = or disjoint i32 %15, 1, !dbg !16
  %75 = zext nneg i32 %71 to i64, !dbg !17
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %75, !dbg !17
  %77 = zext nneg i32 %72 to i64, !dbg !17
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !17
  %79 = zext nneg i32 %73 to i64, !dbg !17
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !17
  %81 = zext nneg i32 %74 to i64, !dbg !17
  %82 = getelementptr float, ptr addrspace(1) %1, i64 %81, !dbg !17
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 true, i32 0, i1 true) #4, !dbg !18
  %84 = bitcast i32 %83 to float, !dbg !18
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 true, i32 0, i1 true) #4, !dbg !18
  %86 = bitcast i32 %85 to float, !dbg !18
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 true, i32 0, i1 true) #4, !dbg !18
  %88 = bitcast i32 %87 to float, !dbg !18
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %82, i1 true, i32 0, i1 true) #4, !dbg !18
  %90 = bitcast i32 %89 to float, !dbg !18
  %91 = or disjoint i32 %12, 2, !dbg !19
  %92 = or disjoint i32 %13, 2, !dbg !19
  %93 = or disjoint i32 %14, 2, !dbg !19
  %94 = or disjoint i32 %15, 2, !dbg !19
  %95 = zext nneg i32 %91 to i64, !dbg !20
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %95, !dbg !20
  %97 = zext nneg i32 %92 to i64, !dbg !20
  %98 = getelementptr float, ptr addrspace(1) %1, i64 %97, !dbg !20
  %99 = zext nneg i32 %93 to i64, !dbg !20
  %100 = getelementptr float, ptr addrspace(1) %1, i64 %99, !dbg !20
  %101 = zext nneg i32 %94 to i64, !dbg !20
  %102 = getelementptr float, ptr addrspace(1) %1, i64 %101, !dbg !20
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %96, i1 true, i32 0, i1 true) #4, !dbg !21
  %104 = bitcast i32 %103 to float, !dbg !21
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %98, i1 true, i32 0, i1 true) #4, !dbg !21
  %106 = bitcast i32 %105 to float, !dbg !21
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %100, i1 true, i32 0, i1 true) #4, !dbg !21
  %108 = bitcast i32 %107 to float, !dbg !21
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %102, i1 true, i32 0, i1 true) #4, !dbg !21
  %110 = bitcast i32 %109 to float, !dbg !21
  %111 = or disjoint i32 %12, 3, !dbg !22
  %112 = or i32 %6, 67, !dbg !22
  %113 = or i32 %6, 131, !dbg !22
  %114 = or i32 %6, 195, !dbg !22
  %115 = zext nneg i32 %111 to i64, !dbg !23
  %116 = getelementptr float, ptr addrspace(1) %1, i64 %115, !dbg !23
  %117 = zext nneg i32 %112 to i64, !dbg !23
  %118 = getelementptr float, ptr addrspace(1) %1, i64 %117, !dbg !23
  %119 = zext nneg i32 %113 to i64, !dbg !23
  %120 = getelementptr float, ptr addrspace(1) %1, i64 %119, !dbg !23
  %121 = zext nneg i32 %114 to i64, !dbg !23
  %122 = getelementptr float, ptr addrspace(1) %1, i64 %121, !dbg !23
  %123 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %116, i1 true, i32 0, i1 true) #4, !dbg !24
  %124 = bitcast i32 %123 to float, !dbg !24
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %118, i1 true, i32 0, i1 true) #4, !dbg !24
  %126 = bitcast i32 %125 to float, !dbg !24
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %120, i1 true, i32 0, i1 true) #4, !dbg !24
  %128 = bitcast i32 %127 to float, !dbg !24
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %122, i1 true, i32 0, i1 true) #4, !dbg !24
  %130 = bitcast i32 %129 to float, !dbg !24
  %131 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !25
  %132 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %131, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #4, !dbg !26
  %133 = extractvalue { i32, i32, i32, i32 } %132, 0, !dbg !26
  %134 = extractvalue { i32, i32, i32, i32 } %132, 1, !dbg !26
  %135 = extractvalue { i32, i32, i32, i32 } %132, 2, !dbg !26
  %136 = extractvalue { i32, i32, i32, i32 } %132, 3, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %137 = insertelement <1 x i32> poison, i32 %133, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %25, <1 x i32> %137, i1 true) #4, !dbg !26
  %138 = insertelement <1 x i32> poison, i32 %134, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %29, <1 x i32> %138, i1 true) #4, !dbg !26
  %139 = insertelement <1 x i32> poison, i32 %135, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %33, <1 x i32> %139, i1 true) #4, !dbg !26
  %140 = insertelement <1 x i32> poison, i32 %136, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %37, <1 x i32> %140, i1 true) #4, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %141 = load float, ptr addrspace(3) %41, align 8, !dbg !26
  %142 = load float, ptr addrspace(3) %45, align 8, !dbg !26
  %143 = load float, ptr addrspace(3) %49, align 8, !dbg !26
  %144 = load float, ptr addrspace(3) %53, align 8, !dbg !26
  %145 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !27
  %146 = getelementptr float, ptr addrspace(1) %2, i64 %57, !dbg !27
  %147 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !27
  %148 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !27
  %149 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %145, i1 true, i32 0, i1 true) #4, !dbg !28
  %150 = bitcast i32 %149 to float, !dbg !28
  %151 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %146, i1 true, i32 0, i1 true) #4, !dbg !28
  %152 = bitcast i32 %151 to float, !dbg !28
  %153 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %147, i1 true, i32 0, i1 true) #4, !dbg !28
  %154 = bitcast i32 %153 to float, !dbg !28
  %155 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %148, i1 true, i32 0, i1 true) #4, !dbg !28
  %156 = bitcast i32 %155 to float, !dbg !28
  %157 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !29
  %158 = getelementptr float, ptr addrspace(1) %2, i64 %77, !dbg !29
  %159 = getelementptr float, ptr addrspace(1) %2, i64 %79, !dbg !29
  %160 = getelementptr float, ptr addrspace(1) %2, i64 %81, !dbg !29
  %161 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %157, i1 true, i32 0, i1 true) #4, !dbg !30
  %162 = bitcast i32 %161 to float, !dbg !30
  %163 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %158, i1 true, i32 0, i1 true) #4, !dbg !30
  %164 = bitcast i32 %163 to float, !dbg !30
  %165 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %159, i1 true, i32 0, i1 true) #4, !dbg !30
  %166 = bitcast i32 %165 to float, !dbg !30
  %167 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %160, i1 true, i32 0, i1 true) #4, !dbg !30
  %168 = bitcast i32 %167 to float, !dbg !30
  %169 = getelementptr float, ptr addrspace(1) %2, i64 %95, !dbg !31
  %170 = getelementptr float, ptr addrspace(1) %2, i64 %97, !dbg !31
  %171 = getelementptr float, ptr addrspace(1) %2, i64 %99, !dbg !31
  %172 = getelementptr float, ptr addrspace(1) %2, i64 %101, !dbg !31
  %173 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %169, i1 true, i32 0, i1 true) #4, !dbg !32
  %174 = bitcast i32 %173 to float, !dbg !32
  %175 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %170, i1 true, i32 0, i1 true) #4, !dbg !32
  %176 = bitcast i32 %175 to float, !dbg !32
  %177 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 true, i32 0, i1 true) #4, !dbg !32
  %178 = bitcast i32 %177 to float, !dbg !32
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %172, i1 true, i32 0, i1 true) #4, !dbg !32
  %180 = bitcast i32 %179 to float, !dbg !32
  %181 = getelementptr float, ptr addrspace(1) %2, i64 %115, !dbg !33
  %182 = getelementptr float, ptr addrspace(1) %2, i64 %117, !dbg !33
  %183 = getelementptr float, ptr addrspace(1) %2, i64 %119, !dbg !33
  %184 = getelementptr float, ptr addrspace(1) %2, i64 %121, !dbg !33
  %185 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %181, i1 true, i32 0, i1 true) #4, !dbg !34
  %186 = bitcast i32 %185 to float, !dbg !34
  %187 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %182, i1 true, i32 0, i1 true) #4, !dbg !34
  %188 = bitcast i32 %187 to float, !dbg !34
  %189 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %183, i1 true, i32 0, i1 true) #4, !dbg !34
  %190 = bitcast i32 %189 to float, !dbg !34
  %191 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %184, i1 true, i32 0, i1 true) #4, !dbg !34
  %192 = bitcast i32 %191 to float, !dbg !34
  %193 = fadd float %64, %84, !dbg !35
  %194 = fadd float %66, %86, !dbg !35
  %195 = fadd float %68, %88, !dbg !35
  %196 = fadd float %70, %90, !dbg !35
  %197 = fadd float %193, %104, !dbg !36
  %198 = fadd float %194, %106, !dbg !36
  %199 = fadd float %195, %108, !dbg !36
  %200 = fadd float %196, %110, !dbg !36
  %201 = fadd float %197, %124, !dbg !37
  %202 = fadd float %198, %126, !dbg !37
  %203 = fadd float %199, %128, !dbg !37
  %204 = fadd float %200, %130, !dbg !37
  %205 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %42, float %201) #4, !dbg !38
  %206 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %46, float %202) #4, !dbg !38
  %207 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %50, float %203) #4, !dbg !38
  %208 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float %204) #4, !dbg !38
  %209 = fadd float %205, 0x3DDB7CDFE0000000, !dbg !39
  %210 = fadd float %206, 0x3DDB7CDFE0000000, !dbg !39
  %211 = fadd float %207, 0x3DDB7CDFE0000000, !dbg !39
  %212 = fadd float %208, 0x3DDB7CDFE0000000, !dbg !39
  %213 = fcmp olt float %209, 0x3810000000000000, !dbg !40
  %214 = fmul float %209, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %213, float %214, float %209, !dbg !40
  %i.i.0.i = select i1 %213, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %215 = bitcast float %.02.i to i32, !dbg !40
  %216 = add i32 %215, -1059760811, !dbg !40
  %217 = and i32 %216, -8388608, !dbg !40
  %218 = sub i32 %215, %217, !dbg !40
  %219 = bitcast i32 %218 to float, !dbg !40
  %220 = sitofp i32 %217 to float, !dbg !40
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i = icmp eq i32 %221, 0, !dbg !40
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %220, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %220, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !40
  %.08.i = select i1 %.not.i, float %223, float %222, !dbg !40
  %224 = fadd float %219, -1.000000e+00, !dbg !40
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i = icmp eq i32 %225, 0, !dbg !40
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %224, float 0x3FC2073EC0000000) #4, !dbg !40
  %227 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %224, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i = select i1 %.not1.i, float %227, float %226, !dbg !40
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i = icmp eq i32 %228, 0, !dbg !40
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %224, float 0xBFBF19B980000000) #4, !dbg !40
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %224, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i = select i1 %.not2.i, float %230, float %229, !dbg !40
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i = icmp eq i32 %231, 0, !dbg !40
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %224, float 0x3FC1E52AA0000000) #4, !dbg !40
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %224, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i = select i1 %.not3.i, float %233, float %232, !dbg !40
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i = icmp eq i32 %234, 0, !dbg !40
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %224, float 0xBFC55B1720000000) #4, !dbg !40
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %224, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i = select i1 %.not4.i, float %236, float %235, !dbg !40
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i = icmp eq i32 %237, 0, !dbg !40
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %224, float 0x3FC99DA160000000) #4, !dbg !40
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %224, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i = select i1 %.not5.i, float %239, float %238, !dbg !40
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i = icmp eq i32 %240, 0, !dbg !40
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %224, float 0xBFCFFFE440000000) #4, !dbg !40
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %224, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i = select i1 %.not6.i, float %242, float %241, !dbg !40
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i = icmp eq i32 %243, 0, !dbg !40
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %224, float 0x3FD5554F00000000) #4, !dbg !40
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %224, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i = select i1 %.not7.i, float %245, float %244, !dbg !40
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i = icmp eq i32 %246, 0, !dbg !40
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %224, float -5.000000e-01) #4, !dbg !40
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %224, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not8.i, float %248, float %247, !dbg !40
  %249 = fmul float %224, %.07.i, !dbg !40
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i = icmp eq i32 %250, 0, !dbg !40
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float %224, float %224) #4, !dbg !40
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %249, float %224, float %224) #4, !dbg !40
  %.06.i = select i1 %.not9.i, float %252, float %251, !dbg !40
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i = icmp eq i32 %253, 0, !dbg !40
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !40
  %.04.i = select i1 %.not10.i, float %255, float %254, !dbg !40
  %256 = icmp ugt i32 %215, 2139095039, !dbg !40
  br i1 %256, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i = icmp eq i32 %257, 0, !dbg !40
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i = select i1 %.not11.i, float %259, float %258, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !40
  %260 = fcmp olt float %210, 0x3810000000000000, !dbg !40
  %261 = fmul float %210, 0x4160000000000000, !dbg !40
  %.02.i1 = select i1 %260, float %261, float %210, !dbg !40
  %i.i.0.i2 = select i1 %260, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %262 = bitcast float %.02.i1 to i32, !dbg !40
  %263 = add i32 %262, -1059760811, !dbg !40
  %264 = and i32 %263, -8388608, !dbg !40
  %265 = sub i32 %262, %264, !dbg !40
  %266 = bitcast i32 %265 to float, !dbg !40
  %267 = sitofp i32 %264 to float, !dbg !40
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i3 = icmp eq i32 %268, 0, !dbg !40
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %267, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !40
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %267, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !40
  %.08.i4 = select i1 %.not.i3, float %270, float %269, !dbg !40
  %271 = fadd float %266, -1.000000e+00, !dbg !40
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i5 = icmp eq i32 %272, 0, !dbg !40
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %271, float 0x3FC2073EC0000000) #4, !dbg !40
  %274 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %271, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i6 = select i1 %.not1.i5, float %274, float %273, !dbg !40
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i7 = icmp eq i32 %275, 0, !dbg !40
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %271, float 0xBFBF19B980000000) #4, !dbg !40
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %271, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i8 = select i1 %.not2.i7, float %277, float %276, !dbg !40
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i9 = icmp eq i32 %278, 0, !dbg !40
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %271, float 0x3FC1E52AA0000000) #4, !dbg !40
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %271, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i10 = select i1 %.not3.i9, float %280, float %279, !dbg !40
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i11 = icmp eq i32 %281, 0, !dbg !40
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %271, float 0xBFC55B1720000000) #4, !dbg !40
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %271, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i12 = select i1 %.not4.i11, float %283, float %282, !dbg !40
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i13 = icmp eq i32 %284, 0, !dbg !40
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %271, float 0x3FC99DA160000000) #4, !dbg !40
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %271, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i14 = select i1 %.not5.i13, float %286, float %285, !dbg !40
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i15 = icmp eq i32 %287, 0, !dbg !40
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %271, float 0xBFCFFFE440000000) #4, !dbg !40
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %271, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i16 = select i1 %.not6.i15, float %289, float %288, !dbg !40
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i17 = icmp eq i32 %290, 0, !dbg !40
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %271, float 0x3FD5554F00000000) #4, !dbg !40
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %271, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i18 = select i1 %.not7.i17, float %292, float %291, !dbg !40
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i19 = icmp eq i32 %293, 0, !dbg !40
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %271, float -5.000000e-01) #4, !dbg !40
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %271, float -5.000000e-01) #4, !dbg !40
  %.07.i20 = select i1 %.not8.i19, float %295, float %294, !dbg !40
  %296 = fmul float %271, %.07.i20, !dbg !40
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i21 = icmp eq i32 %297, 0, !dbg !40
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %296, float %271, float %271) #4, !dbg !40
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %296, float %271, float %271) #4, !dbg !40
  %.06.i22 = select i1 %.not9.i21, float %299, float %298, !dbg !40
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i23 = icmp eq i32 %300, 0, !dbg !40
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !40
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !40
  %.04.i24 = select i1 %.not10.i23, float %302, float %301, !dbg !40
  %303 = icmp ugt i32 %262, 2139095039, !dbg !40
  br i1 %303, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !40

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i28 = icmp eq i32 %304, 0, !dbg !40
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i29 = select i1 %.not11.i28, float %306, float %305, !dbg !40
  br label %__nv_logf.exit30, !dbg !40

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !40
  %307 = fcmp olt float %211, 0x3810000000000000, !dbg !40
  %308 = fmul float %211, 0x4160000000000000, !dbg !40
  %.02.i31 = select i1 %307, float %308, float %211, !dbg !40
  %i.i.0.i32 = select i1 %307, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %309 = bitcast float %.02.i31 to i32, !dbg !40
  %310 = add i32 %309, -1059760811, !dbg !40
  %311 = and i32 %310, -8388608, !dbg !40
  %312 = sub i32 %309, %311, !dbg !40
  %313 = bitcast i32 %312 to float, !dbg !40
  %314 = sitofp i32 %311 to float, !dbg !40
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i33 = icmp eq i32 %315, 0, !dbg !40
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %314, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !40
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %314, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !40
  %.08.i34 = select i1 %.not.i33, float %317, float %316, !dbg !40
  %318 = fadd float %313, -1.000000e+00, !dbg !40
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i35 = icmp eq i32 %319, 0, !dbg !40
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %318, float 0x3FC2073EC0000000) #4, !dbg !40
  %321 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %318, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i36 = select i1 %.not1.i35, float %321, float %320, !dbg !40
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i37 = icmp eq i32 %322, 0, !dbg !40
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %318, float 0xBFBF19B980000000) #4, !dbg !40
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %318, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i38 = select i1 %.not2.i37, float %324, float %323, !dbg !40
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i39 = icmp eq i32 %325, 0, !dbg !40
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %318, float 0x3FC1E52AA0000000) #4, !dbg !40
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %318, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i40 = select i1 %.not3.i39, float %327, float %326, !dbg !40
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i41 = icmp eq i32 %328, 0, !dbg !40
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %318, float 0xBFC55B1720000000) #4, !dbg !40
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %318, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i42 = select i1 %.not4.i41, float %330, float %329, !dbg !40
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i43 = icmp eq i32 %331, 0, !dbg !40
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %318, float 0x3FC99DA160000000) #4, !dbg !40
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %318, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i44 = select i1 %.not5.i43, float %333, float %332, !dbg !40
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i45 = icmp eq i32 %334, 0, !dbg !40
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %318, float 0xBFCFFFE440000000) #4, !dbg !40
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %318, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i46 = select i1 %.not6.i45, float %336, float %335, !dbg !40
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i47 = icmp eq i32 %337, 0, !dbg !40
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %318, float 0x3FD5554F00000000) #4, !dbg !40
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %318, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i48 = select i1 %.not7.i47, float %339, float %338, !dbg !40
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i49 = icmp eq i32 %340, 0, !dbg !40
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %318, float -5.000000e-01) #4, !dbg !40
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %318, float -5.000000e-01) #4, !dbg !40
  %.07.i50 = select i1 %.not8.i49, float %342, float %341, !dbg !40
  %343 = fmul float %318, %.07.i50, !dbg !40
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i51 = icmp eq i32 %344, 0, !dbg !40
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %343, float %318, float %318) #4, !dbg !40
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %343, float %318, float %318) #4, !dbg !40
  %.06.i52 = select i1 %.not9.i51, float %346, float %345, !dbg !40
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i53 = icmp eq i32 %347, 0, !dbg !40
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !40
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !40
  %.04.i54 = select i1 %.not10.i53, float %349, float %348, !dbg !40
  %350 = icmp ugt i32 %309, 2139095039, !dbg !40
  br i1 %350, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !40

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i58 = icmp eq i32 %351, 0, !dbg !40
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i59 = select i1 %.not11.i58, float %353, float %352, !dbg !40
  br label %__nv_logf.exit60, !dbg !40

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !40
  %354 = fcmp olt float %212, 0x3810000000000000, !dbg !40
  %355 = fmul float %212, 0x4160000000000000, !dbg !40
  %.02.i61 = select i1 %354, float %355, float %212, !dbg !40
  %i.i.0.i62 = select i1 %354, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %356 = bitcast float %.02.i61 to i32, !dbg !40
  %357 = add i32 %356, -1059760811, !dbg !40
  %358 = and i32 %357, -8388608, !dbg !40
  %359 = sub i32 %356, %358, !dbg !40
  %360 = bitcast i32 %359 to float, !dbg !40
  %361 = sitofp i32 %358 to float, !dbg !40
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i63 = icmp eq i32 %362, 0, !dbg !40
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %361, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !40
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %361, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !40
  %.08.i64 = select i1 %.not.i63, float %364, float %363, !dbg !40
  %365 = fadd float %360, -1.000000e+00, !dbg !40
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i65 = icmp eq i32 %366, 0, !dbg !40
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %365, float 0x3FC2073EC0000000) #4, !dbg !40
  %368 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %365, float 0x3FC2073EC0000000) #4, !dbg !40
  %.010.i66 = select i1 %.not1.i65, float %368, float %367, !dbg !40
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i67 = icmp eq i32 %369, 0, !dbg !40
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %365, float 0xBFBF19B980000000) #4, !dbg !40
  %371 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %365, float 0xBFBF19B980000000) #4, !dbg !40
  %.011.i68 = select i1 %.not2.i67, float %371, float %370, !dbg !40
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i69 = icmp eq i32 %372, 0, !dbg !40
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %365, float 0x3FC1E52AA0000000) #4, !dbg !40
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %365, float 0x3FC1E52AA0000000) #4, !dbg !40
  %.012.i70 = select i1 %.not3.i69, float %374, float %373, !dbg !40
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i71 = icmp eq i32 %375, 0, !dbg !40
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %365, float 0xBFC55B1720000000) #4, !dbg !40
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %365, float 0xBFC55B1720000000) #4, !dbg !40
  %.09.i72 = select i1 %.not4.i71, float %377, float %376, !dbg !40
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i73 = icmp eq i32 %378, 0, !dbg !40
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %365, float 0x3FC99DA160000000) #4, !dbg !40
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %365, float 0x3FC99DA160000000) #4, !dbg !40
  %.05.i74 = select i1 %.not5.i73, float %380, float %379, !dbg !40
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i75 = icmp eq i32 %381, 0, !dbg !40
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %365, float 0xBFCFFFE440000000) #4, !dbg !40
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %365, float 0xBFCFFFE440000000) #4, !dbg !40
  %.01.i76 = select i1 %.not6.i75, float %383, float %382, !dbg !40
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not7.i77 = icmp eq i32 %384, 0, !dbg !40
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %365, float 0x3FD5554F00000000) #4, !dbg !40
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %365, float 0x3FD5554F00000000) #4, !dbg !40
  %.0.i78 = select i1 %.not7.i77, float %386, float %385, !dbg !40
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not8.i79 = icmp eq i32 %387, 0, !dbg !40
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %365, float -5.000000e-01) #4, !dbg !40
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %365, float -5.000000e-01) #4, !dbg !40
  %.07.i80 = select i1 %.not8.i79, float %389, float %388, !dbg !40
  %390 = fmul float %365, %.07.i80, !dbg !40
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not9.i81 = icmp eq i32 %391, 0, !dbg !40
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %390, float %365, float %365) #4, !dbg !40
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %390, float %365, float %365) #4, !dbg !40
  %.06.i82 = select i1 %.not9.i81, float %393, float %392, !dbg !40
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not10.i83 = icmp eq i32 %394, 0, !dbg !40
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !40
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !40
  %.04.i84 = select i1 %.not10.i83, float %396, float %395, !dbg !40
  %397 = icmp ugt i32 %356, 2139095039, !dbg !40
  br i1 %397, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !40

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not11.i88 = icmp eq i32 %398, 0, !dbg !40
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i89 = select i1 %.not11.i88, float %400, float %399, !dbg !40
  br label %__nv_logf.exit90, !dbg !40

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !40
  %401 = fmul float %150, 0x3FF7154760000000, !dbg !41
  %402 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %401) #4, !dbg !41
  %403 = fmul float %152, 0x3FF7154760000000, !dbg !41
  %404 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %403) #4, !dbg !41
  %405 = fmul float %154, 0x3FF7154760000000, !dbg !41
  %406 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %405) #4, !dbg !41
  %407 = fmul float %156, 0x3FF7154760000000, !dbg !41
  %408 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %407) #4, !dbg !41
  %409 = fmul float %162, 0x3FF7154760000000, !dbg !42
  %410 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %409) #4, !dbg !42
  %411 = fmul float %164, 0x3FF7154760000000, !dbg !42
  %412 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %411) #4, !dbg !42
  %413 = fmul float %166, 0x3FF7154760000000, !dbg !42
  %414 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %413) #4, !dbg !42
  %415 = fmul float %168, 0x3FF7154760000000, !dbg !42
  %416 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %415) #4, !dbg !42
  %417 = fadd float %402, %410, !dbg !43
  %418 = fadd float %404, %412, !dbg !43
  %419 = fadd float %406, %414, !dbg !43
  %420 = fadd float %408, %416, !dbg !43
  %421 = fmul float %174, 0x3FF7154760000000, !dbg !44
  %422 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %421) #4, !dbg !44
  %423 = fmul float %176, 0x3FF7154760000000, !dbg !44
  %424 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %423) #4, !dbg !44
  %425 = fmul float %178, 0x3FF7154760000000, !dbg !44
  %426 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %425) #4, !dbg !44
  %427 = fmul float %180, 0x3FF7154760000000, !dbg !44
  %428 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %427) #4, !dbg !44
  %429 = fadd float %417, %422, !dbg !45
  %430 = fadd float %418, %424, !dbg !45
  %431 = fadd float %419, %426, !dbg !45
  %432 = fadd float %420, %428, !dbg !45
  %433 = fmul float %186, 0x3FF7154760000000, !dbg !46
  %434 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %433) #4, !dbg !46
  %435 = fmul float %188, 0x3FF7154760000000, !dbg !46
  %436 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %435) #4, !dbg !46
  %437 = fmul float %190, 0x3FF7154760000000, !dbg !46
  %438 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %437) #4, !dbg !46
  %439 = fmul float %192, 0x3FF7154760000000, !dbg !46
  %440 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %439) #4, !dbg !46
  %441 = fadd float %429, %434, !dbg !47
  %442 = fadd float %430, %436, !dbg !47
  %443 = fadd float %431, %438, !dbg !47
  %444 = fadd float %432, %440, !dbg !47
  %445 = fcmp olt float %441, 0x3810000000000000, !dbg !48
  %446 = fmul float %441, 0x4160000000000000, !dbg !48
  %.02.i91 = select i1 %445, float %446, float %441, !dbg !48
  %i.i.0.i92 = select i1 %445, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %447 = bitcast float %.02.i91 to i32, !dbg !48
  %448 = add i32 %447, -1059760811, !dbg !48
  %449 = and i32 %448, -8388608, !dbg !48
  %450 = sub i32 %447, %449, !dbg !48
  %451 = bitcast i32 %450 to float, !dbg !48
  %452 = sitofp i32 %449 to float, !dbg !48
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i93 = icmp eq i32 %453, 0, !dbg !48
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %452, float 0x3E80000000000000, float %i.i.0.i92) #4, !dbg !48
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %452, float 0x3E80000000000000, float %i.i.0.i92) #4, !dbg !48
  %.08.i94 = select i1 %.not.i93, float %455, float %454, !dbg !48
  %456 = fadd float %451, -1.000000e+00, !dbg !48
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i95 = icmp eq i32 %457, 0, !dbg !48
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %456, float 0x3FC2073EC0000000) #4, !dbg !48
  %459 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %456, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i96 = select i1 %.not1.i95, float %459, float %458, !dbg !48
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i97 = icmp eq i32 %460, 0, !dbg !48
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i96, float %456, float 0xBFBF19B980000000) #4, !dbg !48
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i96, float %456, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i98 = select i1 %.not2.i97, float %462, float %461, !dbg !48
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i99 = icmp eq i32 %463, 0, !dbg !48
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i98, float %456, float 0x3FC1E52AA0000000) #4, !dbg !48
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i98, float %456, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i100 = select i1 %.not3.i99, float %465, float %464, !dbg !48
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i101 = icmp eq i32 %466, 0, !dbg !48
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i100, float %456, float 0xBFC55B1720000000) #4, !dbg !48
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i100, float %456, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i102 = select i1 %.not4.i101, float %468, float %467, !dbg !48
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i103 = icmp eq i32 %469, 0, !dbg !48
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i102, float %456, float 0x3FC99DA160000000) #4, !dbg !48
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i102, float %456, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i104 = select i1 %.not5.i103, float %471, float %470, !dbg !48
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i105 = icmp eq i32 %472, 0, !dbg !48
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i104, float %456, float 0xBFCFFFE440000000) #4, !dbg !48
  %474 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i104, float %456, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i106 = select i1 %.not6.i105, float %474, float %473, !dbg !48
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i107 = icmp eq i32 %475, 0, !dbg !48
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i106, float %456, float 0x3FD5554F00000000) #4, !dbg !48
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i106, float %456, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i108 = select i1 %.not7.i107, float %477, float %476, !dbg !48
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i109 = icmp eq i32 %478, 0, !dbg !48
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i108, float %456, float -5.000000e-01) #4, !dbg !48
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i108, float %456, float -5.000000e-01) #4, !dbg !48
  %.07.i110 = select i1 %.not8.i109, float %480, float %479, !dbg !48
  %481 = fmul float %456, %.07.i110, !dbg !48
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i111 = icmp eq i32 %482, 0, !dbg !48
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %481, float %456, float %456) #4, !dbg !48
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %481, float %456, float %456) #4, !dbg !48
  %.06.i112 = select i1 %.not9.i111, float %484, float %483, !dbg !48
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i113 = icmp eq i32 %485, 0, !dbg !48
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i94, float 0x3FE62E4300000000, float %.06.i112) #4, !dbg !48
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i94, float 0x3FE62E4300000000, float %.06.i112) #4, !dbg !48
  %.04.i114 = select i1 %.not10.i113, float %487, float %486, !dbg !48
  %488 = icmp ugt i32 %447, 2139095039, !dbg !48
  br i1 %488, label %__nv_fmaf_rn.exit.i.i117, label %__nv_logf.exit120, !dbg !48

__nv_fmaf_rn.exit.i.i117:                         ; preds = %__nv_logf.exit90
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i118 = icmp eq i32 %489, 0, !dbg !48
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i91, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i91, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i119 = select i1 %.not11.i118, float %491, float %490, !dbg !48
  br label %__nv_logf.exit120, !dbg !48

__nv_logf.exit120:                                ; preds = %__nv_logf.exit90, %__nv_fmaf_rn.exit.i.i117
  %r.i.0.i115 = phi float [ %.03.i119, %__nv_fmaf_rn.exit.i.i117 ], [ %.04.i114, %__nv_logf.exit90 ], !dbg !48
  %492 = fcmp olt float %442, 0x3810000000000000, !dbg !48
  %493 = fmul float %442, 0x4160000000000000, !dbg !48
  %.02.i121 = select i1 %492, float %493, float %442, !dbg !48
  %i.i.0.i122 = select i1 %492, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %494 = bitcast float %.02.i121 to i32, !dbg !48
  %495 = add i32 %494, -1059760811, !dbg !48
  %496 = and i32 %495, -8388608, !dbg !48
  %497 = sub i32 %494, %496, !dbg !48
  %498 = bitcast i32 %497 to float, !dbg !48
  %499 = sitofp i32 %496 to float, !dbg !48
  %500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i123 = icmp eq i32 %500, 0, !dbg !48
  %501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %499, float 0x3E80000000000000, float %i.i.0.i122) #4, !dbg !48
  %502 = tail call float @llvm.nvvm.fma.rn.f(float %499, float 0x3E80000000000000, float %i.i.0.i122) #4, !dbg !48
  %.08.i124 = select i1 %.not.i123, float %502, float %501, !dbg !48
  %503 = fadd float %498, -1.000000e+00, !dbg !48
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i125 = icmp eq i32 %504, 0, !dbg !48
  %505 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %503, float 0x3FC2073EC0000000) #4, !dbg !48
  %506 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %503, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i126 = select i1 %.not1.i125, float %506, float %505, !dbg !48
  %507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i127 = icmp eq i32 %507, 0, !dbg !48
  %508 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i126, float %503, float 0xBFBF19B980000000) #4, !dbg !48
  %509 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i126, float %503, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i128 = select i1 %.not2.i127, float %509, float %508, !dbg !48
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i129 = icmp eq i32 %510, 0, !dbg !48
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i128, float %503, float 0x3FC1E52AA0000000) #4, !dbg !48
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i128, float %503, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i130 = select i1 %.not3.i129, float %512, float %511, !dbg !48
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i131 = icmp eq i32 %513, 0, !dbg !48
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i130, float %503, float 0xBFC55B1720000000) #4, !dbg !48
  %515 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i130, float %503, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i132 = select i1 %.not4.i131, float %515, float %514, !dbg !48
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i133 = icmp eq i32 %516, 0, !dbg !48
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i132, float %503, float 0x3FC99DA160000000) #4, !dbg !48
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i132, float %503, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i134 = select i1 %.not5.i133, float %518, float %517, !dbg !48
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i135 = icmp eq i32 %519, 0, !dbg !48
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i134, float %503, float 0xBFCFFFE440000000) #4, !dbg !48
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i134, float %503, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i136 = select i1 %.not6.i135, float %521, float %520, !dbg !48
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i137 = icmp eq i32 %522, 0, !dbg !48
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i136, float %503, float 0x3FD5554F00000000) #4, !dbg !48
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i136, float %503, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i138 = select i1 %.not7.i137, float %524, float %523, !dbg !48
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i139 = icmp eq i32 %525, 0, !dbg !48
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i138, float %503, float -5.000000e-01) #4, !dbg !48
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i138, float %503, float -5.000000e-01) #4, !dbg !48
  %.07.i140 = select i1 %.not8.i139, float %527, float %526, !dbg !48
  %528 = fmul float %503, %.07.i140, !dbg !48
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i141 = icmp eq i32 %529, 0, !dbg !48
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %528, float %503, float %503) #4, !dbg !48
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %528, float %503, float %503) #4, !dbg !48
  %.06.i142 = select i1 %.not9.i141, float %531, float %530, !dbg !48
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i143 = icmp eq i32 %532, 0, !dbg !48
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i124, float 0x3FE62E4300000000, float %.06.i142) #4, !dbg !48
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i124, float 0x3FE62E4300000000, float %.06.i142) #4, !dbg !48
  %.04.i144 = select i1 %.not10.i143, float %534, float %533, !dbg !48
  %535 = icmp ugt i32 %494, 2139095039, !dbg !48
  br i1 %535, label %__nv_fmaf_rn.exit.i.i147, label %__nv_logf.exit150, !dbg !48

__nv_fmaf_rn.exit.i.i147:                         ; preds = %__nv_logf.exit120
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i148 = icmp eq i32 %536, 0, !dbg !48
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i121, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i121, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i149 = select i1 %.not11.i148, float %538, float %537, !dbg !48
  br label %__nv_logf.exit150, !dbg !48

__nv_logf.exit150:                                ; preds = %__nv_logf.exit120, %__nv_fmaf_rn.exit.i.i147
  %r.i.0.i145 = phi float [ %.03.i149, %__nv_fmaf_rn.exit.i.i147 ], [ %.04.i144, %__nv_logf.exit120 ], !dbg !48
  %539 = fcmp olt float %443, 0x3810000000000000, !dbg !48
  %540 = fmul float %443, 0x4160000000000000, !dbg !48
  %.02.i151 = select i1 %539, float %540, float %443, !dbg !48
  %i.i.0.i152 = select i1 %539, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %541 = bitcast float %.02.i151 to i32, !dbg !48
  %542 = add i32 %541, -1059760811, !dbg !48
  %543 = and i32 %542, -8388608, !dbg !48
  %544 = sub i32 %541, %543, !dbg !48
  %545 = bitcast i32 %544 to float, !dbg !48
  %546 = sitofp i32 %543 to float, !dbg !48
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i153 = icmp eq i32 %547, 0, !dbg !48
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %546, float 0x3E80000000000000, float %i.i.0.i152) #4, !dbg !48
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %546, float 0x3E80000000000000, float %i.i.0.i152) #4, !dbg !48
  %.08.i154 = select i1 %.not.i153, float %549, float %548, !dbg !48
  %550 = fadd float %545, -1.000000e+00, !dbg !48
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i155 = icmp eq i32 %551, 0, !dbg !48
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %550, float 0x3FC2073EC0000000) #4, !dbg !48
  %553 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %550, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i156 = select i1 %.not1.i155, float %553, float %552, !dbg !48
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i157 = icmp eq i32 %554, 0, !dbg !48
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i156, float %550, float 0xBFBF19B980000000) #4, !dbg !48
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i156, float %550, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i158 = select i1 %.not2.i157, float %556, float %555, !dbg !48
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i159 = icmp eq i32 %557, 0, !dbg !48
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i158, float %550, float 0x3FC1E52AA0000000) #4, !dbg !48
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i158, float %550, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i160 = select i1 %.not3.i159, float %559, float %558, !dbg !48
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i161 = icmp eq i32 %560, 0, !dbg !48
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i160, float %550, float 0xBFC55B1720000000) #4, !dbg !48
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i160, float %550, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i162 = select i1 %.not4.i161, float %562, float %561, !dbg !48
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i163 = icmp eq i32 %563, 0, !dbg !48
  %564 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i162, float %550, float 0x3FC99DA160000000) #4, !dbg !48
  %565 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i162, float %550, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i164 = select i1 %.not5.i163, float %565, float %564, !dbg !48
  %566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i165 = icmp eq i32 %566, 0, !dbg !48
  %567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i164, float %550, float 0xBFCFFFE440000000) #4, !dbg !48
  %568 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i164, float %550, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i166 = select i1 %.not6.i165, float %568, float %567, !dbg !48
  %569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i167 = icmp eq i32 %569, 0, !dbg !48
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i166, float %550, float 0x3FD5554F00000000) #4, !dbg !48
  %571 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i166, float %550, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i168 = select i1 %.not7.i167, float %571, float %570, !dbg !48
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i169 = icmp eq i32 %572, 0, !dbg !48
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %550, float -5.000000e-01) #4, !dbg !48
  %574 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %550, float -5.000000e-01) #4, !dbg !48
  %.07.i170 = select i1 %.not8.i169, float %574, float %573, !dbg !48
  %575 = fmul float %550, %.07.i170, !dbg !48
  %576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i171 = icmp eq i32 %576, 0, !dbg !48
  %577 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %575, float %550, float %550) #4, !dbg !48
  %578 = tail call float @llvm.nvvm.fma.rn.f(float %575, float %550, float %550) #4, !dbg !48
  %.06.i172 = select i1 %.not9.i171, float %578, float %577, !dbg !48
  %579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i173 = icmp eq i32 %579, 0, !dbg !48
  %580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i154, float 0x3FE62E4300000000, float %.06.i172) #4, !dbg !48
  %581 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i154, float 0x3FE62E4300000000, float %.06.i172) #4, !dbg !48
  %.04.i174 = select i1 %.not10.i173, float %581, float %580, !dbg !48
  %582 = icmp ugt i32 %541, 2139095039, !dbg !48
  br i1 %582, label %__nv_fmaf_rn.exit.i.i177, label %__nv_logf.exit180, !dbg !48

__nv_fmaf_rn.exit.i.i177:                         ; preds = %__nv_logf.exit150
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i178 = icmp eq i32 %583, 0, !dbg !48
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i151, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i151, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i179 = select i1 %.not11.i178, float %585, float %584, !dbg !48
  br label %__nv_logf.exit180, !dbg !48

__nv_logf.exit180:                                ; preds = %__nv_logf.exit150, %__nv_fmaf_rn.exit.i.i177
  %r.i.0.i175 = phi float [ %.03.i179, %__nv_fmaf_rn.exit.i.i177 ], [ %.04.i174, %__nv_logf.exit150 ], !dbg !48
  %586 = fcmp olt float %444, 0x3810000000000000, !dbg !48
  %587 = fmul float %444, 0x4160000000000000, !dbg !48
  %.02.i181 = select i1 %586, float %587, float %444, !dbg !48
  %i.i.0.i182 = select i1 %586, float -2.300000e+01, float 0.000000e+00, !dbg !48
  %588 = bitcast float %.02.i181 to i32, !dbg !48
  %589 = add i32 %588, -1059760811, !dbg !48
  %590 = and i32 %589, -8388608, !dbg !48
  %591 = sub i32 %588, %590, !dbg !48
  %592 = bitcast i32 %591 to float, !dbg !48
  %593 = sitofp i32 %590 to float, !dbg !48
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not.i183 = icmp eq i32 %594, 0, !dbg !48
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %593, float 0x3E80000000000000, float %i.i.0.i182) #4, !dbg !48
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %593, float 0x3E80000000000000, float %i.i.0.i182) #4, !dbg !48
  %.08.i184 = select i1 %.not.i183, float %596, float %595, !dbg !48
  %597 = fadd float %592, -1.000000e+00, !dbg !48
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not1.i185 = icmp eq i32 %598, 0, !dbg !48
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %597, float 0x3FC2073EC0000000) #4, !dbg !48
  %600 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %597, float 0x3FC2073EC0000000) #4, !dbg !48
  %.010.i186 = select i1 %.not1.i185, float %600, float %599, !dbg !48
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not2.i187 = icmp eq i32 %601, 0, !dbg !48
  %602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i186, float %597, float 0xBFBF19B980000000) #4, !dbg !48
  %603 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i186, float %597, float 0xBFBF19B980000000) #4, !dbg !48
  %.011.i188 = select i1 %.not2.i187, float %603, float %602, !dbg !48
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not3.i189 = icmp eq i32 %604, 0, !dbg !48
  %605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i188, float %597, float 0x3FC1E52AA0000000) #4, !dbg !48
  %606 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i188, float %597, float 0x3FC1E52AA0000000) #4, !dbg !48
  %.012.i190 = select i1 %.not3.i189, float %606, float %605, !dbg !48
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not4.i191 = icmp eq i32 %607, 0, !dbg !48
  %608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i190, float %597, float 0xBFC55B1720000000) #4, !dbg !48
  %609 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i190, float %597, float 0xBFC55B1720000000) #4, !dbg !48
  %.09.i192 = select i1 %.not4.i191, float %609, float %608, !dbg !48
  %610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not5.i193 = icmp eq i32 %610, 0, !dbg !48
  %611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i192, float %597, float 0x3FC99DA160000000) #4, !dbg !48
  %612 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i192, float %597, float 0x3FC99DA160000000) #4, !dbg !48
  %.05.i194 = select i1 %.not5.i193, float %612, float %611, !dbg !48
  %613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not6.i195 = icmp eq i32 %613, 0, !dbg !48
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i194, float %597, float 0xBFCFFFE440000000) #4, !dbg !48
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i194, float %597, float 0xBFCFFFE440000000) #4, !dbg !48
  %.01.i196 = select i1 %.not6.i195, float %615, float %614, !dbg !48
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not7.i197 = icmp eq i32 %616, 0, !dbg !48
  %617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i196, float %597, float 0x3FD5554F00000000) #4, !dbg !48
  %618 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i196, float %597, float 0x3FD5554F00000000) #4, !dbg !48
  %.0.i198 = select i1 %.not7.i197, float %618, float %617, !dbg !48
  %619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not8.i199 = icmp eq i32 %619, 0, !dbg !48
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i198, float %597, float -5.000000e-01) #4, !dbg !48
  %621 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i198, float %597, float -5.000000e-01) #4, !dbg !48
  %.07.i200 = select i1 %.not8.i199, float %621, float %620, !dbg !48
  %622 = fmul float %597, %.07.i200, !dbg !48
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not9.i201 = icmp eq i32 %623, 0, !dbg !48
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %622, float %597, float %597) #4, !dbg !48
  %625 = tail call float @llvm.nvvm.fma.rn.f(float %622, float %597, float %597) #4, !dbg !48
  %.06.i202 = select i1 %.not9.i201, float %625, float %624, !dbg !48
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not10.i203 = icmp eq i32 %626, 0, !dbg !48
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i184, float 0x3FE62E4300000000, float %.06.i202) #4, !dbg !48
  %628 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i184, float 0x3FE62E4300000000, float %.06.i202) #4, !dbg !48
  %.04.i204 = select i1 %.not10.i203, float %628, float %627, !dbg !48
  %629 = icmp ugt i32 %588, 2139095039, !dbg !48
  br i1 %629, label %__nv_fmaf_rn.exit.i.i207, label %__nv_logf.exit210, !dbg !48

__nv_fmaf_rn.exit.i.i207:                         ; preds = %__nv_logf.exit180
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !48
  %.not11.i208 = icmp eq i32 %630, 0, !dbg !48
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i181, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i181, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !48
  %.03.i209 = select i1 %.not11.i208, float %632, float %631, !dbg !48
  br label %__nv_logf.exit210, !dbg !48

__nv_logf.exit210:                                ; preds = %__nv_logf.exit180, %__nv_fmaf_rn.exit.i.i207
  %r.i.0.i205 = phi float [ %.03.i209, %__nv_fmaf_rn.exit.i.i207 ], [ %.04.i204, %__nv_logf.exit180 ], !dbg !48
  %633 = insertelement <2 x float> poison, float %.02.i151, i64 0, !dbg !48
  %634 = insertelement <2 x float> %633, float %.02.i181, i64 1, !dbg !48
  %635 = fcmp oeq <2 x float> %634, zeroinitializer, !dbg !48
  %636 = insertelement <2 x float> poison, float %.02.i91, i64 0, !dbg !48
  %637 = insertelement <2 x float> %636, float %.02.i121, i64 1, !dbg !48
  %638 = fcmp oeq <2 x float> %637, zeroinitializer, !dbg !48
  %639 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !40
  %640 = insertelement <2 x float> %639, float %.02.i61, i64 1, !dbg !40
  %641 = fcmp oeq <2 x float> %640, zeroinitializer, !dbg !40
  %642 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !40
  %643 = insertelement <2 x float> %642, float %.02.i1, i64 1, !dbg !40
  %644 = fcmp oeq <2 x float> %643, zeroinitializer, !dbg !40
  %645 = lshr i32 %5, 5, !dbg !10
  %646 = and i32 %5, 31, !dbg !10
  %647 = insertelement <2 x float> poison, float %r.i.0.i115, i64 0, !dbg !48
  %648 = insertelement <2 x float> %647, float %r.i.0.i145, i64 1, !dbg !48
  %649 = select <2 x i1> %638, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %648, !dbg !48
  %650 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !40
  %651 = insertelement <2 x float> %650, float %r.i.0.i25, i64 1, !dbg !40
  %652 = select <2 x i1> %644, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %651, !dbg !40
  %653 = insertelement <2 x float> poison, float %141, i64 0, !dbg !49
  %654 = insertelement <2 x float> %653, float %142, i64 1, !dbg !49
  %655 = fsub <2 x float> %654, %649, !dbg !49
  %656 = fsub <2 x float> %652, %655, !dbg !50
  %657 = insertelement <2 x float> poison, float %205, i64 0, !dbg !51
  %658 = insertelement <2 x float> %657, float %206, i64 1, !dbg !51
  %659 = fmul <2 x float> %658, %656, !dbg !51
  %660 = fadd <2 x float> %659, zeroinitializer, !dbg !52
  %661 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !40
  %662 = insertelement <2 x float> %661, float %r.i.0.i85, i64 1, !dbg !40
  %663 = select <2 x i1> %641, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %662, !dbg !40
  %664 = insertelement <2 x float> poison, float %r.i.0.i175, i64 0, !dbg !48
  %665 = insertelement <2 x float> %664, float %r.i.0.i205, i64 1, !dbg !48
  %666 = select <2 x i1> %635, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %665, !dbg !48
  %667 = insertelement <2 x float> poison, float %143, i64 0, !dbg !49
  %668 = insertelement <2 x float> %667, float %144, i64 1, !dbg !49
  %669 = fsub <2 x float> %668, %666, !dbg !49
  %670 = fsub <2 x float> %663, %669, !dbg !50
  %671 = insertelement <2 x float> poison, float %207, i64 0, !dbg !51
  %672 = insertelement <2 x float> %671, float %208, i64 1, !dbg !51
  %673 = fmul <2 x float> %672, %670, !dbg !51
  %674 = fadd <2 x float> %673, zeroinitializer, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %shift = shufflevector <2 x float> %660, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !57
  %675 = fadd <2 x float> %660, %shift, !dbg !57
  %676 = fadd <2 x float> %675, %674, !dbg !57
  %shift211 = shufflevector <2 x float> %674, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !57
  %677 = fadd <2 x float> %676, %shift211, !dbg !57
  %678 = extractelement <2 x float> %677, i64 0, !dbg !57
  %679 = bitcast float %678 to i32, !dbg !53
  %680 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %679, i32 16, i32 31), !dbg !53
  %681 = bitcast i32 %680 to float, !dbg !53
  %682 = fadd float %678, %681, !dbg !57
  %683 = bitcast float %682 to i32, !dbg !53
  %684 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %683, i32 8, i32 31), !dbg !53
  %685 = bitcast i32 %684 to float, !dbg !53
  %686 = fadd float %682, %685, !dbg !57
  %687 = bitcast float %686 to i32, !dbg !53
  %688 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %687, i32 4, i32 31), !dbg !53
  %689 = bitcast i32 %688 to float, !dbg !53
  %690 = fadd float %686, %689, !dbg !57
  %691 = bitcast float %690 to i32, !dbg !53
  %692 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %691, i32 2, i32 31), !dbg !53
  %693 = bitcast i32 %692 to float, !dbg !53
  %694 = fadd float %690, %693, !dbg !57
  %695 = bitcast float %694 to i32, !dbg !53
  %696 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %695, i32 1, i32 31), !dbg !53
  %697 = bitcast i32 %696 to float, !dbg !53
  %698 = fadd float %694, %697, !dbg !57
  %699 = icmp eq i32 %646, 0, !dbg !53
  %700 = and i32 %645, 1, !dbg !53
  %701 = zext nneg i32 %700 to i64, !dbg !53
  %702 = getelementptr float, ptr addrspace(3) @global_smem, i64 %701, !dbg !53
  %703 = bitcast float %698 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %702, <1 x i32> %703, i1 %699) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %704 = icmp slt i32 %5, 2, !dbg !53
  %705 = sext i32 %5 to i64, !dbg !53
  %706 = getelementptr float, ptr addrspace(3) @global_smem, i64 %705, !dbg !53
  %707 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %706, i1 %704) #4, !dbg !53
  %708 = bitcast i32 %707 to float, !dbg !53
  %709 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %707, i32 1, i32 31), !dbg !53
  %710 = bitcast i32 %709 to float, !dbg !53
  %711 = fadd float %708, %710, !dbg !57
  %712 = and i32 %5, 1, !dbg !53
  %713 = icmp eq i32 %712, 0, !dbg !53
  %714 = and i1 %704, %713, !dbg !53
  %715 = bitcast float %711 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %706, <1 x i32> %715, i1 %714) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %716 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !53
  %717 = fmul float %716, 2.500000e-01, !dbg !59
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %718 = icmp eq i32 %6, 0, !dbg !61
  %719 = bitcast float %717 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %719, ptr addrspace(1) %0, i1 %718) #4, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py", directory: "inductor_cache/6j")
!4 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", linkageName: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 25, column: 33, scope: !7)
!11 = !DILocation(line: 33, column: 36, scope: !7)
!12 = !DILocation(line: 32, column: 34, scope: !7)
!13 = !DILocation(line: 32, column: 39, scope: !7)
!14 = !DILocation(line: 33, column: 34, scope: !7)
!15 = !DILocation(line: 33, column: 41, scope: !7)
!16 = !DILocation(line: 34, column: 38, scope: !7)
!17 = !DILocation(line: 34, column: 34, scope: !7)
!18 = !DILocation(line: 34, column: 45, scope: !7)
!19 = !DILocation(line: 35, column: 38, scope: !7)
!20 = !DILocation(line: 35, column: 34, scope: !7)
!21 = !DILocation(line: 35, column: 45, scope: !7)
!22 = !DILocation(line: 36, column: 38, scope: !7)
!23 = !DILocation(line: 36, column: 34, scope: !7)
!24 = !DILocation(line: 36, column: 45, scope: !7)
!25 = !DILocation(line: 37, column: 35, scope: !7)
!26 = !DILocation(line: 37, column: 40, scope: !7)
!27 = !DILocation(line: 38, column: 35, scope: !7)
!28 = !DILocation(line: 38, column: 42, scope: !7)
!29 = !DILocation(line: 39, column: 35, scope: !7)
!30 = !DILocation(line: 39, column: 46, scope: !7)
!31 = !DILocation(line: 40, column: 35, scope: !7)
!32 = !DILocation(line: 40, column: 46, scope: !7)
!33 = !DILocation(line: 41, column: 35, scope: !7)
!34 = !DILocation(line: 41, column: 46, scope: !7)
!35 = !DILocation(line: 42, column: 22, scope: !7)
!36 = !DILocation(line: 43, column: 22, scope: !7)
!37 = !DILocation(line: 44, column: 22, scope: !7)
!38 = !DILocation(line: 45, column: 22, scope: !7)
!39 = !DILocation(line: 47, column: 23, scope: !7)
!40 = !DILocation(line: 48, column: 28, scope: !7)
!41 = !DILocation(line: 49, column: 28, scope: !7)
!42 = !DILocation(line: 50, column: 28, scope: !7)
!43 = !DILocation(line: 51, column: 24, scope: !7)
!44 = !DILocation(line: 52, column: 28, scope: !7)
!45 = !DILocation(line: 53, column: 24, scope: !7)
!46 = !DILocation(line: 54, column: 28, scope: !7)
!47 = !DILocation(line: 55, column: 24, scope: !7)
!48 = !DILocation(line: 56, column: 28, scope: !7)
!49 = !DILocation(line: 57, column: 24, scope: !7)
!50 = !DILocation(line: 58, column: 24, scope: !7)
!51 = !DILocation(line: 59, column: 23, scope: !7)
!52 = !DILocation(line: 61, column: 25, scope: !7)
!53 = !DILocation(line: 267, column: 36, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!56 = !DILocation(line: 63, column: 27, scope: !7)
!57 = !DILocation(line: 256, column: 15, scope: !58, inlinedAt: !56)
!58 = distinct !DILexicalBlockFile(scope: !54, file: !55, discriminator: 0)
!59 = !DILocation(line: 65, column: 20, scope: !7)
!60 = !DILocation(line: 66, column: 4, scope: !7)
!61 = !DILocation(line: 67, column: 71, scope: !7)
!62 = !DILocation(line: 67, column: 4, scope: !7)
