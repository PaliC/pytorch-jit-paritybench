//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_embedding_mean_pow_sub_8 // -- Begin function triton_per_fused_embedding_mean_pow_sub_8
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 54, 51, 47, 99, 54, 51, 106, 99, 97, 117, 51, 109, 54, 114, 118, 102, 113, 55, 50, 107, 53, 104, 109, 50, 121, 52, 111, 50, 120, 54, 98, 121, 54, 121, 115, 97, 109, 54, 121, 105, 98, 55, 108, 97, 100, 103, 99, 108, 53, 51, 104, 116, 51, 101, 99, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 48, 50, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_embedding_mean_pow_sub_8
.visible .entry triton_per_fused_embedding_mean_pow_sub_8(
	.param .u64 .ptr .global .align 1 triton_per_fused_embedding_mean_pow_sub_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_embedding_mean_pow_sub_8_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_embedding_mean_pow_sub_8_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_embedding_mean_pow_sub_8_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_embedding_mean_pow_sub_8_param_4,
	.param .u32 triton_per_fused_embedding_mean_pow_sub_8_param_5,
	.param .u32 triton_per_fused_embedding_mean_pow_sub_8_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<122>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_per_fused_embedding_mean_pow_sub_8_param_0];
$L__tmp0:
	.loc	1 23 28                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:23:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:25:21
	setp.gt.s32 	%p12, %r10, 511;
	setp.lt.s32 	%p8, %r10, 512;
	ld.param.u64 	%rd13, [triton_per_fused_embedding_mean_pow_sub_8_param_2];
	.loc	1 26 34                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:26:34
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused_embedding_mean_pow_sub_8_param_3];
	and.b32  	%r3, %r2, 63;
	or.b32  	%r4, %r3, 64;
	shl.b32 	%r21, %r2, 1;
	and.b32  	%r22, %r21, 62;
	.loc	1 32 19                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:32:19
	shr.s32 	%r23, %r10, 31;
	shr.u32 	%r24, %r23, 26;
	add.s32 	%r25, %r10, %r24;
	.loc	1 31 19                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:31:19
	and.b32  	%r26, %r25, 33554368;
	sub.s32 	%r27, %r10, %r26;
	.loc	1 33 32                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:33:32
	shl.b32 	%r28, %r10, 1;
	.loc	1 33 30                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:33:30
	mul.wide.s32 	%rd15, %r28, 8;
	add.s64 	%rd6, %rd12, %rd15;
	add.s64 	%rd8, %rd6, 8;
	.loc	1 33 50                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:33:50
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	@!%p8 mov.u64 %rd5, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p8 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	@!%p8 mov.u64 %rd7, 0x0;
	// end inline asm
	.loc	1 34 46                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:46
	shl.b32 	%r29, %r27, 7;
	.loc	1 34 42                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:42
	or.b32  	%r30, %r29, %r3;
	or.b32  	%r31, %r29, %r4;
	.loc	1 34 56                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:56
	shl.b32 	%r32, %r25, 7;
	and.b32  	%r33, %r32, -8192;
	.loc	1 34 51                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:51
	add.s32 	%r34, %r30, %r33;
	add.s32 	%r35, %r31, %r33;
	.loc	1 34 63                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:63
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 22;
	add.s32 	%r38, %r34, %r37;
	shr.s32 	%r39, %r38, 10;
	shr.s32 	%r40, %r35, 31;
	shr.u32 	%r41, %r40, 22;
	add.s32 	%r42, %r35, %r41;
	shr.s32 	%r43, %r42, 10;
	.loc	1 34 71                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:71
	shr.u32 	%r44, %r39, 28;
	add.s32 	%r45, %r39, %r44;
	and.b32  	%r46, %r45, 268435440;
	sub.s32 	%r47, %r39, %r46;
	shr.u32 	%r48, %r43, 28;
	add.s32 	%r49, %r43, %r48;
	and.b32  	%r50, %r49, 268435440;
	sub.s32 	%r51, %r43, %r50;
	.loc	1 34 35                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:35
	shl.b32 	%r52, %r47, 4;
	shl.b32 	%r53, %r51, 4;
	.loc	1 34 84                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:84
	shl.b32 	%r54, %r3, 8;
	.loc	1 34 130                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:130
	shr.u32 	%r55, %r36, 18;
	add.s32 	%r56, %r34, %r55;
	shr.u32 	%r57, %r40, 18;
	add.s32 	%r58, %r35, %r57;
	.loc	1 34 103                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:103
	and.b32  	%r59, %r56, -16384;
	and.b32  	%r60, %r58, -16384;
	.loc	1 34 159                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:159
	bfe.s32 	%r61, %r27, 24, 1;
	shr.u32 	%r62, %r61, 26;
	add.s32 	%r63, %r30, %r62;
	shr.s32 	%r64, %r63, 6;
	add.s32 	%r65, %r31, %r62;
	shr.s32 	%r66, %r65, 6;
	.loc	1 34 165                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:165
	shr.u32 	%r67, %r64, 28;
	add.s32 	%r68, %r64, %r67;
	and.b32  	%r69, %r68, -16;
	sub.s32 	%r70, %r64, %r69;
	shr.u32 	%r71, %r66, 28;
	add.s32 	%r72, %r66, %r71;
	and.b32  	%r73, %r72, -16;
	sub.s32 	%r74, %r66, %r73;
	.loc	1 34 78                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:78
	add.s32 	%r75, %r70, %r54;
	.loc	1 34 96                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:96
	add.s32 	%r76, %r75, %r59;
	.loc	1 34 141                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:141
	add.s32 	%r77, %r76, %r52;
	.loc	1 34 78                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:78
	add.s32 	%r78, %r74, %r54;
	.loc	1 34 96                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:96
	add.s32 	%r79, %r78, %r60;
	.loc	1 34 141                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:141
	add.s32 	%r80, %r79, %r53;
	.loc	1 34 30                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:30
	mul.wide.s32 	%rd16, %r77, 4;
	add.s64 	%rd9, %rd13, %rd16;
	mul.wide.s32 	%rd17, %r80, 4;
	add.s64 	%rd10, %rd13, %rd17;
	mov.b32 	%r14, 0;
	.loc	1 34 172                        // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:34:172
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	@!%p8 mov.u32 %r11, %r14;
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	@!%p8 mov.u32 %r13, %r14;
	// end inline asm
	shl.b32 	%r81, %r3, 2;
	mov.u32 	%r82, global_smem;
	add.s32 	%r15, %r82, %r81;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r15 + 0 ], %r11;
	// end inline asm
	add.s32 	%r17, %r15, 256;
	// begin inline asm
	@%p11 st.shared.b32 [ %r17 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	.loc	1 35 31                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:35:31
	mul.wide.u32 	%rd18, %r22, 4;
	add.s64 	%rd11, %rd14, %rd18;
	.loc	1 35 42                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:35:42
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 39 32                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:39:32
	shr.u64 	%rd19, %rd7, 53;
	shr.u64 	%rd20, %rd5, 53;
	and.b64  	%rd21, %rd20, 1024;
	and.b64  	%rd22, %rd19, 1024;
	add.s64 	%rd1, %rd22, %rd7;
	add.s64 	%rd2, %rd21, %rd5;
	.loc	1 40 63                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:40:63
	or.b64  	%rd23, %rd1, %rd2;
	setp.lt.u64 	%p13, %rd23, 1024;
	or.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 63                          // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:0:63
	ld.param.u64 	%rd4, [triton_per_fused_embedding_mean_pow_sub_8_param_4];
	ld.param.u64 	%rd3, [triton_per_fused_embedding_mean_pow_sub_8_param_1];
	and.b32  	%r5, %r21, 126;
	shl.b32 	%r83, %r5, 2;
	add.s32 	%r7, %r82, %r83;
	ld.shared.v2.f32 	{%f1, %f2}, [%r7];
	.loc	1 35 42                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:35:42
	mov.b32 	%f3, %r20;
	mov.b32 	%f4, %r19;
	.loc	1 26 34                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:26:34
	and.b32  	%r99, %r2, 31;
	.loc	1 40 63                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:40:63
	bar.sync 	0;
	.loc	1 41 44                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:41:44
	shl.b32 	%r100, %r3, 10;
	.loc	1 41 30                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:41:30
	shl.b64 	%rd27, %rd2, 2;
	add.s64 	%rd28, %rd3, %rd27;
	mul.wide.u32 	%rd29, %r100, 4;
	add.s64 	%rd24, %rd28, %rd29;
	shl.b64 	%rd30, %rd1, 2;
	add.s64 	%rd31, %rd3, %rd30;
	add.s64 	%rd25, %rd31, %rd29;
	.loc	1 41 56                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:41:56
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r84 }, [ %rd24 + 0 ];
	@!%p8 mov.u32 %r84, %r14;
	// end inline asm
	// begin inline asm
	mov.u32 %r86, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r86 }, [ %rd25 + 0 ];
	@!%p8 mov.u32 %r86, %r14;
	// end inline asm
	.loc	1 42 18                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:42:18
	add.f32 	%f5, %f1, %f4;
	add.f32 	%f6, %f2, %f3;
	bar.sync 	0;
	add.s32 	%r88, %r7, %r83;
	mov.b32 	%r89, %f5;
	// begin inline asm
	@%p11 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	add.s32 	%r90, %r88, 8;
	mov.b32 	%r91, %f6;
	// begin inline asm
	@%p11 st.shared.b32 [ %r90 + 0 ], %r91;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r103, %r15, %r81;
	ld.shared.f32 	%f7, [%r103];
	shl.b32 	%r104, %r4, 3;
	add.s32 	%r106, %r82, %r104;
	ld.shared.f32 	%f8, [%r106];
	.loc	1 41 56                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:41:56
	mov.b32 	%f9, %r86;
	mov.b32 	%f10, %r84;
	.loc	1 43 19                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:43:19
	sub.f32 	%f11, %f10, %f7;
	sub.f32 	%f12, %f9, %f8;
	.loc	1 44 20                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:44:20
	mul.f32 	%f13, %f12, %f12;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f11, %f11, %f13;
	selp.f32 	%f15, %f14, 0f00000000, %p8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f15;
	shfl.sync.bfly.b32	%r108, %r107, 16, 31, -1;
	mov.b32 	%f16, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f17;
	shfl.sync.bfly.b32	%r110, %r109, 8, 31, -1;
	mov.b32 	%f18, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f19;
	shfl.sync.bfly.b32	%r112, %r111, 4, 31, -1;
	mov.b32 	%f20, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f21;
	shfl.sync.bfly.b32	%r114, %r113, 2, 31, -1;
	mov.b32 	%f22, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f23;
	shfl.sync.bfly.b32	%r116, %r115, 1, 31, -1;
	mov.b32 	%f24, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r99, 0;
	shr.u32 	%r117, %r2, 3;
	and.b32  	%r118, %r117, 4;
	add.s32 	%r92, %r82, %r118;
	mov.b32 	%r93, %f25;
	// begin inline asm
	@%p21 st.shared.b32 [ %r92 + 0 ], %r93;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r2, 2;
	shl.b32 	%r119, %r2, 2;
	add.s32 	%r95, %r82, %r119;
	// begin inline asm
	@%p22 ld.shared.b32 %r94, [ %r95 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r94;
	shfl.sync.bfly.b32	%r120, %r94, 1, 31, -1;
	mov.b32 	%f27, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r121, %r2, 1;
	setp.eq.b32 	%p25, %r121, 1;
	not.pred 	%p26, %p25;
	and.pred  	%p23, %p22, %p26;
	mov.b32 	%r97, %f28;
	// begin inline asm
	@%p23 st.shared.b32 [ %r95 + 0 ], %r97;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r98, [global_smem];
$L__tmp2:
	.loc	1 48 25                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:48:25
	mul.wide.s32 	%rd32, %r10, 4;
	add.s64 	%rd26, %rd4, %rd32;
	.loc	1 48 37                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:48:37
	setp.eq.s32 	%p27, %r3, 0;
	and.pred  	%p24, %p27, %p8;
	// begin inline asm
	@%p24 st.global.b32 [ %rd26 + 0 ], { %r98 };
	// end inline asm
	.loc	1 48 4                          // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:48:4
	ret;
$L__BB0_1:
	.loc	1 40 63                         // c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py:40:63
	mov.u64 	%rd33, assertMessage_0;
	cvta.global.u64 	%rd34, %rd33;
	mov.u64 	%rd35, assertFile_0;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, assertFunc_0;
	cvta.global.u64 	%rd38, %rd37;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd34;
	.param .b64 param1;
	st.param.b64 	[param1], %rd36;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd38;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/63/c63jcau3m6rvfq72k5hm2y4o2x6by6ysam6yib7ladgcl53ht3ec.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 186                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 51
.b8 106
.b8 99
.b8 97
.b8 117
.b8 51
.b8 109
.b8 54
.b8 114
.b8 118
.b8 102
.b8 113
.b8 55
.b8 50
.b8 107
.b8 53
.b8 104
.b8 109
.b8 50
.b8 121
.b8 52
.b8 111
.b8 50
.b8 120
.b8 54
.b8 98
.b8 121
.b8 54
.b8 121
.b8 115
.b8 97
.b8 109
.b8 54
.b8 121
.b8 105
.b8 98
.b8 55
.b8 108
.b8 97
.b8 100
.b8 103
.b8 99
.b8 108
.b8 53
.b8 51
.b8 104
.b8 116
.b8 51
.b8 101
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
