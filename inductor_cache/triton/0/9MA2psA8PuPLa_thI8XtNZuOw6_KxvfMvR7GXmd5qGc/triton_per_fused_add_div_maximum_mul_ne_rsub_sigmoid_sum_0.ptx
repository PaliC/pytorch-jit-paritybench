//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0 // -- Begin function triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0
.visible .entry triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_2,
	.param .u32 triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_3,
	.param .u32 triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<48>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd6, [triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0_param_2];
	.loc	1 26 34                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:26:34
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 31;
	and.b32  	%r27, %r25, 63;
	.loc	1 31 38                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:31:38
	shl.b32 	%r28, %r1, 6;
	.loc	1 31 35                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:31:35
	or.b32  	%r29, %r28, %r27;
	.loc	1 31 30                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:31:30
	mul.wide.s32 	%rd7, %r29, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f3, %r2;
	.loc	1 32 30                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:32:30
	add.s64 	%rd2, %rd6, %rd7;
	.loc	1 32 43                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:32:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f4, %r4;
	mov.f32 	%f5, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f6, %f5, %f3;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f6, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f7, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r8, %f7;
	mov.b32 	%r7, 1065353216;
	// begin inline asm
	div.full.f32 %r6, %r7, %r8;
	// end inline asm
	mov.b32 	%f8, %r6;
$L__tmp2:
	.loc	1 34 18                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:34:18
	mul.f32 	%f9, %f8, %f4;
	.loc	1 36 19                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:36:19
	setp.neu.f32 	%p12, %f4, 0fBF800000;
	.loc	1 37 19                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:37:19
	selp.f32 	%f10, 0f3F800000, 0f00000000, %p12;
	.loc	1 38 18                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:38:18
	mul.f32 	%f11, %f9, %f10;
	.loc	1 40 34                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:40:34
	selp.f32 	%f12, %f11, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f12;
	shfl.sync.bfly.b32	%r31, %r30, 16, 31, -1;
	mov.b32 	%f13, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f14;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f15, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f16;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f17, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f18;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f19, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f20;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f21, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r26, 0;
	shr.u32 	%r40, %r25, 3;
	and.b32  	%r41, %r40, 4;
	mov.u32 	%r42, global_smem;
	add.s32 	%r9, %r42, %r41;
	mov.b32 	%r10, %f22;
	// begin inline asm
	@%p5 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r25, 2;
	shl.b32 	%r43, %r25, 2;
	add.s32 	%r12, %r42, %r43;
	// begin inline asm
	@%p6 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r11;
	shfl.sync.bfly.b32	%r44, %r11, 1, 31, -1;
	mov.b32 	%f24, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r45, %r25, 1;
	setp.eq.b32 	%p13, %r45, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p7, %p6, %p14;
	mov.b32 	%r14, %f25;
	// begin inline asm
	@%p7 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p15, %f8, %f4;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p16, %f8, %f8;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f26, %f8, %f4, %p16;
	selp.f32 	%f27, %f8, %f26, %p15;
$L__tmp5:
	.loc	1 43 20                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:43:20
	mul.f32 	%f28, %f27, %f10;
	.loc	1 45 35                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:45:35
	selp.f32 	%f29, %f28, 0f00000000, %p1;
	.loc	1 49 20                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:49:20
	ld.shared.u32 	%r22, [global_smem];
$L__tmp6:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r46, %f29;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f30, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f31;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f32, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f33;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f34, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f35;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f36, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f37;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f38, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f39;
	// begin inline asm
	@%p5 st.shared.b32 [ %r9 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r17, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f40, %r17;
	shfl.sync.bfly.b32	%r56, %r17, 1, 31, -1;
	mov.b32 	%f41, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f42;
	// begin inline asm
	@%p7 st.shared.b32 [ %r12 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f43, [global_smem];
$L__tmp7:
	.loc	1 48 20                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:48:20
	add.f32 	%f44, %f43, 0f322BCC77;
	.loc	1 49 20                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:49:20
	mov.b32 	%r23, %f44;
	// begin inline asm
	div.full.f32 %r21, %r22, %r23;
	// end inline asm
	mov.b32 	%f45, %r21;
	mov.f32 	%f46, 0f3F800000;
	.loc	1 51 20                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:51:20
	sub.f32 	%f47, %f46, %f45;
	.loc	1 52 4                          // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:52:4
	bar.sync 	0;
	.loc	1 53 28                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:53:28
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 53 40                         // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:53:40
	setp.eq.s32 	%p17, %r27, 0;
	mov.b32 	%r24, %f47;
	and.pred  	%p11, %p17, %p1;
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r24 };
	// end inline asm
	.loc	1 53 4                          // cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py:53:4
	ret;
$L__tmp8:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bd/cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 275                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 100
.b8 115
.b8 100
.b8 101
.b8 101
.b8 101
.b8 102
.b8 120
.b8 107
.b8 121
.b8 99
.b8 117
.b8 117
.b8 103
.b8 118
.b8 100
.b8 112
.b8 122
.b8 106
.b8 117
.b8 110
.b8 116
.b8 104
.b8 106
.b8 97
.b8 116
.b8 54
.b8 110
.b8 117
.b8 99
.b8 98
.b8 97
.b8 120
.b8 102
.b8 107
.b8 115
.b8 111
.b8 108
.b8 111
.b8 51
.b8 50
.b8 104
.b8 111
.b8 122
.b8 111
.b8 108
.b8 52
.b8 120
.b8 120
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 97
.b8 120
.b8 105
.b8 109
.b8 117
.b8 109
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa0:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
