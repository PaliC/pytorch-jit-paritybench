; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = lshr i32 %8, 5, !dbg !12
  %11 = and i32 %8, 63, !dbg !12
  %12 = shl i32 %6, 6, !dbg !13
  %13 = or disjoint i32 %12, %11, !dbg !14
  %14 = sext i32 %13 to i64, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !15
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %7, i32 0, i1 %7) #3, !dbg !16
  %17 = bitcast i32 %16 to float, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %7, i32 0, i1 %7) #3, !dbg !18
  %20 = bitcast i32 %19 to float, !dbg !18
  %21 = fsub float 0.000000e+00, %17, !dbg !19
  %22 = fmul float %21, 0x3FF7154760000000, !dbg !23
  %23 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %22) #3, !dbg !23
  %24 = fadd float %23, 1.000000e+00, !dbg !24
  %25 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %24) #3, !dbg !25
  %26 = fmul float %25, %20, !dbg !26
  %27 = fcmp une float %20, -1.000000e+00, !dbg !27
  %28 = uitofp i1 %27 to float, !dbg !28
  %29 = fmul float %26, %28, !dbg !29
  %30 = select i1 %7, float %29, float 0.000000e+00, !dbg !30
  %31 = bitcast float %30 to i32, !dbg !31
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 16, i32 31), !dbg !31
  %33 = bitcast i32 %32 to float, !dbg !31
  %34 = fadd float %30, %33, !dbg !33
  %35 = bitcast float %34 to i32, !dbg !31
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 8, i32 31), !dbg !31
  %37 = bitcast i32 %36 to float, !dbg !31
  %38 = fadd float %34, %37, !dbg !33
  %39 = bitcast float %38 to i32, !dbg !31
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 4, i32 31), !dbg !31
  %41 = bitcast i32 %40 to float, !dbg !31
  %42 = fadd float %38, %41, !dbg !33
  %43 = bitcast float %42 to i32, !dbg !31
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 2, i32 31), !dbg !31
  %45 = bitcast i32 %44 to float, !dbg !31
  %46 = fadd float %42, %45, !dbg !33
  %47 = bitcast float %46 to i32, !dbg !31
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 1, i32 31), !dbg !31
  %49 = bitcast i32 %48 to float, !dbg !31
  %50 = fadd float %46, %49, !dbg !33
  %51 = icmp eq i32 %9, 0, !dbg !31
  %52 = and i32 %10, 1, !dbg !31
  %53 = getelementptr float, ptr addrspace(3) @global_smem, i32 %52, !dbg !31
  %54 = bitcast float %50 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %54, i1 %51) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %55 = icmp slt i32 %8, 2, !dbg !31
  %56 = getelementptr float, ptr addrspace(3) @global_smem, i32 %8, !dbg !31
  %57 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %56, i1 %55) #3, !dbg !31
  %58 = bitcast i32 %57 to float, !dbg !31
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 1, i32 31), !dbg !31
  %60 = bitcast i32 %59 to float, !dbg !31
  %61 = fadd float %58, %60, !dbg !33
  %62 = and i32 %8, 1, !dbg !31
  %63 = icmp eq i32 %62, 0, !dbg !31
  %64 = and i1 %55, %63, !dbg !31
  %65 = bitcast float %61 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %56, <1 x i32> %65, i1 %64) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %66 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !31
  %67 = fcmp ogt float %25, %20, !dbg !35
  %68 = fcmp uno float %25, 0.000000e+00, !dbg !39
  %69 = or i1 %67, %68, !dbg !40
  %70 = select i1 %69, float %25, float %20, !dbg !41
  %71 = fmul float %70, %28, !dbg !42
  %72 = select i1 %7, float %71, float 0.000000e+00, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %73 = bitcast float %72 to i32, !dbg !44
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 16, i32 31), !dbg !44
  %75 = bitcast i32 %74 to float, !dbg !44
  %76 = fadd float %72, %75, !dbg !46
  %77 = bitcast float %76 to i32, !dbg !44
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 8, i32 31), !dbg !44
  %79 = bitcast i32 %78 to float, !dbg !44
  %80 = fadd float %76, %79, !dbg !46
  %81 = bitcast float %80 to i32, !dbg !44
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 4, i32 31), !dbg !44
  %83 = bitcast i32 %82 to float, !dbg !44
  %84 = fadd float %80, %83, !dbg !46
  %85 = bitcast float %84 to i32, !dbg !44
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 2, i32 31), !dbg !44
  %87 = bitcast i32 %86 to float, !dbg !44
  %88 = fadd float %84, %87, !dbg !46
  %89 = bitcast float %88 to i32, !dbg !44
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 1, i32 31), !dbg !44
  %91 = bitcast i32 %90 to float, !dbg !44
  %92 = fadd float %88, %91, !dbg !46
  %93 = bitcast float %92 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %93, i1 %51) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %94 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %56, i1 %55) #3, !dbg !44
  %95 = bitcast i32 %94 to float, !dbg !44
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 1, i32 31), !dbg !44
  %97 = bitcast i32 %96 to float, !dbg !44
  %98 = fadd float %95, %97, !dbg !46
  %99 = bitcast float %98 to <1 x i32>, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %56, <1 x i32> %99, i1 %64) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %100 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !44
  %101 = fadd float %100, 0x3E45798EE0000000, !dbg !47
  %102 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float %101) #3, !dbg !48
  %103 = fsub float 1.000000e+00, %102, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %104 = sext i32 %6 to i64, !dbg !51
  %105 = getelementptr float, ptr addrspace(1) %0, i64 %104, !dbg !51
  %106 = icmp eq i32 %11, 0, !dbg !52
  %107 = bitcast float %103 to i32, !dbg !52
  %108 = and i1 %106, %7, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %107, ptr addrspace(1) %105, i1 %108) #3, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbdsdeeefxkycuugvdpzjunthjat6nucbaxfksolo32hozol4xx7.py", directory: "inductor_cache/bd")
!4 = !{ptr @triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0", linkageName: "triton_per_fused_add_div_maximum_mul_ne_rsub_sigmoid_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 43, scope: !7)
!19 = !DILocation(line: 47, column: 30, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 33, column: 22, scope: !7)
!23 = !DILocation(line: 47, column: 29, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 47, column: 20, scope: !20, inlinedAt: !22)
!25 = !DILocation(line: 47, column: 16, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 19, scope: !7)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 34, scope: !7)
!31 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !32)
!32 = !DILocation(line: 41, column: 26, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !34, inlinedAt: !32)
!34 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!35 = !DILocation(line: 118, column: 15, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 42, column: 41, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !36, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !36, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !38)
!42 = !DILocation(line: 43, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 35, scope: !7)
!44 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !45)
!45 = !DILocation(line: 46, column: 26, scope: !7)
!46 = !DILocation(line: 256, column: 15, scope: !34, inlinedAt: !45)
!47 = !DILocation(line: 48, column: 20, scope: !7)
!48 = !DILocation(line: 49, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 20, scope: !7)
!50 = !DILocation(line: 52, column: 4, scope: !7)
!51 = !DILocation(line: 53, column: 28, scope: !7)
!52 = !DILocation(line: 53, column: 40, scope: !7)
!53 = !DILocation(line: 53, column: 4, scope: !7)
