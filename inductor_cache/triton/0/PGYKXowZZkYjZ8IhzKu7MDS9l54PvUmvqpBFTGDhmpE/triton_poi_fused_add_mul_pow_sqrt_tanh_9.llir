; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 4, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = or disjoint i32 %10, 16, !dbg !12
  %12 = or disjoint i32 %10, 32, !dbg !12
  %13 = or disjoint i32 %10, 48, !dbg !12
  %14 = shl i32 %8, 2, !dbg !12
  %15 = and i32 %14, 60, !dbg !12
  %16 = or disjoint i32 %7, %10, !dbg !13
  %17 = or disjoint i32 %7, %11, !dbg !13
  %18 = or disjoint i32 %7, %12, !dbg !13
  %19 = or disjoint i32 %7, %13, !dbg !13
  %20 = icmp slt i32 %16, 64, !dbg !14
  %21 = icmp slt i32 %17, 64, !dbg !14
  %22 = icmp slt i32 %18, 64, !dbg !14
  %23 = icmp slt i32 %19, 64, !dbg !14
  %24 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %25 = shl i32 %24, 6, !dbg !16
  %26 = or disjoint i32 %25, %15, !dbg !17
  %27 = icmp slt i32 %26, 6144, !dbg !18
  %28 = mul i32 %16, 6144, !dbg !19
  %29 = mul i32 %17, 6144, !dbg !19
  %30 = mul i32 %18, 6144, !dbg !19
  %31 = mul i32 %19, 6144, !dbg !19
  %32 = add i32 %26, %28, !dbg !20
  %33 = add i32 %26, %29, !dbg !20
  %34 = add i32 %26, %30, !dbg !20
  %35 = add i32 %26, %31, !dbg !20
  %36 = sext i32 %32 to i64, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !21
  %38 = sext i32 %33 to i64, !dbg !21
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !21
  %40 = sext i32 %34 to i64, !dbg !21
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !21
  %42 = sext i32 %35 to i64, !dbg !21
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !21
  %44 = and i1 %20, %27, !dbg !22
  %45 = and i1 %21, %27, !dbg !22
  %46 = and i1 %22, %27, !dbg !22
  %47 = and i1 %23, %27, !dbg !22
  %48 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 %44) #4, !dbg !23
  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !23
  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !23
  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !23
  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !23
  %53 = bitcast i32 %49 to float, !dbg !23
  %54 = bitcast i32 %50 to float, !dbg !23
  %55 = bitcast i32 %51 to float, !dbg !23
  %56 = bitcast i32 %52 to float, !dbg !23
  %57 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 %45) #4, !dbg !23
  %58 = extractvalue { i32, i32, i32, i32 } %57, 0, !dbg !23
  %59 = extractvalue { i32, i32, i32, i32 } %57, 1, !dbg !23
  %60 = extractvalue { i32, i32, i32, i32 } %57, 2, !dbg !23
  %61 = extractvalue { i32, i32, i32, i32 } %57, 3, !dbg !23
  %62 = bitcast i32 %58 to float, !dbg !23
  %63 = bitcast i32 %59 to float, !dbg !23
  %64 = bitcast i32 %60 to float, !dbg !23
  %65 = bitcast i32 %61 to float, !dbg !23
  %66 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %41, i1 %46) #4, !dbg !23
  %67 = extractvalue { i32, i32, i32, i32 } %66, 0, !dbg !23
  %68 = extractvalue { i32, i32, i32, i32 } %66, 1, !dbg !23
  %69 = extractvalue { i32, i32, i32, i32 } %66, 2, !dbg !23
  %70 = extractvalue { i32, i32, i32, i32 } %66, 3, !dbg !23
  %71 = bitcast i32 %67 to float, !dbg !23
  %72 = bitcast i32 %68 to float, !dbg !23
  %73 = bitcast i32 %69 to float, !dbg !23
  %74 = bitcast i32 %70 to float, !dbg !23
  %75 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %43, i1 %47) #4, !dbg !23
  %76 = extractvalue { i32, i32, i32, i32 } %75, 0, !dbg !23
  %77 = extractvalue { i32, i32, i32, i32 } %75, 1, !dbg !23
  %78 = extractvalue { i32, i32, i32, i32 } %75, 2, !dbg !23
  %79 = extractvalue { i32, i32, i32, i32 } %75, 3, !dbg !23
  %80 = bitcast i32 %76 to float, !dbg !23
  %81 = bitcast i32 %77 to float, !dbg !23
  %82 = bitcast i32 %78 to float, !dbg !23
  %83 = bitcast i32 %79 to float, !dbg !23
  %84 = fmul float %53, %53, !dbg !24
  %85 = fmul float %54, %54, !dbg !24
  %86 = fmul float %55, %55, !dbg !24
  %87 = fmul float %56, %56, !dbg !24
  %88 = fmul float %62, %62, !dbg !24
  %89 = fmul float %63, %63, !dbg !24
  %90 = fmul float %64, %64, !dbg !24
  %91 = fmul float %65, %65, !dbg !24
  %92 = fmul float %71, %71, !dbg !24
  %93 = fmul float %72, %72, !dbg !24
  %94 = fmul float %73, %73, !dbg !24
  %95 = fmul float %74, %74, !dbg !24
  %96 = fmul float %80, %80, !dbg !24
  %97 = fmul float %81, %81, !dbg !24
  %98 = fmul float %82, %82, !dbg !24
  %99 = fmul float %83, %83, !dbg !24
  %100 = fmul float %84, %53, !dbg !25
  %101 = fmul float %85, %54, !dbg !25
  %102 = fmul float %86, %55, !dbg !25
  %103 = fmul float %87, %56, !dbg !25
  %104 = fmul float %88, %62, !dbg !25
  %105 = fmul float %89, %63, !dbg !25
  %106 = fmul float %90, %64, !dbg !25
  %107 = fmul float %91, %65, !dbg !25
  %108 = fmul float %92, %71, !dbg !25
  %109 = fmul float %93, %72, !dbg !25
  %110 = fmul float %94, %73, !dbg !25
  %111 = fmul float %95, %74, !dbg !25
  %112 = fmul float %96, %80, !dbg !25
  %113 = fmul float %97, %81, !dbg !25
  %114 = fmul float %98, %82, !dbg !25
  %115 = fmul float %99, %83, !dbg !25
  %116 = fmul float %100, 0x3FA6E4E260000000, !dbg !26
  %117 = fmul float %101, 0x3FA6E4E260000000, !dbg !26
  %118 = fmul float %102, 0x3FA6E4E260000000, !dbg !26
  %119 = fmul float %103, 0x3FA6E4E260000000, !dbg !26
  %120 = fmul float %104, 0x3FA6E4E260000000, !dbg !26
  %121 = fmul float %105, 0x3FA6E4E260000000, !dbg !26
  %122 = fmul float %106, 0x3FA6E4E260000000, !dbg !26
  %123 = fmul float %107, 0x3FA6E4E260000000, !dbg !26
  %124 = fmul float %108, 0x3FA6E4E260000000, !dbg !26
  %125 = fmul float %109, 0x3FA6E4E260000000, !dbg !26
  %126 = fmul float %110, 0x3FA6E4E260000000, !dbg !26
  %127 = fmul float %111, 0x3FA6E4E260000000, !dbg !26
  %128 = fmul float %112, 0x3FA6E4E260000000, !dbg !26
  %129 = fmul float %113, 0x3FA6E4E260000000, !dbg !26
  %130 = fmul float %114, 0x3FA6E4E260000000, !dbg !26
  %131 = fmul float %115, 0x3FA6E4E260000000, !dbg !26
  %132 = fadd float %116, %53, !dbg !27
  %133 = fadd float %117, %54, !dbg !27
  %134 = fadd float %118, %55, !dbg !27
  %135 = fadd float %119, %56, !dbg !27
  %136 = fadd float %120, %62, !dbg !27
  %137 = fadd float %121, %63, !dbg !27
  %138 = fadd float %122, %64, !dbg !27
  %139 = fadd float %123, %65, !dbg !27
  %140 = fadd float %124, %71, !dbg !27
  %141 = fadd float %125, %72, !dbg !27
  %142 = fadd float %126, %73, !dbg !27
  %143 = fadd float %127, %74, !dbg !27
  %144 = fadd float %128, %80, !dbg !27
  %145 = fadd float %129, %81, !dbg !27
  %146 = fadd float %130, %82, !dbg !27
  %147 = fadd float %131, %83, !dbg !27
  %148 = fmul float %132, 0x3FE9884540000000, !dbg !28
  %149 = fmul float %133, 0x3FE9884540000000, !dbg !28
  %150 = fmul float %134, 0x3FE9884540000000, !dbg !28
  %151 = fmul float %135, 0x3FE9884540000000, !dbg !28
  %152 = fmul float %136, 0x3FE9884540000000, !dbg !28
  %153 = fmul float %137, 0x3FE9884540000000, !dbg !28
  %154 = fmul float %138, 0x3FE9884540000000, !dbg !28
  %155 = fmul float %139, 0x3FE9884540000000, !dbg !28
  %156 = fmul float %140, 0x3FE9884540000000, !dbg !28
  %157 = fmul float %141, 0x3FE9884540000000, !dbg !28
  %158 = fmul float %142, 0x3FE9884540000000, !dbg !28
  %159 = fmul float %143, 0x3FE9884540000000, !dbg !28
  %160 = fmul float %144, 0x3FE9884540000000, !dbg !28
  %161 = fmul float %145, 0x3FE9884540000000, !dbg !28
  %162 = fmul float %146, 0x3FE9884540000000, !dbg !28
  %163 = fmul float %147, 0x3FE9884540000000, !dbg !28
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i = icmp eq i32 %164, 0, !dbg !29
  %165 = tail call float @llvm.nvvm.fabs.ftz.f(float %148) #4, !dbg !29
  %166 = tail call float @llvm.nvvm.fabs.f(float %148) #4, !dbg !29
  %.01.i = select i1 %.not.i, float %166, float %165, !dbg !29
  %167 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !29
  br i1 %167, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !29

__internal_fmad.exit1.i:                          ; preds = %5
  %168 = fmul float %.01.i, 0x4007154760000000, !dbg !29
  %169 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %168) #4, !dbg !29
  %170 = fadd float %169, 1.000000e+00, !dbg !29
  %171 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %170) #5, !dbg !29, !srcloc !30
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i = icmp eq i32 %172, 0, !dbg !29
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %171, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i = select i1 %.not6.i, float %174, float %173, !dbg !29
  %175 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !29
  %s.0.i = select i1 %175, float 1.000000e+00, float %.03.i, !dbg !29
  %176 = bitcast float %s.0.i to i32, !dbg !29
  %177 = bitcast float %148 to i32, !dbg !29
  %178 = and i32 %177, -2147483648, !dbg !29
  %179 = or i32 %178, %176, !dbg !29
  %180 = bitcast i32 %179 to float, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__internal_fmad.exit3.i:                          ; preds = %5
  %181 = fmul float %148, %148, !dbg !29
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i = icmp eq i32 %182, 0, !dbg !29
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %181, float 0xBFAAC795C0000000) #4, !dbg !29
  %184 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %181, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i = select i1 %.not1.i, float %184, float %183, !dbg !29
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i = icmp eq i32 %185, 0, !dbg !29
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %181, float 0x3FC10B2820000000) #4, !dbg !29
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %181, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i = select i1 %.not2.i, float %187, float %186, !dbg !29
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i = icmp eq i32 %188, 0, !dbg !29
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %181, float 0xBFD5553DA0000000) #4, !dbg !29
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %181, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i = select i1 %.not3.i, float %190, float %189, !dbg !29
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i = icmp eq i32 %191, 0, !dbg !29
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %181, float 0.000000e+00) #4, !dbg !29
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %181, float 0.000000e+00) #4, !dbg !29
  %.04.i = select i1 %.not4.i, float %193, float %192, !dbg !29
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i = icmp eq i32 %194, 0, !dbg !29
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %148, float %148) #4, !dbg !29
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %148, float %148) #4, !dbg !29
  %.02.i = select i1 %.not5.i, float %196, float %195, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %180, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !29
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i31 = icmp eq i32 %197, 0, !dbg !29
  %198 = tail call float @llvm.nvvm.fabs.ftz.f(float %149) #4, !dbg !29
  %199 = tail call float @llvm.nvvm.fabs.f(float %149) #4, !dbg !29
  %.01.i32 = select i1 %.not.i31, float %199, float %198, !dbg !29
  %200 = fcmp ult float %.01.i32, 0x3FE3333340000000, !dbg !29
  br i1 %200, label %__internal_fmad.exit3.i38, label %__internal_fmad.exit1.i33, !dbg !29

__internal_fmad.exit1.i33:                        ; preds = %__nv_tanhf.exit
  %201 = fmul float %.01.i32, 0x4007154760000000, !dbg !29
  %202 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %201) #4, !dbg !29
  %203 = fadd float %202, 1.000000e+00, !dbg !29
  %204 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %203) #5, !dbg !29, !srcloc !30
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i34 = icmp eq i32 %205, 0, !dbg !29
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %204, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %204, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i35 = select i1 %.not6.i34, float %207, float %206, !dbg !29
  %208 = fcmp oge float %.01.i32, 0x4022059680000000, !dbg !29
  %s.0.i36 = select i1 %208, float 1.000000e+00, float %.03.i35, !dbg !29
  %209 = bitcast float %s.0.i36 to i32, !dbg !29
  %210 = bitcast float %149 to i32, !dbg !29
  %211 = and i32 %210, -2147483648, !dbg !29
  %212 = or i32 %211, %209, !dbg !29
  %213 = bitcast i32 %212 to float, !dbg !29
  br label %__nv_tanhf.exit49, !dbg !29

__internal_fmad.exit3.i38:                        ; preds = %__nv_tanhf.exit
  %214 = fmul float %149, %149, !dbg !29
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i39 = icmp eq i32 %215, 0, !dbg !29
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %214, float 0xBFAAC795C0000000) #4, !dbg !29
  %217 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %214, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i40 = select i1 %.not1.i39, float %217, float %216, !dbg !29
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i41 = icmp eq i32 %218, 0, !dbg !29
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i40, float %214, float 0x3FC10B2820000000) #4, !dbg !29
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i40, float %214, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i42 = select i1 %.not2.i41, float %220, float %219, !dbg !29
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i43 = icmp eq i32 %221, 0, !dbg !29
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float %214, float 0xBFD5553DA0000000) #4, !dbg !29
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float %214, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i44 = select i1 %.not3.i43, float %223, float %222, !dbg !29
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i45 = icmp eq i32 %224, 0, !dbg !29
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i44, float %214, float 0.000000e+00) #4, !dbg !29
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i44, float %214, float 0.000000e+00) #4, !dbg !29
  %.04.i46 = select i1 %.not4.i45, float %226, float %225, !dbg !29
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i47 = icmp eq i32 %227, 0, !dbg !29
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i46, float %149, float %149) #4, !dbg !29
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i46, float %149, float %149) #4, !dbg !29
  %.02.i48 = select i1 %.not5.i47, float %229, float %228, !dbg !29
  br label %__nv_tanhf.exit49, !dbg !29

__nv_tanhf.exit49:                                ; preds = %__internal_fmad.exit1.i33, %__internal_fmad.exit3.i38
  %s.1.i37 = phi float [ %213, %__internal_fmad.exit1.i33 ], [ %.02.i48, %__internal_fmad.exit3.i38 ], !dbg !29
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i50 = icmp eq i32 %230, 0, !dbg !29
  %231 = tail call float @llvm.nvvm.fabs.ftz.f(float %150) #4, !dbg !29
  %232 = tail call float @llvm.nvvm.fabs.f(float %150) #4, !dbg !29
  %.01.i51 = select i1 %.not.i50, float %232, float %231, !dbg !29
  %233 = fcmp ult float %.01.i51, 0x3FE3333340000000, !dbg !29
  br i1 %233, label %__internal_fmad.exit3.i57, label %__internal_fmad.exit1.i52, !dbg !29

__internal_fmad.exit1.i52:                        ; preds = %__nv_tanhf.exit49
  %234 = fmul float %.01.i51, 0x4007154760000000, !dbg !29
  %235 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %234) #4, !dbg !29
  %236 = fadd float %235, 1.000000e+00, !dbg !29
  %237 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %236) #5, !dbg !29, !srcloc !30
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i53 = icmp eq i32 %238, 0, !dbg !29
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %237, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i54 = select i1 %.not6.i53, float %240, float %239, !dbg !29
  %241 = fcmp oge float %.01.i51, 0x4022059680000000, !dbg !29
  %s.0.i55 = select i1 %241, float 1.000000e+00, float %.03.i54, !dbg !29
  %242 = bitcast float %s.0.i55 to i32, !dbg !29
  %243 = bitcast float %150 to i32, !dbg !29
  %244 = and i32 %243, -2147483648, !dbg !29
  %245 = or i32 %244, %242, !dbg !29
  %246 = bitcast i32 %245 to float, !dbg !29
  br label %__nv_tanhf.exit68, !dbg !29

__internal_fmad.exit3.i57:                        ; preds = %__nv_tanhf.exit49
  %247 = fmul float %150, %150, !dbg !29
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i58 = icmp eq i32 %248, 0, !dbg !29
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %247, float 0xBFAAC795C0000000) #4, !dbg !29
  %250 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %247, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i59 = select i1 %.not1.i58, float %250, float %249, !dbg !29
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i60 = icmp eq i32 %251, 0, !dbg !29
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i59, float %247, float 0x3FC10B2820000000) #4, !dbg !29
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i59, float %247, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i61 = select i1 %.not2.i60, float %253, float %252, !dbg !29
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i62 = icmp eq i32 %254, 0, !dbg !29
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i61, float %247, float 0xBFD5553DA0000000) #4, !dbg !29
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i61, float %247, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i63 = select i1 %.not3.i62, float %256, float %255, !dbg !29
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i64 = icmp eq i32 %257, 0, !dbg !29
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i63, float %247, float 0.000000e+00) #4, !dbg !29
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i63, float %247, float 0.000000e+00) #4, !dbg !29
  %.04.i65 = select i1 %.not4.i64, float %259, float %258, !dbg !29
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i66 = icmp eq i32 %260, 0, !dbg !29
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i65, float %150, float %150) #4, !dbg !29
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i65, float %150, float %150) #4, !dbg !29
  %.02.i67 = select i1 %.not5.i66, float %262, float %261, !dbg !29
  br label %__nv_tanhf.exit68, !dbg !29

__nv_tanhf.exit68:                                ; preds = %__internal_fmad.exit1.i52, %__internal_fmad.exit3.i57
  %s.1.i56 = phi float [ %246, %__internal_fmad.exit1.i52 ], [ %.02.i67, %__internal_fmad.exit3.i57 ], !dbg !29
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i69 = icmp eq i32 %263, 0, !dbg !29
  %264 = tail call float @llvm.nvvm.fabs.ftz.f(float %151) #4, !dbg !29
  %265 = tail call float @llvm.nvvm.fabs.f(float %151) #4, !dbg !29
  %.01.i70 = select i1 %.not.i69, float %265, float %264, !dbg !29
  %266 = fcmp ult float %.01.i70, 0x3FE3333340000000, !dbg !29
  br i1 %266, label %__internal_fmad.exit3.i76, label %__internal_fmad.exit1.i71, !dbg !29

__internal_fmad.exit1.i71:                        ; preds = %__nv_tanhf.exit68
  %267 = fmul float %.01.i70, 0x4007154760000000, !dbg !29
  %268 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %267) #4, !dbg !29
  %269 = fadd float %268, 1.000000e+00, !dbg !29
  %270 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %269) #5, !dbg !29, !srcloc !30
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i72 = icmp eq i32 %271, 0, !dbg !29
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %270, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %270, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i73 = select i1 %.not6.i72, float %273, float %272, !dbg !29
  %274 = fcmp oge float %.01.i70, 0x4022059680000000, !dbg !29
  %s.0.i74 = select i1 %274, float 1.000000e+00, float %.03.i73, !dbg !29
  %275 = bitcast float %s.0.i74 to i32, !dbg !29
  %276 = bitcast float %151 to i32, !dbg !29
  %277 = and i32 %276, -2147483648, !dbg !29
  %278 = or i32 %277, %275, !dbg !29
  %279 = bitcast i32 %278 to float, !dbg !29
  br label %__nv_tanhf.exit87, !dbg !29

__internal_fmad.exit3.i76:                        ; preds = %__nv_tanhf.exit68
  %280 = fmul float %151, %151, !dbg !29
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i77 = icmp eq i32 %281, 0, !dbg !29
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %280, float 0xBFAAC795C0000000) #4, !dbg !29
  %283 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %280, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i78 = select i1 %.not1.i77, float %283, float %282, !dbg !29
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i79 = icmp eq i32 %284, 0, !dbg !29
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i78, float %280, float 0x3FC10B2820000000) #4, !dbg !29
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i78, float %280, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i80 = select i1 %.not2.i79, float %286, float %285, !dbg !29
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i81 = icmp eq i32 %287, 0, !dbg !29
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i80, float %280, float 0xBFD5553DA0000000) #4, !dbg !29
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i80, float %280, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i82 = select i1 %.not3.i81, float %289, float %288, !dbg !29
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i83 = icmp eq i32 %290, 0, !dbg !29
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i82, float %280, float 0.000000e+00) #4, !dbg !29
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i82, float %280, float 0.000000e+00) #4, !dbg !29
  %.04.i84 = select i1 %.not4.i83, float %292, float %291, !dbg !29
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i85 = icmp eq i32 %293, 0, !dbg !29
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i84, float %151, float %151) #4, !dbg !29
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i84, float %151, float %151) #4, !dbg !29
  %.02.i86 = select i1 %.not5.i85, float %295, float %294, !dbg !29
  br label %__nv_tanhf.exit87, !dbg !29

__nv_tanhf.exit87:                                ; preds = %__internal_fmad.exit1.i71, %__internal_fmad.exit3.i76
  %s.1.i75 = phi float [ %279, %__internal_fmad.exit1.i71 ], [ %.02.i86, %__internal_fmad.exit3.i76 ], !dbg !29
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i88 = icmp eq i32 %296, 0, !dbg !29
  %297 = tail call float @llvm.nvvm.fabs.ftz.f(float %152) #4, !dbg !29
  %298 = tail call float @llvm.nvvm.fabs.f(float %152) #4, !dbg !29
  %.01.i89 = select i1 %.not.i88, float %298, float %297, !dbg !29
  %299 = fcmp ult float %.01.i89, 0x3FE3333340000000, !dbg !29
  br i1 %299, label %__internal_fmad.exit3.i95, label %__internal_fmad.exit1.i90, !dbg !29

__internal_fmad.exit1.i90:                        ; preds = %__nv_tanhf.exit87
  %300 = fmul float %.01.i89, 0x4007154760000000, !dbg !29
  %301 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %300) #4, !dbg !29
  %302 = fadd float %301, 1.000000e+00, !dbg !29
  %303 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %302) #5, !dbg !29, !srcloc !30
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i91 = icmp eq i32 %304, 0, !dbg !29
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %303, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %303, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i92 = select i1 %.not6.i91, float %306, float %305, !dbg !29
  %307 = fcmp oge float %.01.i89, 0x4022059680000000, !dbg !29
  %s.0.i93 = select i1 %307, float 1.000000e+00, float %.03.i92, !dbg !29
  %308 = bitcast float %s.0.i93 to i32, !dbg !29
  %309 = bitcast float %152 to i32, !dbg !29
  %310 = and i32 %309, -2147483648, !dbg !29
  %311 = or i32 %310, %308, !dbg !29
  %312 = bitcast i32 %311 to float, !dbg !29
  br label %__nv_tanhf.exit106, !dbg !29

__internal_fmad.exit3.i95:                        ; preds = %__nv_tanhf.exit87
  %313 = fmul float %152, %152, !dbg !29
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i96 = icmp eq i32 %314, 0, !dbg !29
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %313, float 0xBFAAC795C0000000) #4, !dbg !29
  %316 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %313, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i97 = select i1 %.not1.i96, float %316, float %315, !dbg !29
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i98 = icmp eq i32 %317, 0, !dbg !29
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i97, float %313, float 0x3FC10B2820000000) #4, !dbg !29
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i97, float %313, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i99 = select i1 %.not2.i98, float %319, float %318, !dbg !29
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i100 = icmp eq i32 %320, 0, !dbg !29
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i99, float %313, float 0xBFD5553DA0000000) #4, !dbg !29
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i99, float %313, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i101 = select i1 %.not3.i100, float %322, float %321, !dbg !29
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i102 = icmp eq i32 %323, 0, !dbg !29
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i101, float %313, float 0.000000e+00) #4, !dbg !29
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i101, float %313, float 0.000000e+00) #4, !dbg !29
  %.04.i103 = select i1 %.not4.i102, float %325, float %324, !dbg !29
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i104 = icmp eq i32 %326, 0, !dbg !29
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i103, float %152, float %152) #4, !dbg !29
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i103, float %152, float %152) #4, !dbg !29
  %.02.i105 = select i1 %.not5.i104, float %328, float %327, !dbg !29
  br label %__nv_tanhf.exit106, !dbg !29

__nv_tanhf.exit106:                               ; preds = %__internal_fmad.exit1.i90, %__internal_fmad.exit3.i95
  %s.1.i94 = phi float [ %312, %__internal_fmad.exit1.i90 ], [ %.02.i105, %__internal_fmad.exit3.i95 ], !dbg !29
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i107 = icmp eq i32 %329, 0, !dbg !29
  %330 = tail call float @llvm.nvvm.fabs.ftz.f(float %153) #4, !dbg !29
  %331 = tail call float @llvm.nvvm.fabs.f(float %153) #4, !dbg !29
  %.01.i108 = select i1 %.not.i107, float %331, float %330, !dbg !29
  %332 = fcmp ult float %.01.i108, 0x3FE3333340000000, !dbg !29
  br i1 %332, label %__internal_fmad.exit3.i114, label %__internal_fmad.exit1.i109, !dbg !29

__internal_fmad.exit1.i109:                       ; preds = %__nv_tanhf.exit106
  %333 = fmul float %.01.i108, 0x4007154760000000, !dbg !29
  %334 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %333) #4, !dbg !29
  %335 = fadd float %334, 1.000000e+00, !dbg !29
  %336 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %335) #5, !dbg !29, !srcloc !30
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i110 = icmp eq i32 %337, 0, !dbg !29
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %336, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %336, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i111 = select i1 %.not6.i110, float %339, float %338, !dbg !29
  %340 = fcmp oge float %.01.i108, 0x4022059680000000, !dbg !29
  %s.0.i112 = select i1 %340, float 1.000000e+00, float %.03.i111, !dbg !29
  %341 = bitcast float %s.0.i112 to i32, !dbg !29
  %342 = bitcast float %153 to i32, !dbg !29
  %343 = and i32 %342, -2147483648, !dbg !29
  %344 = or i32 %343, %341, !dbg !29
  %345 = bitcast i32 %344 to float, !dbg !29
  br label %__nv_tanhf.exit125, !dbg !29

__internal_fmad.exit3.i114:                       ; preds = %__nv_tanhf.exit106
  %346 = fmul float %153, %153, !dbg !29
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i115 = icmp eq i32 %347, 0, !dbg !29
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %346, float 0xBFAAC795C0000000) #4, !dbg !29
  %349 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %346, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i116 = select i1 %.not1.i115, float %349, float %348, !dbg !29
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i117 = icmp eq i32 %350, 0, !dbg !29
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i116, float %346, float 0x3FC10B2820000000) #4, !dbg !29
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i116, float %346, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i118 = select i1 %.not2.i117, float %352, float %351, !dbg !29
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i119 = icmp eq i32 %353, 0, !dbg !29
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i118, float %346, float 0xBFD5553DA0000000) #4, !dbg !29
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i118, float %346, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i120 = select i1 %.not3.i119, float %355, float %354, !dbg !29
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i121 = icmp eq i32 %356, 0, !dbg !29
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i120, float %346, float 0.000000e+00) #4, !dbg !29
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i120, float %346, float 0.000000e+00) #4, !dbg !29
  %.04.i122 = select i1 %.not4.i121, float %358, float %357, !dbg !29
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i123 = icmp eq i32 %359, 0, !dbg !29
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i122, float %153, float %153) #4, !dbg !29
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i122, float %153, float %153) #4, !dbg !29
  %.02.i124 = select i1 %.not5.i123, float %361, float %360, !dbg !29
  br label %__nv_tanhf.exit125, !dbg !29

__nv_tanhf.exit125:                               ; preds = %__internal_fmad.exit1.i109, %__internal_fmad.exit3.i114
  %s.1.i113 = phi float [ %345, %__internal_fmad.exit1.i109 ], [ %.02.i124, %__internal_fmad.exit3.i114 ], !dbg !29
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i126 = icmp eq i32 %362, 0, !dbg !29
  %363 = tail call float @llvm.nvvm.fabs.ftz.f(float %154) #4, !dbg !29
  %364 = tail call float @llvm.nvvm.fabs.f(float %154) #4, !dbg !29
  %.01.i127 = select i1 %.not.i126, float %364, float %363, !dbg !29
  %365 = fcmp ult float %.01.i127, 0x3FE3333340000000, !dbg !29
  br i1 %365, label %__internal_fmad.exit3.i133, label %__internal_fmad.exit1.i128, !dbg !29

__internal_fmad.exit1.i128:                       ; preds = %__nv_tanhf.exit125
  %366 = fmul float %.01.i127, 0x4007154760000000, !dbg !29
  %367 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %366) #4, !dbg !29
  %368 = fadd float %367, 1.000000e+00, !dbg !29
  %369 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %368) #5, !dbg !29, !srcloc !30
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i129 = icmp eq i32 %370, 0, !dbg !29
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %369, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %369, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i130 = select i1 %.not6.i129, float %372, float %371, !dbg !29
  %373 = fcmp oge float %.01.i127, 0x4022059680000000, !dbg !29
  %s.0.i131 = select i1 %373, float 1.000000e+00, float %.03.i130, !dbg !29
  %374 = bitcast float %s.0.i131 to i32, !dbg !29
  %375 = bitcast float %154 to i32, !dbg !29
  %376 = and i32 %375, -2147483648, !dbg !29
  %377 = or i32 %376, %374, !dbg !29
  %378 = bitcast i32 %377 to float, !dbg !29
  br label %__nv_tanhf.exit144, !dbg !29

__internal_fmad.exit3.i133:                       ; preds = %__nv_tanhf.exit125
  %379 = fmul float %154, %154, !dbg !29
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i134 = icmp eq i32 %380, 0, !dbg !29
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %379, float 0xBFAAC795C0000000) #4, !dbg !29
  %382 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %379, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i135 = select i1 %.not1.i134, float %382, float %381, !dbg !29
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i136 = icmp eq i32 %383, 0, !dbg !29
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i135, float %379, float 0x3FC10B2820000000) #4, !dbg !29
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i135, float %379, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i137 = select i1 %.not2.i136, float %385, float %384, !dbg !29
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i138 = icmp eq i32 %386, 0, !dbg !29
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i137, float %379, float 0xBFD5553DA0000000) #4, !dbg !29
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i137, float %379, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i139 = select i1 %.not3.i138, float %388, float %387, !dbg !29
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i140 = icmp eq i32 %389, 0, !dbg !29
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i139, float %379, float 0.000000e+00) #4, !dbg !29
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i139, float %379, float 0.000000e+00) #4, !dbg !29
  %.04.i141 = select i1 %.not4.i140, float %391, float %390, !dbg !29
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i142 = icmp eq i32 %392, 0, !dbg !29
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i141, float %154, float %154) #4, !dbg !29
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i141, float %154, float %154) #4, !dbg !29
  %.02.i143 = select i1 %.not5.i142, float %394, float %393, !dbg !29
  br label %__nv_tanhf.exit144, !dbg !29

__nv_tanhf.exit144:                               ; preds = %__internal_fmad.exit1.i128, %__internal_fmad.exit3.i133
  %s.1.i132 = phi float [ %378, %__internal_fmad.exit1.i128 ], [ %.02.i143, %__internal_fmad.exit3.i133 ], !dbg !29
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i145 = icmp eq i32 %395, 0, !dbg !29
  %396 = tail call float @llvm.nvvm.fabs.ftz.f(float %155) #4, !dbg !29
  %397 = tail call float @llvm.nvvm.fabs.f(float %155) #4, !dbg !29
  %.01.i146 = select i1 %.not.i145, float %397, float %396, !dbg !29
  %398 = fcmp ult float %.01.i146, 0x3FE3333340000000, !dbg !29
  br i1 %398, label %__internal_fmad.exit3.i152, label %__internal_fmad.exit1.i147, !dbg !29

__internal_fmad.exit1.i147:                       ; preds = %__nv_tanhf.exit144
  %399 = fmul float %.01.i146, 0x4007154760000000, !dbg !29
  %400 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %399) #4, !dbg !29
  %401 = fadd float %400, 1.000000e+00, !dbg !29
  %402 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %401) #5, !dbg !29, !srcloc !30
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i148 = icmp eq i32 %403, 0, !dbg !29
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %402, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %402, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i149 = select i1 %.not6.i148, float %405, float %404, !dbg !29
  %406 = fcmp oge float %.01.i146, 0x4022059680000000, !dbg !29
  %s.0.i150 = select i1 %406, float 1.000000e+00, float %.03.i149, !dbg !29
  %407 = bitcast float %s.0.i150 to i32, !dbg !29
  %408 = bitcast float %155 to i32, !dbg !29
  %409 = and i32 %408, -2147483648, !dbg !29
  %410 = or i32 %409, %407, !dbg !29
  %411 = bitcast i32 %410 to float, !dbg !29
  br label %__nv_tanhf.exit163, !dbg !29

__internal_fmad.exit3.i152:                       ; preds = %__nv_tanhf.exit144
  %412 = fmul float %155, %155, !dbg !29
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i153 = icmp eq i32 %413, 0, !dbg !29
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %412, float 0xBFAAC795C0000000) #4, !dbg !29
  %415 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %412, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i154 = select i1 %.not1.i153, float %415, float %414, !dbg !29
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i155 = icmp eq i32 %416, 0, !dbg !29
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i154, float %412, float 0x3FC10B2820000000) #4, !dbg !29
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i154, float %412, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i156 = select i1 %.not2.i155, float %418, float %417, !dbg !29
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i157 = icmp eq i32 %419, 0, !dbg !29
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float %412, float 0xBFD5553DA0000000) #4, !dbg !29
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float %412, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i158 = select i1 %.not3.i157, float %421, float %420, !dbg !29
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i159 = icmp eq i32 %422, 0, !dbg !29
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i158, float %412, float 0.000000e+00) #4, !dbg !29
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i158, float %412, float 0.000000e+00) #4, !dbg !29
  %.04.i160 = select i1 %.not4.i159, float %424, float %423, !dbg !29
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i161 = icmp eq i32 %425, 0, !dbg !29
  %426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i160, float %155, float %155) #4, !dbg !29
  %427 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i160, float %155, float %155) #4, !dbg !29
  %.02.i162 = select i1 %.not5.i161, float %427, float %426, !dbg !29
  br label %__nv_tanhf.exit163, !dbg !29

__nv_tanhf.exit163:                               ; preds = %__internal_fmad.exit1.i147, %__internal_fmad.exit3.i152
  %s.1.i151 = phi float [ %411, %__internal_fmad.exit1.i147 ], [ %.02.i162, %__internal_fmad.exit3.i152 ], !dbg !29
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i164 = icmp eq i32 %428, 0, !dbg !29
  %429 = tail call float @llvm.nvvm.fabs.ftz.f(float %156) #4, !dbg !29
  %430 = tail call float @llvm.nvvm.fabs.f(float %156) #4, !dbg !29
  %.01.i165 = select i1 %.not.i164, float %430, float %429, !dbg !29
  %431 = fcmp ult float %.01.i165, 0x3FE3333340000000, !dbg !29
  br i1 %431, label %__internal_fmad.exit3.i171, label %__internal_fmad.exit1.i166, !dbg !29

__internal_fmad.exit1.i166:                       ; preds = %__nv_tanhf.exit163
  %432 = fmul float %.01.i165, 0x4007154760000000, !dbg !29
  %433 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %432) #4, !dbg !29
  %434 = fadd float %433, 1.000000e+00, !dbg !29
  %435 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %434) #5, !dbg !29, !srcloc !30
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i167 = icmp eq i32 %436, 0, !dbg !29
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %435, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i168 = select i1 %.not6.i167, float %438, float %437, !dbg !29
  %439 = fcmp oge float %.01.i165, 0x4022059680000000, !dbg !29
  %s.0.i169 = select i1 %439, float 1.000000e+00, float %.03.i168, !dbg !29
  %440 = bitcast float %s.0.i169 to i32, !dbg !29
  %441 = bitcast float %156 to i32, !dbg !29
  %442 = and i32 %441, -2147483648, !dbg !29
  %443 = or i32 %442, %440, !dbg !29
  %444 = bitcast i32 %443 to float, !dbg !29
  br label %__nv_tanhf.exit182, !dbg !29

__internal_fmad.exit3.i171:                       ; preds = %__nv_tanhf.exit163
  %445 = fmul float %156, %156, !dbg !29
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i172 = icmp eq i32 %446, 0, !dbg !29
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %445, float 0xBFAAC795C0000000) #4, !dbg !29
  %448 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %445, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i173 = select i1 %.not1.i172, float %448, float %447, !dbg !29
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i174 = icmp eq i32 %449, 0, !dbg !29
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i173, float %445, float 0x3FC10B2820000000) #4, !dbg !29
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i173, float %445, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i175 = select i1 %.not2.i174, float %451, float %450, !dbg !29
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i176 = icmp eq i32 %452, 0, !dbg !29
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i175, float %445, float 0xBFD5553DA0000000) #4, !dbg !29
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i175, float %445, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i177 = select i1 %.not3.i176, float %454, float %453, !dbg !29
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i178 = icmp eq i32 %455, 0, !dbg !29
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i177, float %445, float 0.000000e+00) #4, !dbg !29
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i177, float %445, float 0.000000e+00) #4, !dbg !29
  %.04.i179 = select i1 %.not4.i178, float %457, float %456, !dbg !29
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i180 = icmp eq i32 %458, 0, !dbg !29
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i179, float %156, float %156) #4, !dbg !29
  %460 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i179, float %156, float %156) #4, !dbg !29
  %.02.i181 = select i1 %.not5.i180, float %460, float %459, !dbg !29
  br label %__nv_tanhf.exit182, !dbg !29

__nv_tanhf.exit182:                               ; preds = %__internal_fmad.exit1.i166, %__internal_fmad.exit3.i171
  %s.1.i170 = phi float [ %444, %__internal_fmad.exit1.i166 ], [ %.02.i181, %__internal_fmad.exit3.i171 ], !dbg !29
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i183 = icmp eq i32 %461, 0, !dbg !29
  %462 = tail call float @llvm.nvvm.fabs.ftz.f(float %157) #4, !dbg !29
  %463 = tail call float @llvm.nvvm.fabs.f(float %157) #4, !dbg !29
  %.01.i184 = select i1 %.not.i183, float %463, float %462, !dbg !29
  %464 = fcmp ult float %.01.i184, 0x3FE3333340000000, !dbg !29
  br i1 %464, label %__internal_fmad.exit3.i190, label %__internal_fmad.exit1.i185, !dbg !29

__internal_fmad.exit1.i185:                       ; preds = %__nv_tanhf.exit182
  %465 = fmul float %.01.i184, 0x4007154760000000, !dbg !29
  %466 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %465) #4, !dbg !29
  %467 = fadd float %466, 1.000000e+00, !dbg !29
  %468 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %467) #5, !dbg !29, !srcloc !30
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i186 = icmp eq i32 %469, 0, !dbg !29
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %468, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %468, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i187 = select i1 %.not6.i186, float %471, float %470, !dbg !29
  %472 = fcmp oge float %.01.i184, 0x4022059680000000, !dbg !29
  %s.0.i188 = select i1 %472, float 1.000000e+00, float %.03.i187, !dbg !29
  %473 = bitcast float %s.0.i188 to i32, !dbg !29
  %474 = bitcast float %157 to i32, !dbg !29
  %475 = and i32 %474, -2147483648, !dbg !29
  %476 = or i32 %475, %473, !dbg !29
  %477 = bitcast i32 %476 to float, !dbg !29
  br label %__nv_tanhf.exit201, !dbg !29

__internal_fmad.exit3.i190:                       ; preds = %__nv_tanhf.exit182
  %478 = fmul float %157, %157, !dbg !29
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i191 = icmp eq i32 %479, 0, !dbg !29
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %478, float 0xBFAAC795C0000000) #4, !dbg !29
  %481 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %478, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i192 = select i1 %.not1.i191, float %481, float %480, !dbg !29
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i193 = icmp eq i32 %482, 0, !dbg !29
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i192, float %478, float 0x3FC10B2820000000) #4, !dbg !29
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i192, float %478, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i194 = select i1 %.not2.i193, float %484, float %483, !dbg !29
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i195 = icmp eq i32 %485, 0, !dbg !29
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i194, float %478, float 0xBFD5553DA0000000) #4, !dbg !29
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i194, float %478, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i196 = select i1 %.not3.i195, float %487, float %486, !dbg !29
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i197 = icmp eq i32 %488, 0, !dbg !29
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i196, float %478, float 0.000000e+00) #4, !dbg !29
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i196, float %478, float 0.000000e+00) #4, !dbg !29
  %.04.i198 = select i1 %.not4.i197, float %490, float %489, !dbg !29
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i199 = icmp eq i32 %491, 0, !dbg !29
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i198, float %157, float %157) #4, !dbg !29
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i198, float %157, float %157) #4, !dbg !29
  %.02.i200 = select i1 %.not5.i199, float %493, float %492, !dbg !29
  br label %__nv_tanhf.exit201, !dbg !29

__nv_tanhf.exit201:                               ; preds = %__internal_fmad.exit1.i185, %__internal_fmad.exit3.i190
  %s.1.i189 = phi float [ %477, %__internal_fmad.exit1.i185 ], [ %.02.i200, %__internal_fmad.exit3.i190 ], !dbg !29
  %494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i202 = icmp eq i32 %494, 0, !dbg !29
  %495 = tail call float @llvm.nvvm.fabs.ftz.f(float %158) #4, !dbg !29
  %496 = tail call float @llvm.nvvm.fabs.f(float %158) #4, !dbg !29
  %.01.i203 = select i1 %.not.i202, float %496, float %495, !dbg !29
  %497 = fcmp ult float %.01.i203, 0x3FE3333340000000, !dbg !29
  br i1 %497, label %__internal_fmad.exit3.i209, label %__internal_fmad.exit1.i204, !dbg !29

__internal_fmad.exit1.i204:                       ; preds = %__nv_tanhf.exit201
  %498 = fmul float %.01.i203, 0x4007154760000000, !dbg !29
  %499 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %498) #4, !dbg !29
  %500 = fadd float %499, 1.000000e+00, !dbg !29
  %501 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %500) #5, !dbg !29, !srcloc !30
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i205 = icmp eq i32 %502, 0, !dbg !29
  %503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %501, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %501, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i206 = select i1 %.not6.i205, float %504, float %503, !dbg !29
  %505 = fcmp oge float %.01.i203, 0x4022059680000000, !dbg !29
  %s.0.i207 = select i1 %505, float 1.000000e+00, float %.03.i206, !dbg !29
  %506 = bitcast float %s.0.i207 to i32, !dbg !29
  %507 = bitcast float %158 to i32, !dbg !29
  %508 = and i32 %507, -2147483648, !dbg !29
  %509 = or i32 %508, %506, !dbg !29
  %510 = bitcast i32 %509 to float, !dbg !29
  br label %__nv_tanhf.exit220, !dbg !29

__internal_fmad.exit3.i209:                       ; preds = %__nv_tanhf.exit201
  %511 = fmul float %158, %158, !dbg !29
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i210 = icmp eq i32 %512, 0, !dbg !29
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %511, float 0xBFAAC795C0000000) #4, !dbg !29
  %514 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %511, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i211 = select i1 %.not1.i210, float %514, float %513, !dbg !29
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i212 = icmp eq i32 %515, 0, !dbg !29
  %516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i211, float %511, float 0x3FC10B2820000000) #4, !dbg !29
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i211, float %511, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i213 = select i1 %.not2.i212, float %517, float %516, !dbg !29
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i214 = icmp eq i32 %518, 0, !dbg !29
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i213, float %511, float 0xBFD5553DA0000000) #4, !dbg !29
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i213, float %511, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i215 = select i1 %.not3.i214, float %520, float %519, !dbg !29
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i216 = icmp eq i32 %521, 0, !dbg !29
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i215, float %511, float 0.000000e+00) #4, !dbg !29
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i215, float %511, float 0.000000e+00) #4, !dbg !29
  %.04.i217 = select i1 %.not4.i216, float %523, float %522, !dbg !29
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i218 = icmp eq i32 %524, 0, !dbg !29
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i217, float %158, float %158) #4, !dbg !29
  %526 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i217, float %158, float %158) #4, !dbg !29
  %.02.i219 = select i1 %.not5.i218, float %526, float %525, !dbg !29
  br label %__nv_tanhf.exit220, !dbg !29

__nv_tanhf.exit220:                               ; preds = %__internal_fmad.exit1.i204, %__internal_fmad.exit3.i209
  %s.1.i208 = phi float [ %510, %__internal_fmad.exit1.i204 ], [ %.02.i219, %__internal_fmad.exit3.i209 ], !dbg !29
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i221 = icmp eq i32 %527, 0, !dbg !29
  %528 = tail call float @llvm.nvvm.fabs.ftz.f(float %159) #4, !dbg !29
  %529 = tail call float @llvm.nvvm.fabs.f(float %159) #4, !dbg !29
  %.01.i222 = select i1 %.not.i221, float %529, float %528, !dbg !29
  %530 = fcmp ult float %.01.i222, 0x3FE3333340000000, !dbg !29
  br i1 %530, label %__internal_fmad.exit3.i228, label %__internal_fmad.exit1.i223, !dbg !29

__internal_fmad.exit1.i223:                       ; preds = %__nv_tanhf.exit220
  %531 = fmul float %.01.i222, 0x4007154760000000, !dbg !29
  %532 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %531) #4, !dbg !29
  %533 = fadd float %532, 1.000000e+00, !dbg !29
  %534 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %533) #5, !dbg !29, !srcloc !30
  %535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i224 = icmp eq i32 %535, 0, !dbg !29
  %536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %534, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %537 = tail call float @llvm.nvvm.fma.rn.f(float %534, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i225 = select i1 %.not6.i224, float %537, float %536, !dbg !29
  %538 = fcmp oge float %.01.i222, 0x4022059680000000, !dbg !29
  %s.0.i226 = select i1 %538, float 1.000000e+00, float %.03.i225, !dbg !29
  %539 = bitcast float %s.0.i226 to i32, !dbg !29
  %540 = bitcast float %159 to i32, !dbg !29
  %541 = and i32 %540, -2147483648, !dbg !29
  %542 = or i32 %541, %539, !dbg !29
  %543 = bitcast i32 %542 to float, !dbg !29
  br label %__nv_tanhf.exit239, !dbg !29

__internal_fmad.exit3.i228:                       ; preds = %__nv_tanhf.exit220
  %544 = fmul float %159, %159, !dbg !29
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i229 = icmp eq i32 %545, 0, !dbg !29
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %544, float 0xBFAAC795C0000000) #4, !dbg !29
  %547 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %544, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i230 = select i1 %.not1.i229, float %547, float %546, !dbg !29
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i231 = icmp eq i32 %548, 0, !dbg !29
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i230, float %544, float 0x3FC10B2820000000) #4, !dbg !29
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i230, float %544, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i232 = select i1 %.not2.i231, float %550, float %549, !dbg !29
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i233 = icmp eq i32 %551, 0, !dbg !29
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i232, float %544, float 0xBFD5553DA0000000) #4, !dbg !29
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i232, float %544, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i234 = select i1 %.not3.i233, float %553, float %552, !dbg !29
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i235 = icmp eq i32 %554, 0, !dbg !29
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i234, float %544, float 0.000000e+00) #4, !dbg !29
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i234, float %544, float 0.000000e+00) #4, !dbg !29
  %.04.i236 = select i1 %.not4.i235, float %556, float %555, !dbg !29
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i237 = icmp eq i32 %557, 0, !dbg !29
  %558 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i236, float %159, float %159) #4, !dbg !29
  %559 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i236, float %159, float %159) #4, !dbg !29
  %.02.i238 = select i1 %.not5.i237, float %559, float %558, !dbg !29
  br label %__nv_tanhf.exit239, !dbg !29

__nv_tanhf.exit239:                               ; preds = %__internal_fmad.exit1.i223, %__internal_fmad.exit3.i228
  %s.1.i227 = phi float [ %543, %__internal_fmad.exit1.i223 ], [ %.02.i238, %__internal_fmad.exit3.i228 ], !dbg !29
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i240 = icmp eq i32 %560, 0, !dbg !29
  %561 = tail call float @llvm.nvvm.fabs.ftz.f(float %160) #4, !dbg !29
  %562 = tail call float @llvm.nvvm.fabs.f(float %160) #4, !dbg !29
  %.01.i241 = select i1 %.not.i240, float %562, float %561, !dbg !29
  %563 = fcmp ult float %.01.i241, 0x3FE3333340000000, !dbg !29
  br i1 %563, label %__internal_fmad.exit3.i247, label %__internal_fmad.exit1.i242, !dbg !29

__internal_fmad.exit1.i242:                       ; preds = %__nv_tanhf.exit239
  %564 = fmul float %.01.i241, 0x4007154760000000, !dbg !29
  %565 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %564) #4, !dbg !29
  %566 = fadd float %565, 1.000000e+00, !dbg !29
  %567 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %566) #5, !dbg !29, !srcloc !30
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i243 = icmp eq i32 %568, 0, !dbg !29
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %567, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %567, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i244 = select i1 %.not6.i243, float %570, float %569, !dbg !29
  %571 = fcmp oge float %.01.i241, 0x4022059680000000, !dbg !29
  %s.0.i245 = select i1 %571, float 1.000000e+00, float %.03.i244, !dbg !29
  %572 = bitcast float %s.0.i245 to i32, !dbg !29
  %573 = bitcast float %160 to i32, !dbg !29
  %574 = and i32 %573, -2147483648, !dbg !29
  %575 = or i32 %574, %572, !dbg !29
  %576 = bitcast i32 %575 to float, !dbg !29
  br label %__nv_tanhf.exit258, !dbg !29

__internal_fmad.exit3.i247:                       ; preds = %__nv_tanhf.exit239
  %577 = fmul float %160, %160, !dbg !29
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i248 = icmp eq i32 %578, 0, !dbg !29
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %577, float 0xBFAAC795C0000000) #4, !dbg !29
  %580 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %577, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i249 = select i1 %.not1.i248, float %580, float %579, !dbg !29
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i250 = icmp eq i32 %581, 0, !dbg !29
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i249, float %577, float 0x3FC10B2820000000) #4, !dbg !29
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i249, float %577, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i251 = select i1 %.not2.i250, float %583, float %582, !dbg !29
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i252 = icmp eq i32 %584, 0, !dbg !29
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i251, float %577, float 0xBFD5553DA0000000) #4, !dbg !29
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i251, float %577, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i253 = select i1 %.not3.i252, float %586, float %585, !dbg !29
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i254 = icmp eq i32 %587, 0, !dbg !29
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i253, float %577, float 0.000000e+00) #4, !dbg !29
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i253, float %577, float 0.000000e+00) #4, !dbg !29
  %.04.i255 = select i1 %.not4.i254, float %589, float %588, !dbg !29
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i256 = icmp eq i32 %590, 0, !dbg !29
  %591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i255, float %160, float %160) #4, !dbg !29
  %592 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i255, float %160, float %160) #4, !dbg !29
  %.02.i257 = select i1 %.not5.i256, float %592, float %591, !dbg !29
  br label %__nv_tanhf.exit258, !dbg !29

__nv_tanhf.exit258:                               ; preds = %__internal_fmad.exit1.i242, %__internal_fmad.exit3.i247
  %s.1.i246 = phi float [ %576, %__internal_fmad.exit1.i242 ], [ %.02.i257, %__internal_fmad.exit3.i247 ], !dbg !29
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i259 = icmp eq i32 %593, 0, !dbg !29
  %594 = tail call float @llvm.nvvm.fabs.ftz.f(float %161) #4, !dbg !29
  %595 = tail call float @llvm.nvvm.fabs.f(float %161) #4, !dbg !29
  %.01.i260 = select i1 %.not.i259, float %595, float %594, !dbg !29
  %596 = fcmp ult float %.01.i260, 0x3FE3333340000000, !dbg !29
  br i1 %596, label %__internal_fmad.exit3.i266, label %__internal_fmad.exit1.i261, !dbg !29

__internal_fmad.exit1.i261:                       ; preds = %__nv_tanhf.exit258
  %597 = fmul float %.01.i260, 0x4007154760000000, !dbg !29
  %598 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %597) #4, !dbg !29
  %599 = fadd float %598, 1.000000e+00, !dbg !29
  %600 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %599) #5, !dbg !29, !srcloc !30
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i262 = icmp eq i32 %601, 0, !dbg !29
  %602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %600, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %603 = tail call float @llvm.nvvm.fma.rn.f(float %600, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i263 = select i1 %.not6.i262, float %603, float %602, !dbg !29
  %604 = fcmp oge float %.01.i260, 0x4022059680000000, !dbg !29
  %s.0.i264 = select i1 %604, float 1.000000e+00, float %.03.i263, !dbg !29
  %605 = bitcast float %s.0.i264 to i32, !dbg !29
  %606 = bitcast float %161 to i32, !dbg !29
  %607 = and i32 %606, -2147483648, !dbg !29
  %608 = or i32 %607, %605, !dbg !29
  %609 = bitcast i32 %608 to float, !dbg !29
  br label %__nv_tanhf.exit277, !dbg !29

__internal_fmad.exit3.i266:                       ; preds = %__nv_tanhf.exit258
  %610 = fmul float %161, %161, !dbg !29
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i267 = icmp eq i32 %611, 0, !dbg !29
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %610, float 0xBFAAC795C0000000) #4, !dbg !29
  %613 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %610, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i268 = select i1 %.not1.i267, float %613, float %612, !dbg !29
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i269 = icmp eq i32 %614, 0, !dbg !29
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i268, float %610, float 0x3FC10B2820000000) #4, !dbg !29
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i268, float %610, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i270 = select i1 %.not2.i269, float %616, float %615, !dbg !29
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i271 = icmp eq i32 %617, 0, !dbg !29
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i270, float %610, float 0xBFD5553DA0000000) #4, !dbg !29
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i270, float %610, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i272 = select i1 %.not3.i271, float %619, float %618, !dbg !29
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i273 = icmp eq i32 %620, 0, !dbg !29
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i272, float %610, float 0.000000e+00) #4, !dbg !29
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i272, float %610, float 0.000000e+00) #4, !dbg !29
  %.04.i274 = select i1 %.not4.i273, float %622, float %621, !dbg !29
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i275 = icmp eq i32 %623, 0, !dbg !29
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i274, float %161, float %161) #4, !dbg !29
  %625 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i274, float %161, float %161) #4, !dbg !29
  %.02.i276 = select i1 %.not5.i275, float %625, float %624, !dbg !29
  br label %__nv_tanhf.exit277, !dbg !29

__nv_tanhf.exit277:                               ; preds = %__internal_fmad.exit1.i261, %__internal_fmad.exit3.i266
  %s.1.i265 = phi float [ %609, %__internal_fmad.exit1.i261 ], [ %.02.i276, %__internal_fmad.exit3.i266 ], !dbg !29
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i278 = icmp eq i32 %626, 0, !dbg !29
  %627 = tail call float @llvm.nvvm.fabs.ftz.f(float %162) #4, !dbg !29
  %628 = tail call float @llvm.nvvm.fabs.f(float %162) #4, !dbg !29
  %.01.i279 = select i1 %.not.i278, float %628, float %627, !dbg !29
  %629 = fcmp ult float %.01.i279, 0x3FE3333340000000, !dbg !29
  br i1 %629, label %__internal_fmad.exit3.i285, label %__internal_fmad.exit1.i280, !dbg !29

__internal_fmad.exit1.i280:                       ; preds = %__nv_tanhf.exit277
  %630 = fmul float %.01.i279, 0x4007154760000000, !dbg !29
  %631 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %630) #4, !dbg !29
  %632 = fadd float %631, 1.000000e+00, !dbg !29
  %633 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %632) #5, !dbg !29, !srcloc !30
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i281 = icmp eq i32 %634, 0, !dbg !29
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %633, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %636 = tail call float @llvm.nvvm.fma.rn.f(float %633, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i282 = select i1 %.not6.i281, float %636, float %635, !dbg !29
  %637 = fcmp oge float %.01.i279, 0x4022059680000000, !dbg !29
  %s.0.i283 = select i1 %637, float 1.000000e+00, float %.03.i282, !dbg !29
  %638 = bitcast float %s.0.i283 to i32, !dbg !29
  %639 = bitcast float %162 to i32, !dbg !29
  %640 = and i32 %639, -2147483648, !dbg !29
  %641 = or i32 %640, %638, !dbg !29
  %642 = bitcast i32 %641 to float, !dbg !29
  br label %__nv_tanhf.exit296, !dbg !29

__internal_fmad.exit3.i285:                       ; preds = %__nv_tanhf.exit277
  %643 = fmul float %162, %162, !dbg !29
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i286 = icmp eq i32 %644, 0, !dbg !29
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %643, float 0xBFAAC795C0000000) #4, !dbg !29
  %646 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %643, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i287 = select i1 %.not1.i286, float %646, float %645, !dbg !29
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i288 = icmp eq i32 %647, 0, !dbg !29
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i287, float %643, float 0x3FC10B2820000000) #4, !dbg !29
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i287, float %643, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i289 = select i1 %.not2.i288, float %649, float %648, !dbg !29
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i290 = icmp eq i32 %650, 0, !dbg !29
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i289, float %643, float 0xBFD5553DA0000000) #4, !dbg !29
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i289, float %643, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i291 = select i1 %.not3.i290, float %652, float %651, !dbg !29
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i292 = icmp eq i32 %653, 0, !dbg !29
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i291, float %643, float 0.000000e+00) #4, !dbg !29
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i291, float %643, float 0.000000e+00) #4, !dbg !29
  %.04.i293 = select i1 %.not4.i292, float %655, float %654, !dbg !29
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i294 = icmp eq i32 %656, 0, !dbg !29
  %657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i293, float %162, float %162) #4, !dbg !29
  %658 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i293, float %162, float %162) #4, !dbg !29
  %.02.i295 = select i1 %.not5.i294, float %658, float %657, !dbg !29
  br label %__nv_tanhf.exit296, !dbg !29

__nv_tanhf.exit296:                               ; preds = %__internal_fmad.exit1.i280, %__internal_fmad.exit3.i285
  %s.1.i284 = phi float [ %642, %__internal_fmad.exit1.i280 ], [ %.02.i295, %__internal_fmad.exit3.i285 ], !dbg !29
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i297 = icmp eq i32 %659, 0, !dbg !29
  %660 = tail call float @llvm.nvvm.fabs.ftz.f(float %163) #4, !dbg !29
  %661 = tail call float @llvm.nvvm.fabs.f(float %163) #4, !dbg !29
  %.01.i298 = select i1 %.not.i297, float %661, float %660, !dbg !29
  %662 = fcmp ult float %.01.i298, 0x3FE3333340000000, !dbg !29
  br i1 %662, label %__internal_fmad.exit3.i304, label %__internal_fmad.exit1.i299, !dbg !29

__internal_fmad.exit1.i299:                       ; preds = %__nv_tanhf.exit296
  %663 = fmul float %.01.i298, 0x4007154760000000, !dbg !29
  %664 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %663) #4, !dbg !29
  %665 = fadd float %664, 1.000000e+00, !dbg !29
  %666 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %665) #5, !dbg !29, !srcloc !30
  %667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i300 = icmp eq i32 %667, 0, !dbg !29
  %668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %666, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %669 = tail call float @llvm.nvvm.fma.rn.f(float %666, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i301 = select i1 %.not6.i300, float %669, float %668, !dbg !29
  %670 = fcmp oge float %.01.i298, 0x4022059680000000, !dbg !29
  %s.0.i302 = select i1 %670, float 1.000000e+00, float %.03.i301, !dbg !29
  %671 = bitcast float %s.0.i302 to i32, !dbg !29
  %672 = bitcast float %163 to i32, !dbg !29
  %673 = and i32 %672, -2147483648, !dbg !29
  %674 = or i32 %673, %671, !dbg !29
  %675 = bitcast i32 %674 to float, !dbg !29
  br label %__nv_tanhf.exit315, !dbg !29

__internal_fmad.exit3.i304:                       ; preds = %__nv_tanhf.exit296
  %676 = fmul float %163, %163, !dbg !29
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i305 = icmp eq i32 %677, 0, !dbg !29
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %676, float 0xBFAAC795C0000000) #4, !dbg !29
  %679 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %676, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i306 = select i1 %.not1.i305, float %679, float %678, !dbg !29
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i307 = icmp eq i32 %680, 0, !dbg !29
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i306, float %676, float 0x3FC10B2820000000) #4, !dbg !29
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i306, float %676, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i308 = select i1 %.not2.i307, float %682, float %681, !dbg !29
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i309 = icmp eq i32 %683, 0, !dbg !29
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i308, float %676, float 0xBFD5553DA0000000) #4, !dbg !29
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i308, float %676, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i310 = select i1 %.not3.i309, float %685, float %684, !dbg !29
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i311 = icmp eq i32 %686, 0, !dbg !29
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i310, float %676, float 0.000000e+00) #4, !dbg !29
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i310, float %676, float 0.000000e+00) #4, !dbg !29
  %.04.i312 = select i1 %.not4.i311, float %688, float %687, !dbg !29
  %689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i313 = icmp eq i32 %689, 0, !dbg !29
  %690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i312, float %163, float %163) #4, !dbg !29
  %691 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i312, float %163, float %163) #4, !dbg !29
  %.02.i314 = select i1 %.not5.i313, float %691, float %690, !dbg !29
  br label %__nv_tanhf.exit315, !dbg !29

__nv_tanhf.exit315:                               ; preds = %__internal_fmad.exit1.i299, %__internal_fmad.exit3.i304
  %s.1.i303 = phi float [ %675, %__internal_fmad.exit1.i299 ], [ %.02.i314, %__internal_fmad.exit3.i304 ], !dbg !29
  %692 = or disjoint i32 %25, %13, !dbg !17
  %693 = icmp slt i32 %692, 6144, !dbg !18
  %694 = or disjoint i32 %7, %15, !dbg !13
  %695 = icmp slt i32 %694, 64, !dbg !14
  %696 = and i1 %695, %693, !dbg !22
  %697 = or disjoint i32 %25, %12, !dbg !17
  %698 = icmp slt i32 %697, 6144, !dbg !18
  %699 = and i1 %695, %698, !dbg !22
  %700 = or disjoint i32 %25, %11, !dbg !17
  %701 = icmp slt i32 %700, 6144, !dbg !18
  %702 = and i1 %695, %701, !dbg !22
  %703 = or disjoint i32 %25, %10, !dbg !17
  %704 = icmp slt i32 %703, 6144, !dbg !18
  %705 = and i1 %695, %704, !dbg !22
  %.frozen = freeze i32 %694, !dbg !31
  %706 = sdiv i32 %.frozen, 16, !dbg !31
  %707 = mul i32 %706, 16, !dbg !32
  %.decomposed = sub i32 %.frozen, %707, !dbg !32
  %708 = fmul float %53, 5.000000e-01, !dbg !33
  %709 = fmul float %54, 5.000000e-01, !dbg !33
  %710 = fmul float %55, 5.000000e-01, !dbg !33
  %711 = fmul float %56, 5.000000e-01, !dbg !33
  %712 = fmul float %62, 5.000000e-01, !dbg !33
  %713 = fmul float %63, 5.000000e-01, !dbg !33
  %714 = fmul float %64, 5.000000e-01, !dbg !33
  %715 = fmul float %65, 5.000000e-01, !dbg !33
  %716 = fmul float %71, 5.000000e-01, !dbg !33
  %717 = fmul float %72, 5.000000e-01, !dbg !33
  %718 = fmul float %73, 5.000000e-01, !dbg !33
  %719 = fmul float %74, 5.000000e-01, !dbg !33
  %720 = fmul float %80, 5.000000e-01, !dbg !33
  %721 = fmul float %81, 5.000000e-01, !dbg !33
  %722 = fmul float %82, 5.000000e-01, !dbg !33
  %723 = fmul float %83, 5.000000e-01, !dbg !33
  %724 = fadd float %s.1.i, 1.000000e+00, !dbg !34
  %725 = fadd float %s.1.i37, 1.000000e+00, !dbg !34
  %726 = fadd float %s.1.i56, 1.000000e+00, !dbg !34
  %727 = fadd float %s.1.i75, 1.000000e+00, !dbg !34
  %728 = fadd float %s.1.i94, 1.000000e+00, !dbg !34
  %729 = fadd float %s.1.i113, 1.000000e+00, !dbg !34
  %730 = fadd float %s.1.i132, 1.000000e+00, !dbg !34
  %731 = fadd float %s.1.i151, 1.000000e+00, !dbg !34
  %732 = fadd float %s.1.i170, 1.000000e+00, !dbg !34
  %733 = fadd float %s.1.i189, 1.000000e+00, !dbg !34
  %734 = fadd float %s.1.i208, 1.000000e+00, !dbg !34
  %735 = fadd float %s.1.i227, 1.000000e+00, !dbg !34
  %736 = fadd float %s.1.i246, 1.000000e+00, !dbg !34
  %737 = fadd float %s.1.i265, 1.000000e+00, !dbg !34
  %738 = fadd float %s.1.i284, 1.000000e+00, !dbg !34
  %739 = fadd float %s.1.i303, 1.000000e+00, !dbg !34
  %740 = fmul float %708, %724, !dbg !35
  %741 = fmul float %709, %725, !dbg !35
  %742 = fmul float %710, %726, !dbg !35
  %743 = fmul float %711, %727, !dbg !35
  %744 = fmul float %712, %728, !dbg !35
  %745 = fmul float %713, %729, !dbg !35
  %746 = fmul float %714, %730, !dbg !35
  %747 = fmul float %715, %731, !dbg !35
  %748 = fmul float %716, %732, !dbg !35
  %749 = fmul float %717, %733, !dbg !35
  %750 = fmul float %718, %734, !dbg !35
  %751 = fmul float %719, %735, !dbg !35
  %752 = fmul float %720, %736, !dbg !35
  %753 = fmul float %721, %737, !dbg !35
  %754 = fmul float %722, %738, !dbg !35
  %755 = fmul float %723, %739, !dbg !35
  %756 = shl i32 %703, 4, !dbg !36
  %757 = shl i32 %700, 4, !dbg !36
  %758 = shl i32 %697, 4, !dbg !36
  %759 = shl i32 %692, 4, !dbg !36
  %760 = mul i32 %706, 98304, !dbg !37
  %761 = add i32 %760, %.decomposed, !dbg !38
  %762 = add i32 %761, %756, !dbg !39
  %763 = add i32 %761, %757, !dbg !39
  %764 = add i32 %761, %758, !dbg !39
  %765 = add i32 %761, %759, !dbg !39
  %766 = sext i32 %762 to i64, !dbg !40
  %767 = getelementptr float, ptr addrspace(1) %1, i64 %766, !dbg !40
  %768 = sext i32 %763 to i64, !dbg !40
  %769 = getelementptr float, ptr addrspace(1) %1, i64 %768, !dbg !40
  %770 = sext i32 %764 to i64, !dbg !40
  %771 = getelementptr float, ptr addrspace(1) %1, i64 %770, !dbg !40
  %772 = sext i32 %765 to i64, !dbg !40
  %773 = getelementptr float, ptr addrspace(1) %1, i64 %772, !dbg !40
  %774 = shl i32 %8, 8, !dbg !41
  %775 = and i32 %774, 3840, !dbg !41
  %776 = or disjoint i32 %775, %10, !dbg !41
  %777 = and i32 %14, 1020, !dbg !41
  %778 = lshr exact i32 %775, 2, !dbg !41
  %779 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %778, !dbg !41
  %780 = getelementptr float, ptr addrspace(3) %779, i32 %776, !dbg !41
  %781 = bitcast float %s.1.i to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %780, <1 x i32> %781, i1 true) #4, !dbg !41
  %782 = or disjoint i32 %776, 64, !dbg !41
  %783 = lshr i32 %782, 4, !dbg !41
  %784 = getelementptr float, ptr addrspace(3) @global_smem, i32 %783, !dbg !41
  %785 = getelementptr float, ptr addrspace(3) %784, i32 %782, !dbg !41
  %786 = bitcast float %s.1.i37 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %785, <1 x i32> %786, i1 true) #4, !dbg !41
  %787 = or disjoint i32 %776, 128, !dbg !41
  %788 = lshr i32 %787, 4, !dbg !41
  %789 = getelementptr float, ptr addrspace(3) @global_smem, i32 %788, !dbg !41
  %790 = getelementptr float, ptr addrspace(3) %789, i32 %787, !dbg !41
  %791 = bitcast float %s.1.i56 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %790, <1 x i32> %791, i1 true) #4, !dbg !41
  %792 = or disjoint i32 %776, 192, !dbg !41
  %793 = lshr i32 %792, 4, !dbg !41
  %794 = getelementptr float, ptr addrspace(3) @global_smem, i32 %793, !dbg !41
  %795 = getelementptr float, ptr addrspace(3) %794, i32 %792, !dbg !41
  %796 = bitcast float %s.1.i75 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %795, <1 x i32> %796, i1 true) #4, !dbg !41
  %797 = or disjoint i32 %776, 16, !dbg !41
  %798 = getelementptr float, ptr addrspace(3) %779, i32 %797, !dbg !41
  %799 = bitcast float %s.1.i94 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %798, <1 x i32> %799, i1 true) #4, !dbg !41
  %800 = or disjoint i32 %776, 80, !dbg !41
  %801 = lshr i32 %800, 4, !dbg !41
  %802 = and i32 %801, 244, !dbg !41
  %803 = getelementptr float, ptr addrspace(3) @global_smem, i32 %802, !dbg !41
  %804 = getelementptr float, ptr addrspace(3) %803, i32 %800, !dbg !41
  %805 = bitcast float %s.1.i113 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %804, <1 x i32> %805, i1 true) #4, !dbg !41
  %806 = or disjoint i32 %776, 144, !dbg !41
  %807 = lshr i32 %806, 4, !dbg !41
  %808 = and i32 %807, 248, !dbg !41
  %809 = getelementptr float, ptr addrspace(3) @global_smem, i32 %808, !dbg !41
  %810 = getelementptr float, ptr addrspace(3) %809, i32 %806, !dbg !41
  %811 = bitcast float %s.1.i132 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %810, <1 x i32> %811, i1 true) #4, !dbg !41
  %812 = or disjoint i32 %776, 208, !dbg !41
  %813 = lshr i32 %812, 4, !dbg !41
  %814 = and i32 %813, 252, !dbg !41
  %815 = getelementptr float, ptr addrspace(3) @global_smem, i32 %814, !dbg !41
  %816 = getelementptr float, ptr addrspace(3) %815, i32 %812, !dbg !41
  %817 = bitcast float %s.1.i151 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %816, <1 x i32> %817, i1 true) #4, !dbg !41
  %818 = or disjoint i32 %776, 32, !dbg !41
  %819 = getelementptr float, ptr addrspace(3) %779, i32 %818, !dbg !41
  %820 = bitcast float %s.1.i170 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %819, <1 x i32> %820, i1 true) #4, !dbg !41
  %821 = or disjoint i32 %776, 96, !dbg !41
  %822 = lshr i32 %821, 4, !dbg !41
  %823 = and i32 %822, 244, !dbg !41
  %824 = getelementptr float, ptr addrspace(3) @global_smem, i32 %823, !dbg !41
  %825 = getelementptr float, ptr addrspace(3) %824, i32 %821, !dbg !41
  %826 = bitcast float %s.1.i189 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %825, <1 x i32> %826, i1 true) #4, !dbg !41
  %827 = or disjoint i32 %776, 160, !dbg !41
  %828 = lshr i32 %827, 4, !dbg !41
  %829 = and i32 %828, 248, !dbg !41
  %830 = getelementptr float, ptr addrspace(3) @global_smem, i32 %829, !dbg !41
  %831 = getelementptr float, ptr addrspace(3) %830, i32 %827, !dbg !41
  %832 = bitcast float %s.1.i208 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %831, <1 x i32> %832, i1 true) #4, !dbg !41
  %833 = or disjoint i32 %776, 224, !dbg !41
  %834 = lshr i32 %833, 4, !dbg !41
  %835 = and i32 %834, 252, !dbg !41
  %836 = getelementptr float, ptr addrspace(3) @global_smem, i32 %835, !dbg !41
  %837 = getelementptr float, ptr addrspace(3) %836, i32 %833, !dbg !41
  %838 = bitcast float %s.1.i227 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %837, <1 x i32> %838, i1 true) #4, !dbg !41
  %839 = or disjoint i32 %776, 48, !dbg !41
  %840 = getelementptr float, ptr addrspace(3) %779, i32 %839, !dbg !41
  %841 = bitcast float %s.1.i246 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %840, <1 x i32> %841, i1 true) #4, !dbg !41
  %842 = or disjoint i32 %776, 112, !dbg !41
  %843 = lshr i32 %842, 4, !dbg !41
  %844 = and i32 %843, 244, !dbg !41
  %845 = getelementptr float, ptr addrspace(3) @global_smem, i32 %844, !dbg !41
  %846 = getelementptr float, ptr addrspace(3) %845, i32 %842, !dbg !41
  %847 = bitcast float %s.1.i265 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %846, <1 x i32> %847, i1 true) #4, !dbg !41
  %848 = or disjoint i32 %776, 176, !dbg !41
  %849 = lshr i32 %848, 4, !dbg !41
  %850 = and i32 %849, 248, !dbg !41
  %851 = getelementptr float, ptr addrspace(3) @global_smem, i32 %850, !dbg !41
  %852 = getelementptr float, ptr addrspace(3) %851, i32 %848, !dbg !41
  %853 = bitcast float %s.1.i284 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %852, <1 x i32> %853, i1 true) #4, !dbg !41
  %854 = or disjoint i32 %776, 240, !dbg !41
  %855 = lshr i32 %854, 4, !dbg !41
  %856 = and i32 %855, 252, !dbg !41
  %857 = getelementptr float, ptr addrspace(3) @global_smem, i32 %856, !dbg !41
  %858 = getelementptr float, ptr addrspace(3) %857, i32 %854, !dbg !41
  %859 = bitcast float %s.1.i303 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %858, <1 x i32> %859, i1 true) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %860 = lshr i32 %14, 4, !dbg !41
  %861 = and i32 %860, 60, !dbg !41
  %862 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %861, !dbg !41
  %863 = getelementptr inbounds float, ptr addrspace(3) %862, i32 %777, !dbg !41
  %864 = or disjoint i32 %777, 1024, !dbg !41
  %865 = lshr i32 %864, 4, !dbg !41
  %866 = and i32 %865, 124, !dbg !41
  %867 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %866, !dbg !41
  %868 = getelementptr inbounds float, ptr addrspace(3) %867, i32 %864, !dbg !41
  %869 = load <4 x i32>, ptr addrspace(3) %868, align 16, !dbg !41
  %870 = or disjoint i32 %777, 2048, !dbg !41
  %871 = lshr i32 %870, 4, !dbg !41
  %872 = and i32 %871, 188, !dbg !41
  %873 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %872, !dbg !41
  %874 = getelementptr inbounds float, ptr addrspace(3) %873, i32 %870, !dbg !41
  %875 = load <4 x i32>, ptr addrspace(3) %874, align 16, !dbg !41
  %876 = or disjoint i32 %777, 3072, !dbg !41
  %877 = lshr i32 %876, 4, !dbg !41
  %878 = and i32 %877, 252, !dbg !41
  %879 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %878, !dbg !41
  %880 = getelementptr inbounds float, ptr addrspace(3) %879, i32 %876, !dbg !41
  %881 = load <4 x i32>, ptr addrspace(3) %880, align 16, !dbg !41
  %.extract = load i32, ptr addrspace(3) %863, align 16, !dbg !41
  %882 = getelementptr inbounds i8, ptr addrspace(3) %863, i32 4, !dbg !41
  %.extract16 = load i32, ptr addrspace(3) %882, align 4, !dbg !41
  %883 = getelementptr inbounds i8, ptr addrspace(3) %863, i32 8, !dbg !41
  %.extract17 = load i32, ptr addrspace(3) %883, align 8, !dbg !41
  %884 = getelementptr inbounds i8, ptr addrspace(3) %863, i32 12, !dbg !41
  %.extract18 = load i32, ptr addrspace(3) %884, align 4, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract16, i32 %.extract17, i32 %.extract18, ptr addrspace(1) %767, i1 %705) #4, !dbg !41
  %.extract19 = extractelement <4 x i32> %869, i64 0, !dbg !41
  %.extract20 = extractelement <4 x i32> %869, i64 1, !dbg !41
  %.extract21 = extractelement <4 x i32> %869, i64 2, !dbg !41
  %.extract22 = extractelement <4 x i32> %869, i64 3, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract19, i32 %.extract20, i32 %.extract21, i32 %.extract22, ptr addrspace(1) %769, i1 %702) #4, !dbg !41
  %.extract23 = extractelement <4 x i32> %875, i64 0, !dbg !41
  %.extract24 = extractelement <4 x i32> %875, i64 1, !dbg !41
  %.extract25 = extractelement <4 x i32> %875, i64 2, !dbg !41
  %.extract26 = extractelement <4 x i32> %875, i64 3, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract23, i32 %.extract24, i32 %.extract25, i32 %.extract26, ptr addrspace(1) %771, i1 %699) #4, !dbg !41
  %.extract27 = extractelement <4 x i32> %881, i64 0, !dbg !41
  %.extract28 = extractelement <4 x i32> %881, i64 1, !dbg !41
  %.extract29 = extractelement <4 x i32> %881, i64 2, !dbg !41
  %.extract30 = extractelement <4 x i32> %881, i64 3, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract27, i32 %.extract28, i32 %.extract29, i32 %.extract30, ptr addrspace(1) %773, i1 %696) #4, !dbg !41
  %885 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !42
  %886 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !42
  %887 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !42
  %888 = getelementptr float, ptr addrspace(1) %2, i64 %42, !dbg !42
  %889 = bitcast float %740 to i32, !dbg !43
  %890 = bitcast float %741 to i32, !dbg !43
  %891 = bitcast float %742 to i32, !dbg !43
  %892 = bitcast float %743 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %889, i32 %890, i32 %891, i32 %892, ptr addrspace(1) %885, i1 %44) #4, !dbg !43
  %893 = bitcast float %744 to i32, !dbg !43
  %894 = bitcast float %745 to i32, !dbg !43
  %895 = bitcast float %746 to i32, !dbg !43
  %896 = bitcast float %747 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %893, i32 %894, i32 %895, i32 %896, ptr addrspace(1) %886, i1 %45) #4, !dbg !43
  %897 = bitcast float %748 to i32, !dbg !43
  %898 = bitcast float %749 to i32, !dbg !43
  %899 = bitcast float %750 to i32, !dbg !43
  %900 = bitcast float %751 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %897, i32 %898, i32 %899, i32 %900, ptr addrspace(1) %887, i1 %46) #4, !dbg !43
  %901 = bitcast float %752 to i32, !dbg !43
  %902 = bitcast float %753 to i32, !dbg !43
  %903 = bitcast float %754 to i32, !dbg !43
  %904 = bitcast float %755 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %901, i32 %902, i32 %903, i32 %904, ptr addrspace(1) %888, i1 %47) #4, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmo7ewbf3ilidoxct7ojptiysuxbkee2ym6mwqyp5tkdo74l6j7k.py", directory: "inductor_cache/mo")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_9, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_9", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 53, scope: !7)
!23 = !DILocation(line: 32, column: 45, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 26, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 31, column: 19, scope: !7)
!32 = !DILocation(line: 30, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 33, scope: !7)
!37 = !DILocation(line: 46, column: 44, scope: !7)
!38 = !DILocation(line: 46, column: 30, scope: !7)
!39 = !DILocation(line: 46, column: 38, scope: !7)
!40 = !DILocation(line: 46, column: 25, scope: !7)
!41 = !DILocation(line: 46, column: 55, scope: !7)
!42 = !DILocation(line: 47, column: 25, scope: !7)
!43 = !DILocation(line: 47, column: 47, scope: !7)
!44 = !DILocation(line: 47, column: 4, scope: !7)
