; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 2, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 28, !dbg !12
  %11 = and i32 %9, 3, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sext i32 %12 to i64, !dbg !14
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15
  %16 = add i32 %12, -4, !dbg !16
  %17 = sext i32 %16 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !18
  %20 = add i32 %12, 4, !dbg !19
  %21 = sext i32 %20 to i64, !dbg !20
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !21
  %24 = icmp ult i32 %8, 2147483644, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !24
  %27 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !25
  %28 = insertelement <2 x i32> %27, i32 %8, i64 1, !dbg !25
  %29 = icmp slt <2 x i32> %28, <i32 4, i32 2147483643>, !dbg !25
  %30 = icmp ugt <2 x i32> %28, <i32 4, i32 2147483643>, !dbg !25
  %31 = shufflevector <2 x i1> %29, <2 x i1> %30, <2 x i32> <i32 0, i32 3>, !dbg !25
  %32 = extractelement <2 x i1> %29, i64 0, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %32, i32 0, i1 %32) #1, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %32, i32 0, i1 %32) #1, !dbg !27
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 false, i32 0, i1 false) #1, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 false, i32 0, i1 false) #1, !dbg !29
  %37 = extractelement <2 x i1> %30, i64 1, !dbg !30
  %38 = and i1 %37, %32, !dbg !30
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %38, i32 0, i1 %38) #1, !dbg !31
  %40 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !26
  %41 = insertelement <2 x i32> %40, i32 %39, i64 1, !dbg !26
  %42 = bitcast <2 x i32> %41 to <2 x float>, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %38, i32 0, i1 %38) #1, !dbg !32
  %44 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !27
  %45 = insertelement <2 x i32> %44, i32 %43, i64 1, !dbg !27
  %46 = bitcast <2 x i32> %45 to <2 x float>, !dbg !27
  %47 = fadd <2 x float> %42, %46, !dbg !33
  %48 = and i1 %24, %32, !dbg !34
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %48, i32 0, i1 %48) #1, !dbg !35
  %50 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !28
  %51 = insertelement <2 x i32> %50, i32 %49, i64 1, !dbg !28
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !28
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %48, i32 0, i1 %48) #1, !dbg !36
  %54 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !29
  %55 = insertelement <2 x i32> %54, i32 %53, i64 1, !dbg !29
  %56 = bitcast <2 x i32> %55 to <2 x float>, !dbg !29
  %57 = fadd <2 x float> %52, %56, !dbg !37
  %58 = select <2 x i1> %31, <2 x float> %47, <2 x float> %57, !dbg !38
  %shift = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !39
  %59 = fadd <2 x float> %58, %shift, !dbg !39
  %60 = getelementptr float, ptr addrspace(1) %4, i64 %13, !dbg !40
  %61 = icmp eq i32 %10, 0, !dbg !41
  %bc = bitcast <2 x float> %59 to <2 x i32>, !dbg !41
  %62 = extractelement <2 x i32> %bc, i64 0, !dbg !41
  %63 = and i1 %61, %32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %62, ptr addrspace(1) %60, i1 %63) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckluzy6oxxgkrec5v4n42y5fstiorniosu7gy56midtx73n63ksj.py", directory: "inductor_cache/kl")
!4 = !{ptr @triton_poi_fused_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_sum_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_sum_0", linkageName: "triton_poi_fused_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 30, column: 30, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 38, column: 38, scope: !7)
!17 = !DILocation(line: 38, column: 31, scope: !7)
!18 = !DILocation(line: 39, column: 31, scope: !7)
!19 = !DILocation(line: 44, column: 16, scope: !7)
!20 = !DILocation(line: 47, column: 31, scope: !7)
!21 = !DILocation(line: 48, column: 31, scope: !7)
!22 = !DILocation(line: 52, column: 21, scope: !7)
!23 = !DILocation(line: 54, column: 31, scope: !7)
!24 = !DILocation(line: 55, column: 31, scope: !7)
!25 = !DILocation(line: 23, column: 21, scope: !7)
!26 = !DILocation(line: 30, column: 35, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 38, column: 43, scope: !7)
!29 = !DILocation(line: 39, column: 43, scope: !7)
!30 = !DILocation(line: 47, column: 48, scope: !7)
!31 = !DILocation(line: 47, column: 40, scope: !7)
!32 = !DILocation(line: 48, column: 40, scope: !7)
!33 = !DILocation(line: 32, column: 18, scope: !7)
!34 = !DILocation(line: 54, column: 44, scope: !7)
!35 = !DILocation(line: 54, column: 36, scope: !7)
!36 = !DILocation(line: 55, column: 36, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 0, scope: !7)
!39 = !DILocation(line: 60, column: 20, scope: !7)
!40 = !DILocation(line: 61, column: 25, scope: !7)
!41 = !DILocation(line: 61, column: 37, scope: !7)
!42 = !DILocation(line: 61, column: 4, scope: !7)
