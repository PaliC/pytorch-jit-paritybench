//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5 // -- Begin function triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 114, 113, 47, 99, 114, 113, 119, 114, 108, 113, 100, 110, 117, 113, 115, 53, 54, 97, 103, 112, 110, 115, 111, 122, 107, 113, 105, 120, 118, 117, 97, 53, 101, 107, 98, 97, 108, 55, 103, 109, 104, 97, 97, 105, 110, 108, 105, 111, 114, 106, 119, 113, 104, 112, 97, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 52};
                                        // @triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5
.visible .entry triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5_param_1,
	.param .u32 triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5_param_0];
$L__tmp0:
	.loc	1 21 28                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:21:33
	shl.b32 	%r4, %r3, 4;
	.loc	1 22 36                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:22:36
	mov.u32 	%r1, %tid.x;
	and.b32  	%r5, %r1, 15;
	.loc	1 22 23                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:22:23
	or.b32  	%r2, %r4, %r5;
	.loc	1 23 21                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:23:21
	setp.gt.s32 	%p3, %r2, 15;
	setp.lt.s32 	%p2, %r2, 16;
	.loc	1 25 19                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:25:19
	bfe.s32 	%r6, %r3, 27, 1;
	shr.u32 	%r7, %r6, 30;
	add.s32 	%r8, %r2, %r7;
	.loc	1 26 30                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:26:30
	mul.wide.s32 	%rd9, %r2, 8;
	add.s64 	%rd5, %rd8, %rd9;
	.loc	1 26 35                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:26:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p2 ld.global.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 27 32                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:27:32
	and.b32  	%r9, %r8, -4;
	.loc	1 27 30                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:27:30
	mul.wide.s32 	%rd10, %r9, 8;
	add.s64 	%rd7, %rd8, %rd10;
	.loc	1 27 37                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:27:37
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 29 18                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:29:18
	setp.gt.s64 	%p4, %rd4, 0;
	.loc	1 30 32                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:30:32
	selp.b64 	%rd11, 0, %rd6, %p4;
	.loc	1 31 18                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:31:18
	add.s64 	%rd2, %rd11, %rd4;
	.loc	1 32 37                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:32:37
	setp.lt.u64 	%p5, %rd2, 4;
	.loc	1 32 60                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:32:60
	or.pred  	%p6, %p3, %p5;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:0:60
	ld.param.u64 	%rd3, [triton_poi_fused_add_gt_masked_fill_mul_scatter_add_5_param_1];
	cvt.s64.s32 	%rd1, %r9;
	.loc	1 22 36                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:22:36
	and.b32  	%r12, %r1, 16;
	.loc	1 32 60                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:32:60
	bar.sync 	0;
	.loc	1 34 30                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:34:30
	shl.b64 	%rd13, %rd2, 2;
	add.s64 	%rd14, %rd3, %rd13;
	shl.b64 	%rd15, %rd1, 2;
	add.s64 	%rd12, %rd14, %rd15;
	.loc	1 34 50                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:34:50
	setp.eq.s32 	%p9, %r12, 0;
	and.pred  	%p7, %p9, %p2;
	mov.b32 	%r11, -8388608;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p7 atom.global.gpu.relaxed.add.f32 %r10, [ %rd12 + 0 ], %r11;
	// end inline asm
	.loc	1 34 4                          // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:34:4
	ret;
$L__BB0_1:
	.loc	1 32 60                         // crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py:32:60
	mov.u64 	%rd16, assertMessage_0;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, assertFile_0;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, assertFunc_0;
	cvta.global.u64 	%rd21, %rd20;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1], %rd19;
	.param .b32 param2;
	st.param.b32 	[param2], 32;
	.param .b64 param3;
	st.param.b64 	[param3], %rd21;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rq/crqwrlqdnuqs56agpnsozkqixvua5ekbal7gmhaainliorjwqhpa.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 113
.b8 119
.b8 114
.b8 108
.b8 113
.b8 100
.b8 110
.b8 117
.b8 113
.b8 115
.b8 53
.b8 54
.b8 97
.b8 103
.b8 112
.b8 110
.b8 115
.b8 111
.b8 122
.b8 107
.b8 113
.b8 105
.b8 120
.b8 118
.b8 117
.b8 97
.b8 53
.b8 101
.b8 107
.b8 98
.b8 97
.b8 108
.b8 55
.b8 103
.b8 109
.b8 104
.b8 97
.b8 97
.b8 105
.b8 110
.b8 108
.b8 105
.b8 111
.b8 114
.b8 106
.b8 119
.b8 113
.b8 104
.b8 112
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
