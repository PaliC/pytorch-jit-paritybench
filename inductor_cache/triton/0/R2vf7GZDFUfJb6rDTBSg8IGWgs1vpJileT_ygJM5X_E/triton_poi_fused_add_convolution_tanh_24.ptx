//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_tanh_24 // -- Begin function triton_poi_fused_add_convolution_tanh_24
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_convolution_tanh_24
.visible .entry triton_poi_fused_add_convolution_tanh_24(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_24_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_24_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_24_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_tanh_24_param_3,
	.param .u32 triton_poi_fused_add_convolution_tanh_24_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<62>;
	.reg .f32 	%f<130>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_tanh_24_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_tanh_24_param_1];
$L__tmp0:
	.loc	1 21 28                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:21:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:21:33
	shl.b32 	%r21, %r8, 9;
	ld.param.u64 	%rd12, [triton_poi_fused_add_convolution_tanh_24_param_2];
	.loc	1 22 36                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:22:36
	mov.u32 	%r22, %tid.x;
	shl.b32 	%r23, %r22, 2;
	and.b32  	%r24, %r23, 508;
	.loc	1 22 23                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:22:23
	or.b32  	%r25, %r21, %r24;
	.loc	1 25 21                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:25:21
	bfe.s32 	%r26, %r8, 22, 1;
	shr.u32 	%r27, %r26, 20;
	add.s32 	%r28, %r25, %r27;
	shr.s32 	%r29, %r28, 12;
	.loc	1 25 29                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:25:29
	mul.hi.s32 	%r30, %r29, 1431655766;
	shr.u32 	%r31, %r30, 31;
	add.s32 	%r32, %r30, %r31;
	mul.lo.s32 	%r33, %r32, 3;
	sub.s32 	%r34, %r29, %r33;
	.loc	1 26 34                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:26:34
	mul.wide.s32 	%rd13, %r25, 4;
	add.s64 	%rd15, %rd10, %rd13;
	mov.pred 	%p15, -1;
	.loc	1 26 39                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:26:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p15 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r9;
	mov.b32 	%f22, %r10;
	mov.b32 	%f23, %r11;
	.loc	1 27 30                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:27:30
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd5, %rd11, %rd14;
	.loc	1 27 35                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:27:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r14 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r16 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 28 30                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:28:30
	add.s64 	%rd9, %rd12, %rd13;
	.loc	1 28 35                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:28:35
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p15 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 29 18                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:29:18
	add.f32 	%f1, %f21, %f25;
	add.f32 	%f2, %f22, %f26;
	.loc	1 30 26                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:30:26
	abs.ftz.f32 	%f5, %f1;
	setp.ltu.f32 	%p7, %f5, 0f3F19999A;
	mov.f32 	%f109, 0f3F800000;
	mov.f32 	%f110, 0fC0000000;
	mov.b32 	%r58, %f1;
	mov.f32 	%f121, 0fBD563CAE;
	mov.f32 	%f122, 0f3C80F082;
	mov.f32 	%f123, 0f3E085941;
	mov.f32 	%f124, 0fBEAAA9ED;
	mov.f32 	%f125, 0f00000000;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f37, %f1, %f1;
	fma.rn.ftz.f32 	%f40, %f122, %f37, %f121;
	fma.rn.ftz.f32 	%f42, %f40, %f37, %f123;
	fma.rn.ftz.f32 	%f44, %f42, %f37, %f124;
	fma.rn.ftz.f32 	%f46, %f44, %f37, %f125;
	fma.rn.ftz.f32 	%f126, %f46, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f31, %f5, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f32, %f31;
	add.f32 	%f30, %f32, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f29,%f30;
	// end inline asm
	fma.rn.ftz.f32 	%f35, %f29, %f110, %f109;
	setp.ge.f32 	%p8, %f5, 0f41102CB4;
	selp.f32 	%f36, 0f3F800000, %f35, %p8;
	mov.b32 	%r35, %f36;
	and.b32  	%r37, %r58, -2147483648;
	or.b32  	%r38, %r37, %r35;
	mov.b32 	%f126, %r38;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:0:0
	mov.b32 	%f24, %r12;
	mov.b32 	%f28, %r16;
	add.f32 	%f3, %f23, %f27;
	.loc	1 30 26                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:30:26
	abs.ftz.f32 	%f9, %f2;
	setp.ltu.f32 	%p9, %f9, 0f3F19999A;
	mov.b32 	%r59, %f2;
	@%p9 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f55, %f2, %f2;
	fma.rn.ftz.f32 	%f58, %f122, %f55, %f121;
	fma.rn.ftz.f32 	%f60, %f58, %f55, %f123;
	fma.rn.ftz.f32 	%f62, %f60, %f55, %f124;
	fma.rn.ftz.f32 	%f64, %f62, %f55, %f125;
	fma.rn.ftz.f32 	%f127, %f64, %f2, %f2;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f49, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f50, %f49;
	add.f32 	%f48, %f50, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f47,%f48;
	// end inline asm
	fma.rn.ftz.f32 	%f53, %f47, %f110, %f109;
	setp.ge.f32 	%p10, %f9, 0f41102CB4;
	selp.f32 	%f54, 0f3F800000, %f53, %p10;
	mov.b32 	%r39, %f54;
	and.b32  	%r41, %r59, -2147483648;
	or.b32  	%r42, %r41, %r39;
	mov.b32 	%f127, %r42;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 0                           // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:0:0
	add.f32 	%f4, %f24, %f28;
	.loc	1 30 26                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:30:26
	abs.ftz.f32 	%f13, %f3;
	setp.ltu.f32 	%p11, %f13, 0f3F19999A;
	mov.b32 	%r60, %f3;
	@%p11 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f73, %f3, %f3;
	fma.rn.ftz.f32 	%f76, %f122, %f73, %f121;
	fma.rn.ftz.f32 	%f78, %f76, %f73, %f123;
	fma.rn.ftz.f32 	%f80, %f78, %f73, %f124;
	fma.rn.ftz.f32 	%f82, %f80, %f73, %f125;
	fma.rn.ftz.f32 	%f128, %f82, %f3, %f3;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f67, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f68, %f67;
	add.f32 	%f66, %f68, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f65,%f66;
	// end inline asm
	fma.rn.ftz.f32 	%f71, %f65, %f110, %f109;
	setp.ge.f32 	%p12, %f13, 0f41102CB4;
	selp.f32 	%f72, 0f3F800000, %f71, %p12;
	mov.b32 	%r43, %f72;
	and.b32  	%r45, %r60, -2147483648;
	or.b32  	%r46, %r45, %r43;
	mov.b32 	%f128, %r46;
$L__BB0_9:                              // %__nv_tanhf.exit38
	.loc	1 0 26                          // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:0:26
	ld.param.u64 	%rd3, [triton_poi_fused_add_convolution_tanh_24_param_3];
	cvt.s64.s32 	%rd1, %r25;
	.loc	1 30 26                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:30:26
	abs.ftz.f32 	%f17, %f4;
	setp.ltu.f32 	%p13, %f17, 0f3F19999A;
	@%p13 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f91, %f4, %f4;
	fma.rn.ftz.f32 	%f94, %f122, %f91, %f121;
	fma.rn.ftz.f32 	%f96, %f94, %f91, %f123;
	fma.rn.ftz.f32 	%f98, %f96, %f91, %f124;
	fma.rn.ftz.f32 	%f100, %f98, %f91, %f125;
	fma.rn.ftz.f32 	%f129, %f100, %f4, %f4;
	.loc	1 32 39                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:32:39
	mov.b32 	%r61, %f4;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	.loc	1 30 26                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:30:26
	mul.f32 	%f85, %f17, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f86, %f85;
	add.f32 	%f84, %f86, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f83,%f84;
	// end inline asm
	fma.rn.ftz.f32 	%f89, %f83, %f110, %f109;
	setp.ge.f32 	%p14, %f17, 0f41102CB4;
	selp.f32 	%f90, 0f3F800000, %f89, %p14;
	mov.b32 	%r47, %f90;
	mov.b32 	%r61, %f4;
	and.b32  	%r48, %r61, -2147483648;
	or.b32  	%r49, %r48, %r47;
	mov.b32 	%f129, %r49;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 28 35                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:28:35
	mov.b32 	%f101, %r20;
	mov.b32 	%f102, %r19;
	mov.b32 	%f103, %r18;
	mov.b32 	%f104, %r17;
	.loc	1 31 18                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:31:18
	add.f32 	%f105, %f126, %f104;
	add.f32 	%f106, %f127, %f103;
	add.f32 	%f107, %f128, %f102;
	add.f32 	%f108, %f129, %f101;
	.loc	1 32 39                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:32:39
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd15 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	.loc	1 33 25                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:33:25
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd16, %rd3, %rd17;
	.loc	1 33 36                         // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:33:36
	mov.b32 	%r54, %f105;
	mov.b32 	%r55, %f106;
	mov.b32 	%r56, %f107;
	mov.b32 	%r57, %f108;
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd16 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 33 4                          // chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hd/chdf6plz4onrqx22aogxrp65oefsornh4w4fz2pihn3fpviqn6ba.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 100
.b8 102
.b8 54
.b8 112
.b8 108
.b8 122
.b8 52
.b8 111
.b8 110
.b8 114
.b8 113
.b8 120
.b8 50
.b8 50
.b8 97
.b8 111
.b8 103
.b8 120
.b8 114
.b8 112
.b8 54
.b8 53
.b8 111
.b8 101
.b8 102
.b8 115
.b8 111
.b8 114
.b8 110
.b8 104
.b8 52
.b8 119
.b8 52
.b8 102
.b8 122
.b8 50
.b8 112
.b8 105
.b8 104
.b8 110
.b8 51
.b8 102
.b8 112
.b8 118
.b8 105
.b8 113
.b8 110
.b8 54
.b8 98
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
