; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %6, 1, !dbg !13
  %12 = srem i32 %11, 2, !dbg !14
  %13 = ashr exact i32 %10, 1, !dbg !15
  %14 = srem i32 %13, 2, !dbg !16
  %15 = shl nsw i32 %12, 1, !dbg !17
  %16 = shl i32 %10, 2, !dbg !18
  %17 = add i32 %15, %16, !dbg !19
  %18 = sext i32 %16 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = sext i32 %17 to i64, !dbg !20
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !20
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !21
  %23 = bitcast i32 %22 to float, !dbg !21
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = or disjoint i32 %16, 1, !dbg !22
  %27 = or disjoint i32 %17, 1, !dbg !22
  %28 = sext i32 %26 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = sext i32 %27 to i64, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !23
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !24
  %35 = bitcast i32 %34 to float, !dbg !24
  %36 = or disjoint i32 %16, 4, !dbg !25
  %37 = add i32 %17, 4, !dbg !25
  %38 = sext i32 %36 to i64, !dbg !26
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !26
  %40 = sext i32 %37 to i64, !dbg !26
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 true) #1, !dbg !27
  %43 = bitcast i32 %42 to float, !dbg !27
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !27
  %45 = bitcast i32 %44 to float, !dbg !27
  %46 = or disjoint i32 %16, 5, !dbg !28
  %47 = add i32 %17, 5, !dbg !28
  %48 = sext i32 %46 to i64, !dbg !29
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !29
  %50 = sext i32 %47 to i64, !dbg !29
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !29
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #1, !dbg !30
  %53 = bitcast i32 %52 to float, !dbg !30
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !30
  %55 = bitcast i32 %54 to float, !dbg !30
  %56 = fcmp ogt float %33, %23, !dbg !31
  %57 = fcmp ogt float %35, %25, !dbg !31
  %58 = fcmp uno float %33, 0.000000e+00, !dbg !35
  %59 = fcmp uno float %35, 0.000000e+00, !dbg !35
  %60 = or i1 %56, %58, !dbg !36
  %61 = or i1 %57, %59, !dbg !36
  %62 = select i1 %60, float %33, float %23, !dbg !37
  %63 = select i1 %61, float %35, float %25, !dbg !37
  %64 = fcmp olt float %62, %43, !dbg !38
  %65 = fcmp olt float %63, %45, !dbg !38
  %66 = fcmp uno float %43, 0.000000e+00, !dbg !40
  %67 = fcmp uno float %45, 0.000000e+00, !dbg !40
  %68 = or i1 %66, %64, !dbg !41
  %69 = or i1 %67, %65, !dbg !41
  %70 = select i1 %68, float %43, float %62, !dbg !42
  %71 = select i1 %69, float %45, float %63, !dbg !42
  %72 = fcmp olt float %70, %53, !dbg !43
  %73 = fcmp olt float %71, %55, !dbg !43
  %74 = fcmp uno float %53, 0.000000e+00, !dbg !45
  %75 = fcmp uno float %55, 0.000000e+00, !dbg !45
  %76 = or i1 %74, %72, !dbg !46
  %77 = or i1 %75, %73, !dbg !46
  %78 = zext i1 %56 to i32, !dbg !47
  %79 = select i1 %64, i32 2, i32 %78, !dbg !48
  %80 = select i1 %72, i32 3, i32 %79, !dbg !49
  %81 = zext i1 %57 to i32, !dbg !47
  %82 = select i1 %65, i32 2, i32 %81, !dbg !48
  %83 = select i1 %73, i32 3, i32 %82, !dbg !49
  %84 = lshr i32 %80, 1, !dbg !50
  %85 = lshr i32 %83, 1, !dbg !50
  %86 = and i32 %80, 1, !dbg !51
  %87 = shl nsw i32 %14, 1, !dbg !52
  %88 = or disjoint i32 %84, %87, !dbg !53
  %89 = or disjoint i32 %85, %87, !dbg !53
  %90 = or i32 %83, %15, !dbg !54
  %91 = sext i32 %88 to i64, !dbg !55
  %92 = sext i32 %89 to i64, !dbg !55
  %93 = shl nsw i64 %91, 2, !dbg !55
  %94 = shl nsw i64 %92, 2, !dbg !55
  %95 = zext nneg i32 %86 to i64, !dbg !56
  %96 = sext i32 %90 to i64, !dbg !56
  %97 = or disjoint i64 %93, %95, !dbg !56
  %98 = add nsw i64 %94, %96, !dbg !56
  %99 = sext i32 %10 to i64, !dbg !57
  %100 = getelementptr float, ptr addrspace(1) %1, i64 %99, !dbg !57
  %101 = bitcast float %70 to i32, !dbg !58
  %102 = select i1 %76, i32 %52, i32 %101, !dbg !59
  %103 = bitcast float %71 to i32, !dbg !58
  %104 = select i1 %77, i32 %54, i32 %103, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %102, i32 %104, ptr addrspace(1) %100, i1 true) #1, !dbg !58
  %105 = getelementptr i64, ptr addrspace(1) %2, i64 %99, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %97, i64 %98, ptr addrspace(1) %105, i1 true) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c44msyji3p6fscogtijn3aboer4q7wm7tavbmyjxxwqumub7cisy.py", directory: "inductor_cache/44")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_9", linkageName: "triton_poi_fused_max_pool2d_with_indices_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 26, scope: !7)
!17 = !DILocation(line: 28, column: 32, scope: !7)
!18 = !DILocation(line: 28, column: 39, scope: !7)
!19 = !DILocation(line: 28, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 44, scope: !7)
!22 = !DILocation(line: 29, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 48, scope: !7)
!25 = !DILocation(line: 30, column: 41, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 48, scope: !7)
!28 = !DILocation(line: 31, column: 41, scope: !7)
!29 = !DILocation(line: 31, column: 30, scope: !7)
!30 = !DILocation(line: 31, column: 48, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 32, column: 40, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !39)
!39 = !DILocation(line: 33, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !39)
!43 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !44)
!44 = !DILocation(line: 34, column: 40, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !44)
!47 = !DILocation(line: 46, column: 30, scope: !7)
!48 = !DILocation(line: 41, column: 35, scope: !7)
!49 = !DILocation(line: 44, column: 35, scope: !7)
!50 = !DILocation(line: 46, column: 87, scope: !7)
!51 = !DILocation(line: 48, column: 20, scope: !7)
!52 = !DILocation(line: 49, column: 14, scope: !7)
!53 = !DILocation(line: 50, column: 20, scope: !7)
!54 = !DILocation(line: 52, column: 20, scope: !7)
!55 = !DILocation(line: 54, column: 20, scope: !7)
!56 = !DILocation(line: 55, column: 20, scope: !7)
!57 = !DILocation(line: 56, column: 25, scope: !7)
!58 = !DILocation(line: 56, column: 36, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !44)
!60 = !DILocation(line: 57, column: 25, scope: !7)
!61 = !DILocation(line: 57, column: 37, scope: !7)
!62 = !DILocation(line: 57, column: 4, scope: !7)
