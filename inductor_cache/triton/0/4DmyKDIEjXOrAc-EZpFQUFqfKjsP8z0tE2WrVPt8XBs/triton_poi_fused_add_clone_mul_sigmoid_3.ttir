#loc = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clone_mul_sigmoid_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<16x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<16x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c16_i32 : i32 loc(#loc9)
    %9 = tt.expand_dims %2 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc10)
    %10 = tt.splat %8 : i32 -> tensor<16x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<16x1xi32> loc(#loc11)
    %12 = arith.cmpi slt, %11, %cst_4 : tensor<16x1xi32> loc(#loc12)
    %13 = arith.remsi %5, %cst_3 : tensor<1x16xi32> loc(#loc13)
    %14 = arith.divsi %5, %cst_3 : tensor<1x16xi32> loc(#loc14)
    %15 = arith.muli %5, %cst_2 : tensor<1x16xi32> loc(#loc15)
    %16 = tt.broadcast %11 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc16)
    %17 = tt.broadcast %15 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc16)
    %18 = arith.addi %16, %17 : tensor<16x16xi32> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc17)
    %21 = tt.broadcast %12 : tensor<16x1xi1> -> tensor<16x16xi1> loc(#loc18)
    %22 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc18)
    %23 = arith.andi %21, %22 : tensor<16x16xi1> loc(#loc18)
    %24 = tt.load %20, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.addptr %25, %5 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc20)
    %27 = tt.load %26, %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc21)
    %28 = arith.muli %11, %cst_1 : tensor<16x1xi32> loc(#loc22)
    %29 = tt.broadcast %13 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc23)
    %30 = tt.broadcast %28 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc23)
    %31 = arith.addi %29, %30 : tensor<16x16xi32> loc(#loc23)
    %32 = arith.muli %14, %cst_5 : tensor<1x16xi32> loc(#loc24)
    %33 = tt.broadcast %32 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc25)
    %34 = arith.addi %31, %33 : tensor<16x16xi32> loc(#loc25)
    %35 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc26)
    %36 = tt.addptr %35, %34 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc26)
    %37 = tt.load %36, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc27)
    %38 = arith.subf %cst, %27 : tensor<1x16xf32> loc(#loc38)
    %39 = math.exp %38 : tensor<1x16xf32> loc(#loc39)
    %40 = arith.addf %39, %cst_0 : tensor<1x16xf32> loc(#loc40)
    %41 = arith.divf %cst_0, %40 : tensor<1x16xf32> loc(#loc41)
    %42 = tt.broadcast %41 : tensor<1x16xf32> -> tensor<16x16xf32> loc(#loc33)
    %43 = arith.mulf %24, %42 : tensor<16x16xf32> loc(#loc33)
    %44 = arith.addf %43, %37 : tensor<16x16xf32> loc(#loc34)
    %45 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc35)
    %46 = tt.addptr %45, %18 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc35)
    tt.store %46, %44, %23 : tensor<16x16x!tt.ptr<f32>> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":22:28)
#loc3 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":22:33)
#loc4 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":23:36)
#loc5 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":23:44)
#loc6 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":23:23)
#loc7 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":24:21)
#loc8 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":25:28)
#loc9 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":25:33)
#loc10 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":26:44)
#loc11 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":26:23)
#loc12 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":27:21)
#loc13 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":30:19)
#loc14 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":31:19)
#loc15 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":32:38)
#loc16 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":32:35)
#loc17 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":32:30)
#loc18 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":32:51)
#loc19 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":32:43)
#loc20 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":33:30)
#loc21 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":33:35)
#loc22 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:37)
#loc23 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:35)
#loc24 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:45)
#loc25 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:42)
#loc26 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:30)
#loc27 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":34:50)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc29 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":35:22)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc33 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":36:18)
#loc34 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":37:18)
#loc35 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":38:25)
#loc36 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":38:44)
#loc37 = loc("inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py":38:4)
#loc38 = loc(callsite(#loc28 at #loc29))
#loc39 = loc(callsite(#loc30 at #loc29))
#loc40 = loc(callsite(#loc31 at #loc29))
#loc41 = loc(callsite(#loc32 at #loc29))
