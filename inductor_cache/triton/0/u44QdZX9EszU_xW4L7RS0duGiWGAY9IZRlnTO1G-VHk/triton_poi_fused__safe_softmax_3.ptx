//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__safe_softmax_3 // -- Begin function triton_poi_fused__safe_softmax_3
                                        // @triton_poi_fused__safe_softmax_3
.visible .entry triton_poi_fused__safe_softmax_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused__safe_softmax_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__safe_softmax_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__safe_softmax_3_param_2,
	.param .u32 triton_poi_fused__safe_softmax_3_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<23>;
	.reg .f32 	%f<12>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused__safe_softmax_3_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__safe_softmax_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:21:33
	shl.b32 	%r15, %r1, 7;
	ld.param.u64 	%rd13, [triton_poi_fused__safe_softmax_3_param_2];
	.loc	1 22 36                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:22:36
	mov.u32 	%r16, %tid.x;
	and.b32  	%r17, %r16, 127;
	.loc	1 22 23                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:22:23
	or.b32  	%r18, %r15, %r17;
	.loc	1 23 21                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:23:21
	setp.lt.s32 	%p1, %r18, 256;
	.loc	1 24 19                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:24:19
	bfe.s32 	%r19, %r1, 24, 1;
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r18, %r20;
	.loc	1 26 32                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:26:32
	and.b32  	%r22, %r21, -4;
	.loc	1 26 30                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:26:30
	mul.wide.s32 	%rd14, %r22, 4;
	add.s64 	%rd1, %rd11, %rd14;
	.loc	1 26 37                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:26:37
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:27:30
	add.s64 	%rd2, %rd1, 4;
	.loc	1 27 41                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:27:41
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:28:31
	add.s64 	%rd3, %rd1, 8;
	.loc	1 28 42                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:28:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 29 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:29:31
	add.s64 	%rd4, %rd1, 12;
	.loc	1 29 42                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:29:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:30:31
	mul.wide.s32 	%rd15, %r18, 4;
	add.s64 	%rd5, %rd12, %rd15;
	.loc	1 30 36                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:30:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:31:31
	add.s64 	%rd6, %rd12, %rd14;
	.loc	1 31 38                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:31:38
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	.loc	1 32 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:32:31
	add.s64 	%rd7, %rd6, 4;
	.loc	1 32 42                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:32:42
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r8;
	.loc	1 33 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:33:31
	add.s64 	%rd8, %rd6, 8;
	.loc	1 33 42                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:33:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	.loc	1 34 31                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:34:31
	add.s64 	%rd9, %rd6, 12;
	.loc	1 34 42                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:34:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r10;
	.loc	1 26 37                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:26:37
	mov.b32 	%f5, %r3;
	mov.b32 	%f6, %r2;
	mov.b32 	%f7, %r5;
	mov.b32 	%f8, %r4;
	.loc	1 55 21                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:55:21
	setp.neu.f32 	%p11, %f8, 0fFF800000;
	selp.u16 	%rs1, 1, 0, %p11;
	shl.b16 	%rs2, %rs1, 2;
	setp.neu.f32 	%p12, %f7, 0fFF800000;
	selp.u16 	%rs3, -1, 0, %p12;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.neu.f32 	%p13, %f6, 0fFF800000;
	selp.u16 	%rs6, 1, 0, %p13;
	setp.neu.f32 	%p14, %f5, 0fFF800000;
	selp.u16 	%rs7, -1, 0, %p14;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	setp.eq.s16 	%p15, %rs12, 0;
	.loc	1 56 20                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:56:20
	add.f32 	%f9, %f1, %f2;
	.loc	1 57 20                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:57:20
	add.f32 	%f10, %f9, %f3;
	.loc	1 58 20                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:58:20
	add.f32 	%f11, %f10, %f4;
	.loc	1 59 20                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:59:20
	mov.b32 	%r13, %f11;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	.loc	1 62 25                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:62:25
	add.s64 	%rd10, %rd13, %rd15;
	.loc	1 61 35                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:61:35
	selp.b32 	%r14, 0, %r11, %p15;
	.loc	1 62 37                         // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:62:37
	// begin inline asm
	@%p1 st.global.b32 [ %rd10 + 0 ], { %r14 };
	// end inline asm
	.loc	1 62 4                          // c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py:62:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4p/c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 112
.b8 104
.b8 52
.b8 101
.b8 102
.b8 100
.b8 116
.b8 50
.b8 120
.b8 50
.b8 114
.b8 99
.b8 100
.b8 53
.b8 102
.b8 115
.b8 104
.b8 121
.b8 103
.b8 112
.b8 115
.b8 103
.b8 104
.b8 117
.b8 55
.b8 111
.b8 116
.b8 51
.b8 98
.b8 115
.b8 122
.b8 109
.b8 120
.b8 117
.b8 113
.b8 103
.b8 119
.b8 116
.b8 52
.b8 51
.b8 111
.b8 119
.b8 100
.b8 120
.b8 118
.b8 53
.b8 97
.b8 119
.b8 53
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
