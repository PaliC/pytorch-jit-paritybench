#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_16(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg12: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_4 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_4 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_3 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = arith.remsi %4, %cst_3 : tensor<128xi32, #blocked> loc(#loc12)
    %12 = arith.remsi %9, %cst_4 : tensor<128xi32, #blocked> loc(#loc13)
    %13 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc14)
    %14 = tt.addptr %13, %9 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc16)
    %17 = tt.addptr %16, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc16)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = arith.muli %10, %cst_3 : tensor<128xi32, #blocked> loc(#loc18)
    %20 = arith.addi %11, %19 : tensor<128xi32, #blocked> loc(#loc19)
    %21 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = tt.addptr %21, %20 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc20)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc21)
    %24 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc22)
    %25 = tt.addptr %24, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc22)
    %26 = tt.load %25, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc23)
    %27 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc24)
    %28 = tt.addptr %27, %12 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc24)
    %29 = tt.load %28, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc25)
    %30 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc26)
    %31 = tt.addptr %30, %12 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc26)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %33 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    %34 = tt.addptr %33, %12 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc28)
    %35 = tt.load %34, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc29)
    %36 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc30)
    %37 = tt.addptr %36, %12 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc30)
    %38 = tt.load %37, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc31)
    %39 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc32)
    %40 = tt.addptr %39, %7 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc32)
    %41 = tt.load %40, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc33)
    %42 = arith.subf %15, %15 : tensor<128xf32, #blocked> loc(#loc34)
    %43 = arith.mulf %42, %18 : tensor<128xf32, #blocked> loc(#loc35)
    %44 = arith.addf %15, %43 : tensor<128xf32, #blocked> loc(#loc36)
    %45 = arith.subf %26, %29 : tensor<128xf32, #blocked> loc(#loc37)
    %46 = arith.addf %32, %cst_1 : tensor<128xf32, #blocked> loc(#loc38)
    %47 = tt.extern_elementwise %46 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc39)
    %48 = arith.divf %cst_0, %47 : tensor<128xf32, #blocked> loc(#loc40)
    %49 = arith.mulf %45, %48 : tensor<128xf32, #blocked> loc(#loc41)
    %50 = arith.mulf %49, %35 : tensor<128xf32, #blocked> loc(#loc42)
    %51 = arith.addf %50, %38 : tensor<128xf32, #blocked> loc(#loc43)
    %52 = arith.cmpf ogt, %cst, %51 : tensor<128xf32, #blocked> loc(#loc55)
    %53 = arith.select %52, %cst, %51 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc56)
    %54 = arith.mulf %23, %53 : tensor<128xf32, #blocked> loc(#loc47)
    %55 = arith.subf %44, %44 : tensor<128xf32, #blocked> loc(#loc48)
    %56 = arith.mulf %55, %41 : tensor<128xf32, #blocked> loc(#loc49)
    %57 = arith.addf %44, %56 : tensor<128xf32, #blocked> loc(#loc50)
    %58 = arith.addf %54, %57 : tensor<128xf32, #blocked> loc(#loc51)
    %59 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc52)
    %60 = tt.addptr %59, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc52)
    tt.store %60, %58, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc53)
    tt.return loc(#loc54)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":21:28)
#loc3 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":21:33)
#loc4 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":22:36)
#loc5 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":22:23)
#loc6 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":23:21)
#loc7 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":24:21)
#loc8 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":24:26)
#loc9 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":25:19)
#loc10 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":26:19)
#loc11 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":28:19)
#loc12 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":29:19)
#loc13 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":30:27)
#loc14 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":33:30)
#loc15 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":33:35)
#loc16 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":35:31)
#loc17 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":35:36)
#loc18 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":36:39)
#loc19 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":36:36)
#loc20 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":36:31)
#loc21 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":36:44)
#loc22 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":37:31)
#loc23 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":37:36)
#loc24 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":38:31)
#loc25 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":38:36)
#loc26 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":39:31)
#loc27 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":39:36)
#loc28 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":40:31)
#loc29 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":40:36)
#loc30 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":41:32)
#loc31 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":41:37)
#loc32 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":43:32)
#loc33 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":43:37)
#loc34 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":54:19)
#loc35 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":55:20)
#loc36 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":56:19)
#loc37 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":57:20)
#loc38 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":59:20)
#loc39 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":60:27)
#loc40 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":62:20)
#loc41 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":65:20)
#loc42 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":66:20)
#loc43 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":67:20)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc45 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":69:42)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc47 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":70:20)
#loc48 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":74:20)
#loc49 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":75:20)
#loc50 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":76:20)
#loc51 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":77:20)
#loc52 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":78:28)
#loc53 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":78:40)
#loc54 = loc("inductor_cache/to/ctottlvgjiis5xurcuvvgqmszbw3ypz5c5s2huwk3gzzxsotdpak.py":78:4)
#loc55 = loc(callsite(#loc44 at #loc45))
#loc56 = loc(callsite(#loc46 at #loc45))
