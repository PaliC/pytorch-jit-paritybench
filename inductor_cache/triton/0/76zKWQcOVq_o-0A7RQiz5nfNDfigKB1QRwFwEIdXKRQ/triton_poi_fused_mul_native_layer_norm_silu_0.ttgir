#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_mul_native_layer_norm_silu_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_3 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc10)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = arith.addi %6, %cst_4 : tensor<64xi32, #blocked> loc(#loc12)
    %14 = tt.addptr %7, %13 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.addptr %10, %13 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.addi %6, %cst_5 : tensor<64xi32, #blocked> loc(#loc17)
    %19 = tt.addptr %7, %18 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = tt.addptr %10, %18 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc20)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc21)
    %23 = arith.addi %6, %cst_6 : tensor<64xi32, #blocked> loc(#loc22)
    %24 = tt.addptr %7, %23 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc23)
    %25 = tt.load %24, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc24)
    %26 = tt.addptr %10, %23 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc25)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc26)
    %28 = arith.subf %cst_1, %9 : tensor<64xf32, #blocked> loc(#loc64)
    %29 = math.exp %28 : tensor<64xf32, #blocked> loc(#loc65)
    %30 = arith.addf %29, %cst_0 : tensor<64xf32, #blocked> loc(#loc66)
    %31 = arith.divf %cst_0, %30 : tensor<64xf32, #blocked> loc(#loc67)
    %32 = arith.mulf %9, %31 : tensor<64xf32, #blocked> loc(#loc32)
    %33 = arith.mulf %32, %12 : tensor<64xf32, #blocked> loc(#loc33)
    %34 = arith.subf %cst_1, %15 : tensor<64xf32, #blocked> loc(#loc68)
    %35 = math.exp %34 : tensor<64xf32, #blocked> loc(#loc69)
    %36 = arith.addf %35, %cst_0 : tensor<64xf32, #blocked> loc(#loc70)
    %37 = arith.divf %cst_0, %36 : tensor<64xf32, #blocked> loc(#loc71)
    %38 = arith.mulf %15, %37 : tensor<64xf32, #blocked> loc(#loc35)
    %39 = arith.mulf %38, %17 : tensor<64xf32, #blocked> loc(#loc36)
    %40 = arith.addf %33, %39 : tensor<64xf32, #blocked> loc(#loc37)
    %41 = arith.subf %cst_1, %20 : tensor<64xf32, #blocked> loc(#loc72)
    %42 = math.exp %41 : tensor<64xf32, #blocked> loc(#loc73)
    %43 = arith.addf %42, %cst_0 : tensor<64xf32, #blocked> loc(#loc74)
    %44 = arith.divf %cst_0, %43 : tensor<64xf32, #blocked> loc(#loc75)
    %45 = arith.mulf %20, %44 : tensor<64xf32, #blocked> loc(#loc39)
    %46 = arith.mulf %45, %22 : tensor<64xf32, #blocked> loc(#loc40)
    %47 = arith.addf %40, %46 : tensor<64xf32, #blocked> loc(#loc41)
    %48 = arith.subf %cst_1, %25 : tensor<64xf32, #blocked> loc(#loc76)
    %49 = math.exp %48 : tensor<64xf32, #blocked> loc(#loc77)
    %50 = arith.addf %49, %cst_0 : tensor<64xf32, #blocked> loc(#loc78)
    %51 = arith.divf %cst_0, %50 : tensor<64xf32, #blocked> loc(#loc79)
    %52 = arith.mulf %25, %51 : tensor<64xf32, #blocked> loc(#loc43)
    %53 = arith.mulf %52, %27 : tensor<64xf32, #blocked> loc(#loc44)
    %54 = arith.addf %47, %53 : tensor<64xf32, #blocked> loc(#loc45)
    %55 = arith.divf %54, %cst : tensor<64xf32, #blocked> loc(#loc46)
    %56 = arith.subf %33, %55 : tensor<64xf32, #blocked> loc(#loc47)
    %57 = arith.mulf %56, %56 : tensor<64xf32, #blocked> loc(#loc48)
    %58 = arith.subf %39, %55 : tensor<64xf32, #blocked> loc(#loc49)
    %59 = arith.mulf %58, %58 : tensor<64xf32, #blocked> loc(#loc50)
    %60 = arith.addf %57, %59 : tensor<64xf32, #blocked> loc(#loc51)
    %61 = arith.subf %46, %55 : tensor<64xf32, #blocked> loc(#loc52)
    %62 = arith.mulf %61, %61 : tensor<64xf32, #blocked> loc(#loc53)
    %63 = arith.addf %60, %62 : tensor<64xf32, #blocked> loc(#loc54)
    %64 = arith.subf %53, %55 : tensor<64xf32, #blocked> loc(#loc55)
    %65 = arith.mulf %64, %64 : tensor<64xf32, #blocked> loc(#loc56)
    %66 = arith.addf %63, %65 : tensor<64xf32, #blocked> loc(#loc57)
    %67 = arith.divf %66, %cst : tensor<64xf32, #blocked> loc(#loc58)
    %68 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc59)
    %69 = tt.addptr %68, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc59)
    tt.store %69, %55, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc60)
    %70 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc61)
    %71 = tt.addptr %70, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc61)
    tt.store %71, %67, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc62)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":21:28)
#loc3 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":21:33)
#loc4 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":22:36)
#loc5 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":22:23)
#loc6 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":23:21)
#loc7 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":25:32)
#loc8 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":25:30)
#loc9 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":25:37)
#loc10 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":26:30)
#loc11 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":26:37)
#loc12 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":27:34)
#loc13 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":27:30)
#loc14 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":27:41)
#loc15 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":28:30)
#loc16 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":28:41)
#loc17 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":29:35)
#loc18 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":29:31)
#loc19 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":29:42)
#loc20 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":30:31)
#loc21 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":30:42)
#loc22 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":31:35)
#loc23 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":31:31)
#loc24 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":31:42)
#loc25 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":32:31)
#loc26 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":32:42)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc28 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":33:22)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc32 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":34:18)
#loc33 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":35:18)
#loc34 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":36:22)
#loc35 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":37:18)
#loc36 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":38:18)
#loc37 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":39:19)
#loc38 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":40:23)
#loc39 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":41:20)
#loc40 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":42:20)
#loc41 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":43:20)
#loc42 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":44:23)
#loc43 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":45:20)
#loc44 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":46:20)
#loc45 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":47:20)
#loc46 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":49:20)
#loc47 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":50:19)
#loc48 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":51:20)
#loc49 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":52:19)
#loc50 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":53:20)
#loc51 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":54:20)
#loc52 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":55:20)
#loc53 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":56:20)
#loc54 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":57:20)
#loc55 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":58:20)
#loc56 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":59:20)
#loc57 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":60:20)
#loc58 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":61:20)
#loc59 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":62:25)
#loc60 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":62:37)
#loc61 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":63:25)
#loc62 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":63:37)
#loc63 = loc("inductor_cache/zy/czyr6wy7khrpybwmodnoaq3atj4uyeytprfavxxjllfxxuwvt5am.py":63:4)
#loc64 = loc(callsite(#loc27 at #loc28))
#loc65 = loc(callsite(#loc29 at #loc28))
#loc66 = loc(callsite(#loc30 at #loc28))
#loc67 = loc(callsite(#loc31 at #loc28))
#loc68 = loc(callsite(#loc27 at #loc34))
#loc69 = loc(callsite(#loc29 at #loc34))
#loc70 = loc(callsite(#loc30 at #loc34))
#loc71 = loc(callsite(#loc31 at #loc34))
#loc72 = loc(callsite(#loc27 at #loc38))
#loc73 = loc(callsite(#loc29 at #loc38))
#loc74 = loc(callsite(#loc30 at #loc38))
#loc75 = loc(callsite(#loc31 at #loc38))
#loc76 = loc(callsite(#loc27 at #loc42))
#loc77 = loc(callsite(#loc29 at #loc42))
#loc78 = loc(callsite(#loc30 at #loc42))
#loc79 = loc(callsite(#loc31 at #loc42))
