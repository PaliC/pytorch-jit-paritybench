; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax_convolution_28(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 4096, !dbg !14
  %13 = srem i32 %12, 12, !dbg !15
  %14 = mul i32 %12, 4096, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sdiv i32 %11, 49152, !dbg !17
  %16 = sext i32 %11 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #2, !dbg !19
  %19 = sext i32 %13 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #2, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #2, !dbg !21
  %23 = shl nsw i32 %15, 12, !dbg !22
  %24 = add nsw i32 %23, %.decomposed, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !24
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 true) #2, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %3, i64 %25, !dbg !26
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 true) #2, !dbg !27
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !27
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !27
  %32 = bitcast i32 %30 to float, !dbg !27
  %33 = bitcast i32 %31 to float, !dbg !27
  %34 = fcmp olt float %32, 0x3810000000000000, !dbg !28
  %35 = fmul float %32, 0x4160000000000000, !dbg !28
  %.02.i = select i1 %34, float %35, float %32, !dbg !28
  %i.i.0.i = select i1 %34, float -2.300000e+01, float 0.000000e+00, !dbg !28
  %36 = bitcast float %.02.i to i32, !dbg !28
  %37 = add i32 %36, -1059760811, !dbg !28
  %38 = and i32 %37, -8388608, !dbg !28
  %39 = sub i32 %36, %38, !dbg !28
  %40 = bitcast i32 %39 to float, !dbg !28
  %41 = sitofp i32 %38 to float, !dbg !28
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not.i = icmp eq i32 %42, 0, !dbg !28
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !28
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !28
  %.08.i = select i1 %.not.i, float %44, float %43, !dbg !28
  %45 = fadd float %40, -1.000000e+00, !dbg !28
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not1.i = icmp eq i32 %46, 0, !dbg !28
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %45, float 0x3FC2073EC0000000) #2, !dbg !28
  %48 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %45, float 0x3FC2073EC0000000) #2, !dbg !28
  %.010.i = select i1 %.not1.i, float %48, float %47, !dbg !28
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not2.i = icmp eq i32 %49, 0, !dbg !28
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %45, float 0xBFBF19B980000000) #2, !dbg !28
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %45, float 0xBFBF19B980000000) #2, !dbg !28
  %.011.i = select i1 %.not2.i, float %51, float %50, !dbg !28
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not3.i = icmp eq i32 %52, 0, !dbg !28
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %45, float 0x3FC1E52AA0000000) #2, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %45, float 0x3FC1E52AA0000000) #2, !dbg !28
  %.012.i = select i1 %.not3.i, float %54, float %53, !dbg !28
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not4.i = icmp eq i32 %55, 0, !dbg !28
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %45, float 0xBFC55B1720000000) #2, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %45, float 0xBFC55B1720000000) #2, !dbg !28
  %.09.i = select i1 %.not4.i, float %57, float %56, !dbg !28
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not5.i = icmp eq i32 %58, 0, !dbg !28
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %45, float 0x3FC99DA160000000) #2, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %45, float 0x3FC99DA160000000) #2, !dbg !28
  %.05.i = select i1 %.not5.i, float %60, float %59, !dbg !28
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not6.i = icmp eq i32 %61, 0, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %45, float 0xBFCFFFE440000000) #2, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %45, float 0xBFCFFFE440000000) #2, !dbg !28
  %.01.i = select i1 %.not6.i, float %63, float %62, !dbg !28
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not7.i = icmp eq i32 %64, 0, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %45, float 0x3FD5554F00000000) #2, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %45, float 0x3FD5554F00000000) #2, !dbg !28
  %.0.i = select i1 %.not7.i, float %66, float %65, !dbg !28
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not8.i = icmp eq i32 %67, 0, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %45, float -5.000000e-01) #2, !dbg !28
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %45, float -5.000000e-01) #2, !dbg !28
  %.07.i = select i1 %.not8.i, float %69, float %68, !dbg !28
  %70 = fmul float %45, %.07.i, !dbg !28
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not9.i = icmp eq i32 %71, 0, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float %45, float %45) #2, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %70, float %45, float %45) #2, !dbg !28
  %.06.i = select i1 %.not9.i, float %73, float %72, !dbg !28
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not10.i = icmp eq i32 %74, 0, !dbg !28
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !28
  %.04.i = select i1 %.not10.i, float %76, float %75, !dbg !28
  %77 = icmp ugt i32 %36, 2139095039, !dbg !28
  br i1 %77, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !28

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not11.i = icmp eq i32 %78, 0, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %.03.i = select i1 %.not11.i, float %80, float %79, !dbg !28
  br label %__nv_logf.exit, !dbg !28

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !28
  %81 = fcmp olt float %33, 0x3810000000000000, !dbg !28
  %82 = fmul float %33, 0x4160000000000000, !dbg !28
  %.02.i1 = select i1 %81, float %82, float %33, !dbg !28
  %i.i.0.i2 = select i1 %81, float -2.300000e+01, float 0.000000e+00, !dbg !28
  %83 = bitcast float %.02.i1 to i32, !dbg !28
  %84 = add i32 %83, -1059760811, !dbg !28
  %85 = and i32 %84, -8388608, !dbg !28
  %86 = sub i32 %83, %85, !dbg !28
  %87 = bitcast i32 %86 to float, !dbg !28
  %88 = sitofp i32 %85 to float, !dbg !28
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not.i3 = icmp eq i32 %89, 0, !dbg !28
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !28
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !28
  %.08.i4 = select i1 %.not.i3, float %91, float %90, !dbg !28
  %92 = fadd float %87, -1.000000e+00, !dbg !28
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not1.i5 = icmp eq i32 %93, 0, !dbg !28
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %92, float 0x3FC2073EC0000000) #2, !dbg !28
  %95 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %92, float 0x3FC2073EC0000000) #2, !dbg !28
  %.010.i6 = select i1 %.not1.i5, float %95, float %94, !dbg !28
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not2.i7 = icmp eq i32 %96, 0, !dbg !28
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %92, float 0xBFBF19B980000000) #2, !dbg !28
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %92, float 0xBFBF19B980000000) #2, !dbg !28
  %.011.i8 = select i1 %.not2.i7, float %98, float %97, !dbg !28
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not3.i9 = icmp eq i32 %99, 0, !dbg !28
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %92, float 0x3FC1E52AA0000000) #2, !dbg !28
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %92, float 0x3FC1E52AA0000000) #2, !dbg !28
  %.012.i10 = select i1 %.not3.i9, float %101, float %100, !dbg !28
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not4.i11 = icmp eq i32 %102, 0, !dbg !28
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %92, float 0xBFC55B1720000000) #2, !dbg !28
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %92, float 0xBFC55B1720000000) #2, !dbg !28
  %.09.i12 = select i1 %.not4.i11, float %104, float %103, !dbg !28
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not5.i13 = icmp eq i32 %105, 0, !dbg !28
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %92, float 0x3FC99DA160000000) #2, !dbg !28
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %92, float 0x3FC99DA160000000) #2, !dbg !28
  %.05.i14 = select i1 %.not5.i13, float %107, float %106, !dbg !28
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not6.i15 = icmp eq i32 %108, 0, !dbg !28
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %92, float 0xBFCFFFE440000000) #2, !dbg !28
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %92, float 0xBFCFFFE440000000) #2, !dbg !28
  %.01.i16 = select i1 %.not6.i15, float %110, float %109, !dbg !28
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not7.i17 = icmp eq i32 %111, 0, !dbg !28
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %92, float 0x3FD5554F00000000) #2, !dbg !28
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %92, float 0x3FD5554F00000000) #2, !dbg !28
  %.0.i18 = select i1 %.not7.i17, float %113, float %112, !dbg !28
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not8.i19 = icmp eq i32 %114, 0, !dbg !28
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %92, float -5.000000e-01) #2, !dbg !28
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %92, float -5.000000e-01) #2, !dbg !28
  %.07.i20 = select i1 %.not8.i19, float %116, float %115, !dbg !28
  %117 = fmul float %92, %.07.i20, !dbg !28
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not9.i21 = icmp eq i32 %118, 0, !dbg !28
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %117, float %92, float %92) #2, !dbg !28
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %117, float %92, float %92) #2, !dbg !28
  %.06.i22 = select i1 %.not9.i21, float %120, float %119, !dbg !28
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not10.i23 = icmp eq i32 %121, 0, !dbg !28
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !28
  %.04.i24 = select i1 %.not10.i23, float %123, float %122, !dbg !28
  %124 = icmp ugt i32 %83, 2139095039, !dbg !28
  br i1 %124, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !28

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not11.i28 = icmp eq i32 %125, 0, !dbg !28
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %.03.i29 = select i1 %.not11.i28, float %127, float %126, !dbg !28
  br label %__nv_logf.exit30, !dbg !28

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !28
  %128 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !28
  %r.i.1.i = select i1 %128, float 0xFFF0000000000000, float %r.i.0.i, !dbg !28
  %129 = extractvalue { i32, i32 } %18, 1, !dbg !19
  %130 = bitcast i32 %129 to float, !dbg !19
  %131 = bitcast i32 %22 to float, !dbg !21
  %132 = fadd float %130, %131, !dbg !29
  %133 = extractvalue { i32, i32 } %27, 1, !dbg !25
  %134 = bitcast i32 %133 to float, !dbg !25
  %135 = fsub float %132, %134, !dbg !30
  %136 = extractvalue { i32, i32 } %18, 0, !dbg !19
  %137 = bitcast i32 %136 to float, !dbg !19
  %138 = bitcast i32 %21 to float, !dbg !21
  %139 = fadd float %137, %138, !dbg !29
  %140 = extractvalue { i32, i32 } %27, 0, !dbg !25
  %141 = bitcast i32 %140 to float, !dbg !25
  %142 = fsub float %139, %141, !dbg !30
  %143 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !28
  %r.i.1.i26 = select i1 %143, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !28
  %144 = fsub float %142, %r.i.1.i, !dbg !31
  %145 = fsub float %135, %r.i.1.i26, !dbg !31
  %146 = bitcast float %144 to i32, !dbg !32
  %147 = bitcast float %145 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %146, i32 %147, ptr addrspace(1) %17, i1 true) #2, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cb4hxyyg7mmdmox6yjtvxbsep2idvfyyrg5qlb5x72zbksdui4zp.py", directory: "inductor_cache/b4")
!4 = !{ptr @triton_poi_fused__log_softmax_convolution_28, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_convolution_28, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_convolution_28", linkageName: "triton_poi_fused__log_softmax_convolution_28", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 40, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 45, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 45, scope: !7)
!28 = !DILocation(line: 34, column: 23, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 33, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 39, scope: !7)
!33 = !DILocation(line: 36, column: 4, scope: !7)
