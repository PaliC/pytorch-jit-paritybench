#loc = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0)
#loc1 = loc(unknown)
#loc38 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":62:59)
#loc42 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":64:59)
#loc52 = loc(callsite(#loc1 at #loc38))
#loc56 = loc(callsite(#loc1 at #loc42))
module {
  tt.func public @triton_per_fused__softmax_add_div_mse_loss_mul_repeat_rsub_sum_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<-1.000000e+04> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = arith.divsi %0, %cst_3 : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_3 : tensor<256xi32> loc(#loc4)
    %3 = arith.divsi %0, %cst_2 : tensor<256xi32> loc(#loc5)
    %4 = arith.remsi %0, %cst_3 : tensor<256xi32> loc(#loc6)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %6 = tt.addptr %5, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %7 = tt.load %6 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = arith.muli %3, %cst_3 : tensor<256xi32> loc(#loc9)
    %9 = arith.addi %2, %8 : tensor<256xi32> loc(#loc10)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %4, %8 : tensor<256xi32> loc(#loc13)
    %14 = tt.addptr %10, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %16, %1 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc16)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc18)
    %20 = tt.addptr %19, %1 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc20)
    %24 = tt.load %23 : tensor<256x!tt.ptr<f32>> loc(#loc21)
    %25 = tt.load %14 : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %26 = arith.mulf %12, %15 : tensor<256xf32> loc(#loc23)
    %27 = arith.mulf %7, %26 : tensor<256xf32> loc(#loc24)
    %28 = arith.subf %cst_1, %26 : tensor<256xf32> loc(#loc25)
    %29 = arith.mulf %28, %cst_0 : tensor<256xf32> loc(#loc26)
    %30 = arith.addf %27, %29 : tensor<256xf32> loc(#loc27)
    %31 = arith.subf %30, %18 : tensor<256xf32> loc(#loc28)
    %32 = math.exp %31 : tensor<256xf32> loc(#loc29)
    %33 = arith.divf %32, %21 : tensor<256xf32> loc(#loc30)
    %34 = arith.mulf %33, %26 : tensor<256xf32> loc(#loc31)
    %35 = arith.mulf %12, %25 : tensor<256xf32> loc(#loc32)
    %36 = arith.mulf %24, %35 : tensor<256xf32> loc(#loc33)
    %37 = arith.mulf %7, %35 : tensor<256xf32> loc(#loc34)
    %38 = arith.subf %36, %37 : tensor<256xf32> loc(#loc35)
    %39 = arith.mulf %38, %38 : tensor<256xf32> loc(#loc36)
    %40 = "tt.reduce"(%39) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc38)), %arg10: f32 loc(callsite(#loc1 at #loc38))):
      %52 = arith.addf %arg9, %arg10 : f32 loc(#loc58)
      tt.reduce.return %52 : f32 loc(#loc51)
    }) : (tensor<256xf32>) -> f32 loc(#loc51)
    %41 = arith.addf %40, %cst : f32 loc(#loc54)
    %42 = tt.splat %41 : f32 -> tensor<1xf32> loc(#loc54)
    %43 = "tt.reduce"(%26) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc42)), %arg10: f32 loc(callsite(#loc1 at #loc42))):
      %52 = arith.addf %arg9, %arg10 : f32 loc(#loc59)
      tt.reduce.return %52 : f32 loc(#loc55)
    }) : (tensor<256xf32>) -> f32 loc(#loc55)
    %44 = arith.addf %43, %cst : f32 loc(#loc57)
    %45 = tt.splat %44 : f32 -> tensor<1xf32> loc(#loc57)
    %46 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc44)
    %47 = tt.addptr %46, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc44)
    tt.store %47, %34 : tensor<256x!tt.ptr<f32>> loc(#loc45)
    %48 = tt.addptr %arg6, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc46)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc46)
    tt.store %49, %42 : tensor<1x!tt.ptr<f32>> loc(#loc47)
    %50 = tt.addptr %arg7, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc48)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc48)
    tt.store %51, %45 : tensor<1x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":27:26)
#loc3 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":31:21)
#loc4 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":31:26)
#loc5 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":32:19)
#loc6 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":33:19)
#loc7 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":35:30)
#loc8 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":35:35)
#loc9 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":36:37)
#loc10 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":36:35)
#loc11 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":36:30)
#loc12 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":36:42)
#loc13 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":37:35)
#loc14 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":37:30)
#loc15 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":37:42)
#loc16 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":38:31)
#loc17 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":38:36)
#loc18 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":39:31)
#loc19 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":39:36)
#loc20 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":40:31)
#loc21 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":40:36)
#loc22 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":42:59)
#loc23 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":45:18)
#loc24 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":46:18)
#loc25 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":47:18)
#loc26 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":49:18)
#loc27 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":50:19)
#loc28 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":51:20)
#loc29 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":52:24)
#loc30 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":53:20)
#loc31 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":54:20)
#loc32 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":56:20)
#loc33 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":57:20)
#loc34 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":58:19)
#loc35 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":59:20)
#loc36 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":60:20)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc41 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":62:45)
#loc43 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":64:45)
#loc44 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":65:25)
#loc45 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":65:64)
#loc46 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":66:25)
#loc47 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":66:60)
#loc48 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":67:25)
#loc49 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":67:60)
#loc50 = loc("inductor_cache/dk/cdkp2r6jj3ic7ubaxndpgidvxa5jznaszeov3l53e7wsm3cujfh5.py":67:4)
#loc51 = loc(callsite(#loc37 at #loc38))
#loc53 = loc(callsite(#loc39 at #loc37))
#loc54 = loc(callsite(#loc40 at #loc41))
#loc55 = loc(callsite(#loc37 at #loc42))
#loc57 = loc(callsite(#loc40 at #loc43))
#loc58 = loc(callsite(#loc53 at #loc38))
#loc59 = loc(callsite(#loc53 at #loc42))
