#loc = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<484> : tensor<16xi32> loc(#loc1)
    %cst_0 = arith.constant dense<40> : tensor<16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<36> : tensor<16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<24> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<20> : tensor<16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_8 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_7 : tensor<16xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_7 : tensor<16xi32> loc(#loc8)
    %8 = arith.muli %7, %cst_6 : tensor<16xi32> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<16xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<16x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %6, %cst_7 : tensor<16xi32> loc(#loc13)
    %14 = arith.addi %13, %8 : tensor<16xi32> loc(#loc14)
    %15 = tt.addptr %10, %14 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc15)
    %16 = tt.load %15, %5 : tensor<16x!tt.ptr<f32>> loc(#loc16)
    %17 = arith.addi %6, %cst_5 : tensor<16xi32> loc(#loc17)
    %18 = arith.addi %17, %8 : tensor<16xi32> loc(#loc18)
    %19 = tt.addptr %10, %18 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc19)
    %20 = tt.load %19, %5 : tensor<16x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %6, %cst_8 : tensor<16xi32> loc(#loc21)
    %22 = arith.addi %21, %8 : tensor<16xi32> loc(#loc22)
    %23 = tt.addptr %10, %22 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc23)
    %24 = tt.load %23, %5 : tensor<16x!tt.ptr<f32>> loc(#loc24)
    %25 = arith.addi %6, %cst_4 : tensor<16xi32> loc(#loc25)
    %26 = arith.addi %25, %8 : tensor<16xi32> loc(#loc26)
    %27 = tt.addptr %10, %26 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc27)
    %28 = tt.load %27, %5 : tensor<16x!tt.ptr<f32>> loc(#loc28)
    %29 = arith.addi %6, %cst_3 : tensor<16xi32> loc(#loc29)
    %30 = arith.addi %29, %8 : tensor<16xi32> loc(#loc30)
    %31 = tt.addptr %10, %30 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc31)
    %32 = tt.load %31, %5 : tensor<16x!tt.ptr<f32>> loc(#loc32)
    %33 = arith.addi %6, %cst_2 : tensor<16xi32> loc(#loc33)
    %34 = arith.addi %33, %8 : tensor<16xi32> loc(#loc34)
    %35 = tt.addptr %10, %34 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc35)
    %36 = tt.load %35, %5 : tensor<16x!tt.ptr<f32>> loc(#loc36)
    %37 = arith.addi %6, %cst_1 : tensor<16xi32> loc(#loc37)
    %38 = arith.addi %37, %8 : tensor<16xi32> loc(#loc38)
    %39 = tt.addptr %10, %38 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc39)
    %40 = tt.load %39, %5 : tensor<16x!tt.ptr<f32>> loc(#loc40)
    %41 = arith.addi %6, %cst_0 : tensor<16xi32> loc(#loc41)
    %42 = arith.addi %41, %8 : tensor<16xi32> loc(#loc42)
    %43 = tt.addptr %10, %42 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc43)
    %44 = tt.load %43, %5 : tensor<16x!tt.ptr<f32>> loc(#loc44)
    %45 = arith.cmpf ogt, %16, %12 : tensor<16xf32> loc(#loc62)
    %46 = arith.cmpf une, %16, %16 : tensor<16xf32> loc(#loc63)
    %47 = arith.ori %45, %46 : tensor<16xi1> loc(#loc64)
    %48 = arith.select %47, %16, %12 : tensor<16xi1>, tensor<16xf32> loc(#loc65)
    %49 = arith.cmpf ogt, %20, %48 : tensor<16xf32> loc(#loc66)
    %50 = arith.cmpf une, %20, %20 : tensor<16xf32> loc(#loc67)
    %51 = arith.ori %49, %50 : tensor<16xi1> loc(#loc68)
    %52 = arith.select %51, %20, %48 : tensor<16xi1>, tensor<16xf32> loc(#loc69)
    %53 = arith.cmpf ogt, %24, %52 : tensor<16xf32> loc(#loc70)
    %54 = arith.cmpf une, %24, %24 : tensor<16xf32> loc(#loc71)
    %55 = arith.ori %53, %54 : tensor<16xi1> loc(#loc72)
    %56 = arith.select %55, %24, %52 : tensor<16xi1>, tensor<16xf32> loc(#loc73)
    %57 = arith.cmpf ogt, %28, %56 : tensor<16xf32> loc(#loc74)
    %58 = arith.cmpf une, %28, %28 : tensor<16xf32> loc(#loc75)
    %59 = arith.ori %57, %58 : tensor<16xi1> loc(#loc76)
    %60 = arith.select %59, %28, %56 : tensor<16xi1>, tensor<16xf32> loc(#loc77)
    %61 = arith.cmpf ogt, %32, %60 : tensor<16xf32> loc(#loc78)
    %62 = arith.cmpf une, %32, %32 : tensor<16xf32> loc(#loc79)
    %63 = arith.ori %61, %62 : tensor<16xi1> loc(#loc80)
    %64 = arith.select %63, %32, %60 : tensor<16xi1>, tensor<16xf32> loc(#loc81)
    %65 = arith.cmpf ogt, %36, %64 : tensor<16xf32> loc(#loc82)
    %66 = arith.cmpf une, %36, %36 : tensor<16xf32> loc(#loc83)
    %67 = arith.ori %65, %66 : tensor<16xi1> loc(#loc84)
    %68 = arith.select %67, %36, %64 : tensor<16xi1>, tensor<16xf32> loc(#loc85)
    %69 = arith.cmpf ogt, %40, %68 : tensor<16xf32> loc(#loc86)
    %70 = arith.cmpf une, %40, %40 : tensor<16xf32> loc(#loc87)
    %71 = arith.ori %69, %70 : tensor<16xi1> loc(#loc88)
    %72 = arith.select %71, %40, %68 : tensor<16xi1>, tensor<16xf32> loc(#loc89)
    %73 = arith.cmpf ogt, %44, %72 : tensor<16xf32> loc(#loc90)
    %74 = arith.cmpf une, %44, %44 : tensor<16xf32> loc(#loc91)
    %75 = arith.ori %73, %74 : tensor<16xi1> loc(#loc92)
    %76 = arith.select %75, %44, %72 : tensor<16xi1>, tensor<16xf32> loc(#loc93)
    %77 = arith.muli %7, %cst : tensor<16xi32> loc(#loc57)
    %78 = arith.addi %6, %77 : tensor<16xi32> loc(#loc58)
    %79 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc59)
    %80 = tt.addptr %79, %78 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc59)
    tt.store %80, %76, %5 : tensor<16x!tt.ptr<f32>> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":21:28)
#loc3 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":21:33)
#loc4 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":22:36)
#loc5 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":22:23)
#loc6 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":23:21)
#loc7 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":24:19)
#loc8 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":25:19)
#loc9 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":26:38)
#loc10 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":26:35)
#loc11 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":26:30)
#loc12 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":26:43)
#loc13 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":27:34)
#loc14 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":27:39)
#loc15 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":27:30)
#loc16 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":27:47)
#loc17 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":28:34)
#loc18 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":28:39)
#loc19 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":28:30)
#loc20 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":28:47)
#loc21 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":29:35)
#loc22 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":29:40)
#loc23 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":29:30)
#loc24 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":29:48)
#loc25 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":30:35)
#loc26 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":30:40)
#loc27 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":30:30)
#loc28 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":30:48)
#loc29 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":31:35)
#loc30 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":31:40)
#loc31 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":31:30)
#loc32 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":31:48)
#loc33 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":32:36)
#loc34 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":32:41)
#loc35 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":32:31)
#loc36 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":32:49)
#loc37 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":33:36)
#loc38 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":33:41)
#loc39 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":33:31)
#loc40 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":33:49)
#loc41 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":34:36)
#loc42 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":34:41)
#loc43 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":34:31)
#loc44 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":34:49)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc46 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":35:40)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc50 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":36:40)
#loc51 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":37:40)
#loc52 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":38:40)
#loc53 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":39:41)
#loc54 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":40:42)
#loc55 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":41:42)
#loc56 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":42:42)
#loc57 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":43:34)
#loc58 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":43:30)
#loc59 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":43:25)
#loc60 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":43:46)
#loc61 = loc("inductor_cache/nb/cnbg4skc5pjtqvjmm5ajwrib7muoqesum3fcp2mcqopsm6dtprlw.py":43:4)
#loc62 = loc(callsite(#loc45 at #loc46))
#loc63 = loc(callsite(#loc47 at #loc46))
#loc64 = loc(callsite(#loc48 at #loc46))
#loc65 = loc(callsite(#loc49 at #loc46))
#loc66 = loc(callsite(#loc45 at #loc50))
#loc67 = loc(callsite(#loc47 at #loc50))
#loc68 = loc(callsite(#loc48 at #loc50))
#loc69 = loc(callsite(#loc49 at #loc50))
#loc70 = loc(callsite(#loc45 at #loc51))
#loc71 = loc(callsite(#loc47 at #loc51))
#loc72 = loc(callsite(#loc48 at #loc51))
#loc73 = loc(callsite(#loc49 at #loc51))
#loc74 = loc(callsite(#loc45 at #loc52))
#loc75 = loc(callsite(#loc47 at #loc52))
#loc76 = loc(callsite(#loc48 at #loc52))
#loc77 = loc(callsite(#loc49 at #loc52))
#loc78 = loc(callsite(#loc45 at #loc53))
#loc79 = loc(callsite(#loc47 at #loc53))
#loc80 = loc(callsite(#loc48 at #loc53))
#loc81 = loc(callsite(#loc49 at #loc53))
#loc82 = loc(callsite(#loc45 at #loc54))
#loc83 = loc(callsite(#loc47 at #loc54))
#loc84 = loc(callsite(#loc48 at #loc54))
#loc85 = loc(callsite(#loc49 at #loc54))
#loc86 = loc(callsite(#loc45 at #loc55))
#loc87 = loc(callsite(#loc47 at #loc55))
#loc88 = loc(callsite(#loc48 at #loc55))
#loc89 = loc(callsite(#loc49 at #loc55))
#loc90 = loc(callsite(#loc45 at #loc56))
#loc91 = loc(callsite(#loc47 at #loc56))
#loc92 = loc(callsite(#loc48 at #loc56))
#loc93 = loc(callsite(#loc49 at #loc56))
