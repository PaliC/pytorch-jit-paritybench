; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #1, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = add i32 %9, 256, !dbg !17
  %16 = sext i32 %15 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %10) #1, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = add i32 %9, 512, !dbg !20
  %21 = sext i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !21
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %10) #1, !dbg !22
  %24 = bitcast i32 %23 to float, !dbg !22
  %25 = add i32 %9, 768, !dbg !23
  %26 = sext i32 %25 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %10) #1, !dbg !25
  %29 = bitcast i32 %28 to float, !dbg !25
  %30 = fcmp ogt float %14, %19, !dbg !26
  %31 = fcmp uno float %14, 0.000000e+00, !dbg !30
  %32 = or i1 %31, %30, !dbg !31
  %33 = select i1 %32, float %14, float %19, !dbg !32
  %34 = fcmp ogt float %33, %24, !dbg !33
  %35 = fcmp uno float %33, 0.000000e+00, !dbg !35
  %36 = or i1 %34, %35, !dbg !36
  %37 = select i1 %36, float %33, float %24, !dbg !37
  %38 = fcmp ogt float %37, %29, !dbg !38
  %39 = fcmp uno float %37, 0.000000e+00, !dbg !40
  %40 = or i1 %38, %39, !dbg !41
  %41 = fcmp oeq float %14, %19, !dbg !42
  %42 = or i1 %31, %41, !dbg !43
  %43 = or i1 %30, %42, !dbg !43
  %44 = select i1 %43, float %14, float %19, !dbg !44
  %not. = xor i1 %43, true, !dbg !45
  %45 = zext i1 %not. to i64, !dbg !45
  %46 = fcmp ogt float %44, %24, !dbg !46
  %47 = fcmp oeq float %44, %24, !dbg !47
  %48 = fcmp uno float %44, 0.000000e+00, !dbg !48
  %49 = fcmp uno float %24, 0.000000e+00, !dbg !49
  %50 = xor i1 %49, true, !dbg !50
  %51 = and i1 %48, %50, !dbg !50
  %52 = or i1 %46, %51, !dbg !51
  %53 = and i1 %49, %48, !dbg !52
  %54 = or i1 %47, %53, !dbg !53
  %55 = or i1 %52, %54, !dbg !54
  %56 = select i1 %55, float %44, float %24, !dbg !55
  %57 = select i1 %55, i64 %45, i64 2, !dbg !56
  %58 = fcmp ogt float %56, %29, !dbg !57
  %59 = fcmp oeq float %56, %29, !dbg !58
  %60 = fcmp uno float %56, 0.000000e+00, !dbg !59
  %61 = fcmp uno float %29, 0.000000e+00, !dbg !60
  %62 = xor i1 %61, true, !dbg !61
  %63 = and i1 %60, %62, !dbg !61
  %64 = or i1 %58, %63, !dbg !62
  %65 = and i1 %61, %60, !dbg !63
  %66 = or i1 %59, %65, !dbg !64
  %67 = or i1 %64, %66, !dbg !65
  %68 = select i1 %67, i64 %57, i64 3, !dbg !66
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !67
  %70 = bitcast float %37 to i32, !dbg !68
  %71 = select i1 %40, i32 %70, i32 %28, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %69, i1 %10) #1, !dbg !68
  %72 = getelementptr i64, ptr addrspace(1) %2, i64 %11, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %68, ptr addrspace(1) %72, i1 %10) #1, !dbg !71
  ret void, !dbg !72
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c74chbxxmwtakxqzvz4dcahoshseayrzfojrichxcen5aow4gq5d.py", directory: "inductor_cache/74")
!4 = !{ptr @triton_poi_fused_max_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_13", linkageName: "triton_poi_fused_max_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 36, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 41, scope: !7)
!20 = !DILocation(line: 27, column: 36, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 41, scope: !7)
!23 = !DILocation(line: 28, column: 36, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 41, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 32, column: 40, scope: !7)
!30 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!33 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !34)
!34 = !DILocation(line: 34, column: 40, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !34)
!38 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !39)
!39 = !DILocation(line: 36, column: 41, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !39)
!42 = !DILocation(line: 38, column: 20, scope: !7)
!43 = !DILocation(line: 49, column: 20, scope: !7)
!44 = !DILocation(line: 50, column: 34, scope: !7)
!45 = !DILocation(line: 51, column: 35, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 21, scope: !7)
!48 = !DILocation(line: 54, column: 21, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 20, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 59, column: 20, scope: !7)
!54 = !DILocation(line: 63, column: 20, scope: !7)
!55 = !DILocation(line: 64, column: 35, scope: !7)
!56 = !DILocation(line: 65, column: 35, scope: !7)
!57 = !DILocation(line: 66, column: 20, scope: !7)
!58 = !DILocation(line: 67, column: 21, scope: !7)
!59 = !DILocation(line: 68, column: 21, scope: !7)
!60 = !DILocation(line: 69, column: 21, scope: !7)
!61 = !DILocation(line: 70, column: 20, scope: !7)
!62 = !DILocation(line: 71, column: 20, scope: !7)
!63 = !DILocation(line: 72, column: 20, scope: !7)
!64 = !DILocation(line: 73, column: 20, scope: !7)
!65 = !DILocation(line: 77, column: 20, scope: !7)
!66 = !DILocation(line: 79, column: 35, scope: !7)
!67 = !DILocation(line: 80, column: 25, scope: !7)
!68 = !DILocation(line: 80, column: 37, scope: !7)
!69 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !39)
!70 = !DILocation(line: 81, column: 25, scope: !7)
!71 = !DILocation(line: 81, column: 37, scope: !7)
!72 = !DILocation(line: 81, column: 4, scope: !7)
