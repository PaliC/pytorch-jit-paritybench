//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mean_4 // -- Begin function triton_poi_fused_add_convolution_mean_4
                                        // @triton_poi_fused_add_convolution_mean_4
.visible .entry triton_poi_fused_add_convolution_mean_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mean_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mean_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mean_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mean_4_param_3,
	.param .u32 triton_poi_fused_add_convolution_mean_4_param_4
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<24>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_mean_4_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_mean_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:21:33
	shl.b32 	%r18, %r1, 4;
	ld.param.u64 	%rd3, [triton_poi_fused_add_convolution_mean_4_param_2];
	ld.param.u64 	%rd16, [triton_poi_fused_add_convolution_mean_4_param_3];
	.loc	1 22 36                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:22:36
	mov.u32 	%r19, %tid.x;
	and.b32  	%r20, %r19, 16;
	and.b32  	%r21, %r19, 15;
	.loc	1 22 23                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 23 21                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:23:21
	setp.lt.s32 	%p1, %r22, 16;
	.loc	1 25 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 30;
	add.s32 	%r26, %r22, %r25;
	.loc	1 24 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:24:19
	and.b32  	%r27, %r26, -4;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 27 38                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:27:38
	shl.b32 	%r29, %r26, 2;
	and.b32  	%r30, %r29, -16;
	.loc	1 27 35                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:27:35
	add.s32 	%r31, %r30, %r28;
	.loc	1 27 30                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:27:30
	mul.wide.s32 	%rd17, %r31, 4;
	add.s64 	%rd1, %rd14, %rd17;
	.loc	1 27 43                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:27:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:28:30
	add.s64 	%rd2, %rd15, %rd17;
	.loc	1 28 43                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:28:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.pred 	%p3, -1;
	.loc	1 29 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:29:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 31 39                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:31:39
	add.s32 	%r32, %r31, 4;
	.loc	1 31 30                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:31:30
	mul.wide.s32 	%rd18, %r32, 4;
	add.s64 	%rd4, %rd14, %rd18;
	.loc	1 31 47                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:31:47
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:32:30
	add.s64 	%rd5, %rd15, %rd18;
	.loc	1 32 47                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:32:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:33:30
	add.s64 	%rd6, %rd3, 4;
	.loc	1 33 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:33:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 40                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:35:40
	add.s32 	%r33, %r31, 8;
	.loc	1 35 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:35:31
	mul.wide.s32 	%rd19, %r33, 4;
	add.s64 	%rd7, %rd14, %rd19;
	.loc	1 35 48                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:35:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:36:31
	add.s64 	%rd8, %rd15, %rd19;
	.loc	1 36 48                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:36:48
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:37:31
	add.s64 	%rd9, %rd3, 8;
	.loc	1 37 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:37:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p3 ld.global.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 39 41                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:39:41
	add.s32 	%r34, %r31, 12;
	.loc	1 39 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:39:31
	mul.wide.s32 	%rd20, %r34, 4;
	add.s64 	%rd10, %rd14, %rd20;
	.loc	1 39 49                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:39:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:40:31
	add.s64 	%rd11, %rd15, %rd20;
	.loc	1 40 49                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:40:49
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 41 31                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:41:31
	add.s64 	%rd12, %rd3, 12;
	.loc	1 41 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:41:20
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 27 43                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:27:43
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r2;
	.loc	1 28 43                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:28:43
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r6;
	.loc	1 29 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:29:19
	mov.b32 	%f5, %r4;
	mov.b32 	%f6, %r7;
	.loc	1 43 18                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:43:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 44 18                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:44:18
	add.f32 	%f9, %f8, %f2;
	add.f32 	%f10, %f7, %f1;
	.loc	1 47 19                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:47:19
	add.f32 	%f11, %f9, %f10;
	.loc	1 35 48                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:35:48
	mov.b32 	%f12, %r8;
	mov.b32 	%f13, %r11;
	.loc	1 36 48                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:36:48
	mov.b32 	%f14, %r12;
	mov.b32 	%f15, %r9;
	.loc	1 37 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:37:20
	mov.b32 	%f16, %r13;
	mov.b32 	%f17, %r10;
	.loc	1 48 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:48:20
	add.f32 	%f18, %f15, %f17;
	add.f32 	%f19, %f14, %f16;
	.loc	1 49 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:49:20
	add.f32 	%f20, %f19, %f13;
	add.f32 	%f21, %f18, %f12;
	.loc	1 50 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:50:20
	add.f32 	%f22, %f11, %f21;
	.loc	1 53 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:53:20
	add.f32 	%f23, %f22, %f20;
	.loc	1 55 20                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:55:20
	mov.b32 	%r15, %f23;
	mov.b32 	%r16, 1082130432;
	// begin inline asm
	div.full.f32 %r17, %r15, %r16;
	// end inline asm
	.loc	1 56 25                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:56:25
	mul.wide.s32 	%rd21, %r22, 4;
	add.s64 	%rd13, %rd16, %rd21;
	.loc	1 56 37                         // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:56:37
	setp.eq.s32 	%p14, %r20, 0;
	and.pred  	%p13, %p14, %p1;
	// begin inline asm
	@%p13 st.global.b32 [ %rd13 + 0 ], { %r17 };
	// end inline asm
	.loc	1 56 4                          // cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py:56:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 51
.b8 106
.b8 98
.b8 115
.b8 99
.b8 55
.b8 109
.b8 119
.b8 97
.b8 120
.b8 55
.b8 112
.b8 122
.b8 54
.b8 107
.b8 121
.b8 106
.b8 50
.b8 111
.b8 112
.b8 107
.b8 51
.b8 52
.b8 109
.b8 106
.b8 111
.b8 120
.b8 54
.b8 119
.b8 108
.b8 109
.b8 118
.b8 100
.b8 98
.b8 106
.b8 114
.b8 101
.b8 98
.b8 118
.b8 50
.b8 113
.b8 119
.b8 110
.b8 97
.b8 98
.b8 103
.b8 100
.b8 107
.b8 122
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
