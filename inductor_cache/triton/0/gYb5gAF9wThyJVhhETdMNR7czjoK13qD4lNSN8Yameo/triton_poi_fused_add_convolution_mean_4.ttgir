#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_convolution_mean_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<16xf32, #blocked> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<12> : tensor<16xi32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<16xi32, #blocked> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<16xi32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<16xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<16xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_2 : tensor<16xi32, #blocked> loc(#loc8)
    %8 = arith.muli %7, %cst_3 : tensor<16xi32, #blocked> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<16xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %9 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc15)
    %17 = tt.load %16 : !tt.ptr<f32> loc(#loc16)
    %18 = tt.splat %17 : f32 -> tensor<16xf32, #blocked> loc(#loc17)
    %19 = arith.addi %6, %cst_2 : tensor<16xi32, #blocked> loc(#loc18)
    %20 = arith.addi %19, %8 : tensor<16xi32, #blocked> loc(#loc19)
    %21 = tt.addptr %10, %20 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc20)
    %22 = tt.load %21, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc21)
    %23 = tt.addptr %13, %20 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc22)
    %24 = tt.load %23, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc23)
    %25 = tt.addptr %arg2, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc24)
    %26 = tt.load %25 : !tt.ptr<f32> loc(#loc25)
    %27 = tt.splat %26 : f32 -> tensor<16xf32, #blocked> loc(#loc26)
    %28 = arith.addi %6, %cst_1 : tensor<16xi32, #blocked> loc(#loc27)
    %29 = arith.addi %28, %8 : tensor<16xi32, #blocked> loc(#loc28)
    %30 = tt.addptr %10, %29 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc29)
    %31 = tt.load %30, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc30)
    %32 = tt.addptr %13, %29 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc31)
    %33 = tt.load %32, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc32)
    %34 = tt.addptr %arg2, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc33)
    %35 = tt.load %34 : !tt.ptr<f32> loc(#loc34)
    %36 = tt.splat %35 : f32 -> tensor<16xf32, #blocked> loc(#loc35)
    %37 = arith.addi %6, %cst_0 : tensor<16xi32, #blocked> loc(#loc36)
    %38 = arith.addi %37, %8 : tensor<16xi32, #blocked> loc(#loc37)
    %39 = tt.addptr %10, %38 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc38)
    %40 = tt.load %39, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc39)
    %41 = tt.addptr %13, %38 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc40)
    %42 = tt.load %41, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc41)
    %43 = tt.addptr %arg2, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc42)
    %44 = tt.load %43 : !tt.ptr<f32> loc(#loc43)
    %45 = tt.splat %44 : f32 -> tensor<16xf32, #blocked> loc(#loc44)
    %46 = arith.addf %15, %18 : tensor<16xf32, #blocked> loc(#loc45)
    %47 = arith.addf %12, %46 : tensor<16xf32, #blocked> loc(#loc46)
    %48 = arith.addf %24, %27 : tensor<16xf32, #blocked> loc(#loc47)
    %49 = arith.addf %22, %48 : tensor<16xf32, #blocked> loc(#loc48)
    %50 = arith.addf %47, %49 : tensor<16xf32, #blocked> loc(#loc49)
    %51 = arith.addf %33, %36 : tensor<16xf32, #blocked> loc(#loc50)
    %52 = arith.addf %31, %51 : tensor<16xf32, #blocked> loc(#loc51)
    %53 = arith.addf %50, %52 : tensor<16xf32, #blocked> loc(#loc52)
    %54 = arith.addf %42, %45 : tensor<16xf32, #blocked> loc(#loc53)
    %55 = arith.addf %40, %54 : tensor<16xf32, #blocked> loc(#loc54)
    %56 = arith.addf %53, %55 : tensor<16xf32, #blocked> loc(#loc55)
    %57 = arith.divf %56, %cst : tensor<16xf32, #blocked> loc(#loc56)
    %58 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc57)
    %59 = tt.addptr %58, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc57)
    tt.store %59, %57, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":21:28)
#loc3 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":21:33)
#loc4 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":22:36)
#loc5 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":22:23)
#loc6 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":23:21)
#loc7 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":24:19)
#loc8 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":25:19)
#loc9 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":27:38)
#loc10 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":27:35)
#loc11 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":27:30)
#loc12 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":27:43)
#loc13 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":28:30)
#loc14 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":28:43)
#loc15 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":29:30)
#loc16 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":29:19)
#loc17 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":30:33)
#loc18 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":31:34)
#loc19 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":31:39)
#loc20 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":31:30)
#loc21 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":31:47)
#loc22 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":32:30)
#loc23 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":32:47)
#loc24 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":33:30)
#loc25 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":33:19)
#loc26 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":34:33)
#loc27 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":35:35)
#loc28 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":35:40)
#loc29 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":35:31)
#loc30 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":35:48)
#loc31 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":36:31)
#loc32 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":36:48)
#loc33 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":37:31)
#loc34 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":37:20)
#loc35 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":38:35)
#loc36 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":39:36)
#loc37 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":39:41)
#loc38 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":39:31)
#loc39 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":39:49)
#loc40 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":40:31)
#loc41 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":40:49)
#loc42 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":41:31)
#loc43 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":41:20)
#loc44 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":42:35)
#loc45 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":43:18)
#loc46 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":44:18)
#loc47 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":45:19)
#loc48 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":46:19)
#loc49 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":47:19)
#loc50 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":48:20)
#loc51 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":49:20)
#loc52 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":50:20)
#loc53 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":51:20)
#loc54 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":52:20)
#loc55 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":53:20)
#loc56 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":55:20)
#loc57 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":56:25)
#loc58 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":56:37)
#loc59 = loc("inductor_cache/r3/cr3jbsc7mwax7pz6kyj2opk34mjox6wlmvdbjrebv2qwnabgdkzm.py":56:4)
