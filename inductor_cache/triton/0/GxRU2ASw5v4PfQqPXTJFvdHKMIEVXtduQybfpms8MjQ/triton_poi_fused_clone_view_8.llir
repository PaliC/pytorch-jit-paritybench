; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_view_8(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 252, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !14
  %12 = shl i32 %11, 2, !dbg !15
  %13 = lshr i32 %7, 6, !dbg !16
  %.lobit = and i32 %13, 1, !dbg !16
  %14 = or disjoint i32 %12, %.lobit, !dbg !17
  %15 = or disjoint i32 %14, 2, !dbg !17
  %16 = icmp slt i32 %14, 4, !dbg !18
  %17 = icmp slt i32 %15, 4, !dbg !18
  %.frozen = freeze i32 %10, !dbg !19
  %18 = sdiv i32 %.frozen, 256, !dbg !19
  %19 = mul i32 %18, 256, !dbg !20
  %.decomposed = sub i32 %.frozen, %19, !dbg !20
  %20 = shl i32 %14, 8, !dbg !21
  %21 = shl i32 %15, 8, !dbg !21
  %22 = shl i32 %18, 10, !dbg !22
  %23 = add i32 %22, %.decomposed, !dbg !23
  %24 = add i32 %23, %20, !dbg !24
  %25 = add i32 %23, %21, !dbg !24
  %26 = sext i32 %24 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = sext i32 %25 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %27, i1 %16) #1, !dbg !26
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !26
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !26
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !26
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !26
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %29, i1 %17) #1, !dbg !26
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !26
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !26
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !26
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !26
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %31, i32 %32, i32 %33, i32 %34, ptr addrspace(1) %40, i1 %16) #1, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %36, i32 %37, i32 %38, i32 %39, ptr addrspace(1) %41, i1 %17) #1, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2rs2zwerjopjuw66mrru4xywzeovyxhspf7f3ukgh7hhgfoyfgb.py", directory: "inductor_cache/2r")
!4 = !{ptr @triton_poi_fused_clone_view_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_view_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_view_8", linkageName: "triton_poi_fused_clone_view_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 39, scope: !7)
!22 = !DILocation(line: 32, column: 49, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 44, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 54, scope: !7)
!27 = !DILocation(line: 33, column: 25, scope: !7)
!28 = !DILocation(line: 33, column: 55, scope: !7)
!29 = !DILocation(line: 33, column: 4, scope: !7)
