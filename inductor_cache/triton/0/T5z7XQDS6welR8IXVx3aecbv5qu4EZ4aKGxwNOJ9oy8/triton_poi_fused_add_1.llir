; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = srem i32 %13, 4, !dbg !15
  %16 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !16
  %17 = shufflevector <2 x i32> %16, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %18 = sdiv <2 x i32> %17, <i32 4, i32 16>, !dbg !16
  %19 = srem <2 x i32> %18, splat (i32 4), !dbg !17
  %20 = sext i32 %13 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %14) #1, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = shl nsw i32 %15, 2, !dbg !20
  %25 = extractelement <2 x i32> %19, i64 1, !dbg !21
  %26 = add nsw i32 %25, %24, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %14) #1, !dbg !24
  %30 = extractelement <2 x i32> %18, i64 1, !dbg !25
  %31 = sext i32 %30 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %14) #1, !dbg !26
  %34 = sext i32 %25 to i64, !dbg !21
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !21
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %14) #1, !dbg !27
  %37 = extractelement <2 x i32> %19, i64 0, !dbg !28
  %38 = shl nsw i32 %37, 2, !dbg !28
  %39 = add nsw i32 %38, %25, !dbg !29
  %40 = sext i32 %39 to i64, !dbg !30
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !30
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %14) #1, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %4, i64 %31, !dbg !32
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %14) #1, !dbg !33
  %45 = getelementptr float, ptr addrspace(1) %5, i64 %34, !dbg !34
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %14) #1, !dbg !35
  %47 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !24
  %48 = insertelement <2 x i32> %47, i32 %42, i64 1, !dbg !24
  %49 = bitcast <2 x i32> %48 to <2 x float>, !dbg !24
  %50 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !26
  %51 = insertelement <2 x i32> %50, i32 %44, i64 1, !dbg !26
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !26
  %53 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !27
  %54 = insertelement <2 x i32> %53, i32 %46, i64 1, !dbg !27
  %55 = bitcast <2 x i32> %54 to <2 x float>, !dbg !27
  %56 = fadd <2 x float> %52, %55, !dbg !36
  %57 = fmul <2 x float> %56, %49, !dbg !37
  %58 = extractelement <2 x float> %57, i64 0, !dbg !38
  %59 = fadd float %58, %23, !dbg !38
  %60 = extractelement <2 x float> %57, i64 1, !dbg !39
  %61 = fadd float %59, %60, !dbg !39
  %62 = getelementptr float, ptr addrspace(1) %6, i64 %20, !dbg !40
  %63 = bitcast float %61 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %62, i1 %14) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2ulnkv4ltlt7gpxsvy56gzrbyxyjpijlkky6k7uum53dcs2scbv.py", directory: "inductor_cache/2u")
!4 = !{ptr @triton_poi_fused_add_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_1", linkageName: "triton_poi_fused_add_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 28, column: 26, scope: !7)
!18 = !DILocation(line: 29, column: 30, scope: !7)
!19 = !DILocation(line: 29, column: 35, scope: !7)
!20 = !DILocation(line: 30, column: 37, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 30, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 42, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 35, scope: !7)
!27 = !DILocation(line: 32, column: 35, scope: !7)
!28 = !DILocation(line: 33, column: 37, scope: !7)
!29 = !DILocation(line: 33, column: 35, scope: !7)
!30 = !DILocation(line: 33, column: 30, scope: !7)
!31 = !DILocation(line: 33, column: 42, scope: !7)
!32 = !DILocation(line: 34, column: 30, scope: !7)
!33 = !DILocation(line: 34, column: 35, scope: !7)
!34 = !DILocation(line: 35, column: 30, scope: !7)
!35 = !DILocation(line: 35, column: 35, scope: !7)
!36 = !DILocation(line: 36, column: 18, scope: !7)
!37 = !DILocation(line: 37, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 18, scope: !7)
!39 = !DILocation(line: 41, column: 19, scope: !7)
!40 = !DILocation(line: 42, column: 25, scope: !7)
!41 = !DILocation(line: 42, column: 37, scope: !7)
!42 = !DILocation(line: 42, column: 4, scope: !7)
