//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_native_group_norm_0 // -- Begin function triton_per_fused_convolution_native_group_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_native_group_norm_0
.visible .entry triton_per_fused_convolution_native_group_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_4,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_5,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<38>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused_convolution_native_group_norm_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_convolution_native_group_norm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:25:21
	setp.lt.s32 	%p1, %r1, 64;
	ld.param.u64 	%rd9, [triton_per_fused_convolution_native_group_norm_0_param_2];
	ld.param.u64 	%rd10, [triton_per_fused_convolution_native_group_norm_0_param_3];
	.loc	1 26 34                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:26:34
	mov.u32 	%r28, %tid.x;
	and.b32  	%r29, %r28, 31;
	ld.param.u64 	%rd11, [triton_per_fused_convolution_native_group_norm_0_param_4];
	and.b32  	%r30, %r28, 63;
	.loc	1 31 19                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:31:19
	bfe.u32 	%r31, %r28, 4, 2;
	.loc	1 32 19                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:32:19
	shr.s32 	%r32, %r1, 31;
	shr.u32 	%r33, %r32, 28;
	add.s32 	%r34, %r1, %r33;
	and.b32  	%r35, %r34, 1073741808;
	sub.s32 	%r36, %r1, %r35;
	.loc	1 33 42                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:33:42
	shl.b32 	%r37, %r1, 6;
	.loc	1 33 39                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:33:39
	or.b32  	%r38, %r37, %r30;
	.loc	1 33 34                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:33:34
	mul.wide.s32 	%rd12, %r38, 4;
	add.s64 	%rd1, %rd7, %rd12;
	mov.b32 	%r3, 0;
	.loc	1 33 47                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:33:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 34 37                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:34:37
	shl.b32 	%r39, %r36, 2;
	.loc	1 34 35                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:34:35
	or.b32  	%r40, %r39, %r31;
	.loc	1 34 30                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:34:30
	mul.wide.s32 	%rd13, %r40, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 34 42                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:34:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 35 18                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:35:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 39 33                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:39:33
	selp.f32 	%f4, %f3, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f4;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f5, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f6;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f7, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f8;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f9, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f10;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f11, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f12;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f13, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r29, 0;
	shr.u32 	%r51, %r28, 3;
	and.b32  	%r52, %r51, 4;
	mov.u32 	%r53, global_smem;
	add.s32 	%r6, %r53, %r52;
	mov.b32 	%r7, %f14;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r28, 2;
	shl.b32 	%r54, %r28, 2;
	add.s32 	%r9, %r53, %r54;
	// begin inline asm
	@%p6 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r8;
	shfl.sync.bfly.b32	%r55, %r8, 1, 31, -1;
	mov.b32 	%f16, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r56, %r28, 1;
	setp.eq.b32 	%p15, %r56, 1;
	not.pred 	%p16, %p15;
	and.pred  	%p7, %p6, %p16;
	mov.b32 	%r11, %f17;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 43 19                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:43:19
	ld.shared.u32 	%r13, [global_smem];
	mov.b32 	%r14, 1115684864;
	// begin inline asm
	div.full.f32 %r26, %r13, %r14;
	// end inline asm
	mov.b32 	%f18, %r26;
	.loc	1 44 19                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:44:19
	sub.f32 	%f19, %f3, %f18;
	.loc	1 45 20                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:45:20
	mul.f32 	%f20, %f19, %f19;
	.loc	1 47 35                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:47:35
	selp.f32 	%f21, %f20, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r57, %f21;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f22, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f23;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f24, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f25;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f26, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f27;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f28, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f29;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f30, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f31;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r17, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r17;
	shfl.sync.bfly.b32	%r67, %r17, 1, 31, -1;
	mov.b32 	%f33, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f34;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:50:20
	ld.shared.u32 	%r22, [global_smem];
	// begin inline asm
	div.full.f32 %r21, %r22, %r14;
	// end inline asm
	mov.b32 	%f35, %r21;
	.loc	1 52 20                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:52:20
	add.f32 	%f36, %f35, 0f3727C5AC;
	.loc	1 53 28                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:53:28
	rsqrt.approx.ftz.f32 	%f37, %f36;
	.loc	1 54 47                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:54:47
	mov.b32 	%r24, %f3;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r24 };
	// end inline asm
	.loc	1 55 25                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:55:25
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd4, %rd11, %rd14;
	.loc	1 55 37                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:55:37
	setp.eq.s32 	%p17, %r30, 0;
	mov.b32 	%r25, %f37;
	and.pred  	%p12, %p17, %p1;
	// begin inline asm
	@%p12 st.global.b32 [ %rd4 + 0 ], { %r25 };
	// end inline asm
	.loc	1 56 25                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:56:25
	add.s64 	%rd5, %rd9, %rd14;
	.loc	1 56 37                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:56:37
	// begin inline asm
	@%p12 st.global.b32 [ %rd5 + 0 ], { %r26 };
	// end inline asm
	.loc	1 57 25                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:57:25
	add.s64 	%rd6, %rd10, %rd14;
	.loc	1 57 37                         // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:57:37
	// begin inline asm
	@%p12 st.global.b32 [ %rd6 + 0 ], { %r22 };
	// end inline asm
	.loc	1 57 4                          // cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fg/cfgwodrczjtkt6ozwusst6lk2ym33u3ruljnr6onqxbkcoozlrz7.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 103
.b8 119
.b8 111
.b8 100
.b8 114
.b8 99
.b8 122
.b8 106
.b8 116
.b8 107
.b8 116
.b8 54
.b8 111
.b8 122
.b8 119
.b8 117
.b8 115
.b8 115
.b8 116
.b8 54
.b8 108
.b8 107
.b8 50
.b8 121
.b8 109
.b8 51
.b8 51
.b8 117
.b8 51
.b8 114
.b8 117
.b8 108
.b8 106
.b8 110
.b8 114
.b8 54
.b8 111
.b8 110
.b8 113
.b8 120
.b8 98
.b8 107
.b8 99
.b8 111
.b8 111
.b8 122
.b8 108
.b8 114
.b8 122
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
