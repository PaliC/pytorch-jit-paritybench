#loc = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":57:26)
#loc52 = loc(callsite(#loc1 at #loc42))
module {
  tt.func public @triton_per_fused_add_log_mean_mul_sum_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<5.000000e-04> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e-10> : tensor<1x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_6 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_6 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.muli %3, %cst_5 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %2, %4 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_6 : tensor<1x64xi32> loc(#loc10)
    %10 = arith.addi %9, %4 : tensor<1x64xi32> loc(#loc11)
    %11 = tt.addptr %6, %10 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %12 = tt.load %11 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %13 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc14)
    %14 = arith.addi %13, %4 : tensor<1x64xi32> loc(#loc15)
    %15 = tt.addptr %6, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %16 = tt.load %15 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %17 = arith.addi %2, %cst_3 : tensor<1x64xi32> loc(#loc18)
    %18 = arith.addi %17, %4 : tensor<1x64xi32> loc(#loc19)
    %19 = tt.addptr %6, %18 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %20 = tt.load %19 : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %21 = arith.mulf %8, %cst_2 : tensor<1x64xf32> loc(#loc22)
    %22 = arith.addf %21, %cst_1 : tensor<1x64xf32> loc(#loc23)
    %23 = math.log %22 : tensor<1x64xf32> loc(#loc24)
    %24 = arith.mulf %8, %23 : tensor<1x64xf32> loc(#loc25)
    %25 = arith.mulf %12, %cst_2 : tensor<1x64xf32> loc(#loc26)
    %26 = arith.addf %25, %cst_1 : tensor<1x64xf32> loc(#loc27)
    %27 = math.log %26 : tensor<1x64xf32> loc(#loc28)
    %28 = arith.mulf %12, %27 : tensor<1x64xf32> loc(#loc29)
    %29 = arith.addf %24, %28 : tensor<1x64xf32> loc(#loc30)
    %30 = arith.mulf %16, %cst_2 : tensor<1x64xf32> loc(#loc31)
    %31 = arith.addf %30, %cst_1 : tensor<1x64xf32> loc(#loc32)
    %32 = math.log %31 : tensor<1x64xf32> loc(#loc33)
    %33 = arith.mulf %16, %32 : tensor<1x64xf32> loc(#loc34)
    %34 = arith.addf %29, %33 : tensor<1x64xf32> loc(#loc35)
    %35 = arith.mulf %20, %cst_2 : tensor<1x64xf32> loc(#loc36)
    %36 = arith.addf %35, %cst_1 : tensor<1x64xf32> loc(#loc37)
    %37 = math.log %36 : tensor<1x64xf32> loc(#loc38)
    %38 = arith.mulf %20, %37 : tensor<1x64xf32> loc(#loc39)
    %39 = arith.addf %34, %38 : tensor<1x64xf32> loc(#loc40)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc42)), %arg4: f32 loc(callsite(#loc1 at #loc42))):
      %46 = arith.addf %arg3, %arg4 : f32 loc(#loc54)
      tt.reduce.return %46 : f32 loc(#loc51)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc51)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc44)
    %42 = arith.divf %41, %cst_0 : tensor<1x1xf32> loc(#loc45)
    %43 = arith.mulf %42, %cst : tensor<1x1xf32> loc(#loc46)
    gpu.barrier loc(#loc47)
    %44 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc48)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    tt.store %45, %43 : tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":26:26)
#loc3 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":26:34)
#loc4 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":29:19)
#loc5 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":30:19)
#loc6 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":31:38)
#loc7 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":31:35)
#loc8 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":31:30)
#loc9 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":31:43)
#loc10 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":32:35)
#loc11 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":32:40)
#loc12 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":32:30)
#loc13 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":32:48)
#loc14 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":33:36)
#loc15 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":33:41)
#loc16 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":33:31)
#loc17 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":33:49)
#loc18 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":34:36)
#loc19 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":34:41)
#loc20 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":34:31)
#loc21 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":34:49)
#loc22 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":36:18)
#loc23 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":38:18)
#loc24 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":39:23)
#loc25 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":40:18)
#loc26 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":41:18)
#loc27 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":42:18)
#loc28 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":43:24)
#loc29 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":44:19)
#loc30 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":45:19)
#loc31 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":46:20)
#loc32 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":47:20)
#loc33 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":48:24)
#loc34 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":49:20)
#loc35 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":50:20)
#loc36 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":51:20)
#loc37 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":52:20)
#loc38 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":53:24)
#loc39 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":54:20)
#loc40 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":55:20)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":57:29)
#loc45 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":59:20)
#loc46 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":61:20)
#loc47 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":62:4)
#loc48 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":63:28)
#loc49 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":63:71)
#loc50 = loc("inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py":63:4)
#loc51 = loc(callsite(#loc41 at #loc42))
#loc53 = loc(callsite(#loc43 at #loc41))
#loc54 = loc(callsite(#loc53 at #loc42))
