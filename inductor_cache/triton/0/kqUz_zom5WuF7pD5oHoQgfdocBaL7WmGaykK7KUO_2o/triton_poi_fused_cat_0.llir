; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 128, !dbg !14
  %10 = sdiv i32 %8, 16, !dbg !15
  %11 = srem i32 %10, 2, !dbg !16
  %.frozen = freeze i32 %8, !dbg !17
  %12 = sdiv i32 %.frozen, 4, !dbg !17
  %13 = mul i32 %12, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %13, !dbg !18
  %14 = srem i32 %12, 4, !dbg !19
  %15 = sdiv i32 %8, 32, !dbg !20
  %16 = icmp slt i32 %11, 1, !dbg !21
  %17 = shl nsw i32 %14, 4, !dbg !22
  %18 = shl i32 %15, 6, !dbg !23
  %19 = add i32 %18, %.decomposed, !dbg !24
  %20 = add i32 %19, %17, !dbg !25
  %21 = sext i32 %20 to i64, !dbg !26
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !26
  %23 = and i1 %9, %16, !dbg !27
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %23, i32 0, i1 %23) #1, !dbg !28
  %25 = bitcast i32 %24 to float, !dbg !28
  %26 = add i32 %19, 4, !dbg !29
  %27 = add i32 %26, %17, !dbg !30
  %28 = sext i32 %27 to i64, !dbg !31
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !31
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %23, i32 0, i1 %23) #1, !dbg !32
  %31 = bitcast i32 %30 to float, !dbg !32
  %32 = fcmp ogt float %25, %31, !dbg !33
  %33 = fcmp uno float %25, 0.000000e+00, !dbg !37
  %34 = or i1 %33, %32, !dbg !38
  %35 = select i1 %34, float %25, float %31, !dbg !39
  %36 = add i32 %19, 8, !dbg !40
  %37 = add i32 %36, %17, !dbg !41
  %38 = sext i32 %37 to i64, !dbg !42
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !42
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %23, i32 0, i1 %23) #1, !dbg !43
  %41 = bitcast i32 %40 to float, !dbg !43
  %42 = fcmp ogt float %35, %41, !dbg !44
  %43 = fcmp uno float %35, 0.000000e+00, !dbg !46
  %44 = or i1 %42, %43, !dbg !47
  %45 = select i1 %44, float %35, float %41, !dbg !48
  %46 = add i32 %19, 12, !dbg !49
  %47 = add i32 %46, %17, !dbg !50
  %48 = sext i32 %47 to i64, !dbg !51
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !51
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %23, i32 0, i1 %23) #1, !dbg !52
  %51 = bitcast i32 %50 to float, !dbg !52
  %52 = fcmp ogt float %45, %51, !dbg !53
  %53 = fcmp uno float %45, 0.000000e+00, !dbg !55
  %54 = or i1 %52, %53, !dbg !56
  %55 = select i1 %54, float %45, float %51, !dbg !57
  %56 = icmp sgt i32 %11, 0, !dbg !58
  %57 = and i1 %9, %56, !dbg !59
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %57, i32 0, i1 %57) #1, !dbg !60
  %59 = bitcast i32 %58 to float, !dbg !60
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %57, i32 0, i1 %57) #1, !dbg !61
  %61 = bitcast i32 %60 to float, !dbg !61
  %62 = fadd float %59, %61, !dbg !62
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %57, i32 0, i1 %57) #1, !dbg !63
  %64 = bitcast i32 %63 to float, !dbg !63
  %65 = fadd float %62, %64, !dbg !64
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %57, i32 0, i1 %57) #1, !dbg !65
  %67 = bitcast i32 %66 to float, !dbg !65
  %68 = fadd float %65, %67, !dbg !66
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %68, float 4.000000e+00) #1, !dbg !67
  %70 = select i1 %16, float %55, float %69, !dbg !68
  %71 = sext i32 %8 to i64, !dbg !69
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !69
  %73 = bitcast float %70 to i32, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %72, i1 %9) #1, !dbg !70
  ret void, !dbg !71
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6bs7mvftk6tnwdnpfyb7p5ugslrcxm4f4hbvug7wcx7fyr4vpcc.py", directory: "inductor_cache/6b")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 26, column: 26, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 38, scope: !7)
!23 = !DILocation(line: 34, column: 46, scope: !7)
!24 = !DILocation(line: 34, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 43, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 58, scope: !7)
!28 = !DILocation(line: 34, column: 51, scope: !7)
!29 = !DILocation(line: 35, column: 39, scope: !7)
!30 = !DILocation(line: 35, column: 47, scope: !7)
!31 = !DILocation(line: 35, column: 30, scope: !7)
!32 = !DILocation(line: 35, column: 55, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 36, column: 40, scope: !7)
!37 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 37, column: 39, scope: !7)
!41 = !DILocation(line: 37, column: 47, scope: !7)
!42 = !DILocation(line: 37, column: 30, scope: !7)
!43 = !DILocation(line: 37, column: 55, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !45)
!45 = !DILocation(line: 38, column: 40, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !45)
!49 = !DILocation(line: 39, column: 41, scope: !7)
!50 = !DILocation(line: 39, column: 49, scope: !7)
!51 = !DILocation(line: 39, column: 31, scope: !7)
!52 = !DILocation(line: 39, column: 57, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !54)
!54 = !DILocation(line: 40, column: 41, scope: !7)
!55 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !54)
!56 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !54)
!57 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !54)
!58 = !DILocation(line: 43, column: 20, scope: !7)
!59 = !DILocation(line: 46, column: 60, scope: !7)
!60 = !DILocation(line: 46, column: 52, scope: !7)
!61 = !DILocation(line: 47, column: 56, scope: !7)
!62 = !DILocation(line: 48, column: 20, scope: !7)
!63 = !DILocation(line: 49, column: 56, scope: !7)
!64 = !DILocation(line: 50, column: 20, scope: !7)
!65 = !DILocation(line: 51, column: 57, scope: !7)
!66 = !DILocation(line: 52, column: 20, scope: !7)
!67 = !DILocation(line: 54, column: 20, scope: !7)
!68 = !DILocation(line: 0, scope: !7)
!69 = !DILocation(line: 58, column: 25, scope: !7)
!70 = !DILocation(line: 58, column: 37, scope: !7)
!71 = !DILocation(line: 58, column: 4, scope: !7)
