; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 48, !dbg !14
  %13 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !15
  %14 = insertelement <2 x i32> %13, i32 %10, i64 1, !dbg !15
  %15 = srem <2 x i32> %14, splat (i32 3), !dbg !15
  %16 = shufflevector <2 x i32> %15, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !15
  %17 = shl i32 %10, 1, !dbg !16
  %18 = shl i32 %11, 1, !dbg !16
  %19 = add i32 %17, -1, !dbg !17
  %20 = sext i32 %19 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = sext i32 %18 to i64, !dbg !18
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !18
  %24 = getelementptr i8, ptr addrspace(1) %23, i64 -4, !dbg !18
  %25 = icmp sgt <4 x i32> %16, <i32 -1, i32 -1, i32 0, i32 0>, !dbg !19
  %26 = extractelement <4 x i1> %25, i64 3, !dbg !20
  %27 = and i1 %12, %26, !dbg !20
  %28 = extractelement <4 x i1> %25, i64 2, !dbg !20
  %29 = and i1 %28, %12, !dbg !20
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %27, i32 -8388608, i1 %27) #1, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %29, i32 -8388608, i1 %29) #1, !dbg !21
  %32 = sext i32 %17 to i64, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !22
  %34 = extractelement <4 x i1> %25, i64 1, !dbg !23
  %35 = and i1 %12, %34, !dbg !23
  %36 = extractelement <4 x i1> %25, i64 0, !dbg !23
  %37 = and i1 %36, %12, !dbg !23
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %35, i32 -8388608, i1 %35) #1, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %37, i32 -8388608, i1 %37) #1, !dbg !24
  %40 = or disjoint i32 %17, 1, !dbg !25
  %41 = or disjoint i32 %18, 1, !dbg !25
  %42 = sext i32 %40 to i64, !dbg !26
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !26
  %44 = sext i32 %41 to i64, !dbg !26
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !26
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %35, i32 -8388608, i1 %35) #1, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %37, i32 -8388608, i1 %37) #1, !dbg !27
  %48 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !21
  %49 = insertelement <2 x i32> %48, i32 %31, i64 1, !dbg !21
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !21
  %51 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !24
  %52 = insertelement <2 x i32> %51, i32 %39, i64 1, !dbg !24
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !24
  %54 = fcmp ogt <2 x float> %53, %50, !dbg !28
  %55 = zext <2 x i1> %54 to <2 x i8>, !dbg !29
  %56 = fcmp uno <2 x float> %53, zeroinitializer, !dbg !30
  %57 = or <2 x i1> %54, %56, !dbg !34
  %.v = select <2 x i1> %57, <2 x i32> %52, <2 x i32> %49, !dbg !35
  %58 = bitcast <2 x i32> %.v to <2 x float>, !dbg !35
  %59 = insertelement <2 x i32> poison, i32 %46, i64 0, !dbg !27
  %60 = insertelement <2 x i32> %59, i32 %47, i64 1, !dbg !27
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !27
  %62 = fcmp olt <2 x float> %58, %61, !dbg !36
  %63 = select <2 x i1> %62, <2 x i8> splat (i8 2), <2 x i8> %55, !dbg !37
  %64 = bitcast i32 %46 to float, !dbg !38
  %65 = fcmp uno float %64, 0.000000e+00, !dbg !38
  %66 = bitcast i32 %47 to float, !dbg !38
  %67 = fcmp uno float %66, 0.000000e+00, !dbg !38
  %68 = extractelement <2 x i1> %62, i64 0, !dbg !40
  %69 = or i1 %65, %68, !dbg !40
  %70 = extractelement <2 x i1> %62, i64 1, !dbg !40
  %71 = or i1 %67, %70, !dbg !40
  %72 = sext i32 %10 to i64, !dbg !41
  %73 = getelementptr i8, ptr addrspace(1) %1, i64 %72, !dbg !41
  %74 = bitcast <2 x i8> %63 to i16, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %74, ptr addrspace(1) %73, i1 %12) #1, !dbg !42
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %72, !dbg !43
  %76 = extractelement <2 x i32> %.v, i64 0, !dbg !44
  %77 = select i1 %69, i32 %46, i32 %76, !dbg !45
  %78 = extractelement <2 x i32> %.v, i64 1, !dbg !44
  %79 = select i1 %71, i32 %47, i32 %78, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %77, i32 %79, ptr addrspace(1) %75, i1 %12) #1, !dbg !44
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py", directory: "inductor_cache/ba")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_2", linkageName: "triton_poi_fused_max_pool2d_with_indices_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 37, column: 40, scope: !7)
!17 = !DILocation(line: 37, column: 38, scope: !7)
!18 = !DILocation(line: 37, column: 31, scope: !7)
!19 = !DILocation(line: 39, column: 21, scope: !7)
!20 = !DILocation(line: 37, column: 53, scope: !7)
!21 = !DILocation(line: 37, column: 45, scope: !7)
!22 = !DILocation(line: 43, column: 31, scope: !7)
!23 = !DILocation(line: 43, column: 46, scope: !7)
!24 = !DILocation(line: 43, column: 38, scope: !7)
!25 = !DILocation(line: 54, column: 35, scope: !7)
!26 = !DILocation(line: 54, column: 31, scope: !7)
!27 = !DILocation(line: 54, column: 42, scope: !7)
!28 = !DILocation(line: 44, column: 20, scope: !7)
!29 = !DILocation(line: 47, column: 35, scope: !7)
!30 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 48, column: 42, scope: !7)
!34 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 55, column: 20, scope: !7)
!37 = !DILocation(line: 57, column: 35, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !39)
!39 = !DILocation(line: 58, column: 42, scope: !7)
!40 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !39)
!41 = !DILocation(line: 59, column: 25, scope: !7)
!42 = !DILocation(line: 59, column: 37, scope: !7)
!43 = !DILocation(line: 60, column: 25, scope: !7)
!44 = !DILocation(line: 60, column: 37, scope: !7)
!45 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !39)
!46 = !DILocation(line: 60, column: 4, scope: !7)
