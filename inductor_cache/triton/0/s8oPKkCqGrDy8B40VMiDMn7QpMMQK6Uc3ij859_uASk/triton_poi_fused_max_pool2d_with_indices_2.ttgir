#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":19:0), %arg1: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<64xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<64xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<64xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<64xf32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<48> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<-1> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<6> : tensor<64xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_4 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = arith.muli %6, %cst_5 : tensor<64xi32, #blocked> loc(#loc8)
    %8 = arith.addi %7, %cst_6 : tensor<64xi32, #blocked> loc(#loc9)
    %9 = arith.extsi %8 : tensor<64xi32, #blocked> to tensor<64xi64, #blocked> loc(#loc10)
    %10 = arith.cmpi sge, %9, %cst_7 : tensor<64xi64, #blocked> loc(#loc10)
    %11 = arith.cmpi slt, %9, %cst_8 : tensor<64xi64, #blocked> loc(#loc11)
    %12 = arith.andi %10, %11 : tensor<64xi1, #blocked> loc(#loc12)
    %13 = arith.muli %4, %cst_5 : tensor<64xi32, #blocked> loc(#loc13)
    %14 = arith.addi %13, %cst_6 : tensor<64xi32, #blocked> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc15)
    %17 = arith.andi %12, %5 : tensor<64xi1, #blocked> loc(#loc16)
    %18 = tt.load %16, %17, %cst_2 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = arith.extsi %7 : tensor<64xi32, #blocked> to tensor<64xi64, #blocked> loc(#loc18)
    %20 = arith.cmpi sge, %19, %cst_7 : tensor<64xi64, #blocked> loc(#loc18)
    %21 = arith.cmpi slt, %19, %cst_8 : tensor<64xi64, #blocked> loc(#loc19)
    %22 = arith.andi %20, %21 : tensor<64xi1, #blocked> loc(#loc20)
    %23 = tt.addptr %15, %13 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc21)
    %24 = arith.andi %22, %5 : tensor<64xi1, #blocked> loc(#loc22)
    %25 = tt.load %23, %24, %cst_2 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc23)
    %26 = arith.cmpf ogt, %25, %18 : tensor<64xf32, #blocked> loc(#loc24)
    %27 = arith.select %26, %cst, %cst_0 : tensor<64xi1, #blocked>, tensor<64xi8, #blocked> loc(#loc25)
    %28 = arith.cmpf une, %25, %25 : tensor<64xf32, #blocked> loc(#loc46)
    %29 = arith.ori %26, %28 : tensor<64xi1, #blocked> loc(#loc47)
    %30 = arith.select %29, %25, %18 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc48)
    %31 = arith.addi %7, %cst_9 : tensor<64xi32, #blocked> loc(#loc30)
    %32 = arith.extsi %31 : tensor<64xi32, #blocked> to tensor<64xi64, #blocked> loc(#loc31)
    %33 = arith.cmpi sge, %32, %cst_7 : tensor<64xi64, #blocked> loc(#loc31)
    %34 = arith.cmpi slt, %32, %cst_8 : tensor<64xi64, #blocked> loc(#loc32)
    %35 = arith.andi %33, %34 : tensor<64xi1, #blocked> loc(#loc33)
    %36 = arith.addi %13, %cst_9 : tensor<64xi32, #blocked> loc(#loc34)
    %37 = tt.addptr %15, %36 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc35)
    %38 = arith.andi %35, %5 : tensor<64xi1, #blocked> loc(#loc36)
    %39 = tt.load %37, %38, %cst_2 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc37)
    %40 = arith.cmpf ogt, %39, %30 : tensor<64xf32, #blocked> loc(#loc38)
    %41 = arith.select %40, %cst_1, %27 : tensor<64xi1, #blocked>, tensor<64xi8, #blocked> loc(#loc39)
    %42 = arith.cmpf une, %39, %39 : tensor<64xf32, #blocked> loc(#loc49)
    %43 = arith.ori %40, %42 : tensor<64xi1, #blocked> loc(#loc50)
    %44 = arith.select %43, %39, %30 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc51)
    %45 = tt.splat %arg1 : !tt.ptr<i8> -> tensor<64x!tt.ptr<i8>, #blocked> loc(#loc41)
    %46 = tt.addptr %45, %4 : tensor<64x!tt.ptr<i8>, #blocked>, tensor<64xi32, #blocked> loc(#loc41)
    tt.store %46, %41, %5 : tensor<64x!tt.ptr<i8>, #blocked> loc(#loc42)
    %47 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc43)
    %48 = tt.addptr %47, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc43)
    tt.store %48, %44, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":21:28)
#loc3 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":21:33)
#loc4 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":22:36)
#loc5 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":22:23)
#loc6 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":23:21)
#loc7 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":24:19)
#loc8 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":31:20)
#loc9 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":31:18)
#loc10 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":32:19)
#loc11 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":34:18)
#loc12 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":35:18)
#loc13 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":37:40)
#loc14 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":37:38)
#loc15 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":37:31)
#loc16 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":37:53)
#loc17 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":37:45)
#loc18 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":39:21)
#loc19 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":40:20)
#loc20 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":41:20)
#loc21 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":43:31)
#loc22 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":43:46)
#loc23 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":43:38)
#loc24 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":44:20)
#loc25 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":47:35)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc27 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":48:42)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":49:16)
#loc31 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":50:21)
#loc32 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":51:20)
#loc33 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":52:20)
#loc34 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":54:35)
#loc35 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":54:31)
#loc36 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":54:50)
#loc37 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":54:42)
#loc38 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":55:20)
#loc39 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":57:35)
#loc40 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":58:42)
#loc41 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":59:25)
#loc42 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":59:37)
#loc43 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":60:25)
#loc44 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":60:37)
#loc45 = loc("inductor_cache/ba/cba7fllgfnp5246lexp7zp5tnm6774l2zc5klrisi3o673gumtpq.py":60:4)
#loc46 = loc(callsite(#loc26 at #loc27))
#loc47 = loc(callsite(#loc28 at #loc27))
#loc48 = loc(callsite(#loc29 at #loc27))
#loc49 = loc(callsite(#loc26 at #loc40))
#loc50 = loc(callsite(#loc28 at #loc40))
#loc51 = loc(callsite(#loc29 at #loc40))
