//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<20>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_0];
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:23:33
	shl.b32 	%r18, %r1, 3;
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_2];
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_3];
	.loc	1 24 44                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:24:44
	mov.u32 	%r19, %tid.x;
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_4];
	bfe.u32 	%r20, %r19, 3, 3;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_5];
	and.b32  	%r21, %r19, 7;
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2_param_6];
	.loc	1 24 23                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:24:23
	or.b32  	%r22, %r18, %r20;
	.loc	1 25 21                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:25:21
	setp.lt.s32 	%p1, %r22, 16;
	.loc	1 31 19                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:31:19
	bfe.s32 	%r23, %r1, 28, 1;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r22, %r24;
	and.b32  	%r26, %r25, -4;
	sub.s32 	%r27, %r22, %r26;
	.loc	1 32 37                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:32:37
	shl.b32 	%r28, %r22, 3;
	.loc	1 32 35                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:32:35
	or.b32  	%r29, %r28, %r21;
	.loc	1 32 30                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:32:30
	mul.wide.s32 	%rd15, %r29, 4;
	add.s64 	%rd1, %rd9, %rd15;
	mov.b32 	%r3, 0;
	.loc	1 32 42                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:32:42
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 33 30                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:33:30
	mul.wide.s32 	%rd16, %r27, 4;
	add.s64 	%rd2, %rd10, %rd16;
	.loc	1 33 35                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:34:30
	add.s64 	%rd3, %rd11, %rd16;
	.loc	1 34 35                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:34:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	.loc	1 35 31                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:35:31
	add.s64 	%rd4, %rd12, %rd16;
	.loc	1 35 36                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:35:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:36:31
	add.s64 	%rd5, %rd13, %rd16;
	.loc	1 36 36                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:36:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 18                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:39:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 40 26                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:40:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 42                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:32:42
	mov.b32 	%f4, %r2;
	.loc	1 33 35                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:33:35
	mov.b32 	%f5, %r4;
	.loc	1 37 18                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:37:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 36 36                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:36:36
	mov.b32 	%f7, %r7;
	.loc	1 35 36                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:35:36
	mov.b32 	%f8, %r6;
	.loc	1 24 23                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:24:23
	or.b32  	%r30, %r18, %r21;
	.loc	1 25 21                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:25:21
	setp.lt.s32 	%p10, %r30, 16;
	.loc	1 42 18                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:42:18
	mov.b32 	%r10, %f3;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f9, %r8;
	.loc	1 45 19                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:45:19
	mul.f32 	%f10, %f6, %f9;
	.loc	1 47 20                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:47:20
	fma.rn.f32 	%f11, %f10, %f8, %f7;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p11, %f11, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f12, 0f00000000, %f11, %p11;
$L__tmp2:
	.loc	1 51 35                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:51:35
	selp.f32 	%f13, %f12, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f13;
	shfl.sync.bfly.b32	%r32, %r31, 4, 31, -1;
	mov.b32 	%f14, %r32;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f15;
	shfl.sync.bfly.b32	%r34, %r33, 2, 31, -1;
	mov.b32 	%f16, %r34;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f17;
	shfl.sync.bfly.b32	%r36, %r35, 1, 31, -1;
	mov.b32 	%f18, %r36;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
$L__tmp4:
	.loc	1 54 20                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:54:20
	shl.b32 	%r37, %r20, 2;
	mov.u32 	%r38, global_smem;
	add.s32 	%r11, %r38, %r37;
	mov.b32 	%r12, %f19;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r39, %r21, 2;
	add.s32 	%r40, %r38, %r39;
	ld.shared.u32 	%r14, [%r40];
	mov.b32 	%r15, 1090519040;
	// begin inline asm
	div.full.f32 %r17, %r14, %r15;
	// end inline asm
	.loc	1 55 25                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:55:25
	add.s64 	%rd6, %rd14, %rd15;
	.loc	1 55 44                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:55:44
	mov.b32 	%r16, %f12;
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r16 };
	// end inline asm
	.loc	1 56 4                          // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:57:28
	mul.wide.s32 	%rd17, %r30, 4;
	add.s64 	%rd7, %rd8, %rd17;
	.loc	1 57 40                         // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:57:40
	and.b32  	%r41, %r19, 56;
	setp.eq.s32 	%p12, %r41, 0;
	and.pred  	%p9, %p12, %p10;
	// begin inline asm
	@%p9 st.global.b32 [ %rd7 + 0 ], { %r17 };
	// end inline asm
	.loc	1 57 4                          // c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4v/c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 118
.b8 105
.b8 104
.b8 108
.b8 115
.b8 55
.b8 113
.b8 99
.b8 114
.b8 118
.b8 53
.b8 100
.b8 110
.b8 119
.b8 106
.b8 55
.b8 100
.b8 106
.b8 122
.b8 50
.b8 110
.b8 118
.b8 122
.b8 114
.b8 52
.b8 53
.b8 54
.b8 102
.b8 104
.b8 117
.b8 111
.b8 99
.b8 50
.b8 113
.b8 52
.b8 112
.b8 99
.b8 102
.b8 105
.b8 114
.b8 121
.b8 111
.b8 112
.b8 53
.b8 122
.b8 101
.b8 103
.b8 115
.b8 122
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
