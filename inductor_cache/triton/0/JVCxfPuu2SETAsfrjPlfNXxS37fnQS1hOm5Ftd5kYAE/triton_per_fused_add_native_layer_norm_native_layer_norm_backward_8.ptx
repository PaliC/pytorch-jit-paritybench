//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_6,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<78>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_1];
$L__tmp0:
	.loc	1 23 28                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:23:33
	shl.b32 	%r50, %r1, 3;
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_3];
	.loc	1 24 44                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:24:44
	mov.u32 	%r51, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_4];
	bfe.u32 	%r52, %r51, 5, 3;
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_5];
	and.b32  	%r53, %r51, 7;
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_8_param_6];
	.loc	1 24 23                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:24:23
	or.b32  	%r54, %r50, %r52;
	.loc	1 25 21                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:25:21
	setp.lt.s32 	%p1, %r54, 16;
	.loc	1 26 34                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:26:34
	shl.b32 	%r55, %r51, 2;
	and.b32  	%r56, %r55, 124;
	.loc	1 31 39                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:39
	shl.b32 	%r57, %r54, 7;
	.loc	1 31 35                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:35
	or.b32  	%r58, %r57, %r56;
	.loc	1 31 30                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:30
	mul.wide.s32 	%rd16, %r58, 4;
	add.s64 	%rd1, %rd10, %rd16;
	mov.b32 	%r6, 0;
	.loc	1 31 44                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 32 34                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:32:34
	add.s64 	%rd2, %rd9, %rd16;
	.loc	1 32 48                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:32:48
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 33 30                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:33:30
	mul.wide.u32 	%rd17, %r56, 4;
	add.s64 	%rd3, %rd11, %rd17;
	mov.pred 	%p11, -1;
	.loc	1 33 35                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:33:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 34 31                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:31
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 34 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 31                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:31
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 35 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 18                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:36:18
	add.f32 	%f13, %f5, %f9;
	add.f32 	%f14, %f6, %f10;
	add.f32 	%f15, %f7, %f11;
	add.f32 	%f16, %f8, %f12;
	.loc	1 37 18                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:37:18
	add.f32 	%f17, %f13, %f1;
	add.f32 	%f18, %f14, %f2;
	add.f32 	%f19, %f15, %f3;
	add.f32 	%f20, %f16, %f4;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f17, %f18;
	add.f32 	%f22, %f19, %f21;
	add.f32 	%f23, %f20, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f24;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f25, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f26;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f27, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f28;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f29, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f30;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f31, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f32;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f33, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
$L__tmp2:
	.loc	1 45 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:45:20
	mov.b32 	%r31, %f34;
	mov.b32 	%r32, 1124073472;
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f35, %r30;
	.loc	1 46 19                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:46:19
	sub.f32 	%f36, %f17, %f35;
	sub.f32 	%f37, %f18, %f35;
	sub.f32 	%f38, %f19, %f35;
	sub.f32 	%f39, %f20, %f35;
	.loc	1 47 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:47:20
	mul.f32 	%f40, %f37, %f37;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f41, %f36, %f36, %f40;
	fma.rn.f32 	%f42, %f38, %f38, %f41;
	fma.rn.f32 	%f43, %f39, %f39, %f42;
	selp.f32 	%f44, %f43, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f44;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f45, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f46;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f47, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f48;
	shfl.sync.bfly.b32	%r74, %r73, 4, 31, -1;
	mov.b32 	%f49, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f50;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f51, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f52;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f53, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
$L__tmp4:
	.loc	1 61 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:61:20
	shl.b32 	%r79, %r52, 2;
	mov.u32 	%r80, global_smem;
	add.s32 	%r33, %r80, %r79;
	mov.b32 	%r34, %f54;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r81, %r53, 2;
	add.s32 	%r82, %r80, %r81;
	.loc	1 53 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:53:20
	ld.shared.u32 	%r36, [%r82];
	// begin inline asm
	div.full.f32 %r35, %r36, %r32;
	// end inline asm
	mov.b32 	%f55, %r35;
	// begin inline asm
	div.full.f32 %r38, %r34, %r32;
	// end inline asm
	mov.b32 	%f56, %r38;
	.loc	1 55 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:55:20
	add.f32 	%f57, %f55, 0f3727C5AC;
	add.f32 	%f58, %f56, 0f3727C5AC;
	.loc	1 56 28                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:56:28
	rsqrt.approx.ftz.f32 	%f59, %f57;
	rsqrt.approx.ftz.f32 	%f60, %f58;
	.loc	1 35 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:35:36
	mov.b32 	%f61, %r29;
	mov.b32 	%f62, %r28;
	mov.b32 	%f63, %r27;
	mov.b32 	%f64, %r26;
	.loc	1 34 36                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:34:36
	mov.b32 	%f65, %r25;
	mov.b32 	%f66, %r24;
	mov.b32 	%f67, %r23;
	mov.b32 	%f68, %r22;
	.loc	1 24 23                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:24:23
	or.b32  	%r83, %r50, %r53;
	.loc	1 25 21                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:25:21
	setp.lt.s32 	%p18, %r83, 16;
	.loc	1 57 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:57:20
	mul.f32 	%f69, %f36, %f60;
	mul.f32 	%f70, %f37, %f60;
	mul.f32 	%f71, %f38, %f60;
	mul.f32 	%f72, %f39, %f60;
	.loc	1 59 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:59:20
	fma.rn.f32 	%f73, %f69, %f68, %f64;
	fma.rn.f32 	%f74, %f70, %f67, %f63;
	fma.rn.f32 	%f75, %f71, %f66, %f62;
	fma.rn.f32 	%f76, %f72, %f65, %f61;
	.loc	1 61 20                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:61:20
	mul.f32 	%f77, %f59, 0f3C000000;
	.loc	1 62 49                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:62:49
	mov.b32 	%r41, %f69;
	mov.b32 	%r42, %f70;
	mov.b32 	%r43, %f71;
	mov.b32 	%r44, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	.loc	1 63 25                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:63:25
	add.s64 	%rd7, %rd14, %rd16;
	.loc	1 63 46                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:63:46
	mov.b32 	%r45, %f73;
	mov.b32 	%r46, %f74;
	mov.b32 	%r47, %f75;
	mov.b32 	%r48, %f76;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 64 25                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:25
	mul.wide.s32 	%rd18, %r83, 4;
	add.s64 	%rd8, %rd15, %rd18;
	.loc	1 64 37                         // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:37
	and.b32  	%r84, %r51, 248;
	setp.eq.s32 	%p19, %r84, 0;
	mov.b32 	%r49, %f77;
	and.pred  	%p17, %p19, %p18;
	// begin inline asm
	@%p17 st.global.b32 [ %rd8 + 0 ], { %r49 };
	// end inline asm
	.loc	1 64 4                          // ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py:64:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e3/ce3wrzyduojkzsph2y7xhues4l3ows4y2u44hhjywi4rb2pnnzga.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 51
.b8 119
.b8 114
.b8 122
.b8 121
.b8 100
.b8 117
.b8 111
.b8 106
.b8 107
.b8 122
.b8 115
.b8 112
.b8 104
.b8 50
.b8 121
.b8 55
.b8 120
.b8 104
.b8 117
.b8 101
.b8 115
.b8 52
.b8 108
.b8 51
.b8 111
.b8 119
.b8 115
.b8 52
.b8 121
.b8 50
.b8 117
.b8 52
.b8 52
.b8 104
.b8 104
.b8 106
.b8 121
.b8 119
.b8 105
.b8 52
.b8 114
.b8 98
.b8 50
.b8 112
.b8 110
.b8 110
.b8 122
.b8 103
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
