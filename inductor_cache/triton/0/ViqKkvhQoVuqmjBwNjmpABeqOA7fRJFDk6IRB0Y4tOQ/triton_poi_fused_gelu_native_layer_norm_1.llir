; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_gelu_native_layer_norm_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = sext i32 %13 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !17
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %14) #3, !dbg !18
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !18
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !18
  %22 = bitcast i32 %20 to float, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = sext i32 %15 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #3, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #3, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %14) #3, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %14) #3, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = sext i32 %.decomposed to i64, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %3, i64 %33, !dbg !23
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 %14) #3, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %4, i64 %33, !dbg !25
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %14) #3, !dbg !26
  %38 = fmul float %22, 0x3FE6A09E60000000, !dbg !27
  %39 = fmul float %23, 0x3FE6A09E60000000, !dbg !27
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i4 = icmp eq i32 %40, 0, !dbg !28
  %41 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #3, !dbg !28
  %42 = tail call float @llvm.nvvm.fabs.f(float %38) #3, !dbg !28
  %.0.i5 = select i1 %.not.i4, float %42, float %41, !dbg !28
  %43 = fcmp oge float %.0.i5, 0x3FF00C1FC0000000, !dbg !28
  br i1 %43, label %__nv_fabsf.exit1.i, label %45, !dbg !28

__nv_fabsf.exit1.i:                               ; preds = %7
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i = icmp eq i32 %44, 0, !dbg !28
  %.01.i = select i1 %.not1.i, float %42, float %41, !dbg !28
  br label %__internal_fmad.exit.i, !dbg !28

45:                                               ; preds = %7
  %46 = fmul float %38, %38, !dbg !28
  br label %__internal_fmad.exit.i, !dbg !28

__internal_fmad.exit.i:                           ; preds = %45, %__nv_fabsf.exit1.i
  %47 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %45 ], !dbg !28
  %48 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %45 ], !dbg !28
  %49 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %45 ], !dbg !28
  %50 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %45 ], !dbg !28
  %51 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %45 ], !dbg !28
  %52 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %45 ], !dbg !28
  %53 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %45 ], !dbg !28
  %54 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %46, %45 ], !dbg !28
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i = icmp eq i32 %55, 0, !dbg !28
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %53, float %54, float %52) #3, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %53, float %54, float %52) #3, !dbg !28
  %.02.i = select i1 %.not2.i, float %57, float %56, !dbg !28
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i = icmp eq i32 %58, 0, !dbg !28
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %54, float %51) #3, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %54, float %51) #3, !dbg !28
  %.03.i = select i1 %.not3.i, float %60, float %59, !dbg !28
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i = icmp eq i32 %61, 0, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %54, float %50) #3, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %54, float %50) #3, !dbg !28
  %.04.i = select i1 %.not4.i, float %63, float %62, !dbg !28
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i = icmp eq i32 %64, 0, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %54, float %49) #3, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %54, float %49) #3, !dbg !28
  %.05.i = select i1 %.not5.i, float %66, float %65, !dbg !28
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i = icmp eq i32 %67, 0, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %54, float %48) #3, !dbg !28
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %54, float %48) #3, !dbg !28
  %.06.i = select i1 %.not6.i, float %69, float %68, !dbg !28
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not7.i = icmp eq i32 %70, 0, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %54, float %47) #3, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %54, float %47) #3, !dbg !28
  %.07.i = select i1 %.not7.i, float %72, float %71, !dbg !28
  %73 = fneg float %54, !dbg !28
  %74 = select i1 %43, float %73, float %38, !dbg !28
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i = icmp eq i32 %75, 0, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %74, float %74) #3, !dbg !28
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %74, float %74) #3, !dbg !28
  %.08.i = select i1 %.not8.i, float %77, float %76, !dbg !28
  br i1 %43, label %78, label %__nv_erff.exit, !dbg !28

78:                                               ; preds = %__internal_fmad.exit.i
  %79 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !28
  %80 = fsub float 1.000000e+00, %79, !dbg !28
  %81 = bitcast float %80 to i32, !dbg !28
  %82 = bitcast float %38 to i32, !dbg !28
  %83 = and i32 %82, -2147483648, !dbg !28
  %84 = or i32 %83, %81, !dbg !28
  %85 = bitcast i32 %84 to float, !dbg !28
  br label %__nv_erff.exit, !dbg !28

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %78
  %r.0.i = phi float [ %85, %78 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !28
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i6 = icmp eq i32 %86, 0, !dbg !28
  %87 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #3, !dbg !28
  %88 = tail call float @llvm.nvvm.fabs.f(float %39) #3, !dbg !28
  %.0.i7 = select i1 %.not.i6, float %88, float %87, !dbg !28
  %89 = fcmp oge float %.0.i7, 0x3FF00C1FC0000000, !dbg !28
  br i1 %89, label %__nv_fabsf.exit1.i24, label %91, !dbg !28

__nv_fabsf.exit1.i24:                             ; preds = %__nv_erff.exit
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i25 = icmp eq i32 %90, 0, !dbg !28
  %.01.i26 = select i1 %.not1.i25, float %88, float %87, !dbg !28
  br label %__internal_fmad.exit.i8, !dbg !28

91:                                               ; preds = %__nv_erff.exit
  %92 = fmul float %39, %39, !dbg !28
  br label %__internal_fmad.exit.i8, !dbg !28

__internal_fmad.exit.i8:                          ; preds = %91, %__nv_fabsf.exit1.i24
  %93 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i24 ], [ 0x3FC06EBA60000000, %91 ], !dbg !28
  %94 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i24 ], [ 0xBFD8127580000000, %91 ], !dbg !28
  %95 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i24 ], [ 0x3FBCE315E0000000, %91 ], !dbg !28
  %96 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i24 ], [ 0xBF9B837CE0000000, %91 ], !dbg !28
  %97 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i24 ], [ 0x3F755ABD40000000, %91 ], !dbg !28
  %98 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i24 ], [ 0xBF4AE9A400000000, %91 ], !dbg !28
  %99 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i24 ], [ 0x3F163D2D40000000, %91 ], !dbg !28
  %100 = phi float [ %.01.i26, %__nv_fabsf.exit1.i24 ], [ %92, %91 ], !dbg !28
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i9 = icmp eq i32 %101, 0, !dbg !28
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float %100, float %98) #3, !dbg !28
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %99, float %100, float %98) #3, !dbg !28
  %.02.i10 = select i1 %.not2.i9, float %103, float %102, !dbg !28
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i11 = icmp eq i32 %104, 0, !dbg !28
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i10, float %100, float %97) #3, !dbg !28
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i10, float %100, float %97) #3, !dbg !28
  %.03.i12 = select i1 %.not3.i11, float %106, float %105, !dbg !28
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i13 = icmp eq i32 %107, 0, !dbg !28
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i12, float %100, float %96) #3, !dbg !28
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i12, float %100, float %96) #3, !dbg !28
  %.04.i14 = select i1 %.not4.i13, float %109, float %108, !dbg !28
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i15 = icmp eq i32 %110, 0, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i14, float %100, float %95) #3, !dbg !28
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i14, float %100, float %95) #3, !dbg !28
  %.05.i16 = select i1 %.not5.i15, float %112, float %111, !dbg !28
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i17 = icmp eq i32 %113, 0, !dbg !28
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i16, float %100, float %94) #3, !dbg !28
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i16, float %100, float %94) #3, !dbg !28
  %.06.i18 = select i1 %.not6.i17, float %115, float %114, !dbg !28
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not7.i19 = icmp eq i32 %116, 0, !dbg !28
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i18, float %100, float %93) #3, !dbg !28
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i18, float %100, float %93) #3, !dbg !28
  %.07.i20 = select i1 %.not7.i19, float %118, float %117, !dbg !28
  %119 = fneg float %100, !dbg !28
  %120 = select i1 %89, float %119, float %39, !dbg !28
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i21 = icmp eq i32 %121, 0, !dbg !28
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i20, float %120, float %120) #3, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i20, float %120, float %120) #3, !dbg !28
  %.08.i22 = select i1 %.not8.i21, float %123, float %122, !dbg !28
  br i1 %89, label %124, label %__nv_erff.exit27, !dbg !28

124:                                              ; preds = %__internal_fmad.exit.i8
  %125 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i22) #3, !dbg !28
  %126 = fsub float 1.000000e+00, %125, !dbg !28
  %127 = bitcast float %126 to i32, !dbg !28
  %128 = bitcast float %39 to i32, !dbg !28
  %129 = and i32 %128, -2147483648, !dbg !28
  %130 = or i32 %129, %127, !dbg !28
  %131 = bitcast i32 %130 to float, !dbg !28
  br label %__nv_erff.exit27, !dbg !28

__nv_erff.exit27:                                 ; preds = %__internal_fmad.exit.i8, %124
  %r.0.i23 = phi float [ %131, %124 ], [ %.08.i22, %__internal_fmad.exit.i8 ], !dbg !28
  %132 = fadd float %30, 0x3EE4F8B580000000, !dbg !29
  %133 = fadd float %32, 0x3EE4F8B580000000, !dbg !29
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %134, 0, !dbg !30
  br i1 %.not.i, label %137, label %135, !dbg !30

135:                                              ; preds = %__nv_erff.exit27
  %136 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %132), !dbg !30
  br label %__nv_rsqrtf.exit, !dbg !30

137:                                              ; preds = %__nv_erff.exit27
  %138 = tail call float @llvm.nvvm.rsqrt.approx.f(float %132), !dbg !30
  br label %__nv_rsqrtf.exit, !dbg !30

__nv_rsqrtf.exit:                                 ; preds = %135, %137
  %.0.i = phi float [ %136, %135 ], [ %138, %137 ], !dbg !30
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i1 = icmp eq i32 %139, 0, !dbg !30
  br i1 %.not.i1, label %142, label %140, !dbg !30

140:                                              ; preds = %__nv_rsqrtf.exit
  %141 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %133), !dbg !30
  br label %__nv_rsqrtf.exit3, !dbg !30

142:                                              ; preds = %__nv_rsqrtf.exit
  %143 = tail call float @llvm.nvvm.rsqrt.approx.f(float %133), !dbg !30
  br label %__nv_rsqrtf.exit3, !dbg !30

__nv_rsqrtf.exit3:                                ; preds = %140, %142
  %.0.i2 = phi float [ %141, %140 ], [ %143, %142 ], !dbg !30
  %144 = fmul float %23, 5.000000e-01, !dbg !31
  %145 = fadd float %r.0.i23, 1.000000e+00, !dbg !32
  %146 = fmul float %144, %145, !dbg !33
  %147 = bitcast i32 %27 to float, !dbg !20
  %148 = fsub float %146, %147, !dbg !34
  %149 = fmul float %22, 5.000000e-01, !dbg !31
  %150 = fadd float %r.0.i, 1.000000e+00, !dbg !32
  %151 = fmul float %149, %150, !dbg !33
  %152 = bitcast i32 %26 to float, !dbg !20
  %153 = fsub float %151, %152, !dbg !34
  %154 = extractvalue { i32, i32 } %37, 1, !dbg !26
  %155 = bitcast i32 %154 to float, !dbg !26
  %156 = extractvalue { i32, i32 } %37, 0, !dbg !26
  %157 = bitcast i32 %156 to float, !dbg !26
  %158 = extractvalue { i32, i32 } %35, 1, !dbg !24
  %159 = bitcast i32 %158 to float, !dbg !24
  %160 = extractvalue { i32, i32 } %35, 0, !dbg !24
  %161 = bitcast i32 %160 to float, !dbg !24
  %162 = fmul float %153, %.0.i, !dbg !35
  %163 = fmul float %148, %.0.i2, !dbg !35
  %164 = fmul float %162, %161, !dbg !36
  %165 = fmul float %163, %159, !dbg !36
  %166 = fadd float %164, %157, !dbg !37
  %167 = fadd float %165, %155, !dbg !37
  %168 = getelementptr float, ptr addrspace(1) %5, i64 %17, !dbg !38
  %169 = bitcast float %166 to i32, !dbg !39
  %170 = bitcast float %167 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %169, i32 %170, ptr addrspace(1) %168, i1 %14) #3, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwbbs65cgcivaylesc6e23t64dptddb7nowdkst6yogtf5smm2dd.py", directory: "inductor_cache/wb")
!4 = !{ptr @triton_poi_fused_gelu_native_layer_norm_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_gelu_native_layer_norm_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_gelu_native_layer_norm_1", linkageName: "triton_poi_fused_gelu_native_layer_norm_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 35, column: 18, scope: !7)
!28 = !DILocation(line: 36, column: 25, scope: !7)
!29 = !DILocation(line: 42, column: 20, scope: !7)
!30 = !DILocation(line: 43, column: 28, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 18, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 19, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 47, column: 25, scope: !7)
!39 = !DILocation(line: 47, column: 37, scope: !7)
!40 = !DILocation(line: 47, column: 4, scope: !7)
