//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_constant_pad_nd_21 // -- Begin function triton_poi_fused_constant_pad_nd_21
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_constant_pad_nd_21
.visible .entry triton_poi_fused_constant_pad_nd_21(
	.param .u64 .ptr .global .align 1 triton_poi_fused_constant_pad_nd_21_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_constant_pad_nd_21_param_1,
	.param .u32 triton_poi_fused_constant_pad_nd_21_param_2,
	.param .u32 triton_poi_fused_constant_pad_nd_21_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<118>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_constant_pad_nd_21_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_constant_pad_nd_21_param_1];
$L__tmp0:
	.loc	1 22 28                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:22:33
	shl.b32 	%r43, %r1, 5;
	.loc	1 23 44                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:23:44
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 2;
	and.b32  	%r46, %r45, 28;
	bfe.u32 	%r47, %r44, 3, 4;
	or.b32  	%r48, %r47, 16;
	.loc	1 23 23                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:23:23
	or.b32  	%r49, %r43, %r46;
	or.b32  	%r50, %r43, %r47;
	or.b32  	%r51, %r43, %r48;
	.loc	1 24 21                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:24:21
	setp.lt.s32 	%p21, %r49, 128;
	setp.lt.s32 	%p22, %r50, 128;
	setp.lt.s32 	%p23, %r51, 128;
	.loc	1 25 28                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:25:33
	shl.b32 	%r52, %r2, 5;
	.loc	1 26 23                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:26:23
	or.b32  	%r53, %r52, %r47;
	or.b32  	%r54, %r52, %r48;
	or.b32  	%r55, %r52, %r46;
	.loc	1 27 21                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:27:21
	setp.lt.s32 	%p24, %r55, 1024;
	.loc	1 28 19                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:28:19
	shr.s32 	%r57, %r53, 31;
	shr.u32 	%r58, %r57, 27;
	add.s32 	%r59, %r53, %r58;
	shr.s32 	%r60, %r59, 5;
	shr.s32 	%r62, %r54, 31;
	shr.u32 	%r63, %r62, 27;
	add.s32 	%r64, %r54, %r63;
	shr.s32 	%r65, %r64, 5;
	.loc	1 29 19                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:29:19
	and.b32  	%r66, %r59, -32;
	sub.s32 	%r67, %r53, %r66;
	and.b32  	%r68, %r64, -32;
	sub.s32 	%r69, %r54, %r68;
	.loc	1 31 19                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:31:19
	shr.s32 	%r71, %r49, 31;
	shr.u32 	%r72, %r71, 27;
	add.s32 	%r73, %r49, %r72;
	shr.s32 	%r74, %r73, 5;
	.loc	1 30 19                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:30:19
	and.b32  	%r75, %r73, -32;
	sub.s32 	%r76, %r49, %r75;
	.loc	1 36 18                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:36:18
	setp.lt.s32 	%p25, %r53, 992;
	setp.lt.s32 	%p26, %r54, 992;
	.loc	1 38 18                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:38:18
	setp.lt.s32 	%p27, %r67, 31;
	setp.lt.s32 	%p28, %r69, 31;
	.loc	1 39 18                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:39:18
	and.pred  	%p29, %p25, %p27;
	and.pred  	%p30, %p26, %p28;
	.loc	1 40 38                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:38
	shl.b32 	%r77, %r67, 5;
	shl.b32 	%r78, %r69, 5;
	.loc	1 40 35                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:35
	mad.lo.s32 	%r79, %r74, 30752, %r76;
	.loc	1 40 43                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:43
	add.s32 	%r80, %r79, %r77;
	.loc	1 40 52                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:52
	mad.lo.s32 	%r81, %r60, 992, %r80;
	.loc	1 40 43                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:43
	add.s32 	%r82, %r79, %r78;
	.loc	1 40 52                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:52
	mad.lo.s32 	%r83, %r65, 992, %r82;
	.loc	1 40 30                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:30
	mul.wide.s32 	%rd7, %r81, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mul.wide.s32 	%rd8, %r83, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 40 78                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:78
	and.pred  	%p1, %p21, %p29;
	and.pred  	%p6, %p21, %p30;
	mov.b32 	%r7, 0;
	.loc	1 40 63                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:40:63
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r20, %r7;
	@!%p1 mov.u32 %r22, %r7;
	@!%p1 mov.u32 %r24, %r7;
	@!%p1 mov.u32 %r26, %r7;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r28, %r7;
	@!%p6 mov.u32 %r30, %r7;
	@!%p6 mov.u32 %r32, %r7;
	@!%p6 mov.u32 %r34, %r7;
	// end inline asm
	.loc	1 41 35                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:35
	shl.b32 	%r84, %r50, 10;
	shl.b32 	%r85, %r51, 10;
	.loc	1 41 30                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:30
	add.s32 	%r86, %r55, %r84;
	add.s32 	%r87, %r55, %r85;
	.loc	1 41 25                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:25
	mul.wide.s32 	%rd9, %r86, 4;
	add.s64 	%rd3, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r87, 4;
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 41 54                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:54
	and.pred  	%p19, %p22, %p24;
	and.pred  	%p20, %p23, %p24;
	.loc	1 41 46                         // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:46
	shl.b32 	%r88, %r44, 7;
	and.b32  	%r89, %r88, 896;
	or.b32  	%r90, %r89, %r47;
	and.b32  	%r91, %r45, 508;
	shr.u32 	%r92, %r89, 3;
	mov.u32 	%r93, global_smem;
	add.s32 	%r94, %r93, %r92;
	shl.b32 	%r95, %r90, 2;
	add.s32 	%r19, %r94, %r95;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r96, %r89, 32;
	shr.u32 	%r97, %r96, 3;
	add.s32 	%r98, %r93, %r97;
	add.s32 	%r99, %r98, %r95;
	add.s32 	%r21, %r99, 128;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r100, %r89, 64;
	shr.u32 	%r101, %r100, 3;
	add.s32 	%r102, %r93, %r101;
	add.s32 	%r103, %r102, %r95;
	add.s32 	%r23, %r103, 256;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r104, %r89, 96;
	shr.u32 	%r105, %r104, 3;
	add.s32 	%r106, %r93, %r105;
	add.s32 	%r107, %r106, %r95;
	add.s32 	%r25, %r107, 384;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 64;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r99, 192;
	// begin inline asm
	@%p11 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r103, 320;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r107, 448;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r108, %r44, 1;
	and.b32  	%r109, %r108, 60;
	add.s32 	%r110, %r93, %r109;
	shl.b32 	%r111, %r91, 2;
	add.s32 	%r112, %r110, %r111;
	ld.shared.u32 	%r35, [%r112];
	ld.shared.u32 	%r36, [%r112+4];
	ld.shared.u32 	%r37, [%r112+8];
	ld.shared.u32 	%r38, [%r112+12];
	or.b32  	%r113, %r91, 512;
	shr.u32 	%r114, %r113, 3;
	and.b32  	%r115, %r114, 124;
	add.s32 	%r116, %r93, %r115;
	add.s32 	%r117, %r116, %r111;
	ld.shared.u32 	%r39, [%r117+2048];
	ld.shared.u32 	%r40, [%r117+2052];
	ld.shared.u32 	%r41, [%r117+2056];
	ld.shared.u32 	%r42, [%r117+2060];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd3 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd4 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	.loc	1 41 4                          // cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w5/cw5jxiualjzvaamvqtkkbh7sntquv2lqrw3tqulgbwv7be52gtal.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 53
.b8 106
.b8 120
.b8 105
.b8 117
.b8 97
.b8 108
.b8 106
.b8 122
.b8 118
.b8 97
.b8 97
.b8 109
.b8 118
.b8 113
.b8 116
.b8 107
.b8 107
.b8 98
.b8 104
.b8 55
.b8 115
.b8 110
.b8 116
.b8 113
.b8 117
.b8 118
.b8 50
.b8 108
.b8 113
.b8 114
.b8 119
.b8 51
.b8 116
.b8 113
.b8 117
.b8 108
.b8 103
.b8 98
.b8 119
.b8 118
.b8 55
.b8 98
.b8 101
.b8 53
.b8 50
.b8 103
.b8 116
.b8 97
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
