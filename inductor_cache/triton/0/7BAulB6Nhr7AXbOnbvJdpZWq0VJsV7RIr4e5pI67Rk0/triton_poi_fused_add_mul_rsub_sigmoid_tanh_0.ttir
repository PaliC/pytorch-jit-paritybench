#loc = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0)
module {
  tt.func public @triton_poi_fused_add_mul_rsub_sigmoid_tanh_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<12> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<256xi32> loc(#loc8)
    %8 = arith.addi %6, %cst_3 : tensor<256xi32> loc(#loc9)
    %9 = arith.muli %7, %cst_2 : tensor<256xi32> loc(#loc10)
    %10 = arith.addi %8, %9 : tensor<256xi32> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %13 = tt.load %12, %5 : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc16)
    %19 = tt.load %18, %5 : tensor<256x!tt.ptr<f32>> loc(#loc17)
    %20 = arith.addi %6, %9 : tensor<256xi32> loc(#loc18)
    %21 = tt.addptr %11, %20 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %22 = tt.load %21, %5 : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %14, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %25 = tt.addptr %17, %20 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %26 = tt.load %25, %5 : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %27 = arith.addi %6, %cst_1 : tensor<256xi32> loc(#loc25)
    %28 = arith.addi %27, %9 : tensor<256xi32> loc(#loc26)
    %29 = tt.addptr %11, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %30 = tt.load %29, %5 : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %31 = tt.addptr %14, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %33 = tt.addptr %17, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc31)
    %34 = tt.load %33, %5 : tensor<256x!tt.ptr<f32>> loc(#loc32)
    %35 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc33)
    %36 = tt.addptr %35, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc33)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc35)
    %39 = tt.addptr %38, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %40 = tt.load %39, %5 : tensor<256x!tt.ptr<f32>> loc(#loc36)
    %41 = arith.addf %13, %16 : tensor<256xf32> loc(#loc37)
    %42 = arith.addf %41, %19 : tensor<256xf32> loc(#loc38)
    %43 = arith.subf %cst, %42 : tensor<256xf32> loc(#loc65)
    %44 = math.exp %43 : tensor<256xf32> loc(#loc66)
    %45 = arith.addf %44, %cst_0 : tensor<256xf32> loc(#loc67)
    %46 = arith.divf %cst_0, %45 : tensor<256xf32> loc(#loc68)
    %47 = arith.addf %22, %24 : tensor<256xf32> loc(#loc44)
    %48 = arith.addf %47, %26 : tensor<256xf32> loc(#loc45)
    %49 = arith.subf %cst, %48 : tensor<256xf32> loc(#loc69)
    %50 = math.exp %49 : tensor<256xf32> loc(#loc70)
    %51 = arith.addf %50, %cst_0 : tensor<256xf32> loc(#loc71)
    %52 = arith.divf %cst_0, %51 : tensor<256xf32> loc(#loc72)
    %53 = arith.addf %30, %32 : tensor<256xf32> loc(#loc47)
    %54 = arith.mulf %52, %34 : tensor<256xf32> loc(#loc48)
    %55 = arith.addf %53, %54 : tensor<256xf32> loc(#loc49)
    %56 = tt.extern_elementwise %55 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc50)
    %57 = arith.mulf %37, %46 : tensor<256xf32> loc(#loc51)
    %58 = arith.subf %cst_0, %57 : tensor<256xf32> loc(#loc52)
    %59 = arith.mulf %58, %40 : tensor<256xf32> loc(#loc53)
    %60 = arith.mulf %57, %56 : tensor<256xf32> loc(#loc54)
    %61 = arith.addf %59, %60 : tensor<256xf32> loc(#loc55)
    %62 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc56)
    %63 = tt.addptr %62, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc56)
    tt.store %63, %46, %5 : tensor<256x!tt.ptr<f32>> loc(#loc57)
    %64 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc58)
    %65 = tt.addptr %64, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc58)
    tt.store %65, %52, %5 : tensor<256x!tt.ptr<f32>> loc(#loc59)
    %66 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc60)
    %67 = tt.addptr %66, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc60)
    tt.store %67, %56, %5 : tensor<256x!tt.ptr<f32>> loc(#loc61)
    %68 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc62)
    %69 = tt.addptr %68, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc62)
    tt.store %69, %61, %5 : tensor<256x!tt.ptr<f32>> loc(#loc63)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":21:28)
#loc3 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":21:33)
#loc4 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":22:36)
#loc5 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":22:23)
#loc6 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":23:21)
#loc7 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":24:19)
#loc8 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":25:19)
#loc9 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":27:34)
#loc10 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":27:42)
#loc11 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":27:39)
#loc12 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":27:30)
#loc13 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":27:47)
#loc14 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":28:30)
#loc15 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":28:39)
#loc16 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":29:30)
#loc17 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":29:47)
#loc18 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":30:35)
#loc19 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":30:30)
#loc20 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":30:43)
#loc21 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":31:30)
#loc22 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":31:35)
#loc23 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":32:30)
#loc24 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":32:43)
#loc25 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":33:35)
#loc26 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":33:40)
#loc27 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":33:31)
#loc28 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":33:48)
#loc29 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":34:31)
#loc30 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":34:40)
#loc31 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":35:31)
#loc32 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":35:48)
#loc33 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":36:31)
#loc34 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":36:36)
#loc35 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":37:31)
#loc36 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":37:36)
#loc37 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":38:18)
#loc38 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":39:18)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc40 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":40:22)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc44 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":41:18)
#loc45 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":42:19)
#loc46 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":43:23)
#loc47 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":44:20)
#loc48 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":45:20)
#loc49 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":46:20)
#loc50 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":47:27)
#loc51 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":48:20)
#loc52 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":50:20)
#loc53 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":51:20)
#loc54 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":52:20)
#loc55 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":53:20)
#loc56 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":54:25)
#loc57 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":54:36)
#loc58 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":55:25)
#loc59 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":55:37)
#loc60 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":56:25)
#loc61 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":56:37)
#loc62 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":57:25)
#loc63 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":57:37)
#loc64 = loc("inductor_cache/yp/cyp6glbeypaq2nan2sljk5d7f3kuyqebaz7nasway27xscbtqpgk.py":57:4)
#loc65 = loc(callsite(#loc39 at #loc40))
#loc66 = loc(callsite(#loc41 at #loc40))
#loc67 = loc(callsite(#loc42 at #loc40))
#loc68 = loc(callsite(#loc43 at #loc40))
#loc69 = loc(callsite(#loc39 at #loc46))
#loc70 = loc(callsite(#loc41 at #loc46))
#loc71 = loc(callsite(#loc42 at #loc46))
#loc72 = loc(callsite(#loc43 at #loc46))
