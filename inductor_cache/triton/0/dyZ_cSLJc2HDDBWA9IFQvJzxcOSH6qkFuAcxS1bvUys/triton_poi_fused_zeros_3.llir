; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_zeros_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !13
  %12 = or disjoint i32 %7, %10, !dbg !14
  %13 = or disjoint i32 %12, 1, !dbg !14
  %14 = icmp slt i32 %12, 144, !dbg !15
  %15 = srem i32 %12, 36, !dbg !16
  %16 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !17
  %17 = insertelement <2 x i32> %16, i32 %12, i64 1, !dbg !17
  %18 = sdiv <2 x i32> %17, splat (i32 9), !dbg !17
  %19 = srem <2 x i32> %18, splat (i32 4), !dbg !18
  %20 = shufflevector <2 x i32> %19, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !18
  %21 = srem i32 %12, 9, !dbg !19
  %22 = srem i32 %13, 9, !dbg !19
  %23 = sext i32 %15 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %14) #1, !dbg !21
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !21
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #1, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = sext i32 %21 to i64, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !23
  %32 = getelementptr i8, ptr addrspace(1) %31, i64 36, !dbg !23
  %33 = sext i32 %22 to i64, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !23
  %35 = getelementptr i8, ptr addrspace(1) %34, i64 36, !dbg !23
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %14) #1, !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %14) #1, !dbg !24
  %39 = bitcast i32 %38 to float, !dbg !24
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !25
  %41 = bitcast i32 %40 to float, !dbg !25
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %14) #1, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %14) #1, !dbg !26
  %45 = bitcast i32 %44 to float, !dbg !26
  %.off = add i32 %12, -72, !dbg !27
  %46 = icmp ult i32 %.off, 36, !dbg !27
  %.off1 = add i32 %12, -36, !dbg !28
  %47 = icmp ult i32 %.off1, 36, !dbg !28
  %48 = fmul float %29, %37, !dbg !29
  %49 = fmul float %29, %39, !dbg !29
  %50 = icmp eq <4 x i32> %20, <i32 0, i32 0, i32 1, i32 1>, !dbg !30
  %51 = fmul float %41, %43, !dbg !31
  %52 = fmul float %41, %45, !dbg !31
  %53 = extractelement <4 x i1> %50, i64 3, !dbg !32
  %54 = select i1 %53, float %48, float 0.000000e+00, !dbg !32
  %55 = extractelement <4 x i1> %50, i64 2, !dbg !32
  %56 = select i1 %55, float %49, float 0.000000e+00, !dbg !32
  %.off2 = add i32 %12, 35, !dbg !33
  %57 = icmp ult i32 %.off2, 71, !dbg !33
  %58 = extractelement <4 x i1> %50, i64 1, !dbg !34
  %59 = select i1 %57, i1 %58, i1 false, !dbg !34
  %60 = select i1 %59, float %51, float 0.000000e+00, !dbg !34
  %61 = extractelement <4 x i1> %50, i64 0, !dbg !34
  %62 = select i1 %57, i1 %61, i1 false, !dbg !34
  %63 = select i1 %62, float %52, float 0.000000e+00, !dbg !34
  %64 = select i1 %47, float %54, float %60, !dbg !35
  %65 = select i1 %47, float %56, float %63, !dbg !35
  %66 = sext i32 %12 to i64, !dbg !36
  %67 = getelementptr float, ptr addrspace(1) %3, i64 %66, !dbg !36
  %68 = bitcast float %64 to i32, !dbg !37
  %69 = select i1 %46, i32 %26, i32 %68, !dbg !38
  %70 = bitcast float %65 to i32, !dbg !37
  %71 = select i1 %46, i32 %27, i32 %70, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %69, i32 %71, ptr addrspace(1) %67, i1 %14) #1, !dbg !37
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c37dmpguh2547wt57ufbjt6p2i3vidzcpknoco4t7ejeuuvq73xe.py", directory: "inductor_cache/37")
!4 = !{ptr @triton_poi_fused_zeros_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_zeros_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_zeros_3", linkageName: "triton_poi_fused_zeros_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 30, column: 30, scope: !7)
!14 = !DILocation(line: 22, column: 23, scope: !7)
!15 = !DILocation(line: 23, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 31, scope: !7)
!24 = !DILocation(line: 32, column: 40, scope: !7)
!25 = !DILocation(line: 33, column: 20, scope: !7)
!26 = !DILocation(line: 35, column: 36, scope: !7)
!27 = !DILocation(line: 38, column: 19, scope: !7)
!28 = !DILocation(line: 40, column: 19, scope: !7)
!29 = !DILocation(line: 43, column: 19, scope: !7)
!30 = !DILocation(line: 46, column: 20, scope: !7)
!31 = !DILocation(line: 47, column: 20, scope: !7)
!32 = !DILocation(line: 51, column: 34, scope: !7)
!33 = !DILocation(line: 52, column: 20, scope: !7)
!34 = !DILocation(line: 53, column: 35, scope: !7)
!35 = !DILocation(line: 54, column: 34, scope: !7)
!36 = !DILocation(line: 56, column: 25, scope: !7)
!37 = !DILocation(line: 56, column: 37, scope: !7)
!38 = !DILocation(line: 55, column: 33, scope: !7)
!39 = !DILocation(line: 56, column: 4, scope: !7)
