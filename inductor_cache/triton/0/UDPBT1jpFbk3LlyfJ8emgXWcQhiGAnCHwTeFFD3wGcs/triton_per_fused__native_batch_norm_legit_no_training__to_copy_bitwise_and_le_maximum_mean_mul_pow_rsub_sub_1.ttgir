#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0)
#loc1 = loc(unknown)
#loc40 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":61:59)
#loc56 = loc(callsite(#loc1 at #loc40))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training__to_copy_bitwise_and_le_maximum_mean_mul_pow_rsub_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg8: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_3 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = arith.divsi %0, %cst_4 : tensor<256xi32, #blocked> loc(#loc3)
    %2 = arith.remsi %1, %cst_5 : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc5)
    %4 = tt.addptr %3, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc5)
    %5 = tt.load %4 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %2 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.addptr %9, %2 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = tt.addptr %12, %2 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %15 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc13)
    %16 = tt.addptr %15, %2 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc13)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %18 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %19 = tt.addptr %18, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc15)
    %20 = tt.load %19 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %21 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %22 = tt.addptr %21, %2 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc17)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %24 = arith.subf %5, %8 : tensor<256xf32, #blocked> loc(#loc19)
    %25 = arith.addf %11, %cst : tensor<256xf32, #blocked> loc(#loc20)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc21)
    %27 = arith.divf %cst_0, %26 : tensor<256xf32, #blocked> loc(#loc22)
    %28 = arith.mulf %24, %27 : tensor<256xf32, #blocked> loc(#loc23)
    %29 = arith.mulf %28, %14 : tensor<256xf32, #blocked> loc(#loc24)
    %30 = arith.addf %29, %17 : tensor<256xf32, #blocked> loc(#loc25)
    %31 = arith.cmpf ogt, %20, %23 : tensor<256xf32, #blocked> loc(#loc51)
    %32 = arith.cmpf une, %20, %20 : tensor<256xf32, #blocked> loc(#loc52)
    %33 = arith.ori %31, %32 : tensor<256xi1, #blocked> loc(#loc53)
    %34 = arith.select %33, %20, %23 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc54)
    %35 = arith.cmpf ole, %30, %34 : tensor<256xf32, #blocked> loc(#loc31)
    %36 = arith.cmpf ole, %34, %cst_1 : tensor<256xf32, #blocked> loc(#loc32)
    %37 = arith.andi %35, %36 : tensor<256xi1, #blocked> loc(#loc33)
    %38 = arith.subf %30, %34 : tensor<256xf32, #blocked> loc(#loc34)
    %39 = arith.mulf %38, %38 : tensor<256xf32, #blocked> loc(#loc35)
    %40 = arith.uitofp %37 : tensor<256xi1, #blocked> to tensor<256xf32, #blocked> loc(#loc36)
    %41 = arith.subf %cst_0, %40 : tensor<256xf32, #blocked> loc(#loc37)
    %42 = arith.mulf %39, %41 : tensor<256xf32, #blocked> loc(#loc38)
    %43 = "tt.reduce"(%42) <{axis = 0 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc40)), %arg11: f32 loc(callsite(#loc1 at #loc40))):
      %53 = arith.addf %arg10, %arg11 : f32 loc(#loc59)
      tt.reduce.return %53 : f32 loc(#loc55)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc55)
    %44 = arith.addf %43, %cst_2 : f32 loc(#loc58)
    %45 = arith.divf %44, %cst_3 : f32 loc(#loc44)
    %46 = tt.splat %45 : f32 -> tensor<1xf32, #blocked1> loc(#loc44)
    %47 = tt.splat %arg8 : !tt.ptr<i1> -> tensor<256x!tt.ptr<i1>, #blocked> loc(#loc45)
    %48 = tt.addptr %47, %0 : tensor<256x!tt.ptr<i1>, #blocked>, tensor<256xi32, #blocked> loc(#loc45)
    %49 = tt.bitcast %48 : tensor<256x!tt.ptr<i1>, #blocked> -> tensor<256x!tt.ptr<i8>, #blocked> loc(#loc46)
    %50 = arith.extui %37 : tensor<256xi1, #blocked> to tensor<256xi8, #blocked> loc(#loc46)
    tt.store %49, %50 : tensor<256x!tt.ptr<i8>, #blocked> loc(#loc46)
    gpu.barrier loc(#loc47)
    %51 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc48)
    %52 = tt.splat %51 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc48)
    tt.store %52, %46 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":27:26)
#loc3 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":31:21)
#loc4 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":31:27)
#loc5 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":32:30)
#loc6 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":32:35)
#loc7 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":33:30)
#loc8 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":33:35)
#loc9 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":34:30)
#loc10 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":34:35)
#loc11 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":35:31)
#loc12 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":35:36)
#loc13 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":36:31)
#loc14 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":36:36)
#loc15 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":37:31)
#loc16 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":37:36)
#loc17 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":38:31)
#loc18 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":38:36)
#loc19 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":39:18)
#loc20 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":41:18)
#loc21 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":42:26)
#loc22 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":44:18)
#loc23 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":47:19)
#loc24 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":48:20)
#loc25 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":49:20)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc27 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":50:42)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc31 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":51:21)
#loc32 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":53:21)
#loc33 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":54:20)
#loc34 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":55:20)
#loc35 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":56:20)
#loc36 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":57:21)
#loc37 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":58:19)
#loc38 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":59:20)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc43 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":61:45)
#loc44 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":63:20)
#loc45 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":64:25)
#loc46 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":64:64)
#loc47 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":65:4)
#loc48 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":66:28)
#loc49 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":66:63)
#loc50 = loc("inductor_cache/dy/cdy6v7jexh3hbtc7h2ed6usfvzholsrnixtiphpsoqhgaeakducz.py":66:4)
#loc51 = loc(callsite(#loc26 at #loc27))
#loc52 = loc(callsite(#loc28 at #loc27))
#loc53 = loc(callsite(#loc29 at #loc27))
#loc54 = loc(callsite(#loc30 at #loc27))
#loc55 = loc(callsite(#loc39 at #loc40))
#loc57 = loc(callsite(#loc41 at #loc39))
#loc58 = loc(callsite(#loc42 at #loc43))
#loc59 = loc(callsite(#loc57 at #loc40))
