; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 576, !dbg !14
  %10 = sdiv i32 %8, 6, !dbg !15
  %.frozen = freeze i32 %8, !dbg !16
  %11 = sdiv i32 %.frozen, 36, !dbg !16
  %12 = mul i32 %11, 36, !dbg !17
  %.decomposed = sub i32 %.frozen, %12, !dbg !17
  %13 = shl nsw i32 %11, 4, !dbg !18
  %14 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !19
  %15 = insertelement <2 x i32> %14, i32 %10, i64 1, !dbg !19
  %16 = srem <2 x i32> %15, splat (i32 6), !dbg !19
  %17 = trunc nsw <2 x i32> %16 to <2 x i8>, !dbg !20
  %18 = shl nsw <2 x i8> %17, splat (i8 1), !dbg !20
  %19 = sdiv <2 x i8> %18, splat (i8 3), !dbg !20
  %20 = shl nsw <2 x i8> %17, splat (i8 2), !dbg !21
  %21 = add nsw <2 x i8> %20, splat (i8 9), !dbg !21
  %22 = sdiv <2 x i8> %21, splat (i8 6), !dbg !21
  %23 = sext <2 x i8> %19 to <2 x i32>, !dbg !20
  %24 = icmp slt <2 x i8> %19, %22, !dbg !22
  %25 = extractelement <2 x i1> %24, i64 0, !dbg !23
  %26 = extractelement <2 x i1> %24, i64 1, !dbg !23
  %27 = and i1 %25, %26, !dbg !23
  %28 = extractelement <2 x i32> %23, i64 1, !dbg !24
  %29 = shl nsw i32 %28, 2, !dbg !24
  %30 = extractelement <2 x i32> %23, i64 0, !dbg !25
  %31 = add nsw i32 %13, %30, !dbg !25
  %32 = add nsw i32 %31, %29, !dbg !26
  %33 = sext i32 %32 to i64, !dbg !27
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !27
  %35 = and i1 %9, %27, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #1, !dbg !29
  %37 = bitcast i32 %36 to float, !dbg !29
  %38 = add nsw <2 x i32> %23, splat (i32 1), !dbg !30
  %39 = sext <2 x i8> %22 to <2 x i32>, !dbg !31
  %40 = icmp slt <2 x i32> %38, %39, !dbg !31
  %41 = extractelement <2 x i1> %40, i64 0, !dbg !32
  %42 = and i1 %26, %41, !dbg !33
  %43 = add nsw i32 %31, 1, !dbg !34
  %44 = add nsw i32 %43, %29, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !36
  %47 = and i1 %9, %42, !dbg !37
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %47, i32 0, i1 %47) #1, !dbg !38
  %49 = bitcast i32 %48 to float, !dbg !38
  %50 = fadd float %37, %49, !dbg !39
  %51 = extractelement <2 x i1> %40, i64 1, !dbg !32
  %52 = and i1 %25, %51, !dbg !40
  %53 = add nsw i32 %31, 4, !dbg !41
  %54 = add nsw i32 %53, %29, !dbg !42
  %55 = sext i32 %54 to i64, !dbg !43
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !43
  %57 = and i1 %9, %52, !dbg !44
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57) #1, !dbg !45
  %59 = bitcast i32 %58 to float, !dbg !45
  %60 = fadd float %50, %59, !dbg !46
  %61 = and i1 %41, %51, !dbg !32
  %62 = add nsw i32 %31, 5, !dbg !47
  %63 = add nsw i32 %62, %29, !dbg !48
  %64 = sext i32 %63 to i64, !dbg !49
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !49
  %66 = and i1 %9, %61, !dbg !50
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %66, i32 0, i1 %66) #1, !dbg !51
  %68 = bitcast i32 %67 to float, !dbg !51
  %69 = fadd float %60, %68, !dbg !52
  %70 = select i1 %27, float 1.000000e+00, float 0.000000e+00, !dbg !53
  %71 = select i1 %42, float 1.000000e+00, float 0.000000e+00, !dbg !54
  %72 = fadd float %71, %70, !dbg !55
  %73 = select i1 %52, float 1.000000e+00, float 0.000000e+00, !dbg !56
  %74 = fadd float %73, %72, !dbg !57
  %75 = select i1 %61, float 1.000000e+00, float 0.000000e+00, !dbg !58
  %76 = fadd float %75, %74, !dbg !59
  %77 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %69, float %76) #1, !dbg !60
  %78 = mul i32 %11, 110, !dbg !61
  %79 = add i32 %78, %.decomposed, !dbg !62
  %80 = sext i32 %79 to i64, !dbg !63
  %81 = getelementptr float, ptr addrspace(1) %1, i64 %80, !dbg !63
  %82 = bitcast float %77 to i32, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %81, i1 %9) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cghaasgtdlx5m2bo7jfnvvzltmrc5r3p5jxpssqhadds3h3cnzga.py", directory: "inductor_cache/gh")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_cat_2", linkageName: "triton_poi_fused__adaptive_avg_pool2d_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 36, column: 51, scope: !7)
!19 = !DILocation(line: 25, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 21, scope: !7)
!21 = !DILocation(line: 33, column: 25, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 36, column: 33, scope: !7)
!25 = !DILocation(line: 36, column: 48, scope: !7)
!26 = !DILocation(line: 36, column: 57, scope: !7)
!27 = !DILocation(line: 36, column: 30, scope: !7)
!28 = !DILocation(line: 36, column: 79, scope: !7)
!29 = !DILocation(line: 36, column: 72, scope: !7)
!30 = !DILocation(line: 37, column: 16, scope: !7)
!31 = !DILocation(line: 38, column: 18, scope: !7)
!32 = !DILocation(line: 47, column: 20, scope: !7)
!33 = !DILocation(line: 39, column: 19, scope: !7)
!34 = !DILocation(line: 40, column: 53, scope: !7)
!35 = !DILocation(line: 40, column: 62, scope: !7)
!36 = !DILocation(line: 40, column: 31, scope: !7)
!37 = !DILocation(line: 40, column: 85, scope: !7)
!38 = !DILocation(line: 40, column: 77, scope: !7)
!39 = !DILocation(line: 41, column: 20, scope: !7)
!40 = !DILocation(line: 44, column: 20, scope: !7)
!41 = !DILocation(line: 45, column: 53, scope: !7)
!42 = !DILocation(line: 45, column: 62, scope: !7)
!43 = !DILocation(line: 45, column: 31, scope: !7)
!44 = !DILocation(line: 45, column: 85, scope: !7)
!45 = !DILocation(line: 45, column: 77, scope: !7)
!46 = !DILocation(line: 46, column: 20, scope: !7)
!47 = !DILocation(line: 48, column: 53, scope: !7)
!48 = !DILocation(line: 48, column: 62, scope: !7)
!49 = !DILocation(line: 48, column: 31, scope: !7)
!50 = !DILocation(line: 48, column: 85, scope: !7)
!51 = !DILocation(line: 48, column: 77, scope: !7)
!52 = !DILocation(line: 49, column: 20, scope: !7)
!53 = !DILocation(line: 52, column: 34, scope: !7)
!54 = !DILocation(line: 55, column: 35, scope: !7)
!55 = !DILocation(line: 56, column: 20, scope: !7)
!56 = !DILocation(line: 59, column: 35, scope: !7)
!57 = !DILocation(line: 60, column: 20, scope: !7)
!58 = !DILocation(line: 63, column: 35, scope: !7)
!59 = !DILocation(line: 64, column: 20, scope: !7)
!60 = !DILocation(line: 65, column: 20, scope: !7)
!61 = !DILocation(line: 66, column: 34, scope: !7)
!62 = !DILocation(line: 66, column: 30, scope: !7)
!63 = !DILocation(line: 66, column: 25, scope: !7)
!64 = !DILocation(line: 66, column: 46, scope: !7)
!65 = !DILocation(line: 66, column: 4, scope: !7)
