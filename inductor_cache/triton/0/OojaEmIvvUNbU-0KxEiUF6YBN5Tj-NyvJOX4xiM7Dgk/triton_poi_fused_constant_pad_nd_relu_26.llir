; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_relu_26(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %13 = sdiv i32 %.frozen, 6, !dbg !14
  %.frozen1 = freeze i32 %11, !dbg !14
  %14 = sdiv i32 %.frozen1, 6, !dbg !14
  %15 = srem i32 %13, 5, !dbg !15
  %16 = srem i32 %14, 5, !dbg !15
  %17 = mul i32 %13, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = srem i32 %10, 6, !dbg !16
  %19 = mul i32 %14, 6, !dbg !16
  %.decomposed2 = sub i32 %.frozen1, %19, !dbg !16
  %20 = srem i32 %12, 6, !dbg !16
  %21 = sdiv i32 %9, 30, !dbg !17
  %22 = sdiv i32 %11, 30, !dbg !17
  %23 = icmp sgt i32 %15, 0, !dbg !18
  %24 = icmp sgt i32 %16, 0, !dbg !18
  %25 = add nsw i32 %.decomposed, -1, !dbg !19
  %26 = icmp ult i32 %25, 4, !dbg !19
  %27 = and i1 %23, %26, !dbg !19
  %28 = icmp ult i32 %18, 5, !dbg !19
  %29 = and i1 %28, %23, !dbg !19
  %30 = add nsw i32 %.decomposed2, -1, !dbg !19
  %31 = icmp ult i32 %30, 4, !dbg !19
  %32 = and i1 %24, %31, !dbg !19
  %33 = icmp ult i32 %20, 5, !dbg !19
  %34 = and i1 %33, %24, !dbg !19
  %35 = shl nsw i32 %15, 2, !dbg !20
  %36 = shl nsw i32 %16, 2, !dbg !20
  %37 = shl nsw i32 %21, 4, !dbg !21
  %38 = shl nsw i32 %22, 4, !dbg !21
  %39 = add nsw i32 %37, -5, !dbg !22
  %40 = add nsw i32 %39, %.decomposed, !dbg !23
  %41 = add nsw i32 %40, %35, !dbg !24
  %42 = add nsw i32 %39, %18, !dbg !23
  %43 = add nsw i32 %42, %35, !dbg !24
  %44 = add nsw i32 %38, -5, !dbg !22
  %45 = add nsw i32 %44, %.decomposed2, !dbg !23
  %46 = add nsw i32 %45, %36, !dbg !24
  %47 = add nsw i32 %44, %20, !dbg !23
  %48 = add nsw i32 %47, %36, !dbg !24
  %49 = sext i32 %41 to i64, !dbg !25
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !25
  %51 = sext i32 %43 to i64, !dbg !25
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !25
  %53 = sext i32 %46 to i64, !dbg !25
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !25
  %55 = sext i32 %48 to i64, !dbg !25
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !25
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %27, i32 0, i1 %27) #1, !dbg !26
  %58 = bitcast i32 %57 to float, !dbg !26
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %29, i32 0, i1 %29) #1, !dbg !26
  %60 = bitcast i32 %59 to float, !dbg !26
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %32, i32 0, i1 %32) #1, !dbg !26
  %62 = bitcast i32 %61 to float, !dbg !26
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %34, i32 0, i1 %34) #1, !dbg !26
  %64 = bitcast i32 %63 to float, !dbg !26
  %65 = fcmp olt float %58, 0.000000e+00, !dbg !27
  %66 = fcmp olt float %60, 0.000000e+00, !dbg !27
  %67 = fcmp olt float %62, 0.000000e+00, !dbg !27
  %68 = fcmp olt float %64, 0.000000e+00, !dbg !27
  %69 = select i1 %65, float 0.000000e+00, float %58, !dbg !31
  %70 = select i1 %66, float 0.000000e+00, float %60, !dbg !31
  %71 = select i1 %67, float 0.000000e+00, float %62, !dbg !31
  %72 = select i1 %68, float 0.000000e+00, float %64, !dbg !31
  %73 = sext i32 %9 to i64, !dbg !32
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !32
  %75 = bitcast float %69 to i32, !dbg !33
  %76 = select i1 %27, i32 %75, i32 0, !dbg !34
  %77 = bitcast float %70 to i32, !dbg !33
  %78 = select i1 %29, i32 %77, i32 0, !dbg !34
  %79 = bitcast float %71 to i32, !dbg !33
  %80 = select i1 %32, i32 %79, i32 0, !dbg !34
  %81 = bitcast float %72 to i32, !dbg !33
  %82 = select i1 %34, i32 %81, i32 0, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %76, i32 %78, i32 %80, i32 %82, ptr addrspace(1) %74, i1 true) #1, !dbg !33
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c25csxgjhvwmpknoxssyv6c5zj3ucox6li7dfg7xy475qugegui7.py", directory: "inductor_cache/25")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_relu_26, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_relu_26, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_relu_26", linkageName: "triton_poi_fused_constant_pad_nd_relu_26", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 36, column: 18, scope: !7)
!20 = !DILocation(line: 37, column: 44, scope: !7)
!21 = !DILocation(line: 37, column: 52, scope: !7)
!22 = !DILocation(line: 37, column: 37, scope: !7)
!23 = !DILocation(line: 37, column: 42, scope: !7)
!24 = !DILocation(line: 37, column: 49, scope: !7)
!25 = !DILocation(line: 37, column: 30, scope: !7)
!26 = !DILocation(line: 37, column: 57, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 39, column: 42, scope: !7)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 42, column: 25, scope: !7)
!33 = !DILocation(line: 42, column: 37, scope: !7)
!34 = !DILocation(line: 41, column: 34, scope: !7)
!35 = !DILocation(line: 42, column: 4, scope: !7)
