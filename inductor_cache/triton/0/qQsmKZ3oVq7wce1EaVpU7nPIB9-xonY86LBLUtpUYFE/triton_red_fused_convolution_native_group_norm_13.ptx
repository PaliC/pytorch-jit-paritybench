//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_convolution_native_group_norm_13 // -- Begin function triton_red_fused_convolution_native_group_norm_13
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_convolution_native_group_norm_13
.visible .entry triton_red_fused_convolution_native_group_norm_13(
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_group_norm_13_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_group_norm_13_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_group_norm_13_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_group_norm_13_param_3,
	.param .u32 triton_red_fused_convolution_native_group_norm_13_param_4,
	.param .u32 triton_red_fused_convolution_native_group_norm_13_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<241>;
	.reg .b64 	%rd<43>;
	.loc	1 19 0                          // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_red_fused_convolution_native_group_norm_13_param_3];
	ld.param.u64 	%rd10, [triton_red_fused_convolution_native_group_norm_13_param_2];
	ld.param.u64 	%rd9, [triton_red_fused_convolution_native_group_norm_13_param_1];
	ld.param.u64 	%rd13, [triton_red_fused_convolution_native_group_norm_13_param_0];
$L__tmp0:
	.loc	1 22 28                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:22:28
	// begin inline asm
	mov.u32 %r16, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:25:33
	mov.u32 	%r2, %tid.x;
	and.b32  	%r17, %r2, 511;
	or.b32  	%r18, %r17, 512;
	or.b32  	%r19, %r17, 1024;
	or.b32  	%r20, %r17, 1536;
	shl.b32 	%r21, %r2, 2;
	and.b32  	%r22, %r21, 2044;
	.loc	1 27 19                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:27:19
	shr.s32 	%r23, %r16, 31;
	shr.u32 	%r24, %r23, 29;
	add.s32 	%r25, %r16, %r24;
	and.b32  	%r26, %r25, 67108856;
	sub.s32 	%r27, %r16, %r26;
	.loc	1 36 48                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:36:48
	shl.b32 	%r28, %r16, 12;
	.loc	1 37 42                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:37:42
	shl.b32 	%r29, %r27, 6;
	or.b32  	%r30, %r28, %r22;
	shl.b32 	%r31, %r22, 3;
	mov.u32 	%r32, global_smem;
	add.s32 	%r47, %r32, %r31;
	add.s32 	%r49, %r47, 8;
	add.s32 	%r51, %r47, 16;
	add.s32 	%r53, %r47, 24;
	shl.b32 	%r33, %r17, 3;
	add.s32 	%r7, %r32, %r33;
	shl.b32 	%r34, %r18, 3;
	add.s32 	%r8, %r32, %r34;
	shl.b32 	%r35, %r19, 3;
	add.s32 	%r9, %r32, %r35;
	shl.b32 	%r36, %r20, 3;
	add.s32 	%r10, %r32, %r36;
	cvt.u64.u32 	%rd1, %r17;
	shl.b32 	%r37, %r17, 2;
	add.s32 	%r75, %r32, %r37;
	add.s32 	%r77, %r75, 2048;
	add.s32 	%r79, %r75, 4096;
	add.s32 	%r81, %r75, 6144;
	shl.b32 	%r38, %r22, 2;
	add.s32 	%r15, %r32, %r38;
	.loc	1 31 36                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:31:36
	cvt.u64.u32 	%rd2, %r20;
	cvt.s64.s32 	%rd3, %r29;
	cvt.u64.u32 	%rd4, %r19;
	cvt.u64.u32 	%rd5, %r18;
	mul.wide.s32 	%rd14, %r30, 4;
	add.s64 	%rd6, %rd13, %rd14;
	mov.f32 	%f53, 0f00000000;
	mov.u64 	%rd42, 0;
	mov.pred 	%p8, -1;
	setp.lt.s32 	%p3, %r16, 2048;
	mov.f32 	%f55, 0f3F800000;
	mov.pred 	%p52, %p8;
	mov.f32 	%f217, %f53;
	mov.f32 	%f218, %f53;
	mov.f32 	%f219, %f53;
	mov.f32 	%f220, %f53;
	mov.f32 	%f221, %f53;
	mov.f32 	%f222, %f53;
	mov.f32 	%f223, %f53;
	mov.f32 	%f224, %f53;
	mov.f32 	%f225, %f53;
	mov.f32 	%f226, %f53;
	mov.f32 	%f227, %f53;
	mov.f32 	%f228, %f53;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 43 60                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:43:60
	selp.f32 	%f225, %f233, %f225, %p3;
	selp.f32 	%f226, %f234, %f226, %p3;
	selp.f32 	%f227, %f235, %f227, %p3;
	selp.f32 	%f228, %f236, %f228, %p3;
	.loc	1 44 56                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:44:56
	selp.f32 	%f221, %f229, %f221, %p3;
	selp.f32 	%f222, %f230, %f222, %p3;
	selp.f32 	%f223, %f231, %f223, %p3;
	selp.f32 	%f224, %f232, %f224, %p3;
	.loc	1 45 64                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:45:64
	selp.f32 	%f217, %f237, %f217, %p3;
	selp.f32 	%f218, %f238, %f218, %p3;
	selp.f32 	%f219, %f239, %f219, %p3;
	selp.f32 	%f220, %f240, %f220, %p3;
	.loc	1 46 53                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:46:53
	bar.sync 	0;
	mov.b32 	%r76, %f13;
	mov.pred 	%p20, -1;
	// begin inline asm
	@%p20 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	mov.b32 	%r78, %f14;
	// begin inline asm
	@%p20 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	mov.b32 	%r80, %f15;
	// begin inline asm
	@%p20 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	mov.b32 	%r82, %f16;
	// begin inline asm
	@%p20 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r83, %r84, %r85, %r86}, [%r15];
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd37 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	mov.u64 	%rd42, 2048;
	mov.pred 	%p52, 0;
	.loc	1 31 36                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:31:36
	@%p1 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:0:36
	mov.pred 	%p1, %p52;
	.loc	1 32 27                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:32:27
	or.b64  	%rd20, %rd42, %rd1;
	or.b64  	%rd21, %rd42, %rd5;
	or.b64  	%rd22, %rd42, %rd4;
	or.b64  	%rd23, %rd42, %rd2;
	.loc	1 35 23                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:35:23
	shr.u64 	%rd24, %rd20, 6;
	shr.u64 	%rd25, %rd21, 6;
	shr.u64 	%rd26, %rd22, 6;
	shr.u64 	%rd27, %rd23, 6;
	.loc	1 36 38                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:36:38
	shl.b64 	%rd28, %rd42, 2;
	add.s64 	%rd37, %rd6, %rd28;
	mov.b32 	%r43, 0;
	.loc	1 36 53                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:36:53
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd37 + 0 ];
	@!%p3 mov.u32 %r39, %r43;
	@!%p3 mov.u32 %r40, %r43;
	@!%p3 mov.u32 %r41, %r43;
	@!%p3 mov.u32 %r42, %r43;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 st.shared.b32 [ %r47 + 0 ], %r39;
	// end inline asm
	// begin inline asm
	@%p8 st.shared.b32 [ %r49 + 0 ], %r40;
	// end inline asm
	// begin inline asm
	@%p8 st.shared.b32 [ %r51 + 0 ], %r41;
	// end inline asm
	// begin inline asm
	@%p8 st.shared.b32 [ %r53 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f56, [%r7];
	ld.shared.f32 	%f57, [%r8];
	ld.shared.f32 	%f58, [%r9];
	ld.shared.f32 	%f59, [%r10];
	.loc	1 37 39                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:37:39
	or.b64  	%rd29, %rd24, %rd3;
	or.b64  	%rd30, %rd25, %rd3;
	or.b64  	%rd31, %rd26, %rd3;
	or.b64  	%rd32, %rd27, %rd3;
	.loc	1 37 34                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:37:34
	shl.b64 	%rd33, %rd29, 2;
	add.s64 	%rd16, %rd10, %rd33;
	shl.b64 	%rd34, %rd30, 2;
	add.s64 	%rd17, %rd10, %rd34;
	shl.b64 	%rd35, %rd31, 2;
	add.s64 	%rd18, %rd10, %rd35;
	shl.b64 	%rd36, %rd32, 2;
	add.s64 	%rd19, %rd10, %rd36;
	.loc	1 37 47                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:37:47
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r55 }, [ %rd16 + 0 ];
	@!%p3 mov.u32 %r55, %r43;
	// end inline asm
	mov.b32 	%f60, %r55;
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r57 }, [ %rd17 + 0 ];
	@!%p3 mov.u32 %r57, %r43;
	// end inline asm
	mov.b32 	%f61, %r57;
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r59 }, [ %rd18 + 0 ];
	@!%p3 mov.u32 %r59, %r43;
	// end inline asm
	mov.b32 	%f62, %r59;
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r61 }, [ %rd19 + 0 ];
	@!%p3 mov.u32 %r61, %r43;
	// end inline asm
	mov.b32 	%f63, %r61;
	.loc	1 38 22                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:38:22
	add.f32 	%f13, %f56, %f60;
	add.f32 	%f14, %f57, %f61;
	add.f32 	%f15, %f58, %f62;
	add.f32 	%f16, %f59, %f63;
	mov.f32 	%f229, %f53;
	mov.f32 	%f230, %f53;
	mov.f32 	%f231, %f53;
	mov.f32 	%f232, %f53;
	mov.f32 	%f233, %f13;
	mov.f32 	%f234, %f14;
	mov.f32 	%f235, %f15;
	mov.f32 	%f236, %f16;
	mov.f32 	%f237, %f55;
	mov.f32 	%f238, %f55;
	mov.f32 	%f239, %f55;
	mov.f32 	%f240, %f55;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p1 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f64, %f13, %f225;
	sub.f32 	%f65, %f14, %f226;
	sub.f32 	%f66, %f15, %f227;
	sub.f32 	%f67, %f16, %f228;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f237, %f217, 0f3F800000;
	add.f32 	%f238, %f218, 0f3F800000;
	add.f32 	%f239, %f219, 0f3F800000;
	add.f32 	%f240, %f220, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r64, %f64;
	mov.b32 	%r65, %f237;
	// begin inline asm
	div.full.f32 %r63, %r64, %r65;
	// end inline asm
	mov.b32 	%f68, %r63;
	mov.b32 	%r67, %f65;
	mov.b32 	%r68, %f238;
	// begin inline asm
	div.full.f32 %r66, %r67, %r68;
	// end inline asm
	mov.b32 	%f69, %r66;
	mov.b32 	%r70, %f66;
	mov.b32 	%r71, %f239;
	// begin inline asm
	div.full.f32 %r69, %r70, %r71;
	// end inline asm
	mov.b32 	%f70, %r69;
	mov.b32 	%r73, %f67;
	mov.b32 	%r74, %f240;
	// begin inline asm
	div.full.f32 %r72, %r73, %r74;
	// end inline asm
	mov.b32 	%f71, %r72;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f233, %f225, %f68;
	add.f32 	%f234, %f226, %f69;
	add.f32 	%f235, %f227, %f70;
	add.f32 	%f236, %f228, %f71;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f72, %f13, %f233;
	sub.f32 	%f73, %f14, %f234;
	sub.f32 	%f74, %f15, %f235;
	sub.f32 	%f75, %f16, %f236;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f229, %f64, %f72, %f221;
	fma.rn.f32 	%f230, %f65, %f73, %f222;
	fma.rn.f32 	%f231, %f66, %f74, %f223;
	fma.rn.f32 	%f232, %f67, %f75, %f224;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	2 0 22                          // triton_helpers.py:0:22
	cvt.u32.u64 	%r146, %rd1;
	.loc	1 25 33                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:25:33
	and.b32  	%r147, %r2, 31;
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f76, %f226, %f225;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f77, %f217, %f218;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p38, %f77, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r89, %f77;
	mov.b32 	%r88, %f218;
	// begin inline asm
	div.full.f32 %r87, %r88, %r89;
	// end inline asm
	mov.b32 	%f78, %r87;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f79, 0f00000000, %f78, %p38;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f80, %f76, %f79, %f225;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f81, %f221, %f222;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f82, %f76, %f76;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f83, %f82, %f217;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f84, %f83, %f79, %f81;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f85, %f227, %f80;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f86, %f219, %f77;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p39, %f86, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r92, %f86;
	mov.b32 	%r91, %f219;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f87, %r90;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f88, 0f00000000, %f87, %p39;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f89, %f88, %f85, %f80;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f90, %f223, %f84;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f91, %f85, %f85;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f92, %f77, %f91;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f93, %f88, %f92, %f90;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f94, %f228, %f89;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f95, %f220, %f86;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p40, %f95, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r95, %f95;
	mov.b32 	%r94, %f220;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f96, %r93;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f97, 0f00000000, %f96, %p40;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f98, %f97, %f94, %f89;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f99, %f224, %f93;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f100, %f94, %f94;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f101, %f86, %f100;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f102, %f97, %f101, %f99;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r148, %f98;
	shfl.sync.bfly.b32	%r149, %r148, 16, 31, -1;
	mov.b32 	%f103, %r149;
	mov.b32 	%r150, %f102;
	shfl.sync.bfly.b32	%r151, %r150, 16, 31, -1;
	mov.b32 	%f104, %r151;
	shfl.sync.bfly.b32	%r97, %r95, 16, 31, -1;
	mov.b32 	%f105, %r97;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f106, %f103, %f98;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f107, %f95, %f105;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p41, %f107, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r98, %f107;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f108, %r96;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f109, 0f00000000, %f108, %p41;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f110, %f109, %f106, %f98;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f111, %f102, %f104;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f112, %f106, %f106;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f113, %f95, %f112;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f114, %f109, %f113, %f111;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r152, %f110;
	shfl.sync.bfly.b32	%r153, %r152, 8, 31, -1;
	mov.b32 	%f115, %r153;
	mov.b32 	%r154, %f114;
	shfl.sync.bfly.b32	%r155, %r154, 8, 31, -1;
	mov.b32 	%f116, %r155;
	shfl.sync.bfly.b32	%r100, %r98, 8, 31, -1;
	mov.b32 	%f117, %r100;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f118, %f115, %f110;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f119, %f107, %f117;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p42, %f119, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r101, %f119;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f120, %r99;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f121, 0f00000000, %f120, %p42;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f122, %f118, %f121, %f110;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f123, %f114, %f116;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f124, %f118, %f118;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f125, %f107, %f124;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f126, %f121, %f125, %f123;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r156, %f122;
	shfl.sync.bfly.b32	%r157, %r156, 4, 31, -1;
	mov.b32 	%f127, %r157;
	mov.b32 	%r158, %f126;
	shfl.sync.bfly.b32	%r159, %r158, 4, 31, -1;
	mov.b32 	%f128, %r159;
	shfl.sync.bfly.b32	%r103, %r101, 4, 31, -1;
	mov.b32 	%f129, %r103;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f130, %f127, %f122;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f131, %f119, %f129;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p43, %f131, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r104, %f131;
	// begin inline asm
	div.full.f32 %r102, %r103, %r104;
	// end inline asm
	mov.b32 	%f132, %r102;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f133, 0f00000000, %f132, %p43;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f134, %f130, %f133, %f122;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f135, %f126, %f128;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f136, %f130, %f130;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f137, %f119, %f136;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f138, %f133, %f137, %f135;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r160, %f134;
	shfl.sync.bfly.b32	%r161, %r160, 2, 31, -1;
	mov.b32 	%f139, %r161;
	mov.b32 	%r162, %f138;
	shfl.sync.bfly.b32	%r163, %r162, 2, 31, -1;
	mov.b32 	%f140, %r163;
	shfl.sync.bfly.b32	%r106, %r104, 2, 31, -1;
	mov.b32 	%f141, %r106;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f142, %f139, %f134;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f143, %f131, %f141;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p44, %f143, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r107, %f143;
	// begin inline asm
	div.full.f32 %r105, %r106, %r107;
	// end inline asm
	mov.b32 	%f144, %r105;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f145, 0f00000000, %f144, %p44;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f146, %f142, %f145, %f134;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f147, %f138, %f140;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f148, %f142, %f142;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f149, %f131, %f148;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f150, %f145, %f149, %f147;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r164, %f146;
	shfl.sync.bfly.b32	%r165, %r164, 1, 31, -1;
	mov.b32 	%f151, %r165;
	mov.b32 	%r166, %f150;
	shfl.sync.bfly.b32	%r167, %r166, 1, 31, -1;
	mov.b32 	%f152, %r167;
	shfl.sync.bfly.b32	%r109, %r107, 1, 31, -1;
	mov.b32 	%f153, %r109;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f154, %f151, %f146;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f155, %f143, %f153;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f155, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r110, %f155;
	// begin inline asm
	div.full.f32 %r108, %r109, %r110;
	// end inline asm
	mov.b32 	%f156, %r108;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f157, 0f00000000, %f156, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f158, %f154, %f157, %f146;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f159, %f150, %f152;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f160, %f154, %f154;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f161, %f143, %f160;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f162, %f157, %f161, %f159;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p26, %r147, 0;
	shr.u32 	%r168, %r2, 3;
	and.b32  	%r169, %r168, 60;
	add.s32 	%r111, %r32, %r169;
	mov.b32 	%r112, %f158;
	// begin inline asm
	@%p26 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	add.s32 	%r171, %r32, 64;
	add.s32 	%r113, %r171, %r169;
	mov.b32 	%r114, %f162;
	// begin inline asm
	@%p26 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	add.s32 	%r172, %r32, 128;
	add.s32 	%r115, %r172, %r169;
	// begin inline asm
	@%p26 st.shared.b32 [ %r115 + 0 ], %r110;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p29, %r2, 16;
	add.s32 	%r118, %r32, %r21;
	// begin inline asm
	@%p29 ld.shared.b32 %r117, [ %r118 + 0 ];
	// end inline asm
	mov.b32 	%f163, %r117;
	add.s32 	%r120, %r171, %r21;
	// begin inline asm
	@%p29 ld.shared.b32 %r119, [ %r120 + 0 ];
	// end inline asm
	mov.b32 	%f164, %r119;
	add.s32 	%r122, %r172, %r21;
	// begin inline asm
	@%p29 ld.shared.b32 %r121, [ %r122 + 0 ];
	// end inline asm
	mov.b32 	%f165, %r121;
	shfl.sync.bfly.b32	%r174, %r117, 8, 31, -1;
	mov.b32 	%f166, %r174;
	shfl.sync.bfly.b32	%r175, %r119, 8, 31, -1;
	mov.b32 	%f167, %r175;
	shfl.sync.bfly.b32	%r124, %r121, 8, 31, -1;
	mov.b32 	%f168, %r124;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f169, %f166, %f163;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f170, %f165, %f168;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f170, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r125, %f170;
	// begin inline asm
	div.full.f32 %r123, %r124, %r125;
	// end inline asm
	mov.b32 	%f171, %r123;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f172, 0f00000000, %f171, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f173, %f169, %f172, %f163;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f174, %f164, %f167;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f175, %f169, %f169;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f176, %f175, %f165;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f177, %f176, %f172, %f174;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r176, %f173;
	shfl.sync.bfly.b32	%r177, %r176, 4, 31, -1;
	mov.b32 	%f178, %r177;
	mov.b32 	%r178, %f177;
	shfl.sync.bfly.b32	%r179, %r178, 4, 31, -1;
	mov.b32 	%f179, %r179;
	shfl.sync.bfly.b32	%r127, %r125, 4, 31, -1;
	mov.b32 	%f180, %r127;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f181, %f178, %f173;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f182, %f170, %f180;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p47, %f182, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r128, %f182;
	// begin inline asm
	div.full.f32 %r126, %r127, %r128;
	// end inline asm
	mov.b32 	%f183, %r126;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f184, 0f00000000, %f183, %p47;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f185, %f181, %f184, %f173;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f186, %f177, %f179;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f187, %f181, %f181;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f188, %f170, %f187;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f189, %f184, %f188, %f186;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r180, %f185;
	shfl.sync.bfly.b32	%r181, %r180, 2, 31, -1;
	mov.b32 	%f190, %r181;
	mov.b32 	%r182, %f189;
	shfl.sync.bfly.b32	%r183, %r182, 2, 31, -1;
	mov.b32 	%f191, %r183;
	shfl.sync.bfly.b32	%r130, %r128, 2, 31, -1;
	mov.b32 	%f192, %r130;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f193, %f190, %f185;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f194, %f182, %f192;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p48, %f194, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r131, %f194;
	// begin inline asm
	div.full.f32 %r129, %r130, %r131;
	// end inline asm
	mov.b32 	%f195, %r129;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f196, 0f00000000, %f195, %p48;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f197, %f193, %f196, %f185;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f198, %f189, %f191;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f199, %f193, %f193;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f200, %f182, %f199;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f201, %f196, %f200, %f198;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r184, %f197;
	shfl.sync.bfly.b32	%r185, %r184, 1, 31, -1;
	mov.b32 	%f202, %r185;
	mov.b32 	%r186, %f201;
	shfl.sync.bfly.b32	%r187, %r186, 1, 31, -1;
	mov.b32 	%f203, %r187;
	shfl.sync.bfly.b32	%r133, %r131, 1, 31, -1;
	mov.b32 	%f204, %r133;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f205, %f202, %f197;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f206, %f194, %f204;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p49, %f206, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r134, %f206;
	// begin inline asm
	div.full.f32 %r132, %r133, %r134;
	// end inline asm
	mov.b32 	%f207, %r132;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f208, 0f00000000, %f207, %p49;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f209, %f205, %f208, %f197;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f210, %f201, %f203;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f211, %f205, %f205;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f212, %f194, %f211;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f213, %f208, %f212, %f210;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r188, %r2, 15;
	setp.eq.s32 	%p50, %r188, 0;
	and.pred  	%p32, %p29, %p50;
	mov.b32 	%r136, %f209;
	// begin inline asm
	@%p32 st.shared.b32 [ %r118 + 0 ], %r136;
	// end inline asm
	mov.b32 	%r138, %f213;
	// begin inline asm
	@%p32 st.shared.b32 [ %r120 + 0 ], %r138;
	// end inline asm
	// begin inline asm
	@%p32 st.shared.b32 [ %r122 + 0 ], %r134;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r141, [global_smem];
$L__tmp4:
	.loc	1 53 25                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:53:25
	mul.wide.s32 	%rd41, %r16, 4;
	add.s64 	%rd39, %rd11, %rd41;
	.loc	1 53 36                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:53:36
	setp.eq.s32 	%p51, %r146, 0;
	and.pred  	%p35, %p51, %p3;
	.loc	1 55 18                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:55:18
	ld.shared.u32 	%r143, [global_smem+64];
	.loc	1 53 36                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:53:36
	// begin inline asm
	@%p35 st.global.b32 [ %rd39 + 0 ], { %r141 };
	// end inline asm
	mov.b32 	%r144, 1166016512;
	.loc	1 55 18                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:55:18
	// begin inline asm
	div.full.f32 %r142, %r143, %r144;
	// end inline asm
	mov.b32 	%f214, %r142;
	.loc	1 57 19                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:57:19
	add.f32 	%f215, %f214, 0f3727C5AC;
	.loc	1 58 28                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:58:28
	rsqrt.approx.ftz.f32 	%f216, %f215;
	.loc	1 59 4                          // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:60:28
	add.s64 	%rd40, %rd9, %rd41;
	.loc	1 60 40                         // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:60:40
	mov.b32 	%r145, %f216;
	// begin inline asm
	@%p35 st.global.b32 [ %rd40 + 0 ], { %r145 };
	// end inline asm
	.loc	1 60 4                          // cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py:60:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/pu/cpuqwtvtlvep2ftvuyj2qahgi4xjnwylgswrurzsqeqjlcfxq5am.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 117
.b8 113
.b8 119
.b8 116
.b8 118
.b8 116
.b8 108
.b8 118
.b8 101
.b8 112
.b8 50
.b8 102
.b8 116
.b8 118
.b8 117
.b8 121
.b8 106
.b8 50
.b8 113
.b8 97
.b8 104
.b8 103
.b8 105
.b8 52
.b8 120
.b8 106
.b8 110
.b8 119
.b8 121
.b8 108
.b8 103
.b8 115
.b8 119
.b8 114
.b8 117
.b8 114
.b8 122
.b8 115
.b8 113
.b8 101
.b8 113
.b8 106
.b8 108
.b8 99
.b8 102
.b8 120
.b8 113
.b8 53
.b8 97
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x34 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 51                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
