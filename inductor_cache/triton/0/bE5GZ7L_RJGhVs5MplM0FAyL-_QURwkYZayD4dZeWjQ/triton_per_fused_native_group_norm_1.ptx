//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_1 // -- Begin function triton_per_fused_native_group_norm_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_1
.visible .entry triton_per_fused_native_group_norm_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_1_param_4,
	.param .u32 triton_per_fused_native_group_norm_1_param_5,
	.param .u32 triton_per_fused_native_group_norm_1_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<64>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_native_group_norm_1_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_native_group_norm_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:23:33
	shl.b32 	%r50, %r1, 7;
	ld.param.u64 	%rd11, [triton_per_fused_native_group_norm_1_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_native_group_norm_1_param_3];
	.loc	1 24 44                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:24:44
	mov.u32 	%r51, %tid.x;
	and.b32  	%r52, %r51, 63;
	ld.param.u64 	%rd13, [triton_per_fused_native_group_norm_1_param_4];
	shl.b32 	%r53, %r51, 1;
	and.b32  	%r54, %r53, 126;
	.loc	1 24 23                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:24:23
	or.b32  	%r55, %r50, %r52;
	or.b32  	%r56, %r55, 64;
	.loc	1 25 21                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:25:21
	setp.lt.s32 	%p1, %r55, 128;
	setp.lt.s32 	%p4, %r56, 128;
	.loc	1 31 37                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:31:37
	shl.b32 	%r57, %r55, 1;
	shl.b32 	%r58, %r56, 1;
	.loc	1 31 30                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:31:30
	mul.wide.s32 	%rd14, %r57, 4;
	add.s64 	%rd1, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r58, 4;
	add.s64 	%rd2, %rd10, %rd15;
	mov.b32 	%r4, 0;
	.loc	1 31 42                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:31:42
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 32 30                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:32:30
	add.s64 	%rd3, %rd11, %rd14;
	add.s64 	%rd4, %rd11, %rd15;
	.loc	1 32 42                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:32:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r10, %r4;
	@!%p1 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p4 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p4 mov.u32 %r14, %r4;
	@!%p4 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r15;
	.loc	1 33 30                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:33:30
	add.s64 	%rd5, %rd12, %rd14;
	add.s64 	%rd6, %rd12, %rd15;
	.loc	1 33 42                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:33:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r18, %r4;
	@!%p1 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p4 ld.global.v2.b32 { %r22, %r23 }, [ %rd6 + 0 ];
	@!%p4 mov.u32 %r22, %r4;
	@!%p4 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f11, %r22;
	mov.b32 	%f12, %r23;
	.loc	1 37 33                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:37:33
	selp.f32 	%f13, %f1, 0f00000000, %p1;
	selp.f32 	%f14, %f2, 0f00000000, %p1;
	selp.f32 	%f15, %f3, 0f00000000, %p4;
	selp.f32 	%f16, %f4, 0f00000000, %p4;
	.loc	1 39 33                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:39:33
	selp.f32 	%f17, %f9, 0f00000000, %p1;
	selp.f32 	%f18, %f10, 0f00000000, %p1;
	selp.f32 	%f19, %f11, 0f00000000, %p4;
	selp.f32 	%f20, %f12, 0f00000000, %p4;
$L__tmp1:
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f21, %f14, %f13;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f22, %f17, %f18;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p25, %f22, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r28, %f22;
	mov.b32 	%r27, %f18;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f23, %r26;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f24, 0f00000000, %f23, %p25;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f25, %f21, %f24, %f13;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f26, %f5, %f6;
	selp.f32 	%f27, %f26, 0f00000000, %p1;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f28, %f21, %f21;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f29, %f28, %f17;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f30, %f29, %f24, %f27;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f31, %f16, %f15;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f32, %f19, %f20;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p26, %f32, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r31, %f32;
	mov.b32 	%r30, %f20;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f33, %r29;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f34, 0f00000000, %f33, %p26;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f35, %f31, %f34, %f15;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f36, %f7, %f8;
	selp.f32 	%f37, %f36, 0f00000000, %p4;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f38, %f31, %f31;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f39, %f38, %f19;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f40, %f39, %f34, %f37;
$L__tmp2:
	.loc	1 41 18                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:41:18
	shl.b32 	%r59, %r52, 2;
	mov.u32 	%r60, global_smem;
	add.s32 	%r32, %r60, %r59;
	mov.b32 	%r33, %f25;
	mov.pred 	%p19, -1;
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	add.s32 	%r34, %r32, 256;
	mov.b32 	%r35, %f35;
	// begin inline asm
	@%p19 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r61, %r54, 2;
	add.s32 	%r62, %r60, %r61;
	ld.shared.v2.u32 	{%r48, %r49}, [%r62];
	.loc	1 48 28                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:48:28
	bar.sync 	0;
	mov.b32 	%r37, %f30;
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r37;
	// end inline asm
	mov.b32 	%r39, %f40;
	// begin inline asm
	@%p19 st.shared.b32 [ %r34 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f41, %f42}, [%r62];
	.loc	1 45 20                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:45:20
	mov.b32 	%r41, %f41;
	mov.b32 	%r42, 1182793728;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f43, %r40;
	mov.b32 	%r44, %f42;
	// begin inline asm
	div.full.f32 %r43, %r44, %r42;
	// end inline asm
	mov.b32 	%f44, %r43;
	.loc	1 47 20                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:47:20
	add.f32 	%f45, %f43, 0f3727C5AC;
	add.f32 	%f46, %f44, 0f3727C5AC;
	.loc	1 48 28                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:48:28
	rsqrt.approx.ftz.f32 	%f47, %f45;
	rsqrt.approx.ftz.f32 	%f48, %f46;
	.loc	1 24 23                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:24:23
	or.b32  	%r63, %r50, %r54;
	.loc	1 25 21                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:25:21
	setp.lt.s32 	%p23, %r63, 128;
	.loc	1 49 4                          // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:49:4
	bar.sync 	0;
	.loc	1 50 28                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:50:28
	mul.wide.s32 	%rd16, %r63, 4;
	add.s64 	%rd7, %rd9, %rd16;
	.loc	1 50 40                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:50:40
	mov.b32 	%r46, %f47;
	mov.b32 	%r47, %f48;
	// begin inline asm
	@%p23 st.global.v2.b32 [ %rd7 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 51 25                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:51:25
	add.s64 	%rd8, %rd13, %rd16;
	.loc	1 51 37                         // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:51:37
	// begin inline asm
	@%p23 st.global.v2.b32 [ %rd8 + 0 ], { %r48, %r49 };
	// end inline asm
	.loc	1 51 4                          // cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py:51:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ng/cngsd7ypfn6rjoncmysndkh6ypmp5xtvevjy2dc4v2pkp3iwznre.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 181                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xae DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 103
.b8 115
.b8 100
.b8 55
.b8 121
.b8 112
.b8 102
.b8 110
.b8 54
.b8 114
.b8 106
.b8 111
.b8 110
.b8 99
.b8 109
.b8 121
.b8 115
.b8 110
.b8 100
.b8 107
.b8 104
.b8 54
.b8 121
.b8 112
.b8 109
.b8 112
.b8 53
.b8 120
.b8 116
.b8 118
.b8 101
.b8 118
.b8 106
.b8 121
.b8 50
.b8 100
.b8 99
.b8 52
.b8 118
.b8 50
.b8 112
.b8 107
.b8 112
.b8 51
.b8 105
.b8 119
.b8 122
.b8 110
.b8 114
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 67                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
