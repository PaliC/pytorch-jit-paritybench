; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !12
  %9 = shl i32 %8, 9, !dbg !13
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %11 = shl i32 %10, 2, !dbg !14
  %12 = and i32 %11, 508, !dbg !14
  %13 = or disjoint i32 %9, %12, !dbg !15
  %14 = or disjoint i32 %13, 1, !dbg !15
  %15 = or disjoint i32 %13, 2, !dbg !15
  %16 = or disjoint i32 %13, 3, !dbg !15
  %.frozen = freeze i32 %13, !dbg !16
  %17 = sdiv i32 %.frozen, 64, !dbg !16
  %18 = mul i32 %17, 64, !dbg !17
  %.decomposed = sub i32 %.frozen, %18, !dbg !17
  %19 = srem i32 %14, 64, !dbg !17
  %20 = srem i32 %15, 64, !dbg !17
  %21 = srem i32 %16, 64, !dbg !17
  %.frozen1 = freeze i32 %6, !dbg !18
  %22 = sdiv i32 %.frozen1, 4, !dbg !18
  %23 = mul i32 %22, 4, !dbg !19
  %.decomposed2 = sub i32 %.frozen1, %23, !dbg !19
  %24 = add nsw i32 %.decomposed2, 120156, !dbg !20
  %25 = shl nsw i32 %.decomposed, 2, !dbg !21
  %26 = shl nsw i32 %19, 2, !dbg !21
  %27 = shl nsw i32 %20, 2, !dbg !21
  %28 = shl nsw i32 %21, 2, !dbg !21
  %29 = mul i32 %17, 3872, !dbg !22
  %30 = mul i32 %22, 3748096, !dbg !23
  %31 = add i32 %30, %24, !dbg !24
  %32 = add i32 %31, %25, !dbg !25
  %33 = add i32 %32, %29, !dbg !26
  %34 = add i32 %31, %26, !dbg !25
  %35 = add i32 %34, %29, !dbg !26
  %36 = add i32 %31, %27, !dbg !25
  %37 = add i32 %36, %29, !dbg !26
  %38 = add i32 %31, %28, !dbg !25
  %39 = add i32 %38, %29, !dbg !26
  %40 = sext i32 %33 to i64, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !27
  %42 = sext i32 %35 to i64, !dbg !27
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !27
  %44 = sext i32 %37 to i64, !dbg !27
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !27
  %46 = sext i32 %39 to i64, !dbg !27
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !27
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %7) #1, !dbg !28
  %49 = bitcast i32 %48 to float, !dbg !28
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %7) #1, !dbg !28
  %51 = bitcast i32 %50 to float, !dbg !28
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %7) #1, !dbg !28
  %53 = bitcast i32 %52 to float, !dbg !28
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %7) #1, !dbg !28
  %55 = bitcast i32 %54 to float, !dbg !28
  %56 = sext i32 %.decomposed2 to i64, !dbg !29
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !29
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %7) #1, !dbg !30
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %7) #1, !dbg !30
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %7) #1, !dbg !30
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %7) #1, !dbg !30
  %62 = bitcast i32 %61 to float, !dbg !30
  %63 = fadd float %49, %62, !dbg !31
  %64 = fadd float %51, %62, !dbg !31
  %65 = fadd float %53, %62, !dbg !31
  %66 = fadd float %55, %62, !dbg !31
  %67 = shl i32 %6, 12, !dbg !32
  %68 = add i32 %13, %67, !dbg !33
  %69 = sext i32 %68 to i64, !dbg !34
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !34
  %71 = bitcast float %63 to i32, !dbg !35
  %72 = bitcast float %64 to i32, !dbg !35
  %73 = bitcast float %65 to i32, !dbg !35
  %74 = bitcast float %66 to i32, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %70, i1 %7) #1, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cranobslbvgcvl472qjh27m24w3arqf7vczmtwet5b5uo3lvwhle.py", directory: "inductor_cache/ra")
!4 = !{ptr @triton_poi_fused_clone_27, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_27, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_27", linkageName: "triton_poi_fused_clone_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 29, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 19, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 34, column: 39, scope: !7)
!21 = !DILocation(line: 34, column: 46, scope: !7)
!22 = !DILocation(line: 34, column: 56, scope: !7)
!23 = !DILocation(line: 34, column: 69, scope: !7)
!24 = !DILocation(line: 34, column: 44, scope: !7)
!25 = !DILocation(line: 34, column: 51, scope: !7)
!26 = !DILocation(line: 34, column: 61, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 74, scope: !7)
!29 = !DILocation(line: 35, column: 30, scope: !7)
!30 = !DILocation(line: 35, column: 35, scope: !7)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 37, column: 35, scope: !7)
!33 = !DILocation(line: 37, column: 30, scope: !7)
!34 = !DILocation(line: 37, column: 25, scope: !7)
!35 = !DILocation(line: 37, column: 46, scope: !7)
!36 = !DILocation(line: 37, column: 4, scope: !7)
