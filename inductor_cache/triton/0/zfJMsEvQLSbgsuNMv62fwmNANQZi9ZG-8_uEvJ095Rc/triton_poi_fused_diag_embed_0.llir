; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_diag_embed_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 4, !dbg !15
  %11 = mul i32 %10, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = shl nsw i32 %.decomposed, 2, !dbg !17
  %13 = sext i32 %12 to i64, !dbg !18
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !18
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %9) #4, !dbg !19
  %16 = bitcast i32 %15 to float, !dbg !19
  %17 = or disjoint i32 %12, 1, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %9) #4, !dbg !22
  %21 = bitcast i32 %20 to float, !dbg !22
  %22 = or disjoint i32 %12, 2, !dbg !23
  %23 = sext i32 %22 to i64, !dbg !24
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %9) #4, !dbg !25
  %26 = bitcast i32 %25 to float, !dbg !25
  %27 = or disjoint i32 %12, 3, !dbg !26
  %28 = sext i32 %27 to i64, !dbg !27
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !27
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %9) #4, !dbg !28
  %31 = bitcast i32 %30 to float, !dbg !28
  %32 = fadd float %16, %21, !dbg !29
  %33 = fadd float %32, %26, !dbg !30
  %34 = fadd float %33, %31, !dbg !31
  %35 = tail call float @llvm.nvvm.trunc.f(float -2.500000e-01) #4, !dbg !32
  %36 = fmul float %35, 2.000000e+00, !dbg !32
  %37 = fsub float -5.000000e-01, %36, !dbg !32
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %38, 0, !dbg !32
  %39 = tail call float @llvm.nvvm.fabs.ftz.f(float %37) #4, !dbg !32
  %40 = tail call float @llvm.nvvm.fabs.f(float %37) #4, !dbg !32
  %.08.i = select i1 %.not.i, float %40, float %39, !dbg !32
  %41 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !32
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not12.i = icmp eq i32 %42, 0, !dbg !32
  %43 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #4, !dbg !32
  %44 = tail call float @llvm.nvvm.fabs.f(float %34) #4, !dbg !32
  %.09.i = select i1 %.not12.i, float %44, float %43, !dbg !32
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not13.i = icmp eq i32 %45, 0, !dbg !32
  %46 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !32
  %47 = fmul float %.09.i, 0x4170000000000000, !dbg !32
  %48 = select i1 %.not13.i, i1 %46, i1 false, !dbg !32
  %.116.i = select i1 %48, float %47, float %.09.i, !dbg !32
  %expo.i.i.1.i = select i1 %48, float -1.510000e+02, float -1.270000e+02, !dbg !32
  %49 = bitcast float %.116.i to i32, !dbg !32
  %50 = and i32 %49, 8388607, !dbg !32
  %51 = or disjoint i32 %50, 1065353216, !dbg !32
  %52 = bitcast i32 %51 to float, !dbg !32
  %53 = lshr i32 %49, 23, !dbg !32
  %54 = uitofp nneg i32 %53 to float, !dbg !32
  %55 = fadd float %expo.i.i.1.i, %54, !dbg !32
  %56 = fcmp ogt float %52, 0x3FF6A09E60000000, !dbg !32
  %57 = fmul float %52, 5.000000e-01, !dbg !32
  %58 = fadd float %55, 1.000000e+00, !dbg !32
  %expo.i.i.2.i = select i1 %56, float %58, float %55, !dbg !32
  %m.i.i.0.i = select i1 %56, float %57, float %52, !dbg !32
  %59 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !32
  %60 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !32
  %61 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %60) #5, !dbg !32, !srcloc !33
  %62 = fmul float %59, 2.000000e+00, !dbg !32
  %63 = fmul float %61, %62, !dbg !32
  %64 = fmul float %63, %63, !dbg !32
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not14.i = icmp eq i32 %65, 0, !dbg !32
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %64, float 0x3F8995EC60000000) #4, !dbg !32
  %67 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %64, float 0x3F8995EC60000000) #4, !dbg !32
  %.020.i = select i1 %.not14.i, float %67, float %66, !dbg !32
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i = icmp eq i32 %68, 0, !dbg !32
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %64, float 0x3FB55557A0000000) #4, !dbg !32
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %64, float 0x3FB55557A0000000) #4, !dbg !32
  %.021.i = select i1 %.not15.i, float %70, float %69, !dbg !32
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i = icmp eq i32 %71, 0, !dbg !32
  %72 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %64) #4, !dbg !32
  %73 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %64) #4, !dbg !32
  %.022.i = select i1 %.not16.i, float %73, float %72, !dbg !32
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i = icmp eq i32 %74, 0, !dbg !32
  %75 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %63) #4, !dbg !32
  %76 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %63) #4, !dbg !32
  %.024.i = select i1 %.not17.i, float %76, float %75, !dbg !32
  %77 = fsub float %59, %63, !dbg !32
  %78 = fmul float %77, 2.000000e+00, !dbg !32
  %79 = fneg float %63, !dbg !32
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i = icmp eq i32 %80, 0, !dbg !32
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %79, float %59, float %78) #4, !dbg !32
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %79, float %59, float %78) #4, !dbg !32
  %.025.i = select i1 %.not18.i, float %82, float %81, !dbg !32
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i = icmp eq i32 %83, 0, !dbg !32
  %84 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %61, float %.025.i) #4, !dbg !32
  %85 = tail call float @llvm.nvvm.mul.rn.f(float %61, float %.025.i) #4, !dbg !32
  %.026.i = select i1 %.not19.i, float %85, float %84, !dbg !32
  %86 = fadd float %63, %.024.i, !dbg !32
  %87 = fsub float %63, %86, !dbg !32
  %88 = fadd float %.024.i, %87, !dbg !32
  %89 = fadd float %.026.i, %88, !dbg !32
  %90 = fadd float %86, %89, !dbg !32
  %91 = fsub float %86, %90, !dbg !32
  %92 = fadd float %89, %91, !dbg !32
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not20.i = icmp eq i32 %93, 0, !dbg !32
  %94 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !32
  %95 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !32
  %.019.i = select i1 %.not20.i, float %95, float %94, !dbg !32
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not21.i = icmp eq i32 %96, 0, !dbg !32
  %97 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %98 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !32
  %.018.i = select i1 %.not21.i, float %98, float %97, !dbg !32
  %99 = fadd float %.019.i, %90, !dbg !32
  %100 = fsub float %.019.i, %99, !dbg !32
  %101 = fadd float %90, %100, !dbg !32
  %102 = fadd float %92, %101, !dbg !32
  %103 = fadd float %.018.i, %102, !dbg !32
  %104 = fadd float %99, %103, !dbg !32
  %105 = fsub float %99, %104, !dbg !32
  %106 = fadd float %103, %105, !dbg !32
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not22.i = icmp eq i32 %107, 0, !dbg !32
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float -5.000000e-01) #4, !dbg !32
  %109 = tail call float @llvm.nvvm.fabs.f(float -5.000000e-01) #4, !dbg !32
  %.027.i = select i1 %.not22.i, float %109, float %108, !dbg !32
  %110 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !32
  %.013.i = select i1 %110, float 0xBF10000000000000, float -5.000000e-01, !dbg !32
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not23.i = icmp eq i32 %111, 0, !dbg !32
  %112 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %104) #4, !dbg !32
  %113 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %104) #4, !dbg !32
  %.028.i = select i1 %.not23.i, float %113, float %112, !dbg !32
  %114 = fneg float %.028.i, !dbg !32
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not24.i = icmp eq i32 %115, 0, !dbg !32
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %104, float %114) #4, !dbg !32
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %104, float %114) #4, !dbg !32
  %.029.i = select i1 %.not24.i, float %117, float %116, !dbg !32
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not25.i = icmp eq i32 %118, 0, !dbg !32
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %106, float %.029.i) #4, !dbg !32
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %106, float %.029.i) #4, !dbg !32
  %.030.i = select i1 %.not25.i, float %120, float %119, !dbg !32
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not26.i = icmp eq i32 %121, 0, !dbg !32
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %104, float %.030.i) #4, !dbg !32
  %123 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %104, float %.030.i) #4, !dbg !32
  %.031.i = select i1 %.not26.i, float %123, float %122, !dbg !32
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i = icmp eq i32 %124, 0, !dbg !32
  %125 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !32
  %126 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !32
  %.032.i = select i1 %.not27.i, float %126, float %125, !dbg !32
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %129 = bitcast float %.032.i to i32, !dbg !32
  %130 = icmp eq i32 %129, 1118925336, !dbg !32
  %prod.i.145.0.i = select i1 %130, float 0x40562E42E0000000, float %.032.i, !dbg !32
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i = icmp eq i32 %131, 0, !dbg !32
  %132 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !32
  %133 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !32
  %.017.i = select i1 %.not30.i, float %133, float %132, !dbg !32
  %134 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !32
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i = icmp eq i32 %135, 0, !dbg !32
  %136 = tail call float @llvm.nvvm.fabs.ftz.f(float %134) #4, !dbg !32
  %137 = tail call float @llvm.nvvm.fabs.f(float %134) #4, !dbg !32
  %.023.i = select i1 %.not31.i, float %137, float %136, !dbg !32
  %138 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !32
  %139 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %134), !dbg !32
  %j.i.i.0.i = select i1 %138, float %139, float %134, !dbg !32
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i = icmp eq i32 %140, 0, !dbg !32
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !32
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !32
  %.035.i = select i1 %.not32.i, float %142, float %141, !dbg !32
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i = icmp eq i32 %143, 0, !dbg !32
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !32
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !32
  %.036.i = select i1 %.not33.i, float %145, float %144, !dbg !32
  %146 = fmul float %.036.i, 0x3FF7154760000000, !dbg !32
  %147 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !32
  %148 = bitcast float %147 to i32, !dbg !32
  %149 = shl i32 %148, 23, !dbg !32
  %150 = bitcast i32 %149 to float, !dbg !32
  %151 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %146) #4, !dbg !32
  %152 = fmul float %151, %150, !dbg !32
  %153 = fcmp une float %152, 0x7FF0000000000000, !dbg !32
  br i1 %153, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !32

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not29.i = icmp eq i32 %128, 0, !dbg !32
  %.not28.i = icmp eq i32 %127, 0, !dbg !32
  %154 = fneg float %.032.i, !dbg !32
  %155 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %154) #4, !dbg !32
  %156 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %154) #4, !dbg !32
  %.033.i = select i1 %.not28.i, float %155, float %156, !dbg !32
  %157 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !32
  %158 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !32
  %.034.i = select i1 %.not29.i, float %157, float %158, !dbg !32
  %159 = fadd float %.034.i, 0x3EE0000000000000, !dbg !32
  %prod.i.044.0.i = select i1 %130, float %159, float %.034.i, !dbg !32
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i = icmp eq i32 %160, 0, !dbg !32
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %152, float %prod.i.044.0.i, float %152) #4, !dbg !32
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %152, float %prod.i.044.0.i, float %152) #4, !dbg !32
  %.014.i = select i1 %.not34.i, float %162, float %161, !dbg !32
  br label %__internal_accurate_powf.exit.i, !dbg !32

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !32
  %163 = fcmp olt float %34, 0.000000e+00, !dbg !32
  %or.cond.i = select i1 %163, i1 %41, i1 false, !dbg !32
  %164 = fcmp oeq float %34, 0.000000e+00, !dbg !32
  br i1 %164, label %165, label %171, !dbg !32

165:                                              ; preds = %__internal_accurate_powf.exit.i
  %166 = fadd float %34, %34, !dbg !32
  %167 = bitcast float %166 to i32, !dbg !32
  %168 = or i32 %167, 2139095040, !dbg !32
  %169 = bitcast i32 %168 to float, !dbg !32
  %170 = select i1 %41, float %169, float 0x7FF0000000000000, !dbg !32
  br label %__internal_powf_corner_cases.exit.i, !dbg !32

171:                                              ; preds = %__internal_accurate_powf.exit.i
  %172 = fneg float %t.i.0.i, !dbg !32
  %.010.i = select i1 %or.cond.i, float %172, float %t.i.0.i, !dbg !32
  %173 = tail call float @llvm.nvvm.trunc.f(float -5.000000e-01) #4, !dbg !32
  %174 = fcmp une float %173, -5.000000e-01, !dbg !32
  %or.cond2.i = select i1 %163, i1 %174, i1 false, !dbg !32
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i, !dbg !32
  br label %__internal_powf_corner_cases.exit.i, !dbg !32

__internal_powf_corner_cases.exit.i:              ; preds = %171, %165
  %.212.i = phi float [ %170, %165 ], [ %.111.i, %171 ], !dbg !32
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not35.i = icmp eq i32 %175, 0, !dbg !32
  %.01.i = select i1 %.not35.i, float %44, float %43, !dbg !32
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i = icmp eq i32 %176, 0, !dbg !32
  %.02.i = select i1 %.not36.i, float %109, float %108, !dbg !32
  %177 = fadd float %.01.i, %.02.i, !dbg !32
  %178 = bitcast float %177 to i32, !dbg !32
  %179 = icmp sgt i32 %178, 2139095039, !dbg !32
  br i1 %179, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !32

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not37.i = icmp eq i32 %180, 0, !dbg !32
  %.06.i = select i1 %.not37.i, float %44, float %43, !dbg !32
  %181 = fcmp uno float %.06.i, 0.000000e+00, !dbg !32
  br i1 %181, label %184, label %__nv_isnanf.exit11.i.i, !dbg !32

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not38.i = icmp eq i32 %182, 0, !dbg !32
  %.07.i = select i1 %.not38.i, float %109, float %108, !dbg !32
  %183 = fcmp uno float %.07.i, 0.000000e+00, !dbg !32
  br i1 %183, label %184, label %__nv_isinff.exit8.i.i, !dbg !32

184:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %185 = fadd float %34, -5.000000e-01, !dbg !32
  br label %__nv_powf.exit, !dbg !32

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not39.i = icmp eq i32 %186, 0, !dbg !32
  %.05.i = select i1 %.not39.i, float %109, float %108, !dbg !32
  %187 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !32
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not41.i = icmp eq i32 %188, 0, !dbg !32
  %.04.i = select i1 %.not41.i, float %44, float %43, !dbg !32
  br i1 %187, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !32

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %189 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !32
  %190 = fcmp oeq float %34, -1.000000e+00, !dbg !32
  %191 = select i1 %189, float 0.000000e+00, float 0x7FF0000000000000, !dbg !32
  %192 = select i1 %190, float 1.000000e+00, float %191, !dbg !32
  br label %__nv_powf.exit, !dbg !32

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %193 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !32
  br i1 %193, label %194, label %__nv_powf.exit, !dbg !32

194:                                              ; preds = %__nv_isinff.exit.i.i
  %195 = select i1 %or.cond.i, float -0.000000e+00, float 0.000000e+00, !dbg !32
  br label %__nv_powf.exit, !dbg !32

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %184, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %194
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %185, %184 ], [ %192, %__nv_fabsf.exit5.i.i ], [ %195, %194 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !32
  %196 = icmp eq i32 %.decomposed, %10, !dbg !34
  %197 = and i32 %6, 16, !dbg !12
  %198 = fcmp oeq float %34, 1.000000e+00, !dbg !32
  %t.0.i = select i1 %198, float 1.000000e+00, float %.3.i, !dbg !32
  %199 = sext i32 %8 to i64, !dbg !35
  %200 = getelementptr float, ptr addrspace(1) %1, i64 %199, !dbg !35
  %201 = icmp eq i32 %197, 0, !dbg !36
  %202 = bitcast float %t.0.i to i32, !dbg !36
  %203 = select i1 %196, i32 %202, i32 0, !dbg !37
  %204 = and i1 %201, %9, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %203, ptr addrspace(1) %200, i1 %204) #4, !dbg !36
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clnxtofo4e7d7gqpaohssg5u2e34k72wivczwn36eozvzohqeysx.py", directory: "inductor_cache/ln")
!4 = !{ptr @triton_poi_fused_diag_embed_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_diag_embed_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_diag_embed_0", linkageName: "triton_poi_fused_diag_embed_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 32, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 41, scope: !7)
!26 = !DILocation(line: 30, column: 34, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 41, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 32, scope: !7)
!33 = !{i32 21046}
!34 = !DILocation(line: 33, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 25, scope: !7)
!36 = !DILocation(line: 41, column: 37, scope: !7)
!37 = !DILocation(line: 40, column: 34, scope: !7)
!38 = !DILocation(line: 41, column: 4, scope: !7)
