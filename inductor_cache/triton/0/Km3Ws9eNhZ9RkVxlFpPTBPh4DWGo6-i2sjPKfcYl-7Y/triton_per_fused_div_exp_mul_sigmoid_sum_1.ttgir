#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0)
#loc1 = loc(unknown)
#loc26 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":41:25)
#loc37 = loc(callsite(#loc1 at #loc26))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_div_exp_mul_sigmoid_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.divsi %0, %c4_i32 : i32 loc(#loc5)
    %5 = arith.muli %4, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x16xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc9)
    %11 = tt.load %9, %10, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = tt.addptr %arg1, %4 : !tt.ptr<f32>, i32 loc(#loc10)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc11)
    %15 = tt.load %13, %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %16 = arith.muli %0, %c16_i32 : i32 loc(#loc12)
    %17 = tt.splat %16 : i32 -> tensor<1x16xi32, #blocked> loc(#loc13)
    %18 = arith.addi %3, %17 : tensor<1x16xi32, #blocked> loc(#loc13)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc14)
    %20 = tt.addptr %19, %18 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc14)
    %21 = tt.load %20, %10, %cst_0 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc15)
    %22 = arith.subf %cst_0, %11 : tensor<1x16xf32, #blocked> loc(#loc32)
    %23 = math.exp %22 : tensor<1x16xf32, #blocked> loc(#loc33)
    %24 = arith.addf %23, %cst : tensor<1x16xf32, #blocked> loc(#loc34)
    %25 = arith.divf %cst, %24 : tensor<1x16xf32, #blocked> loc(#loc35)
    %26 = math.exp %25 : tensor<1x16xf32, #blocked> loc(#loc21)
    %27 = tt.broadcast %15 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc22)
    %28 = arith.divf %26, %27 : tensor<1x16xf32, #blocked> loc(#loc22)
    %29 = arith.mulf %28, %21 : tensor<1x16xf32, #blocked> loc(#loc23)
    %30 = arith.select %10, %29, %cst_0 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc24)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc26)), %arg7: f32 loc(callsite(#loc1 at #loc26))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc39)
      tt.reduce.return %35 : f32 loc(#loc36)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc36)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc28)
    %33 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc29)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    tt.store %34, %32, %14 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":23:28)
#loc3 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":25:21)
#loc4 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":26:34)
#loc5 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":30:19)
#loc6 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":32:38)
#loc7 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":32:35)
#loc8 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":32:30)
#loc9 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":32:43)
#loc10 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":33:30)
#loc11 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":33:35)
#loc12 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":34:38)
#loc13 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":34:35)
#loc14 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":34:30)
#loc15 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":34:43)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc17 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":35:22)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc21 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":36:23)
#loc22 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":37:18)
#loc23 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":38:18)
#loc24 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":40:33)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":41:28)
#loc29 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":42:25)
#loc30 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":42:37)
#loc31 = loc("inductor_cache/gv/cgvhj7nv4uutmwvxpadmyusoenpbleniemtywnay2bidiuol7zk5.py":42:4)
#loc32 = loc(callsite(#loc16 at #loc17))
#loc33 = loc(callsite(#loc18 at #loc17))
#loc34 = loc(callsite(#loc19 at #loc17))
#loc35 = loc(callsite(#loc20 at #loc17))
#loc36 = loc(callsite(#loc25 at #loc26))
#loc38 = loc(callsite(#loc27 at #loc25))
#loc39 = loc(callsite(#loc38 at #loc26))
