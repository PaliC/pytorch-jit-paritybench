#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [4, 8], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":36:24)
#loc27 = loc(callsite(#loc1 at #loc14))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__weight_norm_interface_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0), %arg4: i32 loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0), %arg5: i32 loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":19:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x8xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x8xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x8xi32, #blocked1> loc(#loc4)
    %6 = arith.muli %0, %c8_i32 : i32 loc(#loc5)
    %7 = tt.splat %6 : i32 -> tensor<1x8xi32, #blocked> loc(#loc6)
    %8 = tt.splat %6 : i32 -> tensor<1x8xi32, #blocked1> loc(#loc6)
    %9 = arith.addi %4, %7 : tensor<1x8xi32, #blocked> loc(#loc6)
    %10 = arith.addi %5, %8 : tensor<1x8xi32, #blocked1> loc(#loc6)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc7)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %13 = tt.addptr %11, %9 : tensor<1x8x!tt.ptr<f32>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc7)
    %14 = tt.addptr %12, %10 : tensor<1x8x!tt.ptr<f32>, #blocked1>, tensor<1x8xi32, #blocked1> loc(#loc7)
    %15 = tt.splat %1 : i1 -> tensor<1x8xi1, #blocked> loc(#loc8)
    %16 = tt.splat %1 : i1 -> tensor<1x8xi1, #blocked1> loc(#loc8)
    %17 = tt.load %13, %15, %cst : tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc8)
    %18 = tt.load %14, %16, %cst_0 : tensor<1x8x!tt.ptr<f32>, #blocked1> loc(#loc8)
    %19 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc9)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc10)
    %21 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc10)
    %22 = tt.load %20, %21 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc10)
    %23 = arith.mulf %17, %17 : tensor<1x8xf32, #blocked> loc(#loc11)
    %24 = arith.mulf %18, %18 : tensor<1x8xf32, #blocked1> loc(#loc11)
    %25 = arith.select %15, %23, %cst : tensor<1x8xi1, #blocked>, tensor<1x8xf32, #blocked> loc(#loc12)
    %26 = arith.select %16, %24, %cst_0 : tensor<1x8xi1, #blocked1>, tensor<1x8xf32, #blocked1> loc(#loc12)
    %27 = "tt.reduce"(%25) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc14)), %arg7: f32 loc(callsite(#loc1 at #loc14))):
      %41 = arith.addf %arg6, %arg7 : f32 loc(#loc29)
      tt.reduce.return %41 : f32 loc(#loc26)
    }) : (tensor<1x8xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc26)
    %28 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc14)), %arg7: f32 loc(callsite(#loc1 at #loc14))):
      %41 = arith.addf %arg6, %arg7 : f32 loc(#loc29)
      tt.reduce.return %41 : f32 loc(#loc26)
    }) : (tensor<1x8xf32, #blocked1>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc26)
    %29 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc16)
    %30 = tt.expand_dims %28 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc16)
    %31 = tt.extern_elementwise %29 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc17)
    %32 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked1>) -> tensor<1x1xf32, #blocked1> loc(#loc17)
    %33 = arith.divf %22, %31 : tensor<1x1xf32, #blocked> loc(#loc18)
    %34 = tt.broadcast %33 : tensor<1x1xf32, #blocked> -> tensor<1x8xf32, #blocked> loc(#loc19)
    %35 = arith.mulf %17, %34 : tensor<1x8xf32, #blocked> loc(#loc19)
    gpu.barrier loc(#loc20)
    %36 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc21)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc22)
    %38 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc22)
    tt.store %37, %32, %38 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc22)
    %39 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc23)
    %40 = tt.addptr %39, %9 : tensor<1x8x!tt.ptr<f32>, #blocked>, tensor<1x8xi32, #blocked> loc(#loc23)
    tt.store %40, %35, %15 : tensor<1x8x!tt.ptr<f32>, #blocked> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":23:28)
#loc3 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":25:21)
#loc4 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":26:34)
#loc5 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":31:37)
#loc6 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":31:35)
#loc7 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":31:30)
#loc8 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":31:42)
#loc9 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":32:30)
#loc10 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":32:35)
#loc11 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":33:18)
#loc12 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":35:33)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":36:27)
#loc17 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":37:26)
#loc18 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":38:18)
#loc19 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":39:18)
#loc20 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":40:4)
#loc21 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":41:28)
#loc22 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":41:39)
#loc23 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":42:25)
#loc24 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":42:43)
#loc25 = loc("inductor_cache/f6/cf6wtwitrskcuuissbxxin6ngneqnr3jr4twpdtnatayvy5b4nkb.py":42:4)
#loc26 = loc(callsite(#loc13 at #loc14))
#loc28 = loc(callsite(#loc15 at #loc13))
#loc29 = loc(callsite(#loc28 at #loc14))
