; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__softmax_add_div_log_neg_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %10 = shl i32 %9, 5, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 31, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 28, !dbg !14
  %15 = sdiv i32 %13, 7, !dbg !15
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %14) #2, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %14) #2, !dbg !19
  %21 = bitcast i32 %20 to float, !dbg !19
  %22 = sext i32 %15 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %14) #2, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %3, i64 %22, !dbg !22
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #2, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %4, i64 %22, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #2, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %5, i64 %22, !dbg !26
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %14) #2, !dbg !27
  %31 = fcmp olt float %21, 0x3810000000000000, !dbg !28
  %32 = fmul float %21, 0x4160000000000000, !dbg !28
  %.02.i = select i1 %31, float %32, float %21, !dbg !28
  %i.i.0.i = select i1 %31, float -2.300000e+01, float 0.000000e+00, !dbg !28
  %33 = bitcast float %.02.i to i32, !dbg !28
  %34 = add i32 %33, -1059760811, !dbg !28
  %35 = and i32 %34, -8388608, !dbg !28
  %36 = sub i32 %33, %35, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = sitofp i32 %35 to float, !dbg !28
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not.i = icmp eq i32 %39, 0, !dbg !28
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %38, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !28
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %38, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !28
  %.08.i = select i1 %.not.i, float %41, float %40, !dbg !28
  %42 = fadd float %37, -1.000000e+00, !dbg !28
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not1.i = icmp eq i32 %43, 0, !dbg !28
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %42, float 0x3FC2073EC0000000) #2, !dbg !28
  %45 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %42, float 0x3FC2073EC0000000) #2, !dbg !28
  %.010.i = select i1 %.not1.i, float %45, float %44, !dbg !28
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not2.i = icmp eq i32 %46, 0, !dbg !28
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %42, float 0xBFBF19B980000000) #2, !dbg !28
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %42, float 0xBFBF19B980000000) #2, !dbg !28
  %.011.i = select i1 %.not2.i, float %48, float %47, !dbg !28
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not3.i = icmp eq i32 %49, 0, !dbg !28
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %42, float 0x3FC1E52AA0000000) #2, !dbg !28
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %42, float 0x3FC1E52AA0000000) #2, !dbg !28
  %.012.i = select i1 %.not3.i, float %51, float %50, !dbg !28
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not4.i = icmp eq i32 %52, 0, !dbg !28
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %42, float 0xBFC55B1720000000) #2, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %42, float 0xBFC55B1720000000) #2, !dbg !28
  %.09.i = select i1 %.not4.i, float %54, float %53, !dbg !28
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not5.i = icmp eq i32 %55, 0, !dbg !28
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %42, float 0x3FC99DA160000000) #2, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %42, float 0x3FC99DA160000000) #2, !dbg !28
  %.05.i = select i1 %.not5.i, float %57, float %56, !dbg !28
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not6.i = icmp eq i32 %58, 0, !dbg !28
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %42, float 0xBFCFFFE440000000) #2, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %42, float 0xBFCFFFE440000000) #2, !dbg !28
  %.01.i = select i1 %.not6.i, float %60, float %59, !dbg !28
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not7.i = icmp eq i32 %61, 0, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %42, float 0x3FD5554F00000000) #2, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %42, float 0x3FD5554F00000000) #2, !dbg !28
  %.0.i = select i1 %.not7.i, float %63, float %62, !dbg !28
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not8.i = icmp eq i32 %64, 0, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %42, float -5.000000e-01) #2, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %42, float -5.000000e-01) #2, !dbg !28
  %.07.i = select i1 %.not8.i, float %66, float %65, !dbg !28
  %67 = fmul float %42, %.07.i, !dbg !28
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not9.i = icmp eq i32 %68, 0, !dbg !28
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %67, float %42, float %42) #2, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %67, float %42, float %42) #2, !dbg !28
  %.06.i = select i1 %.not9.i, float %70, float %69, !dbg !28
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not10.i = icmp eq i32 %71, 0, !dbg !28
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !28
  %.04.i = select i1 %.not10.i, float %73, float %72, !dbg !28
  %74 = icmp ugt i32 %33, 2139095039, !dbg !28
  br i1 %74, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !28

__nv_fmaf_rn.exit.i.i:                            ; preds = %8
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !28
  %.not11.i = icmp eq i32 %75, 0, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !28
  %.03.i = select i1 %.not11.i, float %77, float %76, !dbg !28
  br label %__nv_logf.exit, !dbg !28

__nv_logf.exit:                                   ; preds = %8, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %8 ], !dbg !28
  %78 = bitcast i32 %18 to float, !dbg !17
  %79 = fmul float %78, 1.000000e+01, !dbg !29
  %80 = bitcast i32 %30 to float, !dbg !27
  %81 = bitcast i32 %28 to float, !dbg !25
  %82 = bitcast i32 %26 to float, !dbg !23
  %83 = bitcast i32 %24 to float, !dbg !21
  %84 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !28
  %85 = fsub float 0.000000e+00, %r.i.0.i, !dbg !30
  %86 = select i1 %84, float 0x7FF0000000000000, float %85, !dbg !28
  %87 = fadd float %79, %86, !dbg !31
  %88 = fsub float %87, %83, !dbg !32
  %89 = fmul float %88, 0x3FF7154760000000, !dbg !33
  %90 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %89) #2, !dbg !33
  %91 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %90, float %82) #2, !dbg !34
  %92 = fsub float %78, %81, !dbg !35
  %93 = fmul float %92, 1.000000e+01, !dbg !36
  %94 = fmul float %93, 0x3FF7154760000000, !dbg !37
  %95 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %94) #2, !dbg !37
  %96 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %95, float %80) #2, !dbg !38
  %97 = bitcast float %91 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %19, i1 %14) #2, !dbg !39
  %98 = getelementptr float, ptr addrspace(1) %6, i64 %16, !dbg !40
  %99 = bitcast float %96 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %98, i1 %14) #2, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cas5ulgz7ptj3jcyylfsiixlxd4435rvkxh6koieaokvtf6zenyt.py", directory: "inductor_cache/as")
!4 = !{ptr @triton_poi_fused__softmax_add_div_log_neg_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_add_div_log_neg_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_add_div_log_neg_3", linkageName: "triton_poi_fused__softmax_add_div_log_neg_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 39, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 36, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 34, column: 23, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 12, scope: !7)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 24, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 24, scope: !7)
!38 = !DILocation(line: 47, column: 20, scope: !7)
!39 = !DILocation(line: 48, column: 40, scope: !7)
!40 = !DILocation(line: 49, column: 25, scope: !7)
!41 = !DILocation(line: 49, column: 37, scope: !7)
!42 = !DILocation(line: 49, column: 4, scope: !7)
