#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":40:67)
#loc42 = loc(callsite(#loc1 at #loc17))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_native_group_norm_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0), %arg6: i32 loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":19:0)) attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.638400e+04> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c2_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x2xi32, #blocked> loc(#loc6)
    %6 = arith.addi %3, %5 : tensor<1x2xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %6 : tensor<1x2x!tt.ptr<f32>, #blocked>, tensor<1x2xi32, #blocked> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x2xi1, #blocked> loc(#loc8)
    %10 = tt.load %8, %9, %cst_2 : tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc8)
    %11 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = tt.addptr %11, %6 : tensor<1x2x!tt.ptr<f32>, #blocked>, tensor<1x2xi32, #blocked> loc(#loc9)
    %13 = tt.load %12, %9, %cst_2 : tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc10)
    %14 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc11)
    %15 = tt.addptr %14, %6 : tensor<1x2x!tt.ptr<f32>, #blocked>, tensor<1x2xi32, #blocked> loc(#loc11)
    %16 = tt.load %15, %9, %cst_2 : tensor<1x2x!tt.ptr<f32>, #blocked> loc(#loc12)
    %17 = arith.select %9, %10, %cst_2 : tensor<1x2xi1, #blocked>, tensor<1x2xf32, #blocked> loc(#loc13)
    %18 = arith.select %9, %13, %cst_2 : tensor<1x2xi1, #blocked>, tensor<1x2xf32, #blocked> loc(#loc14)
    %19 = arith.select %9, %16, %cst_2 : tensor<1x2xi1, #blocked>, tensor<1x2xf32, #blocked> loc(#loc15)
    %20:3 = "tt.reduce"(%17, %18, %19) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc17)), %arg8: f32 loc(callsite(#loc1 at #loc17)), %arg9: f32 loc(callsite(#loc1 at #loc17)), %arg10: f32 loc(callsite(#loc1 at #loc17)), %arg11: f32 loc(callsite(#loc1 at #loc17)), %arg12: f32 loc(callsite(#loc1 at #loc17))):
      %31 = arith.subf %arg10, %arg7 : f32 loc(#loc55)
      %32 = arith.addf %arg9, %arg12 : f32 loc(#loc56)
      %33 = arith.cmpf oeq, %32, %cst : f32 loc(#loc57)
      %34 = arith.divf %arg12, %32 : f32 loc(#loc58)
      %35 = arith.select %33, %cst, %34 : f32 loc(#loc59)
      %36 = arith.mulf %31, %35 : f32 loc(#loc60)
      %37 = arith.addf %arg7, %36 : f32 loc(#loc61)
      %38 = arith.addf %arg8, %arg11 : f32 loc(#loc62)
      %39 = arith.mulf %31, %31 : f32 loc(#loc63)
      %40 = arith.mulf %39, %arg9 : f32 loc(#loc64)
      %41 = arith.mulf %40, %35 : f32 loc(#loc65)
      %42 = arith.addf %38, %41 : f32 loc(#loc66)
      tt.reduce.return %37, %42, %32 : f32, f32, f32 loc(#loc41)
    }) : (tensor<1x2xf32, #blocked>, tensor<1x2xf32, #blocked>, tensor<1x2xf32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc41)
    %21 = tt.expand_dims %20#0 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc30)
    %22 = tt.expand_dims %20#1 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc31)
    %23 = arith.divf %22, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc32)
    %24 = arith.addf %23, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc33)
    %25 = tt.extern_elementwise %24 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc34)
    gpu.barrier loc(#loc35)
    %26 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %28 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc37)
    tt.store %27, %25, %28 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %29 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.store %30, %21, %28 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":23:28)
#loc3 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":25:21)
#loc4 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":26:34)
#loc5 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":31:37)
#loc6 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":31:35)
#loc7 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":31:30)
#loc8 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":31:42)
#loc9 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":32:30)
#loc10 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":32:42)
#loc11 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":33:30)
#loc12 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":33:42)
#loc13 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":37:33)
#loc14 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":38:33)
#loc15 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":39:33)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc30 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":41:18)
#loc31 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":42:18)
#loc32 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":45:20)
#loc33 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":47:20)
#loc34 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":48:28)
#loc35 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":49:4)
#loc36 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":50:28)
#loc37 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":50:40)
#loc38 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":51:25)
#loc39 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":51:37)
#loc40 = loc("inductor_cache/ei/ceishllhhrbv4os5pmr3q2ybd6tz7tubvdmpicn5gkr43a6kyrgu.py":51:4)
#loc41 = loc(callsite(#loc16 at #loc17))
#loc43 = loc(callsite(#loc18 at #loc16))
#loc44 = loc(callsite(#loc19 at #loc16))
#loc45 = loc(callsite(#loc20 at #loc16))
#loc46 = loc(callsite(#loc21 at #loc16))
#loc47 = loc(callsite(#loc22 at #loc16))
#loc48 = loc(callsite(#loc23 at #loc16))
#loc49 = loc(callsite(#loc24 at #loc16))
#loc50 = loc(callsite(#loc25 at #loc16))
#loc51 = loc(callsite(#loc26 at #loc16))
#loc52 = loc(callsite(#loc27 at #loc16))
#loc53 = loc(callsite(#loc28 at #loc16))
#loc54 = loc(callsite(#loc29 at #loc16))
#loc55 = loc(callsite(#loc43 at #loc17))
#loc56 = loc(callsite(#loc44 at #loc17))
#loc57 = loc(callsite(#loc45 at #loc17))
#loc58 = loc(callsite(#loc46 at #loc17))
#loc59 = loc(callsite(#loc47 at #loc17))
#loc60 = loc(callsite(#loc48 at #loc17))
#loc61 = loc(callsite(#loc49 at #loc17))
#loc62 = loc(callsite(#loc50 at #loc17))
#loc63 = loc(callsite(#loc51 at #loc17))
#loc64 = loc(callsite(#loc52 at #loc17))
#loc65 = loc(callsite(#loc53 at #loc17))
#loc66 = loc(callsite(#loc54 at #loc17))
