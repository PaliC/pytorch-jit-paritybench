//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_2 // -- Begin function triton_red_fused_mean_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_2
.visible .entry triton_red_fused_mean_2(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_2_param_1,
	.param .u32 triton_red_fused_mean_2_param_2,
	.param .u32 triton_red_fused_mean_2_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<77>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_mean_2_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_mean_2_param_0];
$L__tmp0:
	.loc	1 22 28                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:22:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:22:33
	shl.b32 	%r1, %r7, 6;
	.loc	1 23 44                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:23:44
	mov.u32 	%r8, %tid.x;
	shl.b32 	%r9, %r8, 2;
	and.b32  	%r3, %r9, 60;
	.loc	1 23 23                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:23:23
	or.b32  	%r10, %r1, %r3;
	.loc	1 27 19                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:27:19
	bfe.s32 	%r11, %r7, 25, 1;
	shr.u32 	%r12, %r11, 23;
	add.s32 	%r13, %r10, %r12;
	shr.s32 	%r14, %r13, 9;
	.loc	1 30 36                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:30:36
	mad.lo.s32 	%r15, %r14, 65024, %r10;
	shl.b32 	%r16, %r8, 5;
	and.b32  	%r17, %r16, 3584;
	add.s32 	%r76, %r15, %r17;
	mov.f32 	%f35, 0f00000000;
	mov.u64 	%rd10, -8;
	mov.pred 	%p1, -1;
	mov.f32 	%f36, %f35;
	mov.f32 	%f37, %f35;
	mov.f32 	%f38, %f35;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:34:34
	mul.wide.s32 	%rd7, %r76, 4;
	add.s64 	%rd6, %rd3, %rd7;
	mov.b32 	%r22, 0;
	.loc	1 34 59                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:34:59
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r18, %r22;
	@!%p1 mov.u32 %r19, %r22;
	@!%p1 mov.u32 %r20, %r22;
	@!%p1 mov.u32 %r21, %r22;
	// end inline asm
	mov.b32 	%f13, %r18;
	mov.b32 	%f14, %r19;
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r21;
	.loc	1 36 23                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:36:23
	add.f32 	%f38, %f38, %f16;
	add.f32 	%f37, %f37, %f15;
	add.f32 	%f36, %f36, %f14;
	add.f32 	%f35, %f35, %f13;
	.loc	1 30 36                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:30:36
	add.s64 	%rd10, %rd10, 8;
	add.s32 	%r76, %r76, 4096;
	setp.lt.u64 	%p6, %rd10, 120;
	@%p6 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:23:44
	and.b32  	%r48, %r8, 63;
	.loc	1 23 23                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:23:23
	or.b32  	%r49, %r1, %r48;
	.loc	1 23 44                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:23:44
	and.b32  	%r50, %r8, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f35;
	shfl.sync.bfly.b32	%r52, %r51, 16, 31, -1;
	mov.b32 	%f17, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f35, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f36;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f19, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f36, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f37;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f21, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f37, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f38;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f23, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f38, %f23;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r50, 0;
	shr.u32 	%r59, %r8, 3;
	and.b32  	%r60, %r59, 12;
	shl.b32 	%r61, %r3, 4;
	or.b32  	%r62, %r61, %r60;
	mov.u32 	%r63, global_smem;
	add.s32 	%r26, %r63, %r62;
	mov.b32 	%r27, %f18;
	// begin inline asm
	@%p7 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r26, 16;
	mov.b32 	%r29, %f20;
	// begin inline asm
	@%p7 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r26, 32;
	mov.b32 	%r31, %f22;
	// begin inline asm
	@%p7 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r26, 48;
	mov.b32 	%r33, %f24;
	// begin inline asm
	@%p7 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p11, %r8, 256;
	add.s32 	%r35, %r63, %r9;
	// begin inline asm
	@%p11 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r34;
	shfl.sync.bfly.b32	%r65, %r34, 2, 31, -1;
	mov.b32 	%f26, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f27;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f28, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r68, %r8, 3;
	setp.eq.s32 	%p17, %r68, 0;
	and.pred  	%p12, %p11, %p17;
	mov.b32 	%r37, %f29;
	// begin inline asm
	@%p12 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	add.s32 	%r39, %r35, 512;
	// begin inline asm
	@%p11 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r38;
	shfl.sync.bfly.b32	%r69, %r38, 2, 31, -1;
	mov.b32 	%f31, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f32;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	mov.b32 	%f33, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f34;
	// begin inline asm
	@%p12 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r72, %r63, %r61;
	ld.shared.u32 	%r43, [%r72];
	ld.shared.u32 	%r44, [%r72+16];
	ld.shared.u32 	%r45, [%r72+32];
	ld.shared.u32 	%r46, [%r72+48];
$L__tmp2:
	.loc	1 38 28                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:38:28
	bar.sync 	0;
	mad.lo.s32 	%r42, %r3, -12, %r72;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r42 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r73, %r48, 2;
	add.s32 	%r74, %r63, %r73;
	ld.shared.u32 	%r47, [%r74];
	.loc	1 39 25                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:39:25
	mul.wide.s32 	%rd9, %r49, 4;
	add.s64 	%rd8, %rd4, %rd9;
	.loc	1 39 36                         // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:39:36
	and.b32  	%r75, %r8, 64;
	setp.eq.s32 	%p16, %r75, 0;
	// begin inline asm
	@%p16 st.global.b32 [ %rd8 + 0 ], { %r47 };
	// end inline asm
	.loc	1 39 4                          // cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/na/cnaehdawondqadha7vo3fxpnm5g5sfu4sgsmo54zcnxn63lsfhk6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 97
.b8 101
.b8 104
.b8 100
.b8 97
.b8 119
.b8 111
.b8 110
.b8 100
.b8 113
.b8 97
.b8 100
.b8 104
.b8 97
.b8 55
.b8 118
.b8 111
.b8 51
.b8 102
.b8 120
.b8 112
.b8 110
.b8 109
.b8 53
.b8 103
.b8 53
.b8 115
.b8 102
.b8 117
.b8 52
.b8 115
.b8 103
.b8 115
.b8 109
.b8 111
.b8 53
.b8 52
.b8 122
.b8 99
.b8 110
.b8 120
.b8 110
.b8 54
.b8 51
.b8 108
.b8 115
.b8 102
.b8 104
.b8 107
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
