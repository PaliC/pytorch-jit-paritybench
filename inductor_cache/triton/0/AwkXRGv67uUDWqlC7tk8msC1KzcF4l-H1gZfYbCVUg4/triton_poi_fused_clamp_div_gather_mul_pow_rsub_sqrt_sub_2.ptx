//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2 // -- Begin function triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 119, 99, 47, 99, 119, 99, 112, 119, 52, 118, 97, 113, 102, 51, 112, 55, 108, 120, 50, 53, 106, 50, 111, 120, 97, 122, 104, 112, 112, 115, 99, 101, 118, 119, 112, 52, 100, 105, 98, 98, 55, 120, 109, 116, 53, 106, 105, 112, 106, 122, 115, 97, 114, 100, 109, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 55, 32, 60, 32, 52};
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2
.visible .entry triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_3,
	.param .u32 triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<30>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:21:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:21:33
	shl.b32 	%r8, %r5, 8;
	.loc	1 22 36                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:22:36
	mov.u32 	%r9, %tid.x;
	shl.b32 	%r10, %r9, 1;
	and.b32  	%r11, %r10, 254;
	.loc	1 22 23                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:22:23
	or.b32  	%r1, %r8, %r11;
	.loc	1 23 21                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:23:21
	setp.gt.s32 	%p4, %r1, 255;
	setp.lt.s32 	%p3, %r1, 256;
	.loc	1 25 19                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:25:19
	bfe.s32 	%r12, %r5, 23, 1;
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r1, %r13;
	shr.s32 	%r2, %r14, 2;
	.loc	1 26 34                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:26:34
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd5, %rd10, %rd12;
	.loc	1 26 39                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:26:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p3 ld.global.v2.b32 { %r6, %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:27:30
	mul.wide.s32 	%rd13, %r2, 8;
	add.s64 	%rd7, %rd11, %rd13;
	.loc	1 27 35                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:27:35
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 29 18                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:29:18
	add.s64 	%rd14, %rd6, -1;
	.loc	1 31 18                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:31:18
	add.s64 	%rd15, %rd6, 3;
	.loc	1 32 18                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:32:18
	setp.lt.s64 	%p5, %rd14, 0;
	.loc	1 33 32                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:33:32
	selp.b64 	%rd2, %rd15, %rd14, %p5;
	.loc	1 34 37                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:34:37
	setp.lt.u64 	%p6, %rd2, 4;
	.loc	1 34 60                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:34:60
	or.pred  	%p7, %p4, %p6;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__nv_sqrtf.exit
	.loc	1 0 60                          // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:0:60
	ld.param.u64 	%rd4, [triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_3];
	ld.param.u64 	%rd3, [triton_poi_fused_clamp_div_gather_mul_pow_rsub_sqrt_sub_2_param_2];
	.loc	1 34 60                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:34:60
	bar.sync 	0;
	.loc	1 35 39                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:35:39
	shl.b32 	%r39, %r2, 2;
	.loc	1 35 37                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:35:37
	cvt.s64.s32 	%rd21, %r39;
	add.s64 	%rd22, %rd2, %rd21;
	.loc	1 35 30                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:35:30
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd16, %rd3, %rd23;
	.loc	1 35 44                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:35:44
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r18 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r21 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 36 16                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:36:16
	add.s64 	%rd24, %rd2, 1;
	.loc	1 37 21                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:37:21
	cvt.rn.f32.s64 	%f1, %rd24;
	.loc	1 38 19                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:38:19
	mov.b32 	%r19, %f1;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f2, %r17;
	// begin inline asm
	div.full.f32 %r20, %r21, %r19;
	// end inline asm
	mov.b32 	%f3, %r20;
	.loc	1 39 31                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:39:31
	add.s64 	%rd18, %rd4, %rd23;
	.loc	1 39 45                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:39:45
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r26 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r29 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 40 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:40:20
	// begin inline asm
	div.full.f32 %r25, %r26, %r19;
	// end inline asm
	mov.b32 	%f4, %r25;
	// begin inline asm
	div.full.f32 %r28, %r29, %r19;
	// end inline asm
	mov.b32 	%f5, %r28;
	.loc	1 42 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:42:20
	neg.f32 	%f6, %f2;
	fma.rn.f32 	%f7, %f6, %f2, %f4;
	neg.f32 	%f8, %f3;
	fma.rn.f32 	%f9, %f8, %f3, %f5;
	.loc	1 45 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:45:20
	neg.f32 	%f10, %f7;
	fma.rn.f32 	%f11, %f10, %f1, 0f3F800000;
	neg.f32 	%f12, %f9;
	fma.rn.f32 	%f13, %f12, %f1, 0f3F800000;
	.loc	1 46 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:46:20
	mov.b32 	%r32, %f11;
	// begin inline asm
	div.full.f32 %r31, %r32, %r19;
	// end inline asm
	mov.b32 	%f14, %r31;
	mov.b32 	%r35, %f13;
	// begin inline asm
	div.full.f32 %r34, %r35, %r19;
	// end inline asm
	mov.b32 	%f15, %r34;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p13, %f14, 0f00000000;
	selp.f32 	%f16, 0f00000000, %f14, %p13;
	setp.le.f32 	%p14, %f15, 0f00000000;
	selp.f32 	%f17, 0f00000000, %f15, %p14;
$L__tmp2:
	.loc	1 49 27                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:49:27
	sqrt.approx.ftz.f32 	%f18, %f16;
	sqrt.approx.ftz.f32 	%f19, %f17;
	.loc	1 26 39                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:26:39
	mov.b32 	%f20, %r6;
	mov.b32 	%f21, %r7;
	.loc	1 50 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:50:20
	sub.f32 	%f22, %f2, %f18;
	sub.f32 	%f23, %f3, %f19;
	.loc	1 51 19                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:51:19
	sub.f32 	%f24, %f20, %f22;
	sub.f32 	%f25, %f21, %f23;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p15, %f24, 0f00000000;
	selp.f32 	%f26, 0f00000000, %f24, %p15;
	setp.le.f32 	%p16, %f25, 0f00000000;
	selp.f32 	%f27, 0f00000000, %f25, %p16;
$L__tmp4:
	.loc	1 53 20                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:53:20
	mul.f32 	%f28, %f26, %f26;
	mul.f32 	%f29, %f27, %f27;
	.loc	1 54 40                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:54:40
	mov.b32 	%r37, %f28;
	mov.b32 	%r38, %f29;
	// begin inline asm
	@%p3 st.global.v2.b32 [ %rd5 + 0 ], { %r37, %r38 };
	// end inline asm
	.loc	1 54 4                          // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:54:4
	ret;
$L__BB0_1:
	.loc	1 34 60                         // cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py:34:60
	mov.u64 	%rd25, assertMessage_0;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, assertFile_0;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, assertFunc_0;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1], %rd28;
	.param .b32 param2;
	st.param.b32 	[param2], 34;
	.param .b64 param3;
	st.param.b64 	[param3], %rd30;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wc/cwcpw4vaqf3p7lx25j2oxazhppscevwp4dibb7xmt5jipjzsardm.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 226                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 99
.b8 112
.b8 119
.b8 52
.b8 118
.b8 97
.b8 113
.b8 102
.b8 51
.b8 112
.b8 55
.b8 108
.b8 120
.b8 50
.b8 53
.b8 106
.b8 50
.b8 111
.b8 120
.b8 97
.b8 122
.b8 104
.b8 112
.b8 112
.b8 115
.b8 99
.b8 101
.b8 118
.b8 119
.b8 112
.b8 52
.b8 100
.b8 105
.b8 98
.b8 98
.b8 55
.b8 120
.b8 109
.b8 116
.b8 53
.b8 106
.b8 105
.b8 112
.b8 106
.b8 122
.b8 115
.b8 97
.b8 114
.b8 100
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9f:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
