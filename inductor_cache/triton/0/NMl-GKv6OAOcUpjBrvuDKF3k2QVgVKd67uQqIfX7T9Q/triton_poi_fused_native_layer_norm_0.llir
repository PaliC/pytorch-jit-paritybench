; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_native_layer_norm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = mul i32 %12, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl i32 %12, 6, !dbg !17
  %15 = add i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %11) #3, !dbg !20
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !20
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !20
  %21 = bitcast i32 %19 to float, !dbg !20
  %22 = bitcast i32 %20 to float, !dbg !20
  %23 = add i32 %15, 16, !dbg !21
  %24 = sext i32 %23 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %11) #3, !dbg !23
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !23
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !23
  %29 = bitcast i32 %27 to float, !dbg !23
  %30 = bitcast i32 %28 to float, !dbg !23
  %31 = add i32 %15, 32, !dbg !24
  %32 = sext i32 %31 to i64, !dbg !25
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !25
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %33, i1 %11) #3, !dbg !26
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !26
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !26
  %37 = bitcast i32 %35 to float, !dbg !26
  %38 = bitcast i32 %36 to float, !dbg !26
  %39 = add i32 %15, 48, !dbg !27
  %40 = sext i32 %39 to i64, !dbg !28
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !28
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 %11) #3, !dbg !29
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !29
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !29
  %45 = bitcast i32 %43 to float, !dbg !29
  %46 = bitcast i32 %44 to float, !dbg !29
  %47 = fadd float %21, %29, !dbg !30
  %48 = fadd float %22, %30, !dbg !30
  %49 = fadd float %47, %37, !dbg !31
  %50 = fadd float %48, %38, !dbg !31
  %51 = fadd float %49, %45, !dbg !32
  %52 = fadd float %50, %46, !dbg !32
  %53 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %51, float 4.000000e+00) #3, !dbg !33
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 4.000000e+00) #3, !dbg !33
  %55 = fsub float %21, %53, !dbg !34
  %56 = fsub float %22, %54, !dbg !34
  %57 = fmul float %55, %55, !dbg !35
  %58 = fmul float %56, %56, !dbg !35
  %59 = fsub float %29, %53, !dbg !36
  %60 = fsub float %30, %54, !dbg !36
  %61 = fmul float %59, %59, !dbg !37
  %62 = fmul float %60, %60, !dbg !37
  %63 = fadd float %57, %61, !dbg !38
  %64 = fadd float %58, %62, !dbg !38
  %65 = fsub float %37, %53, !dbg !39
  %66 = fsub float %38, %54, !dbg !39
  %67 = fmul float %65, %65, !dbg !40
  %68 = fmul float %66, %66, !dbg !40
  %69 = fadd float %67, %63, !dbg !41
  %70 = fadd float %68, %64, !dbg !41
  %71 = fsub float %45, %53, !dbg !42
  %72 = fsub float %46, %54, !dbg !42
  %73 = fmul float %71, %71, !dbg !43
  %74 = fmul float %72, %72, !dbg !43
  %75 = fadd float %73, %69, !dbg !44
  %76 = fadd float %74, %70, !dbg !44
  %77 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %75, float 4.000000e+00) #3, !dbg !45
  %78 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %76, float 4.000000e+00) #3, !dbg !45
  %79 = fadd float %77, 0x3EB0C6F7A0000000, !dbg !46
  %80 = fadd float %78, 0x3EB0C6F7A0000000, !dbg !46
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not.i = icmp eq i32 %81, 0, !dbg !47
  br i1 %.not.i, label %84, label %82, !dbg !47

82:                                               ; preds = %4
  %83 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %79), !dbg !47
  br label %__nv_rsqrtf.exit, !dbg !47

84:                                               ; preds = %4
  %85 = tail call float @llvm.nvvm.rsqrt.approx.f(float %79), !dbg !47
  br label %__nv_rsqrtf.exit, !dbg !47

__nv_rsqrtf.exit:                                 ; preds = %82, %84
  %.0.i = phi float [ %83, %82 ], [ %85, %84 ], !dbg !47
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not.i1 = icmp eq i32 %86, 0, !dbg !47
  br i1 %.not.i1, label %89, label %87, !dbg !47

87:                                               ; preds = %__nv_rsqrtf.exit
  %88 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %80), !dbg !47
  br label %__nv_rsqrtf.exit3, !dbg !47

89:                                               ; preds = %__nv_rsqrtf.exit
  %90 = tail call float @llvm.nvvm.rsqrt.approx.f(float %80), !dbg !47
  br label %__nv_rsqrtf.exit3, !dbg !47

__nv_rsqrtf.exit3:                                ; preds = %87, %89
  %.0.i2 = phi float [ %88, %87 ], [ %90, %89 ], !dbg !47
  %91 = sext i32 %10 to i64, !dbg !48
  %92 = getelementptr float, ptr addrspace(1) %1, i64 %91, !dbg !48
  %93 = bitcast float %53 to i32, !dbg !49
  %94 = bitcast float %54 to i32, !dbg !49
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %93, i32 %94, ptr addrspace(1) %92, i1 %11) #3, !dbg !49
  %95 = getelementptr float, ptr addrspace(1) %2, i64 %91, !dbg !50
  %96 = bitcast float %.0.i to i32, !dbg !51
  %97 = bitcast float %.0.i2 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %96, i32 %97, ptr addrspace(1) %95, i1 %11) #3, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyj7ryt4umnlzcroil5i72jlilvubrflibmffar4lwaivtg7cijc.py", directory: "inductor_cache/yj")
!4 = !{ptr @triton_poi_fused_native_layer_norm_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_native_layer_norm_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_native_layer_norm_0", linkageName: "triton_poi_fused_native_layer_norm_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 40, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 48, scope: !7)
!24 = !DILocation(line: 29, column: 40, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 48, scope: !7)
!27 = !DILocation(line: 30, column: 40, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 48, scope: !7)
!30 = !DILocation(line: 31, column: 18, scope: !7)
!31 = !DILocation(line: 32, column: 18, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 36, column: 18, scope: !7)
!35 = !DILocation(line: 37, column: 19, scope: !7)
!36 = !DILocation(line: 38, column: 19, scope: !7)
!37 = !DILocation(line: 39, column: 20, scope: !7)
!38 = !DILocation(line: 40, column: 20, scope: !7)
!39 = !DILocation(line: 41, column: 19, scope: !7)
!40 = !DILocation(line: 42, column: 20, scope: !7)
!41 = !DILocation(line: 43, column: 20, scope: !7)
!42 = !DILocation(line: 44, column: 19, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 20, scope: !7)
!46 = !DILocation(line: 49, column: 20, scope: !7)
!47 = !DILocation(line: 50, column: 28, scope: !7)
!48 = !DILocation(line: 51, column: 25, scope: !7)
!49 = !DILocation(line: 51, column: 36, scope: !7)
!50 = !DILocation(line: 52, column: 25, scope: !7)
!51 = !DILocation(line: 52, column: 37, scope: !7)
!52 = !DILocation(line: 52, column: 4, scope: !7)
