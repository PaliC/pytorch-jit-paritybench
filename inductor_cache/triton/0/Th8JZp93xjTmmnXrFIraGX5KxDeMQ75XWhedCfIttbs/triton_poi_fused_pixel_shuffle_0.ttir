#loc = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0)
module {
  tt.func public @triton_poi_fused_pixel_shuffle_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0), %arg4: i32 loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst = arith.constant dense<64> : tensor<1x256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<1x256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<1x256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1x256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<512> : tensor<1x256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_4 : tensor<1x256xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.cmpi slt, %7, %c2_i32 : i32 loc(#loc9)
    %9 = arith.remsi %5, %cst_3 : tensor<1x256xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_3 : tensor<1x256xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_2 : tensor<1x256xi32> loc(#loc12)
    %12 = arith.divsi %5, %cst_1 : tensor<1x256xi32> loc(#loc13)
    %13 = arith.remsi %12, %cst_3 : tensor<1x256xi32> loc(#loc14)
    %14 = arith.divsi %5, %cst_0 : tensor<1x256xi32> loc(#loc15)
    %15 = arith.remsi %14, %cst_3 : tensor<1x256xi32> loc(#loc16)
    %16 = arith.muli %13, %cst_3 : tensor<1x256xi32> loc(#loc17)
    %17 = arith.addi %9, %16 : tensor<1x256xi32> loc(#loc18)
    %18 = arith.muli %7, %c16_i32 : i32 loc(#loc19)
    %19 = tt.splat %18 : i32 -> tensor<1x256xi32> loc(#loc20)
    %20 = arith.addi %17, %19 : tensor<1x256xi32> loc(#loc20)
    %21 = arith.muli %11, %cst_0 : tensor<1x256xi32> loc(#loc21)
    %22 = arith.addi %20, %21 : tensor<1x256xi32> loc(#loc22)
    %23 = arith.muli %14, %cst : tensor<1x256xi32> loc(#loc23)
    %24 = arith.addi %22, %23 : tensor<1x256xi32> loc(#loc24)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc25)
    %26 = tt.addptr %25, %24 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc25)
    %27 = tt.splat %8 : i1 -> tensor<1x256xi1> loc(#loc26)
    %28 = arith.andi %27, %6 : tensor<1x256xi1> loc(#loc26)
    %29 = tt.load %26, %28 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc27)
    %30 = arith.muli %11, %cst_2 : tensor<1x256xi32> loc(#loc28)
    %31 = tt.splat %7 : i32 -> tensor<1x256xi32> loc(#loc29)
    %32 = arith.addi %31, %30 : tensor<1x256xi32> loc(#loc29)
    %33 = arith.muli %15, %cst_3 : tensor<1x256xi32> loc(#loc30)
    %34 = arith.addi %32, %33 : tensor<1x256xi32> loc(#loc31)
    %35 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc32)
    %36 = tt.addptr %35, %34 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc32)
    %37 = tt.load %36, %28 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc33)
    %38 = arith.addf %29, %37 : tensor<1x256xf32> loc(#loc34)
    %39 = arith.muli %5, %cst_2 : tensor<1x256xi32> loc(#loc35)
    %40 = arith.addi %31, %39 : tensor<1x256xi32> loc(#loc36)
    %41 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc37)
    %42 = tt.addptr %41, %40 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc37)
    tt.store %42, %38, %28 : tensor<1x256x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":22:28)
#loc3 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":22:33)
#loc4 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":23:36)
#loc5 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":23:44)
#loc6 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":23:23)
#loc7 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":24:21)
#loc8 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":25:28)
#loc9 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":27:21)
#loc10 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":29:19)
#loc11 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":30:21)
#loc12 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":30:26)
#loc13 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":31:21)
#loc14 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":31:26)
#loc15 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":32:19)
#loc16 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":33:27)
#loc17 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:37)
#loc18 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:35)
#loc19 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:45)
#loc20 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:42)
#loc21 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:53)
#loc22 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:50)
#loc23 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:61)
#loc24 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:58)
#loc25 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:30)
#loc26 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:74)
#loc27 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":35:66)
#loc28 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:37)
#loc29 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:35)
#loc30 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:44)
#loc31 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:42)
#loc32 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:30)
#loc33 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":36:49)
#loc34 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":37:18)
#loc35 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":38:32)
#loc36 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":38:30)
#loc37 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":38:25)
#loc38 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":38:43)
#loc39 = loc("inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py":38:4)
