; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_34(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 18432, !dbg !14
  %10 = sdiv i32 %8, 6, !dbg !15
  %11 = sdiv i32 %8, 36, !dbg !16
  %12 = shl nsw i32 %11, 2, !dbg !17
  %13 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !18
  %14 = insertelement <2 x i32> %13, i32 %10, i64 1, !dbg !18
  %15 = srem <2 x i32> %14, splat (i32 6), !dbg !18
  %16 = trunc nsw <2 x i32> %15 to <2 x i8>, !dbg !19
  %17 = sdiv <2 x i8> %16, splat (i8 3), !dbg !19
  %18 = shl nsw <2 x i8> %16, splat (i8 1), !dbg !20
  %19 = add nsw <2 x i8> %18, splat (i8 7), !dbg !20
  %20 = sdiv <2 x i8> %19, splat (i8 6), !dbg !20
  %21 = icmp slt <2 x i8> %17, %20, !dbg !21
  %22 = extractelement <2 x i1> %21, i64 0, !dbg !22
  %23 = extractelement <2 x i1> %21, i64 1, !dbg !22
  %24 = and i1 %22, %23, !dbg !22
  %25 = extractelement <2 x i8> %17, i64 1, !dbg !23
  %26 = sext i8 %25 to i32, !dbg !23
  %27 = shl nsw i32 %26, 1, !dbg !23
  %28 = extractelement <2 x i8> %17, i64 0, !dbg !24
  %29 = sext i8 %28 to i32, !dbg !24
  %30 = and i1 %9, %24, !dbg !25
  %31 = add nsw <2 x i8> %17, splat (i8 1), !dbg !26
  %32 = icmp samesign ult <2 x i8> %31, %20, !dbg !27
  %33 = extractelement <2 x i1> %32, i64 0, !dbg !28
  %34 = and i1 %23, %33, !dbg !29
  %35 = and i1 %9, %34, !dbg !30
  %36 = extractelement <2 x i1> %32, i64 1, !dbg !28
  %37 = and i1 %22, %36, !dbg !31
  %38 = and i1 %9, %37, !dbg !32
  %39 = and i1 %33, %36, !dbg !28
  %40 = add nsw i32 %12, %29, !dbg !24
  %41 = add nsw i32 %40, 1, !dbg !33
  %42 = add nsw i32 %40, 2, !dbg !34
  %43 = add nsw i32 %40, 3, !dbg !35
  %44 = insertelement <4 x i32> poison, i32 %40, i64 0, !dbg !36
  %45 = insertelement <4 x i32> %44, i32 %41, i64 1, !dbg !36
  %46 = insertelement <4 x i32> %45, i32 %42, i64 2, !dbg !36
  %47 = insertelement <4 x i32> %46, i32 %43, i64 3, !dbg !36
  %48 = insertelement <4 x i32> poison, i32 %27, i64 0, !dbg !36
  %49 = shufflevector <4 x i32> %48, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !36
  %50 = add nsw <4 x i32> %47, %49, !dbg !36
  %51 = extractelement <4 x i32> %50, i64 0, !dbg !37
  %52 = sext i32 %51 to i64, !dbg !37
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !37
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %30, i32 0, i1 %30) #1, !dbg !38
  %55 = bitcast i32 %54 to float, !dbg !38
  %56 = extractelement <4 x i32> %50, i64 1, !dbg !39
  %57 = sext i32 %56 to i64, !dbg !39
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !39
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %35, i32 0, i1 %35) #1, !dbg !40
  %60 = bitcast i32 %59 to float, !dbg !40
  %61 = fadd float %55, %60, !dbg !41
  %62 = extractelement <4 x i32> %50, i64 2, !dbg !42
  %63 = sext i32 %62 to i64, !dbg !42
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !42
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %38, i32 0, i1 %38) #1, !dbg !43
  %66 = bitcast i32 %65 to float, !dbg !43
  %67 = fadd float %61, %66, !dbg !44
  %68 = extractelement <4 x i32> %50, i64 3, !dbg !45
  %69 = sext i32 %68 to i64, !dbg !45
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !45
  %71 = and i1 %9, %39, !dbg !46
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %71, i32 0, i1 %71) #1, !dbg !47
  %73 = bitcast i32 %72 to float, !dbg !47
  %74 = fadd float %67, %73, !dbg !48
  %75 = select i1 %24, float 1.000000e+00, float 0.000000e+00, !dbg !49
  %76 = select i1 %34, float 1.000000e+00, float 0.000000e+00, !dbg !50
  %77 = fadd float %76, %75, !dbg !51
  %78 = select i1 %37, float 1.000000e+00, float 0.000000e+00, !dbg !52
  %79 = fadd float %78, %77, !dbg !53
  %80 = select i1 %39, float 1.000000e+00, float 0.000000e+00, !dbg !54
  %81 = fadd float %80, %79, !dbg !55
  %82 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %74, float %81) #1, !dbg !56
  %83 = sext i32 %8 to i64, !dbg !57
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !57
  %85 = bitcast float %82 to i32, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %84, i1 %9) #1, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py", directory: "inductor_cache/sw")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_34, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_34, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_34", linkageName: "triton_poi_fused__adaptive_avg_pool2d_34", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 35, column: 46, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 31, column: 17, scope: !7)
!20 = !DILocation(line: 32, column: 25, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 33, scope: !7)
!24 = !DILocation(line: 35, column: 44, scope: !7)
!25 = !DILocation(line: 35, column: 70, scope: !7)
!26 = !DILocation(line: 36, column: 16, scope: !7)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 46, column: 20, scope: !7)
!29 = !DILocation(line: 38, column: 19, scope: !7)
!30 = !DILocation(line: 39, column: 76, scope: !7)
!31 = !DILocation(line: 43, column: 20, scope: !7)
!32 = !DILocation(line: 44, column: 76, scope: !7)
!33 = !DILocation(line: 39, column: 49, scope: !7)
!34 = !DILocation(line: 44, column: 49, scope: !7)
!35 = !DILocation(line: 47, column: 49, scope: !7)
!36 = !DILocation(line: 35, column: 52, scope: !7)
!37 = !DILocation(line: 35, column: 30, scope: !7)
!38 = !DILocation(line: 35, column: 63, scope: !7)
!39 = !DILocation(line: 39, column: 31, scope: !7)
!40 = !DILocation(line: 39, column: 68, scope: !7)
!41 = !DILocation(line: 40, column: 20, scope: !7)
!42 = !DILocation(line: 44, column: 31, scope: !7)
!43 = !DILocation(line: 44, column: 68, scope: !7)
!44 = !DILocation(line: 45, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 31, scope: !7)
!46 = !DILocation(line: 47, column: 76, scope: !7)
!47 = !DILocation(line: 47, column: 68, scope: !7)
!48 = !DILocation(line: 48, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 34, scope: !7)
!50 = !DILocation(line: 54, column: 35, scope: !7)
!51 = !DILocation(line: 55, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 35, scope: !7)
!53 = !DILocation(line: 59, column: 20, scope: !7)
!54 = !DILocation(line: 62, column: 35, scope: !7)
!55 = !DILocation(line: 63, column: 20, scope: !7)
!56 = !DILocation(line: 64, column: 20, scope: !7)
!57 = !DILocation(line: 65, column: 25, scope: !7)
!58 = !DILocation(line: 65, column: 37, scope: !7)
!59 = !DILocation(line: 65, column: 4, scope: !7)
