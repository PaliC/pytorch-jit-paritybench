#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__adaptive_avg_pool2d_34(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<7> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<36> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<6> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<18432> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_8 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_7 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %7, %cst_5 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = arith.muli %7, %cst_4 : tensor<128xi32, #blocked> loc(#loc12)
    %12 = arith.addi %11, %cst_3 : tensor<128xi32, #blocked> loc(#loc13)
    %13 = arith.divsi %12, %cst_7 : tensor<128xi32, #blocked> loc(#loc14)
    %14 = arith.cmpi slt, %10, %13 : tensor<128xi32, #blocked> loc(#loc15)
    %15 = arith.divsi %8, %cst_5 : tensor<128xi32, #blocked> loc(#loc16)
    %16 = arith.muli %8, %cst_4 : tensor<128xi32, #blocked> loc(#loc17)
    %17 = arith.addi %16, %cst_3 : tensor<128xi32, #blocked> loc(#loc18)
    %18 = arith.divsi %17, %cst_7 : tensor<128xi32, #blocked> loc(#loc19)
    %19 = arith.cmpi slt, %15, %18 : tensor<128xi32, #blocked> loc(#loc20)
    %20 = arith.andi %14, %19 : tensor<128xi1, #blocked> loc(#loc21)
    %21 = arith.muli %10, %cst_4 : tensor<128xi32, #blocked> loc(#loc22)
    %22 = arith.muli %9, %cst_2 : tensor<128xi32, #blocked> loc(#loc23)
    %23 = arith.addi %21, %22 : tensor<128xi32, #blocked> loc(#loc24)
    %24 = arith.addi %23, %15 : tensor<128xi32, #blocked> loc(#loc25)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc26)
    %26 = tt.addptr %25, %24 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc26)
    %27 = arith.andi %20, %5 : tensor<128xi1, #blocked> loc(#loc27)
    %28 = tt.load %26, %27, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    %29 = arith.addi %15, %cst_0 : tensor<128xi32, #blocked> loc(#loc29)
    %30 = arith.cmpi slt, %29, %18 : tensor<128xi32, #blocked> loc(#loc30)
    %31 = arith.andi %14, %30 : tensor<128xi1, #blocked> loc(#loc31)
    %32 = arith.addi %21, %cst_0 : tensor<128xi32, #blocked> loc(#loc32)
    %33 = arith.addi %32, %22 : tensor<128xi32, #blocked> loc(#loc33)
    %34 = arith.addi %33, %15 : tensor<128xi32, #blocked> loc(#loc34)
    %35 = tt.addptr %25, %34 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc35)
    %36 = arith.andi %31, %5 : tensor<128xi1, #blocked> loc(#loc36)
    %37 = tt.load %35, %36, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc37)
    %38 = arith.addf %37, %28 : tensor<128xf32, #blocked> loc(#loc38)
    %39 = arith.addi %10, %cst_0 : tensor<128xi32, #blocked> loc(#loc39)
    %40 = arith.cmpi slt, %39, %13 : tensor<128xi32, #blocked> loc(#loc40)
    %41 = arith.andi %40, %19 : tensor<128xi1, #blocked> loc(#loc41)
    %42 = arith.addi %21, %cst_4 : tensor<128xi32, #blocked> loc(#loc42)
    %43 = arith.addi %42, %22 : tensor<128xi32, #blocked> loc(#loc43)
    %44 = arith.addi %43, %15 : tensor<128xi32, #blocked> loc(#loc44)
    %45 = tt.addptr %25, %44 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc45)
    %46 = arith.andi %41, %5 : tensor<128xi1, #blocked> loc(#loc46)
    %47 = tt.load %45, %46, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc47)
    %48 = arith.addf %47, %38 : tensor<128xf32, #blocked> loc(#loc48)
    %49 = arith.andi %40, %30 : tensor<128xi1, #blocked> loc(#loc49)
    %50 = arith.addi %21, %cst_5 : tensor<128xi32, #blocked> loc(#loc50)
    %51 = arith.addi %50, %22 : tensor<128xi32, #blocked> loc(#loc51)
    %52 = arith.addi %51, %15 : tensor<128xi32, #blocked> loc(#loc52)
    %53 = tt.addptr %25, %52 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc53)
    %54 = arith.andi %49, %5 : tensor<128xi1, #blocked> loc(#loc54)
    %55 = tt.load %53, %54, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc55)
    %56 = arith.addf %55, %48 : tensor<128xf32, #blocked> loc(#loc56)
    %57 = arith.select %20, %cst, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc57)
    %58 = arith.select %31, %cst, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc58)
    %59 = arith.addf %58, %57 : tensor<128xf32, #blocked> loc(#loc59)
    %60 = arith.select %41, %cst, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc60)
    %61 = arith.addf %60, %59 : tensor<128xf32, #blocked> loc(#loc61)
    %62 = arith.select %49, %cst, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc62)
    %63 = arith.addf %62, %61 : tensor<128xf32, #blocked> loc(#loc63)
    %64 = arith.divf %56, %63 : tensor<128xf32, #blocked> loc(#loc64)
    %65 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc65)
    %66 = tt.addptr %65, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc65)
    tt.store %66, %64, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":21:28)
#loc3 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":21:33)
#loc4 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":22:36)
#loc5 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":22:23)
#loc6 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":23:21)
#loc7 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":24:21)
#loc8 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":24:26)
#loc9 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":25:19)
#loc10 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":26:19)
#loc11 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":28:17)
#loc12 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":29:18)
#loc13 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":29:16)
#loc14 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":29:25)
#loc15 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":30:18)
#loc16 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":31:17)
#loc17 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":32:18)
#loc18 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":32:16)
#loc19 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":32:25)
#loc20 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":33:18)
#loc21 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":34:18)
#loc22 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:33)
#loc23 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:46)
#loc24 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:44)
#loc25 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:52)
#loc26 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:30)
#loc27 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:70)
#loc28 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":35:63)
#loc29 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":36:16)
#loc30 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":37:18)
#loc31 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":38:19)
#loc32 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:35)
#loc33 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:49)
#loc34 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:57)
#loc35 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:31)
#loc36 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:76)
#loc37 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":39:68)
#loc38 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":40:20)
#loc39 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":41:17)
#loc40 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":42:20)
#loc41 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":43:20)
#loc42 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:35)
#loc43 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:49)
#loc44 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:57)
#loc45 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:31)
#loc46 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:76)
#loc47 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":44:68)
#loc48 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":45:20)
#loc49 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":46:20)
#loc50 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:35)
#loc51 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:49)
#loc52 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:57)
#loc53 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:31)
#loc54 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:76)
#loc55 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":47:68)
#loc56 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":48:20)
#loc57 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":51:34)
#loc58 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":54:35)
#loc59 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":55:20)
#loc60 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":58:35)
#loc61 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":59:20)
#loc62 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":62:35)
#loc63 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":63:20)
#loc64 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":64:20)
#loc65 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":65:25)
#loc66 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":65:37)
#loc67 = loc("inductor_cache/sw/cswttihed3hnzljzap26ayrk6t3hgo26u7miwn2ybfew335dzmjn.py":65:4)
