#loc = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0)
module {
  tt.func public @triton_poi_fused_mul_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_1 : tensor<128xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<128x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc11)
    %13 = tt.load %12, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc13)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %17, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc15)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %20 = arith.addf %13, %16 : tensor<128xf32> loc(#loc17)
    %21 = arith.addf %19, %16 : tensor<128xf32> loc(#loc18)
    %22 = arith.addf %20, %21 : tensor<128xf32> loc(#loc19)
    %23 = arith.subf %cst, %22 : tensor<128xf32> loc(#loc29)
    %24 = math.exp %23 : tensor<128xf32> loc(#loc30)
    %25 = arith.addf %24, %cst_0 : tensor<128xf32> loc(#loc31)
    %26 = arith.divf %cst_0, %25 : tensor<128xf32> loc(#loc32)
    %27 = arith.mulf %10, %26 : tensor<128xf32> loc(#loc25)
    %28 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.addptr %28, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc26)
    tt.store %29, %27, %5 : tensor<128x!tt.ptr<f32>> loc(#loc27)
    tt.return loc(#loc28)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":21:28)
#loc3 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":21:33)
#loc4 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":22:36)
#loc5 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":22:23)
#loc6 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":23:21)
#loc7 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":25:19)
#loc8 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":26:27)
#loc9 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":27:30)
#loc10 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":27:35)
#loc11 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":28:30)
#loc12 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":28:35)
#loc13 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":29:30)
#loc14 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":29:35)
#loc15 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":30:30)
#loc16 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":30:35)
#loc17 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":31:18)
#loc18 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":32:18)
#loc19 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":33:18)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc21 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":34:22)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc25 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":35:18)
#loc26 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":36:25)
#loc27 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":36:36)
#loc28 = loc("inductor_cache/7z/c7zswo2aocn24vujdsyiosyfa73gr7rfgrf5jccbxsnq7netkhmd.py":36:4)
#loc29 = loc(callsite(#loc20 at #loc21))
#loc30 = loc(callsite(#loc22 at #loc21))
#loc31 = loc(callsite(#loc23 at #loc21))
#loc32 = loc(callsite(#loc24 at #loc21))
