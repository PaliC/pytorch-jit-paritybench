; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_binary_cross_entropy_with_logits_eq_fill_index_put_lift_fresh_mean_mul_pow_rsub_sigmoid_where_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !14
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !14
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !14
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !14
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !14
  %17 = bitcast i32 %13 to float, !dbg !15
  %18 = fsub float 0.000000e+00, %17, !dbg !15
  %19 = bitcast i32 %14 to float, !dbg !15
  %20 = fsub float 0.000000e+00, %19, !dbg !15
  %21 = bitcast i32 %15 to float, !dbg !15
  %22 = fsub float 0.000000e+00, %21, !dbg !15
  %23 = bitcast i32 %16 to float, !dbg !15
  %24 = fsub float 0.000000e+00, %23, !dbg !15
  %25 = fmul float %18, 0x3FF7154760000000, !dbg !19
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #4, !dbg !19
  %27 = fmul float %20, 0x3FF7154760000000, !dbg !19
  %28 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %27) #4, !dbg !19
  %29 = fmul float %22, 0x3FF7154760000000, !dbg !19
  %30 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %29) #4, !dbg !19
  %31 = fmul float %24, 0x3FF7154760000000, !dbg !19
  %32 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %31) #4, !dbg !19
  %33 = fadd float %26, 1.000000e+00, !dbg !20
  %34 = fadd float %28, 1.000000e+00, !dbg !20
  %35 = fadd float %30, 1.000000e+00, !dbg !20
  %36 = fadd float %32, 1.000000e+00, !dbg !20
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %33) #4, !dbg !21
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %34) #4, !dbg !21
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %35) #4, !dbg !21
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %36) #4, !dbg !21
  %41 = tail call float @llvm.fabs.f32(float %17), !dbg !22
  %42 = tail call float @llvm.fabs.f32(float %19), !dbg !22
  %43 = tail call float @llvm.fabs.f32(float %21), !dbg !22
  %44 = tail call float @llvm.fabs.f32(float %23), !dbg !22
  %45 = fsub float 0.000000e+00, %41, !dbg !23
  %46 = fsub float 0.000000e+00, %42, !dbg !23
  %47 = fsub float 0.000000e+00, %43, !dbg !23
  %48 = fsub float 0.000000e+00, %44, !dbg !23
  %49 = fmul float %45, 0x3FF7154760000000, !dbg !24
  %50 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %49) #4, !dbg !24
  %51 = fmul float %46, 0x3FF7154760000000, !dbg !24
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #4, !dbg !24
  %53 = fmul float %47, 0x3FF7154760000000, !dbg !24
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #4, !dbg !24
  %55 = fmul float %48, 0x3FF7154760000000, !dbg !24
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #4, !dbg !24
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i = icmp eq i32 %57, 0, !dbg !25
  %58 = tail call float @llvm.nvvm.add.rz.ftz.f(float %50, float 1.000000e+00) #4, !dbg !25
  %59 = tail call float @llvm.nvvm.add.rz.f(float %50, float 1.000000e+00) #4, !dbg !25
  %.01.i = select i1 %.not.i, float %59, float %58, !dbg !25
  %60 = bitcast float %.01.i to i32, !dbg !25
  %61 = add i32 %60, -1061158912, !dbg !25
  %62 = and i32 %61, -8388608, !dbg !25
  %63 = bitcast float %50 to i32, !dbg !25
  %64 = sub i32 %63, %62, !dbg !25
  %65 = bitcast i32 %64 to float, !dbg !25
  %66 = sub i32 1082130432, %62, !dbg !25
  %67 = bitcast i32 %66 to float, !dbg !25
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i = icmp eq i32 %68, 0, !dbg !25
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %67, float -1.000000e+00) #4, !dbg !25
  %70 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %67, float -1.000000e+00) #4, !dbg !25
  %.09.i = select i1 %.not14.i, float %70, float %69, !dbg !25
  %71 = fadd float %.09.i, %65, !dbg !25
  %72 = sitofp i32 %62 to float, !dbg !25
  %73 = fmul float %72, 0x3E80000000000000, !dbg !25
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i = icmp eq i32 %74, 0, !dbg !25
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %71, float 0x3FBB000240000000) #4, !dbg !25
  %76 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %71, float 0x3FBB000240000000) #4, !dbg !25
  %.012.i = select i1 %.not15.i, float %76, float %75, !dbg !25
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i = icmp eq i32 %77, 0, !dbg !25
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %71, float 0xBFC0EF1C00000000) #4, !dbg !25
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %71, float 0xBFC0EF1C00000000) #4, !dbg !25
  %.010.i = select i1 %.not16.i, float %79, float %78, !dbg !25
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i = icmp eq i32 %80, 0, !dbg !25
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %71, float 0x3FC28C8EA0000000) #4, !dbg !25
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %71, float 0x3FC28C8EA0000000) #4, !dbg !25
  %.06.i = select i1 %.not17.i, float %82, float %81, !dbg !25
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i = icmp eq i32 %83, 0, !dbg !25
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %71, float 0xBFC54D1BA0000000) #4, !dbg !25
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %71, float 0xBFC54D1BA0000000) #4, !dbg !25
  %.02.i = select i1 %.not18.i, float %85, float %84, !dbg !25
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i = icmp eq i32 %86, 0, !dbg !25
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %71, float 0x3FC995F3C0000000) #4, !dbg !25
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %71, float 0x3FC995F3C0000000) #4, !dbg !25
  %.0.i = select i1 %.not19.i, float %88, float %87, !dbg !25
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i = icmp eq i32 %89, 0, !dbg !25
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %71, float 0xBFD0000840000000) #4, !dbg !25
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %71, float 0xBFD0000840000000) #4, !dbg !25
  %.011.i = select i1 %.not20.i, float %91, float %90, !dbg !25
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i = icmp eq i32 %92, 0, !dbg !25
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %71, float 0x3FD5555CC0000000) #4, !dbg !25
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %71, float 0x3FD5555CC0000000) #4, !dbg !25
  %.08.i = select i1 %.not21.i, float %94, float %93, !dbg !25
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i = icmp eq i32 %95, 0, !dbg !25
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %71, float -5.000000e-01) #4, !dbg !25
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %71, float -5.000000e-01) #4, !dbg !25
  %.07.i = select i1 %.not22.i, float %97, float %96, !dbg !25
  %98 = fmul float %71, %.07.i, !dbg !25
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i = icmp eq i32 %99, 0, !dbg !25
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %98, float %71, float %71) #4, !dbg !25
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %98, float %71, float %71) #4, !dbg !25
  %.05.i = select i1 %.not23.i, float %101, float %100, !dbg !25
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i = icmp eq i32 %102, 0, !dbg !25
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %73, float 0x3FE62E4300000000, float %.05.i) #4, !dbg !25
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %73, float 0x3FE62E4300000000, float %.05.i) #4, !dbg !25
  %.04.i = select i1 %.not24.i, float %104, float %103, !dbg !25
  %105 = icmp ugt i32 %63, 2139095039, !dbg !25
  br i1 %105, label %106, label %__nv_log1pf.exit, !dbg !25

106:                                              ; preds = %4
  %107 = icmp sgt i32 %63, -1082130432, !dbg !25
  br i1 %107, label %__nv_fmaf_rn.exit.i, label %111, !dbg !25

__nv_fmaf_rn.exit.i:                              ; preds = %106
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i = icmp eq i32 %108, 0, !dbg !25
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %50, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %50, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %.03.i = select i1 %.not25.i, float %110, float %109, !dbg !25
  br label %111, !dbg !25

111:                                              ; preds = %__nv_fmaf_rn.exit.i, %106
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %106 ], !dbg !25
  %112 = fcmp oeq float %50, 0.000000e+00, !dbg !25
  %r.1.i = select i1 %112, float -0.000000e+00, float %r.0.i, !dbg !25
  br label %__nv_log1pf.exit, !dbg !25

__nv_log1pf.exit:                                 ; preds = %4, %111
  %r.2.i = phi float [ %r.1.i, %111 ], [ %.04.i, %4 ], !dbg !25
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i1 = icmp eq i32 %113, 0, !dbg !25
  %114 = tail call float @llvm.nvvm.add.rz.ftz.f(float %52, float 1.000000e+00) #4, !dbg !25
  %115 = tail call float @llvm.nvvm.add.rz.f(float %52, float 1.000000e+00) #4, !dbg !25
  %.01.i2 = select i1 %.not.i1, float %115, float %114, !dbg !25
  %116 = bitcast float %.01.i2 to i32, !dbg !25
  %117 = add i32 %116, -1061158912, !dbg !25
  %118 = and i32 %117, -8388608, !dbg !25
  %119 = bitcast float %52 to i32, !dbg !25
  %120 = sub i32 %119, %118, !dbg !25
  %121 = bitcast i32 %120 to float, !dbg !25
  %122 = sub i32 1082130432, %118, !dbg !25
  %123 = bitcast i32 %122 to float, !dbg !25
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i3 = icmp eq i32 %124, 0, !dbg !25
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %123, float -1.000000e+00) #4, !dbg !25
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %123, float -1.000000e+00) #4, !dbg !25
  %.09.i4 = select i1 %.not14.i3, float %126, float %125, !dbg !25
  %127 = fadd float %.09.i4, %121, !dbg !25
  %128 = sitofp i32 %118 to float, !dbg !25
  %129 = fmul float %128, 0x3E80000000000000, !dbg !25
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i5 = icmp eq i32 %130, 0, !dbg !25
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %127, float 0x3FBB000240000000) #4, !dbg !25
  %132 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %127, float 0x3FBB000240000000) #4, !dbg !25
  %.012.i6 = select i1 %.not15.i5, float %132, float %131, !dbg !25
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i7 = icmp eq i32 %133, 0, !dbg !25
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i6, float %127, float 0xBFC0EF1C00000000) #4, !dbg !25
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i6, float %127, float 0xBFC0EF1C00000000) #4, !dbg !25
  %.010.i8 = select i1 %.not16.i7, float %135, float %134, !dbg !25
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i9 = icmp eq i32 %136, 0, !dbg !25
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i8, float %127, float 0x3FC28C8EA0000000) #4, !dbg !25
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i8, float %127, float 0x3FC28C8EA0000000) #4, !dbg !25
  %.06.i10 = select i1 %.not17.i9, float %138, float %137, !dbg !25
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i11 = icmp eq i32 %139, 0, !dbg !25
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %127, float 0xBFC54D1BA0000000) #4, !dbg !25
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %127, float 0xBFC54D1BA0000000) #4, !dbg !25
  %.02.i12 = select i1 %.not18.i11, float %141, float %140, !dbg !25
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i13 = icmp eq i32 %142, 0, !dbg !25
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float %127, float 0x3FC995F3C0000000) #4, !dbg !25
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float %127, float 0x3FC995F3C0000000) #4, !dbg !25
  %.0.i14 = select i1 %.not19.i13, float %144, float %143, !dbg !25
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i15 = icmp eq i32 %145, 0, !dbg !25
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %127, float 0xBFD0000840000000) #4, !dbg !25
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %127, float 0xBFD0000840000000) #4, !dbg !25
  %.011.i16 = select i1 %.not20.i15, float %147, float %146, !dbg !25
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i17 = icmp eq i32 %148, 0, !dbg !25
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i16, float %127, float 0x3FD5555CC0000000) #4, !dbg !25
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i16, float %127, float 0x3FD5555CC0000000) #4, !dbg !25
  %.08.i18 = select i1 %.not21.i17, float %150, float %149, !dbg !25
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i19 = icmp eq i32 %151, 0, !dbg !25
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i18, float %127, float -5.000000e-01) #4, !dbg !25
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i18, float %127, float -5.000000e-01) #4, !dbg !25
  %.07.i20 = select i1 %.not22.i19, float %153, float %152, !dbg !25
  %154 = fmul float %127, %.07.i20, !dbg !25
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i21 = icmp eq i32 %155, 0, !dbg !25
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float %127, float %127) #4, !dbg !25
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %154, float %127, float %127) #4, !dbg !25
  %.05.i22 = select i1 %.not23.i21, float %157, float %156, !dbg !25
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i23 = icmp eq i32 %158, 0, !dbg !25
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float 0x3FE62E4300000000, float %.05.i22) #4, !dbg !25
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %129, float 0x3FE62E4300000000, float %.05.i22) #4, !dbg !25
  %.04.i24 = select i1 %.not24.i23, float %160, float %159, !dbg !25
  %161 = icmp ugt i32 %119, 2139095039, !dbg !25
  br i1 %161, label %162, label %__nv_log1pf.exit31, !dbg !25

162:                                              ; preds = %__nv_log1pf.exit
  %163 = icmp sgt i32 %119, -1082130432, !dbg !25
  br i1 %163, label %__nv_fmaf_rn.exit.i28, label %167, !dbg !25

__nv_fmaf_rn.exit.i28:                            ; preds = %162
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i29 = icmp eq i32 %164, 0, !dbg !25
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %.03.i30 = select i1 %.not25.i29, float %166, float %165, !dbg !25
  br label %167, !dbg !25

167:                                              ; preds = %__nv_fmaf_rn.exit.i28, %162
  %r.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i28 ], [ %.04.i24, %162 ], !dbg !25
  %168 = fcmp oeq float %52, 0.000000e+00, !dbg !25
  %r.1.i27 = select i1 %168, float -0.000000e+00, float %r.0.i26, !dbg !25
  br label %__nv_log1pf.exit31, !dbg !25

__nv_log1pf.exit31:                               ; preds = %__nv_log1pf.exit, %167
  %r.2.i25 = phi float [ %r.1.i27, %167 ], [ %.04.i24, %__nv_log1pf.exit ], !dbg !25
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i32 = icmp eq i32 %169, 0, !dbg !25
  %170 = tail call float @llvm.nvvm.add.rz.ftz.f(float %54, float 1.000000e+00) #4, !dbg !25
  %171 = tail call float @llvm.nvvm.add.rz.f(float %54, float 1.000000e+00) #4, !dbg !25
  %.01.i33 = select i1 %.not.i32, float %171, float %170, !dbg !25
  %172 = bitcast float %.01.i33 to i32, !dbg !25
  %173 = add i32 %172, -1061158912, !dbg !25
  %174 = and i32 %173, -8388608, !dbg !25
  %175 = bitcast float %54 to i32, !dbg !25
  %176 = sub i32 %175, %174, !dbg !25
  %177 = bitcast i32 %176 to float, !dbg !25
  %178 = sub i32 1082130432, %174, !dbg !25
  %179 = bitcast i32 %178 to float, !dbg !25
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i34 = icmp eq i32 %180, 0, !dbg !25
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %179, float -1.000000e+00) #4, !dbg !25
  %182 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %179, float -1.000000e+00) #4, !dbg !25
  %.09.i35 = select i1 %.not14.i34, float %182, float %181, !dbg !25
  %183 = fadd float %.09.i35, %177, !dbg !25
  %184 = sitofp i32 %174 to float, !dbg !25
  %185 = fmul float %184, 0x3E80000000000000, !dbg !25
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i36 = icmp eq i32 %186, 0, !dbg !25
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %183, float 0x3FBB000240000000) #4, !dbg !25
  %188 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %183, float 0x3FBB000240000000) #4, !dbg !25
  %.012.i37 = select i1 %.not15.i36, float %188, float %187, !dbg !25
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i38 = icmp eq i32 %189, 0, !dbg !25
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i37, float %183, float 0xBFC0EF1C00000000) #4, !dbg !25
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i37, float %183, float 0xBFC0EF1C00000000) #4, !dbg !25
  %.010.i39 = select i1 %.not16.i38, float %191, float %190, !dbg !25
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i40 = icmp eq i32 %192, 0, !dbg !25
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i39, float %183, float 0x3FC28C8EA0000000) #4, !dbg !25
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i39, float %183, float 0x3FC28C8EA0000000) #4, !dbg !25
  %.06.i41 = select i1 %.not17.i40, float %194, float %193, !dbg !25
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i42 = icmp eq i32 %195, 0, !dbg !25
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i41, float %183, float 0xBFC54D1BA0000000) #4, !dbg !25
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i41, float %183, float 0xBFC54D1BA0000000) #4, !dbg !25
  %.02.i43 = select i1 %.not18.i42, float %197, float %196, !dbg !25
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i44 = icmp eq i32 %198, 0, !dbg !25
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i43, float %183, float 0x3FC995F3C0000000) #4, !dbg !25
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i43, float %183, float 0x3FC995F3C0000000) #4, !dbg !25
  %.0.i45 = select i1 %.not19.i44, float %200, float %199, !dbg !25
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i46 = icmp eq i32 %201, 0, !dbg !25
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i45, float %183, float 0xBFD0000840000000) #4, !dbg !25
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i45, float %183, float 0xBFD0000840000000) #4, !dbg !25
  %.011.i47 = select i1 %.not20.i46, float %203, float %202, !dbg !25
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i48 = icmp eq i32 %204, 0, !dbg !25
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i47, float %183, float 0x3FD5555CC0000000) #4, !dbg !25
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i47, float %183, float 0x3FD5555CC0000000) #4, !dbg !25
  %.08.i49 = select i1 %.not21.i48, float %206, float %205, !dbg !25
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i50 = icmp eq i32 %207, 0, !dbg !25
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i49, float %183, float -5.000000e-01) #4, !dbg !25
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i49, float %183, float -5.000000e-01) #4, !dbg !25
  %.07.i51 = select i1 %.not22.i50, float %209, float %208, !dbg !25
  %210 = fmul float %183, %.07.i51, !dbg !25
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i52 = icmp eq i32 %211, 0, !dbg !25
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %210, float %183, float %183) #4, !dbg !25
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %210, float %183, float %183) #4, !dbg !25
  %.05.i53 = select i1 %.not23.i52, float %213, float %212, !dbg !25
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i54 = icmp eq i32 %214, 0, !dbg !25
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float 0x3FE62E4300000000, float %.05.i53) #4, !dbg !25
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %185, float 0x3FE62E4300000000, float %.05.i53) #4, !dbg !25
  %.04.i55 = select i1 %.not24.i54, float %216, float %215, !dbg !25
  %217 = icmp ugt i32 %175, 2139095039, !dbg !25
  br i1 %217, label %218, label %__nv_log1pf.exit62, !dbg !25

218:                                              ; preds = %__nv_log1pf.exit31
  %219 = icmp sgt i32 %175, -1082130432, !dbg !25
  br i1 %219, label %__nv_fmaf_rn.exit.i59, label %223, !dbg !25

__nv_fmaf_rn.exit.i59:                            ; preds = %218
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i60 = icmp eq i32 %220, 0, !dbg !25
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %54, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %54, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %.03.i61 = select i1 %.not25.i60, float %222, float %221, !dbg !25
  br label %223, !dbg !25

223:                                              ; preds = %__nv_fmaf_rn.exit.i59, %218
  %r.0.i57 = phi float [ %.03.i61, %__nv_fmaf_rn.exit.i59 ], [ %.04.i55, %218 ], !dbg !25
  %224 = fcmp oeq float %54, 0.000000e+00, !dbg !25
  %r.1.i58 = select i1 %224, float -0.000000e+00, float %r.0.i57, !dbg !25
  br label %__nv_log1pf.exit62, !dbg !25

__nv_log1pf.exit62:                               ; preds = %__nv_log1pf.exit31, %223
  %r.2.i56 = phi float [ %r.1.i58, %223 ], [ %.04.i55, %__nv_log1pf.exit31 ], !dbg !25
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i63 = icmp eq i32 %225, 0, !dbg !25
  %226 = tail call float @llvm.nvvm.add.rz.ftz.f(float %56, float 1.000000e+00) #4, !dbg !25
  %227 = tail call float @llvm.nvvm.add.rz.f(float %56, float 1.000000e+00) #4, !dbg !25
  %.01.i64 = select i1 %.not.i63, float %227, float %226, !dbg !25
  %228 = bitcast float %.01.i64 to i32, !dbg !25
  %229 = add i32 %228, -1061158912, !dbg !25
  %230 = and i32 %229, -8388608, !dbg !25
  %231 = bitcast float %56 to i32, !dbg !25
  %232 = sub i32 %231, %230, !dbg !25
  %233 = bitcast i32 %232 to float, !dbg !25
  %234 = sub i32 1082130432, %230, !dbg !25
  %235 = bitcast i32 %234 to float, !dbg !25
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not14.i65 = icmp eq i32 %236, 0, !dbg !25
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %235, float -1.000000e+00) #4, !dbg !25
  %238 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %235, float -1.000000e+00) #4, !dbg !25
  %.09.i66 = select i1 %.not14.i65, float %238, float %237, !dbg !25
  %239 = fadd float %.09.i66, %233, !dbg !25
  %240 = sitofp i32 %230 to float, !dbg !25
  %241 = fmul float %240, 0x3E80000000000000, !dbg !25
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i67 = icmp eq i32 %242, 0, !dbg !25
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %239, float 0x3FBB000240000000) #4, !dbg !25
  %244 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %239, float 0x3FBB000240000000) #4, !dbg !25
  %.012.i68 = select i1 %.not15.i67, float %244, float %243, !dbg !25
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i69 = icmp eq i32 %245, 0, !dbg !25
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i68, float %239, float 0xBFC0EF1C00000000) #4, !dbg !25
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i68, float %239, float 0xBFC0EF1C00000000) #4, !dbg !25
  %.010.i70 = select i1 %.not16.i69, float %247, float %246, !dbg !25
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i71 = icmp eq i32 %248, 0, !dbg !25
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i70, float %239, float 0x3FC28C8EA0000000) #4, !dbg !25
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i70, float %239, float 0x3FC28C8EA0000000) #4, !dbg !25
  %.06.i72 = select i1 %.not17.i71, float %250, float %249, !dbg !25
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i73 = icmp eq i32 %251, 0, !dbg !25
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i72, float %239, float 0xBFC54D1BA0000000) #4, !dbg !25
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i72, float %239, float 0xBFC54D1BA0000000) #4, !dbg !25
  %.02.i74 = select i1 %.not18.i73, float %253, float %252, !dbg !25
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i75 = icmp eq i32 %254, 0, !dbg !25
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i74, float %239, float 0x3FC995F3C0000000) #4, !dbg !25
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i74, float %239, float 0x3FC995F3C0000000) #4, !dbg !25
  %.0.i76 = select i1 %.not19.i75, float %256, float %255, !dbg !25
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not20.i77 = icmp eq i32 %257, 0, !dbg !25
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i76, float %239, float 0xBFD0000840000000) #4, !dbg !25
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i76, float %239, float 0xBFD0000840000000) #4, !dbg !25
  %.011.i78 = select i1 %.not20.i77, float %259, float %258, !dbg !25
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not21.i79 = icmp eq i32 %260, 0, !dbg !25
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i78, float %239, float 0x3FD5555CC0000000) #4, !dbg !25
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i78, float %239, float 0x3FD5555CC0000000) #4, !dbg !25
  %.08.i80 = select i1 %.not21.i79, float %262, float %261, !dbg !25
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not22.i81 = icmp eq i32 %263, 0, !dbg !25
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i80, float %239, float -5.000000e-01) #4, !dbg !25
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i80, float %239, float -5.000000e-01) #4, !dbg !25
  %.07.i82 = select i1 %.not22.i81, float %265, float %264, !dbg !25
  %266 = fmul float %239, %.07.i82, !dbg !25
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not23.i83 = icmp eq i32 %267, 0, !dbg !25
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float %239, float %239) #4, !dbg !25
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float %239, float %239) #4, !dbg !25
  %.05.i84 = select i1 %.not23.i83, float %269, float %268, !dbg !25
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not24.i85 = icmp eq i32 %270, 0, !dbg !25
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float 0x3FE62E4300000000, float %.05.i84) #4, !dbg !25
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %241, float 0x3FE62E4300000000, float %.05.i84) #4, !dbg !25
  %.04.i86 = select i1 %.not24.i85, float %272, float %271, !dbg !25
  %273 = icmp ugt i32 %231, 2139095039, !dbg !25
  br i1 %273, label %274, label %__nv_log1pf.exit93, !dbg !25

274:                                              ; preds = %__nv_log1pf.exit62
  %275 = icmp sgt i32 %231, -1082130432, !dbg !25
  br i1 %275, label %__nv_fmaf_rn.exit.i90, label %279, !dbg !25

__nv_fmaf_rn.exit.i90:                            ; preds = %274
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not25.i91 = icmp eq i32 %276, 0, !dbg !25
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %56, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %56, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !25
  %.03.i92 = select i1 %.not25.i91, float %278, float %277, !dbg !25
  br label %279, !dbg !25

279:                                              ; preds = %__nv_fmaf_rn.exit.i90, %274
  %r.0.i88 = phi float [ %.03.i92, %__nv_fmaf_rn.exit.i90 ], [ %.04.i86, %274 ], !dbg !25
  %280 = fcmp oeq float %56, 0.000000e+00, !dbg !25
  %r.1.i89 = select i1 %280, float -0.000000e+00, float %r.0.i88, !dbg !25
  br label %__nv_log1pf.exit93, !dbg !25

__nv_log1pf.exit93:                               ; preds = %__nv_log1pf.exit62, %279
  %r.2.i87 = phi float [ %r.1.i89, %279 ], [ %.04.i86, %__nv_log1pf.exit62 ], !dbg !25
  %281 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !14
  %282 = insertelement <2 x i32> %281, i32 %16, i64 1, !dbg !14
  %283 = bitcast <2 x i32> %282 to <2 x float>, !dbg !14
  %284 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !14
  %285 = insertelement <2 x i32> %284, i32 %14, i64 1, !dbg !14
  %286 = bitcast <2 x i32> %285 to <2 x float>, !dbg !14
  %287 = fcmp ogt <2 x float> %283, zeroinitializer, !dbg !26
  %288 = fcmp ogt <2 x float> %286, zeroinitializer, !dbg !26
  %289 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %290 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %291 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %292 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %293 = insertelement <2 x float> poison, float %39, i64 0, !dbg !30
  %294 = insertelement <2 x float> %293, float %40, i64 1, !dbg !30
  %295 = fsub <2 x float> splat (float 1.000000e+00), %294, !dbg !30
  %296 = insertelement <2 x float> poison, float %37, i64 0, !dbg !30
  %297 = insertelement <2 x float> %296, float %38, i64 1, !dbg !30
  %298 = fsub <2 x float> splat (float 1.000000e+00), %297, !dbg !30
  %299 = lshr i32 %5, 5, !dbg !10
  %300 = and i32 %5, 31, !dbg !10
  %301 = select <2 x i1> %288, <2 x float> zeroinitializer, <2 x float> %286, !dbg !31
  %302 = insertelement <2 x i32> poison, i32 %292, i64 0, !dbg !12
  %303 = insertelement <2 x i32> %302, i32 %291, i64 1, !dbg !12
  %304 = bitcast <2 x i32> %303 to <2 x float>, !dbg !12
  %305 = fsub <2 x float> splat (float 1.000000e+00), %304, !dbg !32
  %306 = fmul <2 x float> %305, %286, !dbg !33
  %307 = fcmp oeq <2 x float> %304, splat (float 1.000000e+00), !dbg !34
  %308 = select <2 x i1> %307, <2 x float> splat (float 2.500000e-01), <2 x float> splat (float 7.500000e-01), !dbg !35
  %309 = select <2 x i1> %307, <2 x float> %297, <2 x float> %298, !dbg !36
  %310 = fsub <2 x float> splat (float 1.000000e+00), %309, !dbg !37
  %311 = fmul <2 x float> %310, %310, !dbg !38
  %312 = fmul <2 x float> %308, %311, !dbg !39
  %313 = insertelement <2 x float> poison, float %r.2.i, i64 0, !dbg !40
  %314 = insertelement <2 x float> %313, float %r.2.i25, i64 1, !dbg !40
  %315 = fsub <2 x float> %301, %314, !dbg !40
  %316 = fsub <2 x float> %306, %315, !dbg !41
  %317 = fmul <2 x float> %312, %316, !dbg !42
  %318 = select <2 x i1> %287, <2 x float> zeroinitializer, <2 x float> %283, !dbg !31
  %319 = insertelement <2 x i32> poison, i32 %290, i64 0, !dbg !12
  %320 = insertelement <2 x i32> %319, i32 %289, i64 1, !dbg !12
  %321 = bitcast <2 x i32> %320 to <2 x float>, !dbg !12
  %322 = fsub <2 x float> splat (float 1.000000e+00), %321, !dbg !32
  %323 = fmul <2 x float> %322, %283, !dbg !33
  %324 = fcmp oeq <2 x float> %321, splat (float 1.000000e+00), !dbg !34
  %325 = select <2 x i1> %324, <2 x float> splat (float 2.500000e-01), <2 x float> splat (float 7.500000e-01), !dbg !35
  %326 = select <2 x i1> %324, <2 x float> %294, <2 x float> %295, !dbg !36
  %327 = fsub <2 x float> splat (float 1.000000e+00), %326, !dbg !37
  %328 = fmul <2 x float> %327, %327, !dbg !38
  %329 = fmul <2 x float> %325, %328, !dbg !39
  %330 = insertelement <2 x float> poison, float %r.2.i56, i64 0, !dbg !40
  %331 = insertelement <2 x float> %330, float %r.2.i87, i64 1, !dbg !40
  %332 = fsub <2 x float> %318, %331, !dbg !40
  %333 = fsub <2 x float> %323, %332, !dbg !41
  %334 = fmul <2 x float> %329, %333, !dbg !42
  %shift = shufflevector <2 x float> %317, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !43
  %335 = fadd <2 x float> %317, %shift, !dbg !43
  %336 = fadd <2 x float> %335, %334, !dbg !43
  %shift94 = shufflevector <2 x float> %334, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !43
  %337 = fadd <2 x float> %336, %shift94, !dbg !43
  %338 = extractelement <2 x float> %337, i64 0, !dbg !43
  %339 = bitcast float %338 to i32, !dbg !46
  %340 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %339, i32 16, i32 31), !dbg !46
  %341 = bitcast i32 %340 to float, !dbg !46
  %342 = fadd float %338, %341, !dbg !43
  %343 = bitcast float %342 to i32, !dbg !46
  %344 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %343, i32 8, i32 31), !dbg !46
  %345 = bitcast i32 %344 to float, !dbg !46
  %346 = fadd float %342, %345, !dbg !43
  %347 = bitcast float %346 to i32, !dbg !46
  %348 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %347, i32 4, i32 31), !dbg !46
  %349 = bitcast i32 %348 to float, !dbg !46
  %350 = fadd float %346, %349, !dbg !43
  %351 = bitcast float %350 to i32, !dbg !46
  %352 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %351, i32 2, i32 31), !dbg !46
  %353 = bitcast i32 %352 to float, !dbg !46
  %354 = fadd float %350, %353, !dbg !43
  %355 = bitcast float %354 to i32, !dbg !46
  %356 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %355, i32 1, i32 31), !dbg !46
  %357 = bitcast i32 %356 to float, !dbg !46
  %358 = fadd float %354, %357, !dbg !43
  %359 = icmp eq i32 %300, 0, !dbg !46
  %360 = and i32 %299, 1, !dbg !46
  %361 = zext nneg i32 %360 to i64, !dbg !46
  %362 = getelementptr float, ptr addrspace(3) @global_smem, i64 %361, !dbg !46
  %363 = bitcast float %358 to <1 x i32>, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %362, <1 x i32> %363, i1 %359) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %364 = icmp slt i32 %5, 2, !dbg !46
  %365 = sext i32 %5 to i64, !dbg !46
  %366 = getelementptr float, ptr addrspace(3) @global_smem, i64 %365, !dbg !46
  %367 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %366, i1 %364) #4, !dbg !46
  %368 = bitcast i32 %367 to float, !dbg !46
  %369 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %367, i32 1, i32 31), !dbg !46
  %370 = bitcast i32 %369 to float, !dbg !46
  %371 = fadd float %368, %370, !dbg !43
  %372 = and i32 %5, 1, !dbg !46
  %373 = icmp eq i32 %372, 0, !dbg !46
  %374 = and i1 %364, %373, !dbg !46
  %375 = bitcast float %371 to <1 x i32>, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %366, <1 x i32> %375, i1 %374) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %376 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !46
  %377 = fadd float %376, 0.000000e+00, !dbg !47
  %378 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %377, float 2.560000e+02) #4, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %urem = and i32 %5, 63, !dbg !51
  %379 = icmp eq i32 %urem, 0, !dbg !51
  %380 = bitcast float %378 to i32, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %380, ptr addrspace(1) %0, i1 %379) #4, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyetyxe2q6ii3xfaduzkxdcdvaqzd6m65yxjignd3tnpt2kaytnc.py", directory: "inductor_cache/ye")
!4 = !{ptr @triton_per_fused_binary_cross_entropy_with_logits_eq_fill_index_put_lift_fresh_mean_mul_pow_rsub_sigmoid_where_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_binary_cross_entropy_with_logits_eq_fill_index_put_lift_fresh_mean_mul_pow_rsub_sigmoid_where_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_binary_cross_entropy_with_logits_eq_fill_index_put_lift_fresh_mean_mul_pow_rsub_sigmoid_where_0", linkageName: "triton_per_fused_binary_cross_entropy_with_logits_eq_fill_index_put_lift_fresh_mean_mul_pow_rsub_sigmoid_where_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 47, column: 30, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 38, column: 22, scope: !7)
!19 = !DILocation(line: 47, column: 29, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 47, column: 20, scope: !16, inlinedAt: !18)
!21 = !DILocation(line: 47, column: 16, scope: !16, inlinedAt: !18)
!22 = !DILocation(line: 48, column: 24, scope: !7)
!23 = !DILocation(line: 49, column: 13, scope: !7)
!24 = !DILocation(line: 50, column: 24, scope: !7)
!25 = !DILocation(line: 51, column: 28, scope: !7)
!26 = !DILocation(line: 110, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 47, column: 42, scope: !7)
!30 = !DILocation(line: 39, column: 18, scope: !7)
!31 = !DILocation(line: 113, column: 29, scope: !27, inlinedAt: !29)
!32 = !DILocation(line: 44, column: 19, scope: !7)
!33 = !DILocation(line: 45, column: 20, scope: !7)
!34 = !DILocation(line: 34, column: 19, scope: !7)
!35 = !DILocation(line: 37, column: 32, scope: !7)
!36 = !DILocation(line: 40, column: 32, scope: !7)
!37 = !DILocation(line: 41, column: 19, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 19, scope: !7)
!40 = !DILocation(line: 52, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 20, scope: !7)
!42 = !DILocation(line: 54, column: 20, scope: !7)
!43 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !45)
!44 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!45 = !DILocation(line: 56, column: 59, scope: !7)
!46 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !45)
!47 = !DILocation(line: 73, column: 15, scope: !27, inlinedAt: !48)
!48 = !DILocation(line: 56, column: 45, scope: !7)
!49 = !DILocation(line: 58, column: 20, scope: !7)
!50 = !DILocation(line: 59, column: 4, scope: !7)
!51 = !DILocation(line: 60, column: 63, scope: !7)
!52 = !DILocation(line: 60, column: 4, scope: !7)
