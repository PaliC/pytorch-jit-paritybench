#loc = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_16(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-8> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-4> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<128xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_6 = arith.constant dense<2048> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<128xi64> loc(#loc1)
    %cst_8 = arith.constant dense<3072> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %cst_10 = arith.constant dense<12> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_10 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_9 : tensor<128xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_8 : tensor<128xi32> loc(#loc9)
    %9 = arith.extsi %5 : tensor<128xi32> to tensor<128xi64> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_7 : tensor<128xi64> loc(#loc10)
    %11 = arith.muli %5, %cst_9 : tensor<128xi32> loc(#loc11)
    %12 = arith.addi %7, %11 : tensor<128xi32> loc(#loc12)
    %13 = arith.muli %8, %cst_6 : tensor<128xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<128xi32> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc15)
    %17 = tt.load %16, %10, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.cmpi sge, %9, %cst_7 : tensor<128xi64> loc(#loc17)
    %19 = arith.cmpi slt, %9, %cst_4 : tensor<128xi64> loc(#loc18)
    %20 = arith.andi %18, %19 : tensor<128xi1> loc(#loc19)
    %21 = arith.addi %7, %cst_3 : tensor<128xi32> loc(#loc20)
    %22 = arith.addi %5, %cst_2 : tensor<128xi32> loc(#loc21)
    %23 = arith.muli %22, %cst_9 : tensor<128xi32> loc(#loc22)
    %24 = arith.addi %21, %23 : tensor<128xi32> loc(#loc23)
    %25 = arith.addi %24, %13 : tensor<128xi32> loc(#loc24)
    %26 = tt.addptr %15, %25 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc25)
    %27 = tt.load %26, %20, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %28 = arith.cmpi sge, %9, %cst_4 : tensor<128xi64> loc(#loc27)
    %29 = arith.addi %5, %cst_1 : tensor<128xi32> loc(#loc28)
    %30 = arith.muli %29, %cst_9 : tensor<128xi32> loc(#loc29)
    %31 = arith.addi %21, %30 : tensor<128xi32> loc(#loc30)
    %32 = arith.addi %31, %13 : tensor<128xi32> loc(#loc31)
    %33 = tt.addptr %15, %32 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc32)
    %34 = tt.load %33, %28, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc33)
    %35 = arith.muli %6, %cst_0 : tensor<128xi32> loc(#loc34)
    %36 = arith.addi %35, %29 : tensor<128xi32> loc(#loc35)
    %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc36)
    %38 = tt.addptr %37, %36 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc36)
    %39 = tt.load %38, %28, %cst_5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc37)
    %40 = arith.subf %cst_5, %39 : tensor<128xf32> loc(#loc51)
    %41 = math.exp %40 : tensor<128xf32> loc(#loc52)
    %42 = arith.addf %41, %cst : tensor<128xf32> loc(#loc53)
    %43 = arith.divf %cst, %42 : tensor<128xf32> loc(#loc54)
    %44 = arith.mulf %39, %43 : tensor<128xf32> loc(#loc43)
    %45 = arith.addf %34, %44 : tensor<128xf32> loc(#loc44)
    %46 = arith.select %28, %45, %cst_5 : tensor<128xi1>, tensor<128xf32> loc(#loc45)
    %47 = arith.select %20, %27, %46 : tensor<128xi1>, tensor<128xf32> loc(#loc46)
    %48 = arith.select %10, %17, %47 : tensor<128xi1>, tensor<128xf32> loc(#loc47)
    %49 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc48)
    %50 = tt.addptr %49, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc48)
    tt.store %50, %48 : tensor<128x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":21:28)
#loc3 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":21:33)
#loc4 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":22:36)
#loc5 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":22:23)
#loc6 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":24:19)
#loc7 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":25:21)
#loc8 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":25:27)
#loc9 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":26:19)
#loc10 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":33:18)
#loc11 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:40)
#loc12 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:35)
#loc13 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:51)
#loc14 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:46)
#loc15 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:30)
#loc16 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":34:56)
#loc17 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":35:19)
#loc18 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":37:18)
#loc19 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":38:18)
#loc20 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:38)
#loc21 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:55)
#loc22 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:48)
#loc23 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:43)
#loc24 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:61)
#loc25 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:31)
#loc26 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":39:71)
#loc27 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":40:20)
#loc28 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:55)
#loc29 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:48)
#loc30 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:43)
#loc31 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:61)
#loc32 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:31)
#loc33 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":43:71)
#loc34 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":44:33)
#loc35 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":44:39)
#loc36 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":44:31)
#loc37 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":44:52)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc39 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":45:23)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc43 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":46:20)
#loc44 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":47:20)
#loc45 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":49:35)
#loc46 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":50:34)
#loc47 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":51:33)
#loc48 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":52:25)
#loc49 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":52:37)
#loc50 = loc("inductor_cache/f2/cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py":52:4)
#loc51 = loc(callsite(#loc38 at #loc39))
#loc52 = loc(callsite(#loc40 at #loc39))
#loc53 = loc(callsite(#loc41 at #loc39))
#loc54 = loc(callsite(#loc42 at #loc39))
