; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 12, !dbg !14
  %11 = mul i32 %10, 12, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = srem i32 %10, 256, !dbg !16
  %13 = sdiv i32 %9, 3072, !dbg !17
  %14 = icmp slt i32 %.decomposed, 4, !dbg !18
  %15 = shl nsw i32 %.decomposed, 8, !dbg !19
  %16 = shl nsw i32 %13, 11, !dbg !20
  %17 = add nsw i32 %16, %12, !dbg !21
  %18 = add nsw i32 %17, %15, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %14, i32 0, i1 %14) #1, !dbg !24
  %22 = and i32 %.decomposed, -4, !dbg !25
  %23 = icmp eq i32 %22, 4, !dbg !25
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %23, i32 0, i1 %23) #1, !dbg !26
  %25 = icmp sgt i32 %.decomposed, 7, !dbg !27
  %26 = add nsw i32 %.decomposed, -8, !dbg !28
  %27 = shl nsw i32 %26, 8, !dbg !29
  %28 = add nsw i32 %17, 1024, !dbg !30
  %29 = add nsw i32 %28, %27, !dbg !31
  %30 = sext i32 %29 to i64, !dbg !32
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !32
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %25, i32 0, i1 %25) #1, !dbg !33
  %33 = bitcast i32 %32 to float, !dbg !33
  %34 = shl nsw i32 %10, 2, !dbg !34
  %35 = add nsw i32 %34, %26, !dbg !35
  %36 = sext i32 %35 to i64, !dbg !36
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !36
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %25, i32 0, i1 %25) #1, !dbg !37
  %39 = bitcast i32 %38 to float, !dbg !37
  %40 = fsub float 0.000000e+00, %39, !dbg !38
  %41 = fmul float %40, 0x3FF7154760000000, !dbg !42
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #1, !dbg !42
  %43 = fadd float %42, 1.000000e+00, !dbg !43
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %43) #1, !dbg !44
  %45 = fmul float %44, %39, !dbg !45
  %46 = fadd float %45, %33, !dbg !46
  %47 = sext i32 %9 to i64, !dbg !47
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !47
  %49 = bitcast float %46 to i32, !dbg !48
  %50 = select i1 %25, i32 %49, i32 0, !dbg !49
  %51 = select i1 %23, i32 %24, i32 %50, !dbg !50
  %52 = select i1 %14, i32 %21, i32 %51, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %52, ptr addrspace(1) %48, i1 true) #1, !dbg !48
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cf2sdhje7ogm4uzirbsxb56av454euwn5mou7euyhzzphwmavceh.py", directory: "inductor_cache/f2")
!4 = !{ptr @triton_poi_fused_cat_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_16, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_16", linkageName: "triton_poi_fused_cat_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 18, scope: !7)
!19 = !DILocation(line: 34, column: 40, scope: !7)
!20 = !DILocation(line: 34, column: 51, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 46, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 56, scope: !7)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 71, scope: !7)
!27 = !DILocation(line: 40, column: 20, scope: !7)
!28 = !DILocation(line: 43, column: 55, scope: !7)
!29 = !DILocation(line: 43, column: 48, scope: !7)
!30 = !DILocation(line: 43, column: 43, scope: !7)
!31 = !DILocation(line: 43, column: 61, scope: !7)
!32 = !DILocation(line: 43, column: 31, scope: !7)
!33 = !DILocation(line: 43, column: 71, scope: !7)
!34 = !DILocation(line: 44, column: 33, scope: !7)
!35 = !DILocation(line: 44, column: 39, scope: !7)
!36 = !DILocation(line: 44, column: 31, scope: !7)
!37 = !DILocation(line: 44, column: 52, scope: !7)
!38 = !DILocation(line: 47, column: 30, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!41 = !DILocation(line: 45, column: 23, scope: !7)
!42 = !DILocation(line: 47, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 47, column: 20, scope: !39, inlinedAt: !41)
!44 = !DILocation(line: 47, column: 16, scope: !39, inlinedAt: !41)
!45 = !DILocation(line: 46, column: 20, scope: !7)
!46 = !DILocation(line: 47, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 25, scope: !7)
!48 = !DILocation(line: 52, column: 37, scope: !7)
!49 = !DILocation(line: 49, column: 35, scope: !7)
!50 = !DILocation(line: 50, column: 34, scope: !7)
!51 = !DILocation(line: 51, column: 33, scope: !7)
!52 = !DILocation(line: 52, column: 4, scope: !7)
