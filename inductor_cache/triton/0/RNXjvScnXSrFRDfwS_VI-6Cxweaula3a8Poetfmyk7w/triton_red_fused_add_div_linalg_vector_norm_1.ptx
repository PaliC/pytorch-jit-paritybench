//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_div_linalg_vector_norm_1 // -- Begin function triton_red_fused_add_div_linalg_vector_norm_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused_add_div_linalg_vector_norm_1
.visible .entry triton_red_fused_add_div_linalg_vector_norm_1(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_div_linalg_vector_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_div_linalg_vector_norm_1_param_1,
	.param .u32 triton_red_fused_add_div_linalg_vector_norm_1_param_2
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b32 	%r<160>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd13, [triton_red_fused_add_div_linalg_vector_norm_1_param_0];
	ld.param.u64 	%rd14, [triton_red_fused_add_div_linalg_vector_norm_1_param_1];
$L__tmp0:
	.loc	1 25 33                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:25:33
	mov.u32 	%r135, %tid.x;
	and.b32  	%r136, %r135, 31;
	shl.b32 	%r137, %r135, 2;
	and.b32  	%r138, %r137, 2044;
	.loc	1 31 34                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:34
	mul.wide.u32 	%rd15, %r138, 4;
	add.s64 	%rd1, %rd13, %rd15;
	mov.b32 	%r5, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r5;
	@!%p1 mov.u32 %r2, %r5;
	@!%p1 mov.u32 %r3, %r5;
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	.loc	1 31 34                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:34
	add.s64 	%rd2, %rd1, 8192;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r9, %r5;
	@!%p1 mov.u32 %r10, %r5;
	@!%p1 mov.u32 %r11, %r5;
	@!%p1 mov.u32 %r12, %r5;
	// end inline asm
	.loc	1 31 34                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:34
	add.s64 	%rd3, %rd1, 16384;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r17, %r5;
	@!%p1 mov.u32 %r18, %r5;
	@!%p1 mov.u32 %r19, %r5;
	@!%p1 mov.u32 %r20, %r5;
	// end inline asm
	.loc	1 31 34                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:34
	add.s64 	%rd4, %rd1, 24576;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r25, %r5;
	@!%p1 mov.u32 %r26, %r5;
	@!%p1 mov.u32 %r27, %r5;
	@!%p1 mov.u32 %r28, %r5;
	// end inline asm
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r9;
	.loc	1 32 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:32:22
	mul.f32 	%f5, %f4, %f4;
	mul.f32 	%f6, %f3, %f3;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f7, %f2, %f2, %f6;
	fma.rn.f32 	%f8, %f1, %f1, %f5;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r17;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f11, %f10, %f10, %f8;
	fma.rn.f32 	%f12, %f9, %f9, %f7;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	mov.b32 	%f13, %r25;
	mov.b32 	%f14, %r26;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f15, %f14, %f14, %f12;
	fma.rn.f32 	%f16, %f13, %f13, %f11;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	mov.b32 	%f17, %r3;
	mov.b32 	%f18, %r4;
	mov.b32 	%f19, %r12;
	mov.b32 	%f20, %r11;
	.loc	1 32 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:32:22
	mul.f32 	%f21, %f20, %f20;
	mul.f32 	%f22, %f19, %f19;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f23, %f18, %f18, %f22;
	fma.rn.f32 	%f24, %f17, %f17, %f21;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	mov.b32 	%f25, %r20;
	mov.b32 	%f26, %r19;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f27, %f26, %f26, %f24;
	fma.rn.f32 	%f28, %f25, %f25, %f23;
	.loc	1 31 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:31:39
	mov.b32 	%f29, %r27;
	mov.b32 	%f30, %r28;
	.loc	1 34 23                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:34:23
	fma.rn.f32 	%f31, %f30, %f30, %f28;
	fma.rn.f32 	%f32, %f29, %f29, %f27;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f16, %f15;
	add.f32 	%f34, %f32, %f33;
	add.f32 	%f35, %f31, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f35;
	shfl.sync.bfly.b32	%r140, %r139, 16, 31, -1;
	mov.b32 	%f36, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r141, %f37;
	shfl.sync.bfly.b32	%r142, %r141, 8, 31, -1;
	mov.b32 	%f38, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f39;
	shfl.sync.bfly.b32	%r144, %r143, 4, 31, -1;
	mov.b32 	%f40, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f41;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f42, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f43;
	shfl.sync.bfly.b32	%r148, %r147, 1, 31, -1;
	mov.b32 	%f44, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r136, 0;
	shr.u32 	%r149, %r135, 3;
	and.b32  	%r150, %r149, 60;
	mov.u32 	%r151, global_smem;
	add.s32 	%r33, %r151, %r150;
	mov.b32 	%r34, %f45;
	// begin inline asm
	@%p21 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r135, 16;
	add.s32 	%r36, %r151, %r137;
	// begin inline asm
	@%p22 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r35;
	shfl.sync.bfly.b32	%r152, %r35, 8, 31, -1;
	mov.b32 	%f47, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f48;
	shfl.sync.bfly.b32	%r154, %r153, 4, 31, -1;
	mov.b32 	%f49, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f50;
	shfl.sync.bfly.b32	%r156, %r155, 2, 31, -1;
	mov.b32 	%f51, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f52;
	shfl.sync.bfly.b32	%r158, %r157, 1, 31, -1;
	mov.b32 	%f53, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r159, %r135, 15;
	setp.eq.s32 	%p48, %r159, 0;
	and.pred  	%p23, %p22, %p48;
	mov.b32 	%r38, %f54;
	// begin inline asm
	@%p23 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f55, [global_smem];
$L__tmp2:
	.loc	1 42 30                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:42:30
	sqrt.approx.ftz.f32 	%f56, %f55;
	.loc	1 44 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:44:22
	add.f32 	%f57, %f56, 0f2B8CBCCC;
	.loc	1 41 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:41:39
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r57, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r48, %r51, %r54, %r57 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r48, %r5;
	@!%p1 mov.u32 %r51, %r5;
	@!%p1 mov.u32 %r54, %r5;
	@!%p1 mov.u32 %r57, %r5;
	// end inline asm
	.loc	1 45 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:45:22
	mov.b32 	%r49, %f57;
	// begin inline asm
	div.full.f32 %r59, %r48, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r60, %r51, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r61, %r54, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r62, %r57, %r49;
	// end inline asm
	.loc	1 46 29                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:29
	add.s64 	%rd6, %rd14, %rd15;
	.loc	1 46 75                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:75
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	.loc	1 41 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:41:39
	// begin inline asm
	mov.u32 %r72, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r81, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r72, %r75, %r78, %r81 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r72, %r5;
	@!%p1 mov.u32 %r75, %r5;
	@!%p1 mov.u32 %r78, %r5;
	@!%p1 mov.u32 %r81, %r5;
	// end inline asm
	.loc	1 45 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:45:22
	// begin inline asm
	div.full.f32 %r83, %r72, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r84, %r75, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r85, %r78, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r86, %r81, %r49;
	// end inline asm
	.loc	1 46 29                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:29
	add.s64 	%rd8, %rd6, 8192;
	.loc	1 46 75                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:75
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 41 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:41:39
	// begin inline asm
	mov.u32 %r96, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r102, 0x0;
	mov.u32 %r105, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r96, %r99, %r102, %r105 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r96, %r5;
	@!%p1 mov.u32 %r99, %r5;
	@!%p1 mov.u32 %r102, %r5;
	@!%p1 mov.u32 %r105, %r5;
	// end inline asm
	.loc	1 45 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:45:22
	// begin inline asm
	div.full.f32 %r107, %r96, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r108, %r99, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r109, %r102, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r110, %r105, %r49;
	// end inline asm
	.loc	1 46 29                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:29
	add.s64 	%rd10, %rd6, 16384;
	.loc	1 46 75                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:75
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	.loc	1 41 39                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:41:39
	// begin inline asm
	mov.u32 %r120, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r129, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r120, %r123, %r126, %r129 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r120, %r5;
	@!%p1 mov.u32 %r123, %r5;
	@!%p1 mov.u32 %r126, %r5;
	@!%p1 mov.u32 %r129, %r5;
	// end inline asm
	.loc	1 45 22                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:45:22
	// begin inline asm
	div.full.f32 %r131, %r120, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r132, %r123, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r133, %r126, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r134, %r129, %r49;
	// end inline asm
	.loc	1 46 29                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:29
	add.s64 	%rd12, %rd6, 24576;
	.loc	1 46 75                         // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:46:75
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r131, %r132, %r133, %r134 };
	// end inline asm
	.loc	1 37 4                          // cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/f5/cf5dkxhn4l5coxxreb46r32yii2ktcgtgegvb7gnflhdmgqr7k32.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 190                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 53
.b8 100
.b8 107
.b8 120
.b8 104
.b8 110
.b8 52
.b8 108
.b8 53
.b8 99
.b8 111
.b8 120
.b8 120
.b8 114
.b8 101
.b8 98
.b8 52
.b8 54
.b8 114
.b8 51
.b8 50
.b8 121
.b8 105
.b8 105
.b8 50
.b8 107
.b8 116
.b8 99
.b8 103
.b8 116
.b8 103
.b8 101
.b8 103
.b8 118
.b8 98
.b8 55
.b8 103
.b8 110
.b8 102
.b8 108
.b8 104
.b8 100
.b8 109
.b8 103
.b8 113
.b8 114
.b8 55
.b8 107
.b8 51
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x30 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x93:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
