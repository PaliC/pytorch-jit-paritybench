//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_13,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_14,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_15,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_16
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<72>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<127>;
	.reg .f32 	%f<93>;
	.reg .b64 	%rd<69>;
	.loc	1 19 0                          // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd41, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_0];
	ld.param.u64 	%rd42, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:21:33
	shl.b32 	%r86, %r1, 6;
	ld.param.u64 	%rd43, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_2];
	ld.param.u64 	%rd44, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_3];
	.loc	1 22 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:22:36
	mov.u32 	%r87, %tid.x;
	shl.b32 	%r88, %r87, 1;
	ld.param.u64 	%rd45, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_4];
	and.b32  	%r89, %r88, 62;
	ld.param.u64 	%rd46, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_5];
	.loc	1 22 23                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:22:23
	or.b32  	%r90, %r86, %r89;
	ld.param.u64 	%rd47, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_6];
	or.b32  	%r91, %r90, 1;
	ld.param.u64 	%rd48, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_7];
	.loc	1 23 21                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:23:21
	setp.lt.s32 	%p1, %r90, 64;
	ld.param.u64 	%rd49, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_8];
	.loc	1 24 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:24:19
	bfe.u32 	%r92, %r1, 25, 1;
	add.s32 	%r93, %r91, %r92;
	and.b32  	%r94, %r93, -2;
	sub.s32 	%r95, %r91, %r94;
	ld.param.u64 	%rd50, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_9];
	.loc	1 25 21                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:25:21
	shr.s32 	%r96, %r90, 1;
	ld.param.u64 	%rd51, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_10];
	.loc	1 25 26                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:25:26
	add.s32 	%r97, %r96, %r92;
	and.b32  	%r98, %r97, -2;
	sub.s32 	%r99, %r96, %r98;
	ld.param.u64 	%rd52, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_11];
	.loc	1 26 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:26:19
	bfe.s32 	%r100, %r1, 25, 1;
	shr.u32 	%r101, %r100, 30;
	add.s32 	%r102, %r90, %r101;
	shr.s32 	%r103, %r102, 2;
	ld.param.u64 	%rd53, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_12];
	.loc	1 28 26                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:28:26
	shr.u32 	%r104, %r103, 30;
	add.s32 	%r105, %r103, %r104;
	and.b32  	%r106, %r105, -4;
	sub.s32 	%r107, %r103, %r106;
	ld.param.u64 	%rd54, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_13];
	.loc	1 31 41                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:41
	mul.lo.s32 	%r108, %r99, 3;
	ld.param.u64 	%rd55, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_14];
	ld.param.u64 	%rd56, [triton_poi_fused__native_batch_norm_legit_no_training_add_avg_pool2d_clone_relu_threshold_backward_8_param_15];
	.loc	1 31 39                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:39
	mad.lo.s32 	%r109, %r103, 9, %r108;
	.loc	1 31 46                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:46
	add.s32 	%r110, %r109, 4;
	add.s32 	%r111, %r110, %r95;
	.loc	1 31 30                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:30
	mul.wide.s32 	%rd57, %r110, 4;
	add.s64 	%rd1, %rd41, %rd57;
	mul.wide.s32 	%rd58, %r111, 4;
	add.s64 	%rd2, %rd41, %rd58;
	.loc	1 31 53                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:32:30
	cvt.s64.s32 	%rd59, %r90;
	mul.wide.s32 	%rd60, %r90, 4;
	add.s64 	%rd3, %rd42, %rd60;
	.loc	1 32 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:32:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:33:30
	mul.wide.s32 	%rd61, %r107, 4;
	add.s64 	%rd4, %rd43, %rd61;
	.loc	1 33 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:34:30
	add.s64 	%rd6, %rd44, %rd61;
	.loc	1 34 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:34:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 35 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:35:31
	add.s64 	%rd8, %rd45, %rd61;
	.loc	1 35 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:35:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:36:31
	add.s64 	%rd10, %rd46, %rd61;
	.loc	1 36 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:36:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:37:31
	add.s64 	%rd12, %rd47, %rd60;
	.loc	1 37 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:37:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r15 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 38 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:38:31
	add.s64 	%rd13, %rd48, %rd60;
	.loc	1 38 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:38:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 39 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:39:31
	add.s64 	%rd14, %rd49, %rd61;
	.loc	1 39 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:39:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 40 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:40:31
	add.s64 	%rd16, %rd50, %rd61;
	.loc	1 40 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:40:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r20;
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r21;
	.loc	1 41 32                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:41:32
	add.s64 	%rd18, %rd51, %rd61;
	.loc	1 41 37                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:41:37
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 42 32                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:42:32
	add.s64 	%rd20, %rd52, %rd61;
	.loc	1 42 37                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:42:37
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 45 18                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:45:18
	add.f32 	%f5, %f1, 0f3A83126F;
	add.f32 	%f6, %f2, 0f3A83126F;
	.loc	1 46 26                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:46:26
	sqrt.approx.ftz.f32 	%f7, %f5;
	sqrt.approx.ftz.f32 	%f8, %f6;
	.loc	1 48 18                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:48:18
	mov.b32 	%r28, %f7;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f9, %r26;
	mov.b32 	%r31, %f8;
	// begin inline asm
	div.full.f32 %r29, %r27, %r31;
	// end inline asm
	mov.b32 	%f10, %r29;
	.loc	1 57 21                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:57:21
	setp.gt.s32 	%p59, %r99, 0;
	.loc	1 62 21                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:62:21
	setp.gt.s32 	%p60, %r95, 0;
	.loc	1 65 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:65:20
	and.pred  	%p61, %p60, %p59;
	.loc	1 66 38                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:66:38
	add.s32 	%r112, %r90, -3;
	add.s32 	%r113, %r90, -2;
	.loc	1 66 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:66:31
	mul.wide.s32 	%rd62, %r112, 4;
	add.s64 	%rd22, %rd47, %rd62;
	mul.wide.s32 	%rd63, %r113, 4;
	add.s64 	%rd23, %rd47, %rd63;
	.loc	1 66 51                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:66:51
	and.pred  	%p24, %p1, %p61;
	mov.b32 	%r33, 0;
	mov.pred 	%p22, 0;
	.loc	1 66 43                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:66:43
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p22 ld.global.b32 { %r32 }, [ %rd22 + 0 ];
	@!%p22 mov.u32 %r32, %r33;
	// end inline asm
	mov.b32 	%f11, %r32;
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p24 ld.global.b32 { %r34 }, [ %rd23 + 0 ];
	@!%p24 mov.u32 %r34, %r33;
	// end inline asm
	mov.b32 	%f12, %r34;
	.loc	1 72 51                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:72:51
	and.pred  	%p26, %p1, %p59;
	.loc	1 72 43                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:72:43
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p26 ld.global.v2.b32 { %r36, %r37 }, [ %rd23 + 0 ];
	@!%p26 mov.u32 %r36, %r33;
	@!%p26 mov.u32 %r37, %r33;
	// end inline asm
	mov.b32 	%f13, %r36;
	mov.b32 	%f14, %r37;
	.loc	1 73 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:73:20
	add.f32 	%f15, %f11, %f13;
	add.f32 	%f16, %f12, %f14;
	.loc	1 76 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:76:20
	setp.eq.s32 	%p62, %r95, -1;
	.loc	1 78 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:78:20
	and.pred  	%p63, %p62, %p59;
	.loc	1 79 38                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:79:38
	add.s32 	%r114, %r90, -1;
	.loc	1 79 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:79:31
	mul.wide.s32 	%rd64, %r114, 4;
	add.s64 	%rd25, %rd47, %rd64;
	add.s64 	%rd30, %rd12, 4;
	.loc	1 79 51                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:79:51
	and.pred  	%p31, %p1, %p63;
	.loc	1 79 43                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:79:43
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p26 ld.global.b32 { %r40 }, [ %rd25 + 0 ];
	@!%p26 mov.u32 %r40, %r33;
	// end inline asm
	mov.b32 	%f17, %r40;
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p31 ld.global.b32 { %r42 }, [ %rd12 + 0 ];
	@!%p31 mov.u32 %r42, %r33;
	// end inline asm
	mov.b32 	%f18, %r42;
	.loc	1 80 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:80:20
	add.f32 	%f19, %f15, %f17;
	add.f32 	%f20, %f16, %f18;
	.loc	1 82 21                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:82:21
	setp.gt.s32 	%p64, %r99, -1;
	.loc	1 85 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:85:20
	and.pred  	%p65, %p60, %p64;
	.loc	1 86 51                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:86:51
	and.pred  	%p35, %p1, %p65;
	.loc	1 86 43                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:86:43
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p22 ld.global.b32 { %r44 }, [ %rd25 + 0 ];
	@!%p22 mov.u32 %r44, %r33;
	// end inline asm
	mov.b32 	%f21, %r44;
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p35 ld.global.b32 { %r46 }, [ %rd12 + 0 ];
	@!%p35 mov.u32 %r46, %r33;
	// end inline asm
	mov.b32 	%f22, %r46;
	.loc	1 87 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:87:20
	add.f32 	%f23, %f19, %f21;
	add.f32 	%f24, %f20, %f22;
	.loc	1 89 44                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:89:44
	and.pred  	%p37, %p1, %p64;
	.loc	1 89 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:89:36
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	@%p37 ld.global.v2.b32 { %r48, %r49 }, [ %rd12 + 0 ];
	@!%p37 mov.u32 %r48, %r33;
	@!%p37 mov.u32 %r49, %r33;
	// end inline asm
	mov.b32 	%f25, %r48;
	mov.b32 	%f26, %r49;
	.loc	1 90 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:90:20
	add.f32 	%f27, %f23, %f25;
	add.f32 	%f28, %f24, %f26;
	.loc	1 91 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:91:20
	and.pred  	%p66, %p62, %p64;
	.loc	1 92 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:92:35
	add.s32 	%r115, %r90, 2;
	.loc	1 92 31                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:92:31
	mul.wide.s32 	%rd65, %r115, 4;
	add.s64 	%rd31, %rd47, %rd65;
	.loc	1 92 48                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:92:48
	and.pred  	%p42, %p1, %p66;
	.loc	1 92 40                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:92:40
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p37 ld.global.b32 { %r52 }, [ %rd30 + 0 ];
	@!%p37 mov.u32 %r52, %r33;
	// end inline asm
	mov.b32 	%f29, %r52;
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p42 ld.global.b32 { %r54 }, [ %rd31 + 0 ];
	@!%p42 mov.u32 %r54, %r33;
	// end inline asm
	mov.b32 	%f30, %r54;
	.loc	1 93 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:93:20
	add.f32 	%f31, %f27, %f29;
	add.f32 	%f32, %f28, %f30;
	.loc	1 96 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:96:20
	setp.lt.s32 	%p67, %r99, 1;
	.loc	1 102 48                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:102:48
	and.pred  	%p48, %p1, %p67;
	.loc	1 99 48                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:99:48
	and.pred  	%p47, %p48, %p60;
	.loc	1 99 40                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:99:40
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p22 ld.global.b32 { %r56 }, [ %rd30 + 0 ];
	@!%p22 mov.u32 %r56, %r33;
	// end inline asm
	mov.b32 	%f33, %r56;
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p47 ld.global.b32 { %r58 }, [ %rd31 + 0 ];
	@!%p47 mov.u32 %r58, %r33;
	// end inline asm
	mov.b32 	%f34, %r58;
	.loc	1 100 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:100:20
	add.f32 	%f35, %f31, %f33;
	add.f32 	%f36, %f32, %f34;
	.loc	1 102 40                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:102:40
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p48 ld.global.v2.b32 { %r60, %r61 }, [ %rd31 + 0 ];
	@!%p48 mov.u32 %r60, %r33;
	@!%p48 mov.u32 %r61, %r33;
	// end inline asm
	mov.b32 	%f37, %r60;
	mov.b32 	%f38, %r61;
	.loc	1 103 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:103:20
	add.f32 	%f39, %f35, %f37;
	add.f32 	%f40, %f36, %f38;
	.loc	1 105 35                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:105:35
	add.s32 	%r116, %r90, 3;
	add.s32 	%r117, %r90, 4;
	.loc	1 105 31                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:105:31
	mul.wide.s32 	%rd66, %r116, 4;
	add.s64 	%rd35, %rd47, %rd66;
	mul.wide.s32 	%rd67, %r117, 4;
	add.s64 	%rd36, %rd47, %rd67;
	.loc	1 105 48                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:105:48
	and.pred  	%p54, %p48, %p62;
	.loc	1 105 40                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:105:40
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p48 ld.global.b32 { %r64 }, [ %rd35 + 0 ];
	@!%p48 mov.u32 %r64, %r33;
	// end inline asm
	mov.b32 	%f41, %r64;
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p54 ld.global.b32 { %r66 }, [ %rd36 + 0 ];
	@!%p54 mov.u32 %r66, %r33;
	// end inline asm
	mov.b32 	%f42, %r66;
	.loc	1 106 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:106:20
	add.f32 	%f43, %f39, %f41;
	add.f32 	%f44, %f40, %f42;
	.loc	1 108 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:108:20
	mov.b32 	%r69, %f43;
	mov.b32 	%r70, 1082130432;
	// begin inline asm
	div.full.f32 %r68, %r69, %r70;
	// end inline asm
	mov.b32 	%f45, %r68;
	mov.b32 	%r72, %f44;
	// begin inline asm
	div.full.f32 %r71, %r72, %r70;
	// end inline asm
	mov.b32 	%f46, %r71;
	.loc	1 115 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:115:20
	add.f32 	%f47, %f3, 0f3A83126F;
	add.f32 	%f48, %f4, 0f3A83126F;
	.loc	1 116 27                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:116:27
	sqrt.approx.ftz.f32 	%f49, %f47;
	sqrt.approx.ftz.f32 	%f50, %f48;
	.loc	1 38 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:38:36
	mov.b32 	%f51, %r17;
	.loc	1 39 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:39:36
	mov.b32 	%f52, %r19;
	.loc	1 114 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:114:20
	sub.f32 	%f53, %f51, %f52;
	.loc	1 38 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:38:36
	mov.b32 	%f54, %r16;
	.loc	1 39 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:39:36
	mov.b32 	%f55, %r18;
	.loc	1 114 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:114:20
	sub.f32 	%f56, %f54, %f55;
	.loc	1 32 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:32:35
	mov.b32 	%f57, %r5;
	.loc	1 33 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:33:35
	mov.b32 	%f58, %r7;
	.loc	1 43 18                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:43:18
	sub.f32 	%f59, %f57, %f58;
	.loc	1 51 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:51:19
	mul.f32 	%f60, %f59, %f10;
	.loc	1 35 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:35:36
	mov.b32 	%f61, %r11;
	.loc	1 36 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:36:36
	mov.b32 	%f62, %r13;
	.loc	1 53 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:53:20
	fma.rn.f32 	%f63, %f60, %f61, %f62;
	.loc	1 31 53                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:53
	mov.b32 	%f64, %r3;
	.loc	1 54 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:54:19
	add.f32 	%f65, %f63, %f64;
	.loc	1 109 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:109:20
	add.f32 	%f66, %f65, %f46;
	.loc	1 32 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:32:35
	mov.b32 	%f67, %r4;
	.loc	1 33 35                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:33:35
	mov.b32 	%f68, %r6;
	.loc	1 43 18                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:43:18
	sub.f32 	%f69, %f67, %f68;
	.loc	1 51 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:51:19
	mul.f32 	%f70, %f69, %f9;
	.loc	1 35 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:35:36
	mov.b32 	%f71, %r10;
	.loc	1 36 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:36:36
	mov.b32 	%f72, %r12;
	.loc	1 53 20                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:53:20
	fma.rn.f32 	%f73, %f70, %f71, %f72;
	.loc	1 31 53                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:31:53
	mov.b32 	%f74, %r2;
	.loc	1 54 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:54:19
	add.f32 	%f75, %f73, %f74;
	.loc	1 109 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:109:20
	add.f32 	%f76, %f75, %f45;
	.loc	1 42 37                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:42:37
	mov.b32 	%f77, %r25;
	mov.b32 	%f78, %r24;
	.loc	1 41 37                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:41:37
	mov.b32 	%f79, %r23;
	mov.b32 	%f80, %r22;
	.loc	1 29 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:29:19
	shr.s32 	%r119, %r90, 31;
	shr.u32 	%r120, %r119, 28;
	add.s32 	%r121, %r90, %r120;
	.loc	1 30 19                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:30:19
	and.b32  	%r122, %r121, -16;
	sub.s32 	%r123, %r90, %r122;
	.loc	1 117 19                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:117:19
	mov.b32 	%r76, %f49;
	// begin inline asm
	div.full.f32 %r74, %r27, %r76;
	// end inline asm
	mov.b32 	%f81, %r74;
	mov.b32 	%r79, %f50;
	// begin inline asm
	div.full.f32 %r77, %r27, %r79;
	// end inline asm
	mov.b32 	%f82, %r77;
	.loc	1 119 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:119:20
	mul.f32 	%f83, %f56, %f81;
	mul.f32 	%f84, %f53, %f82;
	.loc	1 121 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:121:20
	fma.rn.f32 	%f85, %f83, %f80, %f78;
	fma.rn.f32 	%f86, %f84, %f79, %f77;
	.loc	1 122 20                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:122:20
	add.f32 	%f87, %f85, %f74;
	add.f32 	%f88, %f86, %f64;
	.loc	1 123 33                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:123:33
	shl.b32 	%r124, %r121, 2;
	and.b32  	%r125, %r124, -64;
	.loc	1 123 30                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:123:30
	add.s32 	%r126, %r125, %r123;
	.loc	1 123 25                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:123:25
	mul.wide.s32 	%rd68, %r126, 4;
	add.s64 	%rd37, %rd53, %rd68;
	.loc	1 123 45                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:123:45
	mov.b32 	%r80, %f75;
	mov.b32 	%r81, %f65;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd37 + 0 ], { %r80, %r81 };
	// end inline asm
	.loc	1 124 25                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:124:25
	add.s64 	%rd38, %rd54, %rd68;
	.loc	1 124 45                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:124:45
	mov.b32 	%r82, %f76;
	mov.b32 	%r83, %f66;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd38 + 0 ], { %r82, %r83 };
	// end inline asm
	.loc	1 125 25                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:125:25
	add.s64 	%rd39, %rd55, %rd59;
	.loc	1 37 36                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:37:36
	mov.b32 	%f89, %r14;
	mov.b32 	%f90, %r15;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p68, %f90, 0f00000000;
	setp.lt.f32 	%p69, %f89, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f91, 0f00000000, %f89, %p69;
	selp.f32 	%f92, 0f00000000, %f90, %p68;
$L__tmp2:
	.loc	1 113 21                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:113:21
	setp.le.f32 	%p70, %f92, 0f00000000;
	setp.le.f32 	%p71, %f91, 0f00000000;
	.loc	1 125 37                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:125:37
	selp.u16 	%rs2, 1, 0, %p71;
	selp.u16 	%rs3, 1, 0, %p70;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p1 st.global.b16 [ %rd39 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 126 25                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:126:25
	add.s64 	%rd40, %rd56, %rd68;
	.loc	1 126 45                        // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:126:45
	mov.b32 	%r84, %f87;
	mov.b32 	%r85, %f88;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd40 + 0 ], { %r84, %r85 };
	// end inline asm
	.loc	1 126 4                         // c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py:126:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7m/c7mxdtdwh2774bblf3hbldbuyb5pxeqftwnrjklbt5qyprebulmh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 245                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xee DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 109
.b8 120
.b8 100
.b8 116
.b8 100
.b8 119
.b8 104
.b8 50
.b8 55
.b8 55
.b8 52
.b8 98
.b8 98
.b8 108
.b8 102
.b8 51
.b8 104
.b8 98
.b8 108
.b8 100
.b8 98
.b8 117
.b8 121
.b8 98
.b8 53
.b8 112
.b8 120
.b8 101
.b8 113
.b8 102
.b8 116
.b8 119
.b8 110
.b8 114
.b8 106
.b8 107
.b8 108
.b8 98
.b8 116
.b8 53
.b8 113
.b8 121
.b8 112
.b8 114
.b8 101
.b8 98
.b8 117
.b8 108
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x67 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 97
.b8 118
.b8 103
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xca:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 111                                 // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
