//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mv_21  // -- Begin function triton_red_fused_mv_21
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mv_21
.visible .entry triton_red_fused_mv_21(
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_21_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_21_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_21_param_2,
	.param .u32 triton_red_fused_mv_21_param_3,
	.param .u32 triton_red_fused_mv_21_param_4
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<67>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_red_fused_mv_21_param_0];
	ld.param.u64 	%rd9, [triton_red_fused_mv_21_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:24:21
	setp.lt.s32 	%p1, %r1, 1024;
	ld.param.u64 	%rd10, [triton_red_fused_mv_21_param_2];
	.loc	1 25 33                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:25:33
	mov.u32 	%r57, %tid.x;
	shl.b32 	%r58, %r57, 2;
	and.b32  	%r59, %r58, 2044;
	.loc	1 32 44                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:44
	mul.lo.s32 	%r60, %r1, 5120;
	.loc	1 28 36                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:28:36
	cvt.u64.u32 	%rd11, %r59;
	.loc	1 32 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:39
	add.s32 	%r61, %r59, %r60;
	.loc	1 32 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:34
	mul.wide.s32 	%rd12, %r61, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mov.b32 	%r6, 0;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:34
	mul.wide.u32 	%rd13, %r59, 4;
	add.s64 	%rd2, %rd9, %rd13;
	mov.pred 	%p6, -1;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 32 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:39
	add.s32 	%r62, %r61, 2048;
	.loc	1 32 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:34
	mul.wide.s32 	%rd14, %r62, 4;
	add.s64 	%rd3, %rd8, %rd14;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 33 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:34
	add.s64 	%rd4, %rd2, 8192;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r26, %r6;
	@!%p6 mov.u32 %r27, %r6;
	@!%p6 mov.u32 %r28, %r6;
	@!%p6 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	mov.b32 	%f1, %r20;
	mov.b32 	%f2, %r4;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	mov.b32 	%f3, %r28;
	mov.b32 	%f4, %r12;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f5, %f2, %f4, 0f00000000;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	mov.b32 	%f6, %r21;
	mov.b32 	%f7, %r5;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	mov.b32 	%f8, %r29;
	mov.b32 	%f9, %r13;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f10, %f7, %f9, 0f00000000;
	fma.rn.f32 	%f11, %f1, %f3, %f5;
	fma.rn.f32 	%f12, %f6, %f8, %f10;
	.loc	1 37 46                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:37:46
	selp.f32 	%f13, %f11, 0f00000000, %p1;
	selp.f32 	%f14, %f12, 0f00000000, %p1;
	.loc	1 29 27                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:29:27
	or.b64  	%rd15, %rd11, 4096;
	.loc	1 30 25                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:30:25
	setp.lt.u64 	%p26, %rd15, 5120;
	.loc	1 32 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:39
	cvt.u32.u64 	%r63, %rd15;
	add.s32 	%r64, %r60, %r63;
	.loc	1 32 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:34
	mul.wide.s32 	%rd16, %r64, 4;
	add.s64 	%rd5, %rd8, %rd16;
	.loc	1 32 57                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:57
	and.pred  	%p21, %p1, %p26;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p21 ld.global.L1::evict_first.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p21 mov.u32 %r34, %r6;
	@!%p21 mov.u32 %r35, %r6;
	@!%p21 mov.u32 %r36, %r6;
	@!%p21 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f15, %r36;
	mov.b32 	%f16, %r37;
	.loc	1 33 34                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:34
	add.s64 	%rd6, %rd2, 16384;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p26 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p26 mov.u32 %r42, %r6;
	@!%p26 mov.u32 %r43, %r6;
	@!%p26 mov.u32 %r44, %r6;
	@!%p26 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	%f17, %r44;
	mov.b32 	%f18, %r45;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f19, %f15, %f17, %f13;
	fma.rn.f32 	%f20, %f16, %f18, %f14;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	mov.b32 	%f21, %r2;
	mov.b32 	%f22, %r3;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	mov.b32 	%f23, %r10;
	mov.b32 	%f24, %r11;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f25, %f22, %f24, 0f00000000;
	fma.rn.f32 	%f26, %f21, %f23, 0f00000000;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	mov.b32 	%f27, %r19;
	mov.b32 	%f28, %r18;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	mov.b32 	%f29, %r27;
	mov.b32 	%f30, %r26;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f31, %f28, %f30, %f26;
	fma.rn.f32 	%f32, %f27, %f29, %f25;
	.loc	1 37 46                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:37:46
	selp.f32 	%f33, %f32, 0f00000000, %p1;
	selp.f32 	%f34, %f31, 0f00000000, %p1;
	.loc	1 32 49                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:32:49
	mov.b32 	%f35, %r35;
	mov.b32 	%f36, %r34;
	.loc	1 33 39                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:33:39
	mov.b32 	%f37, %r43;
	mov.b32 	%f38, %r42;
	.loc	1 36 23                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:36:23
	fma.rn.f32 	%f39, %f36, %f38, %f34;
	fma.rn.f32 	%f40, %f35, %f37, %f33;
	.loc	1 37 46                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:37:46
	selp.f32 	%f41, %f40, %f33, %p21;
	selp.f32 	%f42, %f39, %f34, %p21;
	selp.f32 	%f43, %f19, %f13, %p21;
	selp.f32 	%f44, %f20, %f14, %p21;
	.loc	1 25 33                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:25:33
	and.b32  	%r65, %r57, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f42, %f41;
	add.f32 	%f46, %f43, %f45;
	add.f32 	%f47, %f44, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f47;
	shfl.sync.bfly.b32	%r67, %r66, 16, 31, -1;
	mov.b32 	%f48, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f49;
	shfl.sync.bfly.b32	%r69, %r68, 8, 31, -1;
	mov.b32 	%f50, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f51;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f52, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f53;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f54, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f55;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f56, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p31, %r65, 0;
	shr.u32 	%r76, %r57, 3;
	and.b32  	%r77, %r76, 60;
	mov.u32 	%r78, global_smem;
	add.s32 	%r50, %r78, %r77;
	mov.b32 	%r51, %f57;
	// begin inline asm
	@%p31 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p32, %r57, 16;
	add.s32 	%r53, %r78, %r58;
	// begin inline asm
	@%p32 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r52;
	shfl.sync.bfly.b32	%r79, %r52, 8, 31, -1;
	mov.b32 	%f59, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f60;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f61, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f62;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f63, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f64;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f65, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r86, %r57, 15;
	setp.eq.s32 	%p35, %r86, 0;
	and.pred  	%p33, %p32, %p35;
	mov.b32 	%r55, %f66;
	// begin inline asm
	@%p33 st.shared.b32 [ %r53 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r56, [global_smem];
$L__tmp2:
	.loc	1 39 25                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:39:25
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd7, %rd10, %rd17;
	.loc	1 39 36                         // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:39:36
	and.b32  	%r87, %r57, 511;
	setp.eq.s32 	%p36, %r87, 0;
	and.pred  	%p34, %p36, %p1;
	// begin inline asm
	@%p34 st.global.b32 [ %rd7 + 0 ], { %r56 };
	// end inline asm
	.loc	1 39 4                          // cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vm/cvmq6nuolfdz7wrmaf57gkgtfdehqd4nw3w4kvqtcenvn5bkck4e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 109
.b8 113
.b8 54
.b8 110
.b8 117
.b8 111
.b8 108
.b8 102
.b8 100
.b8 122
.b8 55
.b8 119
.b8 114
.b8 109
.b8 97
.b8 102
.b8 53
.b8 55
.b8 103
.b8 107
.b8 103
.b8 116
.b8 102
.b8 100
.b8 101
.b8 104
.b8 113
.b8 100
.b8 52
.b8 110
.b8 119
.b8 51
.b8 119
.b8 52
.b8 107
.b8 118
.b8 113
.b8 116
.b8 99
.b8 101
.b8 110
.b8 118
.b8 110
.b8 53
.b8 98
.b8 107
.b8 99
.b8 107
.b8 52
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 50
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
