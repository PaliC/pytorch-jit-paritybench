; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 256, !dbg !14
  %16 = sdiv i32 %14, 8, !dbg !15
  %17 = srem i32 %16, 8, !dbg !16
  %18 = sext i32 %14 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %15) #3, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = sext i32 %17 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %15) #3, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %3, i64 %22, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #3, !dbg !22
  %28 = bitcast i32 %27 to float, !dbg !22
  %29 = getelementptr float, ptr addrspace(1) %4, i64 %22, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %15) #3, !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = getelementptr float, ptr addrspace(1) %5, i64 %22, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #3, !dbg !26
  %34 = bitcast i32 %33 to float, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %6, i64 %22, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %15) #3, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = getelementptr float, ptr addrspace(1) %7, i64 %18, !dbg !29
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %15) #3, !dbg !30
  %40 = bitcast i32 %39 to float, !dbg !30
  %41 = fadd float %21, %25, !dbg !31
  %42 = fsub float %41, %28, !dbg !32
  %43 = fadd float %31, 0x3EE4F8B580000000, !dbg !33
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i = icmp eq i32 %44, 0, !dbg !34
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i = icmp eq i32 %45, 0, !dbg !34
  br i1 %.not.i, label %51, label %46, !dbg !34

46:                                               ; preds = %9
  br i1 %.not1.i, label %49, label %47, !dbg !34

47:                                               ; preds = %46
  %48 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %43) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

49:                                               ; preds = %46
  %50 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %43) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

51:                                               ; preds = %9
  br i1 %.not1.i, label %54, label %52, !dbg !34

52:                                               ; preds = %51
  %53 = tail call float @llvm.nvvm.sqrt.rn.f(float %43) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

54:                                               ; preds = %51
  %55 = tail call float @llvm.nvvm.sqrt.approx.f(float %43) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

__nv_sqrtf.exit:                                  ; preds = %47, %49, %52, %54
  %.0.i = phi float [ %48, %47 ], [ %50, %49 ], [ %53, %52 ], [ %55, %54 ], !dbg !34
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !35
  %57 = fmul float %42, %56, !dbg !36
  %58 = fmul float %57, %34, !dbg !37
  %59 = fadd float %58, %37, !dbg !38
  %60 = fcmp ogt float %59, 0.000000e+00, !dbg !39
  %61 = fmul float %59, 0x3FF7154760000000, !dbg !40
  %62 = tail call float @llvm.nvvm.round.f(float %61) #3, !dbg !40
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i1 = icmp eq i32 %63, 0, !dbg !40
  %64 = tail call float @llvm.nvvm.fabs.ftz.f(float %59) #3, !dbg !40
  %65 = tail call float @llvm.nvvm.fabs.f(float %59) #3, !dbg !40
  %.03.i = select i1 %.not.i1, float %65, float %64, !dbg !40
  %66 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !40
  %t.0.i = select i1 %66, float 0.000000e+00, float %62, !dbg !40
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %69 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !40
  %j.0.i = select i1 %69, float 1.270000e+02, float %t.0.i, !dbg !40
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not8.i = icmp eq i32 %75, 0, !dbg !40
  br i1 %.not8.i, label %78, label %76, !dbg !40

76:                                               ; preds = %__nv_sqrtf.exit
  %77 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

78:                                               ; preds = %__nv_sqrtf.exit
  %79 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !40
  br label %__nv_expm1f.exit, !dbg !40

__nv_expm1f.exit:                                 ; preds = %76, %78
  %.0.i2 = phi float [ %77, %76 ], [ %79, %78 ], !dbg !40
  %.not7.i = icmp eq i32 %74, 0, !dbg !40
  %.not6.i = icmp eq i32 %73, 0, !dbg !40
  %.not5.i = icmp eq i32 %72, 0, !dbg !40
  %.not4.i = icmp eq i32 %71, 0, !dbg !40
  %.not3.i = icmp eq i32 %70, 0, !dbg !40
  %.not2.i3 = icmp eq i32 %68, 0, !dbg !40
  %80 = fneg float %t.0.i, !dbg !40
  %.not1.i4 = icmp eq i32 %67, 0, !dbg !40
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %80, float 0x3FE62E4000000000, float %59) #3, !dbg !40
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %80, float 0x3FE62E4000000000, float %59) #3, !dbg !40
  %.04.i = select i1 %.not1.i4, float %81, float %82, !dbg !40
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %80, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !40
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %80, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !40
  %.05.i = select i1 %.not2.i3, float %83, float %84, !dbg !40
  %85 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !40
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !40
  %.07.i = select i1 %.not3.i, float %85, float %86, !dbg !40
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !40
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !40
  %.08.i = select i1 %.not4.i, float %87, float %88, !dbg !40
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !40
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !40
  %.09.i = select i1 %.not5.i, float %89, float %90, !dbg !40
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !40
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !40
  %.06.i = select i1 %.not6.i, float %91, float %92, !dbg !40
  %93 = fmul float %.05.i, %.06.i, !dbg !40
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %93, float %.05.i, float %.05.i) #3, !dbg !40
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float %.05.i, float %.05.i) #3, !dbg !40
  %.01.i = select i1 %.not7.i, float %94, float %95, !dbg !40
  %96 = fadd float %.0.i2, -1.000000e+00, !dbg !40
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not9.i = icmp eq i32 %97, 0, !dbg !40
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i2, float %96) #3, !dbg !40
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i2, float %96) #3, !dbg !40
  %.02.i = select i1 %.not9.i, float %99, float %98, !dbg !40
  %100 = fadd float %.02.i, %.02.i, !dbg !40
  %u.0.i = select i1 %69, float %100, float %.02.i, !dbg !40
  %101 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !40
  %u.1.i = select i1 %101, float 0x7FF0000000000000, float %u.0.i, !dbg !40
  %102 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !40
  %u.2.i = select i1 %102, float -1.000000e+00, float %u.1.i, !dbg !40
  %103 = fcmp oeq float %59, 0.000000e+00, !dbg !40
  %104 = fadd float %59, %59, !dbg !40
  %u.3.i = select i1 %103, float %104, float %u.2.i, !dbg !40
  %105 = select i1 %60, float %59, float %u.3.i, !dbg !41
  %106 = fadd float %105, %40, !dbg !42
  %107 = fmul float %106, 0x3FF7154760000000, !dbg !43
  %108 = tail call float @llvm.nvvm.round.f(float %107) #3, !dbg !43
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i5 = icmp eq i32 %109, 0, !dbg !43
  %110 = tail call float @llvm.nvvm.fabs.ftz.f(float %106) #3, !dbg !43
  %111 = tail call float @llvm.nvvm.fabs.f(float %106) #3, !dbg !43
  %.03.i6 = select i1 %.not.i5, float %111, float %110, !dbg !43
  %112 = fcmp olt float %.03.i6, 0x3FDA3D70A0000000, !dbg !43
  %t.0.i7 = select i1 %112, float 0.000000e+00, float %108, !dbg !43
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %115 = fcmp oeq float %t.0.i7, 1.280000e+02, !dbg !43
  %j.0.i8 = select i1 %115, float 1.270000e+02, float %t.0.i7, !dbg !43
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not8.i9 = icmp eq i32 %121, 0, !dbg !43
  br i1 %.not8.i9, label %124, label %122, !dbg !43

122:                                              ; preds = %__nv_expm1f.exit
  %123 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i8) #3, !dbg !43
  br label %__nv_expm1f.exit31, !dbg !43

124:                                              ; preds = %__nv_expm1f.exit
  %125 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i8) #3, !dbg !43
  br label %__nv_expm1f.exit31, !dbg !43

__nv_expm1f.exit31:                               ; preds = %122, %124
  %.0.i10 = phi float [ %123, %122 ], [ %125, %124 ], !dbg !43
  %126 = fcmp ogt float %106, 0.000000e+00, !dbg !44
  %.not7.i11 = icmp eq i32 %120, 0, !dbg !43
  %.not6.i12 = icmp eq i32 %119, 0, !dbg !43
  %.not5.i13 = icmp eq i32 %118, 0, !dbg !43
  %.not4.i14 = icmp eq i32 %117, 0, !dbg !43
  %.not3.i15 = icmp eq i32 %116, 0, !dbg !43
  %.not2.i16 = icmp eq i32 %114, 0, !dbg !43
  %127 = fneg float %t.0.i7, !dbg !43
  %.not1.i17 = icmp eq i32 %113, 0, !dbg !43
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %127, float 0x3FE62E4000000000, float %106) #3, !dbg !43
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %127, float 0x3FE62E4000000000, float %106) #3, !dbg !43
  %.04.i18 = select i1 %.not1.i17, float %128, float %129, !dbg !43
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %127, float 0x3EB7F7D1C0000000, float %.04.i18) #3, !dbg !43
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %127, float 0x3EB7F7D1C0000000, float %.04.i18) #3, !dbg !43
  %.05.i19 = select i1 %.not2.i16, float %130, float %131, !dbg !43
  %132 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i19, float 0x3F812ACC60000000) #3, !dbg !43
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i19, float 0x3F812ACC60000000) #3, !dbg !43
  %.07.i20 = select i1 %.not3.i15, float %132, float %133, !dbg !43
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i20, float %.05.i19, float 0x3FA5557C60000000) #3, !dbg !43
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i20, float %.05.i19, float 0x3FA5557C60000000) #3, !dbg !43
  %.08.i21 = select i1 %.not4.i14, float %134, float %135, !dbg !43
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i21, float %.05.i19, float 0x3FC5553EC0000000) #3, !dbg !43
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i21, float %.05.i19, float 0x3FC5553EC0000000) #3, !dbg !43
  %.09.i22 = select i1 %.not5.i13, float %136, float %137, !dbg !43
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i22, float %.05.i19, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i22, float %.05.i19, float 0x3FDFFFFFC0000000) #3, !dbg !43
  %.06.i23 = select i1 %.not6.i12, float %138, float %139, !dbg !43
  %140 = fmul float %.05.i19, %.06.i23, !dbg !43
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %140, float %.05.i19, float %.05.i19) #3, !dbg !43
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float %.05.i19, float %.05.i19) #3, !dbg !43
  %.01.i24 = select i1 %.not7.i11, float %141, float %142, !dbg !43
  %143 = fadd float %.0.i10, -1.000000e+00, !dbg !43
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not9.i25 = icmp eq i32 %144, 0, !dbg !43
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i24, float %.0.i10, float %143) #3, !dbg !43
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i24, float %.0.i10, float %143) #3, !dbg !43
  %.02.i26 = select i1 %.not9.i25, float %146, float %145, !dbg !43
  %147 = fadd float %.02.i26, %.02.i26, !dbg !43
  %u.0.i27 = select i1 %115, float %147, float %.02.i26, !dbg !43
  %148 = fcmp ogt float %j.0.i8, 1.280000e+02, !dbg !43
  %u.1.i28 = select i1 %148, float 0x7FF0000000000000, float %u.0.i27, !dbg !43
  %149 = fcmp olt float %j.0.i8, -2.500000e+01, !dbg !43
  %u.2.i29 = select i1 %149, float -1.000000e+00, float %u.1.i28, !dbg !43
  %150 = fcmp oeq float %106, 0.000000e+00, !dbg !43
  %151 = fadd float %106, %106, !dbg !43
  %u.3.i30 = select i1 %150, float %151, float %u.2.i29, !dbg !43
  %152 = select i1 %126, float %106, float %u.3.i30, !dbg !45
  %153 = bitcast float %41 to i32, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %153, ptr addrspace(1) %19, i1 %15) #3, !dbg !46
  %154 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !47
  %155 = bitcast float %152 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %155, ptr addrspace(1) %154, i1 %15) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckackjuemuqyblpzaqoxlyk4xk3zhdgvdievttpczey4ugcbcf5o.py", directory: "inductor_cache/ka")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_1", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 31, scope: !7)
!30 = !DILocation(line: 32, column: 36, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 26, scope: !7)
!35 = !DILocation(line: 39, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 46, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 28, scope: !7)
!41 = !DILocation(line: 50, column: 35, scope: !7)
!42 = !DILocation(line: 51, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 28, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 56, column: 35, scope: !7)
!46 = !DILocation(line: 57, column: 39, scope: !7)
!47 = !DILocation(line: 58, column: 28, scope: !7)
!48 = !DILocation(line: 58, column: 40, scope: !7)
!49 = !DILocation(line: 58, column: 4, scope: !7)
