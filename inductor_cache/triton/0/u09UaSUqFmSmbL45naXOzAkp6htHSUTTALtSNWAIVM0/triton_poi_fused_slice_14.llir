; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_slice_14(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %7 = lshr i32 %6, 2, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !12
  %9 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !13
  %10 = insertelement <2 x i32> %9, i32 %5, i64 1, !dbg !13
  %11 = shl <2 x i32> %10, <i32 2, i32 4>, !dbg !13
  %12 = insertelement <2 x i32> poison, i32 %6, i64 0, !dbg !14
  %13 = insertelement <2 x i32> %12, i32 %7, i64 1, !dbg !14
  %14 = and <2 x i32> %13, <i32 3, i32 7>, !dbg !14
  %15 = or disjoint <2 x i32> %11, %14, !dbg !15
  %16 = extractelement <2 x i32> %15, i64 1, !dbg !16
  %17 = or disjoint i32 %16, 8, !dbg !16
  %18 = icmp slt i32 %16, 12, !dbg !17
  %19 = icmp slt i32 %17, 12, !dbg !17
  %20 = extractelement <2 x i32> %15, i64 0, !dbg !18
  %21 = icmp slt i32 %20, 3, !dbg !18
  %.frozen = freeze i32 %16, !dbg !19
  %22 = sdiv i32 %.frozen, 3, !dbg !19
  %23 = mul i32 %22, 3, !dbg !20
  %.decomposed = sub i32 %.frozen, %23, !dbg !20
  %.frozen1 = freeze i32 %17, !dbg !19
  %24 = sdiv i32 %.frozen1, 3, !dbg !19
  %25 = mul i32 %24, 3, !dbg !20
  %.decomposed2 = sub i32 %.frozen1, %25, !dbg !20
  %26 = mul i32 %20, 3, !dbg !21
  %27 = add i32 %26, %.decomposed, !dbg !22
  %28 = mul i32 %22, 18, !dbg !23
  %29 = mul i32 %24, 18, !dbg !23
  %30 = add i32 %27, %28, !dbg !24
  %31 = add i32 %29, %.decomposed2, !dbg !22
  %32 = add i32 %31, %26, !dbg !24
  %33 = sext i32 %30 to i64, !dbg !25
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = sext i32 %32 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !25
  %37 = and i1 %18, %21, !dbg !26
  %38 = and i1 %19, %21, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %37) #1, !dbg !27
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %38) #1, !dbg !27
  %41 = mul i32 %16, 3, !dbg !28
  %42 = mul i32 %17, 3, !dbg !28
  %43 = add i32 %20, %41, !dbg !29
  %44 = add i32 %20, %42, !dbg !29
  %45 = sext i32 %43 to i64, !dbg !30
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !30
  %47 = sext i32 %44 to i64, !dbg !30
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %39, ptr addrspace(1) %46, i1 %37) #1, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %40, ptr addrspace(1) %48, i1 %38) #1, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyctnpxtl6j45swzvfqoawngy3olq5s76zld46mlanv6dxjhanpa.py", directory: "inductor_cache/yc")
!4 = !{ptr @triton_poi_fused_slice_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_slice_14, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_slice_14", linkageName: "triton_poi_fused_slice_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 44, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 23, column: 23, scope: !7)
!17 = !DILocation(line: 24, column: 21, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 37, scope: !7)
!22 = !DILocation(line: 32, column: 35, scope: !7)
!23 = !DILocation(line: 32, column: 45, scope: !7)
!24 = !DILocation(line: 32, column: 42, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 58, scope: !7)
!27 = !DILocation(line: 32, column: 50, scope: !7)
!28 = !DILocation(line: 33, column: 32, scope: !7)
!29 = !DILocation(line: 33, column: 30, scope: !7)
!30 = !DILocation(line: 33, column: 25, scope: !7)
!31 = !DILocation(line: 33, column: 43, scope: !7)
!32 = !DILocation(line: 33, column: 4, scope: !7)
