; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = or disjoint i32 %14, 1, !dbg !13
  %16 = icmp slt i32 %14, 1376, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %17 = sdiv i32 %.frozen, 344, !dbg !15
  %18 = mul i32 %17, 344, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = srem i32 %15, 344, !dbg !16
  %20 = icmp slt i32 %.decomposed, 336, !dbg !17
  %.lhs.trunc = trunc nsw i32 %.decomposed to i16, !dbg !18
  %21 = sdiv i16 %.lhs.trunc, 84, !dbg !19
  %22 = mul i16 %21, 84, !dbg !18
  %.decomposed11 = sub i16 %.lhs.trunc, %22, !dbg !18
  %.sext = sext i16 %.decomposed11 to i32, !dbg !18
  %.lhs.trunc1 = trunc nsw i32 %19 to i16, !dbg !18
  %.lhs.trunc1.frozen = freeze i16 %.lhs.trunc1, !dbg !19
  %23 = sdiv i16 %.lhs.trunc1.frozen, 84, !dbg !19
  %24 = mul i16 %23, 84, !dbg !18
  %.decomposed12 = sub i16 %.lhs.trunc1.frozen, %24, !dbg !18
  %.sext2 = sext i16 %.decomposed12 to i32, !dbg !18
  %25 = shl nsw i32 %.sext, 2, !dbg !20
  %26 = shl nsw i32 %.sext2, 2, !dbg !20
  %27 = mul nsw i32 %17, 336, !dbg !21
  %28 = add nsw i32 %25, %27, !dbg !22
  %.lhs.trunc7 = trunc nsw i16 %21 to i8, !dbg !23
  %29 = srem i8 %.lhs.trunc7, 4, !dbg !23
  %.sext8 = sext i8 %29 to i32, !dbg !23
  %.lhs.trunc9 = trunc nsw i16 %23 to i8, !dbg !23
  %30 = srem i8 %.lhs.trunc9, 4, !dbg !23
  %.sext10 = sext i8 %30 to i32, !dbg !23
  %31 = add nsw i32 %28, %.sext8, !dbg !24
  %32 = add nsw i32 %26, %.sext10, !dbg !22
  %33 = add nsw i32 %32, %27, !dbg !24
  %34 = sext i32 %31 to i64, !dbg !25
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !25
  %36 = sext i32 %33 to i64, !dbg !25
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !25
  %38 = and i1 %16, %20, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %38, i32 0, i1 %38) #1, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %38, i32 0, i1 %38) #1, !dbg !27
  %42 = bitcast i32 %41 to float, !dbg !27
  %43 = sext i16 %.decomposed11 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !28
  %45 = sext i16 %.decomposed12 to i64, !dbg !28
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !28
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %38, i32 0, i1 %38) #1, !dbg !29
  %48 = bitcast i32 %47 to float, !dbg !29
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %38, i32 0, i1 %38) #1, !dbg !29
  %50 = bitcast i32 %49 to float, !dbg !29
  %51 = fadd float %40, %48, !dbg !30
  %52 = fadd float %42, %50, !dbg !30
  %53 = and i32 %.decomposed, -4, !dbg !31
  %54 = icmp eq i32 %53, 336, !dbg !31
  %55 = shl nsw i32 %17, 2, !dbg !32
  %56 = add nsw i32 %.decomposed, -336, !dbg !33
  %57 = add nsw i32 %55, %56, !dbg !34
  %58 = sext i32 %57 to i64, !dbg !35
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !35
  %60 = and i1 %16, %54, !dbg !36
  %61 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %59, i1 %60, i32 0, i1 %60, i32 0, i1 %60) #1, !dbg !37
  %62 = extractvalue { i32, i32 } %61, 0, !dbg !37
  %63 = extractvalue { i32, i32 } %61, 1, !dbg !37
  %64 = bitcast i32 %62 to float, !dbg !37
  %65 = bitcast i32 %63 to float, !dbg !37
  %66 = sext i32 %56 to i64, !dbg !38
  %67 = getelementptr float, ptr addrspace(1) %3, i64 %66, !dbg !38
  %68 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %67, i1 %60, i32 0, i1 %60, i32 0, i1 %60) #1, !dbg !39
  %69 = extractvalue { i32, i32 } %68, 0, !dbg !39
  %70 = extractvalue { i32, i32 } %68, 1, !dbg !39
  %71 = bitcast i32 %69 to float, !dbg !39
  %72 = bitcast i32 %70 to float, !dbg !39
  %73 = fadd float %64, %71, !dbg !40
  %74 = fadd float %65, %72, !dbg !40
  %75 = icmp sgt i32 %.decomposed, 339, !dbg !41
  %76 = add nsw i32 %.decomposed, -340, !dbg !42
  %77 = add nsw i32 %55, %76, !dbg !43
  %78 = sext i32 %77 to i64, !dbg !44
  %79 = getelementptr float, ptr addrspace(1) %4, i64 %78, !dbg !44
  %80 = and i1 %16, %75, !dbg !45
  %81 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %79, i1 %80, i32 0, i1 %80, i32 0, i1 %80) #1, !dbg !46
  %82 = extractvalue { i32, i32 } %81, 0, !dbg !46
  %83 = extractvalue { i32, i32 } %81, 1, !dbg !46
  %84 = bitcast i32 %82 to float, !dbg !46
  %85 = bitcast i32 %83 to float, !dbg !46
  %86 = sext i32 %76 to i64, !dbg !47
  %87 = getelementptr float, ptr addrspace(1) %5, i64 %86, !dbg !47
  %88 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %87, i1 %80, i32 0, i1 %80, i32 0, i1 %80) #1, !dbg !48
  %89 = extractvalue { i32, i32 } %88, 0, !dbg !48
  %90 = extractvalue { i32, i32 } %88, 1, !dbg !48
  %91 = bitcast i32 %89 to float, !dbg !48
  %92 = bitcast i32 %90 to float, !dbg !48
  %93 = fadd float %84, %91, !dbg !49
  %94 = fadd float %85, %92, !dbg !49
  %95 = select i1 %75, float %93, float 0.000000e+00, !dbg !50
  %96 = select i1 %75, float %94, float 0.000000e+00, !dbg !50
  %97 = select i1 %54, float %73, float %95, !dbg !51
  %98 = select i1 %54, float %74, float %96, !dbg !51
  %99 = select i1 %20, float %51, float %97, !dbg !51
  %100 = select i1 %20, float %52, float %98, !dbg !51
  %101 = sext i32 %14 to i64, !dbg !52
  %102 = getelementptr float, ptr addrspace(1) %6, i64 %101, !dbg !52
  %103 = bitcast float %99 to i32, !dbg !53
  %104 = bitcast float %100 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %103, i32 %104, ptr addrspace(1) %102, i1 %16) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cifz5uruqwpinmeixsoqht3gkhs2wua4ovk2c4fovsqq6inmkfhj.py", directory: "inductor_cache/if")
!4 = !{ptr @triton_poi_fused_cat_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_16, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_16", linkageName: "triton_poi_fused_cat_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 41, scope: !7)
!19 = !DILocation(line: 32, column: 68, scope: !7)
!20 = !DILocation(line: 32, column: 34, scope: !7)
!21 = !DILocation(line: 32, column: 52, scope: !7)
!22 = !DILocation(line: 32, column: 48, scope: !7)
!23 = !DILocation(line: 32, column: 74, scope: !7)
!24 = !DILocation(line: 32, column: 59, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 87, scope: !7)
!27 = !DILocation(line: 32, column: 80, scope: !7)
!28 = !DILocation(line: 33, column: 31, scope: !7)
!29 = !DILocation(line: 33, column: 44, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 40, column: 20, scope: !7)
!32 = !DILocation(line: 41, column: 33, scope: !7)
!33 = !DILocation(line: 41, column: 48, scope: !7)
!34 = !DILocation(line: 41, column: 39, scope: !7)
!35 = !DILocation(line: 41, column: 31, scope: !7)
!36 = !DILocation(line: 41, column: 62, scope: !7)
!37 = !DILocation(line: 41, column: 54, scope: !7)
!38 = !DILocation(line: 42, column: 31, scope: !7)
!39 = !DILocation(line: 42, column: 45, scope: !7)
!40 = !DILocation(line: 43, column: 20, scope: !7)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 49, column: 48, scope: !7)
!43 = !DILocation(line: 49, column: 39, scope: !7)
!44 = !DILocation(line: 49, column: 31, scope: !7)
!45 = !DILocation(line: 49, column: 62, scope: !7)
!46 = !DILocation(line: 49, column: 54, scope: !7)
!47 = !DILocation(line: 50, column: 31, scope: !7)
!48 = !DILocation(line: 50, column: 45, scope: !7)
!49 = !DILocation(line: 51, column: 20, scope: !7)
!50 = !DILocation(line: 53, column: 35, scope: !7)
!51 = !DILocation(line: 0, scope: !7)
!52 = !DILocation(line: 56, column: 25, scope: !7)
!53 = !DILocation(line: 56, column: 37, scope: !7)
!54 = !DILocation(line: 56, column: 4, scope: !7)
