#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<192> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<12> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<3> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<8> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<-4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-8> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.extsi %6 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_3 : tensor<256xi64, #blocked> loc(#loc9)
    %10 = arith.muli %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc10)
    %11 = arith.muli %7, %cst_5 : tensor<256xi32, #blocked> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc13)
    %15 = arith.andi %9, %5 : tensor<256xi1, #blocked> loc(#loc14)
    %16 = tt.load %14, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = arith.addi %10, %cst_6 : tensor<256xi32, #blocked> loc(#loc16)
    %18 = arith.addi %17, %11 : tensor<256xi32, #blocked> loc(#loc17)
    %19 = tt.addptr %13, %18 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = arith.cmpf olt, %16, %20 : tensor<256xf32, #blocked> loc(#loc94)
    %22 = arith.cmpf une, %16, %16 : tensor<256xf32, #blocked> loc(#loc95)
    %23 = arith.ori %21, %22 : tensor<256xi1, #blocked> loc(#loc96)
    %24 = arith.select %23, %16, %20 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc97)
    %25 = arith.addi %10, %cst_7 : tensor<256xi32, #blocked> loc(#loc25)
    %26 = arith.addi %25, %11 : tensor<256xi32, #blocked> loc(#loc26)
    %27 = tt.addptr %13, %26 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc27)
    %28 = tt.load %27, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc28)
    %29 = arith.cmpf olt, %24, %28 : tensor<256xf32, #blocked> loc(#loc98)
    %30 = arith.cmpf une, %24, %24 : tensor<256xf32, #blocked> loc(#loc99)
    %31 = arith.ori %29, %30 : tensor<256xi1, #blocked> loc(#loc100)
    %32 = arith.select %31, %24, %28 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc101)
    %33 = arith.addi %10, %cst_8 : tensor<256xi32, #blocked> loc(#loc30)
    %34 = arith.addi %33, %11 : tensor<256xi32, #blocked> loc(#loc31)
    %35 = tt.addptr %13, %34 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc32)
    %36 = tt.load %35, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc33)
    %37 = arith.cmpf olt, %32, %36 : tensor<256xf32, #blocked> loc(#loc102)
    %38 = arith.cmpf une, %32, %32 : tensor<256xf32, #blocked> loc(#loc103)
    %39 = arith.ori %37, %38 : tensor<256xi1, #blocked> loc(#loc104)
    %40 = arith.select %39, %32, %36 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc105)
    %41 = arith.cmpi sge, %8, %cst_3 : tensor<256xi64, #blocked> loc(#loc35)
    %42 = arith.cmpi slt, %8, %cst_9 : tensor<256xi64, #blocked> loc(#loc36)
    %43 = arith.andi %41, %42 : tensor<256xi1, #blocked> loc(#loc37)
    %44 = arith.addi %6, %cst_10 : tensor<256xi32, #blocked> loc(#loc38)
    %45 = arith.muli %44, %cst_4 : tensor<256xi32, #blocked> loc(#loc39)
    %46 = arith.addi %45, %11 : tensor<256xi32, #blocked> loc(#loc40)
    %47 = tt.addptr %13, %46 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc41)
    %48 = arith.andi %43, %5 : tensor<256xi1, #blocked> loc(#loc42)
    %49 = tt.load %47, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc43)
    %50 = arith.addi %45, %cst_6 : tensor<256xi32, #blocked> loc(#loc44)
    %51 = arith.addi %50, %11 : tensor<256xi32, #blocked> loc(#loc45)
    %52 = tt.addptr %13, %51 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc46)
    %53 = tt.load %52, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc47)
    %54 = arith.addf %49, %53 : tensor<256xf32, #blocked> loc(#loc48)
    %55 = arith.addi %45, %cst_7 : tensor<256xi32, #blocked> loc(#loc49)
    %56 = arith.addi %55, %11 : tensor<256xi32, #blocked> loc(#loc50)
    %57 = tt.addptr %13, %56 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc51)
    %58 = tt.load %57, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc52)
    %59 = arith.addf %54, %58 : tensor<256xf32, #blocked> loc(#loc53)
    %60 = arith.addi %45, %cst_8 : tensor<256xi32, #blocked> loc(#loc54)
    %61 = arith.addi %60, %11 : tensor<256xi32, #blocked> loc(#loc55)
    %62 = tt.addptr %13, %61 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc56)
    %63 = tt.load %62, %48, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc57)
    %64 = arith.addf %59, %63 : tensor<256xf32, #blocked> loc(#loc58)
    %65 = arith.divf %64, %cst_0 : tensor<256xf32, #blocked> loc(#loc59)
    %66 = arith.cmpi sge, %8, %cst_9 : tensor<256xi64, #blocked> loc(#loc60)
    %67 = arith.addi %6, %cst_11 : tensor<256xi32, #blocked> loc(#loc61)
    %68 = arith.muli %67, %cst_4 : tensor<256xi32, #blocked> loc(#loc62)
    %69 = arith.addi %68, %11 : tensor<256xi32, #blocked> loc(#loc63)
    %70 = tt.addptr %13, %69 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc64)
    %71 = arith.andi %66, %5 : tensor<256xi1, #blocked> loc(#loc65)
    %72 = tt.load %70, %71, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc66)
    %73 = arith.addi %68, %cst_6 : tensor<256xi32, #blocked> loc(#loc67)
    %74 = arith.addi %73, %11 : tensor<256xi32, #blocked> loc(#loc68)
    %75 = tt.addptr %13, %74 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc69)
    %76 = tt.load %75, %71, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc70)
    %77 = arith.cmpf ogt, %72, %76 : tensor<256xf32, #blocked> loc(#loc106)
    %78 = arith.cmpf une, %72, %72 : tensor<256xf32, #blocked> loc(#loc107)
    %79 = arith.ori %77, %78 : tensor<256xi1, #blocked> loc(#loc108)
    %80 = arith.select %79, %72, %76 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc109)
    %81 = arith.addi %68, %cst_7 : tensor<256xi32, #blocked> loc(#loc76)
    %82 = arith.addi %81, %11 : tensor<256xi32, #blocked> loc(#loc77)
    %83 = tt.addptr %13, %82 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc78)
    %84 = tt.load %83, %71, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc79)
    %85 = arith.cmpf ogt, %80, %84 : tensor<256xf32, #blocked> loc(#loc110)
    %86 = arith.cmpf une, %80, %80 : tensor<256xf32, #blocked> loc(#loc111)
    %87 = arith.ori %85, %86 : tensor<256xi1, #blocked> loc(#loc112)
    %88 = arith.select %87, %80, %84 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc113)
    %89 = arith.addi %68, %cst_8 : tensor<256xi32, #blocked> loc(#loc81)
    %90 = arith.addi %89, %11 : tensor<256xi32, #blocked> loc(#loc82)
    %91 = tt.addptr %13, %90 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc83)
    %92 = tt.load %91, %71, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc84)
    %93 = arith.cmpf ogt, %88, %92 : tensor<256xf32, #blocked> loc(#loc114)
    %94 = arith.cmpf une, %88, %88 : tensor<256xf32, #blocked> loc(#loc115)
    %95 = arith.ori %93, %94 : tensor<256xi1, #blocked> loc(#loc116)
    %96 = arith.select %95, %88, %92 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc117)
    %97 = arith.select %66, %96, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc86)
    %98 = arith.select %43, %65, %97 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc118)
    %99 = arith.select %9, %40, %98 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc119)
    %100 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc91)
    %101 = tt.addptr %100, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc91)
    tt.store %101, %99, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc92)
    tt.return loc(#loc93)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":21:28)
#loc3 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":21:33)
#loc4 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":22:36)
#loc5 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":22:23)
#loc6 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":23:21)
#loc7 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":24:19)
#loc8 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":25:19)
#loc9 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":31:18)
#loc10 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:33)
#loc11 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:42)
#loc12 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:39)
#loc13 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:30)
#loc14 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:54)
#loc15 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":32:47)
#loc16 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":33:34)
#loc17 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":33:43)
#loc18 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":33:30)
#loc19 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":33:51)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc21 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":34:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc25 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":35:34)
#loc26 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":35:43)
#loc27 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":35:30)
#loc28 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":35:51)
#loc29 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":36:40)
#loc30 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":37:35)
#loc31 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":37:44)
#loc32 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":37:31)
#loc33 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":37:52)
#loc34 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":38:41)
#loc35 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":41:20)
#loc36 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":43:19)
#loc37 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":44:20)
#loc38 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:41)
#loc39 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:34)
#loc40 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:47)
#loc41 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:31)
#loc42 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:63)
#loc43 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":45:55)
#loc44 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":46:35)
#loc45 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":46:51)
#loc46 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":46:31)
#loc47 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":46:59)
#loc48 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":47:20)
#loc49 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":48:35)
#loc50 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":48:51)
#loc51 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":48:31)
#loc52 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":48:59)
#loc53 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":49:20)
#loc54 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":50:35)
#loc55 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":50:51)
#loc56 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":50:31)
#loc57 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":50:59)
#loc58 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":51:20)
#loc59 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":53:20)
#loc60 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":56:20)
#loc61 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:41)
#loc62 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:34)
#loc63 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:47)
#loc64 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:31)
#loc65 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:63)
#loc66 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":59:55)
#loc67 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":60:35)
#loc68 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":60:51)
#loc69 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":60:31)
#loc70 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":60:59)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc72 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":61:42)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc76 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":62:35)
#loc77 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":62:51)
#loc78 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":62:31)
#loc79 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":62:59)
#loc80 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":63:42)
#loc81 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":64:35)
#loc82 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":64:51)
#loc83 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":64:31)
#loc84 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":64:59)
#loc85 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":65:42)
#loc86 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":67:35)
#loc87 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":68:35)
#loc88 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":55:35)
#loc89 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":69:34)
#loc90 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":40:34)
#loc91 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":70:25)
#loc92 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":70:37)
#loc93 = loc("inductor_cache/gp/cgp7tatfa5qd5cjcbyx6cztrt6y3sxbi5jvfeldpn56662j2fegp.py":70:4)
#loc94 = loc(callsite(#loc20 at #loc21))
#loc95 = loc(callsite(#loc22 at #loc21))
#loc96 = loc(callsite(#loc23 at #loc21))
#loc97 = loc(callsite(#loc24 at #loc21))
#loc98 = loc(callsite(#loc20 at #loc29))
#loc99 = loc(callsite(#loc22 at #loc29))
#loc100 = loc(callsite(#loc23 at #loc29))
#loc101 = loc(callsite(#loc24 at #loc29))
#loc102 = loc(callsite(#loc20 at #loc34))
#loc103 = loc(callsite(#loc22 at #loc34))
#loc104 = loc(callsite(#loc23 at #loc34))
#loc105 = loc(callsite(#loc24 at #loc34))
#loc106 = loc(callsite(#loc71 at #loc72))
#loc107 = loc(callsite(#loc73 at #loc72))
#loc108 = loc(callsite(#loc74 at #loc72))
#loc109 = loc(callsite(#loc75 at #loc72))
#loc110 = loc(callsite(#loc71 at #loc80))
#loc111 = loc(callsite(#loc73 at #loc80))
#loc112 = loc(callsite(#loc74 at #loc80))
#loc113 = loc(callsite(#loc75 at #loc80))
#loc114 = loc(callsite(#loc71 at #loc85))
#loc115 = loc(callsite(#loc73 at #loc85))
#loc116 = loc(callsite(#loc74 at #loc85))
#loc117 = loc(callsite(#loc75 at #loc85))
#loc118 = loc(fused[#loc87, #loc88])
#loc119 = loc(fused[#loc89, #loc90])
