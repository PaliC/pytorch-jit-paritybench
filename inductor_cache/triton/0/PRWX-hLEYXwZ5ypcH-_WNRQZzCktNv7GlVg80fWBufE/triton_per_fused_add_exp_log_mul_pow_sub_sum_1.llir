; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_exp_log_mul_pow_sub_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i64 %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %9 = icmp slt i32 %8, 4, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = shl i32 %8, 6, !dbg !13
  %13 = or disjoint i32 %12, %11, !dbg !14
  %14 = sext i32 %13 to i64, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !15
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %9, i32 0, i1 %9) #4, !dbg !16
  %17 = or disjoint i32 %13, 32, !dbg !17
  %18 = sext i32 %17 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %9, i32 0, i1 %9) #4, !dbg !19
  %21 = bitcast i32 %20 to float, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %9, i32 0, i1 %9) #4, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = shl i32 %8, 5, !dbg !20
  %25 = or disjoint i32 %24, %11, !dbg !21
  %26 = sext i32 %25 to i64, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !22
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %9, i32 0, i1 %9) #4, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %9, i32 0, i1 %9) #4, !dbg !23
  %30 = fcmp olt float %21, 0.000000e+00, !dbg !24
  %31 = fcmp olt float %23, 0.000000e+00, !dbg !24
  %32 = select i1 %30, float 0.000000e+00, float %21, !dbg !28
  %33 = select i1 %31, float 0.000000e+00, float %23, !dbg !28
  %34 = fmul float %32, 5.000000e-01, !dbg !29
  %35 = fmul float %33, 5.000000e-01, !dbg !29
  %36 = fmul float %34, 0x3FF7154760000000, !dbg !30
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #4, !dbg !30
  %38 = fmul float %35, 0x3FF7154760000000, !dbg !30
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #4, !dbg !30
  %40 = fcmp olt float %37, 0x3810000000000000, !dbg !31
  %41 = fmul float %37, 0x4160000000000000, !dbg !31
  %.02.i = select i1 %40, float %41, float %37, !dbg !31
  %i.i.0.i = select i1 %40, float -2.300000e+01, float 0.000000e+00, !dbg !31
  %42 = bitcast float %.02.i to i32, !dbg !31
  %43 = add i32 %42, -1059760811, !dbg !31
  %44 = and i32 %43, -8388608, !dbg !31
  %45 = sub i32 %42, %44, !dbg !31
  %46 = bitcast i32 %45 to float, !dbg !31
  %47 = sitofp i32 %44 to float, !dbg !31
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not.i = icmp eq i32 %48, 0, !dbg !31
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %47, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !31
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %47, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !31
  %.08.i = select i1 %.not.i, float %50, float %49, !dbg !31
  %51 = fadd float %46, -1.000000e+00, !dbg !31
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not1.i = icmp eq i32 %52, 0, !dbg !31
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %51, float 0x3FC2073EC0000000) #4, !dbg !31
  %54 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %51, float 0x3FC2073EC0000000) #4, !dbg !31
  %.010.i = select i1 %.not1.i, float %54, float %53, !dbg !31
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not2.i = icmp eq i32 %55, 0, !dbg !31
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %51, float 0xBFBF19B980000000) #4, !dbg !31
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %51, float 0xBFBF19B980000000) #4, !dbg !31
  %.011.i = select i1 %.not2.i, float %57, float %56, !dbg !31
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not3.i = icmp eq i32 %58, 0, !dbg !31
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %51, float 0x3FC1E52AA0000000) #4, !dbg !31
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %51, float 0x3FC1E52AA0000000) #4, !dbg !31
  %.012.i = select i1 %.not3.i, float %60, float %59, !dbg !31
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not4.i = icmp eq i32 %61, 0, !dbg !31
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %51, float 0xBFC55B1720000000) #4, !dbg !31
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %51, float 0xBFC55B1720000000) #4, !dbg !31
  %.09.i = select i1 %.not4.i, float %63, float %62, !dbg !31
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not5.i = icmp eq i32 %64, 0, !dbg !31
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %51, float 0x3FC99DA160000000) #4, !dbg !31
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %51, float 0x3FC99DA160000000) #4, !dbg !31
  %.05.i = select i1 %.not5.i, float %66, float %65, !dbg !31
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not6.i = icmp eq i32 %67, 0, !dbg !31
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %51, float 0xBFCFFFE440000000) #4, !dbg !31
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %51, float 0xBFCFFFE440000000) #4, !dbg !31
  %.01.i = select i1 %.not6.i, float %69, float %68, !dbg !31
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not7.i = icmp eq i32 %70, 0, !dbg !31
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %51, float 0x3FD5554F00000000) #4, !dbg !31
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %51, float 0x3FD5554F00000000) #4, !dbg !31
  %.0.i = select i1 %.not7.i, float %72, float %71, !dbg !31
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not8.i = icmp eq i32 %73, 0, !dbg !31
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %51, float -5.000000e-01) #4, !dbg !31
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %51, float -5.000000e-01) #4, !dbg !31
  %.07.i = select i1 %.not8.i, float %75, float %74, !dbg !31
  %76 = fmul float %51, %.07.i, !dbg !31
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not9.i = icmp eq i32 %77, 0, !dbg !31
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %76, float %51, float %51) #4, !dbg !31
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %76, float %51, float %51) #4, !dbg !31
  %.06.i = select i1 %.not9.i, float %79, float %78, !dbg !31
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not10.i = icmp eq i32 %80, 0, !dbg !31
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !31
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !31
  %.04.i = select i1 %.not10.i, float %82, float %81, !dbg !31
  %83 = icmp ugt i32 %42, 2139095039, !dbg !31
  br i1 %83, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !31

__nv_fmaf_rn.exit.i.i:                            ; preds = %7
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not11.i = icmp eq i32 %84, 0, !dbg !31
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !31
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !31
  %.03.i = select i1 %.not11.i, float %86, float %85, !dbg !31
  br label %__nv_logf.exit, !dbg !31

__nv_logf.exit:                                   ; preds = %7, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %7 ], !dbg !31
  %87 = bitcast i32 %16 to float, !dbg !16
  %88 = fcmp olt float %87, 0.000000e+00, !dbg !32
  %89 = select i1 %88, float 0.000000e+00, float %87, !dbg !34
  %90 = bitcast i32 %29 to float, !dbg !23
  %91 = fmul float %39, %90, !dbg !35
  %92 = fadd float %89, %91, !dbg !36
  %93 = bitcast i32 %28 to float, !dbg !23
  %94 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !31
  %r.i.1.i = select i1 %94, float 0xFFF0000000000000, float %r.i.0.i, !dbg !31
  %95 = fmul float %93, %93, !dbg !37
  %96 = fmul float %95, 5.000000e-01, !dbg !38
  %97 = fadd float %96, %r.i.1.i, !dbg !39
  %98 = select i1 %9, float %97, float 0.000000e+00, !dbg !40
  %99 = bitcast float %98 to i32, !dbg !41
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 16, i32 31), !dbg !41
  %101 = bitcast i32 %100 to float, !dbg !41
  %102 = fadd float %98, %101, !dbg !45
  %103 = bitcast float %102 to i32, !dbg !41
  %104 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %103, i32 8, i32 31), !dbg !41
  %105 = bitcast i32 %104 to float, !dbg !41
  %106 = fadd float %102, %105, !dbg !45
  %107 = bitcast float %106 to i32, !dbg !41
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %107, i32 4, i32 31), !dbg !41
  %109 = bitcast i32 %108 to float, !dbg !41
  %110 = fadd float %106, %109, !dbg !45
  %111 = bitcast float %110 to i32, !dbg !41
  %112 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %111, i32 2, i32 31), !dbg !41
  %113 = bitcast i32 %112 to float, !dbg !41
  %114 = fadd float %110, %113, !dbg !45
  %115 = bitcast float %114 to i32, !dbg !41
  %116 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %115, i32 1, i32 31), !dbg !41
  %117 = bitcast i32 %116 to float, !dbg !41
  %118 = fadd float %114, %117, !dbg !45
  %119 = sitofp i64 %3 to float, !dbg !47
  %120 = fmul float %119, -5.000000e-01, !dbg !48
  %121 = fpext float %120 to double, !dbg !49
  %122 = fmul double %121, 0x3FFD67F1C864BEB4, !dbg !50
  %123 = fptrunc double %122 to float, !dbg !51
  %124 = fsub float %123, %118, !dbg !52
  %125 = getelementptr float, ptr addrspace(1) %4, i64 %26, !dbg !53
  %126 = and i32 %10, 32, !dbg !54
  %127 = icmp eq i32 %126, 0, !dbg !54
  %128 = bitcast float %92 to i32, !dbg !54
  %129 = and i1 %127, %9, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %128, ptr addrspace(1) %125, i1 %129) #4, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !55
  %130 = sext i32 %8 to i64, !dbg !56
  %131 = getelementptr float, ptr addrspace(1) %0, i64 %130, !dbg !56
  %urem = and i32 %10, 63, !dbg !57
  %132 = icmp eq i32 %urem, 0, !dbg !57
  %133 = bitcast float %124 to i32, !dbg !57
  %134 = and i1 %132, %9, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %133, ptr addrspace(1) %131, i1 %134) #4, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "carkjyhtjtpbqmllly26eszb2g2o56z3mokryx3ojbqjfctucph2.py", directory: "inductor_cache/ar")
!4 = !{ptr @triton_per_fused_add_exp_log_mul_pow_sub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_exp_log_mul_pow_sub_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_exp_log_mul_pow_sub_sum_1", linkageName: "triton_per_fused_add_exp_log_mul_pow_sub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 40, scope: !7)
!18 = !DILocation(line: 32, column: 30, scope: !7)
!19 = !DILocation(line: 32, column: 48, scope: !7)
!20 = !DILocation(line: 33, column: 38, scope: !7)
!21 = !DILocation(line: 33, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 43, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 37, column: 40, scope: !7)
!28 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 23, scope: !7)
!31 = !DILocation(line: 43, column: 24, scope: !7)
!32 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !33)
!33 = !DILocation(line: 36, column: 40, scope: !7)
!34 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !33)
!35 = !DILocation(line: 41, column: 18, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 44, column: 19, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 46, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 35, scope: !7)
!41 = !DILocation(line: 267, column: 36, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !7, file: !43, discriminator: 0)
!43 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!44 = !DILocation(line: 49, column: 26, scope: !7)
!45 = !DILocation(line: 256, column: 15, scope: !46, inlinedAt: !44)
!46 = distinct !DILexicalBlockFile(scope: !42, file: !43, discriminator: 0)
!47 = !DILocation(line: 50, column: 21, scope: !7)
!48 = !DILocation(line: 52, column: 20, scope: !7)
!49 = !DILocation(line: 53, column: 21, scope: !7)
!50 = !DILocation(line: 55, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 21, scope: !7)
!52 = !DILocation(line: 57, column: 20, scope: !7)
!53 = !DILocation(line: 58, column: 25, scope: !7)
!54 = !DILocation(line: 58, column: 45, scope: !7)
!55 = !DILocation(line: 59, column: 4, scope: !7)
!56 = !DILocation(line: 60, column: 28, scope: !7)
!57 = !DILocation(line: 60, column: 40, scope: !7)
!58 = !DILocation(line: 60, column: 4, scope: !7)
