//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__weight_norm_interface_0 // -- Begin function triton_per_fused__weight_norm_interface_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__weight_norm_interface_0
.visible .entry triton_per_fused__weight_norm_interface_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_0_param_3,
	.param .u32 triton_per_fused__weight_norm_interface_0_param_4,
	.param .u32 triton_per_fused__weight_norm_interface_0_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<90>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_per_fused__weight_norm_interface_0_param_0];
	ld.param.u64 	%rd15, [triton_per_fused__weight_norm_interface_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:23:33
	shl.b32 	%r39, %r1, 5;
	ld.param.u64 	%rd16, [triton_per_fused__weight_norm_interface_0_param_2];
	ld.param.u64 	%rd17, [triton_per_fused__weight_norm_interface_0_param_3];
	.loc	1 24 44                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:24:44
	mov.u32 	%r40, %tid.x;
	bfe.u32 	%r41, %r40, 4, 3;
	and.b32  	%r42, %r40, 15;
	and.b32  	%r43, %r40, 31;
	.loc	1 24 23                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:24:23
	or.b32  	%r44, %r39, %r41;
	or.b32  	%r45, %r44, 8;
	or.b32  	%r46, %r44, 16;
	or.b32  	%r47, %r44, 24;
	.loc	1 25 21                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:25:21
	setp.lt.s32 	%p9, %r44, 128;
	setp.lt.s32 	%p10, %r45, 128;
	setp.lt.s32 	%p11, %r46, 128;
	setp.lt.s32 	%p12, %r47, 128;
	.loc	1 28 21                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:28:21
	setp.ne.s32 	%p22, %r42, 15;
	.loc	1 31 35                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:31:35
	mad.lo.s32 	%r48, %r44, 15, %r42;
	mad.lo.s32 	%r49, %r45, 15, %r42;
	mad.lo.s32 	%r50, %r46, 15, %r42;
	mad.lo.s32 	%r51, %r47, 15, %r42;
	.loc	1 31 30                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:31:30
	mul.wide.s32 	%rd18, %r48, 4;
	add.s64 	%rd1, %rd15, %rd18;
	mul.wide.s32 	%rd19, %r49, 4;
	add.s64 	%rd2, %rd15, %rd19;
	mul.wide.s32 	%rd20, %r50, 4;
	add.s64 	%rd3, %rd15, %rd20;
	mul.wide.s32 	%rd21, %r51, 4;
	add.s64 	%rd4, %rd15, %rd21;
	.loc	1 31 51                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:31:51
	and.pred  	%p1, %p22, %p9;
	and.pred  	%p3, %p22, %p10;
	and.pred  	%p5, %p22, %p11;
	and.pred  	%p7, %p22, %p12;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 32 30                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:32:30
	mul.wide.s32 	%rd22, %r44, 4;
	add.s64 	%rd5, %rd16, %rd22;
	cvt.s64.s32 	%rd23, %r39;
	cvt.u64.u32 	%rd24, %r41;
	or.b64  	%rd25, %rd23, %rd24;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd27, %rd16, %rd26;
	add.s64 	%rd6, %rd27, 32;
	add.s64 	%rd7, %rd27, 64;
	add.s64 	%rd8, %rd27, 96;
	.loc	1 32 35                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:32:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r23 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r26 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r29 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r32 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 18                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:33:18
	mul.f32 	%f5, %f1, %f1;
	mul.f32 	%f6, %f2, %f2;
	mul.f32 	%f7, %f3, %f3;
	mul.f32 	%f8, %f4, %f4;
	.loc	1 35 41                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:35:41
	selp.f32 	%f9, %f5, 0f00000000, %p1;
	selp.f32 	%f10, %f6, 0f00000000, %p3;
	selp.f32 	%f11, %f7, 0f00000000, %p5;
	selp.f32 	%f12, %f8, 0f00000000, %p7;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f9;
	shfl.sync.bfly.b32	%r53, %r52, 8, 31, -1;
	mov.b32 	%f13, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f9, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f14;
	shfl.sync.bfly.b32	%r55, %r54, 4, 31, -1;
	mov.b32 	%f15, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f16;
	shfl.sync.bfly.b32	%r57, %r56, 2, 31, -1;
	mov.b32 	%f17, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f18;
	shfl.sync.bfly.b32	%r59, %r58, 1, 31, -1;
	mov.b32 	%f19, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f10;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f21, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f10, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f22;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f23, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f24;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f25, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f26;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f27, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f11;
	shfl.sync.bfly.b32	%r69, %r68, 8, 31, -1;
	mov.b32 	%f29, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f11, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f30;
	shfl.sync.bfly.b32	%r71, %r70, 4, 31, -1;
	mov.b32 	%f31, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f32;
	shfl.sync.bfly.b32	%r73, %r72, 2, 31, -1;
	mov.b32 	%f33, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f34;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	mov.b32 	%f35, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f12;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f37, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f12, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f38;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f39, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f40;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f41, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f42;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f43, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
$L__tmp2:
	.loc	1 37 26                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:37:26
	shl.b32 	%r84, %r41, 2;
	mov.u32 	%r85, global_smem;
	add.s32 	%r14, %r85, %r84;
	mov.b32 	%r15, %f20;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r14, 32;
	mov.b32 	%r17, %f28;
	// begin inline asm
	@%p13 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	add.s32 	%r18, %r14, 64;
	mov.b32 	%r19, %f36;
	// begin inline asm
	@%p13 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r14, 96;
	mov.b32 	%r21, %f44;
	// begin inline asm
	@%p13 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r86, %r43, 2;
	add.s32 	%r87, %r85, %r86;
	ld.shared.f32 	%f45, [%r87];
	sqrt.approx.ftz.f32 	%f46, %f45;
	sqrt.approx.ftz.f32 	%f47, %f20;
	sqrt.approx.ftz.f32 	%f48, %f28;
	sqrt.approx.ftz.f32 	%f49, %f36;
	sqrt.approx.ftz.f32 	%f50, %f44;
	.loc	1 24 23                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:24:23
	or.b32  	%r88, %r39, %r43;
	.loc	1 25 21                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:25:21
	setp.lt.s32 	%p23, %r88, 128;
	.loc	1 38 18                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:38:18
	mov.b32 	%r24, %f47;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f51, %r22;
	mov.b32 	%r27, %f48;
	// begin inline asm
	div.full.f32 %r25, %r26, %r27;
	// end inline asm
	mov.b32 	%f52, %r25;
	mov.b32 	%r30, %f49;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f53, %r28;
	mov.b32 	%r33, %f50;
	// begin inline asm
	div.full.f32 %r31, %r32, %r33;
	// end inline asm
	mov.b32 	%f54, %r31;
	.loc	1 39 18                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:39:18
	mul.f32 	%f55, %f51, %f1;
	mul.f32 	%f56, %f52, %f2;
	mul.f32 	%f57, %f53, %f3;
	mul.f32 	%f58, %f54, %f4;
	.loc	1 40 4                          // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:40:4
	bar.sync 	0;
	.loc	1 41 28                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:41:28
	mul.wide.s32 	%rd28, %r88, 4;
	add.s64 	%rd9, %rd14, %rd28;
	.loc	1 41 39                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:41:39
	and.b32  	%r89, %r40, 96;
	setp.eq.s32 	%p24, %r89, 0;
	mov.b32 	%r34, %f46;
	and.pred  	%p17, %p24, %p23;
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r34 };
	// end inline asm
	.loc	1 42 25                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:42:25
	add.s64 	%rd10, %rd17, %rd18;
	add.s64 	%rd11, %rd17, %rd19;
	add.s64 	%rd12, %rd17, %rd20;
	add.s64 	%rd13, %rd17, %rd21;
	.loc	1 42 44                         // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:42:44
	mov.b32 	%r35, %f55;
	// begin inline asm
	@%p1 st.global.b32 [ %rd10 + 0 ], { %r35 };
	// end inline asm
	mov.b32 	%r36, %f56;
	// begin inline asm
	@%p3 st.global.b32 [ %rd11 + 0 ], { %r36 };
	// end inline asm
	mov.b32 	%r37, %f57;
	// begin inline asm
	@%p5 st.global.b32 [ %rd12 + 0 ], { %r37 };
	// end inline asm
	mov.b32 	%r38, %f58;
	// begin inline asm
	@%p7 st.global.b32 [ %rd13 + 0 ], { %r38 };
	// end inline asm
	.loc	1 42 4                          // cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py:42:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/z3/cz3z234fjtvgi6rocfmtfzhkseczfncbhgeh7qky3evfj2pin7gh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 186                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 51
.b8 122
.b8 50
.b8 51
.b8 52
.b8 102
.b8 106
.b8 116
.b8 118
.b8 103
.b8 105
.b8 54
.b8 114
.b8 111
.b8 99
.b8 102
.b8 109
.b8 116
.b8 102
.b8 122
.b8 104
.b8 107
.b8 115
.b8 101
.b8 99
.b8 122
.b8 102
.b8 110
.b8 99
.b8 98
.b8 104
.b8 103
.b8 101
.b8 104
.b8 55
.b8 113
.b8 107
.b8 121
.b8 51
.b8 101
.b8 118
.b8 102
.b8 106
.b8 50
.b8 112
.b8 105
.b8 110
.b8 55
.b8 103
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
