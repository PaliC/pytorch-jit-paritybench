; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_gelu_8(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = sext i32 %8 to i64, !dbg !14
  %10 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !14
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !15
  %12 = bitcast i32 %11 to float, !dbg !15
  %13 = fmul float %12, 0x3FE6A09E60000000, !dbg !16
  %14 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not.i = icmp eq i32 %14, 0, !dbg !17
  %15 = tail call float @llvm.nvvm.fabs.ftz.f(float %13) #3, !dbg !17
  %16 = tail call float @llvm.nvvm.fabs.f(float %13) #3, !dbg !17
  %.0.i = select i1 %.not.i, float %16, float %15, !dbg !17
  %17 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !17
  br i1 %17, label %__nv_fabsf.exit1.i, label %19, !dbg !17

__nv_fabsf.exit1.i:                               ; preds = %3
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not1.i = icmp eq i32 %18, 0, !dbg !17
  %.01.i = select i1 %.not1.i, float %16, float %15, !dbg !17
  br label %__internal_fmad.exit.i, !dbg !17

19:                                               ; preds = %3
  %20 = fmul float %13, %13, !dbg !17
  br label %__internal_fmad.exit.i, !dbg !17

__internal_fmad.exit.i:                           ; preds = %19, %__nv_fabsf.exit1.i
  %21 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %19 ], !dbg !17
  %22 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %19 ], !dbg !17
  %23 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %19 ], !dbg !17
  %24 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %19 ], !dbg !17
  %25 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %19 ], !dbg !17
  %26 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %19 ], !dbg !17
  %27 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %19 ], !dbg !17
  %28 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %20, %19 ], !dbg !17
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not2.i = icmp eq i32 %29, 0, !dbg !17
  %30 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float %28, float %26) #3, !dbg !17
  %31 = tail call float @llvm.nvvm.fma.rn.f(float %27, float %28, float %26) #3, !dbg !17
  %.02.i = select i1 %.not2.i, float %31, float %30, !dbg !17
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not3.i = icmp eq i32 %32, 0, !dbg !17
  %33 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %28, float %25) #3, !dbg !17
  %34 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %28, float %25) #3, !dbg !17
  %.03.i = select i1 %.not3.i, float %34, float %33, !dbg !17
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not4.i = icmp eq i32 %35, 0, !dbg !17
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %28, float %24) #3, !dbg !17
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %28, float %24) #3, !dbg !17
  %.04.i = select i1 %.not4.i, float %37, float %36, !dbg !17
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not5.i = icmp eq i32 %38, 0, !dbg !17
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %28, float %23) #3, !dbg !17
  %40 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %28, float %23) #3, !dbg !17
  %.05.i = select i1 %.not5.i, float %40, float %39, !dbg !17
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not6.i = icmp eq i32 %41, 0, !dbg !17
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %28, float %22) #3, !dbg !17
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %28, float %22) #3, !dbg !17
  %.06.i = select i1 %.not6.i, float %43, float %42, !dbg !17
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not7.i = icmp eq i32 %44, 0, !dbg !17
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %28, float %21) #3, !dbg !17
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %28, float %21) #3, !dbg !17
  %.07.i = select i1 %.not7.i, float %46, float %45, !dbg !17
  %47 = fneg float %28, !dbg !17
  %48 = select i1 %17, float %47, float %13, !dbg !17
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not8.i = icmp eq i32 %49, 0, !dbg !17
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %48, float %48) #3, !dbg !17
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %48, float %48) #3, !dbg !17
  %.08.i = select i1 %.not8.i, float %51, float %50, !dbg !17
  br i1 %17, label %52, label %__nv_erff.exit, !dbg !17

52:                                               ; preds = %__internal_fmad.exit.i
  %53 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !17
  %54 = fsub float 1.000000e+00, %53, !dbg !17
  %55 = bitcast float %54 to i32, !dbg !17
  %56 = bitcast float %13 to i32, !dbg !17
  %57 = and i32 %56, -2147483648, !dbg !17
  %58 = or i32 %57, %55, !dbg !17
  %59 = bitcast i32 %58 to float, !dbg !17
  br label %__nv_erff.exit, !dbg !17

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %52
  %r.0.i = phi float [ %59, %52 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !17
  %60 = fmul float %12, 5.000000e-01, !dbg !18
  %61 = fadd float %r.0.i, 1.000000e+00, !dbg !19
  %62 = fmul float %60, %61, !dbg !20
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !21
  %64 = bitcast float %62 to i32, !dbg !22
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %64, ptr addrspace(1) %63, i1 true) #3, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4lvnsdhk5xbzqg6agtcnxbs7z5h5qqkat3y4lhkmpi6o4vw23kf.py", directory: "inductor_cache/4l")
!4 = !{ptr @triton_poi_fused_gelu_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_gelu_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_gelu_8", linkageName: "triton_poi_fused_gelu_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 29, column: 18, scope: !7)
!17 = !DILocation(line: 30, column: 25, scope: !7)
!18 = !DILocation(line: 27, column: 18, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 25, scope: !7)
!22 = !DILocation(line: 34, column: 36, scope: !7)
!23 = !DILocation(line: 34, column: 4, scope: !7)
