; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mul_pow_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 53824, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 13456, !dbg !15
  %17 = mul i32 %16, 13456, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %.frozen1 = freeze i32 %14, !dbg !17
  %18 = sdiv i32 %.frozen1, 3364, !dbg !17
  %19 = mul i32 %18, 3364, !dbg !18
  %.decomposed2 = sub i32 %.frozen1, %19, !dbg !18
  %20 = sext i32 %.decomposed to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %15) #1, !dbg !20
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !20
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !20
  %25 = bitcast i32 %23 to float, !dbg !20
  %26 = bitcast i32 %24 to float, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !21
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %15) #1, !dbg !22
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !22
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !22
  %31 = bitcast i32 %29 to float, !dbg !22
  %32 = bitcast i32 %30 to float, !dbg !22
  %33 = sext i32 %16 to i64, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !23
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %15) #1, !dbg !24
  %36 = bitcast i32 %35 to float, !dbg !24
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %15) #1, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !25
  %40 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 %15) #1, !dbg !26
  %41 = extractvalue { i32, i32 } %40, 0, !dbg !26
  %42 = extractvalue { i32, i32 } %40, 1, !dbg !26
  %43 = bitcast i32 %41 to float, !dbg !26
  %44 = bitcast i32 %42 to float, !dbg !26
  %45 = getelementptr float, ptr addrspace(1) %4, i64 %20, !dbg !27
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %45, i1 %15) #1, !dbg !28
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !28
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !28
  %49 = bitcast i32 %47 to float, !dbg !28
  %50 = bitcast i32 %48 to float, !dbg !28
  %51 = getelementptr float, ptr addrspace(1) %5, i64 %20, !dbg !29
  %52 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %51, i1 %15) #1, !dbg !30
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !30
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !30
  %55 = bitcast i32 %53 to float, !dbg !30
  %56 = bitcast i32 %54 to float, !dbg !30
  %57 = fmul float %25, 2.000000e+00, !dbg !31
  %58 = fmul float %26, 2.000000e+00, !dbg !31
  %59 = fmul float %57, %31, !dbg !32
  %60 = fmul float %58, %32, !dbg !32
  %61 = fmul float %36, 1.000000e+05, !dbg !33
  %62 = fmul float %38, 1.000000e+05, !dbg !33
  %63 = fmul float %61, 0x3F847AE140000000, !dbg !34
  %64 = fmul float %62, 0x3F847AE140000000, !dbg !34
  %65 = fmul float %63, %63, !dbg !35
  %66 = fmul float %64, %64, !dbg !35
  %67 = fadd float %59, %65, !dbg !36
  %68 = fadd float %60, %66, !dbg !36
  %69 = fmul float %25, %31, !dbg !37
  %70 = fmul float %26, %32, !dbg !37
  %71 = fsub float %43, %69, !dbg !38
  %72 = fsub float %44, %70, !dbg !38
  %73 = fmul float %71, 0x3FF0555560000000, !dbg !39
  %74 = fmul float %72, 0x3FF0555560000000, !dbg !39
  %75 = fmul float %73, 2.000000e+00, !dbg !40
  %76 = fmul float %74, 2.000000e+00, !dbg !40
  %77 = fmul float %61, 0x3F9EB851E0000000, !dbg !41
  %78 = fmul float %62, 0x3F9EB851E0000000, !dbg !41
  %79 = fmul float %77, %77, !dbg !42
  %80 = fmul float %78, %78, !dbg !42
  %81 = fadd float %79, %75, !dbg !43
  %82 = fadd float %80, %76, !dbg !43
  %83 = fmul float %67, %81, !dbg !44
  %84 = fmul float %68, %82, !dbg !44
  %85 = fmul float %25, %25, !dbg !45
  %86 = fmul float %26, %26, !dbg !45
  %87 = fmul float %31, %31, !dbg !46
  %88 = fmul float %32, %32, !dbg !46
  %89 = fadd float %85, %87, !dbg !47
  %90 = fadd float %86, %88, !dbg !47
  %91 = fadd float %89, %65, !dbg !48
  %92 = fadd float %90, %66, !dbg !48
  %93 = fsub float %49, %85, !dbg !49
  %94 = fsub float %50, %86, !dbg !49
  %95 = fmul float %93, 0x3FF0555560000000, !dbg !50
  %96 = fmul float %94, 0x3FF0555560000000, !dbg !50
  %97 = fsub float %55, %87, !dbg !51
  %98 = fsub float %56, %88, !dbg !51
  %99 = fmul float %97, 0x3FF0555560000000, !dbg !52
  %100 = fmul float %98, 0x3FF0555560000000, !dbg !52
  %101 = fadd float %95, %99, !dbg !53
  %102 = fadd float %96, %100, !dbg !53
  %103 = fadd float %79, %101, !dbg !54
  %104 = fadd float %80, %102, !dbg !54
  %105 = fmul float %91, %103, !dbg !55
  %106 = fmul float %92, %104, !dbg !55
  %107 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %83, float %105) #1, !dbg !56
  %108 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %84, float %106) #1, !dbg !56
  %109 = mul i32 %18, 3392, !dbg !57
  %110 = add i32 %109, %.decomposed2, !dbg !58
  %111 = sext i32 %110 to i64, !dbg !59
  %112 = getelementptr float, ptr addrspace(1) %6, i64 %111, !dbg !59
  %113 = bitcast float %107 to i32, !dbg !60
  %114 = bitcast float %108 to i32, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %113, i32 %114, ptr addrspace(1) %112, i1 %15) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgnjqnsbz6nzyay7etnty7wtvg3vqzdhmabswnlwkmvidd5gbvre.py", directory: "inductor_cache/gn")
!4 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mul_pow_sub_1", linkageName: "triton_poi_fused_add_div_mul_pow_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 36, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 38, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 18, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 19, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 46, column: 20, scope: !7)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 49, column: 19, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 20, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 19, scope: !7)
!46 = !DILocation(line: 54, column: 19, scope: !7)
!47 = !DILocation(line: 55, column: 20, scope: !7)
!48 = !DILocation(line: 56, column: 20, scope: !7)
!49 = !DILocation(line: 57, column: 20, scope: !7)
!50 = !DILocation(line: 58, column: 20, scope: !7)
!51 = !DILocation(line: 59, column: 20, scope: !7)
!52 = !DILocation(line: 60, column: 20, scope: !7)
!53 = !DILocation(line: 61, column: 20, scope: !7)
!54 = !DILocation(line: 62, column: 20, scope: !7)
!55 = !DILocation(line: 63, column: 20, scope: !7)
!56 = !DILocation(line: 64, column: 20, scope: !7)
!57 = !DILocation(line: 65, column: 35, scope: !7)
!58 = !DILocation(line: 65, column: 30, scope: !7)
!59 = !DILocation(line: 65, column: 25, scope: !7)
!60 = !DILocation(line: 65, column: 47, scope: !7)
!61 = !DILocation(line: 65, column: 4, scope: !7)
