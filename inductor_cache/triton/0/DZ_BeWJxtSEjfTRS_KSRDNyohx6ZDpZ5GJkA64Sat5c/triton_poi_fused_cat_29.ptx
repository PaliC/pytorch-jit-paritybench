//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_29 // -- Begin function triton_poi_fused_cat_29
                                        // @triton_poi_fused_cat_29
.visible .entry triton_poi_fused_cat_29(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_29_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_29_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_29_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_29_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_29_param_4,
	.param .u32 triton_poi_fused_cat_29_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<77>;
	.reg .f32 	%f<82>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_cat_29_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_cat_29_param_1];
$L__tmp0:
	.loc	1 21 28                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:21:33
	shl.b32 	%r62, %r1, 9;
	ld.param.u64 	%rd8, [triton_poi_fused_cat_29_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_29_param_3];
	.loc	1 22 36                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:22:36
	mov.u32 	%r63, %tid.x;
	shl.b32 	%r64, %r63, 2;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_29_param_4];
	and.b32  	%r65, %r64, 508;
	.loc	1 22 23                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:22:23
	or.b32  	%r66, %r62, %r65;
	.loc	1 25 19                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:25:19
	shr.s32 	%r68, %r66, 31;
	shr.u32 	%r69, %r68, 22;
	add.s32 	%r70, %r66, %r69;
	shr.s32 	%r71, %r70, 10;
	.loc	1 24 19                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:24:19
	and.b32  	%r72, %r70, -1024;
	sub.s32 	%r73, %r66, %r72;
	.loc	1 31 18                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:31:18
	setp.lt.s32 	%p1, %r73, 256;
	.loc	1 32 34                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:32:34
	shl.b32 	%r74, %r71, 8;
	.loc	1 32 40                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:32:40
	add.s32 	%r75, %r74, %r73;
	.loc	1 32 30                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:32:30
	mul.wide.s32 	%rd11, %r75, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.b32 	%r6, 0;
	.loc	1 32 46                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:32:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	mov.f32 	%f21, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f22, %f21, %f17;
	sub.f32 	%f23, %f21, %f18;
	sub.f32 	%f24, %f21, %f19;
	sub.f32 	%f25, %f21, %f20;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f23, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f24, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f25, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f1, 0f3F800000;
	add.f32 	%f27, %f3, 0f3F800000;
	add.f32 	%f28, %f5, 0f3F800000;
	add.f32 	%f29, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r12, %f26;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f30, %r10;
	mov.b32 	%r15, %f27;
	// begin inline asm
	div.full.f32 %r13, %r11, %r15;
	// end inline asm
	mov.b32 	%f31, %r13;
	mov.b32 	%r18, %f28;
	// begin inline asm
	div.full.f32 %r16, %r11, %r18;
	// end inline asm
	mov.b32 	%f32, %r16;
	mov.b32 	%r21, %f29;
	// begin inline asm
	div.full.f32 %r19, %r11, %r21;
	// end inline asm
	mov.b32 	%f33, %r19;
$L__tmp2:
	.loc	1 34 18                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:34:18
	mul.f32 	%f34, %f30, %f17;
	mul.f32 	%f35, %f31, %f18;
	mul.f32 	%f36, %f32, %f19;
	mul.f32 	%f37, %f33, %f20;
	.loc	1 40 20                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:40:20
	and.b32  	%r76, %r73, -256;
	setp.eq.s32 	%p6, %r76, 256;
	.loc	1 41 31                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:41:31
	add.s64 	%rd12, %rd7, %rd11;
	add.s64 	%rd2, %rd12, -1024;
	.loc	1 41 56                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:41:56
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r22, %r6;
	@!%p6 mov.u32 %r23, %r6;
	@!%p6 mov.u32 %r24, %r6;
	@!%p6 mov.u32 %r25, %r6;
	// end inline asm
	mov.b32 	%f38, %r22;
	mov.b32 	%f39, %r23;
	mov.b32 	%f40, %r24;
	mov.b32 	%f41, %r25;
	.loc	1 45 20                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:45:20
	setp.eq.s32 	%p11, %r76, 512;
	.loc	1 46 31                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:46:31
	add.s64 	%rd13, %rd8, %rd11;
	add.s64 	%rd3, %rd13, -2048;
	.loc	1 46 56                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:46:56
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r30, %r6;
	@!%p11 mov.u32 %r31, %r6;
	@!%p11 mov.u32 %r32, %r6;
	@!%p11 mov.u32 %r33, %r6;
	// end inline asm
	mov.b32 	%f42, %r30;
	mov.b32 	%f43, %r31;
	mov.b32 	%f44, %r32;
	mov.b32 	%f45, %r33;
	.loc	1 47 20                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:47:20
	setp.gt.s32 	%p16, %r73, 767;
	.loc	1 50 31                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:50:31
	add.s64 	%rd14, %rd9, %rd11;
	add.s64 	%rd4, %rd14, -3072;
	.loc	1 50 56                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:50:56
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p16 ld.global.L1::evict_last.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r38, %r6;
	@!%p16 mov.u32 %r39, %r6;
	@!%p16 mov.u32 %r40, %r6;
	@!%p16 mov.u32 %r41, %r6;
	// end inline asm
	mov.b32 	%f46, %r38;
	mov.b32 	%f47, %r39;
	mov.b32 	%f48, %r40;
	mov.b32 	%f49, %r41;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f50, %f21, %f46;
	sub.f32 	%f51, %f21, %f47;
	sub.f32 	%f52, %f21, %f48;
	sub.f32 	%f53, %f21, %f49;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f10, %f50, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f51, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f52, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f53, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f54, %f9, 0f3F800000;
	add.f32 	%f55, %f11, 0f3F800000;
	add.f32 	%f56, %f13, 0f3F800000;
	add.f32 	%f57, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r48, %f54;
	// begin inline asm
	div.full.f32 %r46, %r11, %r48;
	// end inline asm
	mov.b32 	%f58, %r46;
	mov.b32 	%r51, %f55;
	// begin inline asm
	div.full.f32 %r49, %r11, %r51;
	// end inline asm
	mov.b32 	%f59, %r49;
	mov.b32 	%r54, %f56;
	// begin inline asm
	div.full.f32 %r52, %r11, %r54;
	// end inline asm
	mov.b32 	%f60, %r52;
	mov.b32 	%r57, %f57;
	// begin inline asm
	div.full.f32 %r55, %r11, %r57;
	// end inline asm
	mov.b32 	%f61, %r55;
$L__tmp4:
	.loc	1 52 20                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:52:20
	mul.f32 	%f62, %f58, %f46;
	mul.f32 	%f63, %f59, %f47;
	mul.f32 	%f64, %f60, %f48;
	mul.f32 	%f65, %f61, %f49;
	.loc	1 54 35                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:54:35
	selp.f32 	%f66, %f62, 0f00000000, %p16;
	selp.f32 	%f67, %f63, 0f00000000, %p16;
	selp.f32 	%f68, %f64, 0f00000000, %p16;
	selp.f32 	%f69, %f65, 0f00000000, %p16;
	.loc	1 55 35                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:55:35
	selp.f32 	%f70, %f42, %f66, %p11;
	selp.f32 	%f71, %f43, %f67, %p11;
	selp.f32 	%f72, %f44, %f68, %p11;
	selp.f32 	%f73, %f45, %f69, %p11;
	.loc	1 56 35                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:56:35
	selp.f32 	%f74, %f38, %f70, %p6;
	selp.f32 	%f75, %f39, %f71, %p6;
	selp.f32 	%f76, %f40, %f72, %p6;
	selp.f32 	%f77, %f41, %f73, %p6;
	.loc	1 0 0                           // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:0:0
	selp.f32 	%f78, %f34, %f74, %p1;
	selp.f32 	%f79, %f35, %f75, %p1;
	selp.f32 	%f80, %f36, %f76, %p1;
	selp.f32 	%f81, %f37, %f77, %p1;
	.loc	1 58 25                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:58:25
	mul.wide.s32 	%rd15, %r66, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 58 37                         // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:58:37
	mov.b32 	%r58, %f78;
	mov.b32 	%r59, %f79;
	mov.b32 	%r60, %f80;
	mov.b32 	%r61, %f81;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd5 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	.loc	1 58 4                          // cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py:58:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/j7/cj7b7dwkvox6vc3ckl4p25too4c7ueyvkqgnbz5ap6gh4jn2u7ly.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 192                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 55
.b8 98
.b8 55
.b8 100
.b8 119
.b8 107
.b8 118
.b8 111
.b8 120
.b8 54
.b8 118
.b8 99
.b8 51
.b8 99
.b8 107
.b8 108
.b8 52
.b8 112
.b8 50
.b8 53
.b8 116
.b8 111
.b8 111
.b8 52
.b8 99
.b8 55
.b8 117
.b8 101
.b8 121
.b8 118
.b8 107
.b8 113
.b8 103
.b8 110
.b8 98
.b8 122
.b8 53
.b8 97
.b8 112
.b8 54
.b8 103
.b8 104
.b8 52
.b8 106
.b8 110
.b8 50
.b8 117
.b8 55
.b8 108
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 50
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
