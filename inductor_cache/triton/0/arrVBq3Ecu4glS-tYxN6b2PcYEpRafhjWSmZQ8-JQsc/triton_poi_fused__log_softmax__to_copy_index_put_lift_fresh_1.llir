; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 16, !dbg !12
  %10 = and i32 %8, 15, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 4, !dbg !15
  %14 = mul i32 %13, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sext i32 %13 to i64, !dbg !17
  %16 = getelementptr i64, ptr addrspace(1) %0, i64 %15, !dbg !17
  %17 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %16, i1 %12) #1, !dbg !18
  %18 = sext i32 %11 to i64, !dbg !19
  %19 = getelementptr i64, ptr addrspace(1) %1, i64 %18, !dbg !19
  %20 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 %12) #1, !dbg !20
  %21 = shl nsw i32 %13, 2, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr i64, ptr addrspace(1) %1, i64 %22, !dbg !22
  %24 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %23, i1 %12) #1, !dbg !23
  %25 = or disjoint i32 %21, 1, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr i64, ptr addrspace(1) %1, i64 %26, !dbg !25
  %28 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %27, i1 %12) #1, !dbg !26
  %29 = or disjoint i32 %21, 2, !dbg !27
  %30 = sext i32 %29 to i64, !dbg !28
  %31 = getelementptr i64, ptr addrspace(1) %1, i64 %30, !dbg !28
  %32 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 %12) #1, !dbg !29
  %33 = or disjoint i32 %21, 3, !dbg !30
  %34 = sext i32 %33 to i64, !dbg !31
  %35 = getelementptr i64, ptr addrspace(1) %1, i64 %34, !dbg !31
  %36 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %35, i1 %12) #1, !dbg !32
  %37 = sext i32 %.decomposed to i64, !dbg !33
  %38 = icmp eq i64 %17, %37, !dbg !33
  %39 = sitofp i64 %20 to float, !dbg !34
  %40 = sitofp i64 %24 to float, !dbg !35
  %41 = sitofp i64 %28 to float, !dbg !36
  %42 = fcmp ogt float %40, %41, !dbg !37
  %43 = select i1 %42, float %40, float %41, !dbg !41
  %44 = sitofp i64 %32 to float, !dbg !42
  %45 = fcmp ogt float %43, %44, !dbg !43
  %46 = select i1 %45, float %43, float %44, !dbg !45
  %47 = sitofp i64 %36 to float, !dbg !46
  %48 = fcmp ogt float %46, %47, !dbg !47
  %49 = select i1 %48, float %46, float %47, !dbg !49
  %50 = fsub float %39, %49, !dbg !50
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !51
  %52 = icmp eq i32 %9, 0, !dbg !52
  %53 = bitcast float %39 to i32, !dbg !52
  %54 = select i1 %38, i32 -915135488, i32 %53, !dbg !53
  %55 = and i1 %52, %12, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %51, i1 %55) #1, !dbg !52
  %56 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !54
  %57 = bitcast float %50 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %57, ptr addrspace(1) %56, i1 %55) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqgybhcejvn5ygkdk7vp5h4i5lm32acthwagjjvxytagt6qfqpex.py", directory: "inductor_cache/qg")
!4 = !{ptr @triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1", linkageName: "triton_poi_fused__log_softmax__to_copy_index_put_lift_fresh_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 33, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 38, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 42, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 31, column: 31, scope: !7)
!29 = !DILocation(line: 31, column: 42, scope: !7)
!30 = !DILocation(line: 32, column: 35, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 42, scope: !7)
!33 = !DILocation(line: 34, column: 19, scope: !7)
!34 = !DILocation(line: 39, column: 19, scope: !7)
!35 = !DILocation(line: 42, column: 21, scope: !7)
!36 = !DILocation(line: 43, column: 21, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 44, column: 42, scope: !7)
!41 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 45, column: 21, scope: !7)
!43 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !44)
!44 = !DILocation(line: 46, column: 42, scope: !7)
!45 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !44)
!46 = !DILocation(line: 47, column: 21, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !48)
!48 = !DILocation(line: 48, column: 42, scope: !7)
!49 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !48)
!50 = !DILocation(line: 49, column: 19, scope: !7)
!51 = !DILocation(line: 50, column: 25, scope: !7)
!52 = !DILocation(line: 50, column: 37, scope: !7)
!53 = !DILocation(line: 41, column: 33, scope: !7)
!54 = !DILocation(line: 51, column: 25, scope: !7)
!55 = !DILocation(line: 51, column: 37, scope: !7)
!56 = !DILocation(line: 51, column: 4, scope: !7)
