; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_div_erf_mul_native_layer_norm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %8 = shl i32 %7, 5, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = lshr i32 %9, 1, !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 64, !dbg !14
  %14 = shl i32 %9, 2, !dbg !15
  %15 = and i32 %14, 4, !dbg !15
  %16 = shl i32 %12, 3, !dbg !16
  %17 = or disjoint i32 %16, %15, !dbg !17
  %18 = sext i32 %17 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %19, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13) #4, !dbg !19
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !19
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !19
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !19
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !19
  %25 = bitcast i32 %21 to float, !dbg !19
  %26 = bitcast i32 %22 to float, !dbg !19
  %27 = bitcast i32 %23 to float, !dbg !19
  %28 = bitcast i32 %24 to float, !dbg !19
  %29 = zext nneg i32 %15 to i64, !dbg !20
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !20
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %30, i1 true) #4, !dbg !21
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %29, !dbg !22
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %32, i1 true) #4, !dbg !23
  %34 = fmul float %25, 5.000000e-01, !dbg !24
  %35 = fmul float %26, 5.000000e-01, !dbg !24
  %36 = fmul float %27, 5.000000e-01, !dbg !24
  %37 = fmul float %28, 5.000000e-01, !dbg !24
  %38 = fmul float %25, 0x3FE6A09E60000000, !dbg !25
  %39 = fmul float %26, 0x3FE6A09E60000000, !dbg !25
  %40 = fmul float %27, 0x3FE6A09E60000000, !dbg !25
  %41 = fmul float %28, 0x3FE6A09E60000000, !dbg !25
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i10 = icmp eq i32 %42, 0, !dbg !26
  %43 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #4, !dbg !26
  %44 = tail call float @llvm.nvvm.fabs.f(float %38) #4, !dbg !26
  %.0.i11 = select i1 %.not.i10, float %44, float %43, !dbg !26
  %45 = fcmp oge float %.0.i11, 0x3FF00C1FC0000000, !dbg !26
  br i1 %45, label %__nv_fabsf.exit1.i, label %47, !dbg !26

__nv_fabsf.exit1.i:                               ; preds = %6
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %46, 0, !dbg !26
  %.01.i = select i1 %.not1.i, float %44, float %43, !dbg !26
  br label %__internal_fmad.exit.i, !dbg !26

47:                                               ; preds = %6
  %48 = fmul float %38, %38, !dbg !26
  br label %__internal_fmad.exit.i, !dbg !26

__internal_fmad.exit.i:                           ; preds = %47, %__nv_fabsf.exit1.i
  %49 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %47 ], !dbg !26
  %50 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %47 ], !dbg !26
  %51 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %47 ], !dbg !26
  %52 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %47 ], !dbg !26
  %53 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %47 ], !dbg !26
  %54 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %47 ], !dbg !26
  %55 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %47 ], !dbg !26
  %56 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %48, %47 ], !dbg !26
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %57, 0, !dbg !26
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float %56, float %54) #4, !dbg !26
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %55, float %56, float %54) #4, !dbg !26
  %.02.i = select i1 %.not2.i, float %59, float %58, !dbg !26
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %60, 0, !dbg !26
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %56, float %53) #4, !dbg !26
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %56, float %53) #4, !dbg !26
  %.03.i = select i1 %.not3.i, float %62, float %61, !dbg !26
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %63, 0, !dbg !26
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %56, float %52) #4, !dbg !26
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %56, float %52) #4, !dbg !26
  %.04.i = select i1 %.not4.i, float %65, float %64, !dbg !26
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %66, 0, !dbg !26
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %56, float %51) #4, !dbg !26
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %56, float %51) #4, !dbg !26
  %.05.i = select i1 %.not5.i, float %68, float %67, !dbg !26
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %69, 0, !dbg !26
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %56, float %50) #4, !dbg !26
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %56, float %50) #4, !dbg !26
  %.06.i = select i1 %.not6.i, float %71, float %70, !dbg !26
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i = icmp eq i32 %72, 0, !dbg !26
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %56, float %49) #4, !dbg !26
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %56, float %49) #4, !dbg !26
  %.07.i = select i1 %.not7.i, float %74, float %73, !dbg !26
  %75 = fneg float %56, !dbg !26
  %76 = select i1 %45, float %75, float %38, !dbg !26
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i = icmp eq i32 %77, 0, !dbg !26
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %76, float %76) #4, !dbg !26
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %76, float %76) #4, !dbg !26
  %.08.i = select i1 %.not8.i, float %79, float %78, !dbg !26
  br i1 %45, label %80, label %__nv_erff.exit, !dbg !26

80:                                               ; preds = %__internal_fmad.exit.i
  %81 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #4, !dbg !26
  %82 = fsub float 1.000000e+00, %81, !dbg !26
  %83 = bitcast float %82 to i32, !dbg !26
  %84 = bitcast float %38 to i32, !dbg !26
  %85 = and i32 %84, -2147483648, !dbg !26
  %86 = or i32 %85, %83, !dbg !26
  %87 = bitcast i32 %86 to float, !dbg !26
  br label %__nv_erff.exit, !dbg !26

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %80
  %r.0.i = phi float [ %87, %80 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !26
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i12 = icmp eq i32 %88, 0, !dbg !26
  %89 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #4, !dbg !26
  %90 = tail call float @llvm.nvvm.fabs.f(float %39) #4, !dbg !26
  %.0.i13 = select i1 %.not.i12, float %90, float %89, !dbg !26
  %91 = fcmp oge float %.0.i13, 0x3FF00C1FC0000000, !dbg !26
  br i1 %91, label %__nv_fabsf.exit1.i30, label %93, !dbg !26

__nv_fabsf.exit1.i30:                             ; preds = %__nv_erff.exit
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i31 = icmp eq i32 %92, 0, !dbg !26
  %.01.i32 = select i1 %.not1.i31, float %90, float %89, !dbg !26
  br label %__internal_fmad.exit.i14, !dbg !26

93:                                               ; preds = %__nv_erff.exit
  %94 = fmul float %39, %39, !dbg !26
  br label %__internal_fmad.exit.i14, !dbg !26

__internal_fmad.exit.i14:                         ; preds = %93, %__nv_fabsf.exit1.i30
  %95 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i30 ], [ 0x3FC06EBA60000000, %93 ], !dbg !26
  %96 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i30 ], [ 0xBFD8127580000000, %93 ], !dbg !26
  %97 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i30 ], [ 0x3FBCE315E0000000, %93 ], !dbg !26
  %98 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i30 ], [ 0xBF9B837CE0000000, %93 ], !dbg !26
  %99 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i30 ], [ 0x3F755ABD40000000, %93 ], !dbg !26
  %100 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i30 ], [ 0xBF4AE9A400000000, %93 ], !dbg !26
  %101 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i30 ], [ 0x3F163D2D40000000, %93 ], !dbg !26
  %102 = phi float [ %.01.i32, %__nv_fabsf.exit1.i30 ], [ %94, %93 ], !dbg !26
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i15 = icmp eq i32 %103, 0, !dbg !26
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float %102, float %100) #4, !dbg !26
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %101, float %102, float %100) #4, !dbg !26
  %.02.i16 = select i1 %.not2.i15, float %105, float %104, !dbg !26
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i17 = icmp eq i32 %106, 0, !dbg !26
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i16, float %102, float %99) #4, !dbg !26
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i16, float %102, float %99) #4, !dbg !26
  %.03.i18 = select i1 %.not3.i17, float %108, float %107, !dbg !26
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i19 = icmp eq i32 %109, 0, !dbg !26
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i18, float %102, float %98) #4, !dbg !26
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i18, float %102, float %98) #4, !dbg !26
  %.04.i20 = select i1 %.not4.i19, float %111, float %110, !dbg !26
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i21 = icmp eq i32 %112, 0, !dbg !26
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i20, float %102, float %97) #4, !dbg !26
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i20, float %102, float %97) #4, !dbg !26
  %.05.i22 = select i1 %.not5.i21, float %114, float %113, !dbg !26
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i23 = icmp eq i32 %115, 0, !dbg !26
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i22, float %102, float %96) #4, !dbg !26
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i22, float %102, float %96) #4, !dbg !26
  %.06.i24 = select i1 %.not6.i23, float %117, float %116, !dbg !26
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i25 = icmp eq i32 %118, 0, !dbg !26
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i24, float %102, float %95) #4, !dbg !26
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i24, float %102, float %95) #4, !dbg !26
  %.07.i26 = select i1 %.not7.i25, float %120, float %119, !dbg !26
  %121 = fneg float %102, !dbg !26
  %122 = select i1 %91, float %121, float %39, !dbg !26
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i27 = icmp eq i32 %123, 0, !dbg !26
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i26, float %122, float %122) #4, !dbg !26
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i26, float %122, float %122) #4, !dbg !26
  %.08.i28 = select i1 %.not8.i27, float %125, float %124, !dbg !26
  br i1 %91, label %126, label %__nv_erff.exit33, !dbg !26

126:                                              ; preds = %__internal_fmad.exit.i14
  %127 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i28) #4, !dbg !26
  %128 = fsub float 1.000000e+00, %127, !dbg !26
  %129 = bitcast float %128 to i32, !dbg !26
  %130 = bitcast float %39 to i32, !dbg !26
  %131 = and i32 %130, -2147483648, !dbg !26
  %132 = or i32 %131, %129, !dbg !26
  %133 = bitcast i32 %132 to float, !dbg !26
  br label %__nv_erff.exit33, !dbg !26

__nv_erff.exit33:                                 ; preds = %__internal_fmad.exit.i14, %126
  %r.0.i29 = phi float [ %133, %126 ], [ %.08.i28, %__internal_fmad.exit.i14 ], !dbg !26
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i34 = icmp eq i32 %134, 0, !dbg !26
  %135 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #4, !dbg !26
  %136 = tail call float @llvm.nvvm.fabs.f(float %40) #4, !dbg !26
  %.0.i35 = select i1 %.not.i34, float %136, float %135, !dbg !26
  %137 = fcmp oge float %.0.i35, 0x3FF00C1FC0000000, !dbg !26
  br i1 %137, label %__nv_fabsf.exit1.i52, label %139, !dbg !26

__nv_fabsf.exit1.i52:                             ; preds = %__nv_erff.exit33
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i53 = icmp eq i32 %138, 0, !dbg !26
  %.01.i54 = select i1 %.not1.i53, float %136, float %135, !dbg !26
  br label %__internal_fmad.exit.i36, !dbg !26

139:                                              ; preds = %__nv_erff.exit33
  %140 = fmul float %40, %40, !dbg !26
  br label %__internal_fmad.exit.i36, !dbg !26

__internal_fmad.exit.i36:                         ; preds = %139, %__nv_fabsf.exit1.i52
  %141 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i52 ], [ 0x3FC06EBA60000000, %139 ], !dbg !26
  %142 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i52 ], [ 0xBFD8127580000000, %139 ], !dbg !26
  %143 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i52 ], [ 0x3FBCE315E0000000, %139 ], !dbg !26
  %144 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i52 ], [ 0xBF9B837CE0000000, %139 ], !dbg !26
  %145 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i52 ], [ 0x3F755ABD40000000, %139 ], !dbg !26
  %146 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i52 ], [ 0xBF4AE9A400000000, %139 ], !dbg !26
  %147 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i52 ], [ 0x3F163D2D40000000, %139 ], !dbg !26
  %148 = phi float [ %.01.i54, %__nv_fabsf.exit1.i52 ], [ %140, %139 ], !dbg !26
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i37 = icmp eq i32 %149, 0, !dbg !26
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float %148, float %146) #4, !dbg !26
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %147, float %148, float %146) #4, !dbg !26
  %.02.i38 = select i1 %.not2.i37, float %151, float %150, !dbg !26
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i39 = icmp eq i32 %152, 0, !dbg !26
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i38, float %148, float %145) #4, !dbg !26
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i38, float %148, float %145) #4, !dbg !26
  %.03.i40 = select i1 %.not3.i39, float %154, float %153, !dbg !26
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i41 = icmp eq i32 %155, 0, !dbg !26
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i40, float %148, float %144) #4, !dbg !26
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i40, float %148, float %144) #4, !dbg !26
  %.04.i42 = select i1 %.not4.i41, float %157, float %156, !dbg !26
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i43 = icmp eq i32 %158, 0, !dbg !26
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i42, float %148, float %143) #4, !dbg !26
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i42, float %148, float %143) #4, !dbg !26
  %.05.i44 = select i1 %.not5.i43, float %160, float %159, !dbg !26
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i45 = icmp eq i32 %161, 0, !dbg !26
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %148, float %142) #4, !dbg !26
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %148, float %142) #4, !dbg !26
  %.06.i46 = select i1 %.not6.i45, float %163, float %162, !dbg !26
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i47 = icmp eq i32 %164, 0, !dbg !26
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %148, float %141) #4, !dbg !26
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %148, float %141) #4, !dbg !26
  %.07.i48 = select i1 %.not7.i47, float %166, float %165, !dbg !26
  %167 = fneg float %148, !dbg !26
  %168 = select i1 %137, float %167, float %40, !dbg !26
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i49 = icmp eq i32 %169, 0, !dbg !26
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i48, float %168, float %168) #4, !dbg !26
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i48, float %168, float %168) #4, !dbg !26
  %.08.i50 = select i1 %.not8.i49, float %171, float %170, !dbg !26
  br i1 %137, label %172, label %__nv_erff.exit55, !dbg !26

172:                                              ; preds = %__internal_fmad.exit.i36
  %173 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i50) #4, !dbg !26
  %174 = fsub float 1.000000e+00, %173, !dbg !26
  %175 = bitcast float %174 to i32, !dbg !26
  %176 = bitcast float %40 to i32, !dbg !26
  %177 = and i32 %176, -2147483648, !dbg !26
  %178 = or i32 %177, %175, !dbg !26
  %179 = bitcast i32 %178 to float, !dbg !26
  br label %__nv_erff.exit55, !dbg !26

__nv_erff.exit55:                                 ; preds = %__internal_fmad.exit.i36, %172
  %r.0.i51 = phi float [ %179, %172 ], [ %.08.i50, %__internal_fmad.exit.i36 ], !dbg !26
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i56 = icmp eq i32 %180, 0, !dbg !26
  %181 = tail call float @llvm.nvvm.fabs.ftz.f(float %41) #4, !dbg !26
  %182 = tail call float @llvm.nvvm.fabs.f(float %41) #4, !dbg !26
  %.0.i57 = select i1 %.not.i56, float %182, float %181, !dbg !26
  %183 = fcmp oge float %.0.i57, 0x3FF00C1FC0000000, !dbg !26
  br i1 %183, label %__nv_fabsf.exit1.i74, label %185, !dbg !26

__nv_fabsf.exit1.i74:                             ; preds = %__nv_erff.exit55
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i75 = icmp eq i32 %184, 0, !dbg !26
  %.01.i76 = select i1 %.not1.i75, float %182, float %181, !dbg !26
  br label %__internal_fmad.exit.i58, !dbg !26

185:                                              ; preds = %__nv_erff.exit55
  %186 = fmul float %41, %41, !dbg !26
  br label %__internal_fmad.exit.i58, !dbg !26

__internal_fmad.exit.i58:                         ; preds = %185, %__nv_fabsf.exit1.i74
  %187 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i74 ], [ 0x3FC06EBA60000000, %185 ], !dbg !26
  %188 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i74 ], [ 0xBFD8127580000000, %185 ], !dbg !26
  %189 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i74 ], [ 0x3FBCE315E0000000, %185 ], !dbg !26
  %190 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i74 ], [ 0xBF9B837CE0000000, %185 ], !dbg !26
  %191 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i74 ], [ 0x3F755ABD40000000, %185 ], !dbg !26
  %192 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i74 ], [ 0xBF4AE9A400000000, %185 ], !dbg !26
  %193 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i74 ], [ 0x3F163D2D40000000, %185 ], !dbg !26
  %194 = phi float [ %.01.i76, %__nv_fabsf.exit1.i74 ], [ %186, %185 ], !dbg !26
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i59 = icmp eq i32 %195, 0, !dbg !26
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %193, float %194, float %192) #4, !dbg !26
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %193, float %194, float %192) #4, !dbg !26
  %.02.i60 = select i1 %.not2.i59, float %197, float %196, !dbg !26
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i61 = icmp eq i32 %198, 0, !dbg !26
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i60, float %194, float %191) #4, !dbg !26
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i60, float %194, float %191) #4, !dbg !26
  %.03.i62 = select i1 %.not3.i61, float %200, float %199, !dbg !26
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i63 = icmp eq i32 %201, 0, !dbg !26
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i62, float %194, float %190) #4, !dbg !26
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i62, float %194, float %190) #4, !dbg !26
  %.04.i64 = select i1 %.not4.i63, float %203, float %202, !dbg !26
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i65 = icmp eq i32 %204, 0, !dbg !26
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i64, float %194, float %189) #4, !dbg !26
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i64, float %194, float %189) #4, !dbg !26
  %.05.i66 = select i1 %.not5.i65, float %206, float %205, !dbg !26
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i67 = icmp eq i32 %207, 0, !dbg !26
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i66, float %194, float %188) #4, !dbg !26
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i66, float %194, float %188) #4, !dbg !26
  %.06.i68 = select i1 %.not6.i67, float %209, float %208, !dbg !26
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i69 = icmp eq i32 %210, 0, !dbg !26
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i68, float %194, float %187) #4, !dbg !26
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i68, float %194, float %187) #4, !dbg !26
  %.07.i70 = select i1 %.not7.i69, float %212, float %211, !dbg !26
  %213 = fneg float %194, !dbg !26
  %214 = select i1 %183, float %213, float %41, !dbg !26
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i71 = icmp eq i32 %215, 0, !dbg !26
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i70, float %214, float %214) #4, !dbg !26
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i70, float %214, float %214) #4, !dbg !26
  %.08.i72 = select i1 %.not8.i71, float %217, float %216, !dbg !26
  br i1 %183, label %218, label %__nv_erff.exit77, !dbg !26

218:                                              ; preds = %__internal_fmad.exit.i58
  %219 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i72) #4, !dbg !26
  %220 = fsub float 1.000000e+00, %219, !dbg !26
  %221 = bitcast float %220 to i32, !dbg !26
  %222 = bitcast float %41 to i32, !dbg !26
  %223 = and i32 %222, -2147483648, !dbg !26
  %224 = or i32 %223, %221, !dbg !26
  %225 = bitcast i32 %224 to float, !dbg !26
  br label %__nv_erff.exit77, !dbg !26

__nv_erff.exit77:                                 ; preds = %__internal_fmad.exit.i58, %218
  %r.0.i73 = phi float [ %225, %218 ], [ %.08.i72, %__internal_fmad.exit.i58 ], !dbg !26
  %226 = fadd float %r.0.i, 1.000000e+00, !dbg !27
  %227 = fadd float %r.0.i29, 1.000000e+00, !dbg !27
  %228 = fadd float %r.0.i51, 1.000000e+00, !dbg !27
  %229 = fadd float %r.0.i73, 1.000000e+00, !dbg !27
  %230 = fmul float %34, %226, !dbg !28
  %231 = fmul float %35, %227, !dbg !28
  %232 = fmul float %36, %228, !dbg !28
  %233 = fmul float %37, %229, !dbg !28
  %234 = fadd float %230, %231, !dbg !29
  %235 = fadd float %234, %232, !dbg !29
  %236 = fadd float %235, %233, !dbg !29
  %237 = select i1 %13, float %236, float 0.000000e+00, !dbg !29
  %238 = bitcast float %237 to i32, !dbg !34
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %238, i32 1, i32 31), !dbg !34
  %240 = bitcast i32 %239 to float, !dbg !34
  %241 = fadd float %237, %240, !dbg !29
  %242 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %241, float 8.000000e+00) #4, !dbg !35
  %243 = fsub float %230, %242, !dbg !36
  %244 = fsub float %231, %242, !dbg !36
  %245 = fsub float %232, %242, !dbg !36
  %246 = fsub float %233, %242, !dbg !36
  %247 = fmul float %243, %243, !dbg !37
  %248 = fmul float %244, %244, !dbg !37
  %249 = fmul float %245, %245, !dbg !37
  %250 = fmul float %246, %246, !dbg !37
  %251 = fadd float %247, %248, !dbg !38
  %252 = fadd float %249, %251, !dbg !38
  %253 = fadd float %250, %252, !dbg !38
  %254 = select i1 %13, float %253, float 0.000000e+00, !dbg !38
  %255 = bitcast float %254 to i32, !dbg !40
  %256 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %255, i32 1, i32 31), !dbg !40
  %257 = bitcast i32 %256 to float, !dbg !40
  %258 = fadd float %254, %257, !dbg !38
  %259 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %258, float 8.000000e+00) #4, !dbg !41
  %260 = fadd float %259, 0x3D71979980000000, !dbg !42
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i7 = icmp eq i32 %264, 0, !dbg !43
  br i1 %.not.i7, label %267, label %265, !dbg !43

265:                                              ; preds = %__nv_erff.exit77
  %266 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %260), !dbg !43
  br label %__nv_rsqrtf.exit9, !dbg !43

267:                                              ; preds = %__nv_erff.exit77
  %268 = tail call float @llvm.nvvm.rsqrt.approx.f(float %260), !dbg !43
  br label %__nv_rsqrtf.exit9, !dbg !43

__nv_rsqrtf.exit9:                                ; preds = %265, %267
  %.0.i8 = phi float [ %266, %265 ], [ %268, %267 ], !dbg !43
  %269 = extractvalue { i32, i32, i32, i32 } %33, 3, !dbg !23
  %270 = bitcast i32 %269 to float, !dbg !23
  %271 = extractvalue { i32, i32, i32, i32 } %33, 2, !dbg !23
  %272 = bitcast i32 %271 to float, !dbg !23
  %273 = extractvalue { i32, i32, i32, i32 } %33, 1, !dbg !23
  %274 = bitcast i32 %273 to float, !dbg !23
  %275 = extractvalue { i32, i32, i32, i32 } %33, 0, !dbg !23
  %276 = bitcast i32 %275 to float, !dbg !23
  %277 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !21
  %278 = bitcast i32 %277 to float, !dbg !21
  %279 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !21
  %280 = bitcast i32 %279 to float, !dbg !21
  %281 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !21
  %282 = bitcast i32 %281 to float, !dbg !21
  %283 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !21
  %284 = bitcast i32 %283 to float, !dbg !21
  %285 = fmul float %243, %.0.i8, !dbg !44
  %286 = fmul float %244, %.0.i8, !dbg !44
  %287 = fmul float %245, %.0.i8, !dbg !44
  %288 = fmul float %246, %.0.i8, !dbg !44
  %289 = fmul float %285, %284, !dbg !45
  %290 = fmul float %286, %282, !dbg !45
  %291 = fmul float %287, %280, !dbg !45
  %292 = fmul float %288, %278, !dbg !45
  %293 = fadd float %289, %276, !dbg !46
  %294 = fadd float %290, %274, !dbg !46
  %295 = fadd float %291, %272, !dbg !46
  %296 = fadd float %292, %270, !dbg !46
  %297 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !47
  %298 = bitcast float %293 to i32, !dbg !48
  %299 = bitcast float %294 to i32, !dbg !48
  %300 = bitcast float %295 to i32, !dbg !48
  %301 = bitcast float %296 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %298, i32 %299, i32 %300, i32 %301, ptr addrspace(1) %297, i1 %13) #4, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceb5ycpkr2cfkhtng4fkctct4vxga42wfes6vk3sx7qhu4dlfbdq.py", directory: "inductor_cache/eb")
!4 = !{ptr @triton_per_fused_add_div_erf_mul_native_layer_norm_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_erf_mul_native_layer_norm_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_erf_mul_native_layer_norm_0", linkageName: "triton_per_fused_add_div_erf_mul_native_layer_norm_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 37, scope: !7)
!17 = !DILocation(line: 31, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 31, scope: !7)
!21 = !DILocation(line: 32, column: 36, scope: !7)
!22 = !DILocation(line: 33, column: 31, scope: !7)
!23 = !DILocation(line: 33, column: 36, scope: !7)
!24 = !DILocation(line: 35, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 25, scope: !7)
!27 = !DILocation(line: 40, column: 18, scope: !7)
!28 = !DILocation(line: 41, column: 18, scope: !7)
!29 = !DILocation(line: 256, column: 15, scope: !30, inlinedAt: !33)
!30 = distinct !DILexicalBlockFile(scope: !32, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!32 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!33 = !DILocation(line: 46, column: 26, scope: !7)
!34 = !DILocation(line: 267, column: 36, scope: !32, inlinedAt: !33)
!35 = !DILocation(line: 49, column: 20, scope: !7)
!36 = !DILocation(line: 50, column: 19, scope: !7)
!37 = !DILocation(line: 51, column: 20, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !30, inlinedAt: !39)
!39 = !DILocation(line: 54, column: 26, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !32, inlinedAt: !39)
!41 = !DILocation(line: 57, column: 20, scope: !7)
!42 = !DILocation(line: 59, column: 20, scope: !7)
!43 = !DILocation(line: 60, column: 28, scope: !7)
!44 = !DILocation(line: 61, column: 20, scope: !7)
!45 = !DILocation(line: 62, column: 20, scope: !7)
!46 = !DILocation(line: 63, column: 20, scope: !7)
!47 = !DILocation(line: 64, column: 25, scope: !7)
!48 = !DILocation(line: 64, column: 44, scope: !7)
!49 = !DILocation(line: 64, column: 4, scope: !7)
