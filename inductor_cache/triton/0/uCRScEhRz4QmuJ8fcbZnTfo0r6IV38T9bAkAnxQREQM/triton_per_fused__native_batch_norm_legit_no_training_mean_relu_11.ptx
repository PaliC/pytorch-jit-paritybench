//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<118>;
	.reg .f32 	%f<100>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_0];
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:23:33
	shl.b32 	%r67, %r1, 5;
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_2];
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_3];
	.loc	1 24 44                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:24:44
	mov.u32 	%r68, %tid.x;
	shl.b32 	%r69, %r68, 2;
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_4];
	and.b32  	%r70, %r69, 28;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_11_param_5];
	.loc	1 24 23                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:24:23
	or.b32  	%r71, %r67, %r70;
	.loc	1 25 21                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:25:21
	setp.lt.s32 	%p1, %r71, 512;
	.loc	1 31 19                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:31:19
	shr.s32 	%r73, %r71, 31;
	shr.u32 	%r74, %r73, 25;
	add.s32 	%r75, %r71, %r74;
	.loc	1 30 19                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:30:19
	and.b32  	%r76, %r75, -128;
	sub.s32 	%r77, %r71, %r76;
	.loc	1 33 39                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:39
	shl.b32 	%r78, %r68, 4;
	and.b32  	%r79, %r78, 3968;
	.loc	1 33 49                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:49
	shl.b32 	%r80, %r75, 6;
	and.b32  	%r81, %r80, -8192;
	.loc	1 33 35                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:35
	add.s32 	%r82, %r81, %r77;
	.loc	1 33 44                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:44
	add.s32 	%r83, %r82, %r79;
	add.s32 	%r84, %r83, 4096;
	.loc	1 33 30                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:30
	mul.wide.s32 	%rd14, %r83, 4;
	add.s64 	%rd1, %rd9, %rd14;
	mul.wide.s32 	%rd15, %r84, 4;
	add.s64 	%rd2, %rd9, %rd15;
	mov.b32 	%r6, 0;
	.loc	1 33 54                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 30                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:34:30
	mul.wide.s32 	%rd16, %r77, 4;
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 34 35                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 30                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:35:30
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 35 35                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:35:35
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r22;
	mov.b32 	%f2, %r23;
	mov.b32 	%f3, %r24;
	mov.b32 	%f4, %r25;
	.loc	1 36 31                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:36:31
	add.s64 	%rd5, %rd12, %rd16;
	.loc	1 36 36                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:36:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:37:31
	add.s64 	%rd6, %rd13, %rd16;
	.loc	1 37 36                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:37:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 18                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:40:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 41 26                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:41:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 24 44                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:24:44
	and.b32  	%r85, %r68, 31;
	.loc	1 24 23                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:24:23
	or.b32  	%r86, %r67, %r85;
	.loc	1 25 21                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:25:21
	setp.lt.s32 	%p23, %r86, 512;
	.loc	1 24 44                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:24:44
	and.b32  	%r87, %r68, 24;
	.loc	1 43 18                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:43:18
	mov.b32 	%r36, %f9;
	mov.b32 	%r35, 1065353216;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f13, %r34;
	mov.b32 	%r39, %f10;
	// begin inline asm
	div.full.f32 %r37, %r35, %r39;
	// end inline asm
	mov.b32 	%f14, %r37;
	mov.b32 	%r42, %f11;
	// begin inline asm
	div.full.f32 %r40, %r35, %r42;
	// end inline asm
	mov.b32 	%f15, %r40;
	mov.b32 	%r45, %f12;
	// begin inline asm
	div.full.f32 %r43, %r35, %r45;
	// end inline asm
	mov.b32 	%f16, %r43;
	.loc	1 34 35                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:34:35
	mov.b32 	%f17, %r21;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r19;
	mov.b32 	%f20, %r18;
	.loc	1 33 54                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:33:54
	mov.b32 	%f21, %r13;
	mov.b32 	%f22, %r12;
	mov.b32 	%f23, %r11;
	mov.b32 	%f24, %r10;
	mov.b32 	%f25, %r5;
	mov.b32 	%f26, %r4;
	mov.b32 	%f27, %r3;
	mov.b32 	%f28, %r2;
	.loc	1 38 18                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:38:18
	sub.f32 	%f29, %f28, %f20;
	sub.f32 	%f30, %f27, %f19;
	sub.f32 	%f31, %f26, %f18;
	sub.f32 	%f32, %f25, %f17;
	sub.f32 	%f33, %f24, %f20;
	sub.f32 	%f34, %f23, %f19;
	sub.f32 	%f35, %f22, %f18;
	sub.f32 	%f36, %f21, %f17;
	.loc	1 37 36                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:37:36
	mov.b32 	%f37, %r33;
	mov.b32 	%f38, %r32;
	mov.b32 	%f39, %r31;
	mov.b32 	%f40, %r30;
	.loc	1 36 36                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:36:36
	mov.b32 	%f41, %r29;
	mov.b32 	%f42, %r28;
	mov.b32 	%f43, %r27;
	mov.b32 	%f44, %r26;
	.loc	1 46 19                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:46:19
	mul.f32 	%f45, %f36, %f16;
	mul.f32 	%f46, %f35, %f15;
	mul.f32 	%f47, %f34, %f14;
	mul.f32 	%f48, %f33, %f13;
	mul.f32 	%f49, %f32, %f16;
	mul.f32 	%f50, %f31, %f15;
	mul.f32 	%f51, %f30, %f14;
	mul.f32 	%f52, %f29, %f13;
	.loc	1 48 20                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:48:20
	fma.rn.f32 	%f53, %f52, %f44, %f40;
	fma.rn.f32 	%f54, %f51, %f43, %f39;
	fma.rn.f32 	%f55, %f50, %f42, %f38;
	fma.rn.f32 	%f56, %f49, %f41, %f37;
	fma.rn.f32 	%f57, %f48, %f44, %f40;
	fma.rn.f32 	%f58, %f47, %f43, %f39;
	fma.rn.f32 	%f59, %f46, %f42, %f38;
	fma.rn.f32 	%f60, %f45, %f41, %f37;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p24, %f60, 0f00000000;
	setp.lt.f32 	%p25, %f59, 0f00000000;
	setp.lt.f32 	%p26, %f58, 0f00000000;
	setp.lt.f32 	%p27, %f57, 0f00000000;
	setp.lt.f32 	%p28, %f56, 0f00000000;
	setp.lt.f32 	%p29, %f55, 0f00000000;
	setp.lt.f32 	%p30, %f54, 0f00000000;
	setp.lt.f32 	%p31, %f53, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f61, 0f00000000, %f53, %p31;
	selp.f32 	%f62, 0f00000000, %f54, %p30;
	selp.f32 	%f63, 0f00000000, %f55, %p29;
	selp.f32 	%f64, 0f00000000, %f56, %p28;
	selp.f32 	%f65, 0f00000000, %f57, %p27;
	selp.f32 	%f66, 0f00000000, %f58, %p26;
	selp.f32 	%f67, 0f00000000, %f59, %p25;
	selp.f32 	%f68, 0f00000000, %f60, %p24;
$L__tmp2:
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f69, %f61, %f65;
	selp.f32 	%f70, %f69, 0f00000000, %p1;
	add.f32 	%f71, %f62, %f66;
	selp.f32 	%f72, %f71, 0f00000000, %p1;
	add.f32 	%f73, %f63, %f67;
	selp.f32 	%f74, %f73, 0f00000000, %p1;
	add.f32 	%f75, %f64, %f68;
	selp.f32 	%f76, %f75, 0f00000000, %p1;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f70;
	shfl.sync.bfly.b32	%r89, %r88, 16, 31, -1;
	mov.b32 	%f77, %r89;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f78, %f70, %f77;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f78;
	shfl.sync.bfly.b32	%r91, %r90, 8, 31, -1;
	mov.b32 	%f79, %r91;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f72;
	shfl.sync.bfly.b32	%r93, %r92, 16, 31, -1;
	mov.b32 	%f81, %r93;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f82, %f72, %f81;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f82;
	shfl.sync.bfly.b32	%r95, %r94, 8, 31, -1;
	mov.b32 	%f83, %r95;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f74;
	shfl.sync.bfly.b32	%r97, %r96, 16, 31, -1;
	mov.b32 	%f85, %r97;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f86, %f74, %f85;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f86;
	shfl.sync.bfly.b32	%r99, %r98, 8, 31, -1;
	mov.b32 	%f87, %r99;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f76;
	shfl.sync.bfly.b32	%r101, %r100, 16, 31, -1;
	mov.b32 	%f89, %r101;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f90, %f76, %f89;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f90;
	shfl.sync.bfly.b32	%r103, %r102, 8, 31, -1;
	mov.b32 	%f91, %r103;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p15, %r87, 0;
	bfe.u32 	%r104, %r68, 5, 3;
	shl.b32 	%r105, %r104, 2;
	shl.b32 	%r106, %r70, 5;
	or.b32  	%r107, %r106, %r105;
	mov.u32 	%r108, global_smem;
	add.s32 	%r46, %r108, %r107;
	mov.b32 	%r47, %f80;
	// begin inline asm
	@%p15 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r46, 32;
	mov.b32 	%r49, %f84;
	// begin inline asm
	@%p15 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r46, 64;
	mov.b32 	%r51, %f88;
	// begin inline asm
	@%p15 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r46, 96;
	mov.b32 	%r53, %f92;
	// begin inline asm
	@%p15 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r68, 256;
	add.s32 	%r55, %r108, %r69;
	// begin inline asm
	@%p19 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f93, %r54;
	shfl.sync.bfly.b32	%r109, %r54, 4, 31, -1;
	mov.b32 	%f94, %r109;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f95;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f96, %r111;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f97;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f98, %r113;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r114, %r68, 7;
	setp.eq.s32 	%p32, %r114, 0;
	and.pred  	%p20, %p19, %p32;
	mov.b32 	%r57, %f99;
	// begin inline asm
	@%p20 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r115, %r108, %r106;
	ld.shared.u32 	%r59, [%r115];
	ld.shared.u32 	%r60, [%r115+32];
	ld.shared.u32 	%r61, [%r115+64];
	ld.shared.u32 	%r62, [%r115+96];
$L__tmp3:
	.loc	1 55 20                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:55:20
	bar.sync 	0;
	mad.lo.s32 	%r58, %r70, -28, %r115;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.v4.b32 [ %r58 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r116, %r85, 2;
	add.s32 	%r117, %r108, %r116;
	ld.shared.u32 	%r64, [%r117];
	mov.b32 	%r65, 1115684864;
	// begin inline asm
	div.full.f32 %r66, %r64, %r65;
	// end inline asm
	.loc	1 56 4                          // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:57:28
	mul.wide.s32 	%rd17, %r86, 4;
	add.s64 	%rd7, %rd8, %rd17;
	.loc	1 57 40                         // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:57:40
	setp.eq.s32 	%p33, %r104, 0;
	and.pred  	%p22, %p33, %p23;
	// begin inline asm
	@%p22 st.global.b32 [ %rd7 + 0 ], { %r66 };
	// end inline asm
	.loc	1 57 4                          // c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py:57:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6a/c6a5d6u5swpcvdwy25gcjdeqmpl32eut5cqlf3dgu3g224orr5x6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 235                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 97
.b8 53
.b8 100
.b8 54
.b8 117
.b8 53
.b8 115
.b8 119
.b8 112
.b8 99
.b8 118
.b8 100
.b8 119
.b8 121
.b8 50
.b8 53
.b8 103
.b8 99
.b8 106
.b8 100
.b8 101
.b8 113
.b8 109
.b8 112
.b8 108
.b8 51
.b8 50
.b8 101
.b8 117
.b8 116
.b8 53
.b8 99
.b8 113
.b8 108
.b8 102
.b8 51
.b8 100
.b8 103
.b8 117
.b8 51
.b8 103
.b8 50
.b8 50
.b8 52
.b8 111
.b8 114
.b8 114
.b8 53
.b8 120
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x45 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
