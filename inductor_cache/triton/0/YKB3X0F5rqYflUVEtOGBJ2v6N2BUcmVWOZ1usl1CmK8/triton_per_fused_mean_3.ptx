//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_3 // -- Begin function triton_per_fused_mean_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_3
.visible .entry triton_per_fused_mean_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_2,
	.param .u32 triton_per_fused_mean_3_param_3,
	.param .u32 triton_per_fused_mean_3_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b32 	%r<273>;
	.reg .f32 	%f<97>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_per_fused_mean_3_param_0];
	ld.param.u64 	%rd13, [triton_per_fused_mean_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:33
	shl.b32 	%r67, %r1, 7;
	ld.param.u64 	%rd14, [triton_per_fused_mean_3_param_2];
	.loc	1 24 44                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:44
	mov.u32 	%r68, %tid.x;
	shl.b32 	%r70, %r68, 2;
	and.b32  	%r71, %r70, 124;
	bfe.u32 	%r72, %r68, 4, 4;
	and.b32  	%r73, %r68, 15;
	and.b32  	%r74, %r68, 127;
	.loc	1 24 23                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:23
	or.b32  	%r75, %r67, %r71;
	or.b32  	%r76, %r67, %r72;
	or.b32  	%r77, %r67, %r74;
	.loc	1 26 34                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:26:34
	bfe.u32 	%r78, %r68, 5, 3;
	.loc	1 28 21                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:28:21
	setp.eq.s32 	%p6, %r78, 0;
	setp.lt.u32 	%p19, %r73, 9;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	bfe.s32 	%r79, %r1, 24, 1;
	shr.u32 	%r80, %r79, 20;
	add.s32 	%r81, %r75, %r80;
	shr.s32 	%r82, %r81, 12;
	.loc	1 30 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:30:19
	and.b32  	%r83, %r81, -4096;
	sub.s32 	%r84, %r75, %r83;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	add.s32 	%r85, %r76, %r80;
	shr.s32 	%r86, %r85, 12;
	add.s32 	%r87, %r85, 16;
	shr.s32 	%r88, %r87, 12;
	add.s32 	%r89, %r85, 32;
	shr.s32 	%r90, %r89, 12;
	add.s32 	%r91, %r85, 48;
	shr.s32 	%r92, %r91, 12;
	add.s32 	%r93, %r85, 64;
	shr.s32 	%r94, %r93, 12;
	add.s32 	%r95, %r85, 80;
	shr.s32 	%r96, %r95, 12;
	add.s32 	%r97, %r85, 96;
	shr.s32 	%r98, %r97, 12;
	add.s32 	%r99, %r85, 112;
	shr.s32 	%r100, %r99, 12;
	.loc	1 32 29                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:32:29
	shr.u32 	%r101, %r86, 23;
	add.s32 	%r102, %r86, %r101;
	and.b32  	%r103, %r102, -512;
	sub.s32 	%r104, %r86, %r103;
	shr.u32 	%r105, %r88, 23;
	add.s32 	%r106, %r88, %r105;
	and.b32  	%r107, %r106, -512;
	sub.s32 	%r108, %r88, %r107;
	shr.u32 	%r109, %r90, 23;
	add.s32 	%r110, %r90, %r109;
	and.b32  	%r111, %r110, -512;
	sub.s32 	%r112, %r90, %r111;
	shr.u32 	%r113, %r92, 23;
	add.s32 	%r114, %r92, %r113;
	and.b32  	%r115, %r114, -512;
	sub.s32 	%r116, %r92, %r115;
	shr.u32 	%r117, %r94, 23;
	add.s32 	%r118, %r94, %r117;
	and.b32  	%r119, %r118, -512;
	sub.s32 	%r120, %r94, %r119;
	shr.u32 	%r121, %r96, 23;
	add.s32 	%r122, %r96, %r121;
	and.b32  	%r123, %r122, -512;
	sub.s32 	%r124, %r96, %r123;
	shr.u32 	%r125, %r98, 23;
	add.s32 	%r126, %r98, %r125;
	and.b32  	%r127, %r126, -512;
	sub.s32 	%r128, %r98, %r127;
	shr.u32 	%r129, %r100, 23;
	add.s32 	%r130, %r100, %r129;
	and.b32  	%r131, %r130, -512;
	sub.s32 	%r132, %r100, %r131;
	.loc	1 34 40                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:40
	shl.b32 	%r133, %r78, 12;
	.loc	1 34 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:35
	mad.lo.s32 	%r134, %r82, 36864, %r84;
	.loc	1 34 45                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:45
	add.s32 	%r135, %r134, %r133;
	add.s32 	%r136, %r135, 32768;
	.loc	1 34 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:30
	mul.wide.s32 	%rd15, %r135, 4;
	add.s64 	%rd1, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r136, 4;
	add.s64 	%rd2, %rd12, %rd16;
	mov.b32 	%r6, 0;
	mov.pred 	%p1, -1;
	.loc	1 34 56                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:56
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.v4.b32 { %r19, %r21, %r23, %r25 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r21, %r6;
	@!%p1 mov.u32 %r23, %r6;
	@!%p1 mov.u32 %r25, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r33, 0x0;
	@%p6 ld.global.v4.b32 { %r27, %r29, %r31, %r33 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r27, %r6;
	@!%p6 mov.u32 %r29, %r6;
	@!%p6 mov.u32 %r31, %r6;
	@!%p6 mov.u32 %r33, %r6;
	// end inline asm
	shl.b32 	%r137, %r68, 6;
	and.b32  	%r138, %r137, 1984;
	or.b32  	%r139, %r138, %r78;
	and.b32  	%r140, %r68, 255;
	shr.u32 	%r141, %r138, 2;
	mov.u32 	%r142, global_smem;
	add.s32 	%r143, %r142, %r141;
	shl.b32 	%r144, %r139, 2;
	add.s32 	%r18, %r143, %r144;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	or.b32  	%r145, %r138, 16;
	shr.u32 	%r146, %r145, 2;
	add.s32 	%r147, %r142, %r146;
	add.s32 	%r148, %r147, %r144;
	add.s32 	%r20, %r148, 64;
	// begin inline asm
	@%p1 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	or.b32  	%r149, %r138, 32;
	shr.u32 	%r150, %r149, 2;
	add.s32 	%r151, %r142, %r150;
	add.s32 	%r152, %r151, %r144;
	add.s32 	%r22, %r152, 128;
	// begin inline asm
	@%p1 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	or.b32  	%r153, %r138, 48;
	shr.u32 	%r154, %r153, 2;
	add.s32 	%r155, %r142, %r154;
	add.s32 	%r156, %r155, %r144;
	add.s32 	%r24, %r156, 192;
	// begin inline asm
	@%p1 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	add.s32 	%r26, %r18, 32;
	// begin inline asm
	@%p1 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r148, 96;
	// begin inline asm
	@%p1 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r152, 160;
	// begin inline asm
	@%p1 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r156, 224;
	// begin inline asm
	@%p1 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r157, %r68, 2;
	and.b32  	%r158, %r157, 60;
	add.s32 	%r159, %r142, %r158;
	shl.b32 	%r160, %r140, 2;
	add.s32 	%r161, %r159, %r160;
	ld.shared.f32 	%f1, [%r161];
	or.b32  	%r162, %r140, 256;
	shr.u32 	%r163, %r162, 2;
	and.b32  	%r164, %r163, 124;
	add.s32 	%r165, %r142, %r164;
	add.s32 	%r166, %r165, %r160;
	ld.shared.f32 	%f2, [%r166+1024];
	or.b32  	%r167, %r140, 512;
	shr.u32 	%r168, %r167, 2;
	and.b32  	%r169, %r168, 188;
	add.s32 	%r170, %r142, %r169;
	add.s32 	%r171, %r170, %r160;
	ld.shared.f32 	%f3, [%r171+2048];
	or.b32  	%r172, %r140, 768;
	shr.u32 	%r173, %r172, 2;
	and.b32  	%r174, %r173, 252;
	add.s32 	%r175, %r142, %r174;
	add.s32 	%r176, %r175, %r160;
	ld.shared.f32 	%f4, [%r176+3072];
	or.b32  	%r177, %r140, 1024;
	shr.u32 	%r178, %r177, 2;
	and.b32  	%r179, %r178, 316;
	add.s32 	%r180, %r142, %r179;
	add.s32 	%r181, %r180, %r160;
	ld.shared.f32 	%f5, [%r181+4096];
	or.b32  	%r182, %r140, 1280;
	shr.u32 	%r183, %r182, 2;
	and.b32  	%r184, %r183, 380;
	add.s32 	%r185, %r142, %r184;
	add.s32 	%r186, %r185, %r160;
	ld.shared.f32 	%f6, [%r186+5120];
	or.b32  	%r187, %r140, 1536;
	shr.u32 	%r188, %r187, 2;
	and.b32  	%r189, %r188, 444;
	add.s32 	%r190, %r142, %r189;
	add.s32 	%r191, %r190, %r160;
	ld.shared.f32 	%f7, [%r191+6144];
	or.b32  	%r192, %r140, 1792;
	shr.u32 	%r193, %r192, 2;
	and.b32  	%r194, %r193, 508;
	add.s32 	%r195, %r142, %r194;
	add.s32 	%r196, %r195, %r160;
	ld.shared.f32 	%f8, [%r196+7168];
	.loc	1 35 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:35
	mad.lo.s32 	%r197, %r104, 9, %r73;
	mad.lo.s32 	%r198, %r108, 9, %r73;
	mad.lo.s32 	%r199, %r112, 9, %r73;
	mad.lo.s32 	%r200, %r116, 9, %r73;
	mad.lo.s32 	%r201, %r120, 9, %r73;
	mad.lo.s32 	%r202, %r124, 9, %r73;
	mad.lo.s32 	%r203, %r128, 9, %r73;
	mad.lo.s32 	%r204, %r132, 9, %r73;
	.loc	1 35 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:30
	mul.wide.s32 	%rd17, %r197, 4;
	add.s64 	%rd3, %rd13, %rd17;
	mul.wide.s32 	%rd18, %r198, 4;
	add.s64 	%rd4, %rd13, %rd18;
	mul.wide.s32 	%rd19, %r199, 4;
	add.s64 	%rd5, %rd13, %rd19;
	mul.wide.s32 	%rd20, %r200, 4;
	add.s64 	%rd6, %rd13, %rd20;
	mul.wide.s32 	%rd21, %r201, 4;
	add.s64 	%rd7, %rd13, %rd21;
	mul.wide.s32 	%rd22, %r202, 4;
	add.s64 	%rd8, %rd13, %rd22;
	mul.wide.s32 	%rd23, %r203, 4;
	add.s64 	%rd9, %rd13, %rd23;
	mul.wide.s32 	%rd24, %r204, 4;
	add.s64 	%rd10, %rd13, %rd24;
	.loc	1 35 42                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:42
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r34 }, [ %rd3 + 0 ];
	@!%p19 mov.u32 %r34, %r6;
	// end inline asm
	mov.b32 	%f9, %r34;
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r36 }, [ %rd4 + 0 ];
	@!%p19 mov.u32 %r36, %r6;
	// end inline asm
	mov.b32 	%f10, %r36;
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r38 }, [ %rd5 + 0 ];
	@!%p19 mov.u32 %r38, %r6;
	// end inline asm
	mov.b32 	%f11, %r38;
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r40 }, [ %rd6 + 0 ];
	@!%p19 mov.u32 %r40, %r6;
	// end inline asm
	mov.b32 	%f12, %r40;
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r42 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r42, %r6;
	// end inline asm
	mov.b32 	%f13, %r42;
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r44 }, [ %rd8 + 0 ];
	@!%p19 mov.u32 %r44, %r6;
	// end inline asm
	mov.b32 	%f14, %r44;
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r46 }, [ %rd9 + 0 ];
	@!%p19 mov.u32 %r46, %r6;
	// end inline asm
	mov.b32 	%f15, %r46;
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r48 }, [ %rd10 + 0 ];
	@!%p19 mov.u32 %r48, %r6;
	// end inline asm
	mov.b32 	%f16, %r48;
	.loc	1 36 18                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:36:18
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
	.loc	1 38 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:38:33
	selp.f32 	%f25, %f17, 0f00000000, %p19;
	selp.f32 	%f26, %f18, 0f00000000, %p19;
	selp.f32 	%f27, %f19, 0f00000000, %p19;
	selp.f32 	%f28, %f20, 0f00000000, %p19;
	selp.f32 	%f29, %f21, 0f00000000, %p19;
	selp.f32 	%f30, %f22, 0f00000000, %p19;
	selp.f32 	%f31, %f23, 0f00000000, %p19;
	selp.f32 	%f32, %f24, 0f00000000, %p19;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r205, %f25;
	shfl.sync.bfly.b32	%r206, %r205, 8, 31, -1;
	mov.b32 	%f33, %r206;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f25, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r207, %f34;
	shfl.sync.bfly.b32	%r208, %r207, 4, 31, -1;
	mov.b32 	%f35, %r208;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r209, %f36;
	shfl.sync.bfly.b32	%r210, %r209, 2, 31, -1;
	mov.b32 	%f37, %r210;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r211, %f38;
	shfl.sync.bfly.b32	%r212, %r211, 1, 31, -1;
	mov.b32 	%f39, %r212;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r213, %f26;
	shfl.sync.bfly.b32	%r214, %r213, 8, 31, -1;
	mov.b32 	%f41, %r214;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f26, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r215, %f42;
	shfl.sync.bfly.b32	%r216, %r215, 4, 31, -1;
	mov.b32 	%f43, %r216;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r217, %f44;
	shfl.sync.bfly.b32	%r218, %r217, 2, 31, -1;
	mov.b32 	%f45, %r218;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r219, %f46;
	shfl.sync.bfly.b32	%r220, %r219, 1, 31, -1;
	mov.b32 	%f47, %r220;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r221, %f27;
	shfl.sync.bfly.b32	%r222, %r221, 8, 31, -1;
	mov.b32 	%f49, %r222;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f27, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r223, %f50;
	shfl.sync.bfly.b32	%r224, %r223, 4, 31, -1;
	mov.b32 	%f51, %r224;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r225, %f52;
	shfl.sync.bfly.b32	%r226, %r225, 2, 31, -1;
	mov.b32 	%f53, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r227, %f54;
	shfl.sync.bfly.b32	%r228, %r227, 1, 31, -1;
	mov.b32 	%f55, %r228;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r229, %f28;
	shfl.sync.bfly.b32	%r230, %r229, 8, 31, -1;
	mov.b32 	%f57, %r230;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f28, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r231, %f58;
	shfl.sync.bfly.b32	%r232, %r231, 4, 31, -1;
	mov.b32 	%f59, %r232;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r233, %f60;
	shfl.sync.bfly.b32	%r234, %r233, 2, 31, -1;
	mov.b32 	%f61, %r234;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r235, %f62;
	shfl.sync.bfly.b32	%r236, %r235, 1, 31, -1;
	mov.b32 	%f63, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r237, %f29;
	shfl.sync.bfly.b32	%r238, %r237, 8, 31, -1;
	mov.b32 	%f65, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f29, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r239, %f66;
	shfl.sync.bfly.b32	%r240, %r239, 4, 31, -1;
	mov.b32 	%f67, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r241, %f68;
	shfl.sync.bfly.b32	%r242, %r241, 2, 31, -1;
	mov.b32 	%f69, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r243, %f70;
	shfl.sync.bfly.b32	%r244, %r243, 1, 31, -1;
	mov.b32 	%f71, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r245, %f30;
	shfl.sync.bfly.b32	%r246, %r245, 8, 31, -1;
	mov.b32 	%f73, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f30, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r247, %f74;
	shfl.sync.bfly.b32	%r248, %r247, 4, 31, -1;
	mov.b32 	%f75, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r249, %f76;
	shfl.sync.bfly.b32	%r250, %r249, 2, 31, -1;
	mov.b32 	%f77, %r250;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r251, %f78;
	shfl.sync.bfly.b32	%r252, %r251, 1, 31, -1;
	mov.b32 	%f79, %r252;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r253, %f31;
	shfl.sync.bfly.b32	%r254, %r253, 8, 31, -1;
	mov.b32 	%f81, %r254;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f31, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r255, %f82;
	shfl.sync.bfly.b32	%r256, %r255, 4, 31, -1;
	mov.b32 	%f83, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f84;
	shfl.sync.bfly.b32	%r258, %r257, 2, 31, -1;
	mov.b32 	%f85, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r259, %f86;
	shfl.sync.bfly.b32	%r260, %r259, 1, 31, -1;
	mov.b32 	%f87, %r260;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r261, %f32;
	shfl.sync.bfly.b32	%r262, %r261, 8, 31, -1;
	mov.b32 	%f89, %r262;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f32, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r263, %f90;
	shfl.sync.bfly.b32	%r264, %r263, 4, 31, -1;
	mov.b32 	%f91, %r264;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r265, %f92;
	shfl.sync.bfly.b32	%r266, %r265, 2, 31, -1;
	mov.b32 	%f93, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r267, %f94;
	shfl.sync.bfly.b32	%r268, %r267, 1, 31, -1;
	mov.b32 	%f95, %r268;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
$L__tmp2:
	.loc	1 39 27                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:39:27
	bar.sync 	0;
	shl.b32 	%r269, %r72, 2;
	add.s32 	%r50, %r142, %r269;
	mov.b32 	%r51, %f40;
	// begin inline asm
	@%p1 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r50, 64;
	mov.b32 	%r53, %f48;
	// begin inline asm
	@%p1 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r50, 128;
	mov.b32 	%r55, %f56;
	// begin inline asm
	@%p1 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r50, 192;
	mov.b32 	%r57, %f64;
	// begin inline asm
	@%p1 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r50, 256;
	mov.b32 	%r59, %f72;
	// begin inline asm
	@%p1 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r50, 320;
	mov.b32 	%r61, %f80;
	// begin inline asm
	@%p1 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r50, 384;
	mov.b32 	%r63, %f88;
	// begin inline asm
	@%p1 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r50, 448;
	mov.b32 	%r65, %f96;
	// begin inline asm
	@%p1 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r270, %r74, 2;
	add.s32 	%r271, %r142, %r270;
	ld.shared.u32 	%r66, [%r271];
	.loc	1 40 25                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:25
	mul.wide.s32 	%rd25, %r77, 4;
	add.s64 	%rd11, %rd14, %rd25;
	.loc	1 40 36                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:36
	and.b32  	%r272, %r68, 128;
	setp.eq.s32 	%p43, %r272, 0;
	// begin inline asm
	@%p43 st.global.b32 [ %rd11 + 0 ], { %r66 };
	// end inline asm
	.loc	1 40 4                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 115
.b8 121
.b8 53
.b8 108
.b8 104
.b8 55
.b8 115
.b8 102
.b8 109
.b8 118
.b8 99
.b8 118
.b8 107
.b8 107
.b8 53
.b8 50
.b8 51
.b8 116
.b8 51
.b8 103
.b8 117
.b8 107
.b8 114
.b8 110
.b8 99
.b8 115
.b8 109
.b8 112
.b8 101
.b8 97
.b8 50
.b8 116
.b8 105
.b8 53
.b8 108
.b8 104
.b8 54
.b8 103
.b8 50
.b8 52
.b8 117
.b8 97
.b8 113
.b8 113
.b8 102
.b8 110
.b8 115
.b8 107
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
