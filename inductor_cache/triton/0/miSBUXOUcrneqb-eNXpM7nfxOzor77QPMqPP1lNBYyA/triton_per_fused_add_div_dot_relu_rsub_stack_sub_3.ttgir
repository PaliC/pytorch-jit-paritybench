#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0)
#loc1 = loc(unknown)
#loc40 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":66:26)
#loc50 = loc(callsite(#loc1 at #loc40))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_div_dot_relu_rsub_stack_sub_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0), %arg4: !tt.ptr<f32> loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-1> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x64xi64, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc2)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc3)
    %3 = tt.addptr %2, %1 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc3)
    %4 = tt.load %3 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc4)
    %5 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc5)
    %6 = tt.load %5 : !tt.ptr<f32> loc(#loc6)
    %7 = tt.splat %6 : f32 -> tensor<1x64xf32, #blocked> loc(#loc7)
    %8 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc8)
    %10 = tt.load %9 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %1 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc10)
    %13 = tt.load %12 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = arith.cmpf ogt, %cst_1, %4 : tensor<1x64xf32, #blocked> loc(#loc46)
    %15 = arith.select %14, %cst_1, %4 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc47)
    %16 = arith.extsi %1 : tensor<1x64xi32, #blocked> to tensor<1x64xi64, #blocked> loc(#loc15)
    %17 = arith.cmpi sge, %16, %cst_2 : tensor<1x64xi64, #blocked> loc(#loc15)
    %18 = tt.load %9, %17, %cst_1 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = arith.subf %7, %18 : tensor<1x64xf32, #blocked> loc(#loc17)
    %20 = tt.load %12, %17, %cst_1 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = arith.addf %7, %20 : tensor<1x64xf32, #blocked> loc(#loc19)
    %22 = arith.divf %19, %21 : tensor<1x64xf32, #blocked> loc(#loc20)
    %23 = arith.subf %cst_0, %22 : tensor<1x64xf32, #blocked> loc(#loc21)
    %24 = arith.addi %1, %cst : tensor<1x64xi32, #blocked> loc(#loc22)
    %25 = tt.addptr %8, %24 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc23)
    %26 = tt.load %25, %17, %cst_1 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc24)
    %27 = arith.subf %7, %26 : tensor<1x64xf32, #blocked> loc(#loc25)
    %28 = tt.addptr %11, %24 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc26)
    %29 = tt.load %28, %17, %cst_1 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc27)
    %30 = arith.addf %7, %29 : tensor<1x64xf32, #blocked> loc(#loc28)
    %31 = arith.divf %27, %30 : tensor<1x64xf32, #blocked> loc(#loc29)
    %32 = arith.subf %cst_0, %31 : tensor<1x64xf32, #blocked> loc(#loc30)
    %33 = arith.subf %23, %32 : tensor<1x64xf32, #blocked> loc(#loc31)
    %34 = arith.subf %7, %10 : tensor<1x64xf32, #blocked> loc(#loc32)
    %35 = arith.addf %7, %13 : tensor<1x64xf32, #blocked> loc(#loc33)
    %36 = arith.divf %34, %35 : tensor<1x64xf32, #blocked> loc(#loc34)
    %37 = arith.subf %cst_0, %36 : tensor<1x64xf32, #blocked> loc(#loc35)
    %38 = arith.select %17, %33, %37 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc48)
    %39 = arith.mulf %15, %38 : tensor<1x64xf32, #blocked> loc(#loc38)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc40)), %arg7: f32 loc(callsite(#loc1 at #loc40))):
      %45 = arith.addf %arg6, %arg7 : f32 loc(#loc52)
      tt.reduce.return %45 : f32 loc(#loc49)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc49)
    %41 = triton_gpu.convert_layout %40 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc42)
    %42 = tt.expand_dims %41 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc42)
    %43 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %44 = tt.splat %43 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc44)
    tt.store %44, %42 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":26:34)
#loc3 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":30:30)
#loc4 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":30:35)
#loc5 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":31:34)
#loc6 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":31:19)
#loc7 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":32:33)
#loc8 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":35:31)
#loc9 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":35:36)
#loc10 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":36:31)
#loc11 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":36:36)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":38:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":41:19)
#loc16 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":42:70)
#loc17 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":43:18)
#loc18 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":44:71)
#loc19 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":45:19)
#loc20 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":46:19)
#loc21 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":48:20)
#loc22 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":49:54)
#loc23 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":49:31)
#loc24 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":49:78)
#loc25 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":50:19)
#loc26 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":51:31)
#loc27 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":51:78)
#loc28 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":52:19)
#loc29 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":53:20)
#loc30 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":54:20)
#loc31 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":55:20)
#loc32 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":58:20)
#loc33 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":59:20)
#loc34 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":60:20)
#loc35 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":62:20)
#loc36 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":63:34)
#loc37 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":57:34)
#loc38 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":64:19)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc42 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":66:29)
#loc43 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":67:25)
#loc44 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":67:68)
#loc45 = loc("inductor_cache/ik/cikxj4dk5on3psenltlynd2irvirhj3qqaor6qnykggi2nelm25u.py":67:4)
#loc46 = loc(callsite(#loc12 at #loc13))
#loc47 = loc(callsite(#loc14 at #loc13))
#loc48 = loc(fused[#loc36, #loc37])
#loc49 = loc(callsite(#loc39 at #loc40))
#loc51 = loc(callsite(#loc41 at #loc39))
#loc52 = loc(callsite(#loc51 at #loc40))
