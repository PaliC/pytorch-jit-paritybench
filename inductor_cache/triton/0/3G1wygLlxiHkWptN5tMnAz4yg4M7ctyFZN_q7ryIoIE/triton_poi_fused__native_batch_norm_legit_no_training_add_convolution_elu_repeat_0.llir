; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %.frozen = freeze i32 %14, !dbg !14
  %15 = sdiv i32 %.frozen, 64, !dbg !14
  %16 = srem i32 %15, 16, !dbg !15
  %17 = mul i32 %15, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sdiv i32 %14, 1024, !dbg !17
  %19 = sext i32 %14 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !18
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #3, !dbg !19
  %22 = bitcast i32 %21 to float, !dbg !19
  %23 = sext i32 %16 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %23, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %23, !dbg !22
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #3, !dbg !23
  %29 = bitcast i32 %28 to float, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !24
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !25
  %32 = bitcast i32 %31 to float, !dbg !25
  %33 = getelementptr float, ptr addrspace(1) %5, i64 %23, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #3, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %6, i64 %23, !dbg !28
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #3, !dbg !29
  %38 = bitcast i32 %37 to float, !dbg !29
  %.lhs.trunc = trunc nsw i32 %16 to i8, !dbg !30
  %39 = srem i8 %.lhs.trunc, 4, !dbg !30
  %.sext = sext i8 %39 to i32, !dbg !30
  %40 = shl nsw i32 %.sext, 6, !dbg !31
  %41 = shl nsw i32 %18, 8, !dbg !32
  %42 = add nsw i32 %41, %.decomposed, !dbg !33
  %43 = add nsw i32 %42, %40, !dbg !34
  %44 = sext i32 %43 to i64, !dbg !35
  %45 = getelementptr float, ptr addrspace(1) %7, i64 %44, !dbg !35
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #3, !dbg !36
  %47 = bitcast i32 %46 to float, !dbg !36
  %48 = fadd float %22, %26, !dbg !37
  %49 = fsub float %48, %29, !dbg !38
  %50 = fadd float %32, 0x3EE4F8B580000000, !dbg !39
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i = icmp eq i32 %51, 0, !dbg !40
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !40
  %.not1.i = icmp eq i32 %52, 0, !dbg !40
  br i1 %.not.i, label %58, label %53, !dbg !40

53:                                               ; preds = %9
  br i1 %.not1.i, label %56, label %54, !dbg !40

54:                                               ; preds = %53
  %55 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %50) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

56:                                               ; preds = %53
  %57 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %50) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

58:                                               ; preds = %9
  br i1 %.not1.i, label %61, label %59, !dbg !40

59:                                               ; preds = %58
  %60 = tail call float @llvm.nvvm.sqrt.rn.f(float %50) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

61:                                               ; preds = %58
  %62 = tail call float @llvm.nvvm.sqrt.approx.f(float %50) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

__nv_sqrtf.exit:                                  ; preds = %54, %56, %59, %61
  %.0.i = phi float [ %55, %54 ], [ %57, %56 ], [ %60, %59 ], [ %62, %61 ], !dbg !40
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !41
  %64 = fmul float %49, %63, !dbg !42
  %65 = fmul float %64, %35, !dbg !43
  %66 = fadd float %65, %38, !dbg !44
  %67 = fadd float %66, %47, !dbg !45
  %68 = fmul float %67, 0x3FF7154760000000, !dbg !46
  %69 = tail call float @llvm.nvvm.round.f(float %68) #3, !dbg !46
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i1 = icmp eq i32 %70, 0, !dbg !46
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #3, !dbg !46
  %72 = tail call float @llvm.nvvm.fabs.f(float %67) #3, !dbg !46
  %.03.i = select i1 %.not.i1, float %72, float %71, !dbg !46
  %73 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !46
  %t.0.i = select i1 %73, float 0.000000e+00, float %69, !dbg !46
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %76 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !46
  %j.0.i = select i1 %76, float 1.270000e+02, float %t.0.i, !dbg !46
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i = icmp eq i32 %82, 0, !dbg !46
  br i1 %.not8.i, label %85, label %83, !dbg !46

83:                                               ; preds = %__nv_sqrtf.exit
  %84 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !46
  br label %__nv_expm1f.exit, !dbg !46

85:                                               ; preds = %__nv_sqrtf.exit
  %86 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !46
  br label %__nv_expm1f.exit, !dbg !46

__nv_expm1f.exit:                                 ; preds = %83, %85
  %.0.i2 = phi float [ %84, %83 ], [ %86, %85 ], !dbg !46
  %87 = fcmp ogt float %67, 0.000000e+00, !dbg !47
  %.not7.i = icmp eq i32 %81, 0, !dbg !46
  %.not6.i = icmp eq i32 %80, 0, !dbg !46
  %.not5.i = icmp eq i32 %79, 0, !dbg !46
  %.not4.i = icmp eq i32 %78, 0, !dbg !46
  %.not3.i = icmp eq i32 %77, 0, !dbg !46
  %.not2.i3 = icmp eq i32 %75, 0, !dbg !46
  %88 = fneg float %t.0.i, !dbg !46
  %.not1.i4 = icmp eq i32 %74, 0, !dbg !46
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x3FE62E4000000000, float %67) #3, !dbg !46
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x3FE62E4000000000, float %67) #3, !dbg !46
  %.04.i = select i1 %.not1.i4, float %89, float %90, !dbg !46
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !46
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !46
  %.05.i = select i1 %.not2.i3, float %91, float %92, !dbg !46
  %93 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !46
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !46
  %.07.i = select i1 %.not3.i, float %93, float %94, !dbg !46
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !46
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !46
  %.08.i = select i1 %.not4.i, float %95, float %96, !dbg !46
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !46
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !46
  %.09.i = select i1 %.not5.i, float %97, float %98, !dbg !46
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %.06.i = select i1 %.not6.i, float %99, float %100, !dbg !46
  %101 = fmul float %.05.i, %.06.i, !dbg !46
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %101, float %.05.i, float %.05.i) #3, !dbg !46
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %101, float %.05.i, float %.05.i) #3, !dbg !46
  %.01.i = select i1 %.not7.i, float %102, float %103, !dbg !46
  %104 = fadd float %.0.i2, -1.000000e+00, !dbg !46
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not9.i = icmp eq i32 %105, 0, !dbg !46
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i2, float %104) #3, !dbg !46
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i2, float %104) #3, !dbg !46
  %.02.i = select i1 %.not9.i, float %107, float %106, !dbg !46
  %108 = fadd float %.02.i, %.02.i, !dbg !46
  %u.0.i = select i1 %76, float %108, float %.02.i, !dbg !46
  %109 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !46
  %u.1.i = select i1 %109, float 0x7FF0000000000000, float %u.0.i, !dbg !46
  %110 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !46
  %u.2.i = select i1 %110, float -1.000000e+00, float %u.1.i, !dbg !46
  %111 = fcmp oeq float %67, 0.000000e+00, !dbg !46
  %112 = fadd float %67, %67, !dbg !46
  %u.3.i = select i1 %111, float %112, float %u.2.i, !dbg !46
  %113 = select i1 %87, float %67, float %u.3.i, !dbg !48
  %114 = bitcast float %48 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %114, ptr addrspace(1) %20, i1 true) #3, !dbg !49
  %115 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !50
  %116 = bitcast float %113 to i32, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %116, ptr addrspace(1) %115, i1 true) #3, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py", directory: "inductor_cache/nz")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 35, scope: !7)
!26 = !DILocation(line: 32, column: 31, scope: !7)
!27 = !DILocation(line: 32, column: 36, scope: !7)
!28 = !DILocation(line: 33, column: 31, scope: !7)
!29 = !DILocation(line: 33, column: 36, scope: !7)
!30 = !DILocation(line: 34, column: 46, scope: !7)
!31 = !DILocation(line: 34, column: 41, scope: !7)
!32 = !DILocation(line: 34, column: 56, scope: !7)
!33 = !DILocation(line: 34, column: 36, scope: !7)
!34 = !DILocation(line: 34, column: 52, scope: !7)
!35 = !DILocation(line: 34, column: 31, scope: !7)
!36 = !DILocation(line: 34, column: 61, scope: !7)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 36, column: 18, scope: !7)
!39 = !DILocation(line: 38, column: 18, scope: !7)
!40 = !DILocation(line: 39, column: 26, scope: !7)
!41 = !DILocation(line: 41, column: 19, scope: !7)
!42 = !DILocation(line: 44, column: 19, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 28, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 35, scope: !7)
!49 = !DILocation(line: 54, column: 39, scope: !7)
!50 = !DILocation(line: 55, column: 28, scope: !7)
!51 = !DILocation(line: 55, column: 40, scope: !7)
!52 = !DILocation(line: 55, column: 4, scope: !7)
