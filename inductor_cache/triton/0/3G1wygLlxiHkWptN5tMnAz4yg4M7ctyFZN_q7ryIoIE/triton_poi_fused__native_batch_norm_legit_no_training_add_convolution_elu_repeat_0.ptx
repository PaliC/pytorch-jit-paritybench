//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<37>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:21:33
	shl.b32 	%r14, %r1, 7;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_2];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_3];
	.loc	1 22 36                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:22:36
	mov.u32 	%r15, %tid.x;
	and.b32  	%r16, %r15, 127;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_4];
	.loc	1 22 23                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:22:23
	or.b32  	%r17, %r14, %r16;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_5];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_6];
	.loc	1 25 21                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:25:21
	shr.s32 	%r19, %r17, 31;
	shr.u32 	%r20, %r19, 26;
	add.s32 	%r21, %r17, %r20;
	shr.s32 	%r22, %r21, 6;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0_param_7];
	.loc	1 25 27                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:25:27
	shr.u32 	%r23, %r22, 28;
	add.s32 	%r24, %r22, %r23;
	and.b32  	%r25, %r24, -16;
	sub.s32 	%r26, %r22, %r25;
	.loc	1 26 19                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:26:19
	and.b32  	%r27, %r21, -64;
	sub.s32 	%r28, %r17, %r27;
	.loc	1 27 19                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:27:19
	bfe.s32 	%r29, %r1, 24, 1;
	shr.u32 	%r30, %r29, 22;
	add.s32 	%r31, %r17, %r30;
	shr.s32 	%r32, %r31, 10;
	.loc	1 28 34                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:28:34
	mul.wide.s32 	%rd18, %r17, 4;
	add.s64 	%rd1, %rd10, %rd18;
	mov.pred 	%p1, -1;
	.loc	1 28 39                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:28:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 29 30                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:29:30
	mul.wide.s32 	%rd19, %r26, 4;
	add.s64 	%rd2, %rd12, %rd19;
	.loc	1 29 35                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:29:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 30 30                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:30:30
	add.s64 	%rd3, %rd13, %rd19;
	.loc	1 30 35                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:30:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 31 30                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:31:30
	add.s64 	%rd4, %rd14, %rd19;
	.loc	1 31 35                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:31:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 32 31                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:32:31
	add.s64 	%rd5, %rd15, %rd19;
	.loc	1 32 36                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:32:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 33 31                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:33:31
	add.s64 	%rd6, %rd16, %rd19;
	.loc	1 33 36                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:33:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 34 46                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:46
	cvt.u16.u32 	%rs1, %r26;
	cvt.s8.s32 	%rs2, %r26;
	shr.u16 	%rs3, %rs2, 13;
	and.b16  	%rs4, %rs3, 3;
	add.s16 	%rs5, %rs1, %rs4;
	and.b16  	%rs6, %rs5, 252;
	sub.s16 	%rs7, %rs1, %rs6;
	.loc	1 34 41                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:41
	cvt.s16.s8 	%rs8, %rs7;
	mul.wide.s16 	%r33, %rs8, 64;
	.loc	1 34 56                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:56
	shl.b32 	%r34, %r32, 8;
	.loc	1 34 36                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:36
	add.s32 	%r35, %r34, %r28;
	.loc	1 34 52                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:52
	add.s32 	%r36, %r35, %r33;
	.loc	1 34 31                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:31
	mul.wide.s32 	%rd20, %r36, 4;
	add.s64 	%rd7, %rd17, %rd20;
	.loc	1 34 61                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:34:61
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 35 18                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:35:18
	add.f32 	%f8, %f1, %f2;
	.loc	1 36 18                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:36:18
	sub.f32 	%f9, %f8, %f3;
	.loc	1 38 18                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:38:18
	add.f32 	%f10, %f4, 0f3727C5AC;
	.loc	1 39 26                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:39:26
	sqrt.approx.ftz.f32 	%f11, %f10;
	.loc	1 41 19                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:41:19
	mov.b32 	%r11, %f11;
	mov.b32 	%r10, 1065353216;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f12, %r9;
	.loc	1 44 19                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:44:19
	mul.f32 	%f13, %f9, %f12;
	.loc	1 46 20                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:46:20
	fma.rn.f32 	%f14, %f13, %f5, %f6;
	.loc	1 47 20                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:47:20
	add.f32 	%f15, %f14, %f7;
	.loc	1 51 28                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:51:28
	mul.f32 	%f16, %f15, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f17, %f16;
	abs.ftz.f32 	%f18, %f15;
	setp.lt.f32 	%p10, %f18, 0f3ED1EB85;
	selp.f32 	%f19, 0f00000000, %f17, %p10;
	setp.eq.f32 	%p11, %f19, 0f43000000;
	selp.f32 	%f20, 0f42FE0000, %f19, %p11;
	ex2.approx.ftz.f32 	%f21, %f20;
	.loc	1 49 20                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:49:20
	setp.gt.f32 	%p12, %f15, 0f00000000;
	.loc	1 51 28                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:51:28
	neg.f32 	%f22, %f19;
	mov.f32 	%f23, 0f3F317200;
	fma.rn.ftz.f32 	%f24, %f22, %f23, %f15;
	mov.f32 	%f25, 0f35BFBE8E;
	fma.rn.ftz.f32 	%f26, %f22, %f25, %f24;
	mov.f32 	%f27, 0f3C095663;
	mov.f32 	%f28, 0f3AB5EBE6;
	fma.rn.ftz.f32 	%f29, %f28, %f26, %f27;
	mov.f32 	%f30, 0f3D2AABE3;
	fma.rn.ftz.f32 	%f31, %f29, %f26, %f30;
	mov.f32 	%f32, 0f3E2AA9F6;
	fma.rn.ftz.f32 	%f33, %f31, %f26, %f32;
	mov.f32 	%f34, 0f3EFFFFFE;
	fma.rn.ftz.f32 	%f35, %f33, %f26, %f34;
	mul.f32 	%f36, %f26, %f35;
	fma.rn.ftz.f32 	%f37, %f36, %f26, %f26;
	add.f32 	%f38, %f21, 0fBF800000;
	fma.rn.ftz.f32 	%f39, %f37, %f21, %f38;
	add.f32 	%f40, %f39, %f39;
	selp.f32 	%f41, %f40, %f39, %p11;
	setp.gt.f32 	%p13, %f20, 0f43000000;
	selp.f32 	%f42, 0f7F800000, %f41, %p13;
	setp.lt.f32 	%p14, %f20, 0fC1C80000;
	selp.f32 	%f43, 0fBF800000, %f42, %p14;
	setp.eq.f32 	%p15, %f15, 0f00000000;
	add.f32 	%f44, %f15, %f15;
	selp.f32 	%f45, %f44, %f43, %p15;
	.loc	1 53 35                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:53:35
	selp.f32 	%f46, %f15, %f45, %p12;
	.loc	1 54 39                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:54:39
	mov.b32 	%r12, %f8;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r12 };
	// end inline asm
	.loc	1 55 28                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:55:28
	add.s64 	%rd9, %rd11, %rd18;
	.loc	1 55 40                         // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:55:40
	mov.b32 	%r13, %f46;
	// begin inline asm
	@%p1 st.global.b32 [ %rd9 + 0 ], { %r13 };
	// end inline asm
	.loc	1 55 4                          // cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nz/cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 122
.b8 116
.b8 108
.b8 117
.b8 100
.b8 101
.b8 51
.b8 111
.b8 108
.b8 111
.b8 118
.b8 122
.b8 50
.b8 118
.b8 98
.b8 103
.b8 120
.b8 112
.b8 115
.b8 115
.b8 114
.b8 54
.b8 108
.b8 51
.b8 54
.b8 111
.b8 115
.b8 121
.b8 105
.b8 119
.b8 55
.b8 110
.b8 97
.b8 121
.b8 119
.b8 119
.b8 51
.b8 98
.b8 50
.b8 54
.b8 116
.b8 119
.b8 109
.b8 115
.b8 105
.b8 108
.b8 55
.b8 97
.b8 122
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
