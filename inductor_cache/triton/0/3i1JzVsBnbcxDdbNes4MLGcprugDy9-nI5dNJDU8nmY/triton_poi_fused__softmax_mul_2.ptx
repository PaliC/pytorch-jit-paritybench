//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_mul_2 // -- Begin function triton_poi_fused__softmax_mul_2
                                        // @triton_poi_fused__softmax_mul_2
.visible .entry triton_poi_fused__softmax_mul_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mul_2_param_5,
	.param .u32 triton_poi_fused__softmax_mul_2_param_6
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<67>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused__softmax_mul_2_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__softmax_mul_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:21:33
	shl.b32 	%r20, %r1, 6;
	ld.param.u64 	%rd14, [triton_poi_fused__softmax_mul_2_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused__softmax_mul_2_param_3];
	.loc	1 22 36                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:22:36
	mov.u32 	%r21, %tid.x;
	shl.b32 	%r22, %r21, 1;
	ld.param.u64 	%rd16, [triton_poi_fused__softmax_mul_2_param_4];
	and.b32  	%r23, %r22, 62;
	ld.param.u64 	%rd17, [triton_poi_fused__softmax_mul_2_param_5];
	.loc	1 22 23                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:22:23
	or.b32  	%r24, %r20, %r23;
	or.b32  	%r25, %r24, 1;
	.loc	1 23 21                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:23:21
	setp.lt.s32 	%p1, %r24, 64;
	.loc	1 25 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:25:19
	bfe.s32 	%r26, %r1, 25, 1;
	shr.u32 	%r27, %r26, 30;
	add.s32 	%r28, %r24, %r27;
	and.b32  	%r29, %r28, -4;
	sub.s32 	%r30, %r24, %r29;
	add.s32 	%r31, %r25, %r27;
	and.b32  	%r32, %r31, -4;
	sub.s32 	%r33, %r25, %r32;
	.loc	1 26 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:26:19
	shr.u32 	%r34, %r26, 28;
	add.s32 	%r35, %r24, %r34;
	.loc	1 27 32                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:27:32
	mul.lo.s32 	%r36, %r24, 3;
	add.s32 	%r37, %r36, 3;
	.loc	1 27 30                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:27:30
	mul.wide.s32 	%rd18, %r36, 4;
	add.s64 	%rd1, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r37, 4;
	add.s64 	%rd2, %rd12, %rd19;
	.loc	1 27 37                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:27:37
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r3;
	.loc	1 28 32                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:28:32
	mul.lo.s32 	%r38, %r30, 3;
	mul.lo.s32 	%r39, %r33, 3;
	.loc	1 28 30                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:28:30
	mul.wide.s32 	%rd20, %r38, 4;
	add.s64 	%rd3, %rd13, %rd20;
	mul.wide.s32 	%rd21, %r39, 4;
	add.s64 	%rd4, %rd13, %rd21;
	.loc	1 28 37                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:28:37
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r5;
	.loc	1 29 38                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:29:38
	and.b32  	%r40, %r35, -16;
	.loc	1 29 35                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:29:35
	add.s32 	%r41, %r40, %r30;
	.loc	1 29 30                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:29:30
	mul.wide.s32 	%rd22, %r41, 4;
	add.s64 	%rd5, %rd14, %rd22;
	.loc	1 29 43                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:29:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r6;
	mov.b32 	%f22, %r7;
	.loc	1 30 39                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:30:39
	add.s32 	%r42, %r41, 4;
	.loc	1 30 30                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:30:30
	mul.wide.s32 	%rd23, %r42, 4;
	add.s64 	%rd6, %rd14, %rd23;
	.loc	1 30 47                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:30:47
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r8;
	mov.b32 	%f24, %r9;
	.loc	1 31 40                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:31:40
	add.s32 	%r43, %r41, 8;
	.loc	1 31 31                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:31:31
	mul.wide.s32 	%rd24, %r43, 4;
	add.s64 	%rd7, %rd14, %rd24;
	.loc	1 31 48                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:31:48
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r10;
	mov.b32 	%f26, %r11;
	.loc	1 32 41                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:32:41
	add.s32 	%r44, %r41, 12;
	.loc	1 32 31                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:32:31
	mul.wide.s32 	%rd25, %r44, 4;
	add.s64 	%rd8, %rd14, %rd25;
	.loc	1 32 49                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:32:49
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r12;
	mov.b32 	%f28, %r13;
	.loc	1 33 18                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:33:18
	add.f32 	%f29, %f17, %f19;
	add.f32 	%f30, %f18, %f20;
	.loc	1 36 18                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:36:18
	mul.f32 	%f31, %f29, %f21;
	mul.f32 	%f32, %f30, %f22;
	.loc	1 37 18                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:37:18
	mul.f32 	%f33, %f29, %f23;
	mul.f32 	%f34, %f30, %f24;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p12, %f31, %f33;
	setp.gt.f32 	%p13, %f32, %f34;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p14, %f31, %f31;
	setp.nan.f32 	%p15, %f32, %f32;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, %f31, %f33, %p12;
	selp.f32 	%f36, %f31, %f35, %p14;
	selp.f32 	%f37, %f32, %f34, %p13;
	selp.f32 	%f38, %f32, %f37, %p15;
$L__tmp2:
	.loc	1 39 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:39:19
	mul.f32 	%f39, %f29, %f25;
	mul.f32 	%f40, %f30, %f26;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p16, %f36, %f39;
	setp.gt.f32 	%p17, %f38, %f40;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p18, %f36, %f36;
	setp.nan.f32 	%p19, %f38, %f38;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f41, %f36, %f39, %p18;
	selp.f32 	%f42, %f36, %f41, %p16;
	selp.f32 	%f43, %f38, %f40, %p19;
	selp.f32 	%f44, %f38, %f43, %p17;
$L__tmp4:
	.loc	1 41 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:41:19
	mul.f32 	%f45, %f29, %f27;
	mul.f32 	%f46, %f30, %f28;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p20, %f42, %f45;
	setp.gt.f32 	%p21, %f44, %f46;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p22, %f42, %f42;
	setp.nan.f32 	%p23, %f44, %f44;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f47, %f42, %f45, %p22;
	selp.f32 	%f48, %f42, %f47, %p20;
	selp.f32 	%f49, %f44, %f46, %p23;
	selp.f32 	%f50, %f44, %f49, %p21;
$L__tmp6:
	.loc	1 43 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:43:19
	neg.f32 	%f51, %f48;
	fma.rn.f32 	%f52, %f29, %f21, %f51;
	neg.f32 	%f53, %f50;
	fma.rn.f32 	%f54, %f30, %f22, %f53;
	.loc	1 44 24                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:44:24
	mul.f32 	%f2, %f52, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f54, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 45 19                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:45:19
	fma.rn.f32 	%f55, %f29, %f23, %f51;
	fma.rn.f32 	%f56, %f30, %f24, %f53;
	.loc	1 46 24                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:46:24
	mul.f32 	%f6, %f55, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f56, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	1 47 20                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:47:20
	add.f32 	%f57, %f1, %f5;
	add.f32 	%f58, %f3, %f7;
	.loc	1 48 20                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:48:20
	fma.rn.f32 	%f59, %f29, %f25, %f51;
	fma.rn.f32 	%f60, %f30, %f26, %f53;
	.loc	1 49 24                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:49:24
	mul.f32 	%f10, %f59, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f60, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	1 50 20                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:50:20
	add.f32 	%f61, %f57, %f9;
	add.f32 	%f62, %f58, %f11;
	.loc	1 51 20                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:51:20
	fma.rn.f32 	%f63, %f29, %f27, %f51;
	fma.rn.f32 	%f64, %f30, %f28, %f53;
	.loc	1 52 24                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:52:24
	mul.f32 	%f14, %f63, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f64, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	1 53 20                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:53:20
	add.f32 	%f65, %f61, %f13;
	add.f32 	%f66, %f62, %f15;
	.loc	1 54 25                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:54:25
	mul.wide.s32 	%rd26, %r24, 4;
	add.s64 	%rd9, %rd15, %rd26;
	.loc	1 54 36                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:54:36
	mov.b32 	%r14, %f29;
	mov.b32 	%r15, %f30;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 55 25                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:55:25
	add.s64 	%rd10, %rd16, %rd26;
	.loc	1 55 37                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:55:37
	mov.b32 	%r16, %f48;
	mov.b32 	%r17, %f50;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 56 25                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:56:25
	add.s64 	%rd11, %rd17, %rd26;
	.loc	1 56 37                         // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:56:37
	mov.b32 	%r18, %f65;
	mov.b32 	%r19, %f66;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r18, %r19 };
	// end inline asm
	.loc	1 56 4                          // c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py:56:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5a/c5aw7rd3qn2yrpzuifbinjdabsd4nfh7zrben3i7p7i5g5tu3j6i.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 224                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 97
.b8 119
.b8 55
.b8 114
.b8 100
.b8 51
.b8 113
.b8 110
.b8 50
.b8 121
.b8 114
.b8 112
.b8 122
.b8 117
.b8 105
.b8 102
.b8 98
.b8 105
.b8 110
.b8 106
.b8 100
.b8 97
.b8 98
.b8 115
.b8 100
.b8 52
.b8 110
.b8 102
.b8 104
.b8 55
.b8 122
.b8 114
.b8 98
.b8 101
.b8 110
.b8 51
.b8 105
.b8 55
.b8 112
.b8 55
.b8 105
.b8 53
.b8 103
.b8 53
.b8 116
.b8 117
.b8 51
.b8 106
.b8 54
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x22 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
