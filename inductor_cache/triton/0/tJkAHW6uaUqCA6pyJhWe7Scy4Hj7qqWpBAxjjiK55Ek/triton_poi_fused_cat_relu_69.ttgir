#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [2, 2], order = [1, 0]}>
#loc = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_relu_69(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0), %arg13: i32 loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<4x256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-03> : tensor<4x256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<4x256xf32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<4224> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<4x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1056> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<176> : tensor<1x256xi64, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<176> : tensor<4x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<704> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<352> : tensor<1x256xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-176> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<528> : tensor<1x256xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-352> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<704> : tensor<1x256xi64, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<-528> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<880> : tensor<1x256xi64, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<-704> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<-880> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<1056> : tensor<4x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x256xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<1x256xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<1x256xi32, #blocked> loc(#loc6)
    %7 = tt.get_program_id x : i32 loc(#loc7)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc8)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc9)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<4x1xi32, #blocked> loc(#loc9)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32, #blocked> loc(#loc10)
    %12 = arith.addi %11, %10 : tensor<4x1xi32, #blocked> loc(#loc10)
    %13 = arith.cmpi slt, %12, %cst_3 : tensor<4x1xi32, #blocked> loc(#loc11)
    %14 = arith.remsi %5, %cst_4 : tensor<1x256xi32, #blocked> loc(#loc12)
    %15 = arith.divsi %5, %cst_4 : tensor<1x256xi32, #blocked> loc(#loc13)
    %16 = arith.extsi %14 : tensor<1x256xi32, #blocked> to tensor<1x256xi64, #blocked> loc(#loc14)
    %17 = arith.cmpi slt, %16, %cst_5 : tensor<1x256xi64, #blocked> loc(#loc14)
    %18 = arith.muli %12, %cst_6 : tensor<4x1xi32, #blocked> loc(#loc15)
    %19 = arith.muli %15, %cst_7 : tensor<1x256xi32, #blocked> loc(#loc16)
    %20 = tt.broadcast %18 : tensor<4x1xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc17)
    %21 = tt.broadcast %19 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc17)
    %22 = arith.addi %20, %21 : tensor<4x256xi32, #blocked> loc(#loc17)
    %23 = tt.broadcast %14 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc18)
    %24 = arith.addi %22, %23 : tensor<4x256xi32, #blocked> loc(#loc18)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc19)
    %26 = tt.addptr %25, %24 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc19)
    %27 = tt.broadcast %17 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc20)
    %28 = tt.broadcast %13 : tensor<4x1xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc20)
    %29 = arith.andi %27, %28 : tensor<4x256xi1, #blocked> loc(#loc20)
    %30 = tt.broadcast %6 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc21)
    %31 = arith.andi %29, %30 : tensor<4x256xi1, #blocked> loc(#loc21)
    %32 = tt.load %26, %31, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %33 = arith.cmpi sge, %16, %cst_5 : tensor<1x256xi64, #blocked> loc(#loc23)
    %34 = arith.cmpi slt, %16, %cst_8 : tensor<1x256xi64, #blocked> loc(#loc24)
    %35 = arith.andi %33, %34 : tensor<1x256xi1, #blocked> loc(#loc25)
    %36 = arith.addi %14, %cst_9 : tensor<1x256xi32, #blocked> loc(#loc26)
    %37 = tt.broadcast %36 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc27)
    %38 = arith.addi %22, %37 : tensor<4x256xi32, #blocked> loc(#loc27)
    %39 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc28)
    %40 = tt.addptr %39, %38 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc28)
    %41 = tt.broadcast %35 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc29)
    %42 = arith.andi %41, %28 : tensor<4x256xi1, #blocked> loc(#loc29)
    %43 = arith.andi %42, %30 : tensor<4x256xi1, #blocked> loc(#loc30)
    %44 = tt.load %40, %43, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc31)
    %45 = arith.cmpi sge, %16, %cst_8 : tensor<1x256xi64, #blocked> loc(#loc32)
    %46 = arith.cmpi slt, %16, %cst_10 : tensor<1x256xi64, #blocked> loc(#loc33)
    %47 = arith.andi %45, %46 : tensor<1x256xi1, #blocked> loc(#loc34)
    %48 = arith.addi %14, %cst_11 : tensor<1x256xi32, #blocked> loc(#loc35)
    %49 = tt.broadcast %48 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc36)
    %50 = arith.addi %22, %49 : tensor<4x256xi32, #blocked> loc(#loc36)
    %51 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc37)
    %52 = tt.addptr %51, %50 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc37)
    %53 = tt.broadcast %47 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc38)
    %54 = arith.andi %53, %28 : tensor<4x256xi1, #blocked> loc(#loc38)
    %55 = arith.andi %54, %30 : tensor<4x256xi1, #blocked> loc(#loc39)
    %56 = tt.load %52, %55, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc40)
    %57 = arith.cmpi sge, %16, %cst_10 : tensor<1x256xi64, #blocked> loc(#loc41)
    %58 = arith.cmpi slt, %16, %cst_12 : tensor<1x256xi64, #blocked> loc(#loc42)
    %59 = arith.andi %57, %58 : tensor<1x256xi1, #blocked> loc(#loc43)
    %60 = arith.addi %14, %cst_13 : tensor<1x256xi32, #blocked> loc(#loc44)
    %61 = tt.broadcast %60 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc45)
    %62 = arith.addi %22, %61 : tensor<4x256xi32, #blocked> loc(#loc45)
    %63 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc46)
    %64 = tt.addptr %63, %62 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc46)
    %65 = tt.broadcast %59 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc47)
    %66 = arith.andi %65, %28 : tensor<4x256xi1, #blocked> loc(#loc47)
    %67 = arith.andi %66, %30 : tensor<4x256xi1, #blocked> loc(#loc48)
    %68 = tt.load %64, %67, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc49)
    %69 = tt.addptr %25, %62 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc50)
    %70 = tt.load %69, %67, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc51)
    %71 = arith.addf %68, %70 : tensor<4x256xf32, #blocked> loc(#loc52)
    %72 = arith.cmpi sge, %16, %cst_12 : tensor<1x256xi64, #blocked> loc(#loc53)
    %73 = arith.cmpi slt, %16, %cst_14 : tensor<1x256xi64, #blocked> loc(#loc54)
    %74 = arith.andi %72, %73 : tensor<1x256xi1, #blocked> loc(#loc55)
    %75 = arith.addi %14, %cst_15 : tensor<1x256xi32, #blocked> loc(#loc56)
    %76 = tt.broadcast %75 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc57)
    %77 = arith.addi %22, %76 : tensor<4x256xi32, #blocked> loc(#loc57)
    %78 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc58)
    %79 = tt.addptr %78, %77 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc58)
    %80 = tt.broadcast %74 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc59)
    %81 = arith.andi %80, %28 : tensor<4x256xi1, #blocked> loc(#loc59)
    %82 = arith.andi %81, %30 : tensor<4x256xi1, #blocked> loc(#loc60)
    %83 = tt.load %79, %82, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc61)
    %84 = arith.addf %83, %83 : tensor<4x256xf32, #blocked> loc(#loc62)
    %85 = arith.cmpi sge, %16, %cst_14 : tensor<1x256xi64, #blocked> loc(#loc63)
    %86 = arith.addi %14, %cst_16 : tensor<1x256xi32, #blocked> loc(#loc64)
    %87 = tt.broadcast %86 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc65)
    %88 = arith.addi %22, %87 : tensor<4x256xi32, #blocked> loc(#loc65)
    %89 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc66)
    %90 = tt.addptr %89, %88 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc66)
    %91 = tt.broadcast %85 : tensor<1x256xi1, #blocked> -> tensor<4x256xi1, #blocked> loc(#loc67)
    %92 = arith.andi %91, %28 : tensor<4x256xi1, #blocked> loc(#loc67)
    %93 = arith.andi %92, %30 : tensor<4x256xi1, #blocked> loc(#loc68)
    %94 = tt.load %90, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc69)
    %95 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc70)
    %96 = tt.addptr %95, %86 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc70)
    %97 = tt.broadcast %96 : tensor<1x256x!tt.ptr<f32>, #blocked> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc70)
    %98 = tt.load %97, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc71)
    %99 = arith.subf %94, %98 : tensor<4x256xf32, #blocked> loc(#loc72)
    %100 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc73)
    %101 = tt.addptr %100, %86 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc73)
    %102 = tt.broadcast %101 : tensor<1x256x!tt.ptr<f32>, #blocked> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc73)
    %103 = tt.load %102, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc74)
    %104 = arith.addf %103, %cst_0 : tensor<4x256xf32, #blocked> loc(#loc75)
    %105 = tt.extern_elementwise %104 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<4x256xf32, #blocked>) -> tensor<4x256xf32, #blocked> loc(#loc76)
    %106 = arith.divf %cst_1, %105 : tensor<4x256xf32, #blocked> loc(#loc77)
    %107 = arith.mulf %99, %106 : tensor<4x256xf32, #blocked> loc(#loc78)
    %108 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc79)
    %109 = tt.addptr %108, %86 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc79)
    %110 = tt.broadcast %109 : tensor<1x256x!tt.ptr<f32>, #blocked> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc79)
    %111 = tt.load %110, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc80)
    %112 = arith.mulf %107, %111 : tensor<4x256xf32, #blocked> loc(#loc81)
    %113 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc82)
    %114 = tt.addptr %113, %86 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc82)
    %115 = tt.broadcast %114 : tensor<1x256x!tt.ptr<f32>, #blocked> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc82)
    %116 = tt.load %115, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc83)
    %117 = arith.addf %112, %116 : tensor<4x256xf32, #blocked> loc(#loc84)
    %118 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc85)
    %119 = tt.addptr %118, %88 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc85)
    %120 = tt.load %119, %93, %cst evictionPolicy = evict_last : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc86)
    %121 = arith.addf %117, %120 : tensor<4x256xf32, #blocked> loc(#loc87)
    %122 = arith.select %91, %121, %cst : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc88)
    %123 = arith.select %80, %84, %122 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc107)
    %124 = arith.select %65, %71, %123 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc108)
    %125 = arith.select %53, %56, %124 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc93)
    %126 = arith.select %41, %44, %125 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc94)
    %127 = arith.select %27, %32, %126 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc95)
    %128 = arith.cmpf ogt, %cst, %127 : tensor<4x256xf32, #blocked> loc(#loc109)
    %129 = arith.select %128, %cst, %127 : tensor<4x256xi1, #blocked>, tensor<4x256xf32, #blocked> loc(#loc110)
    %130 = arith.muli %12, %cst_17 : tensor<4x1xi32, #blocked> loc(#loc99)
    %131 = tt.broadcast %130 : tensor<4x1xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc100)
    %132 = arith.addi %23, %131 : tensor<4x256xi32, #blocked> loc(#loc100)
    %133 = arith.muli %15, %cst_2 : tensor<1x256xi32, #blocked> loc(#loc101)
    %134 = tt.broadcast %133 : tensor<1x256xi32, #blocked> -> tensor<4x256xi32, #blocked> loc(#loc102)
    %135 = arith.addi %132, %134 : tensor<4x256xi32, #blocked> loc(#loc102)
    %136 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc103)
    %137 = tt.addptr %136, %135 : tensor<4x256x!tt.ptr<f32>, #blocked>, tensor<4x256xi32, #blocked> loc(#loc103)
    %138 = arith.andi %28, %30 : tensor<4x256xi1, #blocked> loc(#loc104)
    tt.store %137, %129, %138 : tensor<4x256x!tt.ptr<f32>, #blocked> loc(#loc105)
    tt.return loc(#loc106)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":22:28)
#loc3 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":22:33)
#loc4 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":23:44)
#loc5 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":23:23)
#loc6 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":24:21)
#loc7 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":25:28)
#loc8 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":25:33)
#loc9 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":26:44)
#loc10 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":26:23)
#loc11 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":27:21)
#loc12 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":28:19)
#loc13 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":30:19)
#loc14 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":36:18)
#loc15 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:34)
#loc16 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:43)
#loc17 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:39)
#loc18 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:49)
#loc19 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:30)
#loc20 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:62)
#loc21 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:70)
#loc22 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":37:55)
#loc23 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":38:19)
#loc24 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":40:18)
#loc25 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":41:18)
#loc26 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:59)
#loc27 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:50)
#loc28 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:31)
#loc29 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:72)
#loc30 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:80)
#loc31 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":42:65)
#loc32 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":43:20)
#loc33 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":45:19)
#loc34 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":46:20)
#loc35 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:59)
#loc36 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:50)
#loc37 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:31)
#loc38 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:73)
#loc39 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:81)
#loc40 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":47:65)
#loc41 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":48:20)
#loc42 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":50:19)
#loc43 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":51:20)
#loc44 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:59)
#loc45 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:50)
#loc46 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:31)
#loc47 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:73)
#loc48 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:81)
#loc49 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":52:65)
#loc50 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":53:31)
#loc51 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":53:65)
#loc52 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":54:20)
#loc53 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":57:20)
#loc54 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":59:19)
#loc55 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":60:20)
#loc56 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:59)
#loc57 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:50)
#loc58 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:31)
#loc59 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:73)
#loc60 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:81)
#loc61 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":61:65)
#loc62 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":62:20)
#loc63 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":65:20)
#loc64 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:59)
#loc65 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:50)
#loc66 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:31)
#loc67 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:73)
#loc68 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:81)
#loc69 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":68:65)
#loc70 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":69:31)
#loc71 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":69:80)
#loc72 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":70:20)
#loc73 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":71:31)
#loc74 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":71:80)
#loc75 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":73:20)
#loc76 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":74:27)
#loc77 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":76:20)
#loc78 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":79:20)
#loc79 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":80:31)
#loc80 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":80:80)
#loc81 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":81:20)
#loc82 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":82:31)
#loc83 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":82:80)
#loc84 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":83:20)
#loc85 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":84:32)
#loc86 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":84:66)
#loc87 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":85:20)
#loc88 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":87:35)
#loc89 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":88:35)
#loc90 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":64:35)
#loc91 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":89:35)
#loc92 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":56:35)
#loc93 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":90:35)
#loc94 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":91:34)
#loc95 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":92:33)
#loc96 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc97 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":94:42)
#loc98 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc99 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:35)
#loc100 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:30)
#loc101 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:45)
#loc102 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:40)
#loc103 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:25)
#loc104 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:65)
#loc105 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:57)
#loc106 = loc("inductor_cache/gi/cgizacpeirqiao7npwqaacsndnktyubhe7wmkisi5bzquxqg43hk.py":95:4)
#loc107 = loc(fused[#loc89, #loc90])
#loc108 = loc(fused[#loc91, #loc92])
#loc109 = loc(callsite(#loc96 at #loc97))
#loc110 = loc(callsite(#loc98 at #loc97))
