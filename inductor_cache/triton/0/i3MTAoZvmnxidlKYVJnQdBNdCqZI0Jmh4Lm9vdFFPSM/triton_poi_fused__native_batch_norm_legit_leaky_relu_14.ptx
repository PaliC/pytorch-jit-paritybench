//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_leaky_relu_14 // -- Begin function triton_poi_fused__native_batch_norm_legit_leaky_relu_14
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused__native_batch_norm_legit_leaky_relu_14
.visible .entry triton_poi_fused__native_batch_norm_legit_leaky_relu_14(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<71>;
	.reg .b32 	%r<187>;
	.reg .f32 	%f<103>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_1];
$L__tmp0:
	.loc	1 22 28                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:22:33
	shl.b32 	%r106, %r1, 4;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_2];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_3];
	.loc	1 23 44                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:23:44
	mov.u32 	%r107, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_4];
	bfe.u32 	%r108, %r107, 6, 2;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_leaky_relu_14_param_5];
	shl.b32 	%r109, %r107, 2;
	.loc	1 23 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:23:23
	or.b32  	%r110, %r106, %r108;
	or.b32  	%r111, %r110, 4;
	or.b32  	%r112, %r110, 8;
	or.b32  	%r113, %r110, 12;
	.loc	1 24 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:24:21
	setp.lt.s32 	%p45, %r110, 256;
	setp.lt.s32 	%p46, %r111, 256;
	setp.lt.s32 	%p47, %r112, 256;
	setp.lt.s32 	%p48, %r113, 256;
	.loc	1 25 28                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:25:33
	shl.b32 	%r114, %r2, 8;
	.loc	1 26 44                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:44
	and.b32  	%r115, %r109, 252;
	and.b32  	%r116, %r107, 255;
	.loc	1 26 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:23
	or.b32  	%r117, %r114, %r115;
	or.b32  	%r118, %r114, %r116;
	.loc	1 27 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:27:21
	setp.lt.s32 	%p49, %r117, 1024;
	setp.lt.s32 	%p21, %r118, 1024;
	.loc	1 30 34                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:34
	shl.b32 	%r119, %r110, 8;
	shl.b32 	%r120, %r111, 8;
	shl.b32 	%r121, %r112, 8;
	shl.b32 	%r122, %r113, 8;
	.loc	1 30 52                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:52
	shr.s32 	%r124, %r117, 31;
	shr.u32 	%r125, %r124, 24;
	add.s32 	%r126, %r117, %r125;
	.loc	1 30 46                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:46
	shl.b32 	%r127, %r126, 8;
	and.b32  	%r128, %r127, -65536;
	.loc	1 30 66                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:66
	and.b32  	%r129, %r126, -256;
	sub.s32 	%r130, %r117, %r129;
	bfe.s32 	%r131, %r2, 23, 1;
	shr.u32 	%r132, %r131, 24;
	add.s32 	%r133, %r118, %r132;
	and.b32  	%r134, %r133, -256;
	sub.s32 	%r135, %r118, %r134;
	.loc	1 30 39                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:39
	add.s32 	%r136, %r128, %r130;
	.loc	1 30 61                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:61
	add.s32 	%r137, %r136, %r119;
	add.s32 	%r138, %r136, %r120;
	add.s32 	%r139, %r136, %r121;
	add.s32 	%r140, %r136, %r122;
	.loc	1 30 30                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:30
	mul.wide.s32 	%rd19, %r137, 4;
	add.s64 	%rd1, %rd13, %rd19;
	mul.wide.s32 	%rd20, %r138, 4;
	add.s64 	%rd2, %rd13, %rd20;
	mul.wide.s32 	%rd21, %r139, 4;
	add.s64 	%rd3, %rd13, %rd21;
	mul.wide.s32 	%rd22, %r140, 4;
	add.s64 	%rd4, %rd13, %rd22;
	.loc	1 30 82                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:82
	and.pred  	%p1, %p45, %p49;
	and.pred  	%p2, %p46, %p49;
	and.pred  	%p3, %p47, %p49;
	and.pred  	%p4, %p48, %p49;
	.loc	1 30 74                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:74
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r141, %r109, 1020;
	bfe.u32 	%r142, %r109, 8, 2;
	or.b32  	%r143, %r142, %r141;
	shl.b32 	%r144, %r143, 2;
	mov.u32 	%r145, global_smem;
	add.s32 	%r19, %r145, %r144;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	shl.b32 	%r146, %r142, 2;
	add.s32 	%r147, %r145, %r146;
	shl.b32 	%r148, %r141, 2;
	add.s32 	%r149, %r147, %r148;
	add.s32 	%r21, %r149, 4;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r149, 8;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r149, 12;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r150, %r116, 2;
	add.s32 	%r151, %r145, %r150;
	ld.shared.f32 	%f1, [%r151];
	ld.shared.f32 	%f2, [%r151+1028];
	ld.shared.f32 	%f3, [%r151+2056];
	ld.shared.f32 	%f4, [%r151+3084];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r28;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r30;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r32;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r151];
	ld.shared.f32 	%f6, [%r151+1028];
	ld.shared.f32 	%f7, [%r151+2056];
	ld.shared.f32 	%f8, [%r151+3084];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r36;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r38;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r40;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r151];
	ld.shared.f32 	%f10, [%r151+1028];
	ld.shared.f32 	%f11, [%r151+2056];
	ld.shared.f32 	%f12, [%r151+3084];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r44;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r46;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r48;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [%r151];
	ld.shared.f32 	%f14, [%r151+1028];
	ld.shared.f32 	%f15, [%r151+2056];
	ld.shared.f32 	%f16, [%r151+3084];
	.loc	1 31 30                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:31:30
	mul.wide.s32 	%rd23, %r118, 4;
	add.s64 	%rd5, %rd14, %rd23;
	.loc	1 31 35                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:31:35
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r51 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:32:30
	add.s64 	%rd6, %rd15, %rd23;
	.loc	1 32 35                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:32:35
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r56 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 33 31                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:33:31
	add.s64 	%rd7, %rd16, %rd23;
	.loc	1 33 36                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:33:36
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r53 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 34 32                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:34:32
	mul.wide.s32 	%rd24, %r135, 4;
	add.s64 	%rd8, %rd17, %rd24;
	.loc	1 34 44                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:34:44
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r54 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%r57, 1132462080;
	.loc	1 37 18                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:37:18
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f17, %r55;
	.loc	1 39 18                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:39:18
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 40 27                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:40:27
	rsqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 26 44                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:44
	bfe.u32 	%r152, %r107, 2, 6;
	.loc	1 26 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:23
	or.b32  	%r153, %r152, %r114;
	or.b32  	%r154, %r153, 192;
	.loc	1 27 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:27:21
	setp.lt.s32 	%p50, %r154, 1024;
	.loc	1 23 44                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:23:44
	and.b32  	%r155, %r109, 12;
	.loc	1 23 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:23:23
	or.b32  	%r156, %r106, %r155;
	.loc	1 24 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:24:21
	setp.lt.s32 	%p51, %r156, 256;
	.loc	1 30 82                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:82
	and.pred  	%p44, %p51, %p50;
	.loc	1 26 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:23
	or.b32  	%r157, %r153, 128;
	.loc	1 27 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:27:21
	setp.lt.s32 	%p52, %r157, 1024;
	.loc	1 30 82                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:82
	and.pred  	%p43, %p51, %p52;
	.loc	1 26 23                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:26:23
	or.b32  	%r158, %r153, 64;
	.loc	1 27 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:27:21
	setp.lt.s32 	%p53, %r158, 1024;
	.loc	1 30 82                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:82
	and.pred  	%p42, %p51, %p53;
	.loc	1 27 21                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:27:21
	setp.lt.s32 	%p54, %r153, 1024;
	.loc	1 30 82                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:30:82
	and.pred  	%p41, %p51, %p54;
	.loc	1 35 18                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:35:18
	mov.b32 	%f20, %r51;
	sub.f32 	%f21, %f1, %f20;
	sub.f32 	%f22, %f2, %f20;
	sub.f32 	%f23, %f3, %f20;
	sub.f32 	%f24, %f4, %f20;
	sub.f32 	%f25, %f5, %f20;
	sub.f32 	%f26, %f6, %f20;
	sub.f32 	%f27, %f7, %f20;
	sub.f32 	%f28, %f8, %f20;
	sub.f32 	%f29, %f9, %f20;
	sub.f32 	%f30, %f10, %f20;
	sub.f32 	%f31, %f11, %f20;
	sub.f32 	%f32, %f12, %f20;
	sub.f32 	%f33, %f13, %f20;
	sub.f32 	%f34, %f14, %f20;
	sub.f32 	%f35, %f15, %f20;
	sub.f32 	%f36, %f16, %f20;
	.loc	1 41 18                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:41:18
	mul.f32 	%f37, %f36, %f19;
	mul.f32 	%f38, %f35, %f19;
	mul.f32 	%f39, %f34, %f19;
	mul.f32 	%f40, %f33, %f19;
	mul.f32 	%f41, %f32, %f19;
	mul.f32 	%f42, %f31, %f19;
	mul.f32 	%f43, %f30, %f19;
	mul.f32 	%f44, %f29, %f19;
	mul.f32 	%f45, %f28, %f19;
	mul.f32 	%f46, %f27, %f19;
	mul.f32 	%f47, %f26, %f19;
	mul.f32 	%f48, %f25, %f19;
	mul.f32 	%f49, %f24, %f19;
	mul.f32 	%f50, %f23, %f19;
	mul.f32 	%f51, %f22, %f19;
	mul.f32 	%f52, %f21, %f19;
	.loc	1 42 19                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:42:19
	mov.b32 	%f53, %r53;
	.loc	1 43 20                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:43:20
	mov.b32 	%f54, %r54;
	fma.rn.f32 	%f55, %f52, %f53, %f54;
	fma.rn.f32 	%f56, %f51, %f53, %f54;
	fma.rn.f32 	%f57, %f50, %f53, %f54;
	fma.rn.f32 	%f58, %f49, %f53, %f54;
	fma.rn.f32 	%f59, %f48, %f53, %f54;
	fma.rn.f32 	%f60, %f47, %f53, %f54;
	fma.rn.f32 	%f61, %f46, %f53, %f54;
	fma.rn.f32 	%f62, %f45, %f53, %f54;
	fma.rn.f32 	%f63, %f44, %f53, %f54;
	fma.rn.f32 	%f64, %f43, %f53, %f54;
	fma.rn.f32 	%f65, %f42, %f53, %f54;
	fma.rn.f32 	%f66, %f41, %f53, %f54;
	fma.rn.f32 	%f67, %f40, %f53, %f54;
	fma.rn.f32 	%f68, %f39, %f53, %f54;
	fma.rn.f32 	%f69, %f38, %f53, %f54;
	fma.rn.f32 	%f70, %f37, %f53, %f54;
	.loc	1 45 20                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:45:20
	setp.gt.f32 	%p55, %f70, 0f00000000;
	setp.gt.f32 	%p56, %f69, 0f00000000;
	setp.gt.f32 	%p57, %f68, 0f00000000;
	setp.gt.f32 	%p58, %f67, 0f00000000;
	setp.gt.f32 	%p59, %f66, 0f00000000;
	setp.gt.f32 	%p60, %f65, 0f00000000;
	setp.gt.f32 	%p61, %f64, 0f00000000;
	setp.gt.f32 	%p62, %f63, 0f00000000;
	setp.gt.f32 	%p63, %f62, 0f00000000;
	setp.gt.f32 	%p64, %f61, 0f00000000;
	setp.gt.f32 	%p65, %f60, 0f00000000;
	setp.gt.f32 	%p66, %f59, 0f00000000;
	setp.gt.f32 	%p67, %f58, 0f00000000;
	setp.gt.f32 	%p68, %f57, 0f00000000;
	setp.gt.f32 	%p69, %f56, 0f00000000;
	setp.gt.f32 	%p70, %f55, 0f00000000;
	.loc	1 47 20                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:47:20
	mul.f32 	%f71, %f55, 0f3E4CCCCD;
	mul.f32 	%f72, %f56, 0f3E4CCCCD;
	mul.f32 	%f73, %f57, 0f3E4CCCCD;
	mul.f32 	%f74, %f58, 0f3E4CCCCD;
	mul.f32 	%f75, %f59, 0f3E4CCCCD;
	mul.f32 	%f76, %f60, 0f3E4CCCCD;
	mul.f32 	%f77, %f61, 0f3E4CCCCD;
	mul.f32 	%f78, %f62, 0f3E4CCCCD;
	mul.f32 	%f79, %f63, 0f3E4CCCCD;
	mul.f32 	%f80, %f64, 0f3E4CCCCD;
	mul.f32 	%f81, %f65, 0f3E4CCCCD;
	mul.f32 	%f82, %f66, 0f3E4CCCCD;
	mul.f32 	%f83, %f67, 0f3E4CCCCD;
	mul.f32 	%f84, %f68, 0f3E4CCCCD;
	mul.f32 	%f85, %f69, 0f3E4CCCCD;
	mul.f32 	%f86, %f70, 0f3E4CCCCD;
	.loc	1 48 35                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:48:35
	selp.f32 	%f87, %f55, %f71, %p70;
	selp.f32 	%f88, %f56, %f72, %p69;
	selp.f32 	%f89, %f57, %f73, %p68;
	selp.f32 	%f90, %f58, %f74, %p67;
	selp.f32 	%f91, %f59, %f75, %p66;
	selp.f32 	%f92, %f60, %f76, %p65;
	selp.f32 	%f93, %f61, %f77, %p64;
	selp.f32 	%f94, %f62, %f78, %p63;
	selp.f32 	%f95, %f63, %f79, %p62;
	selp.f32 	%f96, %f64, %f80, %p61;
	selp.f32 	%f97, %f65, %f81, %p60;
	selp.f32 	%f98, %f66, %f82, %p59;
	selp.f32 	%f99, %f67, %f83, %p58;
	selp.f32 	%f100, %f68, %f84, %p57;
	selp.f32 	%f101, %f69, %f85, %p56;
	selp.f32 	%f102, %f70, %f86, %p55;
	.loc	1 49 34                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:49:34
	shl.b32 	%r159, %r153, 8;
	shl.b32 	%r160, %r158, 8;
	shl.b32 	%r161, %r157, 8;
	shl.b32 	%r162, %r154, 8;
	.loc	1 49 30                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:49:30
	add.s32 	%r163, %r159, %r156;
	add.s32 	%r164, %r160, %r156;
	add.s32 	%r165, %r161, %r156;
	add.s32 	%r166, %r162, %r156;
	.loc	1 49 25                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:49:25
	mul.wide.s32 	%rd25, %r163, 4;
	add.s64 	%rd9, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r164, 4;
	add.s64 	%rd10, %rd18, %rd26;
	mul.wide.s32 	%rd27, %r165, 4;
	add.s64 	%rd11, %rd18, %rd27;
	mul.wide.s32 	%rd28, %r166, 4;
	add.s64 	%rd12, %rd18, %rd28;
	.loc	1 49 46                         // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:49:46
	bar.sync 	0;
	shl.b32 	%r167, %r107, 4;
	and.b32  	%r168, %r167, 4080;
	add.s32 	%r169, %r145, %r168;
	shl.b32 	%r170, %r168, 2;
	add.s32 	%r58, %r169, %r170;
	mov.b32 	%r59, %f87;
	// begin inline asm
	@%p5 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r58, 4;
	mov.b32 	%r61, %f88;
	// begin inline asm
	@%p5 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r58, 8;
	mov.b32 	%r63, %f89;
	// begin inline asm
	@%p5 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r58, 12;
	mov.b32 	%r65, %f90;
	// begin inline asm
	@%p5 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r58, 16;
	mov.b32 	%r67, %f91;
	// begin inline asm
	@%p5 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r58, 20;
	mov.b32 	%r69, %f92;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r58, 24;
	mov.b32 	%r71, %f93;
	// begin inline asm
	@%p5 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r58, 28;
	mov.b32 	%r73, %f94;
	// begin inline asm
	@%p5 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r58, 32;
	mov.b32 	%r75, %f95;
	// begin inline asm
	@%p5 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r58, 36;
	mov.b32 	%r77, %f96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r78, %r58, 40;
	mov.b32 	%r79, %f97;
	// begin inline asm
	@%p5 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	add.s32 	%r80, %r58, 44;
	mov.b32 	%r81, %f98;
	// begin inline asm
	@%p5 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	add.s32 	%r82, %r58, 48;
	mov.b32 	%r83, %f99;
	// begin inline asm
	@%p5 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	add.s32 	%r84, %r58, 52;
	mov.b32 	%r85, %f100;
	// begin inline asm
	@%p5 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	add.s32 	%r86, %r58, 56;
	mov.b32 	%r87, %f101;
	// begin inline asm
	@%p5 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	add.s32 	%r88, %r58, 60;
	mov.b32 	%r89, %f102;
	// begin inline asm
	@%p5 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r171, %r107, 252;
	shl.b32 	%r172, %r171, 2;
	add.s32 	%r173, %r145, %r172;
	add.s32 	%r174, %r173, %r148;
	or.b32  	%r175, %r141, 1024;
	and.b32  	%r176, %r175, 2032;
	add.s32 	%r177, %r145, %r176;
	add.s32 	%r178, %r177, %r148;
	ld.shared.v4.u32 	{%r94, %r95, %r96, %r97}, [%r178+4096];
	or.b32  	%r179, %r141, 2048;
	and.b32  	%r180, %r179, 3056;
	add.s32 	%r181, %r145, %r180;
	add.s32 	%r182, %r181, %r148;
	ld.shared.v4.u32 	{%r98, %r99, %r100, %r101}, [%r182+8192];
	or.b32  	%r183, %r141, 3072;
	and.b32  	%r184, %r183, 4080;
	add.s32 	%r185, %r145, %r184;
	add.s32 	%r186, %r185, %r148;
	ld.shared.v4.u32 	{%r102, %r103, %r104, %r105}, [%r186+12288];
	ld.shared.v4.u32 	{%r90, %r91, %r92, %r93}, [%r174];
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd9 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd10 + 0 ], { %r94, %r95, %r96, %r97 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd11 + 0 ], { %r98, %r99, %r100, %r101 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd12 + 0 ], { %r102, %r103, %r104, %r105 };
	// end inline asm
	.loc	1 49 4                          // c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py:49:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/32/c325wpgnvlzpy6rg7wxi3qlbbobvihluavyr6422kyxj4gwvox6i.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 50
.b8 53
.b8 119
.b8 112
.b8 103
.b8 110
.b8 118
.b8 108
.b8 122
.b8 112
.b8 121
.b8 54
.b8 114
.b8 103
.b8 55
.b8 119
.b8 120
.b8 105
.b8 51
.b8 113
.b8 108
.b8 98
.b8 98
.b8 111
.b8 98
.b8 118
.b8 105
.b8 104
.b8 108
.b8 117
.b8 97
.b8 118
.b8 121
.b8 114
.b8 54
.b8 52
.b8 50
.b8 50
.b8 107
.b8 121
.b8 120
.b8 106
.b8 52
.b8 103
.b8 119
.b8 118
.b8 111
.b8 120
.b8 54
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
