//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_17 // -- Begin function triton_poi_fused_cat_17
                                        // @triton_poi_fused_cat_17
.visible .entry triton_poi_fused_cat_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_17_param_1,
	.param .u32 triton_poi_fused_cat_17_param_2
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_cat_17_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_17_param_1];
$L__tmp0:
	.loc	1 21 28                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:21:33
	shl.b32 	%r16, %r1, 9;
	.loc	1 22 36                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:22:36
	mov.u32 	%r17, %tid.x;
	shl.b32 	%r19, %r17, 1;
	and.b32  	%r20, %r19, 510;
	.loc	1 22 23                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:22:23
	or.b32  	%r21, %r16, %r20;
	or.b32  	%r22, %r21, 1;
	.loc	1 25 21                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:25:21
	mul.hi.s32 	%r23, %r21, 1431655766;
	shr.u32 	%r24, %r23, 31;
	add.s32 	%r25, %r23, %r24;
	.loc	1 24 19                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:24:19
	mul.lo.s32 	%r26, %r25, 3;
	sub.s32 	%r27, %r21, %r26;
	.loc	1 25 21                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:25:21
	mul.hi.s32 	%r28, %r22, 1431655766;
	shr.u32 	%r29, %r28, 31;
	add.s32 	%r30, %r28, %r29;
	.loc	1 24 19                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:24:19
	mul.lo.s32 	%r31, %r30, 3;
	sub.s32 	%r32, %r22, %r31;
	.loc	1 25 26                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:25:26
	shr.s32 	%r33, %r25, 31;
	shr.u32 	%r34, %r33, 18;
	add.s32 	%r35, %r25, %r34;
	and.b32  	%r36, %r35, -16384;
	sub.s32 	%r37, %r25, %r36;
	shr.s32 	%r38, %r30, 31;
	shr.u32 	%r39, %r38, 18;
	add.s32 	%r40, %r30, %r39;
	and.b32  	%r41, %r40, -16384;
	sub.s32 	%r42, %r30, %r41;
	.loc	1 26 19                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:26:19
	mul.hi.s32 	%r43, %r21, 715827883;
	shr.u32 	%r44, %r43, 31;
	shr.u32 	%r45, %r43, 13;
	add.s32 	%r46, %r45, %r44;
	.loc	1 32 18                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:32:18
	setp.lt.s32 	%p1, %r27, 1;
	setp.lt.s32 	%p3, %r32, 1;
	.loc	1 33 41                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:33:41
	shl.b32 	%r47, %r46, 16;
	.loc	1 33 35                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:33:35
	add.s32 	%r48, %r37, %r47;
	add.s32 	%r49, %r47, %r42;
	.loc	1 33 30                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:33:30
	mul.wide.s32 	%rd10, %r48, 4;
	add.s64 	%rd1, %rd8, %rd10;
	mul.wide.s32 	%rd11, %r49, 4;
	add.s64 	%rd2, %rd8, %rd11;
	mov.b32 	%r3, 0;
	.loc	1 33 46                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:33:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 37 18                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:37:18
	fma.rn.f32 	%f3, %f1, 0f3EEA7EFA, 0fBCF5C28F;
	fma.rn.f32 	%f4, %f2, 0f3EEA7EFA, 0fBCF5C28F;
	.loc	1 43 20                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:43:20
	setp.eq.s32 	%p5, %r27, 1;
	setp.eq.s32 	%p7, %r32, 1;
	.loc	1 44 44                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:44:44
	add.s32 	%r50, %r48, 16384;
	add.s32 	%r51, %r49, 16384;
	.loc	1 44 31                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:44:31
	mul.wide.s32 	%rd12, %r50, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r51, 4;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 44 55                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:44:55
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 48 20                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:48:20
	fma.rn.f32 	%f7, %f5, 0f3EE56042, 0fBDB43958;
	fma.rn.f32 	%f8, %f6, 0f3EE56042, 0fBDB43958;
	.loc	1 51 20                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:51:20
	setp.gt.s32 	%p9, %r27, 1;
	setp.gt.s32 	%p11, %r32, 1;
	.loc	1 54 44                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:54:44
	add.s32 	%r52, %r48, 32768;
	add.s32 	%r53, %r49, 32768;
	.loc	1 54 31                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:54:31
	mul.wide.s32 	%rd14, %r52, 4;
	add.s64 	%rd5, %rd8, %rd14;
	mul.wide.s32 	%rd15, %r53, 4;
	add.s64 	%rd6, %rd8, %rd15;
	.loc	1 54 55                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:54:55
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f9, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f10, %r12;
	.loc	1 58 20                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:58:20
	fma.rn.f32 	%f11, %f9, 0f3EE66666, 0fBE408312;
	fma.rn.f32 	%f12, %f10, 0f3EE66666, 0fBE408312;
	.loc	1 60 35                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:60:35
	selp.f32 	%f13, %f11, 0f00000000, %p9;
	selp.f32 	%f14, %f12, 0f00000000, %p11;
	.loc	1 0 0                           // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:0:0
	selp.f32 	%f15, %f7, %f13, %p5;
	selp.f32 	%f16, %f8, %f14, %p7;
	selp.f32 	%f17, %f3, %f15, %p1;
	selp.f32 	%f18, %f4, %f16, %p3;
	.loc	1 63 25                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:63:25
	mul.wide.s32 	%rd16, %r21, 4;
	add.s64 	%rd7, %rd9, %rd16;
	.loc	1 63 37                         // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:63:37
	mov.b32 	%r14, %f17;
	mov.b32 	%r15, %f18;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd7 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 63 4                          // cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py:63:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mi/cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 105
.b8 97
.b8 103
.b8 102
.b8 52
.b8 115
.b8 53
.b8 115
.b8 98
.b8 121
.b8 104
.b8 115
.b8 102
.b8 111
.b8 108
.b8 98
.b8 105
.b8 106
.b8 101
.b8 122
.b8 108
.b8 106
.b8 119
.b8 117
.b8 109
.b8 121
.b8 109
.b8 110
.b8 100
.b8 120
.b8 99
.b8 106
.b8 55
.b8 103
.b8 118
.b8 101
.b8 98
.b8 52
.b8 100
.b8 113
.b8 98
.b8 101
.b8 100
.b8 100
.b8 119
.b8 121
.b8 114
.b8 100
.b8 114
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
