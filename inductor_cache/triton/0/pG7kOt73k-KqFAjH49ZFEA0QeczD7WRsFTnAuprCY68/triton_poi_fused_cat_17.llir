; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_17(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %11 = sdiv i32 %.frozen, 3, !dbg !14
  %12 = mul i32 %11, 3, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %.frozen1 = freeze i32 %10, !dbg !14
  %13 = sdiv i32 %.frozen1, 3, !dbg !14
  %14 = mul i32 %13, 3, !dbg !15
  %.decomposed2 = sub i32 %.frozen1, %14, !dbg !15
  %15 = srem i32 %11, 16384, !dbg !16
  %16 = srem i32 %13, 16384, !dbg !16
  %17 = sdiv i32 %9, 49152, !dbg !17
  %18 = icmp slt i32 %.decomposed, 1, !dbg !18
  %19 = icmp slt i32 %.decomposed2, 1, !dbg !18
  %20 = shl i32 %17, 16, !dbg !19
  %21 = add i32 %15, %20, !dbg !20
  %22 = add i32 %20, %16, !dbg !20
  %23 = sext i32 %21 to i64, !dbg !21
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !21
  %25 = sext i32 %22 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %18, i32 0, i1 %18) #1, !dbg !22
  %28 = bitcast i32 %27 to float, !dbg !22
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %19, i32 0, i1 %19) #1, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = fmul float %28, 0x3FDD4FDF40000000, !dbg !23
  %32 = fmul float %30, 0x3FDD4FDF40000000, !dbg !23
  %33 = fadd float %31, 0xBF9EB851E0000000, !dbg !24
  %34 = fadd float %32, 0xBF9EB851E0000000, !dbg !24
  %35 = icmp eq i32 %.decomposed, 1, !dbg !25
  %36 = icmp eq i32 %.decomposed2, 1, !dbg !25
  %37 = add i32 %21, 16384, !dbg !26
  %38 = add i32 %22, 16384, !dbg !26
  %39 = sext i32 %37 to i64, !dbg !27
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !27
  %41 = sext i32 %38 to i64, !dbg !27
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !27
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %35, i32 0, i1 %35) #1, !dbg !28
  %44 = bitcast i32 %43 to float, !dbg !28
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %36, i32 0, i1 %36) #1, !dbg !28
  %46 = bitcast i32 %45 to float, !dbg !28
  %47 = fmul float %44, 0x3FDCAC0840000000, !dbg !29
  %48 = fmul float %46, 0x3FDCAC0840000000, !dbg !29
  %49 = fadd float %47, 0xBFB6872B00000000, !dbg !30
  %50 = fadd float %48, 0xBFB6872B00000000, !dbg !30
  %51 = icmp sgt i32 %.decomposed, 1, !dbg !31
  %52 = icmp sgt i32 %.decomposed2, 1, !dbg !31
  %53 = add i32 %21, 32768, !dbg !32
  %54 = add i32 %22, 32768, !dbg !32
  %55 = sext i32 %53 to i64, !dbg !33
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !33
  %57 = sext i32 %54 to i64, !dbg !33
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !33
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %51, i32 0, i1 %51) #1, !dbg !34
  %60 = bitcast i32 %59 to float, !dbg !34
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %52, i32 0, i1 %52) #1, !dbg !34
  %62 = bitcast i32 %61 to float, !dbg !34
  %63 = fmul float %60, 0x3FDCCCCCC0000000, !dbg !35
  %64 = fmul float %62, 0x3FDCCCCCC0000000, !dbg !35
  %65 = fadd float %63, 0xBFC8106240000000, !dbg !36
  %66 = fadd float %64, 0xBFC8106240000000, !dbg !36
  %67 = select i1 %51, float %65, float 0.000000e+00, !dbg !37
  %68 = select i1 %52, float %66, float 0.000000e+00, !dbg !37
  %69 = select i1 %35, float %49, float %67, !dbg !38
  %70 = select i1 %36, float %50, float %68, !dbg !38
  %71 = select i1 %18, float %33, float %69, !dbg !38
  %72 = select i1 %19, float %34, float %70, !dbg !38
  %73 = sext i32 %9 to i64, !dbg !39
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !39
  %75 = bitcast float %71 to i32, !dbg !40
  %76 = bitcast float %72 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %75, i32 %76, ptr addrspace(1) %74, i1 true) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmiagf4s5sbyhsfolbijezljwumymndxcj7gveb4dqbeddwyrdr3.py", directory: "inductor_cache/mi")
!4 = !{ptr @triton_poi_fused_cat_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_17, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_17", linkageName: "triton_poi_fused_cat_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 41, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 46, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 18, scope: !7)
!25 = !DILocation(line: 43, column: 20, scope: !7)
!26 = !DILocation(line: 44, column: 44, scope: !7)
!27 = !DILocation(line: 44, column: 31, scope: !7)
!28 = !DILocation(line: 44, column: 55, scope: !7)
!29 = !DILocation(line: 46, column: 20, scope: !7)
!30 = !DILocation(line: 48, column: 20, scope: !7)
!31 = !DILocation(line: 51, column: 20, scope: !7)
!32 = !DILocation(line: 54, column: 44, scope: !7)
!33 = !DILocation(line: 54, column: 31, scope: !7)
!34 = !DILocation(line: 54, column: 55, scope: !7)
!35 = !DILocation(line: 56, column: 20, scope: !7)
!36 = !DILocation(line: 58, column: 20, scope: !7)
!37 = !DILocation(line: 60, column: 35, scope: !7)
!38 = !DILocation(line: 0, scope: !7)
!39 = !DILocation(line: 63, column: 25, scope: !7)
!40 = !DILocation(line: 63, column: 37, scope: !7)
!41 = !DILocation(line: 63, column: 4, scope: !7)
