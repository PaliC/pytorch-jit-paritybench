#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__to_copy_2(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":19:0), %arg1: i32 loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = arith.sitofp %4 : tensor<4xi32, #blocked> to tensor<4xf32, #blocked> loc(#loc7)
    %7 = arith.cmpf ogt, %6, %cst : tensor<4xf32, #blocked> loc(#loc17)
    %8 = arith.cmpf une, %6, %6 : tensor<4xf32, #blocked> loc(#loc18)
    %9 = arith.ori %7, %8 : tensor<4xi1, #blocked> loc(#loc19)
    %10 = arith.select %9, %6, %cst : tensor<4xi1, #blocked>, tensor<4xf32, #blocked> loc(#loc20)
    %11 = arith.fptosi %10 : tensor<4xf32, #blocked> to tensor<4xi32, #blocked> loc(#loc13)
    %12 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<4x!tt.ptr<i64>, #blocked> loc(#loc14)
    %13 = tt.addptr %12, %4 : tensor<4x!tt.ptr<i64>, #blocked>, tensor<4xi32, #blocked> loc(#loc14)
    %14 = arith.extsi %11 : tensor<4xi32, #blocked> to tensor<4xi64, #blocked> loc(#loc15)
    tt.store %13, %14, %5 : tensor<4x!tt.ptr<i64>, #blocked> loc(#loc15)
    tt.return loc(#loc16)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":21:28)
#loc3 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":21:33)
#loc4 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":22:36)
#loc5 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":22:23)
#loc6 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":23:21)
#loc7 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":26:19)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc9 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":30:40)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc13 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":31:19)
#loc14 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":32:25)
#loc15 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":32:36)
#loc16 = loc("inductor_cache/ry/cryytt5c3gfwld53f6rb7nztzkxu26jnr2qutmu44hlleer4y5dy.py":32:4)
#loc17 = loc(callsite(#loc8 at #loc9))
#loc18 = loc(callsite(#loc10 at #loc9))
#loc19 = loc(callsite(#loc11 at #loc9))
#loc20 = loc(callsite(#loc12 at #loc9))
