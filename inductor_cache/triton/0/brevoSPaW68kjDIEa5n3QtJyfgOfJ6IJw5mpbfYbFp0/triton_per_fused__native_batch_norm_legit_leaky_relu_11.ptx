//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_leaky_relu_11 // -- Begin function triton_per_fused__native_batch_norm_legit_leaky_relu_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_leaky_relu_11
.visible .entry triton_per_fused__native_batch_norm_legit_leaky_relu_11(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_1];
$L__tmp0:
	.loc	1 23 28                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:23:33
	shl.b32 	%r32, %r1, 3;
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_2];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_leaky_relu_11_param_3];
	.loc	1 24 44                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:24:44
	mov.u32 	%r33, %tid.x;
	bfe.u32 	%r34, %r33, 4, 3;
	and.b32  	%r35, %r33, 7;
	.loc	1 24 23                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:24:23
	or.b32  	%r36, %r32, %r34;
	.loc	1 25 21                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:25:21
	setp.lt.s32 	%p1, %r36, 2048;
	.loc	1 26 34                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:26:34
	shl.b32 	%r37, %r33, 2;
	and.b32  	%r38, %r37, 60;
	.loc	1 31 38                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:31:38
	shl.b32 	%r39, %r36, 6;
	.loc	1 31 35                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:31:35
	or.b32  	%r40, %r39, %r38;
	.loc	1 31 30                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:31:30
	mul.wide.s32 	%rd9, %r40, 4;
	add.s64 	%rd1, %rd5, %rd9;
	mov.b32 	%r6, 0;
	.loc	1 31 43                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	selp.f32 	%f8, %f7, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f8;
	shfl.sync.bfly.b32	%r42, %r41, 8, 31, -1;
	mov.b32 	%f9, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f10;
	shfl.sync.bfly.b32	%r44, %r43, 4, 31, -1;
	mov.b32 	%f11, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f12;
	shfl.sync.bfly.b32	%r46, %r45, 2, 31, -1;
	mov.b32 	%f13, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f14;
	shfl.sync.bfly.b32	%r48, %r47, 1, 31, -1;
	mov.b32 	%f15, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
$L__tmp2:
	.loc	1 39 19                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:39:19
	shl.b32 	%r49, %r34, 2;
	mov.u32 	%r50, global_smem;
	add.s32 	%r10, %r50, %r49;
	mov.b32 	%r11, %f16;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r51, %r35, 2;
	add.s32 	%r52, %r50, %r51;
	ld.shared.u32 	%r13, [%r52];
	mov.b32 	%r14, 1115684864;
	// begin inline asm
	div.full.f32 %r31, %r13, %r14;
	// end inline asm
	// begin inline asm
	div.full.f32 %r15, %r11, %r14;
	// end inline asm
	mov.b32 	%f17, %r15;
	.loc	1 40 19                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:40:19
	sub.f32 	%f18, %f1, %f17;
	sub.f32 	%f19, %f2, %f17;
	sub.f32 	%f20, %f3, %f17;
	sub.f32 	%f21, %f4, %f17;
	.loc	1 41 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:41:20
	mul.f32 	%f22, %f19, %f19;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f23, %f18, %f18, %f22;
	fma.rn.f32 	%f24, %f20, %f20, %f23;
	fma.rn.f32 	%f25, %f21, %f21, %f24;
	selp.f32 	%f26, %f25, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f26;
	shfl.sync.bfly.b32	%r54, %r53, 8, 31, -1;
	mov.b32 	%f27, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f28;
	shfl.sync.bfly.b32	%r56, %r55, 4, 31, -1;
	mov.b32 	%f29, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f30;
	shfl.sync.bfly.b32	%r58, %r57, 2, 31, -1;
	mov.b32 	%f31, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f32;
	shfl.sync.bfly.b32	%r60, %r59, 1, 31, -1;
	mov.b32 	%f33, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
$L__tmp4:
	.loc	1 50 28                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:50:28
	bar.sync 	0;
	mov.b32 	%r19, %f34;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	.loc	1 47 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:47:20
	ld.shared.u32 	%r21, [%r52];
	// begin inline asm
	div.full.f32 %r20, %r21, %r14;
	// end inline asm
	mov.b32 	%f35, %r20;
	// begin inline asm
	div.full.f32 %r23, %r19, %r14;
	// end inline asm
	mov.b32 	%f36, %r23;
	.loc	1 49 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:49:20
	add.f32 	%f37, %f35, 0f3727C5AC;
	add.f32 	%f38, %f36, 0f3727C5AC;
	.loc	1 50 28                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:50:28
	rsqrt.approx.ftz.f32 	%f39, %f37;
	rsqrt.approx.ftz.f32 	%f40, %f38;
	.loc	1 24 23                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:24:23
	or.b32  	%r61, %r32, %r35;
	.loc	1 25 21                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:25:21
	setp.lt.s32 	%p11, %r61, 2048;
	.loc	1 51 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:51:20
	mul.f32 	%f41, %f18, %f40;
	mul.f32 	%f42, %f19, %f40;
	mul.f32 	%f43, %f20, %f40;
	mul.f32 	%f44, %f21, %f40;
	.loc	1 53 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:53:20
	setp.gt.f32 	%p12, %f41, 0f00000000;
	setp.gt.f32 	%p13, %f42, 0f00000000;
	setp.gt.f32 	%p14, %f43, 0f00000000;
	setp.gt.f32 	%p15, %f44, 0f00000000;
	.loc	1 55 20                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:55:20
	mul.f32 	%f45, %f41, 0f3E4CCCCD;
	mul.f32 	%f46, %f42, 0f3E4CCCCD;
	mul.f32 	%f47, %f43, 0f3E4CCCCD;
	mul.f32 	%f48, %f44, 0f3E4CCCCD;
	.loc	1 56 35                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:56:35
	selp.f32 	%f49, %f41, %f45, %p12;
	selp.f32 	%f50, %f42, %f46, %p13;
	selp.f32 	%f51, %f43, %f47, %p14;
	selp.f32 	%f52, %f44, %f48, %p15;
	.loc	1 57 25                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:57:25
	add.s64 	%rd2, %rd7, %rd9;
	.loc	1 57 45                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:57:45
	mov.b32 	%r26, %f49;
	mov.b32 	%r27, %f50;
	mov.b32 	%r28, %f51;
	mov.b32 	%r29, %f52;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r26, %r27, %r28, %r29 };
	// end inline asm
	.loc	1 58 25                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:58:25
	mul.wide.s32 	%rd10, %r61, 4;
	add.s64 	%rd3, %rd8, %rd10;
	.loc	1 58 37                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:58:37
	and.b32  	%r62, %r33, 120;
	setp.eq.s32 	%p16, %r62, 0;
	mov.b32 	%r30, %f39;
	and.pred  	%p9, %p16, %p11;
	// begin inline asm
	@%p9 st.global.b32 [ %rd3 + 0 ], { %r30 };
	// end inline asm
	.loc	1 59 25                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:59:25
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 59 37                         // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:59:37
	// begin inline asm
	@%p9 st.global.b32 [ %rd4 + 0 ], { %r31 };
	// end inline asm
	.loc	1 59 4                          // cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py:59:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sh/cshrnh4r4hfjtfuy3vad6pxf4cldfijpeolmc5obxyuvuz3myvib.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 224                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 104
.b8 114
.b8 110
.b8 104
.b8 52
.b8 114
.b8 52
.b8 104
.b8 102
.b8 106
.b8 116
.b8 102
.b8 117
.b8 121
.b8 51
.b8 118
.b8 97
.b8 100
.b8 54
.b8 112
.b8 120
.b8 102
.b8 52
.b8 99
.b8 108
.b8 100
.b8 102
.b8 105
.b8 106
.b8 112
.b8 101
.b8 111
.b8 108
.b8 109
.b8 99
.b8 53
.b8 111
.b8 98
.b8 120
.b8 121
.b8 117
.b8 118
.b8 117
.b8 122
.b8 51
.b8 109
.b8 121
.b8 118
.b8 105
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xca:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
