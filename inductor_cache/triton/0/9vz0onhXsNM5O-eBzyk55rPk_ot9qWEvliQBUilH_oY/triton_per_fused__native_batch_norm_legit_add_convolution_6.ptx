//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_6 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_6
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_6(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_6_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_0];
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:23:33
	shl.b32 	%r48, %r1, 3;
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_2];
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_3];
	.loc	1 24 44                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:24:44
	mov.u32 	%r49, %tid.x;
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_4];
	bfe.u32 	%r50, %r49, 3, 3;
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_5];
	and.b32  	%r51, %r49, 7;
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_6];
	.loc	1 24 23                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:24:23
	or.b32  	%r52, %r48, %r50;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_add_convolution_6_param_7];
	.loc	1 25 21                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:25:21
	setp.lt.s32 	%p1, %r52, 16;
	.loc	1 26 34                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:26:34
	shl.b32 	%r53, %r49, 1;
	and.b32  	%r54, %r53, 14;
	.loc	1 31 19                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:31:19
	bfe.s32 	%r55, %r1, 28, 1;
	shr.u32 	%r56, %r55, 30;
	add.s32 	%r57, %r52, %r56;
	and.b32  	%r58, %r57, -4;
	sub.s32 	%r59, %r52, %r58;
	.loc	1 32 42                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:32:42
	shl.b32 	%r60, %r52, 4;
	.loc	1 32 39                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:32:39
	or.b32  	%r61, %r60, %r54;
	.loc	1 32 34                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:32:34
	mul.wide.s32 	%rd22, %r61, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mov.b32 	%r4, 0;
	.loc	1 32 47                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 30                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:33:30
	mul.wide.s32 	%rd23, %r59, 4;
	add.s64 	%rd2, %rd16, %rd23;
	.loc	1 33 35                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r7;
	.loc	1 34 31                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:34:31
	add.s64 	%rd4, %rd17, %rd22;
	.loc	1 34 44                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:34:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	.loc	1 35 31                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:35:31
	mul.wide.s32 	%rd24, %r52, 4;
	add.s64 	%rd5, %rd18, %rd24;
	.loc	1 35 36                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:35:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:36:31
	add.s64 	%rd7, %rd19, %rd24;
	.loc	1 36 36                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:36:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r40 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 35                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:37:35
	add.s64 	%rd9, %rd15, %rd22;
	.loc	1 37 48                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:37:48
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r16, %r4;
	@!%p1 mov.u32 %r17, %r4;
	// end inline asm
	.loc	1 38 18                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:38:18
	add.f32 	%f4, %f1, %f3;
	add.f32 	%f5, %f2, %f3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	selp.f32 	%f7, %f6, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f7;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f8, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f9;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f10, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f11;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f12, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
$L__tmp2:
	.loc	1 46 19                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:46:19
	shl.b32 	%r68, %r50, 2;
	mov.u32 	%r69, global_smem;
	add.s32 	%r20, %r69, %r68;
	mov.b32 	%r21, %f13;
	mov.pred 	%p16, -1;
	// begin inline asm
	@%p16 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r70, %r51, 2;
	add.s32 	%r71, %r69, %r70;
	ld.shared.u32 	%r23, [%r71];
	mov.b32 	%r24, 1098907648;
	// begin inline asm
	div.full.f32 %r47, %r23, %r24;
	// end inline asm
	// begin inline asm
	div.full.f32 %r25, %r21, %r24;
	// end inline asm
	mov.b32 	%f14, %r25;
	.loc	1 47 19                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:47:19
	sub.f32 	%f15, %f4, %f14;
	sub.f32 	%f16, %f5, %f14;
	.loc	1 48 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:48:20
	mul.f32 	%f17, %f16, %f16;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f18, %f15, %f15, %f17;
	selp.f32 	%f19, %f18, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f19;
	shfl.sync.bfly.b32	%r73, %r72, 4, 31, -1;
	mov.b32 	%f20, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f21;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f22, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f23;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f24, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
$L__tmp4:
	.loc	1 57 28                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:57:28
	bar.sync 	0;
	mov.b32 	%r29, %f25;
	// begin inline asm
	@%p16 st.shared.b32 [ %r20 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	.loc	1 54 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:54:20
	ld.shared.u32 	%r31, [%r71];
	// begin inline asm
	div.full.f32 %r30, %r31, %r24;
	// end inline asm
	mov.b32 	%f26, %r30;
	// begin inline asm
	div.full.f32 %r33, %r29, %r24;
	// end inline asm
	mov.b32 	%f27, %r33;
	.loc	1 56 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:56:20
	add.f32 	%f28, %f26, 0f3727C5AC;
	add.f32 	%f29, %f27, 0f3727C5AC;
	.loc	1 57 28                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:57:28
	rsqrt.approx.ftz.f32 	%f30, %f28;
	rsqrt.approx.ftz.f32 	%f31, %f29;
	.loc	1 60 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:60:20
	// begin inline asm
	div.full.f32 %r39, %r40, %r24;
	// end inline asm
	mov.b32 	%f32, %r39;
	.loc	1 61 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:61:20
	add.f32 	%f33, %f32, 0f3727C5AC;
	.loc	1 62 28                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:62:28
	rsqrt.approx.ftz.f32 	%f34, %f33;
	.loc	1 34 44                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:34:44
	mov.b32 	%f35, %r9;
	.loc	1 35 36                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:35:36
	mov.b32 	%f36, %r13;
	.loc	1 59 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:59:20
	sub.f32 	%f37, %f35, %f36;
	.loc	1 34 44                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:34:44
	mov.b32 	%f38, %r8;
	.loc	1 59 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:59:20
	sub.f32 	%f39, %f38, %f36;
	.loc	1 37 48                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:37:48
	mov.b32 	%f40, %r17;
	mov.b32 	%f41, %r16;
	.loc	1 24 23                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:24:23
	or.b32  	%r78, %r48, %r51;
	.loc	1 25 21                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:25:21
	setp.lt.s32 	%p22, %r78, 16;
	.loc	1 64 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:64:20
	fma.rn.f32 	%f42, %f39, %f34, %f41;
	fma.rn.f32 	%f43, %f37, %f34, %f40;
	.loc	1 65 20                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:65:20
	fma.rn.f32 	%f44, %f15, %f31, %f42;
	fma.rn.f32 	%f45, %f16, %f31, %f43;
	.loc	1 66 47                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:66:47
	mov.b32 	%r42, %f4;
	mov.b32 	%r43, %f5;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r42, %r43 };
	// end inline asm
	.loc	1 67 48                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:67:48
	mov.b32 	%r44, %f44;
	mov.b32 	%r45, %f45;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r44, %r45 };
	// end inline asm
	.loc	1 68 25                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:68:25
	mul.wide.s32 	%rd25, %r78, 4;
	add.s64 	%rd12, %rd21, %rd25;
	.loc	1 68 37                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:68:37
	and.b32  	%r79, %r49, 56;
	setp.eq.s32 	%p23, %r79, 0;
	mov.b32 	%r46, %f30;
	and.pred  	%p20, %p23, %p22;
	// begin inline asm
	@%p20 st.global.b32 [ %rd12 + 0 ], { %r46 };
	// end inline asm
	.loc	1 69 25                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:69:25
	add.s64 	%rd13, %rd20, %rd25;
	.loc	1 69 37                         // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:69:37
	// begin inline asm
	@%p20 st.global.b32 [ %rd13 + 0 ], { %r47 };
	// end inline asm
	.loc	1 69 4                          // cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py:69:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fw/cfwfp2xfuff4g6bbhrggqvtinnykef3uct3yw7yi3ovwgi5hsv2u.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 119
.b8 102
.b8 112
.b8 50
.b8 120
.b8 102
.b8 117
.b8 102
.b8 102
.b8 52
.b8 103
.b8 54
.b8 98
.b8 98
.b8 104
.b8 114
.b8 103
.b8 103
.b8 113
.b8 118
.b8 116
.b8 105
.b8 110
.b8 110
.b8 121
.b8 107
.b8 101
.b8 102
.b8 51
.b8 117
.b8 99
.b8 116
.b8 51
.b8 121
.b8 119
.b8 55
.b8 121
.b8 105
.b8 51
.b8 111
.b8 118
.b8 119
.b8 103
.b8 105
.b8 53
.b8 104
.b8 115
.b8 118
.b8 50
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
