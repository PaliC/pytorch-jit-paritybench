#loc = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":19:0)
module {
  tt.func public @triton_poi_fused_div_exp_neg_sum_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+01> : tensor<64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<64xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<64xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %7, %6 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc10)
    %11 = tt.load %10, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.addi %6, %cst_3 : tensor<64xi32> loc(#loc12)
    %13 = tt.addptr %7, %12 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.addi %6, %cst_2 : tensor<64xi32> loc(#loc15)
    %16 = tt.addptr %7, %15 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc16)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %6, %cst_1 : tensor<64xi32> loc(#loc18)
    %19 = tt.addptr %7, %18 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc19)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.subf %cst_0, %9 : tensor<64xf32> loc(#loc21)
    %22 = arith.mulf %21, %cst : tensor<64xf32> loc(#loc22)
    %23 = math.exp %22 : tensor<64xf32> loc(#loc23)
    %24 = arith.subf %cst_0, %11 : tensor<64xf32> loc(#loc24)
    %25 = arith.mulf %24, %cst : tensor<64xf32> loc(#loc25)
    %26 = math.exp %25 : tensor<64xf32> loc(#loc26)
    %27 = arith.subf %cst_0, %14 : tensor<64xf32> loc(#loc27)
    %28 = arith.mulf %27, %cst : tensor<64xf32> loc(#loc28)
    %29 = math.exp %28 : tensor<64xf32> loc(#loc29)
    %30 = arith.addf %26, %29 : tensor<64xf32> loc(#loc30)
    %31 = arith.subf %cst_0, %17 : tensor<64xf32> loc(#loc31)
    %32 = arith.mulf %31, %cst : tensor<64xf32> loc(#loc32)
    %33 = math.exp %32 : tensor<64xf32> loc(#loc33)
    %34 = arith.addf %30, %33 : tensor<64xf32> loc(#loc34)
    %35 = arith.subf %cst_0, %20 : tensor<64xf32> loc(#loc35)
    %36 = arith.mulf %35, %cst : tensor<64xf32> loc(#loc36)
    %37 = math.exp %36 : tensor<64xf32> loc(#loc37)
    %38 = arith.addf %34, %37 : tensor<64xf32> loc(#loc38)
    %39 = arith.divf %23, %38 : tensor<64xf32> loc(#loc39)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc40)
    %41 = tt.addptr %40, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc40)
    tt.store %41, %39, %5 : tensor<64x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":21:28)
#loc3 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":21:33)
#loc4 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":22:36)
#loc5 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":22:23)
#loc6 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":23:21)
#loc7 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":25:19)
#loc8 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":26:30)
#loc9 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":26:35)
#loc10 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":27:30)
#loc11 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":27:35)
#loc12 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":28:35)
#loc13 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":28:30)
#loc14 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":28:40)
#loc15 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":29:36)
#loc16 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":29:31)
#loc17 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":29:41)
#loc18 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":30:36)
#loc19 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":30:31)
#loc20 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":30:41)
#loc21 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":31:12)
#loc22 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":33:18)
#loc23 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":34:23)
#loc24 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":35:12)
#loc25 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":36:18)
#loc26 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":37:23)
#loc27 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":38:13)
#loc28 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":39:20)
#loc29 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":40:24)
#loc30 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":41:19)
#loc31 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":42:13)
#loc32 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":43:20)
#loc33 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":44:24)
#loc34 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":45:20)
#loc35 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":46:13)
#loc36 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":47:20)
#loc37 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":48:24)
#loc38 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":49:20)
#loc39 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":50:19)
#loc40 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":51:25)
#loc41 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":51:37)
#loc42 = loc("inductor_cache/cw/ccwnvjwfrn5v4vw336dirapphf7abpdwh4gut7mi4mnj4lwv2pyg.py":51:4)
