; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_log_sigmoid_forward_mul_neg_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #2, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %10) #2, !dbg !18
  %17 = fsub float 0.000000e+00, %14, !dbg !19
  %18 = fsub float 0.000000e+00, %17, !dbg !20
  %19 = fmul float %18, 0x3FF7154760000000, !dbg !24
  %20 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %19) #2, !dbg !24
  %21 = fadd float %20, 1.000000e+00, !dbg !25
  %22 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %21) #2, !dbg !26
  %23 = tail call float @llvm.fabs.f32(float %14), !dbg !27
  %24 = fsub float 0.000000e+00, %23, !dbg !28
  %25 = fmul float %24, 0x3FF7154760000000, !dbg !29
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #2, !dbg !29
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not.i = icmp eq i32 %27, 0, !dbg !30
  %28 = tail call float @llvm.nvvm.add.rz.ftz.f(float %26, float 1.000000e+00) #2, !dbg !30
  %29 = tail call float @llvm.nvvm.add.rz.f(float %26, float 1.000000e+00) #2, !dbg !30
  %.01.i = select i1 %.not.i, float %29, float %28, !dbg !30
  %30 = bitcast float %.01.i to i32, !dbg !30
  %31 = add i32 %30, -1061158912, !dbg !30
  %32 = and i32 %31, -8388608, !dbg !30
  %33 = bitcast float %26 to i32, !dbg !30
  %34 = sub i32 %33, %32, !dbg !30
  %35 = bitcast i32 %34 to float, !dbg !30
  %36 = sub i32 1082130432, %32, !dbg !30
  %37 = bitcast i32 %36 to float, !dbg !30
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not14.i = icmp eq i32 %38, 0, !dbg !30
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %37, float -1.000000e+00) #2, !dbg !30
  %40 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %37, float -1.000000e+00) #2, !dbg !30
  %.09.i = select i1 %.not14.i, float %40, float %39, !dbg !30
  %41 = fadd float %.09.i, %35, !dbg !30
  %42 = sitofp i32 %32 to float, !dbg !30
  %43 = fmul float %42, 0x3E80000000000000, !dbg !30
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not15.i = icmp eq i32 %44, 0, !dbg !30
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %41, float 0x3FBB000240000000) #2, !dbg !30
  %46 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %41, float 0x3FBB000240000000) #2, !dbg !30
  %.012.i = select i1 %.not15.i, float %46, float %45, !dbg !30
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not16.i = icmp eq i32 %47, 0, !dbg !30
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %41, float 0xBFC0EF1C00000000) #2, !dbg !30
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %41, float 0xBFC0EF1C00000000) #2, !dbg !30
  %.010.i = select i1 %.not16.i, float %49, float %48, !dbg !30
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not17.i = icmp eq i32 %50, 0, !dbg !30
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %41, float 0x3FC28C8EA0000000) #2, !dbg !30
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %41, float 0x3FC28C8EA0000000) #2, !dbg !30
  %.06.i = select i1 %.not17.i, float %52, float %51, !dbg !30
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not18.i = icmp eq i32 %53, 0, !dbg !30
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %41, float 0xBFC54D1BA0000000) #2, !dbg !30
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %41, float 0xBFC54D1BA0000000) #2, !dbg !30
  %.02.i = select i1 %.not18.i, float %55, float %54, !dbg !30
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not19.i = icmp eq i32 %56, 0, !dbg !30
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %41, float 0x3FC995F3C0000000) #2, !dbg !30
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %41, float 0x3FC995F3C0000000) #2, !dbg !30
  %.0.i = select i1 %.not19.i, float %58, float %57, !dbg !30
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not20.i = icmp eq i32 %59, 0, !dbg !30
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %41, float 0xBFD0000840000000) #2, !dbg !30
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %41, float 0xBFD0000840000000) #2, !dbg !30
  %.011.i = select i1 %.not20.i, float %61, float %60, !dbg !30
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not21.i = icmp eq i32 %62, 0, !dbg !30
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %41, float 0x3FD5555CC0000000) #2, !dbg !30
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %41, float 0x3FD5555CC0000000) #2, !dbg !30
  %.08.i = select i1 %.not21.i, float %64, float %63, !dbg !30
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not22.i = icmp eq i32 %65, 0, !dbg !30
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %41, float -5.000000e-01) #2, !dbg !30
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %41, float -5.000000e-01) #2, !dbg !30
  %.07.i = select i1 %.not22.i, float %67, float %66, !dbg !30
  %68 = fmul float %41, %.07.i, !dbg !30
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not23.i = icmp eq i32 %69, 0, !dbg !30
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float %41, float %41) #2, !dbg !30
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float %41, float %41) #2, !dbg !30
  %.05.i = select i1 %.not23.i, float %71, float %70, !dbg !30
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not24.i = icmp eq i32 %72, 0, !dbg !30
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %43, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !30
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %43, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !30
  %.04.i = select i1 %.not24.i, float %74, float %73, !dbg !30
  %75 = icmp ugt i32 %33, 2139095039, !dbg !30
  br i1 %75, label %76, label %__nv_log1pf.exit, !dbg !30

76:                                               ; preds = %4
  %77 = icmp sgt i32 %33, -1082130432, !dbg !30
  br i1 %77, label %__nv_fmaf_rn.exit.i, label %81, !dbg !30

__nv_fmaf_rn.exit.i:                              ; preds = %76
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !30
  %.not25.i = icmp eq i32 %78, 0, !dbg !30
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %26, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !30
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %26, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !30
  %.03.i = select i1 %.not25.i, float %80, float %79, !dbg !30
  br label %81, !dbg !30

81:                                               ; preds = %__nv_fmaf_rn.exit.i, %76
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %76 ], !dbg !30
  %82 = fcmp oeq float %26, 0.000000e+00, !dbg !30
  %r.1.i = select i1 %82, float -0.000000e+00, float %r.0.i, !dbg !30
  br label %__nv_log1pf.exit, !dbg !30

__nv_log1pf.exit:                                 ; preds = %4, %81
  %r.2.i = phi float [ %r.1.i, %81 ], [ %.04.i, %4 ], !dbg !30
  %83 = fmul float %17, 0x3FF7154760000000, !dbg !31
  %84 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %83) #2, !dbg !31
  %85 = fadd float %84, 1.000000e+00, !dbg !33
  %86 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %85) #2, !dbg !34
  %87 = tail call float @llvm.fabs.f32(float %17), !dbg !35
  %88 = fsub float 0.000000e+00, %87, !dbg !36
  %89 = fmul float %88, 0x3FF7154760000000, !dbg !37
  %90 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %89) #2, !dbg !37
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not.i1 = icmp eq i32 %91, 0, !dbg !38
  %92 = tail call float @llvm.nvvm.add.rz.ftz.f(float %90, float 1.000000e+00) #2, !dbg !38
  %93 = tail call float @llvm.nvvm.add.rz.f(float %90, float 1.000000e+00) #2, !dbg !38
  %.01.i2 = select i1 %.not.i1, float %93, float %92, !dbg !38
  %94 = bitcast float %.01.i2 to i32, !dbg !38
  %95 = add i32 %94, -1061158912, !dbg !38
  %96 = and i32 %95, -8388608, !dbg !38
  %97 = bitcast float %90 to i32, !dbg !38
  %98 = sub i32 %97, %96, !dbg !38
  %99 = bitcast i32 %98 to float, !dbg !38
  %100 = sub i32 1082130432, %96, !dbg !38
  %101 = bitcast i32 %100 to float, !dbg !38
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not14.i3 = icmp eq i32 %102, 0, !dbg !38
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %101, float -1.000000e+00) #2, !dbg !38
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %101, float -1.000000e+00) #2, !dbg !38
  %.09.i4 = select i1 %.not14.i3, float %104, float %103, !dbg !38
  %105 = fadd float %.09.i4, %99, !dbg !38
  %106 = sitofp i32 %96 to float, !dbg !38
  %107 = fmul float %106, 0x3E80000000000000, !dbg !38
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not15.i5 = icmp eq i32 %108, 0, !dbg !38
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %105, float 0x3FBB000240000000) #2, !dbg !38
  %110 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %105, float 0x3FBB000240000000) #2, !dbg !38
  %.012.i6 = select i1 %.not15.i5, float %110, float %109, !dbg !38
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not16.i7 = icmp eq i32 %111, 0, !dbg !38
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i6, float %105, float 0xBFC0EF1C00000000) #2, !dbg !38
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i6, float %105, float 0xBFC0EF1C00000000) #2, !dbg !38
  %.010.i8 = select i1 %.not16.i7, float %113, float %112, !dbg !38
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not17.i9 = icmp eq i32 %114, 0, !dbg !38
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i8, float %105, float 0x3FC28C8EA0000000) #2, !dbg !38
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i8, float %105, float 0x3FC28C8EA0000000) #2, !dbg !38
  %.06.i10 = select i1 %.not17.i9, float %116, float %115, !dbg !38
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not18.i11 = icmp eq i32 %117, 0, !dbg !38
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %105, float 0xBFC54D1BA0000000) #2, !dbg !38
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %105, float 0xBFC54D1BA0000000) #2, !dbg !38
  %.02.i12 = select i1 %.not18.i11, float %119, float %118, !dbg !38
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not19.i13 = icmp eq i32 %120, 0, !dbg !38
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i12, float %105, float 0x3FC995F3C0000000) #2, !dbg !38
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i12, float %105, float 0x3FC995F3C0000000) #2, !dbg !38
  %.0.i14 = select i1 %.not19.i13, float %122, float %121, !dbg !38
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not20.i15 = icmp eq i32 %123, 0, !dbg !38
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %105, float 0xBFD0000840000000) #2, !dbg !38
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %105, float 0xBFD0000840000000) #2, !dbg !38
  %.011.i16 = select i1 %.not20.i15, float %125, float %124, !dbg !38
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not21.i17 = icmp eq i32 %126, 0, !dbg !38
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i16, float %105, float 0x3FD5555CC0000000) #2, !dbg !38
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i16, float %105, float 0x3FD5555CC0000000) #2, !dbg !38
  %.08.i18 = select i1 %.not21.i17, float %128, float %127, !dbg !38
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not22.i19 = icmp eq i32 %129, 0, !dbg !38
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i18, float %105, float -5.000000e-01) #2, !dbg !38
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i18, float %105, float -5.000000e-01) #2, !dbg !38
  %.07.i20 = select i1 %.not22.i19, float %131, float %130, !dbg !38
  %132 = fmul float %105, %.07.i20, !dbg !38
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not23.i21 = icmp eq i32 %133, 0, !dbg !38
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float %105, float %105) #2, !dbg !38
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float %105, float %105) #2, !dbg !38
  %.05.i22 = select i1 %.not23.i21, float %135, float %134, !dbg !38
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not24.i23 = icmp eq i32 %136, 0, !dbg !38
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %107, float 0x3FE62E4300000000, float %.05.i22) #2, !dbg !38
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %107, float 0x3FE62E4300000000, float %.05.i22) #2, !dbg !38
  %.04.i24 = select i1 %.not24.i23, float %138, float %137, !dbg !38
  %139 = icmp ugt i32 %97, 2139095039, !dbg !38
  br i1 %139, label %140, label %__nv_log1pf.exit31, !dbg !38

140:                                              ; preds = %__nv_log1pf.exit
  %141 = icmp sgt i32 %97, -1082130432, !dbg !38
  br i1 %141, label %__nv_fmaf_rn.exit.i28, label %145, !dbg !38

__nv_fmaf_rn.exit.i28:                            ; preds = %140
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !38
  %.not25.i29 = icmp eq i32 %142, 0, !dbg !38
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %90, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !38
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %90, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !38
  %.03.i30 = select i1 %.not25.i29, float %144, float %143, !dbg !38
  br label %145, !dbg !38

145:                                              ; preds = %__nv_fmaf_rn.exit.i28, %140
  %r.0.i26 = phi float [ %.03.i30, %__nv_fmaf_rn.exit.i28 ], [ %.04.i24, %140 ], !dbg !38
  %146 = fcmp oeq float %90, 0.000000e+00, !dbg !38
  %r.1.i27 = select i1 %146, float -0.000000e+00, float %r.0.i26, !dbg !38
  br label %__nv_log1pf.exit31, !dbg !38

__nv_log1pf.exit31:                               ; preds = %__nv_log1pf.exit, %145
  %r.2.i25 = phi float [ %r.1.i27, %145 ], [ %.04.i24, %__nv_log1pf.exit ], !dbg !38
  %147 = insertelement <2 x float> poison, float %14, i64 0, !dbg !39
  %148 = insertelement <2 x float> %147, float %17, i64 1, !dbg !39
  %149 = fcmp ogt <2 x float> %148, zeroinitializer, !dbg !39
  %150 = insertelement <2 x float> poison, float %22, i64 0, !dbg !43
  %151 = insertelement <2 x float> %150, float %86, i64 1, !dbg !43
  %152 = fmul <2 x float> %151, %151, !dbg !43
  %153 = bitcast i32 %16 to float, !dbg !18
  %154 = fsub float 1.000000e+00, %153, !dbg !44
  %155 = fmul <2 x float> %152, <float -4.000000e+00, float 3.000000e+00>, !dbg !45
  %156 = insertelement <2 x float> poison, float %153, i64 0, !dbg !46
  %157 = insertelement <2 x float> %156, float %154, i64 1, !dbg !46
  %158 = fmul <2 x float> %155, %157, !dbg !46
  %159 = select <2 x i1> %149, <2 x float> zeroinitializer, <2 x float> %148, !dbg !47
  %160 = insertelement <2 x float> poison, float %r.2.i, i64 0, !dbg !48
  %161 = insertelement <2 x float> %160, float %r.2.i25, i64 1, !dbg !48
  %162 = fsub <2 x float> %159, %161, !dbg !48
  %163 = fmul <2 x float> %158, %162, !dbg !49
  %shift = shufflevector <2 x float> %163, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !50
  %164 = fadd <2 x float> %163, %shift, !dbg !50
  %165 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !51
  %bc = bitcast <2 x float> %164 to <2 x i32>, !dbg !52
  %166 = extractelement <2 x i32> %bc, i64 0, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %166, ptr addrspace(1) %165, i1 %10) #2, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cindhooxhzakwf6ord7ri33wmmadyyvnqxfkielmsekxglow72g5.py", directory: "inductor_cache/in")
!4 = !{ptr @triton_poi_fused_log_sigmoid_forward_mul_neg_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_log_sigmoid_forward_mul_neg_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_log_sigmoid_forward_mul_neg_pow_rsub_sigmoid_sub_0", linkageName: "triton_poi_fused_log_sigmoid_forward_mul_neg_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 12, scope: !7)
!20 = !DILocation(line: 47, column: 30, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!23 = !DILocation(line: 28, column: 22, scope: !7)
!24 = !DILocation(line: 47, column: 29, scope: !21, inlinedAt: !23)
!25 = !DILocation(line: 47, column: 20, scope: !21, inlinedAt: !23)
!26 = !DILocation(line: 47, column: 16, scope: !21, inlinedAt: !23)
!27 = !DILocation(line: 35, column: 24, scope: !7)
!28 = !DILocation(line: 36, column: 13, scope: !7)
!29 = !DILocation(line: 37, column: 24, scope: !7)
!30 = !DILocation(line: 38, column: 28, scope: !7)
!31 = !DILocation(line: 47, column: 29, scope: !21, inlinedAt: !32)
!32 = !DILocation(line: 41, column: 23, scope: !7)
!33 = !DILocation(line: 47, column: 20, scope: !21, inlinedAt: !32)
!34 = !DILocation(line: 47, column: 16, scope: !21, inlinedAt: !32)
!35 = !DILocation(line: 49, column: 24, scope: !7)
!36 = !DILocation(line: 50, column: 13, scope: !7)
!37 = !DILocation(line: 51, column: 24, scope: !7)
!38 = !DILocation(line: 52, column: 28, scope: !7)
!39 = !DILocation(line: 110, column: 15, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 34, column: 40, scope: !7)
!43 = !DILocation(line: 29, column: 18, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 31, column: 18, scope: !7)
!46 = !DILocation(line: 32, column: 18, scope: !7)
!47 = !DILocation(line: 113, column: 29, scope: !40, inlinedAt: !42)
!48 = !DILocation(line: 39, column: 19, scope: !7)
!49 = !DILocation(line: 40, column: 19, scope: !7)
!50 = !DILocation(line: 55, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 25, scope: !7)
!52 = !DILocation(line: 56, column: 37, scope: !7)
!53 = !DILocation(line: 56, column: 4, scope: !7)
