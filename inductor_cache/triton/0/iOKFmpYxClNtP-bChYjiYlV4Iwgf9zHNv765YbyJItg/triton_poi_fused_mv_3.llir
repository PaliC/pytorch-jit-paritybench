; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mv_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 6, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 2, !dbg !12
  %12 = and i32 %10, 62, !dbg !12
  %13 = or disjoint i32 %8, %12, !dbg !13
  %14 = or disjoint i32 %11, %8, !dbg !13
  %15 = or disjoint i32 %14, 1, !dbg !13
  %16 = icmp slt i32 %13, 64, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %17 = sdiv i32 %.frozen, 4, !dbg !15
  %18 = srem i32 %17, 4, !dbg !16
  %19 = shl nsw i32 %18, 2, !dbg !17
  %20 = mul i32 %17, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %20, !dbg !18
  %21 = srem i32 %15, 4, !dbg !18
  %22 = shl nsw i32 %.decomposed, 6, !dbg !19
  %23 = shl nsw i32 %21, 6, !dbg !19
  %24 = sdiv i32 %13, 16, !dbg !20
  %25 = add nsw i32 %22, %24, !dbg !21
  %26 = add nsw i32 %25, %19, !dbg !22
  %27 = add nsw i32 %23, %24, !dbg !21
  %28 = add nsw i32 %27, %19, !dbg !22
  %29 = sext i32 %26 to i64, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !23
  %31 = sext i32 %28 to i64, !dbg !23
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %16) #3, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #3, !dbg !24
  %35 = sext i32 %24 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !25
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %16) #3, !dbg !26
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %16) #3, !dbg !26
  %39 = shl nsw i32 %18, 4, !dbg !27
  %40 = add nsw i32 %39, %.decomposed, !dbg !28
  %41 = sext i32 %40 to i64, !dbg !29
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !29
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %16) #3, !dbg !30
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !30
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !30
  %46 = bitcast i32 %44 to float, !dbg !30
  %47 = bitcast i32 %45 to float, !dbg !30
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !31
  %49 = add nsw i32 %19, 16, !dbg !32
  %50 = add nsw i32 %25, %49, !dbg !33
  %51 = add nsw i32 %27, %49, !dbg !33
  %52 = sext i32 %50 to i64, !dbg !34
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !34
  %54 = sext i32 %51 to i64, !dbg !34
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !34
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %16) #3, !dbg !35
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %16) #3, !dbg !35
  %58 = add nsw i32 %.decomposed, 4, !dbg !36
  %59 = add nsw i32 %58, %39, !dbg !37
  %60 = sext i32 %59 to i64, !dbg !38
  %61 = getelementptr float, ptr addrspace(1) %2, i64 %60, !dbg !38
  %62 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %61, i1 %16) #3, !dbg !39
  %63 = extractvalue { i32, i32 } %62, 0, !dbg !39
  %64 = extractvalue { i32, i32 } %62, 1, !dbg !39
  %65 = bitcast i32 %63 to float, !dbg !39
  %66 = bitcast i32 %64 to float, !dbg !39
  %67 = getelementptr i8, ptr addrspace(1) %3, i64 4, !dbg !40
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 true) #3, !dbg !41
  %69 = add nsw i32 %19, 32, !dbg !42
  %70 = add nsw i32 %25, %69, !dbg !43
  %71 = add nsw i32 %27, %69, !dbg !43
  %72 = sext i32 %70 to i64, !dbg !44
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !44
  %74 = sext i32 %71 to i64, !dbg !44
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !44
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %16) #3, !dbg !45
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %16) #3, !dbg !45
  %78 = add nsw i32 %.decomposed, 8, !dbg !46
  %79 = add nsw i32 %78, %39, !dbg !47
  %80 = sext i32 %79 to i64, !dbg !48
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !48
  %82 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %81, i1 %16) #3, !dbg !49
  %83 = extractvalue { i32, i32 } %82, 0, !dbg !49
  %84 = extractvalue { i32, i32 } %82, 1, !dbg !49
  %85 = bitcast i32 %83 to float, !dbg !49
  %86 = bitcast i32 %84 to float, !dbg !49
  %87 = getelementptr i8, ptr addrspace(1) %3, i64 8, !dbg !50
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %87, i1 true) #3, !dbg !51
  %89 = add nsw i32 %19, 48, !dbg !52
  %90 = add nsw i32 %25, %89, !dbg !53
  %91 = add nsw i32 %27, %89, !dbg !53
  %92 = sext i32 %90 to i64, !dbg !54
  %93 = getelementptr float, ptr addrspace(1) %0, i64 %92, !dbg !54
  %94 = sext i32 %91 to i64, !dbg !54
  %95 = getelementptr float, ptr addrspace(1) %0, i64 %94, !dbg !54
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 %16) #3, !dbg !55
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %95, i1 %16) #3, !dbg !55
  %98 = add nsw i32 %.decomposed, 12, !dbg !56
  %99 = add nsw i32 %98, %39, !dbg !57
  %100 = sext i32 %99 to i64, !dbg !58
  %101 = getelementptr float, ptr addrspace(1) %2, i64 %100, !dbg !58
  %102 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %101, i1 %16) #3, !dbg !59
  %103 = extractvalue { i32, i32 } %102, 0, !dbg !59
  %104 = extractvalue { i32, i32 } %102, 1, !dbg !59
  %105 = bitcast i32 %103 to float, !dbg !59
  %106 = bitcast i32 %104 to float, !dbg !59
  %107 = getelementptr i8, ptr addrspace(1) %3, i64 12, !dbg !60
  %108 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %107, i1 true) #3, !dbg !61
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not.i = icmp eq i32 %109, 0, !dbg !62
  %110 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #3, !dbg !62
  %111 = tail call float @llvm.nvvm.fabs.f(float %46) #3, !dbg !62
  %.01.i = select i1 %.not.i, float %111, float %110, !dbg !62
  %112 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !62
  br i1 %112, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !62

__internal_fmad.exit1.i:                          ; preds = %6
  %113 = fmul float %.01.i, 0x4007154760000000, !dbg !62
  %114 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %113) #3, !dbg !62
  %115 = fadd float %114, 1.000000e+00, !dbg !62
  %116 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %115) #4, !dbg !62, !srcloc !63
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not6.i = icmp eq i32 %117, 0, !dbg !62
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %116, float -2.000000e+00, float 1.000000e+00) #3, !dbg !62
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %116, float -2.000000e+00, float 1.000000e+00) #3, !dbg !62
  %.03.i = select i1 %.not6.i, float %119, float %118, !dbg !62
  %120 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !62
  %s.0.i = select i1 %120, float 1.000000e+00, float %.03.i, !dbg !62
  %121 = bitcast float %s.0.i to i32, !dbg !62
  %122 = and i32 %44, -2147483648, !dbg !62
  %123 = or i32 %122, %121, !dbg !62
  %124 = bitcast i32 %123 to float, !dbg !62
  br label %__nv_tanhf.exit, !dbg !62

__internal_fmad.exit3.i:                          ; preds = %6
  %125 = fmul float %46, %46, !dbg !62
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not1.i = icmp eq i32 %126, 0, !dbg !62
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %125, float 0xBFAAC795C0000000) #3, !dbg !62
  %128 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %125, float 0xBFAAC795C0000000) #3, !dbg !62
  %.06.i = select i1 %.not1.i, float %128, float %127, !dbg !62
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not2.i = icmp eq i32 %129, 0, !dbg !62
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %125, float 0x3FC10B2820000000) #3, !dbg !62
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %125, float 0x3FC10B2820000000) #3, !dbg !62
  %.05.i = select i1 %.not2.i, float %131, float %130, !dbg !62
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not3.i = icmp eq i32 %132, 0, !dbg !62
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %125, float 0xBFD5553DA0000000) #3, !dbg !62
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %125, float 0xBFD5553DA0000000) #3, !dbg !62
  %.0.i = select i1 %.not3.i, float %134, float %133, !dbg !62
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not4.i = icmp eq i32 %135, 0, !dbg !62
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %125, float 0.000000e+00) #3, !dbg !62
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %125, float 0.000000e+00) #3, !dbg !62
  %.04.i = select i1 %.not4.i, float %137, float %136, !dbg !62
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not5.i = icmp eq i32 %138, 0, !dbg !62
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %46, float %46) #3, !dbg !62
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %46, float %46) #3, !dbg !62
  %.02.i = select i1 %.not5.i, float %140, float %139, !dbg !62
  br label %__nv_tanhf.exit, !dbg !62

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %124, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !62
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not.i1 = icmp eq i32 %141, 0, !dbg !62
  %142 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #3, !dbg !62
  %143 = tail call float @llvm.nvvm.fabs.f(float %47) #3, !dbg !62
  %.01.i2 = select i1 %.not.i1, float %143, float %142, !dbg !62
  %144 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !62
  br i1 %144, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !62

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %145 = fmul float %.01.i2, 0x4007154760000000, !dbg !62
  %146 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %145) #3, !dbg !62
  %147 = fadd float %146, 1.000000e+00, !dbg !62
  %148 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %147) #4, !dbg !62, !srcloc !63
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not6.i4 = icmp eq i32 %149, 0, !dbg !62
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float -2.000000e+00, float 1.000000e+00) #3, !dbg !62
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float -2.000000e+00, float 1.000000e+00) #3, !dbg !62
  %.03.i5 = select i1 %.not6.i4, float %151, float %150, !dbg !62
  %152 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !62
  %s.0.i6 = select i1 %152, float 1.000000e+00, float %.03.i5, !dbg !62
  %153 = bitcast float %s.0.i6 to i32, !dbg !62
  %154 = and i32 %45, -2147483648, !dbg !62
  %155 = or i32 %154, %153, !dbg !62
  %156 = bitcast i32 %155 to float, !dbg !62
  br label %__nv_tanhf.exit19, !dbg !62

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %157 = fmul float %47, %47, !dbg !62
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not1.i9 = icmp eq i32 %158, 0, !dbg !62
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !62
  %160 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %157, float 0xBFAAC795C0000000) #3, !dbg !62
  %.06.i10 = select i1 %.not1.i9, float %160, float %159, !dbg !62
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not2.i11 = icmp eq i32 %161, 0, !dbg !62
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %157, float 0x3FC10B2820000000) #3, !dbg !62
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %157, float 0x3FC10B2820000000) #3, !dbg !62
  %.05.i12 = select i1 %.not2.i11, float %163, float %162, !dbg !62
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not3.i13 = icmp eq i32 %164, 0, !dbg !62
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %157, float 0xBFD5553DA0000000) #3, !dbg !62
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %157, float 0xBFD5553DA0000000) #3, !dbg !62
  %.0.i14 = select i1 %.not3.i13, float %166, float %165, !dbg !62
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not4.i15 = icmp eq i32 %167, 0, !dbg !62
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %157, float 0.000000e+00) #3, !dbg !62
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %157, float 0.000000e+00) #3, !dbg !62
  %.04.i16 = select i1 %.not4.i15, float %169, float %168, !dbg !62
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !62
  %.not5.i17 = icmp eq i32 %170, 0, !dbg !62
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %47, float %47) #3, !dbg !62
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %47, float %47) #3, !dbg !62
  %.02.i18 = select i1 %.not5.i17, float %172, float %171, !dbg !62
  br label %__nv_tanhf.exit19, !dbg !62

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %156, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !62
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not.i20 = icmp eq i32 %173, 0, !dbg !64
  %174 = tail call float @llvm.nvvm.fabs.ftz.f(float %65) #3, !dbg !64
  %175 = tail call float @llvm.nvvm.fabs.f(float %65) #3, !dbg !64
  %.01.i21 = select i1 %.not.i20, float %175, float %174, !dbg !64
  %176 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !64
  br i1 %176, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !64

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %177 = fmul float %.01.i21, 0x4007154760000000, !dbg !64
  %178 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %177) #3, !dbg !64
  %179 = fadd float %178, 1.000000e+00, !dbg !64
  %180 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %179) #4, !dbg !64, !srcloc !63
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not6.i23 = icmp eq i32 %181, 0, !dbg !64
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !64
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %180, float -2.000000e+00, float 1.000000e+00) #3, !dbg !64
  %.03.i24 = select i1 %.not6.i23, float %183, float %182, !dbg !64
  %184 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !64
  %s.0.i25 = select i1 %184, float 1.000000e+00, float %.03.i24, !dbg !64
  %185 = bitcast float %s.0.i25 to i32, !dbg !64
  %186 = and i32 %63, -2147483648, !dbg !64
  %187 = or i32 %186, %185, !dbg !64
  %188 = bitcast i32 %187 to float, !dbg !64
  br label %__nv_tanhf.exit38, !dbg !64

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %189 = fmul float %65, %65, !dbg !64
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not1.i28 = icmp eq i32 %190, 0, !dbg !64
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #3, !dbg !64
  %192 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #3, !dbg !64
  %.06.i29 = select i1 %.not1.i28, float %192, float %191, !dbg !64
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not2.i30 = icmp eq i32 %193, 0, !dbg !64
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %189, float 0x3FC10B2820000000) #3, !dbg !64
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %189, float 0x3FC10B2820000000) #3, !dbg !64
  %.05.i31 = select i1 %.not2.i30, float %195, float %194, !dbg !64
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not3.i32 = icmp eq i32 %196, 0, !dbg !64
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %189, float 0xBFD5553DA0000000) #3, !dbg !64
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %189, float 0xBFD5553DA0000000) #3, !dbg !64
  %.0.i33 = select i1 %.not3.i32, float %198, float %197, !dbg !64
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not4.i34 = icmp eq i32 %199, 0, !dbg !64
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %189, float 0.000000e+00) #3, !dbg !64
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %189, float 0.000000e+00) #3, !dbg !64
  %.04.i35 = select i1 %.not4.i34, float %201, float %200, !dbg !64
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not5.i36 = icmp eq i32 %202, 0, !dbg !64
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %65, float %65) #3, !dbg !64
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %65, float %65) #3, !dbg !64
  %.02.i37 = select i1 %.not5.i36, float %204, float %203, !dbg !64
  br label %__nv_tanhf.exit38, !dbg !64

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %188, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !64
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not.i39 = icmp eq i32 %205, 0, !dbg !64
  %206 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #3, !dbg !64
  %207 = tail call float @llvm.nvvm.fabs.f(float %66) #3, !dbg !64
  %.01.i40 = select i1 %.not.i39, float %207, float %206, !dbg !64
  %208 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !64
  br i1 %208, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !64

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %209 = fmul float %.01.i40, 0x4007154760000000, !dbg !64
  %210 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %209) #3, !dbg !64
  %211 = fadd float %210, 1.000000e+00, !dbg !64
  %212 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %211) #4, !dbg !64, !srcloc !63
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not6.i42 = icmp eq i32 %213, 0, !dbg !64
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float -2.000000e+00, float 1.000000e+00) #3, !dbg !64
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float -2.000000e+00, float 1.000000e+00) #3, !dbg !64
  %.03.i43 = select i1 %.not6.i42, float %215, float %214, !dbg !64
  %216 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !64
  %s.0.i44 = select i1 %216, float 1.000000e+00, float %.03.i43, !dbg !64
  %217 = bitcast float %s.0.i44 to i32, !dbg !64
  %218 = and i32 %64, -2147483648, !dbg !64
  %219 = or i32 %218, %217, !dbg !64
  %220 = bitcast i32 %219 to float, !dbg !64
  br label %__nv_tanhf.exit57, !dbg !64

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %221 = fmul float %66, %66, !dbg !64
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not1.i47 = icmp eq i32 %222, 0, !dbg !64
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #3, !dbg !64
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #3, !dbg !64
  %.06.i48 = select i1 %.not1.i47, float %224, float %223, !dbg !64
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not2.i49 = icmp eq i32 %225, 0, !dbg !64
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %221, float 0x3FC10B2820000000) #3, !dbg !64
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %221, float 0x3FC10B2820000000) #3, !dbg !64
  %.05.i50 = select i1 %.not2.i49, float %227, float %226, !dbg !64
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not3.i51 = icmp eq i32 %228, 0, !dbg !64
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %221, float 0xBFD5553DA0000000) #3, !dbg !64
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %221, float 0xBFD5553DA0000000) #3, !dbg !64
  %.0.i52 = select i1 %.not3.i51, float %230, float %229, !dbg !64
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not4.i53 = icmp eq i32 %231, 0, !dbg !64
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %221, float 0.000000e+00) #3, !dbg !64
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %221, float 0.000000e+00) #3, !dbg !64
  %.04.i54 = select i1 %.not4.i53, float %233, float %232, !dbg !64
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !64
  %.not5.i55 = icmp eq i32 %234, 0, !dbg !64
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %66, float %66) #3, !dbg !64
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %66, float %66) #3, !dbg !64
  %.02.i56 = select i1 %.not5.i55, float %236, float %235, !dbg !64
  br label %__nv_tanhf.exit57, !dbg !64

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %220, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !64
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not.i58 = icmp eq i32 %237, 0, !dbg !65
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %85) #3, !dbg !65
  %239 = tail call float @llvm.nvvm.fabs.f(float %85) #3, !dbg !65
  %.01.i59 = select i1 %.not.i58, float %239, float %238, !dbg !65
  %240 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !65
  br i1 %240, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !65

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %241 = fmul float %.01.i59, 0x4007154760000000, !dbg !65
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %241) #3, !dbg !65
  %243 = fadd float %242, 1.000000e+00, !dbg !65
  %244 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %243) #4, !dbg !65, !srcloc !63
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not6.i61 = icmp eq i32 %245, 0, !dbg !65
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %.03.i62 = select i1 %.not6.i61, float %247, float %246, !dbg !65
  %248 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !65
  %s.0.i63 = select i1 %248, float 1.000000e+00, float %.03.i62, !dbg !65
  %249 = bitcast float %s.0.i63 to i32, !dbg !65
  %250 = and i32 %83, -2147483648, !dbg !65
  %251 = or i32 %250, %249, !dbg !65
  %252 = bitcast i32 %251 to float, !dbg !65
  br label %__nv_tanhf.exit76, !dbg !65

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %253 = fmul float %85, %85, !dbg !65
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not1.i66 = icmp eq i32 %254, 0, !dbg !65
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %253, float 0xBFAAC795C0000000) #3, !dbg !65
  %256 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %253, float 0xBFAAC795C0000000) #3, !dbg !65
  %.06.i67 = select i1 %.not1.i66, float %256, float %255, !dbg !65
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not2.i68 = icmp eq i32 %257, 0, !dbg !65
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %253, float 0x3FC10B2820000000) #3, !dbg !65
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %253, float 0x3FC10B2820000000) #3, !dbg !65
  %.05.i69 = select i1 %.not2.i68, float %259, float %258, !dbg !65
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not3.i70 = icmp eq i32 %260, 0, !dbg !65
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %253, float 0xBFD5553DA0000000) #3, !dbg !65
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %253, float 0xBFD5553DA0000000) #3, !dbg !65
  %.0.i71 = select i1 %.not3.i70, float %262, float %261, !dbg !65
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not4.i72 = icmp eq i32 %263, 0, !dbg !65
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %253, float 0.000000e+00) #3, !dbg !65
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %253, float 0.000000e+00) #3, !dbg !65
  %.04.i73 = select i1 %.not4.i72, float %265, float %264, !dbg !65
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not5.i74 = icmp eq i32 %266, 0, !dbg !65
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %85, float %85) #3, !dbg !65
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %85, float %85) #3, !dbg !65
  %.02.i75 = select i1 %.not5.i74, float %268, float %267, !dbg !65
  br label %__nv_tanhf.exit76, !dbg !65

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi float [ %252, %__internal_fmad.exit1.i60 ], [ %.02.i75, %__internal_fmad.exit3.i65 ], !dbg !65
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not.i77 = icmp eq i32 %269, 0, !dbg !65
  %270 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #3, !dbg !65
  %271 = tail call float @llvm.nvvm.fabs.f(float %86) #3, !dbg !65
  %.01.i78 = select i1 %.not.i77, float %271, float %270, !dbg !65
  %272 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !65
  br i1 %272, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !65

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %273 = fmul float %.01.i78, 0x4007154760000000, !dbg !65
  %274 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %273) #3, !dbg !65
  %275 = fadd float %274, 1.000000e+00, !dbg !65
  %276 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %275) #4, !dbg !65, !srcloc !63
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not6.i80 = icmp eq i32 %277, 0, !dbg !65
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %276, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %276, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %.03.i81 = select i1 %.not6.i80, float %279, float %278, !dbg !65
  %280 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !65
  %s.0.i82 = select i1 %280, float 1.000000e+00, float %.03.i81, !dbg !65
  %281 = bitcast float %s.0.i82 to i32, !dbg !65
  %282 = and i32 %84, -2147483648, !dbg !65
  %283 = or i32 %282, %281, !dbg !65
  %284 = bitcast i32 %283 to float, !dbg !65
  br label %__nv_tanhf.exit95, !dbg !65

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %285 = fmul float %86, %86, !dbg !65
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not1.i85 = icmp eq i32 %286, 0, !dbg !65
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %285, float 0xBFAAC795C0000000) #3, !dbg !65
  %288 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %285, float 0xBFAAC795C0000000) #3, !dbg !65
  %.06.i86 = select i1 %.not1.i85, float %288, float %287, !dbg !65
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not2.i87 = icmp eq i32 %289, 0, !dbg !65
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %285, float 0x3FC10B2820000000) #3, !dbg !65
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %285, float 0x3FC10B2820000000) #3, !dbg !65
  %.05.i88 = select i1 %.not2.i87, float %291, float %290, !dbg !65
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not3.i89 = icmp eq i32 %292, 0, !dbg !65
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %285, float 0xBFD5553DA0000000) #3, !dbg !65
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %285, float 0xBFD5553DA0000000) #3, !dbg !65
  %.0.i90 = select i1 %.not3.i89, float %294, float %293, !dbg !65
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not4.i91 = icmp eq i32 %295, 0, !dbg !65
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %285, float 0.000000e+00) #3, !dbg !65
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %285, float 0.000000e+00) #3, !dbg !65
  %.04.i92 = select i1 %.not4.i91, float %297, float %296, !dbg !65
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not5.i93 = icmp eq i32 %298, 0, !dbg !65
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %86, float %86) #3, !dbg !65
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %86, float %86) #3, !dbg !65
  %.02.i94 = select i1 %.not5.i93, float %300, float %299, !dbg !65
  br label %__nv_tanhf.exit95, !dbg !65

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi float [ %284, %__internal_fmad.exit1.i79 ], [ %.02.i94, %__internal_fmad.exit3.i84 ], !dbg !65
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not.i96 = icmp eq i32 %301, 0, !dbg !66
  %302 = tail call float @llvm.nvvm.fabs.ftz.f(float %105) #3, !dbg !66
  %303 = tail call float @llvm.nvvm.fabs.f(float %105) #3, !dbg !66
  %.01.i97 = select i1 %.not.i96, float %303, float %302, !dbg !66
  %304 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !66
  br i1 %304, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !66

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %305 = fmul float %.01.i97, 0x4007154760000000, !dbg !66
  %306 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %305) #3, !dbg !66
  %307 = fadd float %306, 1.000000e+00, !dbg !66
  %308 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %307) #4, !dbg !66, !srcloc !63
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not6.i99 = icmp eq i32 %309, 0, !dbg !66
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %308, float -2.000000e+00, float 1.000000e+00) #3, !dbg !66
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %308, float -2.000000e+00, float 1.000000e+00) #3, !dbg !66
  %.03.i100 = select i1 %.not6.i99, float %311, float %310, !dbg !66
  %312 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !66
  %s.0.i101 = select i1 %312, float 1.000000e+00, float %.03.i100, !dbg !66
  %313 = bitcast float %s.0.i101 to i32, !dbg !66
  %314 = and i32 %103, -2147483648, !dbg !66
  %315 = or i32 %314, %313, !dbg !66
  %316 = bitcast i32 %315 to float, !dbg !66
  br label %__nv_tanhf.exit114, !dbg !66

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %317 = fmul float %105, %105, !dbg !66
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not1.i104 = icmp eq i32 %318, 0, !dbg !66
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #3, !dbg !66
  %320 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %317, float 0xBFAAC795C0000000) #3, !dbg !66
  %.06.i105 = select i1 %.not1.i104, float %320, float %319, !dbg !66
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not2.i106 = icmp eq i32 %321, 0, !dbg !66
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %317, float 0x3FC10B2820000000) #3, !dbg !66
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %317, float 0x3FC10B2820000000) #3, !dbg !66
  %.05.i107 = select i1 %.not2.i106, float %323, float %322, !dbg !66
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not3.i108 = icmp eq i32 %324, 0, !dbg !66
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %317, float 0xBFD5553DA0000000) #3, !dbg !66
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %317, float 0xBFD5553DA0000000) #3, !dbg !66
  %.0.i109 = select i1 %.not3.i108, float %326, float %325, !dbg !66
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not4.i110 = icmp eq i32 %327, 0, !dbg !66
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %317, float 0.000000e+00) #3, !dbg !66
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %317, float 0.000000e+00) #3, !dbg !66
  %.04.i111 = select i1 %.not4.i110, float %329, float %328, !dbg !66
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not5.i112 = icmp eq i32 %330, 0, !dbg !66
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %105, float %105) #3, !dbg !66
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %105, float %105) #3, !dbg !66
  %.02.i113 = select i1 %.not5.i112, float %332, float %331, !dbg !66
  br label %__nv_tanhf.exit114, !dbg !66

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi float [ %316, %__internal_fmad.exit1.i98 ], [ %.02.i113, %__internal_fmad.exit3.i103 ], !dbg !66
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not.i115 = icmp eq i32 %333, 0, !dbg !66
  %334 = tail call float @llvm.nvvm.fabs.ftz.f(float %106) #3, !dbg !66
  %335 = tail call float @llvm.nvvm.fabs.f(float %106) #3, !dbg !66
  %.01.i116 = select i1 %.not.i115, float %335, float %334, !dbg !66
  %336 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !66
  br i1 %336, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !66

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %337 = fmul float %.01.i116, 0x4007154760000000, !dbg !66
  %338 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %337) #3, !dbg !66
  %339 = fadd float %338, 1.000000e+00, !dbg !66
  %340 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %339) #4, !dbg !66, !srcloc !63
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not6.i118 = icmp eq i32 %341, 0, !dbg !66
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %340, float -2.000000e+00, float 1.000000e+00) #3, !dbg !66
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %340, float -2.000000e+00, float 1.000000e+00) #3, !dbg !66
  %.03.i119 = select i1 %.not6.i118, float %343, float %342, !dbg !66
  %344 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !66
  %s.0.i120 = select i1 %344, float 1.000000e+00, float %.03.i119, !dbg !66
  %345 = bitcast float %s.0.i120 to i32, !dbg !66
  %346 = and i32 %104, -2147483648, !dbg !66
  %347 = or i32 %346, %345, !dbg !66
  %348 = bitcast i32 %347 to float, !dbg !66
  br label %__nv_tanhf.exit133, !dbg !66

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %349 = fmul float %106, %106, !dbg !66
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not1.i123 = icmp eq i32 %350, 0, !dbg !66
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %349, float 0xBFAAC795C0000000) #3, !dbg !66
  %352 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %349, float 0xBFAAC795C0000000) #3, !dbg !66
  %.06.i124 = select i1 %.not1.i123, float %352, float %351, !dbg !66
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not2.i125 = icmp eq i32 %353, 0, !dbg !66
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %349, float 0x3FC10B2820000000) #3, !dbg !66
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %349, float 0x3FC10B2820000000) #3, !dbg !66
  %.05.i126 = select i1 %.not2.i125, float %355, float %354, !dbg !66
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not3.i127 = icmp eq i32 %356, 0, !dbg !66
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %349, float 0xBFD5553DA0000000) #3, !dbg !66
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %349, float 0xBFD5553DA0000000) #3, !dbg !66
  %.0.i128 = select i1 %.not3.i127, float %358, float %357, !dbg !66
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not4.i129 = icmp eq i32 %359, 0, !dbg !66
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %349, float 0.000000e+00) #3, !dbg !66
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %349, float 0.000000e+00) #3, !dbg !66
  %.04.i130 = select i1 %.not4.i129, float %361, float %360, !dbg !66
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !66
  %.not5.i131 = icmp eq i32 %362, 0, !dbg !66
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %106, float %106) #3, !dbg !66
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %106, float %106) #3, !dbg !66
  %.02.i132 = select i1 %.not5.i131, float %364, float %363, !dbg !66
  br label %__nv_tanhf.exit133, !dbg !66

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi float [ %348, %__internal_fmad.exit1.i117 ], [ %.02.i132, %__internal_fmad.exit3.i122 ], !dbg !66
  %365 = bitcast i32 %38 to float, !dbg !26
  %366 = fmul float %s.1.i7, %365, !dbg !67
  %367 = bitcast i32 %34 to float, !dbg !24
  %368 = fadd float %366, %367, !dbg !68
  %369 = bitcast i32 %48 to float, !dbg !31
  %370 = fmul float %368, %369, !dbg !69
  %371 = fmul float %s.1.i45, %365, !dbg !70
  %372 = bitcast i32 %57 to float, !dbg !35
  %373 = fadd float %371, %372, !dbg !71
  %374 = bitcast i32 %68 to float, !dbg !41
  %375 = fmul float %373, %374, !dbg !72
  %376 = fadd float %370, %375, !dbg !73
  %377 = fmul float %s.1.i83, %365, !dbg !74
  %378 = bitcast i32 %77 to float, !dbg !45
  %379 = fadd float %377, %378, !dbg !75
  %380 = bitcast i32 %88 to float, !dbg !51
  %381 = fmul float %379, %380, !dbg !76
  %382 = fadd float %376, %381, !dbg !77
  %383 = bitcast i32 %37 to float, !dbg !26
  %384 = fmul float %s.1.i, %383, !dbg !67
  %385 = bitcast i32 %33 to float, !dbg !24
  %386 = fadd float %384, %385, !dbg !68
  %387 = fmul float %386, %369, !dbg !69
  %388 = fmul float %s.1.i26, %383, !dbg !70
  %389 = bitcast i32 %56 to float, !dbg !35
  %390 = fadd float %388, %389, !dbg !71
  %391 = fmul float %390, %374, !dbg !72
  %392 = fadd float %387, %391, !dbg !73
  %393 = fmul float %s.1.i64, %383, !dbg !74
  %394 = bitcast i32 %76 to float, !dbg !45
  %395 = fadd float %393, %394, !dbg !75
  %396 = fmul float %395, %380, !dbg !76
  %397 = fadd float %392, %396, !dbg !77
  %398 = bitcast i32 %108 to float, !dbg !61
  %399 = bitcast i32 %97 to float, !dbg !55
  %400 = bitcast i32 %96 to float, !dbg !55
  %401 = fmul float %s.1.i102, %383, !dbg !78
  %402 = fmul float %s.1.i121, %365, !dbg !78
  %403 = fadd float %401, %400, !dbg !79
  %404 = fadd float %402, %399, !dbg !79
  %405 = fmul float %403, %398, !dbg !80
  %406 = fmul float %404, %398, !dbg !80
  %407 = fadd float %397, %405, !dbg !81
  %408 = fadd float %382, %406, !dbg !81
  %409 = sext i32 %13 to i64, !dbg !82
  %410 = getelementptr float, ptr addrspace(1) %4, i64 %409, !dbg !82
  %411 = bitcast float %407 to i32, !dbg !83
  %412 = bitcast float %408 to i32, !dbg !83
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %411, i32 %412, ptr addrspace(1) %410, i1 %16) #3, !dbg !83
  ret void, !dbg !84
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyyjcywkv3vg6k5zavzus2iy6eerui7e4njanq76pwb72cnwqjry.py", directory: "inductor_cache/yy")
!4 = !{ptr @triton_poi_fused_mv_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mv_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mv_3", linkageName: "triton_poi_fused_mv_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 41, scope: !7)
!16 = !DILocation(line: 25, column: 46, scope: !7)
!17 = !DILocation(line: 25, column: 34, scope: !7)
!18 = !DILocation(line: 25, column: 62, scope: !7)
!19 = !DILocation(line: 25, column: 57, scope: !7)
!20 = !DILocation(line: 25, column: 75, scope: !7)
!21 = !DILocation(line: 25, column: 52, scope: !7)
!22 = !DILocation(line: 25, column: 69, scope: !7)
!23 = !DILocation(line: 25, column: 30, scope: !7)
!24 = !DILocation(line: 25, column: 81, scope: !7)
!25 = !DILocation(line: 26, column: 30, scope: !7)
!26 = !DILocation(line: 26, column: 41, scope: !7)
!27 = !DILocation(line: 27, column: 35, scope: !7)
!28 = !DILocation(line: 27, column: 55, scope: !7)
!29 = !DILocation(line: 27, column: 30, scope: !7)
!30 = !DILocation(line: 27, column: 66, scope: !7)
!31 = !DILocation(line: 28, column: 19, scope: !7)
!32 = !DILocation(line: 30, column: 35, scope: !7)
!33 = !DILocation(line: 30, column: 74, scope: !7)
!34 = !DILocation(line: 30, column: 30, scope: !7)
!35 = !DILocation(line: 30, column: 86, scope: !7)
!36 = !DILocation(line: 31, column: 35, scope: !7)
!37 = !DILocation(line: 31, column: 60, scope: !7)
!38 = !DILocation(line: 31, column: 31, scope: !7)
!39 = !DILocation(line: 31, column: 71, scope: !7)
!40 = !DILocation(line: 32, column: 31, scope: !7)
!41 = !DILocation(line: 32, column: 20, scope: !7)
!42 = !DILocation(line: 34, column: 36, scope: !7)
!43 = !DILocation(line: 34, column: 75, scope: !7)
!44 = !DILocation(line: 34, column: 31, scope: !7)
!45 = !DILocation(line: 34, column: 87, scope: !7)
!46 = !DILocation(line: 35, column: 35, scope: !7)
!47 = !DILocation(line: 35, column: 60, scope: !7)
!48 = !DILocation(line: 35, column: 31, scope: !7)
!49 = !DILocation(line: 35, column: 71, scope: !7)
!50 = !DILocation(line: 36, column: 31, scope: !7)
!51 = !DILocation(line: 36, column: 20, scope: !7)
!52 = !DILocation(line: 38, column: 36, scope: !7)
!53 = !DILocation(line: 38, column: 75, scope: !7)
!54 = !DILocation(line: 38, column: 31, scope: !7)
!55 = !DILocation(line: 38, column: 87, scope: !7)
!56 = !DILocation(line: 39, column: 36, scope: !7)
!57 = !DILocation(line: 39, column: 61, scope: !7)
!58 = !DILocation(line: 39, column: 31, scope: !7)
!59 = !DILocation(line: 39, column: 72, scope: !7)
!60 = !DILocation(line: 40, column: 31, scope: !7)
!61 = !DILocation(line: 40, column: 20, scope: !7)
!62 = !DILocation(line: 42, column: 26, scope: !7)
!63 = !{i32 21046}
!64 = !DILocation(line: 46, column: 27, scope: !7)
!65 = !DILocation(line: 51, column: 27, scope: !7)
!66 = !DILocation(line: 56, column: 27, scope: !7)
!67 = !DILocation(line: 43, column: 18, scope: !7)
!68 = !DILocation(line: 44, column: 18, scope: !7)
!69 = !DILocation(line: 45, column: 18, scope: !7)
!70 = !DILocation(line: 47, column: 19, scope: !7)
!71 = !DILocation(line: 48, column: 19, scope: !7)
!72 = !DILocation(line: 49, column: 20, scope: !7)
!73 = !DILocation(line: 50, column: 19, scope: !7)
!74 = !DILocation(line: 52, column: 19, scope: !7)
!75 = !DILocation(line: 53, column: 20, scope: !7)
!76 = !DILocation(line: 54, column: 20, scope: !7)
!77 = !DILocation(line: 55, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 19, scope: !7)
!79 = !DILocation(line: 58, column: 20, scope: !7)
!80 = !DILocation(line: 59, column: 20, scope: !7)
!81 = !DILocation(line: 60, column: 20, scope: !7)
!82 = !DILocation(line: 61, column: 25, scope: !7)
!83 = !DILocation(line: 61, column: 37, scope: !7)
!84 = !DILocation(line: 61, column: 4, scope: !7)
