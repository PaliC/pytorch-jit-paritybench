//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_embedding_mul_pow_sub_12 // -- Begin function triton_poi_fused_embedding_mul_pow_sub_12
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 98, 104, 47, 99, 98, 104, 116, 103, 120, 111, 120, 118, 104, 110, 102, 52, 99, 52, 119, 97, 50, 110, 118, 102, 103, 112, 120, 54, 110, 52, 100, 52, 55, 51, 109, 108, 119, 54, 119, 116, 108, 103, 104, 110, 100, 106, 116, 97, 105, 119, 120, 111, 101, 109, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 48, 50, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_embedding_mul_pow_sub_12
.visible .entry triton_poi_fused_embedding_mul_pow_sub_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_4,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_5,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<92>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<72>;
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_embedding_mul_pow_sub_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:28
	// begin inline asm
	mov.u32 %r11, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:33
	shl.b32 	%r1, %r11, 9;
	ld.param.u64 	%rd19, [triton_poi_fused_embedding_mul_pow_sub_12_param_2];
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd20, [triton_poi_fused_embedding_mul_pow_sub_12_param_3];
	shl.b32 	%r21, %r2, 2;
	and.b32  	%r3, %r21, 508;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r22, %r1, %r3;
	.loc	1 25 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:28
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p7, %r12, 64;
	.loc	1 31 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:31:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 24;
	add.s32 	%r26, %r22, %r25;
	.loc	1 30 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:30:19
	and.b32  	%r27, %r26, -256;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 32 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:30
	mul.wide.s32 	%rd21, %r22, 8;
	add.s64 	%rd9, %rd18, %rd21;
	cvt.s64.s32 	%rd22, %r1;
	cvt.u64.u32 	%rd23, %r3;
	or.b64  	%rd24, %rd22, %rd23;
	shl.b64 	%rd25, %rd24, 3;
	add.s64 	%rd26, %rd18, %rd25;
	add.s64 	%rd12, %rd26, 16;
	mov.pred 	%p2, -1;
	.loc	1 32 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:35
	// begin inline asm
	mov.u64 %rd7, 0x0;
	mov.u64 %rd8, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd7, %rd8 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	mov.u64 %rd11, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd10, %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 33 39                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:39
	shl.b32 	%r29, %r12, 8;
	.loc	1 33 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:35
	add.s32 	%r30, %r28, %r29;
	.loc	1 33 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:50
	shl.b32 	%r31, %r26, 6;
	and.b32  	%r32, %r31, -16384;
	.loc	1 33 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:44
	add.s32 	%r33, %r30, %r32;
	.loc	1 33 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:30
	mul.wide.s32 	%rd27, %r33, 4;
	add.s64 	%rd13, %rd19, %rd27;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p7 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:30
	mul.wide.s32 	%rd28, %r12, 4;
	add.s64 	%rd14, %rd20, %rd28;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r17 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r18 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r19 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r20 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:38:32
	shr.u64 	%rd29, %rd7, 53;
	shr.u64 	%rd30, %rd10, 53;
	shr.u64 	%rd31, %rd8, 53;
	shr.u64 	%rd32, %rd11, 53;
	and.b64  	%rd33, %rd32, 1024;
	and.b64  	%rd34, %rd31, 1024;
	and.b64  	%rd35, %rd30, 1024;
	and.b64  	%rd36, %rd29, 1024;
	add.s64 	%rd1, %rd36, %rd7;
	add.s64 	%rd3, %rd35, %rd10;
	add.s64 	%rd2, %rd34, %rd8;
	add.s64 	%rd4, %rd33, %rd11;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	or.b64  	%rd37, %rd2, %rd4;
	or.b64  	%rd38, %rd1, %rd3;
	or.b64  	%rd39, %rd38, %rd37;
	setp.lt.u64 	%p8, %rd39, 1024;
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 50                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:0:50
	ld.param.u64 	%rd6, [triton_poi_fused_embedding_mul_pow_sub_12_param_4];
	ld.param.u64 	%rd5, [triton_poi_fused_embedding_mul_pow_sub_12_param_1];
	or.b32  	%r4, %r3, 2;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	mov.b32 	%f1, %r20;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	mov.b32 	%f2, %r16;
	mov.b32 	%f3, %r15;
	mov.b32 	%f4, %r14;
	mov.b32 	%f5, %r13;
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	and.b32  	%r54, %r2, 127;
	or.b32  	%r55, %r54, 384;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r56, %r1, %r55;
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	or.b32  	%r57, %r54, 256;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r58, %r1, %r57;
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	or.b32  	%r59, %r54, 128;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r60, %r1, %r59;
	or.b32  	%r61, %r1, %r54;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	bar.sync 	0;
	.loc	1 40 42                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:42
	shl.b32 	%r62, %r12, 10;
	.loc	1 40 37                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:37
	cvt.s64.s32 	%rd58, %r62;
	or.b64  	%rd59, %rd4, %rd58;
	.loc	1 40 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:30
	shl.b64 	%rd60, %rd1, 2;
	add.s64 	%rd61, %rd5, %rd60;
	mul.wide.s32 	%rd62, %r62, 4;
	add.s64 	%rd46, %rd61, %rd62;
	shl.b64 	%rd63, %rd2, 2;
	add.s64 	%rd64, %rd5, %rd63;
	add.s64 	%rd47, %rd64, %rd62;
	shl.b64 	%rd65, %rd3, 2;
	add.s64 	%rd66, %rd5, %rd65;
	add.s64 	%rd48, %rd66, %rd62;
	shl.b64 	%rd67, %rd59, 2;
	add.s64 	%rd49, %rd5, %rd67;
	.loc	1 40 47                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:47
	shl.b32 	%r63, %r3, 4;
	mov.u32 	%r64, global_smem;
	add.s32 	%r34, %r64, %r63;
	// begin inline asm
	@%p2 st.shared.b64 [ %r34 + 0 ], %rd46;
	// end inline asm
	add.s32 	%r35, %r34, 16;
	// begin inline asm
	@%p2 st.shared.b64 [ %r35 + 0 ], %rd47;
	// end inline asm
	shl.b32 	%r65, %r4, 4;
	add.s32 	%r36, %r64, %r65;
	// begin inline asm
	@%p2 st.shared.b64 [ %r36 + 0 ], %rd48;
	// end inline asm
	add.s32 	%r37, %r34, 48;
	// begin inline asm
	@%p2 st.shared.b64 [ %r37 + 0 ], %rd49;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r66, %r54, 4;
	add.s32 	%r67, %r64, %r66;
	ld.shared.u64 	%rd50, [%r67];
	shl.b32 	%r68, %r59, 4;
	add.s32 	%r69, %r64, %r68;
	ld.shared.u64 	%rd51, [%r69];
	shl.b32 	%r70, %r57, 4;
	add.s32 	%r71, %r64, %r70;
	ld.shared.u64 	%rd52, [%r71];
	shl.b32 	%r72, %r55, 4;
	add.s32 	%r73, %r64, %r72;
	ld.shared.u64 	%rd53, [%r73];
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r38 }, [ %rd50 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r38;
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r39 }, [ %rd51 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r39;
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r40 }, [ %rd52 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r40;
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r41 }, [ %rd53 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r41;
	.loc	1 41 18                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:41:18
	add.f32 	%f10, %f5, %f1;
	add.f32 	%f11, %f4, %f1;
	add.f32 	%f12, %f3, %f1;
	add.f32 	%f13, %f2, %f1;
	bar.sync 	0;
	shl.b32 	%r74, %r3, 3;
	sub.s32 	%r42, %r34, %r74;
	mov.b32 	%r43, %f10;
	// begin inline asm
	@%p2 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r42, 8;
	mov.b32 	%r45, %f11;
	// begin inline asm
	@%p2 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	shl.b32 	%r75, %r4, 3;
	sub.s32 	%r46, %r36, %r75;
	mov.b32 	%r47, %f12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r42, 24;
	mov.b32 	%r49, %f13;
	// begin inline asm
	@%p2 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r76, %r54, 3;
	sub.s32 	%r77, %r67, %r76;
	ld.shared.f32 	%f14, [%r77];
	shl.b32 	%r78, %r59, 3;
	sub.s32 	%r79, %r69, %r78;
	ld.shared.f32 	%f15, [%r79];
	shl.b32 	%r80, %r57, 3;
	sub.s32 	%r81, %r71, %r80;
	ld.shared.f32 	%f16, [%r81];
	shl.b32 	%r82, %r55, 3;
	sub.s32 	%r83, %r73, %r82;
	ld.shared.f32 	%f17, [%r83];
	.loc	1 42 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:42:19
	sub.f32 	%f18, %f6, %f14;
	sub.f32 	%f19, %f7, %f15;
	sub.f32 	%f20, %f8, %f16;
	sub.f32 	%f21, %f9, %f17;
	.loc	1 44 20                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:44:20
	add.f32 	%f22, %f18, %f18;
	add.f32 	%f23, %f19, %f19;
	add.f32 	%f24, %f20, %f20;
	add.f32 	%f25, %f21, %f21;
	.loc	1 45 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:33
	shl.b32 	%r84, %r61, 6;
	shl.b32 	%r85, %r60, 6;
	shl.b32 	%r86, %r58, 6;
	shl.b32 	%r87, %r56, 6;
	.loc	1 45 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:30
	add.s32 	%r88, %r84, %r12;
	add.s32 	%r89, %r85, %r12;
	add.s32 	%r90, %r86, %r12;
	add.s32 	%r91, %r87, %r12;
	.loc	1 45 25                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:25
	mul.wide.s32 	%rd68, %r88, 4;
	add.s64 	%rd54, %rd6, %rd68;
	mul.wide.s32 	%rd69, %r89, 4;
	add.s64 	%rd55, %rd6, %rd69;
	mul.wide.s32 	%rd70, %r90, 4;
	add.s64 	%rd56, %rd6, %rd70;
	mul.wide.s32 	%rd71, %r91, 4;
	add.s64 	%rd57, %rd6, %rd71;
	.loc	1 45 45                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:45
	mov.b32 	%r50, %f22;
	// begin inline asm
	@%p7 st.global.b32 [ %rd54 + 0 ], { %r50 };
	// end inline asm
	mov.b32 	%r51, %f23;
	// begin inline asm
	@%p7 st.global.b32 [ %rd55 + 0 ], { %r51 };
	// end inline asm
	mov.b32 	%r52, %f24;
	// begin inline asm
	@%p7 st.global.b32 [ %rd56 + 0 ], { %r52 };
	// end inline asm
	mov.b32 	%r53, %f25;
	// begin inline asm
	@%p7 st.global.b32 [ %rd57 + 0 ], { %r53 };
	// end inline asm
	.loc	1 45 4                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:4
	ret;
$L__BB0_1:
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	mov.u64 	%rd40, assertMessage_0;
	cvta.global.u64 	%rd41, %rd40;
	mov.u64 	%rd42, assertFile_0;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, assertFunc_0;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd41;
	.param .b64 param1;
	st.param.b64 	[param1], %rd43;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd45;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bh/cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 104
.b8 116
.b8 103
.b8 120
.b8 111
.b8 120
.b8 118
.b8 104
.b8 110
.b8 102
.b8 52
.b8 99
.b8 52
.b8 119
.b8 97
.b8 50
.b8 110
.b8 118
.b8 102
.b8 103
.b8 112
.b8 120
.b8 54
.b8 110
.b8 52
.b8 100
.b8 52
.b8 55
.b8 51
.b8 109
.b8 108
.b8 119
.b8 54
.b8 119
.b8 116
.b8 108
.b8 103
.b8 104
.b8 110
.b8 100
.b8 106
.b8 116
.b8 97
.b8 105
.b8 119
.b8 120
.b8 111
.b8 101
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
