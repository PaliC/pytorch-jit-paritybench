//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49 // -- Begin function triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49
.visible .entry triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_8,
	.param .u32 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_9,
	.param .u32 triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_10
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<119>;
	.reg .b32 	%r<302>;
	.reg .f32 	%f<358>;
	.reg .b64 	%rd<65>;
	.loc	1 19 0                          // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd49, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_0];
	ld.param.u64 	%rd50, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:24:21
	setp.lt.s32 	%p1, %r1, 2048;
	ld.param.u64 	%rd51, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_2];
	ld.param.u64 	%rd52, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_3];
	.loc	1 25 33                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:25:33
	mov.u32 	%r248, %tid.x;
	shl.b32 	%r249, %r248, 2;
	ld.param.u64 	%rd53, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_4];
	and.b32  	%r250, %r249, 1020;
	ld.param.u64 	%rd54, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_5];
	ld.param.u64 	%rd55, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_6];
	.loc	1 27 19                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:27:19
	shr.s32 	%r251, %r1, 31;
	shr.u32 	%r252, %r251, 23;
	add.s32 	%r253, %r1, %r252;
	shr.u32 	%r254, %r253, 9;
	ld.param.u64 	%rd56, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_7];
	.loc	1 26 19                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:26:19
	and.b32  	%r255, %r253, -512;
	ld.param.u64 	%rd57, [triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_49_param_8];
	sub.s32 	%r256, %r1, %r255;
	.loc	1 29 37                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:37
	add.s32 	%r257, %r256, 3072;
	.loc	1 29 48                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:48
	mul.lo.s32 	%r258, %r254, 18432;
	.loc	1 29 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:42
	add.s32 	%r259, %r257, %r258;
	.loc	1 29 30                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:30
	mul.wide.s32 	%rd58, %r259, 4;
	add.s64 	%rd1, %rd51, %rd58;
	.loc	1 29 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:30:30
	mul.wide.u32 	%rd59, %r257, 4;
	add.s64 	%rd6, %rd52, %rd59;
	.loc	1 30 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:30:42
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 31 37                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:31:37
	add.s32 	%r260, %r256, 3584;
	.loc	1 31 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:31:42
	add.s32 	%r261, %r260, %r258;
	.loc	1 31 30                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:31:30
	mul.wide.s32 	%rd60, %r261, 4;
	add.s64 	%rd11, %rd51, %rd60;
	.loc	1 31 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:31:53
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:32:30
	mul.wide.u32 	%rd61, %r260, 4;
	add.s64 	%rd16, %rd52, %rd61;
	.loc	1 32 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:32:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r17;
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 33 18                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:33:18
	add.f32 	%f5, %f1, %f2;
	.loc	1 34 18                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:34:18
	add.f32 	%f6, %f3, %f4;
	.loc	1 35 25                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:35:25
	mul.wide.s32 	%rd62, %r1, 4;
	add.s64 	%rd21, %rd54, %rd62;
	.loc	1 35 36                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:35:36
	and.b32  	%r262, %r248, 255;
	setp.eq.s32 	%p106, %r262, 0;
	mov.b32 	%r22, %f5;
	and.pred  	%p21, %p106, %p1;
	// begin inline asm
	@%p21 st.global.b32 [ %rd21 + 0 ], { %r22 };
	// end inline asm
	.loc	1 36 25                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:36:25
	add.s64 	%rd22, %rd55, %rd62;
	.loc	1 36 36                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:36:36
	mov.b32 	%r23, %f6;
	// begin inline asm
	@%p21 st.global.b32 [ %rd22 + 0 ], { %r23 };
	// end inline asm
	.loc	1 37 30                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:37:30
	mul.wide.s32 	%rd63, %r256, 4;
	add.s64 	%rd23, %rd53, %rd63;
	.loc	1 37 35                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:37:35
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 45 48                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:48
	shl.b32 	%r263, %r1, 12;
	or.b32  	%r264, %r263, %r250;
	.loc	1 45 38                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:38
	mul.wide.s32 	%rd64, %r264, 4;
	add.s64 	%rd27, %rd49, %rd64;
	mov.b32 	%r32, 0;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd27 + 0 ];
	@!%p1 mov.u32 %r28, %r32;
	@!%p1 mov.u32 %r29, %r32;
	@!%p1 mov.u32 %r30, %r32;
	@!%p1 mov.u32 %r31, %r32;
	// end inline asm
	mov.b32 	%f7, %r28;
	mov.b32 	%f8, %r29;
	mov.b32 	%f9, %r30;
	mov.b32 	%f10, %r31;
	.loc	1 46 22                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:46:22
	mov.b32 	%f11, %r27;
	add.f32 	%f12, %f11, %f10;
	add.f32 	%f13, %f11, %f9;
	add.f32 	%f14, %f11, %f8;
	add.f32 	%f15, %f11, %f7;
	.loc	1 54 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:54:53
	mov.b32 	%r36, %f15;
	mov.b32 	%r37, %f14;
	mov.b32 	%r38, %f13;
	mov.b32 	%r39, %f12;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd27 + 0 ], { %r36, %r37, %r38, %r39 };
	// end inline asm
	.loc	1 51 62                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:51:62
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	selp.f32 	%f17, %f14, 0f00000000, %p1;
	selp.f32 	%f18, %f13, 0f00000000, %p1;
	selp.f32 	%f19, %f12, 0f00000000, %p1;
	.loc	1 53 66                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:53:66
	selp.f32 	%f20, 0f40000000, 0f3F800000, %p1;
	.loc	1 25 33                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:25:33
	and.b32  	%r265, %r248, 31;
	.loc	1 45 38                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:38
	add.s64 	%rd29, %rd27, 4096;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd29 + 0 ];
	@!%p1 mov.u32 %r40, %r32;
	@!%p1 mov.u32 %r41, %r32;
	@!%p1 mov.u32 %r42, %r32;
	@!%p1 mov.u32 %r43, %r32;
	// end inline asm
	mov.b32 	%f21, %r43;
	mov.b32 	%f22, %r42;
	mov.b32 	%f23, %r41;
	mov.b32 	%f24, %r40;
	.loc	1 46 22                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:46:22
	add.f32 	%f25, %f11, %f24;
	add.f32 	%f26, %f11, %f23;
	add.f32 	%f27, %f11, %f22;
	add.f32 	%f28, %f11, %f21;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f29, %f28, %f19;
	sub.f32 	%f30, %f27, %f18;
	sub.f32 	%f31, %f26, %f17;
	sub.f32 	%f32, %f25, %f16;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r49, %f32;
	mov.b32 	%r50, %f20;
	// begin inline asm
	div.full.f32 %r48, %r49, %r50;
	// end inline asm
	mov.b32 	%f33, %r48;
	mov.b32 	%r52, %f31;
	// begin inline asm
	div.full.f32 %r51, %r52, %r50;
	// end inline asm
	mov.b32 	%f34, %r51;
	mov.b32 	%r55, %f30;
	// begin inline asm
	div.full.f32 %r54, %r55, %r50;
	// end inline asm
	mov.b32 	%f35, %r54;
	mov.b32 	%r58, %f29;
	// begin inline asm
	div.full.f32 %r57, %r58, %r50;
	// end inline asm
	mov.b32 	%f36, %r57;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f37, %f16, %f33;
	add.f32 	%f38, %f17, %f34;
	add.f32 	%f39, %f18, %f35;
	add.f32 	%f40, %f19, %f36;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f41, %f28, %f40;
	sub.f32 	%f42, %f27, %f39;
	sub.f32 	%f43, %f26, %f38;
	sub.f32 	%f44, %f25, %f37;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f45, %f32, %f44, 0f00000000;
	fma.rn.f32 	%f46, %f31, %f43, 0f00000000;
	fma.rn.f32 	%f47, %f30, %f42, 0f00000000;
	fma.rn.f32 	%f48, %f29, %f41, 0f00000000;
$L__tmp2:
	.loc	1 51 62                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:51:62
	selp.f32 	%f49, %f37, 0f00000000, %p1;
	selp.f32 	%f50, %f38, 0f00000000, %p1;
	selp.f32 	%f51, %f39, 0f00000000, %p1;
	selp.f32 	%f52, %f40, 0f00000000, %p1;
	.loc	1 54 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:54:53
	mov.b32 	%r60, %f25;
	mov.b32 	%r61, %f26;
	mov.b32 	%r62, %f27;
	mov.b32 	%r63, %f28;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd29 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	.loc	1 45 38                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:38
	add.s64 	%rd31, %rd27, 8192;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd31 + 0 ];
	@!%p1 mov.u32 %r64, %r32;
	@!%p1 mov.u32 %r65, %r32;
	@!%p1 mov.u32 %r66, %r32;
	@!%p1 mov.u32 %r67, %r32;
	// end inline asm
$L__tmp3:
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f53, %f20, 0f3F800000;
$L__tmp4:
	.loc	1 53 66                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:53:66
	selp.f32 	%f54, %f53, 0f3F800000, %p1;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	mov.b32 	%f55, %r67;
	mov.b32 	%f56, %r66;
	mov.b32 	%f57, %r65;
	mov.b32 	%f58, %r64;
	.loc	1 46 22                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:46:22
	add.f32 	%f59, %f11, %f58;
	add.f32 	%f60, %f11, %f57;
	add.f32 	%f61, %f11, %f56;
	add.f32 	%f62, %f11, %f55;
$L__tmp5:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f63, %f62, %f52;
	sub.f32 	%f64, %f61, %f51;
	sub.f32 	%f65, %f60, %f50;
	sub.f32 	%f66, %f59, %f49;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r73, %f66;
	mov.b32 	%r74, %f54;
	// begin inline asm
	div.full.f32 %r72, %r73, %r74;
	// end inline asm
	mov.b32 	%f67, %r72;
	mov.b32 	%r76, %f65;
	// begin inline asm
	div.full.f32 %r75, %r76, %r74;
	// end inline asm
	mov.b32 	%f68, %r75;
	mov.b32 	%r79, %f64;
	// begin inline asm
	div.full.f32 %r78, %r79, %r74;
	// end inline asm
	mov.b32 	%f69, %r78;
	mov.b32 	%r82, %f63;
	// begin inline asm
	div.full.f32 %r81, %r82, %r74;
	// end inline asm
	mov.b32 	%f70, %r81;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f71, %f52, %f70;
	add.f32 	%f72, %f51, %f69;
	add.f32 	%f73, %f50, %f68;
	add.f32 	%f74, %f49, %f67;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f75, %f59, %f74;
	sub.f32 	%f76, %f60, %f73;
	sub.f32 	%f77, %f61, %f72;
	sub.f32 	%f78, %f62, %f71;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f79, %f63, %f78, %f48;
	fma.rn.f32 	%f80, %f64, %f77, %f47;
	fma.rn.f32 	%f81, %f65, %f76, %f46;
	fma.rn.f32 	%f82, %f66, %f75, %f45;
$L__tmp6:
	.loc	1 51 62                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:51:62
	selp.f32 	%f83, %f74, 0f00000000, %p1;
	selp.f32 	%f84, %f73, 0f00000000, %p1;
	selp.f32 	%f85, %f72, 0f00000000, %p1;
	selp.f32 	%f86, %f71, 0f00000000, %p1;
	.loc	1 54 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:54:53
	mov.b32 	%r84, %f59;
	mov.b32 	%r85, %f60;
	mov.b32 	%r86, %f61;
	mov.b32 	%r87, %f62;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd31 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 45 38                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:38
	add.s64 	%rd33, %rd27, 12288;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	// begin inline asm
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	mov.u32 %r90, 0x0;
	mov.u32 %r91, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r88, %r89, %r90, %r91 }, [ %rd33 + 0 ];
	@!%p1 mov.u32 %r88, %r32;
	@!%p1 mov.u32 %r89, %r32;
	@!%p1 mov.u32 %r90, %r32;
	@!%p1 mov.u32 %r91, %r32;
	// end inline asm
$L__tmp7:
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f87, %f53, 0f3F800000;
$L__tmp8:
	.loc	1 53 66                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:53:66
	selp.f32 	%f88, %f87, 0f3F800000, %p1;
	.loc	1 45 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:45:53
	mov.b32 	%f89, %r91;
	mov.b32 	%f90, %r90;
	mov.b32 	%f91, %r89;
	mov.b32 	%f92, %r88;
	.loc	1 46 22                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:46:22
	add.f32 	%f93, %f11, %f92;
	add.f32 	%f94, %f11, %f91;
	add.f32 	%f95, %f11, %f90;
	add.f32 	%f96, %f11, %f89;
$L__tmp9:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f97, %f96, %f86;
	sub.f32 	%f98, %f95, %f85;
	sub.f32 	%f99, %f94, %f84;
	sub.f32 	%f100, %f93, %f83;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r97, %f100;
	mov.b32 	%r98, %f88;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f101, %r96;
	mov.b32 	%r100, %f99;
	// begin inline asm
	div.full.f32 %r99, %r100, %r98;
	// end inline asm
	mov.b32 	%f102, %r99;
	mov.b32 	%r103, %f98;
	// begin inline asm
	div.full.f32 %r102, %r103, %r98;
	// end inline asm
	mov.b32 	%f103, %r102;
	mov.b32 	%r106, %f97;
	// begin inline asm
	div.full.f32 %r105, %r106, %r98;
	// end inline asm
	mov.b32 	%f104, %r105;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f105, %f83, %f101;
	add.f32 	%f106, %f84, %f102;
	add.f32 	%f107, %f85, %f103;
	add.f32 	%f108, %f86, %f104;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f109, %f96, %f108;
	sub.f32 	%f110, %f95, %f107;
	sub.f32 	%f111, %f94, %f106;
	sub.f32 	%f112, %f93, %f105;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f113, %f100, %f112, %f82;
	fma.rn.f32 	%f114, %f99, %f111, %f81;
	fma.rn.f32 	%f115, %f98, %f110, %f80;
	fma.rn.f32 	%f116, %f97, %f109, %f79;
$L__tmp10:
	.loc	1 51 62                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:51:62
	selp.f32 	%f117, %f108, 0f00000000, %p1;
	selp.f32 	%f118, %f107, 0f00000000, %p1;
	selp.f32 	%f119, %f105, 0f00000000, %p1;
	selp.f32 	%f120, %f106, 0f00000000, %p1;
	.loc	1 52 58                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:52:58
	selp.f32 	%f121, %f116, 0f00000000, %p1;
	selp.f32 	%f122, %f115, 0f00000000, %p1;
	selp.f32 	%f123, %f114, 0f00000000, %p1;
	selp.f32 	%f124, %f113, 0f00000000, %p1;
	.loc	1 53 66                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:53:66
	selp.f32 	%f125, %f87, 0f00000000, %p1;
	.loc	1 54 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:54:53
	mov.b32 	%r108, %f93;
	mov.b32 	%r109, %f94;
	mov.b32 	%r110, %f95;
	mov.b32 	%r111, %f96;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd33 + 0 ], { %r108, %r109, %r110, %r111 };
	// end inline asm
	.loc	1 29 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:29:53
	mov.b32 	%f126, %r6;
	.loc	1 30 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:30:42
	mov.b32 	%f127, %r11;
	.loc	1 31 53                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:31:53
	mov.b32 	%f128, %r16;
	.loc	1 32 42                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:32:42
	mov.b32 	%f129, %r21;
	.loc	1 33 18                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:33:18
	add.f32 	%f130, %f126, %f127;
	.loc	1 34 18                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:34:18
	add.f32 	%f131, %f128, %f129;
$L__tmp11:
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f132, %f120, %f119;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f133, %f125, %f125;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p107, %f133, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r113, %f125;
	mov.b32 	%r114, %f133;
	// begin inline asm
	div.full.f32 %r112, %r113, %r114;
	// end inline asm
	mov.b32 	%f134, %r112;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f135, 0f00000000, %f134, %p107;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f136, %f132, %f135, %f119;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f137, %f124, %f123;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f138, %f132, %f132;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f139, %f138, %f125;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f140, %f139, %f135, %f137;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f141, %f118, %f136;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f142, %f125, %f133;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p108, %f142, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r117, %f142;
	// begin inline asm
	div.full.f32 %r115, %r113, %r117;
	// end inline asm
	mov.b32 	%f143, %r115;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f144, 0f00000000, %f143, %p108;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f145, %f144, %f141, %f136;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f146, %f122, %f140;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f147, %f141, %f141;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f148, %f133, %f147;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f149, %f144, %f148, %f146;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f150, %f117, %f145;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f151, %f125, %f142;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p109, %f151, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r120, %f151;
	// begin inline asm
	div.full.f32 %r118, %r113, %r120;
	// end inline asm
	mov.b32 	%f152, %r118;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f153, 0f00000000, %f152, %p109;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f154, %f153, %f150, %f145;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f155, %f121, %f149;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f156, %f150, %f150;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f157, %f142, %f156;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f158, %f153, %f157, %f155;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r266, %f154;
	shfl.sync.bfly.b32	%r267, %r266, 16, 31, -1;
	mov.b32 	%f159, %r267;
	mov.b32 	%r268, %f158;
	shfl.sync.bfly.b32	%r269, %r268, 16, 31, -1;
	mov.b32 	%f160, %r269;
	shfl.sync.bfly.b32	%r122, %r120, 16, 31, -1;
	mov.b32 	%f161, %r122;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f162, %f159, %f154;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f163, %f151, %f161;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p110, %f163, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r123, %f163;
	// begin inline asm
	div.full.f32 %r121, %r122, %r123;
	// end inline asm
	mov.b32 	%f164, %r121;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f165, 0f00000000, %f164, %p110;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f166, %f165, %f162, %f154;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f167, %f158, %f160;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f168, %f162, %f162;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f169, %f151, %f168;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f170, %f165, %f169, %f167;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r270, %f166;
	shfl.sync.bfly.b32	%r271, %r270, 8, 31, -1;
	mov.b32 	%f171, %r271;
	mov.b32 	%r272, %f170;
	shfl.sync.bfly.b32	%r273, %r272, 8, 31, -1;
	mov.b32 	%f172, %r273;
	shfl.sync.bfly.b32	%r125, %r123, 8, 31, -1;
	mov.b32 	%f173, %r125;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f174, %f171, %f166;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f175, %f163, %f173;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p111, %f175, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r126, %f175;
	// begin inline asm
	div.full.f32 %r124, %r125, %r126;
	// end inline asm
	mov.b32 	%f176, %r124;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f177, 0f00000000, %f176, %p111;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f178, %f174, %f177, %f166;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f179, %f170, %f172;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f180, %f174, %f174;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f181, %f163, %f180;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f182, %f177, %f181, %f179;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r274, %f178;
	shfl.sync.bfly.b32	%r275, %r274, 4, 31, -1;
	mov.b32 	%f183, %r275;
	mov.b32 	%r276, %f182;
	shfl.sync.bfly.b32	%r277, %r276, 4, 31, -1;
	mov.b32 	%f184, %r277;
	shfl.sync.bfly.b32	%r128, %r126, 4, 31, -1;
	mov.b32 	%f185, %r128;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f186, %f183, %f178;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f187, %f175, %f185;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p112, %f187, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r129, %f187;
	// begin inline asm
	div.full.f32 %r127, %r128, %r129;
	// end inline asm
	mov.b32 	%f188, %r127;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f189, 0f00000000, %f188, %p112;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f190, %f186, %f189, %f178;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f191, %f182, %f184;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f192, %f186, %f186;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f193, %f175, %f192;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f194, %f189, %f193, %f191;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r278, %f190;
	shfl.sync.bfly.b32	%r279, %r278, 2, 31, -1;
	mov.b32 	%f195, %r279;
	mov.b32 	%r280, %f194;
	shfl.sync.bfly.b32	%r281, %r280, 2, 31, -1;
	mov.b32 	%f196, %r281;
	shfl.sync.bfly.b32	%r131, %r129, 2, 31, -1;
	mov.b32 	%f197, %r131;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f198, %f195, %f190;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f199, %f187, %f197;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p113, %f199, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r132, %f199;
	// begin inline asm
	div.full.f32 %r130, %r131, %r132;
	// end inline asm
	mov.b32 	%f200, %r130;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f201, 0f00000000, %f200, %p113;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f202, %f198, %f201, %f190;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f203, %f194, %f196;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f204, %f198, %f198;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f205, %f187, %f204;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f206, %f201, %f205, %f203;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r282, %f202;
	shfl.sync.bfly.b32	%r283, %r282, 1, 31, -1;
	mov.b32 	%f207, %r283;
	mov.b32 	%r284, %f206;
	shfl.sync.bfly.b32	%r285, %r284, 1, 31, -1;
	mov.b32 	%f208, %r285;
	shfl.sync.bfly.b32	%r134, %r132, 1, 31, -1;
	mov.b32 	%f209, %r134;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f210, %f207, %f202;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f211, %f199, %f209;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p114, %f211, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r135, %f211;
	// begin inline asm
	div.full.f32 %r133, %r134, %r135;
	// end inline asm
	mov.b32 	%f212, %r133;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f213, 0f00000000, %f212, %p114;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f214, %f210, %f213, %f202;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f215, %f206, %f208;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f216, %f210, %f210;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f217, %f199, %f216;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f218, %f213, %f217, %f215;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p51, %r265, 0;
	shr.u32 	%r286, %r248, 3;
	and.b32  	%r287, %r286, 28;
	mov.u32 	%r288, global_smem;
	add.s32 	%r136, %r288, %r287;
	mov.b32 	%r137, %f214;
	// begin inline asm
	@%p51 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	add.s32 	%r289, %r288, 32;
	add.s32 	%r138, %r289, %r287;
	mov.b32 	%r139, %f218;
	// begin inline asm
	@%p51 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	add.s32 	%r290, %r288, 64;
	add.s32 	%r140, %r290, %r287;
	// begin inline asm
	@%p51 st.shared.b32 [ %r140 + 0 ], %r135;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p54, %r248, 8;
	add.s32 	%r143, %r288, %r249;
	// begin inline asm
	@%p54 ld.shared.b32 %r142, [ %r143 + 0 ];
	// end inline asm
	mov.b32 	%f219, %r142;
	add.s32 	%r145, %r289, %r249;
	// begin inline asm
	@%p54 ld.shared.b32 %r144, [ %r145 + 0 ];
	// end inline asm
	mov.b32 	%f220, %r144;
	add.s32 	%r147, %r290, %r249;
	// begin inline asm
	@%p54 ld.shared.b32 %r146, [ %r147 + 0 ];
	// end inline asm
	mov.b32 	%f221, %r146;
	shfl.sync.bfly.b32	%r291, %r142, 4, 31, -1;
	mov.b32 	%f222, %r291;
	shfl.sync.bfly.b32	%r292, %r144, 4, 31, -1;
	mov.b32 	%f223, %r292;
	shfl.sync.bfly.b32	%r149, %r146, 4, 31, -1;
	mov.b32 	%f224, %r149;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f225, %f222, %f219;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f226, %f221, %f224;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p115, %f226, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r150, %f226;
	// begin inline asm
	div.full.f32 %r148, %r149, %r150;
	// end inline asm
	mov.b32 	%f227, %r148;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f228, 0f00000000, %f227, %p115;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f229, %f225, %f228, %f219;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f230, %f220, %f223;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f231, %f225, %f225;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f232, %f231, %f221;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f233, %f232, %f228, %f230;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r293, %f229;
	shfl.sync.bfly.b32	%r294, %r293, 2, 31, -1;
	mov.b32 	%f234, %r294;
	mov.b32 	%r295, %f233;
	shfl.sync.bfly.b32	%r296, %r295, 2, 31, -1;
	mov.b32 	%f235, %r296;
	shfl.sync.bfly.b32	%r152, %r150, 2, 31, -1;
	mov.b32 	%f236, %r152;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f237, %f234, %f229;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f238, %f226, %f236;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p116, %f238, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r153, %f238;
	// begin inline asm
	div.full.f32 %r151, %r152, %r153;
	// end inline asm
	mov.b32 	%f239, %r151;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f240, 0f00000000, %f239, %p116;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f241, %f237, %f240, %f229;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f242, %f233, %f235;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f243, %f237, %f237;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f244, %f226, %f243;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f245, %f240, %f244, %f242;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r297, %f241;
	shfl.sync.bfly.b32	%r298, %r297, 1, 31, -1;
	mov.b32 	%f246, %r298;
	mov.b32 	%r299, %f245;
	shfl.sync.bfly.b32	%r300, %r299, 1, 31, -1;
	mov.b32 	%f247, %r300;
	shfl.sync.bfly.b32	%r155, %r153, 1, 31, -1;
	mov.b32 	%f248, %r155;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f249, %f246, %f241;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f250, %f238, %f248;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p117, %f250, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r156, %f250;
	// begin inline asm
	div.full.f32 %r154, %r155, %r156;
	// end inline asm
	mov.b32 	%f251, %r154;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f252, 0f00000000, %f251, %p117;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f253, %f249, %f252, %f241;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f254, %f245, %f247;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f255, %f249, %f249;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f256, %f238, %f255;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f257, %f252, %f256, %f254;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r301, %r248, 7;
	setp.eq.s32 	%p118, %r301, 0;
	and.pred  	%p57, %p54, %p118;
	mov.b32 	%r158, %f253;
	// begin inline asm
	@%p57 st.shared.b32 [ %r143 + 0 ], %r158;
	// end inline asm
	mov.b32 	%r160, %f257;
	// begin inline asm
	@%p57 st.shared.b32 [ %r145 + 0 ], %r160;
	// end inline asm
	// begin inline asm
	@%p57 st.shared.b32 [ %r147 + 0 ], %r156;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f258, [global_smem];
$L__tmp12:
	.loc	1 61 25                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:61:25
	add.s64 	%rd35, %rd56, %rd62;
	.loc	1 61 37                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:61:37
	mov.b32 	%r163, %f258;
	.loc	1 70 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:70:24
	ld.shared.u32 	%r165, [global_smem+32];
	.loc	1 61 37                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:61:37
	// begin inline asm
	@%p21 st.global.b32 [ %rd35 + 0 ], { %r163 };
	// end inline asm
	mov.b32 	%r166, 1166016512;
	.loc	1 70 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:70:24
	// begin inline asm
	div.full.f32 %r164, %r165, %r166;
	// end inline asm
	mov.b32 	%f259, %r164;
	.loc	1 72 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:72:24
	add.f32 	%f260, %f259, 0f3727C5AC;
	.loc	1 73 32                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:73:32
	rsqrt.approx.ftz.f32 	%f261, %f260;
	.loc	1 66 39                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:39
	add.s64 	%rd36, %rd50, %rd64;
	.loc	1 66 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:54
	// begin inline asm
	mov.u32 %r167, 0x0;
	mov.u32 %r168, 0x0;
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r167, %r168, %r169, %r170 }, [ %rd36 + 0 ];
	@!%p1 mov.u32 %r167, %r32;
	@!%p1 mov.u32 %r168, %r32;
	@!%p1 mov.u32 %r169, %r32;
	@!%p1 mov.u32 %r170, %r32;
	// end inline asm
	mov.b32 	%f262, %r167;
	mov.b32 	%f263, %r168;
	mov.b32 	%f264, %r169;
	mov.b32 	%f265, %r170;
	.loc	1 67 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:67:54
	// begin inline asm
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	mov.u32 %r177, 0x0;
	mov.u32 %r178, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r175, %r176, %r177, %r178 }, [ %rd27 + 0 ];
	@!%p1 mov.u32 %r175, %r32;
	@!%p1 mov.u32 %r176, %r32;
	@!%p1 mov.u32 %r177, %r32;
	@!%p1 mov.u32 %r178, %r32;
	// end inline asm
	mov.b32 	%f266, %r175;
	mov.b32 	%f267, %r176;
	mov.b32 	%f268, %r177;
	mov.b32 	%f269, %r178;
	.loc	1 68 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:68:24
	sub.f32 	%f270, %f266, %f258;
	sub.f32 	%f271, %f267, %f258;
	sub.f32 	%f272, %f268, %f258;
	sub.f32 	%f273, %f269, %f258;
	.loc	1 74 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:74:24
	mul.f32 	%f274, %f261, %f270;
	mul.f32 	%f275, %f261, %f271;
	mul.f32 	%f276, %f261, %f272;
	mul.f32 	%f277, %f261, %f273;
	.loc	1 76 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:76:24
	fma.rn.f32 	%f278, %f131, %f274, %f130;
	fma.rn.f32 	%f279, %f131, %f275, %f130;
	fma.rn.f32 	%f280, %f131, %f276, %f130;
	fma.rn.f32 	%f281, %f131, %f277, %f130;
	.loc	1 77 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:77:24
	add.f32 	%f282, %f278, %f262;
	add.f32 	%f283, %f279, %f263;
	add.f32 	%f284, %f280, %f264;
	add.f32 	%f285, %f281, %f265;
	.loc	1 78 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:78:54
	mov.b32 	%r183, %f282;
	mov.b32 	%r184, %f283;
	mov.b32 	%r185, %f284;
	mov.b32 	%r186, %f285;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd36 + 0 ], { %r183, %r184, %r185, %r186 };
	// end inline asm
	.loc	1 66 39                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:39
	add.s64 	%rd39, %rd36, 4096;
	.loc	1 66 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:54
	// begin inline asm
	mov.u32 %r187, 0x0;
	mov.u32 %r188, 0x0;
	mov.u32 %r189, 0x0;
	mov.u32 %r190, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r187, %r188, %r189, %r190 }, [ %rd39 + 0 ];
	@!%p1 mov.u32 %r187, %r32;
	@!%p1 mov.u32 %r188, %r32;
	@!%p1 mov.u32 %r189, %r32;
	@!%p1 mov.u32 %r190, %r32;
	// end inline asm
	mov.b32 	%f286, %r187;
	mov.b32 	%f287, %r188;
	mov.b32 	%f288, %r189;
	mov.b32 	%f289, %r190;
	.loc	1 67 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:67:54
	// begin inline asm
	mov.u32 %r195, 0x0;
	mov.u32 %r196, 0x0;
	mov.u32 %r197, 0x0;
	mov.u32 %r198, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r195, %r196, %r197, %r198 }, [ %rd29 + 0 ];
	@!%p1 mov.u32 %r195, %r32;
	@!%p1 mov.u32 %r196, %r32;
	@!%p1 mov.u32 %r197, %r32;
	@!%p1 mov.u32 %r198, %r32;
	// end inline asm
	mov.b32 	%f290, %r195;
	mov.b32 	%f291, %r196;
	mov.b32 	%f292, %r197;
	mov.b32 	%f293, %r198;
	.loc	1 68 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:68:24
	sub.f32 	%f294, %f290, %f258;
	sub.f32 	%f295, %f291, %f258;
	sub.f32 	%f296, %f292, %f258;
	sub.f32 	%f297, %f293, %f258;
	.loc	1 74 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:74:24
	mul.f32 	%f298, %f261, %f294;
	mul.f32 	%f299, %f261, %f295;
	mul.f32 	%f300, %f261, %f296;
	mul.f32 	%f301, %f261, %f297;
	.loc	1 76 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:76:24
	fma.rn.f32 	%f302, %f131, %f298, %f130;
	fma.rn.f32 	%f303, %f131, %f299, %f130;
	fma.rn.f32 	%f304, %f131, %f300, %f130;
	fma.rn.f32 	%f305, %f131, %f301, %f130;
	.loc	1 77 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:77:24
	add.f32 	%f306, %f302, %f286;
	add.f32 	%f307, %f303, %f287;
	add.f32 	%f308, %f304, %f288;
	add.f32 	%f309, %f305, %f289;
	.loc	1 78 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:78:54
	mov.b32 	%r203, %f306;
	mov.b32 	%r204, %f307;
	mov.b32 	%r205, %f308;
	mov.b32 	%r206, %f309;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd39 + 0 ], { %r203, %r204, %r205, %r206 };
	// end inline asm
	.loc	1 66 39                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:39
	add.s64 	%rd42, %rd36, 8192;
	.loc	1 66 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:54
	// begin inline asm
	mov.u32 %r207, 0x0;
	mov.u32 %r208, 0x0;
	mov.u32 %r209, 0x0;
	mov.u32 %r210, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r207, %r208, %r209, %r210 }, [ %rd42 + 0 ];
	@!%p1 mov.u32 %r207, %r32;
	@!%p1 mov.u32 %r208, %r32;
	@!%p1 mov.u32 %r209, %r32;
	@!%p1 mov.u32 %r210, %r32;
	// end inline asm
	mov.b32 	%f310, %r207;
	mov.b32 	%f311, %r208;
	mov.b32 	%f312, %r209;
	mov.b32 	%f313, %r210;
	.loc	1 67 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:67:54
	// begin inline asm
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	mov.u32 %r217, 0x0;
	mov.u32 %r218, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r215, %r216, %r217, %r218 }, [ %rd31 + 0 ];
	@!%p1 mov.u32 %r215, %r32;
	@!%p1 mov.u32 %r216, %r32;
	@!%p1 mov.u32 %r217, %r32;
	@!%p1 mov.u32 %r218, %r32;
	// end inline asm
	mov.b32 	%f314, %r215;
	mov.b32 	%f315, %r216;
	mov.b32 	%f316, %r217;
	mov.b32 	%f317, %r218;
	.loc	1 68 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:68:24
	sub.f32 	%f318, %f314, %f258;
	sub.f32 	%f319, %f315, %f258;
	sub.f32 	%f320, %f316, %f258;
	sub.f32 	%f321, %f317, %f258;
	.loc	1 74 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:74:24
	mul.f32 	%f322, %f261, %f318;
	mul.f32 	%f323, %f261, %f319;
	mul.f32 	%f324, %f261, %f320;
	mul.f32 	%f325, %f261, %f321;
	.loc	1 76 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:76:24
	fma.rn.f32 	%f326, %f131, %f322, %f130;
	fma.rn.f32 	%f327, %f131, %f323, %f130;
	fma.rn.f32 	%f328, %f131, %f324, %f130;
	fma.rn.f32 	%f329, %f131, %f325, %f130;
	.loc	1 77 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:77:24
	add.f32 	%f330, %f326, %f310;
	add.f32 	%f331, %f327, %f311;
	add.f32 	%f332, %f328, %f312;
	add.f32 	%f333, %f329, %f313;
	.loc	1 78 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:78:54
	mov.b32 	%r223, %f330;
	mov.b32 	%r224, %f331;
	mov.b32 	%r225, %f332;
	mov.b32 	%r226, %f333;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd42 + 0 ], { %r223, %r224, %r225, %r226 };
	// end inline asm
	.loc	1 66 39                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:39
	add.s64 	%rd45, %rd36, 12288;
	.loc	1 66 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:66:54
	// begin inline asm
	mov.u32 %r227, 0x0;
	mov.u32 %r228, 0x0;
	mov.u32 %r229, 0x0;
	mov.u32 %r230, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r227, %r228, %r229, %r230 }, [ %rd45 + 0 ];
	@!%p1 mov.u32 %r227, %r32;
	@!%p1 mov.u32 %r228, %r32;
	@!%p1 mov.u32 %r229, %r32;
	@!%p1 mov.u32 %r230, %r32;
	// end inline asm
	mov.b32 	%f334, %r227;
	mov.b32 	%f335, %r228;
	mov.b32 	%f336, %r229;
	mov.b32 	%f337, %r230;
	.loc	1 67 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:67:54
	// begin inline asm
	mov.u32 %r235, 0x0;
	mov.u32 %r236, 0x0;
	mov.u32 %r237, 0x0;
	mov.u32 %r238, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r235, %r236, %r237, %r238 }, [ %rd33 + 0 ];
	@!%p1 mov.u32 %r235, %r32;
	@!%p1 mov.u32 %r236, %r32;
	@!%p1 mov.u32 %r237, %r32;
	@!%p1 mov.u32 %r238, %r32;
	// end inline asm
	mov.b32 	%f338, %r235;
	mov.b32 	%f339, %r236;
	mov.b32 	%f340, %r237;
	mov.b32 	%f341, %r238;
	.loc	1 68 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:68:24
	sub.f32 	%f342, %f338, %f258;
	sub.f32 	%f343, %f339, %f258;
	sub.f32 	%f344, %f340, %f258;
	sub.f32 	%f345, %f341, %f258;
	.loc	1 74 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:74:24
	mul.f32 	%f346, %f261, %f342;
	mul.f32 	%f347, %f261, %f343;
	mul.f32 	%f348, %f261, %f344;
	mul.f32 	%f349, %f261, %f345;
	.loc	1 76 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:76:24
	fma.rn.f32 	%f350, %f131, %f346, %f130;
	fma.rn.f32 	%f351, %f131, %f347, %f130;
	fma.rn.f32 	%f352, %f131, %f348, %f130;
	fma.rn.f32 	%f353, %f131, %f349, %f130;
	.loc	1 77 24                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:77:24
	add.f32 	%f354, %f350, %f334;
	add.f32 	%f355, %f351, %f335;
	add.f32 	%f356, %f352, %f336;
	add.f32 	%f357, %f353, %f337;
	.loc	1 78 54                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:78:54
	mov.b32 	%r243, %f354;
	mov.b32 	%r244, %f355;
	mov.b32 	%r245, %f356;
	mov.b32 	%r246, %f357;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd45 + 0 ], { %r243, %r244, %r245, %r246 };
	// end inline asm
	.loc	1 84 25                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:84:25
	add.s64 	%rd48, %rd57, %rd62;
	.loc	1 84 37                         // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:84:37
	mov.b32 	%r247, %f261;
	// begin inline asm
	@%p21 st.global.b32 [ %rd48 + 0 ], { %r247 };
	// end inline asm
	.loc	1 84 4                          // cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py:84:4
	ret;
$L__tmp13:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/me/cmefodtxtanmvq57rd7gtwaibt6xkqtxweswrcuqm3sdomgrpm7e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 246                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xef DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 101
.b8 102
.b8 111
.b8 100
.b8 116
.b8 120
.b8 116
.b8 97
.b8 110
.b8 109
.b8 118
.b8 113
.b8 53
.b8 55
.b8 114
.b8 100
.b8 55
.b8 103
.b8 116
.b8 119
.b8 97
.b8 105
.b8 98
.b8 116
.b8 54
.b8 120
.b8 107
.b8 113
.b8 116
.b8 120
.b8 119
.b8 101
.b8 115
.b8 119
.b8 114
.b8 99
.b8 117
.b8 113
.b8 109
.b8 51
.b8 115
.b8 100
.b8 111
.b8 109
.b8 103
.b8 114
.b8 112
.b8 109
.b8 55
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 102
.b8 117
.b8 110
.b8 99
.b8 116
.b8 105
.b8 111
.b8 110
.b8 97
.b8 108
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 52
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 54                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
