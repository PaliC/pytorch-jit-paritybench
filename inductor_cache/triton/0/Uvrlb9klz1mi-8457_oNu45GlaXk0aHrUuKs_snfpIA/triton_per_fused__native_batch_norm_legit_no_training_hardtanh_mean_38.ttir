#loc = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0)
#loc1 = loc(unknown)
#loc45 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":55:26)
#loc62 = loc(callsite(#loc1 at #loc45))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_hardtanh_mean_38(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<32x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.400000e+01> : tensor<32x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<32x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<81920> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1280> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1280> : tensor<32x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<5120> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_6 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_6 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_5 : tensor<1x64xi32> loc(#loc12)
    %12 = tt.broadcast %9 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<32x64xi32> loc(#loc13)
    %15 = arith.muli %10, %cst_4 : tensor<32x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<32x64xi32> loc(#loc15)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc16)
    %20 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc17)
    %21 = tt.load %19, %20, %cst_3 : tensor<32x64x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %22, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc18)
    %24 = tt.load %23, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.addptr %25, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc20)
    %27 = tt.load %26, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc21)
    %28 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc22)
    %29 = tt.addptr %28, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc22)
    %30 = tt.load %29, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc23)
    %31 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc24)
    %32 = tt.addptr %31, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc24)
    %33 = tt.load %32, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.broadcast %24 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc26)
    %35 = arith.subf %21, %34 : tensor<32x64xf32> loc(#loc26)
    %36 = arith.addf %27, %cst_2 : tensor<32x1xf32> loc(#loc27)
    %37 = tt.extern_elementwise %36 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<32x1xf32>) -> tensor<32x1xf32> loc(#loc28)
    %38 = arith.divf %cst_0, %37 : tensor<32x1xf32> loc(#loc29)
    %39 = tt.broadcast %38 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc30)
    %40 = arith.mulf %35, %39 : tensor<32x64xf32> loc(#loc30)
    %41 = tt.broadcast %30 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc31)
    %42 = arith.mulf %40, %41 : tensor<32x64xf32> loc(#loc31)
    %43 = tt.broadcast %33 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc32)
    %44 = arith.addf %42, %43 : tensor<32x64xf32> loc(#loc32)
    %45 = arith.cmpf ogt, %44, %cst_3 : tensor<32x64xf32> loc(#loc53)
    %46 = arith.cmpf une, %44, %44 : tensor<32x64xf32> loc(#loc54)
    %47 = arith.ori %45, %46 : tensor<32x64xi1> loc(#loc55)
    %48 = arith.select %47, %44, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc56)
    %49 = arith.cmpf olt, %48, %cst : tensor<32x64xf32> loc(#loc57)
    %50 = arith.cmpf une, %48, %48 : tensor<32x64xf32> loc(#loc58)
    %51 = arith.ori %49, %50 : tensor<32x64xi1> loc(#loc59)
    %52 = arith.select %51, %48, %cst : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc60)
    %53 = arith.select %20, %52, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc43)
    %54 = "tt.reduce"(%53) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc45)), %arg9: f32 loc(callsite(#loc1 at #loc45))):
      %59 = arith.addf %arg8, %arg9 : f32 loc(#loc64)
      tt.reduce.return %59 : f32 loc(#loc61)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc61)
    %55 = tt.expand_dims %54 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc47)
    %56 = arith.divf %55, %cst_1 : tensor<32x1xf32> loc(#loc48)
    gpu.barrier loc(#loc49)
    %57 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc50)
    %58 = tt.addptr %57, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc50)
    tt.store %58, %56, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":23:28)
#loc3 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":23:33)
#loc4 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":24:36)
#loc5 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":24:44)
#loc6 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":24:23)
#loc7 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":25:21)
#loc8 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":26:26)
#loc9 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":26:34)
#loc10 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":30:19)
#loc11 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":31:19)
#loc12 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:40)
#loc13 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:35)
#loc14 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:51)
#loc15 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:45)
#loc16 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:30)
#loc17 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":33:56)
#loc18 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":34:30)
#loc19 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":34:35)
#loc20 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":35:30)
#loc21 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":35:35)
#loc22 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":36:31)
#loc23 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":36:36)
#loc24 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":37:31)
#loc25 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":37:36)
#loc26 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":38:18)
#loc27 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":40:18)
#loc28 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":41:26)
#loc29 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":43:18)
#loc30 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":46:19)
#loc31 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":47:20)
#loc32 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":48:20)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc34 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":50:42)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc39 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":52:42)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc43 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":54:35)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc47 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":55:29)
#loc48 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":57:20)
#loc49 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":58:4)
#loc50 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":59:28)
#loc51 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":59:40)
#loc52 = loc("inductor_cache/wj/cwjr6werwarfbt74zojgryizce24yex2mnbazmerbwg3afkbn5np.py":59:4)
#loc53 = loc(callsite(#loc33 at #loc34))
#loc54 = loc(callsite(#loc35 at #loc34))
#loc55 = loc(callsite(#loc36 at #loc34))
#loc56 = loc(callsite(#loc37 at #loc34))
#loc57 = loc(callsite(#loc38 at #loc39))
#loc58 = loc(callsite(#loc40 at #loc39))
#loc59 = loc(callsite(#loc41 at #loc39))
#loc60 = loc(callsite(#loc42 at #loc39))
#loc61 = loc(callsite(#loc44 at #loc45))
#loc63 = loc(callsite(#loc46 at #loc44))
#loc64 = loc(callsite(#loc63 at #loc45))
