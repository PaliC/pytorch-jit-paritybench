; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_28(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 4608, !dbg !14
  %10 = sdiv i32 %8, 3, !dbg !15
  %11 = sdiv i32 %8, 9, !dbg !16
  %12 = shl nsw i32 %11, 2, !dbg !17
  %13 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !18
  %14 = insertelement <2 x i32> %13, i32 %10, i64 1, !dbg !18
  %15 = srem <2 x i32> %14, splat (i32 3), !dbg !18
  %16 = trunc nsw <2 x i32> %15 to <2 x i8>, !dbg !19
  %17 = shl nsw <2 x i8> %16, splat (i8 1), !dbg !19
  %18 = sdiv <2 x i8> %17, splat (i8 3), !dbg !19
  %19 = add nsw <2 x i8> %17, splat (i8 4), !dbg !20
  %20 = udiv <2 x i8> %19, splat (i8 3), !dbg !20
  %21 = sext <2 x i8> %18 to <2 x i32>, !dbg !19
  %22 = icmp slt <2 x i8> %18, %20, !dbg !21
  %23 = extractelement <2 x i1> %22, i64 0, !dbg !22
  %24 = extractelement <2 x i1> %22, i64 1, !dbg !22
  %25 = and i1 %23, %24, !dbg !22
  %26 = extractelement <2 x i32> %21, i64 1, !dbg !23
  %27 = shl nsw i32 %26, 1, !dbg !23
  %28 = extractelement <2 x i32> %21, i64 0, !dbg !24
  %29 = add nsw i32 %12, %28, !dbg !24
  %30 = add nsw i32 %29, %27, !dbg !25
  %31 = sext i32 %30 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !26
  %33 = and i1 %9, %25, !dbg !27
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %33, i32 0, i1 %33) #1, !dbg !28
  %35 = bitcast i32 %34 to float, !dbg !28
  %36 = add nsw <2 x i32> %21, splat (i32 1), !dbg !29
  %37 = zext nneg <2 x i8> %20 to <2 x i32>, !dbg !30
  %38 = icmp samesign ult <2 x i32> %36, %37, !dbg !30
  %39 = extractelement <2 x i1> %38, i64 0, !dbg !31
  %40 = and i1 %24, %39, !dbg !32
  %41 = add nsw i32 %29, 1, !dbg !33
  %42 = add nsw i32 %41, %27, !dbg !34
  %43 = sext i32 %42 to i64, !dbg !35
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !35
  %45 = and i1 %9, %40, !dbg !36
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %45, i32 0, i1 %45) #1, !dbg !37
  %47 = bitcast i32 %46 to float, !dbg !37
  %48 = fadd float %35, %47, !dbg !38
  %49 = extractelement <2 x i1> %38, i64 1, !dbg !31
  %50 = and i1 %23, %49, !dbg !39
  %51 = add nsw i32 %29, 2, !dbg !40
  %52 = add nsw i32 %51, %27, !dbg !41
  %53 = sext i32 %52 to i64, !dbg !42
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !42
  %55 = and i1 %9, %50, !dbg !43
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %55, i32 0, i1 %55) #1, !dbg !44
  %57 = bitcast i32 %56 to float, !dbg !44
  %58 = fadd float %48, %57, !dbg !45
  %59 = and i1 %39, %49, !dbg !31
  %60 = add nsw i32 %29, 3, !dbg !46
  %61 = add nsw i32 %60, %27, !dbg !47
  %62 = sext i32 %61 to i64, !dbg !48
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !48
  %64 = and i1 %9, %59, !dbg !49
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %64, i32 0, i1 %64) #1, !dbg !50
  %66 = bitcast i32 %65 to float, !dbg !50
  %67 = fadd float %58, %66, !dbg !51
  %68 = select i1 %25, float 1.000000e+00, float 0.000000e+00, !dbg !52
  %69 = select i1 %40, float 1.000000e+00, float 0.000000e+00, !dbg !53
  %70 = fadd float %69, %68, !dbg !54
  %71 = select i1 %50, float 1.000000e+00, float 0.000000e+00, !dbg !55
  %72 = fadd float %71, %70, !dbg !56
  %73 = select i1 %59, float 1.000000e+00, float 0.000000e+00, !dbg !57
  %74 = fadd float %73, %72, !dbg !58
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float %74) #1, !dbg !59
  %76 = sext i32 %8 to i64, !dbg !60
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %76, !dbg !60
  %78 = bitcast float %75 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %78, ptr addrspace(1) %77, i1 %9) #1, !dbg !61
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cequt72ftvfcxu44hixlpy5ettkhlxphygrl7vfbozfag4v5sy2l.py", directory: "inductor_cache/eq")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_28, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_28, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_28", linkageName: "triton_poi_fused__adaptive_avg_pool2d_28", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 35, column: 50, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 31, column: 21, scope: !7)
!20 = !DILocation(line: 32, column: 25, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 33, scope: !7)
!24 = !DILocation(line: 35, column: 48, scope: !7)
!25 = !DILocation(line: 35, column: 56, scope: !7)
!26 = !DILocation(line: 35, column: 30, scope: !7)
!27 = !DILocation(line: 35, column: 78, scope: !7)
!28 = !DILocation(line: 35, column: 71, scope: !7)
!29 = !DILocation(line: 36, column: 16, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 46, column: 20, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 39, column: 53, scope: !7)
!34 = !DILocation(line: 39, column: 61, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 84, scope: !7)
!37 = !DILocation(line: 39, column: 76, scope: !7)
!38 = !DILocation(line: 40, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 20, scope: !7)
!40 = !DILocation(line: 44, column: 53, scope: !7)
!41 = !DILocation(line: 44, column: 61, scope: !7)
!42 = !DILocation(line: 44, column: 31, scope: !7)
!43 = !DILocation(line: 44, column: 84, scope: !7)
!44 = !DILocation(line: 44, column: 76, scope: !7)
!45 = !DILocation(line: 45, column: 20, scope: !7)
!46 = !DILocation(line: 47, column: 53, scope: !7)
!47 = !DILocation(line: 47, column: 61, scope: !7)
!48 = !DILocation(line: 47, column: 31, scope: !7)
!49 = !DILocation(line: 47, column: 84, scope: !7)
!50 = !DILocation(line: 47, column: 76, scope: !7)
!51 = !DILocation(line: 48, column: 20, scope: !7)
!52 = !DILocation(line: 51, column: 34, scope: !7)
!53 = !DILocation(line: 54, column: 35, scope: !7)
!54 = !DILocation(line: 55, column: 20, scope: !7)
!55 = !DILocation(line: 58, column: 35, scope: !7)
!56 = !DILocation(line: 59, column: 20, scope: !7)
!57 = !DILocation(line: 62, column: 35, scope: !7)
!58 = !DILocation(line: 63, column: 20, scope: !7)
!59 = !DILocation(line: 64, column: 20, scope: !7)
!60 = !DILocation(line: 65, column: 25, scope: !7)
!61 = !DILocation(line: 65, column: 37, scope: !7)
!62 = !DILocation(line: 65, column: 4, scope: !7)
