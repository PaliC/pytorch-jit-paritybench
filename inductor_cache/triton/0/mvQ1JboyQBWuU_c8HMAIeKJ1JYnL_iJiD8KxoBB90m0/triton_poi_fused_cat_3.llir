; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 32, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 8, !dbg !15
  %12 = mul i32 %11, 8, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = icmp slt i32 %.decomposed, 4, !dbg !17
  %14 = shl nsw i32 %11, 2, !dbg !18
  %15 = add nsw i32 %14, %.decomposed, !dbg !19
  %16 = sext i32 %15 to i64, !dbg !20
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !20
  %18 = and i1 %10, %13, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #1, !dbg !22
  %20 = bitcast i32 %19 to float, !dbg !22
  %21 = fsub float 0.000000e+00, %20, !dbg !23
  %22 = fmul float %21, 0x3FF7154760000000, !dbg !27
  %23 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %22) #1, !dbg !27
  %24 = fadd float %23, 1.000000e+00, !dbg !28
  %25 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %24) #1, !dbg !29
  %26 = fmul float %25, %20, !dbg !30
  %27 = icmp sgt i32 %.decomposed, 3, !dbg !31
  %28 = shl nsw i32 %.decomposed, 2, !dbg !32
  %29 = shl i32 %11, 4, !dbg !33
  %30 = add i32 %29, %28, !dbg !32
  %31 = add i32 %30, -16, !dbg !34
  %32 = sext i32 %31 to i64, !dbg !35
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !35
  %34 = and i1 %10, %27, !dbg !36
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34) #1, !dbg !37
  %36 = bitcast i32 %35 to float, !dbg !37
  %37 = add i32 %30, -15, !dbg !38
  %38 = sext i32 %37 to i64, !dbg !39
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !39
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %34, i32 0, i1 %34) #1, !dbg !40
  %41 = bitcast i32 %40 to float, !dbg !40
  %42 = fcmp ogt float %41, %36, !dbg !41
  %43 = fcmp uno float %41, 0.000000e+00, !dbg !45
  %44 = or i1 %42, %43, !dbg !46
  %45 = select i1 %44, float %41, float %36, !dbg !47
  %46 = add i32 %30, -14, !dbg !48
  %47 = sext i32 %46 to i64, !dbg !49
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !49
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %34, i32 0, i1 %34) #1, !dbg !50
  %50 = bitcast i32 %49 to float, !dbg !50
  %51 = fcmp olt float %45, %50, !dbg !51
  %52 = fcmp uno float %50, 0.000000e+00, !dbg !53
  %53 = or i1 %52, %51, !dbg !54
  %54 = select i1 %53, float %50, float %45, !dbg !55
  %55 = add i32 %30, -13, !dbg !56
  %56 = sext i32 %55 to i64, !dbg !57
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !57
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %34, i32 0, i1 %34) #1, !dbg !58
  %59 = bitcast i32 %58 to float, !dbg !58
  %60 = fcmp olt float %54, %59, !dbg !59
  %61 = fcmp uno float %59, 0.000000e+00, !dbg !61
  %62 = or i1 %61, %60, !dbg !62
  %63 = select i1 %62, float %59, float %54, !dbg !63
  %64 = select i1 %13, float %26, float %63, !dbg !64
  %65 = sext i32 %9 to i64, !dbg !65
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %65, !dbg !65
  %67 = bitcast float %64 to i32, !dbg !66
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %66, i1 %10) #1, !dbg !66
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2fnzkuiqqbkxciz6qjok2477wtblm2vdv5e5dx2qlr2n3ckyxms.py", directory: "inductor_cache/2f")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 32, column: 38, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 51, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 47, column: 30, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!26 = !DILocation(line: 33, column: 22, scope: !7)
!27 = !DILocation(line: 47, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 47, column: 20, scope: !24, inlinedAt: !26)
!29 = !DILocation(line: 47, column: 16, scope: !24, inlinedAt: !26)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 37, column: 20, scope: !7)
!32 = !DILocation(line: 40, column: 34, scope: !7)
!33 = !DILocation(line: 40, column: 50, scope: !7)
!34 = !DILocation(line: 40, column: 47, scope: !7)
!35 = !DILocation(line: 40, column: 31, scope: !7)
!36 = !DILocation(line: 40, column: 63, scope: !7)
!37 = !DILocation(line: 40, column: 55, scope: !7)
!38 = !DILocation(line: 41, column: 51, scope: !7)
!39 = !DILocation(line: 41, column: 31, scope: !7)
!40 = !DILocation(line: 41, column: 59, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !7, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!44 = !DILocation(line: 42, column: 42, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !42, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !42, inlinedAt: !44)
!47 = !DILocation(line: 121, column: 29, scope: !42, inlinedAt: !44)
!48 = !DILocation(line: 43, column: 51, scope: !7)
!49 = !DILocation(line: 43, column: 31, scope: !7)
!50 = !DILocation(line: 43, column: 59, scope: !7)
!51 = !DILocation(line: 118, column: 15, scope: !42, inlinedAt: !52)
!52 = !DILocation(line: 44, column: 42, scope: !7)
!53 = !DILocation(line: 120, column: 21, scope: !42, inlinedAt: !52)
!54 = !DILocation(line: 120, column: 16, scope: !42, inlinedAt: !52)
!55 = !DILocation(line: 121, column: 29, scope: !42, inlinedAt: !52)
!56 = !DILocation(line: 45, column: 51, scope: !7)
!57 = !DILocation(line: 45, column: 31, scope: !7)
!58 = !DILocation(line: 45, column: 59, scope: !7)
!59 = !DILocation(line: 118, column: 15, scope: !42, inlinedAt: !60)
!60 = !DILocation(line: 46, column: 42, scope: !7)
!61 = !DILocation(line: 120, column: 21, scope: !42, inlinedAt: !60)
!62 = !DILocation(line: 120, column: 16, scope: !42, inlinedAt: !60)
!63 = !DILocation(line: 121, column: 29, scope: !42, inlinedAt: !60)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 50, column: 25, scope: !7)
!66 = !DILocation(line: 50, column: 37, scope: !7)
!67 = !DILocation(line: 50, column: 4, scope: !7)
