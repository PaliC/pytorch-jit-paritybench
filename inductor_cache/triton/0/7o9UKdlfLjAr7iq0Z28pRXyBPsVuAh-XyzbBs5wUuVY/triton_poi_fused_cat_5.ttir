#loc = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg7: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg8: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg11: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<256xi64> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_5 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_4 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_3 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %4, %cst_5 : tensor<256xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_4 : tensor<256xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_4 : tensor<256xi32> loc(#loc12)
    %12 = arith.remsi %4, %cst_4 : tensor<256xi32> loc(#loc13)
    %13 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc14)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc15)
    %15 = tt.splat %14 : f32 -> tensor<256xf32> loc(#loc16)
    %16 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc17)
    %17 = tt.load %16 : !tt.ptr<f32> loc(#loc18)
    %18 = tt.splat %17 : f32 -> tensor<256xf32> loc(#loc19)
    %19 = tt.addptr %arg5, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc20)
    %20 = tt.load %19 : !tt.ptr<f32> loc(#loc21)
    %21 = tt.splat %20 : f32 -> tensor<256xf32> loc(#loc22)
    %22 = tt.addptr %arg10, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc23)
    %23 = tt.load %22 : !tt.ptr<f32> loc(#loc24)
    %24 = tt.splat %23 : f32 -> tensor<256xf32> loc(#loc25)
    %25 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc26)
    %26 = arith.cmpi slt, %25, %cst_2 : tensor<256xi64> loc(#loc26)
    %27 = arith.muli %8, %cst_5 : tensor<256xi32> loc(#loc27)
    %28 = arith.addi %9, %27 : tensor<256xi32> loc(#loc28)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %30 = tt.addptr %29, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %31 = arith.andi %26, %5 : tensor<256xi1> loc(#loc30)
    %32 = tt.load %30, %31, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc31)
    %33 = arith.addf %32, %15 : tensor<256xf32> loc(#loc32)
    %34 = arith.cmpi sge, %25, %cst_2 : tensor<256xi64> loc(#loc33)
    %35 = arith.cmpi slt, %25, %cst_0 : tensor<256xi64> loc(#loc34)
    %36 = arith.andi %34, %35 : tensor<256xi1> loc(#loc35)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc36)
    %38 = tt.addptr %37, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc36)
    %39 = arith.andi %36, %5 : tensor<256xi1> loc(#loc37)
    %40 = tt.load %38, %39, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc38)
    %41 = arith.addf %40, %18 : tensor<256xf32> loc(#loc39)
    %42 = arith.cmpi sge, %25, %cst_0 : tensor<256xi64> loc(#loc40)
    %43 = arith.cmpi slt, %25, %cst : tensor<256xi64> loc(#loc41)
    %44 = arith.andi %42, %43 : tensor<256xi1> loc(#loc42)
    %45 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc43)
    %46 = tt.addptr %45, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc43)
    %47 = arith.andi %44, %5 : tensor<256xi1> loc(#loc44)
    %48 = tt.load %46, %47, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc45)
    %49 = arith.addf %48, %21 : tensor<256xf32> loc(#loc46)
    %50 = arith.cmpi sge, %25, %cst : tensor<256xi64> loc(#loc47)
    %51 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc48)
    %52 = tt.addptr %51, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc48)
    %53 = arith.andi %50, %5 : tensor<256xi1> loc(#loc49)
    %54 = tt.load %52, %53, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc50)
    %55 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc51)
    %56 = tt.addptr %55, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    %57 = tt.load %56, %53, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc52)
    %58 = arith.addf %57, %24 : tensor<256xf32> loc(#loc53)
    %59 = arith.cmpf ogt, %cst_1, %58 : tensor<256xf32> loc(#loc77)
    %60 = arith.select %59, %cst_1, %58 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %61 = arith.subf %60, %60 : tensor<256xf32> loc(#loc57)
    %62 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc58)
    %63 = tt.addptr %62, %12 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc58)
    %64 = tt.load %63, %53, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc59)
    %65 = arith.mulf %61, %64 : tensor<256xf32> loc(#loc60)
    %66 = arith.addf %60, %65 : tensor<256xf32> loc(#loc61)
    %67 = arith.subf %66, %54 : tensor<256xf32> loc(#loc62)
    %68 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc63)
    %69 = tt.addptr %68, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc63)
    %70 = tt.load %69, %53, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc64)
    %71 = arith.mulf %67, %70 : tensor<256xf32> loc(#loc65)
    %72 = arith.addf %54, %71 : tensor<256xf32> loc(#loc66)
    %73 = arith.select %50, %72, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc67)
    %74 = arith.select %44, %49, %73 : tensor<256xi1>, tensor<256xf32> loc(#loc79)
    %75 = arith.select %36, %41, %74 : tensor<256xi1>, tensor<256xf32> loc(#loc80)
    %76 = arith.select %26, %33, %75 : tensor<256xi1>, tensor<256xf32> loc(#loc81)
    %77 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc74)
    %78 = tt.addptr %77, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc74)
    tt.store %78, %76, %5 : tensor<256x!tt.ptr<f32>> loc(#loc75)
    tt.return loc(#loc76)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":21:28)
#loc3 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":21:33)
#loc4 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":22:36)
#loc5 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":22:23)
#loc6 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":23:21)
#loc7 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":24:21)
#loc8 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":24:27)
#loc9 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":25:19)
#loc10 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":26:19)
#loc11 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":27:21)
#loc12 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":27:26)
#loc13 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":28:19)
#loc14 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":30:30)
#loc15 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":30:19)
#loc16 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":31:33)
#loc17 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":32:31)
#loc18 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":32:20)
#loc19 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":33:35)
#loc20 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":34:31)
#loc21 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":34:20)
#loc22 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":35:35)
#loc23 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":36:32)
#loc24 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":36:20)
#loc25 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":37:35)
#loc26 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":42:18)
#loc27 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":43:38)
#loc28 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":43:35)
#loc29 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":43:30)
#loc30 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":43:50)
#loc31 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":43:43)
#loc32 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":44:18)
#loc33 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":47:20)
#loc34 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":49:19)
#loc35 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":50:20)
#loc36 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":51:31)
#loc37 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":51:52)
#loc38 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":51:44)
#loc39 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":52:20)
#loc40 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":55:20)
#loc41 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":57:19)
#loc42 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":58:20)
#loc43 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":59:31)
#loc44 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":59:52)
#loc45 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":59:44)
#loc46 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":60:20)
#loc47 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":63:20)
#loc48 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":66:31)
#loc49 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":66:52)
#loc50 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":66:44)
#loc51 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":76:31)
#loc52 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":76:36)
#loc53 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":77:20)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc55 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":79:42)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc57 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":84:20)
#loc58 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":85:32)
#loc59 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":85:37)
#loc60 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":86:20)
#loc61 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":87:20)
#loc62 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":88:20)
#loc63 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":89:32)
#loc64 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":89:37)
#loc65 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":90:20)
#loc66 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":91:20)
#loc67 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":93:35)
#loc68 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":94:35)
#loc69 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":62:35)
#loc70 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":95:35)
#loc71 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":54:35)
#loc72 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":96:34)
#loc73 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":46:33)
#loc74 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":97:25)
#loc75 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":97:37)
#loc76 = loc("inductor_cache/cs/ccsu53wpb6pzegwc3wuu6pauwdfsb2nz56jatjkwjatbluu45ok3.py":97:4)
#loc77 = loc(callsite(#loc54 at #loc55))
#loc78 = loc(callsite(#loc56 at #loc55))
#loc79 = loc(fused[#loc68, #loc69])
#loc80 = loc(fused[#loc70, #loc71])
#loc81 = loc(fused[#loc72, #loc73])
