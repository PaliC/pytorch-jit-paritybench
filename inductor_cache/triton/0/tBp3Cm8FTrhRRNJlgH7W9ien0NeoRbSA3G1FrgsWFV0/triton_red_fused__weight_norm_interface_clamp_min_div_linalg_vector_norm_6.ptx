//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6 // -- Begin function triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6
.visible .entry triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6(
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_5,
	.param .u32 triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<66>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd2, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_0];
	ld.param.u64 	%rd6, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_1];
$L__tmp0:
	.loc	1 25 33                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:25:33
	mov.u32 	%r63, %tid.x;
	and.b32  	%r64, %r63, 31;
	ld.param.u64 	%rd9, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_3];
	shl.b32 	%r65, %r63, 2;
	ld.param.u64 	%rd10, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_4];
	and.b32  	%r66, %r65, 2044;
	ld.param.u64 	%rd11, [triton_red_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_6_param_5];
	.loc	1 31 34                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:31:34
	mul.wide.u32 	%rd12, %r66, 4;
	add.s64 	%rd1, %rd9, %rd12;
	mov.b32 	%r5, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 39                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:31:39
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r5;
	@!%p1 mov.u32 %r2, %r5;
	@!%p1 mov.u32 %r3, %r5;
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r4;
	.loc	1 32 22                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:32:22
	mul.f32 	%f5, %f2, %f2;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	fma.rn.f32 	%f7, %f3, %f3, %f6;
	fma.rn.f32 	%f8, %f4, %f4, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f8;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f9, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f10;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f11, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f12;
	shfl.sync.bfly.b32	%r72, %r71, 4, 31, -1;
	mov.b32 	%f13, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f14;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f15, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f16;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f17, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p6, %r64, 0;
	shr.u32 	%r77, %r63, 3;
	and.b32  	%r78, %r77, 60;
	mov.u32 	%r79, global_smem;
	add.s32 	%r9, %r79, %r78;
	mov.b32 	%r10, %f18;
	// begin inline asm
	@%p6 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r63, 16;
	add.s32 	%r12, %r79, %r65;
	// begin inline asm
	@%p7 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r11;
	shfl.sync.bfly.b32	%r80, %r11, 8, 31, -1;
	mov.b32 	%f20, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f21;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f22, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f23;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f24, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f25;
	shfl.sync.bfly.b32	%r86, %r85, 1, 31, -1;
	mov.b32 	%f26, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r87, %r63, 15;
	setp.eq.s32 	%p27, %r87, 0;
	and.pred  	%p8, %p7, %p27;
	mov.b32 	%r14, %f27;
	// begin inline asm
	@%p8 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f28, [global_smem];
$L__tmp2:
	.loc	1 37 26                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:37:26
	sqrt.approx.ftz.f32 	%f29, %f28;
	.loc	1 38 4                          // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:38:4
	bar.sync 	0;
	.loc	1 39 70                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:39:70
	and.b32  	%r88, %r63, 511;
	setp.eq.s32 	%p9, %r88, 0;
	mov.b32 	%r15, %f29;
	// begin inline asm
	@%p9 st.global.b32 [ %rd2 + 0 ], { %r15 };
	// end inline asm
	.loc	1 40 19                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:40:19
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.b32 { %r26 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 47 39                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:47:39
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r17, %r5;
	@!%p1 mov.u32 %r18, %r5;
	@!%p1 mov.u32 %r19, %r5;
	@!%p1 mov.u32 %r20, %r5;
	// end inline asm
	mov.b32 	%f30, %r17;
	mov.b32 	%f31, %r18;
	mov.b32 	%f32, %r19;
	mov.b32 	%f33, %r20;
	.loc	1 48 22                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:48:22
	// begin inline asm
	div.full.f32 %r25, %r26, %r15;
	// end inline asm
	mov.b32 	%f34, %r25;
	.loc	1 49 23                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:49:23
	mul.f32 	%f35, %f34, %f30;
	mul.f32 	%f36, %f34, %f31;
	mul.f32 	%f37, %f34, %f32;
	mul.f32 	%f38, %f34, %f33;
	.loc	1 50 24                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:50:24
	mul.f32 	%f39, %f36, %f36;
	.loc	1 54 29                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:54:29
	add.s64 	%rd5, %rd10, %rd12;
	.loc	1 54 76                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:54:76
	mov.b32 	%r28, %f35;
	mov.b32 	%r29, %f36;
	mov.b32 	%r30, %f37;
	mov.b32 	%r31, %f38;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r28, %r29, %r30, %r31 };
	// end inline asm
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f40, %f35, %f35, %f39;
	fma.rn.f32 	%f41, %f37, %f37, %f40;
	fma.rn.f32 	%f42, %f38, %f38, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f42;
	shfl.sync.bfly.b32	%r90, %r89, 16, 31, -1;
	mov.b32 	%f43, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f44;
	shfl.sync.bfly.b32	%r92, %r91, 8, 31, -1;
	mov.b32 	%f45, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f46;
	shfl.sync.bfly.b32	%r94, %r93, 4, 31, -1;
	mov.b32 	%f47, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f48;
	shfl.sync.bfly.b32	%r96, %r95, 2, 31, -1;
	mov.b32 	%f49, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f50;
	shfl.sync.bfly.b32	%r98, %r97, 1, 31, -1;
	mov.b32 	%f51, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f52;
	// begin inline asm
	@%p6 st.shared.b32 [ %r9 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p7 ld.shared.b32 %r34, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r34;
	shfl.sync.bfly.b32	%r99, %r34, 8, 31, -1;
	mov.b32 	%f54, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f55;
	shfl.sync.bfly.b32	%r101, %r100, 4, 31, -1;
	mov.b32 	%f56, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f57;
	shfl.sync.bfly.b32	%r103, %r102, 2, 31, -1;
	mov.b32 	%f58, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f59;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	mov.b32 	%f60, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f61;
	// begin inline asm
	@%p8 st.shared.b32 [ %r12 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f62, [global_smem];
$L__tmp4:
	.loc	1 56 27                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:56:27
	sqrt.approx.ftz.f32 	%f63, %f62;
	.loc	1 57 4                          // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:57:4
	bar.sync 	0;
	.loc	1 58 71                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:58:71
	mov.b32 	%r38, %f63;
	// begin inline asm
	@%p9 st.global.b32 [ %rd6 + 0 ], { %r38 };
	// end inline asm
	.loc	1 63 41                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:63:41
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r57, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r48, %r51, %r54, %r57 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r48, %r5;
	@!%p1 mov.u32 %r51, %r5;
	@!%p1 mov.u32 %r54, %r5;
	@!%p1 mov.u32 %r57, %r5;
	// end inline asm
$L__tmp5:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f63, 0f2B8CBCCC;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p29, %f63, %f63;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f64, %f63, 0f2B8CBCCC, %p29;
	selp.f32 	%f65, %f63, %f64, %p28;
$L__tmp6:
	.loc	1 66 24                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:66:24
	mov.b32 	%r49, %f65;
	// begin inline asm
	div.full.f32 %r59, %r48, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r60, %r51, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r61, %r54, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r62, %r57, %r49;
	// end inline asm
	.loc	1 67 29                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:67:29
	add.s64 	%rd8, %rd11, %rd12;
	.loc	1 67 76                         // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:67:76
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	.loc	1 59 4                          // cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py:59:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ml/cmlxmjcrenx52u4p4eugla6z2t6hnz2dl7pk4esue5xcuhcyxzlx.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 267                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x104 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 108
.b8 120
.b8 109
.b8 106
.b8 99
.b8 114
.b8 101
.b8 110
.b8 120
.b8 53
.b8 50
.b8 117
.b8 52
.b8 112
.b8 52
.b8 101
.b8 117
.b8 103
.b8 108
.b8 97
.b8 54
.b8 122
.b8 50
.b8 116
.b8 54
.b8 104
.b8 110
.b8 122
.b8 50
.b8 100
.b8 108
.b8 55
.b8 112
.b8 107
.b8 52
.b8 101
.b8 115
.b8 117
.b8 101
.b8 53
.b8 120
.b8 99
.b8 117
.b8 104
.b8 99
.b8 121
.b8 120
.b8 122
.b8 108
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 109
.b8 105
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb0:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 46                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
