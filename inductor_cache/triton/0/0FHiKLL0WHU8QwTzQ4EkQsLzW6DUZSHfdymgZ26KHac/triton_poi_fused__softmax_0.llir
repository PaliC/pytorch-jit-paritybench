; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_0(ptr addrspace(1) %0, double %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 16, !dbg !12
  %10 = and i32 %8, 15, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %13 = shl i32 %11, 2, !dbg !15
  %14 = sext i32 %13 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %12) #1, !dbg !17
  %17 = bitcast i32 %16 to float, !dbg !17
  %18 = or disjoint i32 %13, 1, !dbg !18
  %19 = sext i32 %18 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %12) #1, !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = or disjoint i32 %13, 2, !dbg !21
  %24 = sext i32 %23 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %12) #1, !dbg !23
  %27 = bitcast i32 %26 to float, !dbg !23
  %28 = or disjoint i32 %13, 3, !dbg !24
  %29 = sext i32 %28 to i64, !dbg !25
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !25
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %12) #1, !dbg !26
  %32 = bitcast i32 %31 to float, !dbg !26
  %33 = fptrunc double %1 to float, !dbg !27
  %34 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %17, float %33) #1, !dbg !28
  %35 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %22, float %33) #1, !dbg !29
  %36 = fcmp ogt float %34, %35, !dbg !30
  %37 = fcmp uno float %34, 0.000000e+00, !dbg !34
  %38 = or i1 %37, %36, !dbg !35
  %39 = select i1 %38, float %34, float %35, !dbg !36
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %27, float %33) #1, !dbg !37
  %41 = fcmp ogt float %39, %40, !dbg !38
  %42 = fcmp uno float %39, 0.000000e+00, !dbg !40
  %43 = or i1 %41, %42, !dbg !41
  %44 = select i1 %43, float %39, float %40, !dbg !42
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %32, float %33) #1, !dbg !43
  %46 = fcmp ogt float %44, %45, !dbg !44
  %47 = fcmp uno float %44, 0.000000e+00, !dbg !46
  %48 = or i1 %46, %47, !dbg !47
  %49 = select i1 %48, float %44, float %45, !dbg !48
  %50 = fsub float %34, %49, !dbg !49
  %51 = fmul float %50, 0x3FF7154760000000, !dbg !50
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #1, !dbg !50
  %53 = fsub float %35, %49, !dbg !51
  %54 = fmul float %53, 0x3FF7154760000000, !dbg !52
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #1, !dbg !52
  %56 = fadd float %52, %55, !dbg !53
  %57 = fsub float %40, %49, !dbg !54
  %58 = fmul float %57, 0x3FF7154760000000, !dbg !55
  %59 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %58) #1, !dbg !55
  %60 = fadd float %56, %59, !dbg !56
  %61 = fsub float %45, %49, !dbg !57
  %62 = fmul float %61, 0x3FF7154760000000, !dbg !58
  %63 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %62) #1, !dbg !58
  %64 = fadd float %60, %63, !dbg !59
  %65 = sext i32 %11 to i64, !dbg !60
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %65, !dbg !60
  %67 = icmp eq i32 %9, 0, !dbg !61
  %68 = bitcast float %49 to i32, !dbg !61
  %69 = and i1 %67, %12, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %66, i1 %69) #1, !dbg !61
  %70 = getelementptr float, ptr addrspace(1) %3, i64 %65, !dbg !62
  %71 = bitcast float %64 to i32, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %70, i1 %69) #1, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3oetei5ipinsasaze7t4js5m6hu6jcqrc2rxsiqulfd2e5ckcxu.py", directory: "inductor_cache/3o")
!4 = !{ptr @triton_poi_fused__softmax_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_0", linkageName: "triton_poi_fused__softmax_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 41, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 29, column: 31, scope: !7)
!26 = !DILocation(line: 29, column: 42, scope: !7)
!27 = !DILocation(line: 30, column: 19, scope: !7)
!28 = !DILocation(line: 31, column: 18, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 33, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 34, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !39)
!39 = !DILocation(line: 35, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !39)
!43 = !DILocation(line: 36, column: 20, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !45)
!45 = !DILocation(line: 37, column: 41, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !45)
!49 = !DILocation(line: 38, column: 19, scope: !7)
!50 = !DILocation(line: 39, column: 24, scope: !7)
!51 = !DILocation(line: 40, column: 19, scope: !7)
!52 = !DILocation(line: 41, column: 24, scope: !7)
!53 = !DILocation(line: 42, column: 20, scope: !7)
!54 = !DILocation(line: 43, column: 19, scope: !7)
!55 = !DILocation(line: 44, column: 24, scope: !7)
!56 = !DILocation(line: 45, column: 20, scope: !7)
!57 = !DILocation(line: 46, column: 20, scope: !7)
!58 = !DILocation(line: 47, column: 24, scope: !7)
!59 = !DILocation(line: 48, column: 20, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 37, scope: !7)
!62 = !DILocation(line: 50, column: 25, scope: !7)
!63 = !DILocation(line: 50, column: 37, scope: !7)
!64 = !DILocation(line: 50, column: 4, scope: !7)
