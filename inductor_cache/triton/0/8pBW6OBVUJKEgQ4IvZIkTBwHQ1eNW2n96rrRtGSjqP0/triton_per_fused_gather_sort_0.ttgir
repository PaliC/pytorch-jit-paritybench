#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [16, 2], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 2], order = [0, 1]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 2, 1], threadsPerWarp = [32, 1, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#blocked3 = #triton_gpu.blocked<{sizePerThread = [1, 1, 2], threadsPerWarp = [16, 2, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#loc = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc14 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":36:67)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc62 = loc(callsite(#loc1 at #loc23))
#loc68 = loc(callsite(#loc1 at #loc28))
#loc87 = loc(callsite(#loc62 at #loc18))
#loc93 = loc(callsite(#loc68 at #loc18))
#loc110 = loc(callsite(#loc87 at #loc13))
#loc116 = loc(callsite(#loc93 at #loc13))
#loc129 = loc(callsite(#loc110 at #loc14))
#loc132 = loc(callsite(#loc116 at #loc14))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_gather_sort_0(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0), %arg4: i32 loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<32x4xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<32x4xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<32x4xi32, #blocked> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<32x1xi1, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<1x2x1xi64, #blocked2> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<1x2x1xi64, #blocked3> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_2 : tensor<32x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_3 : tensor<32x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc7)
    %14 = arith.muli %8, %cst_4 : tensor<32x1xi32, #blocked> loc(#loc8)
    %15 = tt.broadcast %13 : tensor<1x4xi32, #blocked> -> tensor<32x4xi32, #blocked> loc(#loc9)
    %16 = tt.broadcast %14 : tensor<32x1xi32, #blocked> -> tensor<32x4xi32, #blocked> loc(#loc9)
    %17 = arith.addi %15, %16 : tensor<32x4xi32, #blocked> loc(#loc9)
    %18 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<32x4x!tt.ptr<i64>, #blocked> loc(#loc10)
    %19 = tt.addptr %18, %17 : tensor<32x4x!tt.ptr<i64>, #blocked>, tensor<32x4xi32, #blocked> loc(#loc10)
    %20 = tt.broadcast %10 : tensor<32x1xi1, #blocked> -> tensor<32x4xi1, #blocked> loc(#loc11)
    %21 = tt.broadcast %11 : tensor<32x1xi1, #blocked1> -> tensor<32x4xi1, #blocked1> loc(#loc11)
    %22 = tt.load %19, %20, %cst : tensor<32x4x!tt.ptr<i64>, #blocked> loc(#loc11)
    %23 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked3}>}>> loc(#loc79)
    %24 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> loc(#loc79)
    %25 = tt.expand_dims %23 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked3}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked3}>> loc(#loc79)
    %26 = tt.expand_dims %24 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> loc(#loc79)
    %27 = tt.expand_dims %25 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked3}>> -> tensor<1x2x1xi32, #blocked3> loc(#loc79)
    %28 = tt.expand_dims %26 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> -> tensor<1x2x1xi32, #blocked2> loc(#loc79)
    %29 = tt.broadcast %27 : tensor<1x2x1xi32, #blocked3> -> tensor<32x2x2xi32, #blocked3> loc(#loc80)
    %30 = tt.reshape %29 : tensor<32x2x2xi32, #blocked3> -> tensor<32x4xi32, #blocked> loc(#loc81)
    %31 = tt.reshape %22 : tensor<32x4xi64, #blocked> -> tensor<64x2x1xi64, #blocked2> loc(#loc105)
    %32 = arith.extsi %28 : tensor<1x2x1xi32, #blocked2> to tensor<1x2x1xi64, #blocked2> loc(#loc106)
    %33 = arith.extsi %27 : tensor<1x2x1xi32, #blocked3> to tensor<1x2x1xi64, #blocked3> loc(#loc106)
    %34 = arith.subi %cst_6, %32 : tensor<1x2x1xi64, #blocked2> loc(#loc107)
    %35 = arith.subi %cst_7, %33 : tensor<1x2x1xi64, #blocked3> loc(#loc107)
    %36 = tt.broadcast %34 : tensor<1x2x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc108)
    %37 = arith.muli %31, %36 : tensor<64x2x1xi64, #blocked2> loc(#loc108)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc110 at #loc14)), %arg6: i64 loc(callsite(#loc110 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc134)
      tt.reduce.return %106 : i64 loc(#loc128)
    }) : (tensor<64x2x1xi64, #blocked2>) -> tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc128)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1x1xi64, #blocked2> loc(#loc112)
    %40 = tt.broadcast %39 : tensor<64x1x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc113)
    %41 = tt.broadcast %32 : tensor<1x2x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc114)
    %42 = arith.muli %31, %41 : tensor<64x2x1xi64, #blocked2> loc(#loc114)
    %43 = "tt.reduce"(%42) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc116 at #loc14)), %arg6: i64 loc(callsite(#loc116 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc135)
      tt.reduce.return %106 : i64 loc(#loc131)
    }) : (tensor<64x2x1xi64, #blocked2>) -> tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc131)
    %44 = tt.expand_dims %43 {axis = 1 : i32} : tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1x1xi64, #blocked2> loc(#loc118)
    %45 = tt.broadcast %44 : tensor<64x1x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc119)
    %46 = tt.reshape %40 : tensor<64x2x1xi64, #blocked2> -> tensor<32x4xi64, #blocked> loc(#loc120)
    %47 = tt.reshape %45 : tensor<64x2x1xi64, #blocked2> -> tensor<32x4xi64, #blocked> loc(#loc121)
    %48 = arith.cmpi sgt, %46, %47 : tensor<32x4xi64, #blocked> loc(#loc122)
    %49 = arith.extui %48 : tensor<32x4xi1, #blocked> to tensor<32x4xi32, #blocked> loc(#loc123)
    %50 = arith.xori %49, %30 : tensor<32x4xi32, #blocked> loc(#loc123)
    %51 = arith.cmpi ne, %50, %cst_1 : tensor<32x4xi32, #blocked> loc(#loc124)
    %52 = arith.xori %46, %47 : tensor<32x4xi64, #blocked> loc(#loc125)
    %53 = arith.select %51, %52, %cst : tensor<32x4xi1, #blocked>, tensor<32x4xi64, #blocked> loc(#loc126)
    %54 = arith.xori %22, %53 : tensor<32x4xi64, #blocked> loc(#loc127)
    %55 = tt.reshape %54 : tensor<32x4xi64, #blocked> -> tensor<32x2x2xi64, #blocked3> loc(#loc105)
    %56 = tt.broadcast %35 : tensor<1x2x1xi64, #blocked3> -> tensor<32x2x2xi64, #blocked3> loc(#loc108)
    %57 = arith.muli %55, %56 : tensor<32x2x2xi64, #blocked3> loc(#loc108)
    %58 = "tt.reduce"(%57) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc110 at #loc14)), %arg6: i64 loc(callsite(#loc110 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc134)
      tt.reduce.return %106 : i64 loc(#loc128)
    }) : (tensor<32x2x2xi64, #blocked3>) -> tensor<32x2xi64, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc128)
    %59 = tt.expand_dims %58 {axis = 1 : i32} : tensor<32x2xi64, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<32x1x2xi64, #blocked3> loc(#loc112)
    %60 = tt.broadcast %59 : tensor<32x1x2xi64, #blocked3> -> tensor<32x2x2xi64, #blocked3> loc(#loc113)
    %61 = tt.broadcast %33 : tensor<1x2x1xi64, #blocked3> -> tensor<32x2x2xi64, #blocked3> loc(#loc114)
    %62 = arith.muli %55, %61 : tensor<32x2x2xi64, #blocked3> loc(#loc114)
    %63 = "tt.reduce"(%62) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc116 at #loc14)), %arg6: i64 loc(callsite(#loc116 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc135)
      tt.reduce.return %106 : i64 loc(#loc131)
    }) : (tensor<32x2x2xi64, #blocked3>) -> tensor<32x2xi64, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc131)
    %64 = tt.expand_dims %63 {axis = 1 : i32} : tensor<32x2xi64, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<32x1x2xi64, #blocked3> loc(#loc118)
    %65 = tt.broadcast %64 : tensor<32x1x2xi64, #blocked3> -> tensor<32x2x2xi64, #blocked3> loc(#loc119)
    %66 = tt.reshape %60 : tensor<32x2x2xi64, #blocked3> -> tensor<32x4xi64, #blocked> loc(#loc120)
    %67 = tt.reshape %65 : tensor<32x2x2xi64, #blocked3> -> tensor<32x4xi64, #blocked> loc(#loc121)
    %68 = arith.cmpi sgt, %66, %67 : tensor<32x4xi64, #blocked> loc(#loc122)
    %69 = arith.xori %66, %67 : tensor<32x4xi64, #blocked> loc(#loc125)
    %70 = arith.select %68, %69, %cst : tensor<32x4xi1, #blocked>, tensor<32x4xi64, #blocked> loc(#loc126)
    %71 = arith.xori %54, %70 : tensor<32x4xi64, #blocked> loc(#loc127)
    %72 = tt.reshape %71 : tensor<32x4xi64, #blocked> -> tensor<64x2x1xi64, #blocked2> loc(#loc105)
    %73 = arith.muli %72, %36 : tensor<64x2x1xi64, #blocked2> loc(#loc108)
    %74 = "tt.reduce"(%73) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc110 at #loc14)), %arg6: i64 loc(callsite(#loc110 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc134)
      tt.reduce.return %106 : i64 loc(#loc128)
    }) : (tensor<64x2x1xi64, #blocked2>) -> tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc128)
    %75 = tt.expand_dims %74 {axis = 1 : i32} : tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1x1xi64, #blocked2> loc(#loc112)
    %76 = tt.broadcast %75 : tensor<64x1x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc113)
    %77 = arith.muli %72, %41 : tensor<64x2x1xi64, #blocked2> loc(#loc114)
    %78 = "tt.reduce"(%77) <{axis = 1 : i32}> ({
    ^bb0(%arg5: i64 loc(callsite(#loc116 at #loc14)), %arg6: i64 loc(callsite(#loc116 at #loc14))):
      %106 = arith.addi %arg5, %arg6 : i64 loc(#loc135)
      tt.reduce.return %106 : i64 loc(#loc131)
    }) : (tensor<64x2x1xi64, #blocked2>) -> tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc131)
    %79 = tt.expand_dims %78 {axis = 1 : i32} : tensor<64x1xi64, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1x1xi64, #blocked2> loc(#loc118)
    %80 = tt.broadcast %79 : tensor<64x1x1xi64, #blocked2> -> tensor<64x2x1xi64, #blocked2> loc(#loc119)
    %81 = tt.reshape %76 : tensor<64x2x1xi64, #blocked2> -> tensor<32x4xi64, #blocked> loc(#loc120)
    %82 = tt.reshape %80 : tensor<64x2x1xi64, #blocked2> -> tensor<32x4xi64, #blocked> loc(#loc121)
    %83 = arith.cmpi sgt, %81, %82 : tensor<32x4xi64, #blocked> loc(#loc122)
    %84 = arith.xori %81, %82 : tensor<32x4xi64, #blocked> loc(#loc125)
    %85 = arith.select %83, %84, %cst : tensor<32x4xi1, #blocked>, tensor<32x4xi64, #blocked> loc(#loc126)
    %86 = arith.xori %71, %85 : tensor<32x4xi64, #blocked> loc(#loc127)
    %87 = arith.addi %86, %cst_0 : tensor<32x4xi64, #blocked> loc(#loc39)
    %88 = arith.cmpi slt, %86, %cst : tensor<32x4xi64, #blocked> loc(#loc40)
    %89 = arith.select %88, %87, %86 : tensor<32x4xi1, #blocked>, tensor<32x4xi64, #blocked> loc(#loc41)
    %90 = arith.cmpi sge, %89, %cst : tensor<32x4xi64, #blocked> loc(#loc42)
    %91 = arith.cmpi slt, %89, %cst_0 : tensor<32x4xi64, #blocked> loc(#loc43)
    %92 = arith.andi %90, %91 : tensor<32x4xi1, #blocked> loc(#loc44)
    %93 = arith.xori %10, %cst_5 : tensor<32x1xi1, #blocked> loc(#loc45)
    %94 = tt.broadcast %93 : tensor<32x1xi1, #blocked> -> tensor<32x4xi1, #blocked> loc(#loc46)
    %95 = arith.ori %92, %94 : tensor<32x4xi1, #blocked> loc(#loc46)
    tt.assert %95, "index out of bounds: 0 <= tmp10 < 4" : tensor<32x4xi1, #blocked> loc(#loc47)
    %96 = arith.extsi %14 : tensor<32x1xi32, #blocked> to tensor<32x1xi64, #blocked> loc(#loc48)
    %97 = tt.broadcast %96 : tensor<32x1xi64, #blocked> -> tensor<32x4xi64, #blocked> loc(#loc48)
    %98 = arith.addi %89, %97 : tensor<32x4xi64, #blocked> loc(#loc48)
    %99 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x4x!tt.ptr<f32>, #blocked> loc(#loc49)
    %100 = tt.addptr %99, %98 : tensor<32x4x!tt.ptr<f32>, #blocked>, tensor<32x4xi64, #blocked> loc(#loc49)
    %101 = triton_gpu.convert_layout %100 : tensor<32x4x!tt.ptr<f32>, #blocked> -> tensor<32x4x!tt.ptr<f32>, #blocked1> loc(#loc50)
    %102 = tt.load %101, %21 evictionPolicy = evict_last : tensor<32x4x!tt.ptr<f32>, #blocked1> loc(#loc50)
    %103 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x4x!tt.ptr<f32>, #blocked> loc(#loc51)
    %104 = tt.addptr %103, %17 : tensor<32x4x!tt.ptr<f32>, #blocked>, tensor<32x4xi32, #blocked> loc(#loc51)
    %105 = triton_gpu.convert_layout %102 : tensor<32x4xf32, #blocked1> -> tensor<32x4xf32, #blocked> loc(#loc52)
    tt.store %104, %105, %20 : tensor<32x4x!tt.ptr<f32>, #blocked> loc(#loc52)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":23:28)
#loc3 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":23:33)
#loc4 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":24:44)
#loc5 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":24:23)
#loc6 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":25:21)
#loc7 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":26:34)
#loc8 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":31:41)
#loc9 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":31:39)
#loc10 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":31:34)
#loc11 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":31:46)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":504:51)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":538:22)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc39 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":38:18)
#loc40 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":39:18)
#loc41 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":40:33)
#loc42 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:28)
#loc43 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:46)
#loc44 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:38)
#loc45 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:54)
#loc46 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:52)
#loc47 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":41:62)
#loc48 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":42:39)
#loc49 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":42:31)
#loc50 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":42:46)
#loc51 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":43:25)
#loc52 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":43:44)
#loc53 = loc("inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py":43:4)
#loc54 = loc(callsite(#loc12 at #loc13))
#loc55 = loc(callsite(#loc15 at #loc13))
#loc56 = loc(callsite(#loc16 at #loc13))
#loc57 = loc(callsite(#loc17 at #loc18))
#loc58 = loc(callsite(#loc19 at #loc18))
#loc59 = loc(callsite(#loc20 at #loc18))
#loc60 = loc(callsite(#loc21 at #loc18))
#loc61 = loc(callsite(#loc22 at #loc23))
#loc63 = loc(callsite(#loc24 at #loc22))
#loc64 = loc(callsite(#loc25 at #loc18))
#loc65 = loc(callsite(#loc26 at #loc18))
#loc66 = loc(callsite(#loc27 at #loc18))
#loc67 = loc(callsite(#loc22 at #loc28))
#loc69 = loc(callsite(#loc29 at #loc18))
#loc70 = loc(callsite(#loc30 at #loc18))
#loc71 = loc(callsite(#loc31 at #loc18))
#loc72 = loc(callsite(#loc32 at #loc18))
#loc73 = loc(callsite(#loc33 at #loc18))
#loc74 = loc(callsite(#loc34 at #loc18))
#loc75 = loc(callsite(#loc35 at #loc18))
#loc76 = loc(callsite(#loc36 at #loc18))
#loc77 = loc(callsite(#loc37 at #loc18))
#loc78 = loc(callsite(#loc38 at #loc18))
#loc79 = loc(callsite(#loc54 at #loc14))
#loc80 = loc(callsite(#loc55 at #loc14))
#loc81 = loc(callsite(#loc56 at #loc14))
#loc82 = loc(callsite(#loc57 at #loc13))
#loc83 = loc(callsite(#loc58 at #loc13))
#loc84 = loc(callsite(#loc59 at #loc13))
#loc85 = loc(callsite(#loc60 at #loc13))
#loc86 = loc(callsite(#loc61 at #loc18))
#loc88 = loc(callsite(#loc63 at #loc23))
#loc89 = loc(callsite(#loc64 at #loc13))
#loc90 = loc(callsite(#loc65 at #loc13))
#loc91 = loc(callsite(#loc66 at #loc13))
#loc92 = loc(callsite(#loc67 at #loc18))
#loc94 = loc(callsite(#loc63 at #loc28))
#loc95 = loc(callsite(#loc69 at #loc13))
#loc96 = loc(callsite(#loc70 at #loc13))
#loc97 = loc(callsite(#loc71 at #loc13))
#loc98 = loc(callsite(#loc72 at #loc13))
#loc99 = loc(callsite(#loc73 at #loc13))
#loc100 = loc(callsite(#loc74 at #loc13))
#loc101 = loc(callsite(#loc75 at #loc13))
#loc102 = loc(callsite(#loc76 at #loc13))
#loc103 = loc(callsite(#loc77 at #loc13))
#loc104 = loc(callsite(#loc78 at #loc13))
#loc105 = loc(callsite(#loc82 at #loc14))
#loc106 = loc(callsite(#loc83 at #loc14))
#loc107 = loc(callsite(#loc84 at #loc14))
#loc108 = loc(callsite(#loc85 at #loc14))
#loc109 = loc(callsite(#loc86 at #loc13))
#loc111 = loc(callsite(#loc88 at #loc18))
#loc112 = loc(callsite(#loc89 at #loc14))
#loc113 = loc(callsite(#loc90 at #loc14))
#loc114 = loc(callsite(#loc91 at #loc14))
#loc115 = loc(callsite(#loc92 at #loc13))
#loc117 = loc(callsite(#loc94 at #loc18))
#loc118 = loc(callsite(#loc95 at #loc14))
#loc119 = loc(callsite(#loc96 at #loc14))
#loc120 = loc(callsite(#loc97 at #loc14))
#loc121 = loc(callsite(#loc98 at #loc14))
#loc122 = loc(callsite(#loc99 at #loc14))
#loc123 = loc(callsite(#loc100 at #loc14))
#loc124 = loc(callsite(#loc101 at #loc14))
#loc125 = loc(callsite(#loc102 at #loc14))
#loc126 = loc(callsite(#loc103 at #loc14))
#loc127 = loc(callsite(#loc104 at #loc14))
#loc128 = loc(callsite(#loc109 at #loc14))
#loc130 = loc(callsite(#loc111 at #loc13))
#loc131 = loc(callsite(#loc115 at #loc14))
#loc133 = loc(callsite(#loc117 at #loc13))
#loc134 = loc(callsite(#loc130 at #loc14))
#loc135 = loc(callsite(#loc133 at #loc14))
