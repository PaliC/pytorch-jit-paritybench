; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = sdiv i32 %16, 16, !dbg !14
  %.frozen = freeze i32 %16, !dbg !15
  %18 = sdiv i32 %.frozen, 3072, !dbg !15
  %19 = mul i32 %18, 3072, !dbg !16
  %srem.decomposed = sub i32 %.frozen, %19, !dbg !16
  %20 = shl nsw i32 %18, 10, !dbg !17
  %21 = add nsw i32 %20, %srem.decomposed, !dbg !18
  %22 = sext i32 %21 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = shl nsw i32 %18, 9, !dbg !20
  %25 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !21
  %26 = insertelement <2 x i32> %25, i32 %17, i64 1, !dbg !21
  %27 = srem <2 x i32> %26, <i32 16, i32 192>, !dbg !21
  %28 = extractelement <2 x i32> %27, i64 1, !dbg !22
  %29 = icmp slt i32 %28, 64, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %29, i32 0, i1 %29) #1, !dbg !24
  %31 = and i32 %28, -32, !dbg !25
  %32 = icmp eq i32 %31, 64, !dbg !25
  %33 = insertelement <2 x i32> <i32 poison, i32 -64>, i32 %24, i64 0, !dbg !26
  %34 = add nsw <2 x i32> %33, %27, !dbg !26
  %35 = extractelement <2 x i32> %34, i64 1, !dbg !27
  %36 = shl nsw i32 %35, 4, !dbg !27
  %37 = extractelement <2 x i32> %34, i64 0, !dbg !28
  %38 = add nsw i32 %37, %36, !dbg !29
  %39 = sext i32 %38 to i64, !dbg !30
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !30
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %32, i32 0, i1 %32) #1, !dbg !31
  %42 = sext i32 %35 to i64, !dbg !32
  %43 = getelementptr float, ptr addrspace(1) %2, i64 %42, !dbg !32
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %32, i32 0, i1 %32) #1, !dbg !33
  %45 = icmp eq i32 %31, 96, !dbg !34
  %46 = add nsw i32 %28, -96, !dbg !35
  %47 = shl nsw i32 %46, 4, !dbg !36
  %48 = add nsw i32 %37, %47, !dbg !37
  %49 = sext i32 %48 to i64, !dbg !38
  %50 = getelementptr float, ptr addrspace(1) %3, i64 %49, !dbg !38
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %45, i32 0, i1 %45) #1, !dbg !39
  %52 = sext i32 %46 to i64, !dbg !40
  %53 = getelementptr float, ptr addrspace(1) %4, i64 %52, !dbg !40
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %45, i32 0, i1 %45) #1, !dbg !41
  %55 = icmp eq i32 %31, 128, !dbg !42
  %56 = add nsw i32 %28, -128, !dbg !43
  %57 = shl nsw i32 %56, 4, !dbg !44
  %58 = add nsw i32 %37, %57, !dbg !45
  %59 = sext i32 %58 to i64, !dbg !46
  %60 = getelementptr float, ptr addrspace(1) %5, i64 %59, !dbg !46
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %55, i32 0, i1 %55) #1, !dbg !47
  %62 = sext i32 %56 to i64, !dbg !48
  %63 = getelementptr float, ptr addrspace(1) %6, i64 %62, !dbg !48
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %55, i32 0, i1 %55) #1, !dbg !49
  %65 = icmp sgt i32 %28, 159, !dbg !22
  %66 = add nsw i32 %28, -160, !dbg !50
  %67 = shl nsw i32 %66, 4, !dbg !51
  %68 = add nsw i32 %37, %67, !dbg !28
  %69 = sext i32 %68 to i64, !dbg !52
  %70 = getelementptr float, ptr addrspace(1) %7, i64 %69, !dbg !52
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %65, i32 0, i1 %65) #1, !dbg !53
  %72 = sext i32 %66 to i64, !dbg !54
  %73 = getelementptr float, ptr addrspace(1) %8, i64 %72, !dbg !54
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %65, i32 0, i1 %65) #1, !dbg !55
  %75 = insertelement <4 x i32> poison, i32 %71, i64 0, !dbg !53
  %76 = insertelement <4 x i32> %75, i32 %61, i64 1, !dbg !53
  %77 = insertelement <4 x i32> %76, i32 %51, i64 2, !dbg !53
  %78 = insertelement <4 x i32> %77, i32 %41, i64 3, !dbg !53
  %79 = bitcast <4 x i32> %78 to <4 x float>, !dbg !53
  %80 = insertelement <4 x i32> poison, i32 %74, i64 0, !dbg !55
  %81 = insertelement <4 x i32> %80, i32 %64, i64 1, !dbg !55
  %82 = insertelement <4 x i32> %81, i32 %54, i64 2, !dbg !55
  %83 = insertelement <4 x i32> %82, i32 %44, i64 3, !dbg !55
  %84 = bitcast <4 x i32> %83 to <4 x float>, !dbg !55
  %85 = fadd <4 x float> %79, %84, !dbg !56
  %86 = extractelement <4 x float> %85, i64 3, !dbg !57
  %87 = fmul float %86, 0x3FC99999A0000000, !dbg !58
  %88 = fcmp ogt <4 x float> %85, zeroinitializer, !dbg !59
  %89 = extractelement <4 x i1> %88, i64 3, !dbg !57
  %90 = select i1 %89, float %86, float %87, !dbg !57
  %91 = extractelement <4 x float> %85, i64 2, !dbg !60
  %92 = fmul float %91, 0x3FC99999A0000000, !dbg !61
  %93 = extractelement <4 x i1> %88, i64 2, !dbg !60
  %94 = select i1 %93, float %91, float %92, !dbg !60
  %95 = extractelement <4 x float> %85, i64 1, !dbg !62
  %96 = fmul float %95, 0x3FC99999A0000000, !dbg !63
  %97 = extractelement <4 x i1> %88, i64 1, !dbg !62
  %98 = select i1 %97, float %95, float %96, !dbg !62
  %99 = extractelement <4 x float> %85, i64 0, !dbg !64
  %100 = fmul float %99, 0x3FC99999A0000000, !dbg !65
  %101 = extractelement <4 x i1> %88, i64 0, !dbg !64
  %102 = select i1 %101, float %99, float %100, !dbg !64
  %103 = select i1 %65, float %102, float 0.000000e+00, !dbg !66
  %104 = select i1 %55, float %98, float %103, !dbg !67
  %105 = select i1 %45, float %94, float %104, !dbg !67
  %106 = select i1 %32, float %90, float %105, !dbg !67
  %107 = sext i32 %16 to i64, !dbg !68
  %108 = getelementptr float, ptr addrspace(1) %9, i64 %107, !dbg !68
  %109 = bitcast float %106 to i32, !dbg !69
  %110 = select i1 %29, i32 %30, i32 %109, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %110, ptr addrspace(1) %108, i1 true) #1, !dbg !69
  ret void, !dbg !71
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c244jpyglnmiqqyx36jsl3k6oj5xpwim5rz2mv5bwnwievkw3rwe.py", directory: "inductor_cache/24")
!4 = !{ptr @triton_poi_fused_cat_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_7", linkageName: "triton_poi_fused_cat_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 50, scope: !7)
!18 = !DILocation(line: 33, column: 45, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 38, column: 58, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 76, column: 20, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 55, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 38, column: 40, scope: !7)
!28 = !DILocation(line: 79, column: 55, scope: !7)
!29 = !DILocation(line: 38, column: 54, scope: !7)
!30 = !DILocation(line: 38, column: 31, scope: !7)
!31 = !DILocation(line: 38, column: 63, scope: !7)
!32 = !DILocation(line: 39, column: 31, scope: !7)
!33 = !DILocation(line: 39, column: 44, scope: !7)
!34 = !DILocation(line: 51, column: 20, scope: !7)
!35 = !DILocation(line: 52, column: 48, scope: !7)
!36 = !DILocation(line: 52, column: 40, scope: !7)
!37 = !DILocation(line: 52, column: 54, scope: !7)
!38 = !DILocation(line: 52, column: 31, scope: !7)
!39 = !DILocation(line: 52, column: 63, scope: !7)
!40 = !DILocation(line: 53, column: 31, scope: !7)
!41 = !DILocation(line: 53, column: 44, scope: !7)
!42 = !DILocation(line: 65, column: 20, scope: !7)
!43 = !DILocation(line: 66, column: 49, scope: !7)
!44 = !DILocation(line: 66, column: 40, scope: !7)
!45 = !DILocation(line: 66, column: 55, scope: !7)
!46 = !DILocation(line: 66, column: 31, scope: !7)
!47 = !DILocation(line: 66, column: 64, scope: !7)
!48 = !DILocation(line: 67, column: 31, scope: !7)
!49 = !DILocation(line: 67, column: 45, scope: !7)
!50 = !DILocation(line: 79, column: 49, scope: !7)
!51 = !DILocation(line: 79, column: 40, scope: !7)
!52 = !DILocation(line: 79, column: 31, scope: !7)
!53 = !DILocation(line: 79, column: 64, scope: !7)
!54 = !DILocation(line: 80, column: 31, scope: !7)
!55 = !DILocation(line: 80, column: 45, scope: !7)
!56 = !DILocation(line: 81, column: 20, scope: !7)
!57 = !DILocation(line: 45, column: 35, scope: !7)
!58 = !DILocation(line: 44, column: 20, scope: !7)
!59 = !DILocation(line: 83, column: 20, scope: !7)
!60 = !DILocation(line: 59, column: 35, scope: !7)
!61 = !DILocation(line: 58, column: 20, scope: !7)
!62 = !DILocation(line: 73, column: 35, scope: !7)
!63 = !DILocation(line: 72, column: 20, scope: !7)
!64 = !DILocation(line: 86, column: 35, scope: !7)
!65 = !DILocation(line: 85, column: 20, scope: !7)
!66 = !DILocation(line: 88, column: 35, scope: !7)
!67 = !DILocation(line: 0, scope: !7)
!68 = !DILocation(line: 93, column: 25, scope: !7)
!69 = !DILocation(line: 93, column: 37, scope: !7)
!70 = !DILocation(line: 92, column: 33, scope: !7)
!71 = !DILocation(line: 93, column: 4, scope: !7)
