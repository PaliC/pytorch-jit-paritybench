#loc = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)
#loc1 = loc(unknown)
#loc53 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:26)
#loc60 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:26)
#loc75 = loc(callsite(#loc1 at #loc53))
#loc78 = loc(callsite(#loc1 at #loc60))
module {
  tt.func public @triton_per_fused_add_cat_native_group_norm_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.280000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-192> : tensor<1x128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-128> : tensor<1x128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<192> : tensor<1x128xi64> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<1x128xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x128xf32> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_6 : tensor<1x128xi32> loc(#loc6)
    %6 = arith.remsi %0, %c32_i32 : i32 loc(#loc7)
    %7 = arith.remsi %4, %cst_6 : tensor<1x128xi32> loc(#loc8)
    %8 = arith.divsi %0, %c32_i32 : i32 loc(#loc9)
    %9 = arith.muli %0, %c128_i32 : i32 loc(#loc10)
    %10 = tt.splat %9 : i32 -> tensor<1x128xi32> loc(#loc11)
    %11 = arith.addi %4, %10 : tensor<1x128xi32> loc(#loc11)
    %12 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc12)
    %14 = tt.splat %1 : i1 -> tensor<1x128xi1> loc(#loc13)
    %15 = tt.load %13, %14, %cst_5 : tensor<1x128x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %11 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc14)
    %18 = tt.load %17, %14, %cst_5 : tensor<1x128x!tt.ptr<f32>> loc(#loc15)
    %19 = arith.muli %6, %c8_i32 : i32 loc(#loc16)
    %20 = tt.splat %19 : i32 -> tensor<1x128xi32> loc(#loc17)
    %21 = arith.addi %5, %20 : tensor<1x128xi32> loc(#loc17)
    %22 = arith.extsi %21 : tensor<1x128xi32> to tensor<1x128xi64> loc(#loc18)
    %23 = arith.cmpi slt, %22, %cst_4 : tensor<1x128xi64> loc(#loc18)
    %24 = arith.muli %21, %cst_6 : tensor<1x128xi32> loc(#loc19)
    %25 = arith.addi %7, %24 : tensor<1x128xi32> loc(#loc20)
    %26 = arith.muli %8, %c2048_i32 : i32 loc(#loc21)
    %27 = tt.splat %26 : i32 -> tensor<1x128xi32> loc(#loc22)
    %28 = arith.addi %25, %27 : tensor<1x128xi32> loc(#loc22)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc23)
    %30 = tt.addptr %29, %28 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc23)
    %31 = arith.andi %23, %14 : tensor<1x128xi1> loc(#loc24)
    %32 = tt.load %30, %31, %cst_5 : tensor<1x128x!tt.ptr<f32>> loc(#loc25)
    %33 = arith.cmpi sge, %22, %cst_4 : tensor<1x128xi64> loc(#loc26)
    %34 = arith.cmpi slt, %22, %cst_3 : tensor<1x128xi64> loc(#loc27)
    %35 = arith.andi %33, %34 : tensor<1x128xi1> loc(#loc28)
    %36 = arith.addi %5, %cst_2 : tensor<1x128xi32> loc(#loc29)
    %37 = arith.addi %36, %20 : tensor<1x128xi32> loc(#loc30)
    %38 = arith.muli %37, %cst_6 : tensor<1x128xi32> loc(#loc31)
    %39 = arith.addi %7, %38 : tensor<1x128xi32> loc(#loc32)
    %40 = arith.muli %8, %c1024_i32 : i32 loc(#loc33)
    %41 = tt.splat %40 : i32 -> tensor<1x128xi32> loc(#loc34)
    %42 = arith.addi %39, %41 : tensor<1x128xi32> loc(#loc34)
    %43 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc35)
    %44 = tt.addptr %43, %42 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc35)
    %45 = arith.andi %35, %14 : tensor<1x128xi1> loc(#loc36)
    %46 = tt.load %44, %45, %cst_5 : tensor<1x128x!tt.ptr<f32>> loc(#loc37)
    %47 = arith.cmpi sge, %22, %cst_3 : tensor<1x128xi64> loc(#loc38)
    %48 = arith.addi %5, %cst_1 : tensor<1x128xi32> loc(#loc39)
    %49 = arith.addi %48, %20 : tensor<1x128xi32> loc(#loc40)
    %50 = arith.muli %49, %cst_6 : tensor<1x128xi32> loc(#loc41)
    %51 = arith.addi %7, %50 : tensor<1x128xi32> loc(#loc42)
    %52 = arith.addi %51, %41 : tensor<1x128xi32> loc(#loc43)
    %53 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc44)
    %54 = tt.addptr %53, %52 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc44)
    %55 = arith.andi %47, %14 : tensor<1x128xi1> loc(#loc45)
    %56 = tt.load %54, %55, %cst_5 : tensor<1x128x!tt.ptr<f32>> loc(#loc46)
    %57 = arith.select %35, %46, %56 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc47)
    %58 = arith.select %23, %32, %57 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc48)
    %59 = arith.addf %15, %18 : tensor<1x128xf32> loc(#loc49)
    %60 = arith.addf %58, %59 : tensor<1x128xf32> loc(#loc50)
    %61 = arith.select %14, %60, %cst_5 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc51)
    %62 = "tt.reduce"(%61) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc53)), %arg12: f32 loc(callsite(#loc1 at #loc53))):
      %82 = arith.addf %arg11, %arg12 : f32 loc(#loc79)
      tt.reduce.return %82 : f32 loc(#loc74)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc74)
    %63 = tt.expand_dims %62 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc55)
    %64 = arith.divf %63, %cst_0 : tensor<1x1xf32> loc(#loc56)
    %65 = tt.broadcast %64 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc57)
    %66 = arith.subf %60, %65 : tensor<1x128xf32> loc(#loc57)
    %67 = arith.mulf %66, %66 : tensor<1x128xf32> loc(#loc58)
    %68 = arith.select %14, %67, %cst_5 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc59)
    %69 = "tt.reduce"(%68) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc60)), %arg12: f32 loc(callsite(#loc1 at #loc60))):
      %82 = arith.addf %arg11, %arg12 : f32 loc(#loc80)
      tt.reduce.return %82 : f32 loc(#loc77)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc77)
    %70 = tt.expand_dims %69 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc61)
    %71 = arith.divf %70, %cst_0 : tensor<1x1xf32> loc(#loc62)
    %72 = arith.addf %71, %cst : tensor<1x1xf32> loc(#loc63)
    %73 = tt.extern_elementwise %72 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc64)
    %74 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc65)
    %75 = tt.addptr %74, %11 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc65)
    tt.store %75, %60, %14 : tensor<1x128x!tt.ptr<f32>> loc(#loc66)
    %76 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc67)
    %77 = tt.splat %76 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc67)
    tt.store %77, %73, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc68)
    %78 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc69)
    %79 = tt.splat %78 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc69)
    tt.store %79, %64, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc70)
    %80 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc71)
    %81 = tt.splat %80 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc71)
    tt.store %81, %70, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc72)
    tt.return loc(#loc73)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":23:28)
#loc3 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":25:21)
#loc4 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":26:26)
#loc5 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":26:34)
#loc6 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":29:19)
#loc7 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":30:19)
#loc8 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":31:19)
#loc9 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":32:19)
#loc10 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:40)
#loc11 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:36)
#loc12 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:31)
#loc13 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":35:45)
#loc14 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:31)
#loc15 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":36:45)
#loc16 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:18)
#loc17 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":37:16)
#loc18 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":41:18)
#loc19 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:39)
#loc20 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:35)
#loc21 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:57)
#loc22 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:52)
#loc23 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:30)
#loc24 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:69)
#loc25 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":42:62)
#loc26 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":43:19)
#loc27 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":45:18)
#loc28 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":46:18)
#loc29 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:49)
#loc30 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:54)
#loc31 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:40)
#loc32 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:36)
#loc33 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:67)
#loc34 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:62)
#loc35 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:31)
#loc36 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:79)
#loc37 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":47:72)
#loc38 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":48:20)
#loc39 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:49)
#loc40 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:54)
#loc41 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:40)
#loc42 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:36)
#loc43 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:62)
#loc44 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:31)
#loc45 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:80)
#loc46 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":51:72)
#loc47 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":52:34)
#loc48 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":53:33)
#loc49 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":54:20)
#loc50 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":55:20)
#loc51 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":59:35)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc55 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":60:29)
#loc56 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":63:20)
#loc57 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":64:20)
#loc58 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":65:20)
#loc59 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":67:35)
#loc61 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":68:29)
#loc62 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":70:20)
#loc63 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":72:20)
#loc64 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":73:28)
#loc65 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:25)
#loc66 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":74:46)
#loc67 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:25)
#loc68 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":75:37)
#loc69 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:25)
#loc70 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":76:37)
#loc71 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:25)
#loc72 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:37)
#loc73 = loc("inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py":77:4)
#loc74 = loc(callsite(#loc52 at #loc53))
#loc76 = loc(callsite(#loc54 at #loc52))
#loc77 = loc(callsite(#loc52 at #loc60))
#loc79 = loc(callsite(#loc76 at #loc53))
#loc80 = loc(callsite(#loc76 at #loc60))
