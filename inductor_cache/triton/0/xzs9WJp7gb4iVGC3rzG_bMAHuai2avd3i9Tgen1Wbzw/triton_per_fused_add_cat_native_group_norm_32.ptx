//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_cat_native_group_norm_32 // -- Begin function triton_per_fused_add_cat_native_group_norm_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_cat_native_group_norm_32
.visible .entry triton_per_fused_add_cat_native_group_norm_32(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_cat_native_group_norm_32_param_8,
	.param .u32 triton_per_fused_add_cat_native_group_norm_32_param_9,
	.param .u32 triton_per_fused_add_cat_native_group_norm_32_param_10
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<103>;
	.reg .f32 	%f<48>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_add_cat_native_group_norm_32_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_cat_native_group_norm_32_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:25:21
	setp.lt.s32 	%p1, %r1, 128;
	ld.param.u64 	%rd12, [triton_per_fused_add_cat_native_group_norm_32_param_2];
	ld.param.u64 	%rd13, [triton_per_fused_add_cat_native_group_norm_32_param_3];
	.loc	1 26 34                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:26:34
	mov.u32 	%r45, %tid.x;
	and.b32  	%r46, %r45, 31;
	ld.param.u64 	%rd14, [triton_per_fused_add_cat_native_group_norm_32_param_4];
	ld.param.u64 	%rd15, [triton_per_fused_add_cat_native_group_norm_32_param_5];
	shl.b32 	%r47, %r45, 1;
	ld.param.u64 	%rd16, [triton_per_fused_add_cat_native_group_norm_32_param_6];
	and.b32  	%r48, %r47, 14;
	ld.param.u64 	%rd17, [triton_per_fused_add_cat_native_group_norm_32_param_7];
	and.b32  	%r49, %r47, 126;
	ld.param.u64 	%rd18, [triton_per_fused_add_cat_native_group_norm_32_param_8];
	.loc	1 29 19                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:29:19
	bfe.u32 	%r50, %r47, 4, 3;
	.loc	1 32 19                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:32:19
	shr.s32 	%r51, %r1, 31;
	shr.u32 	%r52, %r51, 27;
	add.s32 	%r53, %r1, %r52;
	shr.s32 	%r54, %r53, 5;
	.loc	1 30 19                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:30:19
	and.b32  	%r55, %r53, -32;
	sub.s32 	%r56, %r1, %r55;
	.loc	1 35 40                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:35:40
	shl.b32 	%r57, %r1, 7;
	.loc	1 35 36                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:35:36
	or.b32  	%r58, %r57, %r49;
	.loc	1 35 31                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:35:31
	mul.wide.s32 	%rd19, %r58, 4;
	add.s64 	%rd1, %rd13, %rd19;
	mov.b32 	%r4, 0;
	.loc	1 35 45                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:35:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 36 31                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:36:31
	add.s64 	%rd2, %rd14, %rd19;
	.loc	1 36 45                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:36:45
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	.loc	1 37 18                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:37:18
	shl.b32 	%r59, %r56, 3;
	.loc	1 37 16                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:37:16
	or.b32  	%r60, %r59, %r50;
	.loc	1 41 18                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:41:18
	setp.lt.s32 	%p26, %r60, 128;
	.loc	1 42 39                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:39
	shl.b32 	%r61, %r60, 4;
	.loc	1 42 57                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:57
	shl.b32 	%r62, %r54, 11;
	.loc	1 42 35                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:35
	or.b32  	%r63, %r62, %r48;
	.loc	1 42 52                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:52
	add.s32 	%r64, %r63, %r61;
	.loc	1 42 30                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:30
	mul.wide.s32 	%rd20, %r64, 4;
	add.s64 	%rd3, %rd10, %rd20;
	.loc	1 42 69                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:69
	and.pred  	%p7, %p1, %p26;
	.loc	1 42 62                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:42:62
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p7 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r10, %r4;
	@!%p7 mov.u32 %r11, %r4;
	// end inline asm
	.loc	1 46 18                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:46:18
	and.b32  	%r65, %r56, 536870904;
	setp.eq.s32 	%p27, %r65, 16;
	.loc	1 47 67                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:67
	shl.b32 	%r66, %r54, 10;
	.loc	1 47 36                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:36
	or.b32  	%r67, %r66, %r48;
	.loc	1 47 40                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:40
	add.s32 	%r68, %r61, %r67;
	.loc	1 47 62                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:62
	add.s32 	%r69, %r68, -2048;
	.loc	1 47 31                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:31
	mul.wide.s32 	%rd21, %r69, 4;
	add.s64 	%rd4, %rd11, %rd21;
	.loc	1 47 79                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:79
	and.pred  	%p10, %p1, %p27;
	.loc	1 47 72                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:47:72
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p10 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r14, %r4;
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	.loc	1 48 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:48:20
	setp.gt.s32 	%p28, %r60, 191;
	.loc	1 51 62                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:51:62
	add.s32 	%r70, %r68, -3072;
	.loc	1 51 31                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:51:31
	mul.wide.s32 	%rd22, %r70, 4;
	add.s64 	%rd5, %rd12, %rd22;
	.loc	1 51 80                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:51:80
	and.pred  	%p13, %p1, %p28;
	.loc	1 51 72                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:51:72
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p13 ld.global.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r18, %r4;
	@!%p13 mov.u32 %r19, %r4;
	// end inline asm
	.loc	1 35 45                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:35:45
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r2;
	.loc	1 36 45                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:36:45
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r6;
	.loc	1 52 34                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:52:34
	selp.b32 	%r71, %r14, %r18, %p27;
	selp.b32 	%r72, %r15, %r19, %p27;
	.loc	1 53 33                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:53:33
	selp.b32 	%r73, %r11, %r72, %p26;
	selp.b32 	%r74, %r10, %r71, %p26;
	mov.b32 	%f5, %r74;
	mov.b32 	%f6, %r73;
	.loc	1 54 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:54:20
	add.f32 	%f7, %f2, %f4;
	add.f32 	%f8, %f1, %f3;
	.loc	1 55 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:55:20
	add.f32 	%f9, %f8, %f6;
	mov.b32 	%r41, %f9;
	add.f32 	%f10, %f7, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f10, %f9;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f12;
	shfl.sync.bfly.b32	%r76, %r75, 16, 31, -1;
	mov.b32 	%f13, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f14;
	shfl.sync.bfly.b32	%r78, %r77, 8, 31, -1;
	mov.b32 	%f15, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f16;
	shfl.sync.bfly.b32	%r80, %r79, 4, 31, -1;
	mov.b32 	%f17, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f18;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f19, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f20;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f21, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r46, 0;
	shr.u32 	%r85, %r45, 3;
	and.b32  	%r86, %r85, 4;
	mov.u32 	%r87, global_smem;
	add.s32 	%r22, %r87, %r86;
	mov.b32 	%r23, %f22;
	// begin inline asm
	@%p16 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r45, 2;
	shl.b32 	%r88, %r45, 2;
	add.s32 	%r25, %r87, %r88;
	// begin inline asm
	@%p17 ld.shared.b32 %r24, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r24;
	shfl.sync.bfly.b32	%r89, %r24, 1, 31, -1;
	mov.b32 	%f24, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r90, %r45, 1;
	setp.eq.b32 	%p29, %r90, 1;
	not.pred 	%p30, %p29;
	and.pred  	%p18, %p17, %p30;
	mov.b32 	%r27, %f25;
	// begin inline asm
	@%p18 st.shared.b32 [ %r25 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 63 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:63:20
	ld.shared.u32 	%r29, [global_smem];
	mov.b32 	%r30, 1124073472;
	// begin inline asm
	div.full.f32 %r43, %r29, %r30;
	// end inline asm
	mov.b32 	%f26, %r43;
	.loc	1 64 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:64:20
	sub.f32 	%f27, %f10, %f26;
	sub.f32 	%f28, %f9, %f26;
	.loc	1 65 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:65:20
	mul.f32 	%f29, %f28, %f28;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f30, %f27, %f27, %f29;
	selp.f32 	%f31, %f30, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f31;
	shfl.sync.bfly.b32	%r92, %r91, 16, 31, -1;
	mov.b32 	%f32, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f33;
	shfl.sync.bfly.b32	%r94, %r93, 8, 31, -1;
	mov.b32 	%f34, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f35;
	shfl.sync.bfly.b32	%r96, %r95, 4, 31, -1;
	mov.b32 	%f36, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f37;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f38, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f39;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f40, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f41;
	// begin inline asm
	@%p16 st.shared.b32 [ %r22 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r33, [ %r25 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r33;
	shfl.sync.bfly.b32	%r101, %r33, 1, 31, -1;
	mov.b32 	%f43, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f44;
	// begin inline asm
	@%p18 st.shared.b32 [ %r25 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 70 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:70:20
	ld.shared.u32 	%r38, [global_smem];
	// begin inline asm
	div.full.f32 %r37, %r38, %r30;
	// end inline asm
	mov.b32 	%f45, %r37;
	.loc	1 72 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:72:20
	add.f32 	%f46, %f45, 0f3727C5AC;
	.loc	1 73 28                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:73:28
	rsqrt.approx.ftz.f32 	%f47, %f46;
	.loc	1 74 25                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:74:25
	add.s64 	%rd6, %rd15, %rd19;
	.loc	1 55 20                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:55:20
	mov.b32 	%r40, %f10;
	.loc	1 74 46                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:74:46
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r40, %r41 };
	// end inline asm
	.loc	1 75 25                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:75:25
	mul.wide.s32 	%rd23, %r1, 4;
	add.s64 	%rd7, %rd18, %rd23;
	.loc	1 75 37                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:75:37
	and.b32  	%r102, %r45, 63;
	setp.eq.s32 	%p31, %r102, 0;
	mov.b32 	%r42, %f47;
	and.pred  	%p23, %p31, %p1;
	// begin inline asm
	@%p23 st.global.b32 [ %rd7 + 0 ], { %r42 };
	// end inline asm
	.loc	1 76 25                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:76:25
	add.s64 	%rd8, %rd16, %rd23;
	.loc	1 76 37                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:76:37
	// begin inline asm
	@%p23 st.global.b32 [ %rd8 + 0 ], { %r43 };
	// end inline asm
	.loc	1 77 25                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:77:25
	add.s64 	%rd9, %rd17, %rd23;
	.loc	1 77 37                         // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:77:37
	// begin inline asm
	@%p23 st.global.b32 [ %rd9 + 0 ], { %r38 };
	// end inline asm
	.loc	1 77 4                          // cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py:77:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vr/cvrjszbwmee3ndhwzicg77dkpdoe57l4hxi6qiya6hgzo4czsjbe.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 114
.b8 106
.b8 115
.b8 122
.b8 98
.b8 119
.b8 109
.b8 101
.b8 101
.b8 51
.b8 110
.b8 100
.b8 104
.b8 119
.b8 122
.b8 105
.b8 99
.b8 103
.b8 55
.b8 55
.b8 100
.b8 107
.b8 112
.b8 100
.b8 111
.b8 101
.b8 53
.b8 55
.b8 108
.b8 52
.b8 104
.b8 120
.b8 105
.b8 54
.b8 113
.b8 105
.b8 121
.b8 97
.b8 54
.b8 104
.b8 103
.b8 122
.b8 111
.b8 52
.b8 99
.b8 122
.b8 115
.b8 106
.b8 98
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x30 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x93:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
