//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9 // -- Begin function triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9
.visible .entry triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_10,
	.param .u32 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_11,
	.param .u32 triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_12
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<125>;
	.reg .f32 	%f<102>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_0];
	ld.param.u64 	%rd14, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_1];
$L__tmp0:
	.loc	1 23 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd15, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_2];
	ld.param.u64 	%rd16, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_3];
	.loc	1 26 34                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:26:34
	mov.u32 	%r69, %tid.x;
	and.b32  	%r70, %r69, 31;
	ld.param.u64 	%rd17, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_4];
	ld.param.u64 	%rd18, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_5];
	shl.b32 	%r71, %r69, 1;
	ld.param.u64 	%rd19, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_6];
	and.b32  	%r72, %r71, 126;
	ld.param.u64 	%rd20, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_7];
	.loc	1 31 39                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:39
	shl.b32 	%r73, %r1, 7;
	ld.param.u64 	%rd21, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_8];
	.loc	1 31 35                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:35
	or.b32  	%r74, %r73, %r72;
	ld.param.u64 	%rd22, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_9];
	ld.param.u64 	%rd23, [triton_per_fused_add_div_mean_mul_native_layer_norm_native_layer_norm_backward_pow_sqrt_sub_9_param_10];
	.loc	1 31 30                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:30
	mul.wide.s32 	%rd24, %r74, 4;
	add.s64 	%rd1, %rd16, %rd24;
	mov.b32 	%r4, 0;
	.loc	1 31 44                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 32 34                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:32:34
	add.s64 	%rd2, %rd13, %rd24;
	.loc	1 32 48                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:32:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	.loc	1 33 30                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:33:30
	mul.wide.u32 	%rd25, %r72, 4;
	add.s64 	%rd3, %rd17, %rd25;
	mov.pred 	%p7, -1;
	.loc	1 33 35                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:34:31
	add.s64 	%rd4, %rd18, %rd25;
	.loc	1 34 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:34:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	mov.b32 	%f2, %r13;
	.loc	1 35 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:35:31
	add.s64 	%rd5, %rd19, %rd25;
	.loc	1 35 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r14;
	mov.b32 	%f4, %r15;
	.loc	1 36 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:31
	add.s64 	%rd6, %rd20, %rd25;
	.loc	1 36 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:31
	add.s64 	%rd7, %rd21, %rd25;
	.loc	1 37 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 31 44                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:31:44
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	.loc	1 32 48                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:32:48
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r6;
	.loc	1 33 35                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:33:35
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r10;
	.loc	1 38 18                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:38:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 39 18                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:39:18
	add.f32 	%f13, %f12, %f6;
	add.f32 	%f14, %f11, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f14, %f13;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f16;
	shfl.sync.bfly.b32	%r76, %r75, 16, 31, -1;
	mov.b32 	%f17, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f18;
	shfl.sync.bfly.b32	%r78, %r77, 8, 31, -1;
	mov.b32 	%f19, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f20;
	shfl.sync.bfly.b32	%r80, %r79, 4, 31, -1;
	mov.b32 	%f21, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f22;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f23, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f24;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f25, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p12, %r70, 0;
	shr.u32 	%r85, %r69, 3;
	and.b32  	%r86, %r85, 4;
	mov.u32 	%r87, global_smem;
	add.s32 	%r20, %r87, %r86;
	mov.b32 	%r21, %f26;
	// begin inline asm
	@%p12 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r69, 2;
	shl.b32 	%r88, %r69, 2;
	add.s32 	%r23, %r87, %r88;
	// begin inline asm
	@%p13 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r22;
	shfl.sync.bfly.b32	%r89, %r22, 1, 31, -1;
	mov.b32 	%f28, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r90, %r69, 1;
	setp.eq.b32 	%p29, %r90, 1;
	not.pred 	%p30, %p29;
	and.pred  	%p14, %p13, %p30;
	mov.b32 	%r25, %f29;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 47 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:47:20
	ld.shared.u32 	%r27, [global_smem];
	mov.b32 	%r28, 1124073472;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f30, %r26;
	.loc	1 48 19                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:48:19
	sub.f32 	%f31, %f14, %f30;
	sub.f32 	%f32, %f13, %f30;
	.loc	1 49 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:49:20
	mul.f32 	%f33, %f32, %f32;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f31, %f31, %f33;
	selp.f32 	%f35, %f34, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f35;
	shfl.sync.bfly.b32	%r92, %r91, 16, 31, -1;
	mov.b32 	%f36, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f37;
	shfl.sync.bfly.b32	%r94, %r93, 8, 31, -1;
	mov.b32 	%f38, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f39;
	shfl.sync.bfly.b32	%r96, %r95, 4, 31, -1;
	mov.b32 	%f40, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f41;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f42, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f43;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f44, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f45;
	// begin inline asm
	@%p12 st.shared.b32 [ %r20 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p13 ld.shared.b32 %r31, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r31;
	shfl.sync.bfly.b32	%r101, %r31, 1, 31, -1;
	mov.b32 	%f47, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f48;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 55 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:55:20
	ld.shared.u32 	%r36, [global_smem];
	// begin inline asm
	div.full.f32 %r35, %r36, %r28;
	// end inline asm
	mov.b32 	%f49, %r35;
	.loc	1 57 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:57:20
	add.f32 	%f50, %f49, 0f3727C5AC;
	.loc	1 58 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:58:28
	rsqrt.approx.ftz.f32 	%f51, %f50;
	.loc	1 59 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:59:20
	mul.f32 	%f52, %f31, %f51;
	mul.f32 	%f53, %f32, %f51;
	.loc	1 61 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:61:20
	fma.rn.f32 	%f54, %f52, %f1, %f3;
	fma.rn.f32 	%f55, %f53, %f2, %f4;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	selp.f32 	%f57, %f56, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f57;
	shfl.sync.bfly.b32	%r103, %r102, 16, 31, -1;
	mov.b32 	%f58, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f59;
	shfl.sync.bfly.b32	%r105, %r104, 8, 31, -1;
	mov.b32 	%f60, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f61;
	shfl.sync.bfly.b32	%r107, %r106, 4, 31, -1;
	mov.b32 	%f62, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f63;
	shfl.sync.bfly.b32	%r109, %r108, 2, 31, -1;
	mov.b32 	%f64, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f65;
	shfl.sync.bfly.b32	%r111, %r110, 1, 31, -1;
	mov.b32 	%f66, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f67;
	// begin inline asm
	@%p12 st.shared.b32 [ %r20 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p13 ld.shared.b32 %r40, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f68, %r40;
	shfl.sync.bfly.b32	%r112, %r40, 1, 31, -1;
	mov.b32 	%f69, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f70;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 65 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:65:20
	ld.shared.u32 	%r45, [global_smem];
	// begin inline asm
	div.full.f32 %r64, %r45, %r28;
	// end inline asm
	mov.b32 	%f71, %r64;
	.loc	1 66 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:66:20
	sub.f32 	%f72, %f54, %f71;
	sub.f32 	%f73, %f55, %f71;
	.loc	1 67 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:67:20
	mul.f32 	%f74, %f73, %f73;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f75, %f72, %f72, %f74;
	selp.f32 	%f76, %f75, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f76;
	shfl.sync.bfly.b32	%r114, %r113, 16, 31, -1;
	mov.b32 	%f77, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f78;
	shfl.sync.bfly.b32	%r116, %r115, 8, 31, -1;
	mov.b32 	%f79, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f80;
	shfl.sync.bfly.b32	%r118, %r117, 4, 31, -1;
	mov.b32 	%f81, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f82;
	shfl.sync.bfly.b32	%r120, %r119, 2, 31, -1;
	mov.b32 	%f83, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f84;
	shfl.sync.bfly.b32	%r122, %r121, 1, 31, -1;
	mov.b32 	%f85, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f86;
	// begin inline asm
	@%p12 st.shared.b32 [ %r20 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p13 ld.shared.b32 %r49, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f87, %r49;
	shfl.sync.bfly.b32	%r123, %r49, 1, 31, -1;
	mov.b32 	%f88, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f89;
	// begin inline asm
	@%p14 st.shared.b32 [ %r23 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
$L__tmp8:
	.loc	1 71 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:71:20
	ld.shared.u32 	%r54, [global_smem];
	// begin inline asm
	div.full.f32 %r53, %r54, %r28;
	// end inline asm
	mov.b32 	%f90, %r53;
	.loc	1 72 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:72:20
	add.f32 	%f91, %f90, 0f3727C5AC;
	.loc	1 73 27                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:73:27
	sqrt.approx.ftz.f32 	%f92, %f91;
	.loc	1 37 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:37:36
	mov.b32 	%f93, %r19;
	mov.b32 	%f94, %r18;
	.loc	1 36 36                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:36:36
	mov.b32 	%f95, %r17;
	mov.b32 	%f96, %r16;
	.loc	1 75 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:75:20
	mul.f32 	%f97, %f51, 0f3C000000;
	.loc	1 76 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:76:20
	mov.b32 	%r57, %f72;
	mov.b32 	%r58, %f92;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f98, %r56;
	mov.b32 	%r60, %f73;
	// begin inline asm
	div.full.f32 %r59, %r60, %r58;
	// end inline asm
	mov.b32 	%f99, %r59;
	.loc	1 78 20                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:78:20
	fma.rn.f32 	%f100, %f98, %f96, %f94;
	fma.rn.f32 	%f101, %f99, %f95, %f93;
	.loc	1 79 49                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:79:49
	mov.b32 	%r62, %f52;
	mov.b32 	%r63, %f53;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r62, %r63 };
	// end inline asm
	.loc	1 80 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:80:4
	bar.sync 	0;
	.loc	1 81 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:81:28
	mul.wide.s32 	%rd26, %r1, 4;
	add.s64 	%rd9, %rd14, %rd26;
	.loc	1 81 40                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:81:40
	and.b32  	%r124, %r69, 63;
	setp.eq.s32 	%p31, %r124, 0;
	and.pred  	%p25, %p31, %p1;
	// begin inline asm
	@%p25 st.global.b32 [ %rd9 + 0 ], { %r64 };
	// end inline asm
	.loc	1 82 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:82:4
	bar.sync 	0;
	.loc	1 83 28                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:83:28
	add.s64 	%rd10, %rd15, %rd26;
	.loc	1 83 40                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:83:40
	// begin inline asm
	@%p25 st.global.b32 [ %rd10 + 0 ], { %r58 };
	// end inline asm
	.loc	1 84 25                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:84:25
	add.s64 	%rd11, %rd22, %rd26;
	.loc	1 84 37                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:84:37
	mov.b32 	%r66, %f97;
	// begin inline asm
	@%p25 st.global.b32 [ %rd11 + 0 ], { %r66 };
	// end inline asm
	.loc	1 85 25                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:25
	add.s64 	%rd12, %rd23, %rd24;
	.loc	1 85 46                         // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:46
	mov.b32 	%r67, %f100;
	mov.b32 	%r68, %f101;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r67, %r68 };
	// end inline asm
	.loc	1 85 4                          // ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py:85:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tp/ctpqyqdnrosn4cmcw7wftfccpew43hoqzakki7s4hamabgds6mdv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 310                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x12f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 112
.b8 113
.b8 121
.b8 113
.b8 100
.b8 110
.b8 114
.b8 111
.b8 115
.b8 110
.b8 52
.b8 99
.b8 109
.b8 99
.b8 119
.b8 55
.b8 119
.b8 102
.b8 116
.b8 102
.b8 99
.b8 99
.b8 112
.b8 101
.b8 119
.b8 52
.b8 51
.b8 104
.b8 111
.b8 113
.b8 122
.b8 97
.b8 107
.b8 107
.b8 105
.b8 55
.b8 115
.b8 52
.b8 104
.b8 97
.b8 109
.b8 97
.b8 98
.b8 103
.b8 100
.b8 115
.b8 54
.b8 109
.b8 100
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x60 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc3:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x108:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x120:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
