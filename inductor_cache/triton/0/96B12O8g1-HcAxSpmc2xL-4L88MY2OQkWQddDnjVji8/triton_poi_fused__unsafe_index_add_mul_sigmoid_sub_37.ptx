//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37 // -- Begin function triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37
                                        // @triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37
.visible .entry triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_11,
	.param .u32 triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_12
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<37>;
	.reg .b32 	%r<87>;
	.reg .f32 	%f<116>;
	.reg .b64 	%rd<101>;
	.loc	1 19 0                          // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:19:0

// %bb.0:
	ld.param.u64 	%rd45, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_0];
	ld.param.u64 	%rd46, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_1];
$L__tmp0:
	.loc	1 21 28                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:21:33
	shl.b32 	%r66, %r1, 8;
	ld.param.u64 	%rd47, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_2];
	ld.param.u64 	%rd48, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_3];
	.loc	1 22 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:22:36
	mov.u32 	%r67, %tid.x;
	shl.b32 	%r68, %r67, 1;
	ld.param.u64 	%rd49, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_4];
	and.b32  	%r69, %r68, 254;
	ld.param.u64 	%rd50, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_5];
	.loc	1 22 23                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:22:23
	or.b32  	%r70, %r66, %r69;
	ld.param.u64 	%rd51, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_6];
	ld.param.u64 	%rd52, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_7];
	.loc	1 24 21                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:24:21
	shr.s32 	%r72, %r70, 31;
	shr.u32 	%r73, %r72, 29;
	add.s32 	%r74, %r70, %r73;
	shr.s32 	%r75, %r74, 3;
	ld.param.u64 	%rd53, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_8];
	.loc	1 24 26                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:24:26
	shr.u32 	%r76, %r75, 29;
	add.s32 	%r77, %r75, %r76;
	and.b32  	%r78, %r77, -8;
	sub.s32 	%r79, %r75, %r78;
	ld.param.u64 	%rd54, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_9];
	.loc	1 25 19                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:25:19
	and.b32  	%r80, %r74, -8;
	ld.param.u64 	%rd55, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_10];
	sub.s32 	%r81, %r70, %r80;
	ld.param.u64 	%rd56, [triton_poi_fused__unsafe_index_add_mul_sigmoid_sub_37_param_11];
	.loc	1 26 19                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:26:19
	bfe.s32 	%r82, %r1, 23, 1;
	shr.u32 	%r83, %r82, 26;
	add.s32 	%r84, %r70, %r83;
	shr.s32 	%r85, %r84, 6;
	.loc	1 28 30                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:28:30
	mul.wide.s32 	%rd57, %r79, 8;
	add.s64 	%rd2, %rd47, %rd57;
	mov.pred 	%p1, -1;
	.loc	1 28 35                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:28:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:29:30
	mul.wide.s32 	%rd58, %r81, 8;
	add.s64 	%rd7, %rd48, %rd58;
	.loc	1 29 35                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:29:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	mov.u64 %rd6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd5, %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:30:31
	add.s64 	%rd10, %rd50, %rd58;
	.loc	1 30 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:30:36
	// begin inline asm
	mov.u64 %rd8, 0x0;
	mov.u64 %rd9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd8, %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:31:31
	mul.wide.s32 	%rd59, %r81, 4;
	add.s64 	%rd11, %rd51, %rd59;
	.loc	1 31 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:31:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r2;
	mov.b32 	%f22, %r3;
	.loc	1 32 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:32:31
	add.s64 	%rd13, %rd52, %rd57;
	.loc	1 32 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:32:36
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:33:31
	mul.wide.s32 	%rd60, %r79, 4;
	add.s64 	%rd16, %rd53, %rd60;
	.loc	1 33 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:33:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r5;
	.loc	1 34 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:34:31
	mul.wide.s32 	%rd61, %r70, 4;
	add.s64 	%rd18, %rd56, %rd61;
	.loc	1 34 36                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:34:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r6;
	mov.b32 	%f26, %r7;
	.loc	1 38 32                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:38:32
	shr.u64 	%rd62, %rd1, 62;
	and.b64  	%rd63, %rd62, 2;
	add.s64 	%rd64, %rd63, %rd1;
	.loc	1 41 32                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:41:32
	shr.u64 	%rd65, %rd5, 62;
	and.b64  	%rd66, %rd65, 2;
	add.s64 	%rd67, %rd66, %rd5;
	shr.u64 	%rd68, %rd6, 62;
	and.b64  	%rd69, %rd68, 2;
	add.s64 	%rd70, %rd69, %rd6;
	.loc	1 42 39                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:39
	shl.b64 	%rd71, %rd64, 1;
	.loc	1 42 48                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:48
	shl.b32 	%r86, %r85, 2;
	.loc	1 42 46                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:46
	cvt.s64.s32 	%rd72, %r86;
	.loc	1 42 37                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:37
	add.s64 	%rd73, %rd71, %rd72;
	.loc	1 42 46                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:46
	add.s64 	%rd74, %rd73, %rd67;
	add.s64 	%rd75, %rd73, %rd70;
	.loc	1 42 30                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:30
	shl.b64 	%rd76, %rd74, 2;
	add.s64 	%rd19, %rd49, %rd76;
	shl.b64 	%rd77, %rd75, 2;
	add.s64 	%rd20, %rd49, %rd77;
	.loc	1 42 53                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:42:53
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 45 35                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:45:35
	shr.u64 	%rd78, %rd8, 62;
	and.b64  	%rd79, %rd78, 2;
	add.s64 	%rd80, %rd79, %rd8;
	shr.u64 	%rd81, %rd9, 62;
	and.b64  	%rd82, %rd81, 2;
	add.s64 	%rd83, %rd82, %rd9;
	.loc	1 46 48                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:46:48
	add.s64 	%rd84, %rd73, %rd80;
	add.s64 	%rd85, %rd73, %rd83;
	.loc	1 46 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:46:31
	shl.b64 	%rd86, %rd84, 2;
	add.s64 	%rd21, %rd49, %rd86;
	shl.b64 	%rd87, %rd85, 2;
	add.s64 	%rd22, %rd49, %rd87;
	.loc	1 46 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:46:55
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 52 35                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:52:35
	shr.u64 	%rd88, %rd12, 62;
	and.b64  	%rd89, %rd88, 2;
	add.s64 	%rd90, %rd89, %rd12;
	.loc	1 53 40                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:40
	shl.b64 	%rd91, %rd90, 1;
	.loc	1 53 38                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:38
	add.s64 	%rd92, %rd91, %rd72;
	.loc	1 53 48                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:48
	add.s64 	%rd93, %rd92, %rd67;
	add.s64 	%rd94, %rd92, %rd70;
	.loc	1 53 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:31
	shl.b64 	%rd95, %rd93, 2;
	add.s64 	%rd23, %rd49, %rd95;
	shl.b64 	%rd96, %rd94, 2;
	add.s64 	%rd24, %rd49, %rd96;
	.loc	1 53 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:55
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 54 49                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:54:49
	add.s64 	%rd97, %rd92, %rd80;
	add.s64 	%rd98, %rd92, %rd83;
	.loc	1 54 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:54:31
	shl.b64 	%rd99, %rd97, 2;
	add.s64 	%rd25, %rd49, %rd99;
	shl.b64 	%rd100, %rd98, 2;
	add.s64 	%rd26, %rd49, %rd100;
	.loc	1 54 56                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:54:56
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 53 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:55
	mov.b32 	%f27, %r8;
	mov.b32 	%f28, %r12;
	.loc	1 54 56                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:54:56
	mov.b32 	%f29, %r10;
	mov.b32 	%f30, %r14;
	.loc	1 55 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:55:20
	sub.f32 	%f31, %f30, %f28;
	sub.f32 	%f32, %f29, %f27;
	.loc	1 57 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:57:20
	fma.rn.f32 	%f33, %f32, %f21, %f27;
	fma.rn.f32 	%f34, %f31, %f21, %f28;
	.loc	1 53 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:53:55
	mov.b32 	%f35, %r9;
	mov.b32 	%f36, %r13;
	.loc	1 54 56                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:54:56
	mov.b32 	%f37, %r11;
	mov.b32 	%f38, %r15;
	.loc	1 55 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:55:20
	sub.f32 	%f39, %f38, %f36;
	sub.f32 	%f40, %f37, %f35;
	.loc	1 57 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:57:20
	fma.rn.f32 	%f41, %f40, %f22, %f35;
	fma.rn.f32 	%f42, %f39, %f22, %f36;
	.loc	1 58 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:58:20
	sub.f32 	%f43, %f34, %f33;
	sub.f32 	%f44, %f42, %f41;
	.loc	1 60 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:60:20
	fma.rn.f32 	%f45, %f43, %f23, %f33;
	fma.rn.f32 	%f46, %f44, %f24, %f41;
	mov.f32 	%f47, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f48, %f47, %f45;
	sub.f32 	%f49, %f47, %f46;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f50, %f1, 0f3F800000;
	add.f32 	%f51, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r18, %f50;
	mov.b32 	%r17, 1065353216;
	// begin inline asm
	div.full.f32 %r62, %r17, %r18;
	// end inline asm
	mov.b32 	%f52, %r62;
	mov.b32 	%r21, %f51;
	// begin inline asm
	div.full.f32 %r63, %r17, %r21;
	// end inline asm
	mov.b32 	%f53, %r63;
$L__tmp2:
	.loc	1 62 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:62:31
	add.s64 	%rd27, %rd54, %rd76;
	add.s64 	%rd28, %rd54, %rd77;
	.loc	1 62 54                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:62:54
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r23;
	.loc	1 63 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:63:31
	add.s64 	%rd29, %rd55, %rd76;
	add.s64 	%rd30, %rd55, %rd77;
	.loc	1 63 54                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:63:54
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f56, %r24;
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r25;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f58, %f47, %f56;
	sub.f32 	%f59, %f47, %f57;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f59, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f60, %f5, 0f3F800000;
	add.f32 	%f61, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r28, %f60;
	// begin inline asm
	div.full.f32 %r26, %r17, %r28;
	// end inline asm
	mov.b32 	%f62, %r26;
	mov.b32 	%r31, %f61;
	// begin inline asm
	div.full.f32 %r29, %r17, %r31;
	// end inline asm
	mov.b32 	%f63, %r29;
$L__tmp4:
	.loc	1 65 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:65:20
	mul.f32 	%f64, %f62, %f54;
	mul.f32 	%f65, %f63, %f55;
	.loc	1 66 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:66:31
	add.s64 	%rd31, %rd54, %rd86;
	add.s64 	%rd32, %rd54, %rd87;
	.loc	1 66 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:66:55
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r32;
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f67, %r33;
	.loc	1 67 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:67:31
	add.s64 	%rd33, %rd55, %rd86;
	add.s64 	%rd34, %rd55, %rd87;
	.loc	1 67 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:67:55
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r34 }, [ %rd33 + 0 ];
	// end inline asm
	mov.b32 	%f68, %r34;
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd34 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r35;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f70, %f47, %f68;
	sub.f32 	%f71, %f47, %f69;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f10, %f70, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f71, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f72, %f9, 0f3F800000;
	add.f32 	%f73, %f11, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r38, %f72;
	// begin inline asm
	div.full.f32 %r36, %r17, %r38;
	// end inline asm
	mov.b32 	%f74, %r36;
	mov.b32 	%r41, %f73;
	// begin inline asm
	div.full.f32 %r39, %r17, %r41;
	// end inline asm
	mov.b32 	%f75, %r39;
$L__tmp6:
	.loc	1 70 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:70:20
	neg.f32 	%f76, %f64;
	fma.rn.f32 	%f77, %f74, %f66, %f76;
	neg.f32 	%f78, %f65;
	fma.rn.f32 	%f79, %f75, %f67, %f78;
	.loc	1 72 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:72:20
	fma.rn.f32 	%f80, %f77, %f21, %f64;
	fma.rn.f32 	%f81, %f79, %f22, %f65;
	.loc	1 73 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:73:31
	add.s64 	%rd35, %rd54, %rd95;
	add.s64 	%rd36, %rd54, %rd96;
	.loc	1 73 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:73:55
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd35 + 0 ];
	// end inline asm
	mov.b32 	%f82, %r42;
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r43 }, [ %rd36 + 0 ];
	// end inline asm
	mov.b32 	%f83, %r43;
	.loc	1 74 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:74:31
	add.s64 	%rd37, %rd55, %rd95;
	add.s64 	%rd38, %rd55, %rd96;
	.loc	1 74 55                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:74:55
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r44 }, [ %rd37 + 0 ];
	// end inline asm
	mov.b32 	%f84, %r44;
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r45 }, [ %rd38 + 0 ];
	// end inline asm
	mov.b32 	%f85, %r45;
$L__tmp7:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f86, %f47, %f84;
	sub.f32 	%f87, %f47, %f85;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f14, %f86, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f87, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f88, %f13, 0f3F800000;
	add.f32 	%f89, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r48, %f88;
	// begin inline asm
	div.full.f32 %r46, %r17, %r48;
	// end inline asm
	mov.b32 	%f90, %r46;
	mov.b32 	%r51, %f89;
	// begin inline asm
	div.full.f32 %r49, %r17, %r51;
	// end inline asm
	mov.b32 	%f91, %r49;
$L__tmp8:
	.loc	1 76 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:76:20
	mul.f32 	%f92, %f90, %f82;
	mul.f32 	%f93, %f91, %f83;
	.loc	1 77 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:77:31
	add.s64 	%rd39, %rd54, %rd99;
	add.s64 	%rd40, %rd54, %rd100;
	.loc	1 77 56                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:77:56
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r52 }, [ %rd39 + 0 ];
	// end inline asm
	mov.b32 	%f94, %r52;
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r53 }, [ %rd40 + 0 ];
	// end inline asm
	mov.b32 	%f95, %r53;
	.loc	1 78 31                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:78:31
	add.s64 	%rd41, %rd55, %rd99;
	add.s64 	%rd42, %rd55, %rd100;
	.loc	1 78 56                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:78:56
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r54 }, [ %rd41 + 0 ];
	// end inline asm
	mov.b32 	%f96, %r54;
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r55 }, [ %rd42 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r55;
$L__tmp9:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f98, %f47, %f96;
	sub.f32 	%f99, %f47, %f97;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f18, %f98, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	mul.f32 	%f20, %f99, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f19, %f20;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f100, %f17, 0f3F800000;
	add.f32 	%f101, %f19, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r58, %f100;
	// begin inline asm
	div.full.f32 %r56, %r17, %r58;
	// end inline asm
	mov.b32 	%f102, %r56;
	mov.b32 	%r61, %f101;
	// begin inline asm
	div.full.f32 %r59, %r17, %r61;
	// end inline asm
	mov.b32 	%f103, %r59;
$L__tmp10:
	.loc	1 81 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:81:20
	neg.f32 	%f104, %f92;
	fma.rn.f32 	%f105, %f102, %f94, %f104;
	neg.f32 	%f106, %f93;
	fma.rn.f32 	%f107, %f103, %f95, %f106;
	.loc	1 83 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:83:20
	fma.rn.f32 	%f108, %f105, %f21, %f92;
	fma.rn.f32 	%f109, %f107, %f22, %f93;
	.loc	1 84 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:84:20
	sub.f32 	%f110, %f108, %f80;
	sub.f32 	%f111, %f109, %f81;
	.loc	1 87 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:87:20
	fma.rn.f32 	%f112, %f110, %f23, %f80;
	fma.rn.f32 	%f113, %f111, %f24, %f81;
	.loc	1 88 20                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:88:20
	fma.rn.f32 	%f114, %f52, %f25, %f112;
	fma.rn.f32 	%f115, %f53, %f26, %f113;
	.loc	1 89 28                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:89:28
	add.s64 	%rd43, %rd45, %rd61;
	.loc	1 89 40                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:89:40
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd43 + 0 ], { %r62, %r63 };
	// end inline asm
	.loc	1 90 28                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:90:28
	add.s64 	%rd44, %rd46, %rd61;
	.loc	1 90 40                         // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:90:40
	mov.b32 	%r64, %f114;
	mov.b32 	%r65, %f115;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd44 + 0 ], { %r64, %r65 };
	// end inline asm
	.loc	1 90 4                          // cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py:90:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/un/cunhu6ijavkeibxib6vvcfsz5kr35oetdmqhrbecmwfz7xmcmu4g.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 294                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 110
.b8 104
.b8 117
.b8 54
.b8 105
.b8 106
.b8 97
.b8 118
.b8 107
.b8 101
.b8 105
.b8 98
.b8 120
.b8 105
.b8 98
.b8 54
.b8 118
.b8 118
.b8 99
.b8 102
.b8 115
.b8 122
.b8 53
.b8 107
.b8 114
.b8 51
.b8 53
.b8 111
.b8 101
.b8 116
.b8 100
.b8 109
.b8 113
.b8 104
.b8 114
.b8 98
.b8 101
.b8 99
.b8 109
.b8 119
.b8 102
.b8 122
.b8 55
.b8 120
.b8 109
.b8 99
.b8 109
.b8 117
.b8 52
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 51
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 75                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 79                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
