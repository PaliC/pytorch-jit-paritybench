; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__native_batch_norm_legit_convolution_elu_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %10 = and i32 %9, 31, !dbg !11
  %11 = lshr i32 %9, 5, !dbg !11
  %12 = shl i32 %9, 2, !dbg !11
  %13 = and i32 %12, 252, !dbg !11
  %14 = srem i32 %8, 256, !dbg !12
  %15 = shl i32 %8, 8, !dbg !13
  %16 = or disjoint i32 %15, %13, !dbg !14
  %17 = sext i32 %16 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #5, !dbg !16
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !16
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !16
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !16
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !16
  %24 = bitcast i32 %20 to float, !dbg !16
  %25 = bitcast i32 %21 to float, !dbg !16
  %26 = bitcast i32 %22 to float, !dbg !16
  %27 = bitcast i32 %23 to float, !dbg !16
  %28 = sext i32 %14 to i64, !dbg !17
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !17
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #5, !dbg !18
  %34 = bitcast i32 %33 to float, !dbg !18
  %35 = fadd float %24, %34, !dbg !19
  %36 = fadd float %25, %34, !dbg !19
  %37 = fadd float %26, %34, !dbg !19
  %38 = fadd float %27, %34, !dbg !19
  %39 = fadd float %35, %36, !dbg !20
  %40 = fadd float %37, %39, !dbg !20
  %41 = fadd float %38, %40, !dbg !20
  %42 = bitcast float %41 to i32, !dbg !25
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 16, i32 31), !dbg !25
  %44 = bitcast i32 %43 to float, !dbg !25
  %45 = fadd float %41, %44, !dbg !20
  %46 = bitcast float %45 to i32, !dbg !25
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 8, i32 31), !dbg !25
  %48 = bitcast i32 %47 to float, !dbg !25
  %49 = fadd float %45, %48, !dbg !20
  %50 = bitcast float %49 to i32, !dbg !25
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 4, i32 31), !dbg !25
  %52 = bitcast i32 %51 to float, !dbg !25
  %53 = fadd float %49, %52, !dbg !20
  %54 = bitcast float %53 to i32, !dbg !25
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 2, i32 31), !dbg !25
  %56 = bitcast i32 %55 to float, !dbg !25
  %57 = fadd float %53, %56, !dbg !20
  %58 = bitcast float %57 to i32, !dbg !25
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 1, i32 31), !dbg !25
  %60 = bitcast i32 %59 to float, !dbg !25
  %61 = fadd float %57, %60, !dbg !20
  %62 = icmp eq i32 %10, 0, !dbg !25
  %63 = and i32 %11, 1, !dbg !25
  %64 = zext nneg i32 %63 to i64, !dbg !25
  %65 = getelementptr float, ptr addrspace(3) @global_smem, i64 %64, !dbg !25
  %66 = bitcast float %61 to <1 x i32>, !dbg !25
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %66, i1 %62) #5, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %67 = icmp slt i32 %9, 2, !dbg !25
  %68 = sext i32 %9 to i64, !dbg !25
  %69 = getelementptr float, ptr addrspace(3) @global_smem, i64 %68, !dbg !25
  %70 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %69, i1 %67) #5, !dbg !25
  %71 = bitcast i32 %70 to float, !dbg !25
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 1, i32 31), !dbg !25
  %73 = bitcast i32 %72 to float, !dbg !25
  %74 = fadd float %71, %73, !dbg !20
  %75 = and i32 %9, 1, !dbg !25
  %76 = icmp eq i32 %75, 0, !dbg !25
  %77 = and i1 %67, %76, !dbg !25
  %78 = bitcast float %74 to <1 x i32>, !dbg !25
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %78, i1 %77) #5, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %79 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !25
  %80 = fadd float %79, 0.000000e+00, !dbg !26
  %81 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %80, float 2.560000e+02) #5, !dbg !30
  %82 = fsub float %35, %81, !dbg !31
  %83 = fsub float %36, %81, !dbg !31
  %84 = fsub float %37, %81, !dbg !31
  %85 = fsub float %38, %81, !dbg !31
  %86 = fmul float %82, %82, !dbg !32
  %87 = fmul float %83, %83, !dbg !32
  %88 = fmul float %84, %84, !dbg !32
  %89 = fmul float %85, %85, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %90 = fadd float %86, %87, !dbg !35
  %91 = fadd float %88, %90, !dbg !35
  %92 = fadd float %89, %91, !dbg !35
  %93 = bitcast float %92 to i32, !dbg !33
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 16, i32 31), !dbg !33
  %95 = bitcast i32 %94 to float, !dbg !33
  %96 = fadd float %92, %95, !dbg !35
  %97 = bitcast float %96 to i32, !dbg !33
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 8, i32 31), !dbg !33
  %99 = bitcast i32 %98 to float, !dbg !33
  %100 = fadd float %96, %99, !dbg !35
  %101 = bitcast float %100 to i32, !dbg !33
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 4, i32 31), !dbg !33
  %103 = bitcast i32 %102 to float, !dbg !33
  %104 = fadd float %100, %103, !dbg !35
  %105 = bitcast float %104 to i32, !dbg !33
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 2, i32 31), !dbg !33
  %107 = bitcast i32 %106 to float, !dbg !33
  %108 = fadd float %104, %107, !dbg !35
  %109 = bitcast float %108 to i32, !dbg !33
  %110 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %109, i32 1, i32 31), !dbg !33
  %111 = bitcast i32 %110 to float, !dbg !33
  %112 = fadd float %108, %111, !dbg !35
  %113 = bitcast float %112 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %113, i1 %62) #5, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %114 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %69, i1 %67) #5, !dbg !33
  %115 = bitcast i32 %114 to float, !dbg !33
  %116 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 1, i32 31), !dbg !33
  %117 = bitcast i32 %116 to float, !dbg !33
  %118 = fadd float %115, %117, !dbg !35
  %119 = bitcast float %118 to <1 x i32>, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %69, <1 x i32> %119, i1 %77) #5, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %120 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !33
  %121 = fadd float %120, 0.000000e+00, !dbg !36
  %122 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %121, float 2.560000e+02) #5, !dbg !38
  %123 = fadd float %122, 0x3EE4F8B580000000, !dbg !39
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i = icmp eq i32 %124, 0, !dbg !40
  br i1 %.not.i, label %127, label %125, !dbg !40

125:                                              ; preds = %7
  %126 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %123), !dbg !40
  br label %__nv_rsqrtf.exit, !dbg !40

127:                                              ; preds = %7
  %128 = tail call float @llvm.nvvm.rsqrt.approx.f(float %123), !dbg !40
  br label %__nv_rsqrtf.exit, !dbg !40

__nv_rsqrtf.exit:                                 ; preds = %125, %127
  %.0.i = phi float [ %126, %125 ], [ %128, %127 ], !dbg !40
  %129 = fmul float %82, %.0.i, !dbg !41
  %130 = fmul float %83, %.0.i, !dbg !41
  %131 = fmul float %84, %.0.i, !dbg !41
  %132 = fmul float %85, %.0.i, !dbg !41
  %133 = fmul float %129, 0x3FF7154760000000, !dbg !42
  %134 = tail call float @llvm.nvvm.round.f(float %133) #5, !dbg !42
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i1 = icmp eq i32 %135, 0, !dbg !42
  %136 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #5, !dbg !42
  %137 = tail call float @llvm.nvvm.fabs.f(float %129) #5, !dbg !42
  %.03.i = select i1 %.not.i1, float %137, float %136, !dbg !42
  %138 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i = select i1 %138, float 0.000000e+00, float %134, !dbg !42
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %141 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !42
  %j.0.i = select i1 %141, float 1.270000e+02, float %t.0.i, !dbg !42
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i = icmp eq i32 %147, 0, !dbg !42
  br i1 %.not8.i, label %150, label %148, !dbg !42

148:                                              ; preds = %__nv_rsqrtf.exit
  %149 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #5, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

150:                                              ; preds = %__nv_rsqrtf.exit
  %151 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #5, !dbg !42
  br label %__nv_expm1f.exit, !dbg !42

__nv_expm1f.exit:                                 ; preds = %148, %150
  %.0.i2 = phi float [ %149, %148 ], [ %151, %150 ], !dbg !42
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %153 = fmul float %130, 0x3FF7154760000000, !dbg !42
  %154 = tail call float @llvm.nvvm.round.f(float %153) #5, !dbg !42
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i3 = icmp eq i32 %155, 0, !dbg !42
  %156 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #5, !dbg !42
  %157 = tail call float @llvm.nvvm.fabs.f(float %130) #5, !dbg !42
  %.03.i4 = select i1 %.not.i3, float %157, float %156, !dbg !42
  %158 = fcmp olt float %.03.i4, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i5 = select i1 %158, float 0.000000e+00, float %154, !dbg !42
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %161 = fcmp oeq float %t.0.i5, 1.280000e+02, !dbg !42
  %j.0.i6 = select i1 %161, float 1.270000e+02, float %t.0.i5, !dbg !42
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i7 = icmp eq i32 %167, 0, !dbg !42
  br i1 %.not8.i7, label %170, label %168, !dbg !42

168:                                              ; preds = %__nv_expm1f.exit
  %169 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i6) #5, !dbg !42
  br label %__nv_expm1f.exit29, !dbg !42

170:                                              ; preds = %__nv_expm1f.exit
  %171 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i6) #5, !dbg !42
  br label %__nv_expm1f.exit29, !dbg !42

__nv_expm1f.exit29:                               ; preds = %168, %170
  %.0.i8 = phi float [ %169, %168 ], [ %171, %170 ], !dbg !42
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %173 = fmul float %131, 0x3FF7154760000000, !dbg !42
  %174 = tail call float @llvm.nvvm.round.f(float %173) #5, !dbg !42
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i30 = icmp eq i32 %175, 0, !dbg !42
  %176 = tail call float @llvm.nvvm.fabs.ftz.f(float %131) #5, !dbg !42
  %177 = tail call float @llvm.nvvm.fabs.f(float %131) #5, !dbg !42
  %.03.i31 = select i1 %.not.i30, float %177, float %176, !dbg !42
  %178 = fcmp olt float %.03.i31, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i32 = select i1 %178, float 0.000000e+00, float %174, !dbg !42
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %181 = fcmp oeq float %t.0.i32, 1.280000e+02, !dbg !42
  %j.0.i33 = select i1 %181, float 1.270000e+02, float %t.0.i32, !dbg !42
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i34 = icmp eq i32 %187, 0, !dbg !42
  br i1 %.not8.i34, label %190, label %188, !dbg !42

188:                                              ; preds = %__nv_expm1f.exit29
  %189 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i33) #5, !dbg !42
  br label %__nv_expm1f.exit56, !dbg !42

190:                                              ; preds = %__nv_expm1f.exit29
  %191 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i33) #5, !dbg !42
  br label %__nv_expm1f.exit56, !dbg !42

__nv_expm1f.exit56:                               ; preds = %188, %190
  %.0.i35 = phi float [ %189, %188 ], [ %191, %190 ], !dbg !42
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %193 = fmul float %132, 0x3FF7154760000000, !dbg !42
  %194 = tail call float @llvm.nvvm.round.f(float %193) #5, !dbg !42
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i57 = icmp eq i32 %195, 0, !dbg !42
  %196 = tail call float @llvm.nvvm.fabs.ftz.f(float %132) #5, !dbg !42
  %197 = tail call float @llvm.nvvm.fabs.f(float %132) #5, !dbg !42
  %.03.i58 = select i1 %.not.i57, float %197, float %196, !dbg !42
  %198 = fcmp olt float %.03.i58, 0x3FDA3D70A0000000, !dbg !42
  %t.0.i59 = select i1 %198, float 0.000000e+00, float %194, !dbg !42
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %201 = fcmp oeq float %t.0.i59, 1.280000e+02, !dbg !42
  %j.0.i60 = select i1 %201, float 1.270000e+02, float %t.0.i59, !dbg !42
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not8.i61 = icmp eq i32 %207, 0, !dbg !42
  br i1 %.not8.i61, label %210, label %208, !dbg !42

208:                                              ; preds = %__nv_expm1f.exit56
  %209 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i60) #5, !dbg !42
  br label %__nv_expm1f.exit83, !dbg !42

210:                                              ; preds = %__nv_expm1f.exit56
  %211 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i60) #5, !dbg !42
  br label %__nv_expm1f.exit83, !dbg !42

__nv_expm1f.exit83:                               ; preds = %208, %210
  %.0.i62 = phi float [ %209, %208 ], [ %211, %210 ], !dbg !42
  %212 = fcmp oeq float %131, 0.000000e+00, !dbg !42
  %213 = fadd float %131, %131, !dbg !42
  %214 = fcmp olt float %j.0.i33, -2.500000e+01, !dbg !42
  %215 = fcmp ogt float %j.0.i33, 1.280000e+02, !dbg !42
  %.not9.i50 = icmp eq i32 %192, 0, !dbg !42
  %.not7.i36 = icmp eq i32 %186, 0, !dbg !42
  %.not6.i37 = icmp eq i32 %185, 0, !dbg !42
  %.not5.i38 = icmp eq i32 %184, 0, !dbg !42
  %.not4.i39 = icmp eq i32 %183, 0, !dbg !42
  %.not3.i40 = icmp eq i32 %182, 0, !dbg !42
  %.not2.i41 = icmp eq i32 %180, 0, !dbg !42
  %216 = fneg float %t.0.i32, !dbg !42
  %.not1.i42 = icmp eq i32 %179, 0, !dbg !42
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %216, float 0x3FE62E4000000000, float %131) #5, !dbg !42
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float 0x3FE62E4000000000, float %131) #5, !dbg !42
  %.04.i43 = select i1 %.not1.i42, float %217, float %218, !dbg !42
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %216, float 0x3EB7F7D1C0000000, float %.04.i43) #5, !dbg !42
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float 0x3EB7F7D1C0000000, float %.04.i43) #5, !dbg !42
  %.05.i44 = select i1 %.not2.i41, float %219, float %220, !dbg !42
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i44, float 0x3F812ACC60000000) #5, !dbg !42
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i44, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i45 = select i1 %.not3.i40, float %221, float %222, !dbg !42
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i45, float %.05.i44, float 0x3FA5557C60000000) #5, !dbg !42
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i45, float %.05.i44, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i46 = select i1 %.not4.i39, float %223, float %224, !dbg !42
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i46, float %.05.i44, float 0x3FC5553EC0000000) #5, !dbg !42
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i46, float %.05.i44, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i47 = select i1 %.not5.i38, float %225, float %226, !dbg !42
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i47, float %.05.i44, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i47, float %.05.i44, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i48 = select i1 %.not6.i37, float %227, float %228, !dbg !42
  %229 = fmul float %.05.i44, %.06.i48, !dbg !42
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %229, float %.05.i44, float %.05.i44) #5, !dbg !42
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %229, float %.05.i44, float %.05.i44) #5, !dbg !42
  %.01.i49 = select i1 %.not7.i36, float %230, float %231, !dbg !42
  %232 = fadd float %.0.i35, -1.000000e+00, !dbg !42
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i49, float %.0.i35, float %232) #5, !dbg !42
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i49, float %.0.i35, float %232) #5, !dbg !42
  %.02.i51 = select i1 %.not9.i50, float %233, float %234, !dbg !42
  %235 = fadd float %.02.i51, %.02.i51, !dbg !42
  %u.0.i52 = select i1 %181, float %235, float %.02.i51, !dbg !42
  %u.1.i53 = select i1 %215, float 0x7FF0000000000000, float %u.0.i52, !dbg !42
  %u.2.i54 = select i1 %214, float -1.000000e+00, float %u.1.i53, !dbg !42
  %u.3.i55 = select i1 %212, float %213, float %u.2.i54, !dbg !42
  %236 = fcmp oeq float %130, 0.000000e+00, !dbg !42
  %237 = fadd float %130, %130, !dbg !42
  %238 = fcmp olt float %j.0.i6, -2.500000e+01, !dbg !42
  %239 = fcmp ogt float %j.0.i6, 1.280000e+02, !dbg !42
  %.not9.i23 = icmp eq i32 %172, 0, !dbg !42
  %.not7.i9 = icmp eq i32 %166, 0, !dbg !42
  %.not6.i10 = icmp eq i32 %165, 0, !dbg !42
  %.not5.i11 = icmp eq i32 %164, 0, !dbg !42
  %.not4.i12 = icmp eq i32 %163, 0, !dbg !42
  %.not3.i13 = icmp eq i32 %162, 0, !dbg !42
  %.not2.i14 = icmp eq i32 %160, 0, !dbg !42
  %240 = fneg float %t.0.i5, !dbg !42
  %.not1.i15 = icmp eq i32 %159, 0, !dbg !42
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %240, float 0x3FE62E4000000000, float %130) #5, !dbg !42
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %240, float 0x3FE62E4000000000, float %130) #5, !dbg !42
  %.04.i16 = select i1 %.not1.i15, float %241, float %242, !dbg !42
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %240, float 0x3EB7F7D1C0000000, float %.04.i16) #5, !dbg !42
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %240, float 0x3EB7F7D1C0000000, float %.04.i16) #5, !dbg !42
  %.05.i17 = select i1 %.not2.i14, float %243, float %244, !dbg !42
  %245 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i17, float 0x3F812ACC60000000) #5, !dbg !42
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i17, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i18 = select i1 %.not3.i13, float %245, float %246, !dbg !42
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i18, float %.05.i17, float 0x3FA5557C60000000) #5, !dbg !42
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i18, float %.05.i17, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i19 = select i1 %.not4.i12, float %247, float %248, !dbg !42
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i19, float %.05.i17, float 0x3FC5553EC0000000) #5, !dbg !42
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i19, float %.05.i17, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i20 = select i1 %.not5.i11, float %249, float %250, !dbg !42
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i20, float %.05.i17, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i20, float %.05.i17, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i21 = select i1 %.not6.i10, float %251, float %252, !dbg !42
  %253 = fmul float %.05.i17, %.06.i21, !dbg !42
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %253, float %.05.i17, float %.05.i17) #5, !dbg !42
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %253, float %.05.i17, float %.05.i17) #5, !dbg !42
  %.01.i22 = select i1 %.not7.i9, float %254, float %255, !dbg !42
  %256 = fadd float %.0.i8, -1.000000e+00, !dbg !42
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i22, float %.0.i8, float %256) #5, !dbg !42
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i22, float %.0.i8, float %256) #5, !dbg !42
  %.02.i24 = select i1 %.not9.i23, float %257, float %258, !dbg !42
  %259 = fadd float %.02.i24, %.02.i24, !dbg !42
  %u.0.i25 = select i1 %161, float %259, float %.02.i24, !dbg !42
  %u.1.i26 = select i1 %239, float 0x7FF0000000000000, float %u.0.i25, !dbg !42
  %u.2.i27 = select i1 %238, float -1.000000e+00, float %u.1.i26, !dbg !42
  %u.3.i28 = select i1 %236, float %237, float %u.2.i27, !dbg !42
  %260 = fcmp oeq float %129, 0.000000e+00, !dbg !42
  %261 = fadd float %129, %129, !dbg !42
  %262 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !42
  %263 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !42
  %.not9.i = icmp eq i32 %152, 0, !dbg !42
  %.not7.i = icmp eq i32 %146, 0, !dbg !42
  %.not6.i = icmp eq i32 %145, 0, !dbg !42
  %.not5.i = icmp eq i32 %144, 0, !dbg !42
  %.not4.i = icmp eq i32 %143, 0, !dbg !42
  %.not3.i = icmp eq i32 %142, 0, !dbg !42
  %.not2.i = icmp eq i32 %140, 0, !dbg !42
  %264 = fneg float %t.0.i, !dbg !42
  %.not1.i = icmp eq i32 %139, 0, !dbg !42
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %264, float 0x3FE62E4000000000, float %129) #5, !dbg !42
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %264, float 0x3FE62E4000000000, float %129) #5, !dbg !42
  %.04.i = select i1 %.not1.i, float %265, float %266, !dbg !42
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %264, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !42
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %264, float 0x3EB7F7D1C0000000, float %.04.i) #5, !dbg !42
  %.05.i = select i1 %.not2.i, float %267, float %268, !dbg !42
  %269 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !42
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i = select i1 %.not3.i, float %269, float %270, !dbg !42
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !42
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i = select i1 %.not4.i, float %271, float %272, !dbg !42
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !42
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i = select i1 %.not5.i, float %273, float %274, !dbg !42
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i = select i1 %.not6.i, float %275, float %276, !dbg !42
  %277 = fmul float %.05.i, %.06.i, !dbg !42
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %277, float %.05.i, float %.05.i) #5, !dbg !42
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float %.05.i, float %.05.i) #5, !dbg !42
  %.01.i = select i1 %.not7.i, float %278, float %279, !dbg !42
  %280 = fadd float %.0.i2, -1.000000e+00, !dbg !42
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i2, float %280) #5, !dbg !42
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i2, float %280) #5, !dbg !42
  %.02.i = select i1 %.not9.i, float %281, float %282, !dbg !42
  %283 = fadd float %.02.i, %.02.i, !dbg !42
  %u.0.i = select i1 %141, float %283, float %.02.i, !dbg !42
  %u.1.i = select i1 %263, float 0x7FF0000000000000, float %u.0.i, !dbg !42
  %u.2.i = select i1 %262, float -1.000000e+00, float %u.1.i, !dbg !42
  %u.3.i = select i1 %260, float %261, float %u.2.i, !dbg !42
  %284 = fcmp ogt float %132, 0.000000e+00, !dbg !43
  %285 = fcmp ogt float %131, 0.000000e+00, !dbg !43
  %286 = fcmp ogt float %130, 0.000000e+00, !dbg !43
  %287 = fcmp ogt float %129, 0.000000e+00, !dbg !43
  %.not7.i63 = icmp eq i32 %206, 0, !dbg !42
  %.not6.i64 = icmp eq i32 %205, 0, !dbg !42
  %.not5.i65 = icmp eq i32 %204, 0, !dbg !42
  %.not4.i66 = icmp eq i32 %203, 0, !dbg !42
  %.not3.i67 = icmp eq i32 %202, 0, !dbg !42
  %.not2.i68 = icmp eq i32 %200, 0, !dbg !42
  %288 = fneg float %t.0.i59, !dbg !42
  %.not1.i69 = icmp eq i32 %199, 0, !dbg !42
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %288, float 0x3FE62E4000000000, float %132) #5, !dbg !42
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %288, float 0x3FE62E4000000000, float %132) #5, !dbg !42
  %.04.i70 = select i1 %.not1.i69, float %289, float %290, !dbg !42
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %288, float 0x3EB7F7D1C0000000, float %.04.i70) #5, !dbg !42
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %288, float 0x3EB7F7D1C0000000, float %.04.i70) #5, !dbg !42
  %.05.i71 = select i1 %.not2.i68, float %291, float %292, !dbg !42
  %293 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i71, float 0x3F812ACC60000000) #5, !dbg !42
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i71, float 0x3F812ACC60000000) #5, !dbg !42
  %.07.i72 = select i1 %.not3.i67, float %293, float %294, !dbg !42
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i72, float %.05.i71, float 0x3FA5557C60000000) #5, !dbg !42
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i72, float %.05.i71, float 0x3FA5557C60000000) #5, !dbg !42
  %.08.i73 = select i1 %.not4.i66, float %295, float %296, !dbg !42
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i73, float %.05.i71, float 0x3FC5553EC0000000) #5, !dbg !42
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i73, float %.05.i71, float 0x3FC5553EC0000000) #5, !dbg !42
  %.09.i74 = select i1 %.not5.i65, float %297, float %298, !dbg !42
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i74, float %.05.i71, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i74, float %.05.i71, float 0x3FDFFFFFC0000000) #5, !dbg !42
  %.06.i75 = select i1 %.not6.i64, float %299, float %300, !dbg !42
  %301 = fmul float %.05.i71, %.06.i75, !dbg !42
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %301, float %.05.i71, float %.05.i71) #5, !dbg !42
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %301, float %.05.i71, float %.05.i71) #5, !dbg !42
  %.01.i76 = select i1 %.not7.i63, float %302, float %303, !dbg !42
  %304 = fadd float %.0.i62, -1.000000e+00, !dbg !42
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not9.i77 = icmp eq i32 %305, 0, !dbg !42
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %.0.i62, float %304) #5, !dbg !42
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %.0.i62, float %304) #5, !dbg !42
  %.02.i78 = select i1 %.not9.i77, float %307, float %306, !dbg !42
  %308 = fadd float %.02.i78, %.02.i78, !dbg !42
  %u.0.i79 = select i1 %201, float %308, float %.02.i78, !dbg !42
  %309 = fcmp ogt float %j.0.i60, 1.280000e+02, !dbg !42
  %u.1.i80 = select i1 %309, float 0x7FF0000000000000, float %u.0.i79, !dbg !42
  %310 = fcmp olt float %j.0.i60, -2.500000e+01, !dbg !42
  %u.2.i81 = select i1 %310, float -1.000000e+00, float %u.1.i80, !dbg !42
  %311 = fcmp oeq float %132, 0.000000e+00, !dbg !42
  %312 = fadd float %132, %132, !dbg !42
  %u.3.i82 = select i1 %311, float %312, float %u.2.i81, !dbg !42
  %313 = select i1 %287, float %129, float %u.3.i, !dbg !44
  %314 = select i1 %286, float %130, float %u.3.i28, !dbg !44
  %315 = select i1 %285, float %131, float %u.3.i55, !dbg !44
  %316 = select i1 %284, float %132, float %u.3.i82, !dbg !44
  %317 = bitcast float %35 to i32, !dbg !45
  %318 = bitcast float %36 to i32, !dbg !45
  %319 = bitcast float %37 to i32, !dbg !45
  %320 = bitcast float %38 to i32, !dbg !45
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %317, i32 %318, i32 %319, i32 %320, ptr addrspace(1) %18, i1 true) #5, !dbg !45
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %321 = sext i32 %8 to i64, !dbg !47
  %322 = getelementptr float, ptr addrspace(1) %1, i64 %321, !dbg !47
  %urem = and i32 %9, 63, !dbg !48
  %323 = icmp eq i32 %urem, 0, !dbg !48
  %324 = bitcast float %.0.i to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %324, ptr addrspace(1) %322, i1 %323) #5, !dbg !48
  %325 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !49
  %326 = bitcast float %313 to i32, !dbg !50
  %327 = bitcast float %314 to i32, !dbg !50
  %328 = bitcast float %315 to i32, !dbg !50
  %329 = bitcast float %316 to i32, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %326, i32 %327, i32 %328, i32 %329, ptr addrspace(1) %325, i1 true) #5, !dbg !50
  %330 = getelementptr float, ptr addrspace(1) %3, i64 %321, !dbg !51
  %331 = bitcast float %81 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %331, ptr addrspace(1) %330, i1 %323) #5, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cewqldn7vnyxypnshhoitpm764y5h3sd7ajlroamkqbmh46ryjuc.py", directory: "inductor_cache/ew")
!4 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_5, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__native_batch_norm_legit_convolution_elu_5, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__native_batch_norm_legit_convolution_elu_5", linkageName: "triton_per_fused__native_batch_norm_legit_convolution_elu_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 28, scope: !7)
!11 = !DILocation(line: 27, column: 26, scope: !7)
!12 = !DILocation(line: 32, column: 19, scope: !7)
!13 = !DILocation(line: 33, column: 43, scope: !7)
!14 = !DILocation(line: 33, column: 39, scope: !7)
!15 = !DILocation(line: 33, column: 34, scope: !7)
!16 = !DILocation(line: 33, column: 48, scope: !7)
!17 = !DILocation(line: 34, column: 30, scope: !7)
!18 = !DILocation(line: 34, column: 35, scope: !7)
!19 = !DILocation(line: 35, column: 18, scope: !7)
!20 = !DILocation(line: 256, column: 15, scope: !21, inlinedAt: !24)
!21 = distinct !DILexicalBlockFile(scope: !23, file: !22, discriminator: 0)
!22 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!23 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!24 = !DILocation(line: 38, column: 57, scope: !7)
!25 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !24)
!26 = !DILocation(line: 73, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 38, column: 44, scope: !7)
!30 = !DILocation(line: 41, column: 19, scope: !7)
!31 = !DILocation(line: 42, column: 19, scope: !7)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !34)
!34 = !DILocation(line: 45, column: 59, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !21, inlinedAt: !34)
!36 = !DILocation(line: 73, column: 15, scope: !27, inlinedAt: !37)
!37 = !DILocation(line: 45, column: 45, scope: !7)
!38 = !DILocation(line: 47, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 50, column: 28, scope: !7)
!41 = !DILocation(line: 52, column: 20, scope: !7)
!42 = !DILocation(line: 57, column: 28, scope: !7)
!43 = !DILocation(line: 54, column: 20, scope: !7)
!44 = !DILocation(line: 59, column: 35, scope: !7)
!45 = !DILocation(line: 60, column: 48, scope: !7)
!46 = !DILocation(line: 61, column: 4, scope: !7)
!47 = !DILocation(line: 62, column: 28, scope: !7)
!48 = !DILocation(line: 62, column: 40, scope: !7)
!49 = !DILocation(line: 63, column: 25, scope: !7)
!50 = !DILocation(line: 63, column: 46, scope: !7)
!51 = !DILocation(line: 64, column: 25, scope: !7)
!52 = !DILocation(line: 64, column: 37, scope: !7)
!53 = !DILocation(line: 64, column: 4, scope: !7)
