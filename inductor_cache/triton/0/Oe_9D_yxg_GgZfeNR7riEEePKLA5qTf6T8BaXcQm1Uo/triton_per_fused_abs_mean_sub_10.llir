; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_abs_mean_sub_10(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 31, !dbg !10
  %6 = lshr i32 %4, 5, !dbg !10
  %7 = shl i32 %4, 1, !dbg !10
  %8 = and i32 %7, 126, !dbg !10
  %9 = zext nneg i32 %8 to i64, !dbg !11
  %10 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !11
  %11 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !12
  %12 = extractvalue { i32, i32 } %11, 0, !dbg !12
  %13 = extractvalue { i32, i32 } %11, 1, !dbg !12
  %14 = bitcast i32 %12 to float, !dbg !12
  %15 = bitcast i32 %13 to float, !dbg !12
  %16 = fadd float %14, %15, !dbg !13
  %17 = bitcast float %16 to i32, !dbg !18
  %18 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %17, i32 16, i32 31), !dbg !18
  %19 = bitcast i32 %18 to float, !dbg !18
  %20 = fadd float %16, %19, !dbg !13
  %21 = bitcast float %20 to i32, !dbg !18
  %22 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %21, i32 8, i32 31), !dbg !18
  %23 = bitcast i32 %22 to float, !dbg !18
  %24 = fadd float %20, %23, !dbg !13
  %25 = bitcast float %24 to i32, !dbg !18
  %26 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %25, i32 4, i32 31), !dbg !18
  %27 = bitcast i32 %26 to float, !dbg !18
  %28 = fadd float %24, %27, !dbg !13
  %29 = bitcast float %28 to i32, !dbg !18
  %30 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 2, i32 31), !dbg !18
  %31 = bitcast i32 %30 to float, !dbg !18
  %32 = fadd float %28, %31, !dbg !13
  %33 = bitcast float %32 to i32, !dbg !18
  %34 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %33, i32 1, i32 31), !dbg !18
  %35 = bitcast i32 %34 to float, !dbg !18
  %36 = fadd float %32, %35, !dbg !13
  %37 = icmp eq i32 %5, 0, !dbg !18
  %38 = and i32 %6, 1, !dbg !18
  %39 = zext nneg i32 %38 to i64, !dbg !18
  %40 = getelementptr float, ptr addrspace(3) @global_smem, i64 %39, !dbg !18
  %41 = bitcast float %36 to <1 x i32>, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %40, <1 x i32> %41, i1 %37) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %42 = icmp slt i32 %4, 2, !dbg !18
  %43 = sext i32 %4 to i64, !dbg !18
  %44 = getelementptr float, ptr addrspace(3) @global_smem, i64 %43, !dbg !18
  %45 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %44, i1 %42) #3, !dbg !18
  %46 = bitcast i32 %45 to float, !dbg !18
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 1, i32 31), !dbg !18
  %48 = bitcast i32 %47 to float, !dbg !18
  %49 = fadd float %46, %48, !dbg !13
  %50 = and i32 %4, 1, !dbg !18
  %51 = icmp eq i32 %50, 0, !dbg !18
  %52 = and i1 %42, %51, !dbg !18
  %53 = bitcast float %49 to <1 x i32>, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %44, <1 x i32> %53, i1 %52) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %54 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !18
  %urem = and i32 %4, 63, !dbg !19
  %55 = icmp eq i32 %urem, 0, !dbg !19
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %1, i1 %55) #3, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpp5fkbmxbirfjuayra57zhkgbizp72jrjzmntcprlhicdc5fman.py", directory: "inductor_cache/pp")
!4 = !{ptr @triton_per_fused_abs_mean_sub_10, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_mean_sub_10, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_mean_sub_10", linkageName: "triton_per_fused_abs_mean_sub_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 256, column: 15, scope: !14, inlinedAt: !17)
!14 = distinct !DILexicalBlockFile(scope: !16, file: !15, discriminator: 0)
!15 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!16 = distinct !DILexicalBlockFile(scope: !7, file: !15, discriminator: 0)
!17 = !DILocation(line: 32, column: 24, scope: !7)
!18 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !17)
!19 = !DILocation(line: 33, column: 67, scope: !7)
!20 = !DILocation(line: 33, column: 4, scope: !7)
