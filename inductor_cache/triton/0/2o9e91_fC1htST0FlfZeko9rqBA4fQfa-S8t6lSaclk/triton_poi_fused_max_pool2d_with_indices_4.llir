; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_4(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %11 = sdiv i32 %.frozen, 32, !dbg !14
  %12 = mul i32 %11, 32, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = srem i32 %10, 32, !dbg !15
  %14 = shl nsw i32 %.decomposed, 1, !dbg !16
  %15 = shl nsw i32 %13, 1, !dbg !16
  %16 = shl i32 %11, 7, !dbg !17
  %17 = add i32 %14, %16, !dbg !18
  %18 = add i32 %16, %15, !dbg !18
  %19 = sext i32 %17 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !19
  %21 = sext i32 %18 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !20
  %24 = bitcast i32 %23 to float, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = or disjoint i32 %17, 1, !dbg !21
  %28 = or disjoint i32 %18, 1, !dbg !21
  %29 = sext i32 %27 to i64, !dbg !22
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !22
  %31 = sext i32 %28 to i64, !dbg !22
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !22
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !23
  %34 = bitcast i32 %33 to float, !dbg !23
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !23
  %36 = bitcast i32 %35 to float, !dbg !23
  %37 = add i32 %17, 64, !dbg !24
  %38 = add i32 %18, 64, !dbg !24
  %39 = sext i32 %37 to i64, !dbg !25
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !25
  %41 = sext i32 %38 to i64, !dbg !25
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !25
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !26
  %44 = bitcast i32 %43 to float, !dbg !26
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !26
  %46 = bitcast i32 %45 to float, !dbg !26
  %47 = add i32 %17, 65, !dbg !27
  %48 = add i32 %18, 65, !dbg !27
  %49 = sext i32 %47 to i64, !dbg !28
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !28
  %51 = sext i32 %48 to i64, !dbg !28
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !28
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 true) #1, !dbg !29
  %54 = bitcast i32 %53 to float, !dbg !29
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !29
  %56 = bitcast i32 %55 to float, !dbg !29
  %57 = fcmp ogt float %34, %24, !dbg !30
  %58 = fcmp ogt float %36, %26, !dbg !30
  %59 = fcmp uno float %34, 0.000000e+00, !dbg !34
  %60 = fcmp uno float %36, 0.000000e+00, !dbg !34
  %61 = or i1 %57, %59, !dbg !35
  %62 = or i1 %58, %60, !dbg !35
  %63 = select i1 %61, float %34, float %24, !dbg !36
  %64 = select i1 %62, float %36, float %26, !dbg !36
  %65 = fcmp olt float %63, %44, !dbg !37
  %66 = fcmp olt float %64, %46, !dbg !37
  %67 = fcmp uno float %44, 0.000000e+00, !dbg !39
  %68 = fcmp uno float %46, 0.000000e+00, !dbg !39
  %69 = or i1 %67, %65, !dbg !40
  %70 = or i1 %68, %66, !dbg !40
  %71 = select i1 %69, float %44, float %63, !dbg !41
  %72 = select i1 %70, float %46, float %64, !dbg !41
  %73 = fcmp olt float %71, %54, !dbg !42
  %74 = fcmp olt float %72, %56, !dbg !42
  %75 = fcmp uno float %54, 0.000000e+00, !dbg !44
  %76 = fcmp uno float %56, 0.000000e+00, !dbg !44
  %77 = or i1 %75, %73, !dbg !45
  %78 = or i1 %76, %74, !dbg !45
  %79 = sext i32 %9 to i64, !dbg !46
  %80 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !46
  %81 = bitcast float %71 to i32, !dbg !47
  %82 = select i1 %77, i32 %53, i32 %81, !dbg !48
  %83 = bitcast float %72 to i32, !dbg !47
  %84 = select i1 %78, i32 %55, i32 %83, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %82, i32 %84, ptr addrspace(1) %80, i1 true) #1, !dbg !47
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c67yxmnc5xauwfzavsfpxvtntttsuxv6z6ic5yghjdcaduxbqt3l.py", directory: "inductor_cache/67")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_4", linkageName: "triton_poi_fused_max_pool2d_with_indices_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 32, scope: !7)
!17 = !DILocation(line: 27, column: 41, scope: !7)
!18 = !DILocation(line: 27, column: 37, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 46, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 50, scope: !7)
!24 = !DILocation(line: 29, column: 42, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 51, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 51, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 31, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !38)
!38 = !DILocation(line: 32, column: 40, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !38)
!42 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !43)
!43 = !DILocation(line: 33, column: 40, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !43)
!46 = !DILocation(line: 34, column: 25, scope: !7)
!47 = !DILocation(line: 34, column: 36, scope: !7)
!48 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !43)
!49 = !DILocation(line: 34, column: 4, scope: !7)
