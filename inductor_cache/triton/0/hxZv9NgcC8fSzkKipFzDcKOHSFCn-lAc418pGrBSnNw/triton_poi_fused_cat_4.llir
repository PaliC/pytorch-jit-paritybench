; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 128, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = srem i32 %11, 8, !dbg !16
  %13 = mul i32 %11, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %.frozen59 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen59, 32, !dbg !18
  %15 = icmp slt i32 %12, 4, !dbg !19
  %16 = mul i32 %14, 32, !dbg !20
  %srem.decomposed = sub i32 %.frozen59, %16, !dbg !20
  %17 = shl nsw i32 %14, 4, !dbg !21
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = and i1 %10, %15, !dbg !24
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %21, i32 0, i1 %21) #3, !dbg !25
  %23 = bitcast i32 %22 to float, !dbg !25
  %24 = fcmp ogt float %23, 2.000000e+01, !dbg !26
  %25 = fmul float %23, 0x3FF7154760000000, !dbg !27
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #3, !dbg !27
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i20 = icmp eq i32 %27, 0, !dbg !28
  %28 = tail call float @llvm.nvvm.add.rz.ftz.f(float %26, float 1.000000e+00) #3, !dbg !28
  %29 = tail call float @llvm.nvvm.add.rz.f(float %26, float 1.000000e+00) #3, !dbg !28
  %.01.i21 = select i1 %.not.i20, float %29, float %28, !dbg !28
  %30 = bitcast float %.01.i21 to i32, !dbg !28
  %31 = add i32 %30, -1061158912, !dbg !28
  %32 = and i32 %31, -8388608, !dbg !28
  %33 = bitcast float %26 to i32, !dbg !28
  %34 = sub i32 %33, %32, !dbg !28
  %35 = bitcast i32 %34 to float, !dbg !28
  %36 = sub i32 1082130432, %32, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not14.i = icmp eq i32 %38, 0, !dbg !28
  %39 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %37, float -1.000000e+00) #3, !dbg !28
  %40 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %37, float -1.000000e+00) #3, !dbg !28
  %.09.i = select i1 %.not14.i, float %40, float %39, !dbg !28
  %41 = fadd float %.09.i, %35, !dbg !28
  %42 = sitofp i32 %32 to float, !dbg !28
  %43 = fmul float %42, 0x3E80000000000000, !dbg !28
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not15.i = icmp eq i32 %44, 0, !dbg !28
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %41, float 0x3FBB000240000000) #3, !dbg !28
  %46 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %41, float 0x3FBB000240000000) #3, !dbg !28
  %.012.i = select i1 %.not15.i, float %46, float %45, !dbg !28
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not16.i = icmp eq i32 %47, 0, !dbg !28
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %41, float 0xBFC0EF1C00000000) #3, !dbg !28
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %41, float 0xBFC0EF1C00000000) #3, !dbg !28
  %.010.i = select i1 %.not16.i, float %49, float %48, !dbg !28
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not17.i = icmp eq i32 %50, 0, !dbg !28
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %41, float 0x3FC28C8EA0000000) #3, !dbg !28
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %41, float 0x3FC28C8EA0000000) #3, !dbg !28
  %.06.i22 = select i1 %.not17.i, float %52, float %51, !dbg !28
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not18.i = icmp eq i32 %53, 0, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i22, float %41, float 0xBFC54D1BA0000000) #3, !dbg !28
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i22, float %41, float 0xBFC54D1BA0000000) #3, !dbg !28
  %.02.i23 = select i1 %.not18.i, float %55, float %54, !dbg !28
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not19.i = icmp eq i32 %56, 0, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i23, float %41, float 0x3FC995F3C0000000) #3, !dbg !28
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i23, float %41, float 0x3FC995F3C0000000) #3, !dbg !28
  %.0.i24 = select i1 %.not19.i, float %58, float %57, !dbg !28
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not20.i = icmp eq i32 %59, 0, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i24, float %41, float 0xBFD0000840000000) #3, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i24, float %41, float 0xBFD0000840000000) #3, !dbg !28
  %.011.i = select i1 %.not20.i, float %61, float %60, !dbg !28
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not21.i = icmp eq i32 %62, 0, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %41, float 0x3FD5555CC0000000) #3, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %41, float 0x3FD5555CC0000000) #3, !dbg !28
  %.08.i = select i1 %.not21.i, float %64, float %63, !dbg !28
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not22.i = icmp eq i32 %65, 0, !dbg !28
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %41, float -5.000000e-01) #3, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %41, float -5.000000e-01) #3, !dbg !28
  %.07.i = select i1 %.not22.i, float %67, float %66, !dbg !28
  %68 = fmul float %41, %.07.i, !dbg !28
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not23.i = icmp eq i32 %69, 0, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float %41, float %41) #3, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float %41, float %41) #3, !dbg !28
  %.05.i25 = select i1 %.not23.i, float %71, float %70, !dbg !28
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not24.i = icmp eq i32 %72, 0, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %43, float 0x3FE62E4300000000, float %.05.i25) #3, !dbg !28
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %43, float 0x3FE62E4300000000, float %.05.i25) #3, !dbg !28
  %.04.i26 = select i1 %.not24.i, float %74, float %73, !dbg !28
  %75 = icmp ugt i32 %33, 2139095039, !dbg !28
  br i1 %75, label %76, label %__nv_log1pf.exit, !dbg !28

76:                                               ; preds = %4
  %77 = icmp sgt i32 %33, -1082130432, !dbg !28
  br i1 %77, label %__nv_fmaf_rn.exit.i, label %81, !dbg !28

__nv_fmaf_rn.exit.i:                              ; preds = %76
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not25.i = icmp eq i32 %78, 0, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %26, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %26, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i27 = select i1 %.not25.i, float %80, float %79, !dbg !28
  br label %81, !dbg !28

81:                                               ; preds = %__nv_fmaf_rn.exit.i, %76
  %r.0.i = phi float [ %.03.i27, %__nv_fmaf_rn.exit.i ], [ %.04.i26, %76 ], !dbg !28
  %82 = fcmp oeq float %26, 0.000000e+00, !dbg !28
  %r.1.i = select i1 %82, float -0.000000e+00, float %r.0.i, !dbg !28
  br label %__nv_log1pf.exit, !dbg !28

__nv_log1pf.exit:                                 ; preds = %4, %81
  %r.2.i = phi float [ %r.1.i, %81 ], [ %.04.i26, %4 ], !dbg !28
  %83 = select i1 %24, float %23, float %r.2.i, !dbg !29
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %84, 0, !dbg !30
  %85 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #3, !dbg !30
  %86 = tail call float @llvm.nvvm.fabs.f(float %83) #3, !dbg !30
  %.01.i = select i1 %.not.i, float %86, float %85, !dbg !30
  %87 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %87, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit
  %88 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %89 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %88) #3, !dbg !30
  %90 = fadd float %89, 1.000000e+00, !dbg !30
  %91 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %90) #4, !dbg !30, !srcloc !31
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %92, 0, !dbg !30
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %91, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %91, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i = select i1 %.not6.i, float %94, float %93, !dbg !30
  %95 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %95, float 1.000000e+00, float %.03.i, !dbg !30
  %96 = bitcast float %s.0.i to i32, !dbg !30
  %97 = bitcast float %83 to i32, !dbg !30
  %98 = and i32 %97, -2147483648, !dbg !30
  %99 = or i32 %98, %96, !dbg !30
  %100 = bitcast i32 %99 to float, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit
  %101 = fmul float %83, %83, !dbg !30
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %102, 0, !dbg !30
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #3, !dbg !30
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i = select i1 %.not1.i, float %104, float %103, !dbg !30
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %105, 0, !dbg !30
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %101, float 0x3FC10B2820000000) #3, !dbg !30
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %101, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i = select i1 %.not2.i, float %107, float %106, !dbg !30
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %108, 0, !dbg !30
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %101, float 0xBFD5553DA0000000) #3, !dbg !30
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %101, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i = select i1 %.not3.i, float %110, float %109, !dbg !30
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %111, 0, !dbg !30
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %101, float 0.000000e+00) #3, !dbg !30
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %101, float 0.000000e+00) #3, !dbg !30
  %.04.i = select i1 %.not4.i, float %113, float %112, !dbg !30
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %114, 0, !dbg !30
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %83, float %83) #3, !dbg !30
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %83, float %83) #3, !dbg !30
  %.02.i = select i1 %.not5.i, float %116, float %115, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %100, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !30
  %117 = icmp sgt i32 %12, 3, !dbg !32
  %118 = shl nsw i32 %12, 2, !dbg !33
  %119 = add nsw i32 %.decomposed, -16, !dbg !33
  %120 = add nsw i32 %119, %17, !dbg !34
  %121 = add nsw i32 %120, %118, !dbg !35
  %122 = sext i32 %121 to i64, !dbg !36
  %123 = getelementptr float, ptr addrspace(1) %1, i64 %122, !dbg !36
  %124 = and i1 %10, %117, !dbg !37
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %123, i1 %124, i32 0, i1 %124) #3, !dbg !38
  %126 = bitcast i32 %125 to float, !dbg !38
  %127 = fcmp ogt float %126, 2.000000e+01, !dbg !39
  %128 = fmul float %126, 0x3FF7154760000000, !dbg !40
  %129 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %128) #3, !dbg !40
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i28 = icmp eq i32 %130, 0, !dbg !41
  %131 = tail call float @llvm.nvvm.add.rz.ftz.f(float %129, float 1.000000e+00) #3, !dbg !41
  %132 = tail call float @llvm.nvvm.add.rz.f(float %129, float 1.000000e+00) #3, !dbg !41
  %.01.i29 = select i1 %.not.i28, float %132, float %131, !dbg !41
  %133 = bitcast float %.01.i29 to i32, !dbg !41
  %134 = add i32 %133, -1061158912, !dbg !41
  %135 = and i32 %134, -8388608, !dbg !41
  %136 = bitcast float %129 to i32, !dbg !41
  %137 = sub i32 %136, %135, !dbg !41
  %138 = bitcast i32 %137 to float, !dbg !41
  %139 = sub i32 1082130432, %135, !dbg !41
  %140 = bitcast i32 %139 to float, !dbg !41
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not14.i30 = icmp eq i32 %141, 0, !dbg !41
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %140, float -1.000000e+00) #3, !dbg !41
  %143 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %140, float -1.000000e+00) #3, !dbg !41
  %.09.i31 = select i1 %.not14.i30, float %143, float %142, !dbg !41
  %144 = fadd float %.09.i31, %138, !dbg !41
  %145 = sitofp i32 %135 to float, !dbg !41
  %146 = fmul float %145, 0x3E80000000000000, !dbg !41
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not15.i32 = icmp eq i32 %147, 0, !dbg !41
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %144, float 0x3FBB000240000000) #3, !dbg !41
  %149 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %144, float 0x3FBB000240000000) #3, !dbg !41
  %.012.i33 = select i1 %.not15.i32, float %149, float %148, !dbg !41
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not16.i34 = icmp eq i32 %150, 0, !dbg !41
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i33, float %144, float 0xBFC0EF1C00000000) #3, !dbg !41
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i33, float %144, float 0xBFC0EF1C00000000) #3, !dbg !41
  %.010.i35 = select i1 %.not16.i34, float %152, float %151, !dbg !41
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not17.i36 = icmp eq i32 %153, 0, !dbg !41
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i35, float %144, float 0x3FC28C8EA0000000) #3, !dbg !41
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i35, float %144, float 0x3FC28C8EA0000000) #3, !dbg !41
  %.06.i37 = select i1 %.not17.i36, float %155, float %154, !dbg !41
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not18.i38 = icmp eq i32 %156, 0, !dbg !41
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i37, float %144, float 0xBFC54D1BA0000000) #3, !dbg !41
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i37, float %144, float 0xBFC54D1BA0000000) #3, !dbg !41
  %.02.i39 = select i1 %.not18.i38, float %158, float %157, !dbg !41
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not19.i40 = icmp eq i32 %159, 0, !dbg !41
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i39, float %144, float 0x3FC995F3C0000000) #3, !dbg !41
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i39, float %144, float 0x3FC995F3C0000000) #3, !dbg !41
  %.0.i41 = select i1 %.not19.i40, float %161, float %160, !dbg !41
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not20.i42 = icmp eq i32 %162, 0, !dbg !41
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i41, float %144, float 0xBFD0000840000000) #3, !dbg !41
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i41, float %144, float 0xBFD0000840000000) #3, !dbg !41
  %.011.i43 = select i1 %.not20.i42, float %164, float %163, !dbg !41
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not21.i44 = icmp eq i32 %165, 0, !dbg !41
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i43, float %144, float 0x3FD5555CC0000000) #3, !dbg !41
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i43, float %144, float 0x3FD5555CC0000000) #3, !dbg !41
  %.08.i45 = select i1 %.not21.i44, float %167, float %166, !dbg !41
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not22.i46 = icmp eq i32 %168, 0, !dbg !41
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i45, float %144, float -5.000000e-01) #3, !dbg !41
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i45, float %144, float -5.000000e-01) #3, !dbg !41
  %.07.i47 = select i1 %.not22.i46, float %170, float %169, !dbg !41
  %171 = fmul float %144, %.07.i47, !dbg !41
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not23.i48 = icmp eq i32 %172, 0, !dbg !41
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float %144, float %144) #3, !dbg !41
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %171, float %144, float %144) #3, !dbg !41
  %.05.i49 = select i1 %.not23.i48, float %174, float %173, !dbg !41
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not24.i50 = icmp eq i32 %175, 0, !dbg !41
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %146, float 0x3FE62E4300000000, float %.05.i49) #3, !dbg !41
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %146, float 0x3FE62E4300000000, float %.05.i49) #3, !dbg !41
  %.04.i51 = select i1 %.not24.i50, float %177, float %176, !dbg !41
  %178 = icmp ugt i32 %136, 2139095039, !dbg !41
  br i1 %178, label %179, label %__nv_log1pf.exit58, !dbg !41

179:                                              ; preds = %__nv_tanhf.exit
  %180 = icmp sgt i32 %136, -1082130432, !dbg !41
  br i1 %180, label %__nv_fmaf_rn.exit.i55, label %184, !dbg !41

__nv_fmaf_rn.exit.i55:                            ; preds = %179
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not25.i56 = icmp eq i32 %181, 0, !dbg !41
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !41
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %129, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !41
  %.03.i57 = select i1 %.not25.i56, float %183, float %182, !dbg !41
  br label %184, !dbg !41

184:                                              ; preds = %__nv_fmaf_rn.exit.i55, %179
  %r.0.i53 = phi float [ %.03.i57, %__nv_fmaf_rn.exit.i55 ], [ %.04.i51, %179 ], !dbg !41
  %185 = fcmp oeq float %129, 0.000000e+00, !dbg !41
  %r.1.i54 = select i1 %185, float -0.000000e+00, float %r.0.i53, !dbg !41
  br label %__nv_log1pf.exit58, !dbg !41

__nv_log1pf.exit58:                               ; preds = %__nv_tanhf.exit, %184
  %r.2.i52 = phi float [ %r.1.i54, %184 ], [ %.04.i51, %__nv_tanhf.exit ], !dbg !41
  %186 = select i1 %127, float %126, float %r.2.i52, !dbg !42
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not.i1 = icmp eq i32 %187, 0, !dbg !43
  %188 = tail call float @llvm.nvvm.fabs.ftz.f(float %186) #3, !dbg !43
  %189 = tail call float @llvm.nvvm.fabs.f(float %186) #3, !dbg !43
  %.01.i2 = select i1 %.not.i1, float %189, float %188, !dbg !43
  %190 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !43
  br i1 %190, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !43

__internal_fmad.exit1.i3:                         ; preds = %__nv_log1pf.exit58
  %191 = fmul float %.01.i2, 0x4007154760000000, !dbg !43
  %192 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %191) #3, !dbg !43
  %193 = fadd float %192, 1.000000e+00, !dbg !43
  %194 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %193) #4, !dbg !43, !srcloc !31
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not6.i4 = icmp eq i32 %195, 0, !dbg !43
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %194, float -2.000000e+00, float 1.000000e+00) #3, !dbg !43
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %194, float -2.000000e+00, float 1.000000e+00) #3, !dbg !43
  %.03.i5 = select i1 %.not6.i4, float %197, float %196, !dbg !43
  %198 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !43
  %s.0.i6 = select i1 %198, float 1.000000e+00, float %.03.i5, !dbg !43
  %199 = bitcast float %s.0.i6 to i32, !dbg !43
  %200 = bitcast float %186 to i32, !dbg !43
  %201 = and i32 %200, -2147483648, !dbg !43
  %202 = or i32 %201, %199, !dbg !43
  %203 = bitcast i32 %202 to float, !dbg !43
  br label %__nv_tanhf.exit19, !dbg !43

__internal_fmad.exit3.i8:                         ; preds = %__nv_log1pf.exit58
  %204 = fmul float %186, %186, !dbg !43
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not1.i9 = icmp eq i32 %205, 0, !dbg !43
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %204, float 0xBFAAC795C0000000) #3, !dbg !43
  %207 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %204, float 0xBFAAC795C0000000) #3, !dbg !43
  %.06.i10 = select i1 %.not1.i9, float %207, float %206, !dbg !43
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not2.i11 = icmp eq i32 %208, 0, !dbg !43
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %204, float 0x3FC10B2820000000) #3, !dbg !43
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %204, float 0x3FC10B2820000000) #3, !dbg !43
  %.05.i12 = select i1 %.not2.i11, float %210, float %209, !dbg !43
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not3.i13 = icmp eq i32 %211, 0, !dbg !43
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %204, float 0xBFD5553DA0000000) #3, !dbg !43
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %204, float 0xBFD5553DA0000000) #3, !dbg !43
  %.0.i14 = select i1 %.not3.i13, float %213, float %212, !dbg !43
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not4.i15 = icmp eq i32 %214, 0, !dbg !43
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %204, float 0.000000e+00) #3, !dbg !43
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %204, float 0.000000e+00) #3, !dbg !43
  %.04.i16 = select i1 %.not4.i15, float %216, float %215, !dbg !43
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !43
  %.not5.i17 = icmp eq i32 %217, 0, !dbg !43
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %186, float %186) #3, !dbg !43
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %186, float %186) #3, !dbg !43
  %.02.i18 = select i1 %.not5.i17, float %219, float %218, !dbg !43
  br label %__nv_tanhf.exit19, !dbg !43

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %203, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !43
  %220 = fmul float %s.1.i, %23, !dbg !44
  %221 = fmul float %s.1.i7, %126, !dbg !45
  %222 = select i1 %15, float %220, float %221, !dbg !46
  %223 = sext i32 %9 to i64, !dbg !47
  %224 = getelementptr float, ptr addrspace(1) %2, i64 %223, !dbg !47
  %225 = bitcast float %222 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %225, ptr addrspace(1) %224, i1 %10) #3, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c74gly5qg7456yumx4y2ygbbmn452ycipzdgc76rgpd2aq7i6u3e.py", directory: "inductor_cache/74")
!4 = !{ptr @triton_poi_fused_cat_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_4", linkageName: "triton_poi_fused_cat_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 44, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 59, scope: !7)
!25 = !DILocation(line: 33, column: 52, scope: !7)
!26 = !DILocation(line: 35, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 23, scope: !7)
!28 = !DILocation(line: 37, column: 27, scope: !7)
!29 = !DILocation(line: 38, column: 33, scope: !7)
!30 = !DILocation(line: 39, column: 27, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 46, column: 39, scope: !7)
!34 = !DILocation(line: 46, column: 36, scope: !7)
!35 = !DILocation(line: 46, column: 52, scope: !7)
!36 = !DILocation(line: 46, column: 31, scope: !7)
!37 = !DILocation(line: 46, column: 68, scope: !7)
!38 = !DILocation(line: 46, column: 60, scope: !7)
!39 = !DILocation(line: 48, column: 20, scope: !7)
!40 = !DILocation(line: 49, column: 24, scope: !7)
!41 = !DILocation(line: 50, column: 28, scope: !7)
!42 = !DILocation(line: 51, column: 35, scope: !7)
!43 = !DILocation(line: 52, column: 27, scope: !7)
!44 = !DILocation(line: 40, column: 19, scope: !7)
!45 = !DILocation(line: 53, column: 20, scope: !7)
!46 = !DILocation(line: 0, scope: !7)
!47 = !DILocation(line: 57, column: 25, scope: !7)
!48 = !DILocation(line: 57, column: 37, scope: !7)
!49 = !DILocation(line: 57, column: 4, scope: !7)
