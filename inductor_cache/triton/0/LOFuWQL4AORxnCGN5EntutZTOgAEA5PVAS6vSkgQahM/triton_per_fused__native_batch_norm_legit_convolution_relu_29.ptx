//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_relu_29 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_relu_29
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_relu_29
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_relu_29(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<64>;
	.reg .f32 	%f<40>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_0];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_1];
$L__tmp0:
	.loc	1 23 28                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:25:21
	setp.lt.s32 	%p1, %r1, 2048;
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_2];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_3];
	.loc	1 26 34                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:26:34
	mov.u32 	%r27, %tid.x;
	and.b32  	%r28, %r27, 31;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_convolution_relu_29_param_4];
	and.b32  	%r29, %r27, 63;
	.loc	1 31 19                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:31:19
	shr.s32 	%r30, %r1, 31;
	shr.u32 	%r31, %r30, 23;
	add.s32 	%r32, %r1, %r31;
	and.b32  	%r33, %r32, -512;
	sub.s32 	%r34, %r1, %r33;
	.loc	1 32 42                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:32:42
	shl.b32 	%r35, %r1, 6;
	.loc	1 32 39                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:32:39
	or.b32  	%r36, %r35, %r29;
	.loc	1 32 34                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:32:34
	mul.wide.s32 	%rd12, %r36, 4;
	add.s64 	%rd1, %rd7, %rd12;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 33 30                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:33:30
	mul.wide.s32 	%rd13, %r34, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 33 35                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 18                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 38 33                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:38:33
	selp.f32 	%f4, %f3, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f4;
	shfl.sync.bfly.b32	%r38, %r37, 16, 31, -1;
	mov.b32 	%f5, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f6;
	shfl.sync.bfly.b32	%r40, %r39, 8, 31, -1;
	mov.b32 	%f7, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f8;
	shfl.sync.bfly.b32	%r42, %r41, 4, 31, -1;
	mov.b32 	%f9, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f10;
	shfl.sync.bfly.b32	%r44, %r43, 2, 31, -1;
	mov.b32 	%f11, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f12;
	shfl.sync.bfly.b32	%r46, %r45, 1, 31, -1;
	mov.b32 	%f13, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r28, 0;
	shr.u32 	%r47, %r27, 3;
	and.b32  	%r48, %r47, 4;
	mov.u32 	%r49, global_smem;
	add.s32 	%r5, %r49, %r48;
	mov.b32 	%r6, %f14;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r27, 2;
	shl.b32 	%r50, %r27, 2;
	add.s32 	%r8, %r49, %r50;
	// begin inline asm
	@%p5 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r7;
	shfl.sync.bfly.b32	%r51, %r7, 1, 31, -1;
	mov.b32 	%f16, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r52, %r27, 1;
	setp.eq.b32 	%p14, %r52, 1;
	not.pred 	%p15, %p14;
	and.pred  	%p6, %p5, %p15;
	mov.b32 	%r10, %f17;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 42 19                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:42:19
	ld.shared.u32 	%r12, [global_smem];
	mov.b32 	%r13, 1115684864;
	// begin inline asm
	div.full.f32 %r26, %r12, %r13;
	// end inline asm
	mov.b32 	%f18, %r26;
	.loc	1 43 19                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:43:19
	sub.f32 	%f19, %f3, %f18;
	.loc	1 44 20                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:44:20
	mul.f32 	%f20, %f19, %f19;
	.loc	1 46 35                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:46:35
	selp.f32 	%f21, %f20, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r53, %f21;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f22, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f23;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f24, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f25;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f26, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f27;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f28, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f29;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f30, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f31;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r16, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r16;
	shfl.sync.bfly.b32	%r63, %r16, 1, 31, -1;
	mov.b32 	%f33, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r19, %f34;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:50:20
	ld.shared.u32 	%r21, [global_smem];
	// begin inline asm
	div.full.f32 %r20, %r21, %r13;
	// end inline asm
	mov.b32 	%f35, %r20;
	.loc	1 52 20                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:52:20
	add.f32 	%f36, %f35, 0f3727C5AC;
	.loc	1 53 28                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:53:28
	rsqrt.approx.ftz.f32 	%f37, %f36;
	.loc	1 54 20                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:54:20
	mul.f32 	%f38, %f19, %f37;
$L__tmp5:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f38, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f39, 0f00000000, %f38, %p16;
$L__tmp6:
	.loc	1 57 47                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:57:47
	mov.b32 	%r23, %f3;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r23 };
	// end inline asm
	.loc	1 58 25                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:58:25
	add.s64 	%rd4, %rd10, %rd12;
	.loc	1 58 45                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:58:45
	mov.b32 	%r24, %f39;
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r24 };
	// end inline asm
	.loc	1 59 25                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:59:25
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd5, %rd11, %rd14;
	.loc	1 59 37                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:59:37
	setp.eq.s32 	%p17, %r29, 0;
	mov.b32 	%r25, %f37;
	and.pred  	%p12, %p17, %p1;
	// begin inline asm
	@%p12 st.global.b32 [ %rd5 + 0 ], { %r25 };
	// end inline asm
	.loc	1 60 25                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:60:25
	add.s64 	%rd6, %rd9, %rd14;
	.loc	1 60 37                         // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:60:37
	// begin inline asm
	@%p12 st.global.b32 [ %rd6 + 0 ], { %r26 };
	// end inline asm
	.loc	1 60 4                          // c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/52/c52x2tmhe3ttoe265veuolcv3mlb4gdzsdar3a6ven6bjfpccrea.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 254                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 50
.b8 120
.b8 50
.b8 116
.b8 109
.b8 104
.b8 101
.b8 51
.b8 116
.b8 116
.b8 111
.b8 101
.b8 50
.b8 54
.b8 53
.b8 118
.b8 101
.b8 117
.b8 111
.b8 108
.b8 99
.b8 118
.b8 51
.b8 109
.b8 108
.b8 98
.b8 52
.b8 103
.b8 100
.b8 122
.b8 115
.b8 100
.b8 97
.b8 114
.b8 51
.b8 97
.b8 54
.b8 118
.b8 101
.b8 110
.b8 54
.b8 98
.b8 106
.b8 102
.b8 112
.b8 99
.b8 99
.b8 114
.b8 101
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
