; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 192, !dbg !14
  %18 = srem i32 %16, 3, !dbg !15
  %19 = sdiv i32 %16, 12, !dbg !16
  %20 = shl nsw i32 %18, 1, !dbg !17
  %21 = mul i32 %19, 24, !dbg !18
  %22 = add i32 %20, %21, !dbg !19
  %23 = sext i32 %22 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %17, i32 0, i1 %17) #1, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = shl i32 %16, 1, !dbg !22
  %28 = sext i32 %27 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %17, i32 0, i1 %17) #1, !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = fmul float %26, %31, !dbg !25
  %33 = or disjoint i32 %22, 1, !dbg !26
  %34 = sext i32 %33 to i64, !dbg !27
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %17, i32 0, i1 %17) #1, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = or disjoint i32 %27, 1, !dbg !29
  %39 = sext i32 %38 to i64, !dbg !30
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !30
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %17, i32 0, i1 %17) #1, !dbg !31
  %42 = bitcast i32 %41 to float, !dbg !31
  %43 = fmul float %37, %42, !dbg !32
  %44 = fadd float %32, %43, !dbg !33
  %45 = fmul float %31, %37, !dbg !34
  %46 = fmul float %26, %42, !dbg !35
  %47 = fsub float %45, %46, !dbg !36
  %48 = add i32 %22, 6, !dbg !37
  %49 = sext i32 %48 to i64, !dbg !38
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !38
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %17, i32 0, i1 %17) #1, !dbg !39
  %52 = bitcast i32 %51 to float, !dbg !39
  %53 = fmul float %31, %52, !dbg !40
  %54 = add i32 %22, 7, !dbg !41
  %55 = sext i32 %54 to i64, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !42
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %17, i32 0, i1 %17) #1, !dbg !43
  %58 = bitcast i32 %57 to float, !dbg !43
  %59 = fmul float %42, %58, !dbg !44
  %60 = fadd float %53, %59, !dbg !45
  %61 = fmul float %31, %58, !dbg !46
  %62 = fmul float %42, %52, !dbg !47
  %63 = fsub float %61, %62, !dbg !48
  %64 = add i32 %22, 12, !dbg !49
  %65 = sext i32 %64 to i64, !dbg !50
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !50
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %17, i32 0, i1 %17) #1, !dbg !51
  %68 = bitcast i32 %67 to float, !dbg !51
  %69 = fmul float %31, %68, !dbg !52
  %70 = add i32 %22, 13, !dbg !53
  %71 = sext i32 %70 to i64, !dbg !54
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !54
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %17, i32 0, i1 %17) #1, !dbg !55
  %74 = bitcast i32 %73 to float, !dbg !55
  %75 = fmul float %42, %74, !dbg !56
  %76 = fadd float %69, %75, !dbg !57
  %77 = fmul float %31, %74, !dbg !58
  %78 = fmul float %42, %68, !dbg !59
  %79 = fsub float %77, %78, !dbg !60
  %80 = add i32 %22, 18, !dbg !61
  %81 = sext i32 %80 to i64, !dbg !62
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !62
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %82, i1 %17, i32 0, i1 %17) #1, !dbg !63
  %84 = bitcast i32 %83 to float, !dbg !63
  %85 = fmul float %31, %84, !dbg !64
  %86 = add i32 %22, 19, !dbg !65
  %87 = sext i32 %86 to i64, !dbg !66
  %88 = getelementptr float, ptr addrspace(1) %1, i64 %87, !dbg !66
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %17, i32 0, i1 %17) #1, !dbg !67
  %90 = bitcast i32 %89 to float, !dbg !67
  %91 = fmul float %42, %90, !dbg !68
  %92 = fadd float %85, %91, !dbg !69
  %93 = fmul float %31, %90, !dbg !70
  %94 = fmul float %42, %84, !dbg !71
  %95 = fsub float %93, %94, !dbg !72
  %96 = sext i32 %16 to i64, !dbg !73
  %97 = getelementptr float, ptr addrspace(1) %2, i64 %96, !dbg !73
  %98 = bitcast float %44 to i32, !dbg !74
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %98, ptr addrspace(1) %97, i1 %17) #1, !dbg !74
  %99 = getelementptr float, ptr addrspace(1) %3, i64 %96, !dbg !75
  %100 = bitcast float %47 to i32, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %100, ptr addrspace(1) %99, i1 %17) #1, !dbg !76
  %101 = getelementptr float, ptr addrspace(1) %4, i64 %96, !dbg !77
  %102 = bitcast float %60 to i32, !dbg !78
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %102, ptr addrspace(1) %101, i1 %17) #1, !dbg !78
  %103 = getelementptr float, ptr addrspace(1) %5, i64 %96, !dbg !79
  %104 = bitcast float %63 to i32, !dbg !80
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %104, ptr addrspace(1) %103, i1 %17) #1, !dbg !80
  %105 = getelementptr float, ptr addrspace(1) %6, i64 %96, !dbg !81
  %106 = bitcast float %76 to i32, !dbg !82
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %106, ptr addrspace(1) %105, i1 %17) #1, !dbg !82
  %107 = getelementptr float, ptr addrspace(1) %7, i64 %96, !dbg !83
  %108 = bitcast float %79 to i32, !dbg !84
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %108, ptr addrspace(1) %107, i1 %17) #1, !dbg !84
  %109 = getelementptr float, ptr addrspace(1) %8, i64 %96, !dbg !85
  %110 = bitcast float %92 to i32, !dbg !86
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %110, ptr addrspace(1) %109, i1 %17) #1, !dbg !86
  %111 = getelementptr float, ptr addrspace(1) %9, i64 %96, !dbg !87
  %112 = bitcast float %95 to i32, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %112, ptr addrspace(1) %111, i1 %17) #1, !dbg !88
  ret void, !dbg !89
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ce3izi3uq2fi4p6p4uhrijawxmq7yiw7nl6ukyi62r3j4somdgii.py", directory: "inductor_cache/e3")
!4 = !{ptr @triton_poi_fused_add_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_sub_0", linkageName: "triton_poi_fused_add_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 32, scope: !7)
!18 = !DILocation(line: 31, column: 40, scope: !7)
!19 = !DILocation(line: 31, column: 37, scope: !7)
!20 = !DILocation(line: 31, column: 30, scope: !7)
!21 = !DILocation(line: 31, column: 45, scope: !7)
!22 = !DILocation(line: 37, column: 33, scope: !7)
!23 = !DILocation(line: 37, column: 31, scope: !7)
!24 = !DILocation(line: 37, column: 38, scope: !7)
!25 = !DILocation(line: 40, column: 19, scope: !7)
!26 = !DILocation(line: 46, column: 42, scope: !7)
!27 = !DILocation(line: 46, column: 31, scope: !7)
!28 = !DILocation(line: 46, column: 50, scope: !7)
!29 = !DILocation(line: 49, column: 35, scope: !7)
!30 = !DILocation(line: 49, column: 31, scope: !7)
!31 = !DILocation(line: 49, column: 42, scope: !7)
!32 = !DILocation(line: 51, column: 20, scope: !7)
!33 = !DILocation(line: 52, column: 20, scope: !7)
!34 = !DILocation(line: 53, column: 20, scope: !7)
!35 = !DILocation(line: 54, column: 19, scope: !7)
!36 = !DILocation(line: 55, column: 20, scope: !7)
!37 = !DILocation(line: 56, column: 42, scope: !7)
!38 = !DILocation(line: 56, column: 31, scope: !7)
!39 = !DILocation(line: 56, column: 50, scope: !7)
!40 = !DILocation(line: 59, column: 20, scope: !7)
!41 = !DILocation(line: 61, column: 42, scope: !7)
!42 = !DILocation(line: 61, column: 31, scope: !7)
!43 = !DILocation(line: 61, column: 50, scope: !7)
!44 = !DILocation(line: 63, column: 20, scope: !7)
!45 = !DILocation(line: 64, column: 20, scope: !7)
!46 = !DILocation(line: 65, column: 20, scope: !7)
!47 = !DILocation(line: 66, column: 20, scope: !7)
!48 = !DILocation(line: 67, column: 20, scope: !7)
!49 = !DILocation(line: 68, column: 43, scope: !7)
!50 = !DILocation(line: 68, column: 31, scope: !7)
!51 = !DILocation(line: 68, column: 51, scope: !7)
!52 = !DILocation(line: 71, column: 20, scope: !7)
!53 = !DILocation(line: 73, column: 43, scope: !7)
!54 = !DILocation(line: 73, column: 31, scope: !7)
!55 = !DILocation(line: 73, column: 51, scope: !7)
!56 = !DILocation(line: 75, column: 20, scope: !7)
!57 = !DILocation(line: 76, column: 20, scope: !7)
!58 = !DILocation(line: 77, column: 20, scope: !7)
!59 = !DILocation(line: 78, column: 20, scope: !7)
!60 = !DILocation(line: 79, column: 20, scope: !7)
!61 = !DILocation(line: 80, column: 43, scope: !7)
!62 = !DILocation(line: 80, column: 31, scope: !7)
!63 = !DILocation(line: 80, column: 51, scope: !7)
!64 = !DILocation(line: 83, column: 20, scope: !7)
!65 = !DILocation(line: 85, column: 43, scope: !7)
!66 = !DILocation(line: 85, column: 31, scope: !7)
!67 = !DILocation(line: 85, column: 51, scope: !7)
!68 = !DILocation(line: 87, column: 20, scope: !7)
!69 = !DILocation(line: 88, column: 20, scope: !7)
!70 = !DILocation(line: 89, column: 20, scope: !7)
!71 = !DILocation(line: 90, column: 20, scope: !7)
!72 = !DILocation(line: 91, column: 20, scope: !7)
!73 = !DILocation(line: 92, column: 25, scope: !7)
!74 = !DILocation(line: 92, column: 37, scope: !7)
!75 = !DILocation(line: 93, column: 25, scope: !7)
!76 = !DILocation(line: 93, column: 37, scope: !7)
!77 = !DILocation(line: 94, column: 25, scope: !7)
!78 = !DILocation(line: 94, column: 37, scope: !7)
!79 = !DILocation(line: 95, column: 25, scope: !7)
!80 = !DILocation(line: 95, column: 37, scope: !7)
!81 = !DILocation(line: 96, column: 25, scope: !7)
!82 = !DILocation(line: 96, column: 37, scope: !7)
!83 = !DILocation(line: 97, column: 25, scope: !7)
!84 = !DILocation(line: 97, column: 37, scope: !7)
!85 = !DILocation(line: 98, column: 25, scope: !7)
!86 = !DILocation(line: 98, column: 37, scope: !7)
!87 = !DILocation(line: 99, column: 25, scope: !7)
!88 = !DILocation(line: 99, column: 37, scope: !7)
!89 = !DILocation(line: 99, column: 4, scope: !7)
