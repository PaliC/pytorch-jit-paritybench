//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_5 // -- Begin function triton_poi_fused_convolution_relu_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_5
.visible .entry triton_poi_fused_convolution_relu_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_5_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_5_param_3,
	.param .u32 triton_poi_fused_convolution_relu_5_param_4,
	.param .u32 triton_poi_fused_convolution_relu_5_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<48>;
	.reg .b32 	%r<204>;
	.reg .f32 	%f<73>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_relu_5_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_convolution_relu_5_param_1];
$L__tmp0:
	.loc	1 22 28                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:22:33
	shl.b32 	%r88, %r1, 8;
	ld.param.u64 	%rd16, [triton_poi_fused_convolution_relu_5_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_convolution_relu_5_param_3];
	.loc	1 23 44                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:23:44
	mov.u32 	%r89, %tid.x;
	shl.b32 	%r90, %r89, 2;
	and.b32  	%r91, %r90, 12;
	and.b32  	%r92, %r90, 252;
	bfe.u32 	%r93, %r89, 2, 6;
	or.b32  	%r94, %r93, 64;
	or.b32  	%r95, %r93, 128;
	or.b32  	%r96, %r93, 192;
	and.b32  	%r97, %r89, 255;
	.loc	1 23 23                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:23:23
	or.b32  	%r98, %r88, %r92;
	or.b32  	%r99, %r88, %r93;
	or.b32  	%r100, %r88, %r94;
	or.b32  	%r101, %r88, %r95;
	or.b32  	%r102, %r88, %r96;
	or.b32  	%r103, %r88, %r97;
	.loc	1 24 21                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:24:21
	setp.lt.s32 	%p1, %r98, 1536;
	setp.lt.s32 	%p24, %r99, 1536;
	setp.lt.s32 	%p25, %r100, 1536;
	setp.lt.s32 	%p26, %r101, 1536;
	setp.lt.s32 	%p27, %r102, 1536;
	setp.lt.s32 	%p21, %r103, 1536;
	.loc	1 25 28                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:25:33
	shl.b32 	%r104, %r2, 4;
	.loc	1 26 44                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:26:44
	bfe.u32 	%r105, %r89, 6, 2;
	.loc	1 26 23                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:26:23
	or.b32  	%r106, %r104, %r105;
	or.b32  	%r107, %r106, 4;
	or.b32  	%r108, %r106, 8;
	or.b32  	%r109, %r106, 12;
	or.b32  	%r110, %r104, %r91;
	.loc	1 30 19                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:30:19
	mul.hi.s32 	%r112, %r98, 715827883;
	shr.u32 	%r113, %r112, 31;
	shr.s32 	%r114, %r112, 6;
	add.s32 	%r115, %r114, %r113;
	.loc	1 29 19                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:29:19
	mul.lo.s32 	%r116, %r115, 384;
	sub.s32 	%r117, %r98, %r116;
	mul.hi.s32 	%r118, %r103, 715827883;
	shr.u32 	%r119, %r118, 31;
	shr.u32 	%r120, %r118, 6;
	add.s32 	%r121, %r120, %r119;
	mul.lo.s32 	%r122, %r121, 384;
	sub.s32 	%r123, %r103, %r122;
	.loc	1 32 35                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:32:35
	mad.lo.s32 	%r124, %r115, 1572864, %r117;
	.loc	1 32 44                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:32:44
	mad.lo.s32 	%r125, %r106, 384, %r124;
	mad.lo.s32 	%r126, %r107, 384, %r124;
	mad.lo.s32 	%r127, %r108, 384, %r124;
	mad.lo.s32 	%r128, %r109, 384, %r124;
	.loc	1 32 30                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:32:30
	mul.wide.s32 	%rd18, %r125, 4;
	add.s64 	%rd1, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r126, 4;
	add.s64 	%rd2, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r127, 4;
	add.s64 	%rd3, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r128, 4;
	add.s64 	%rd4, %rd14, %rd21;
	.loc	1 32 57                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:32:57
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r129, %r89, 6;
	and.b32  	%r130, %r129, 4032;
	or.b32  	%r131, %r130, %r105;
	and.b32  	%r132, %r90, 1020;
	shr.u32 	%r133, %r130, 2;
	mov.u32 	%r134, global_smem;
	add.s32 	%r135, %r134, %r133;
	shl.b32 	%r136, %r131, 2;
	add.s32 	%r19, %r135, %r136;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r137, %r130, 16;
	shr.u32 	%r138, %r137, 2;
	add.s32 	%r139, %r134, %r138;
	add.s32 	%r140, %r139, %r136;
	add.s32 	%r21, %r140, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r141, %r130, 32;
	shr.u32 	%r142, %r141, 2;
	add.s32 	%r143, %r134, %r142;
	add.s32 	%r144, %r143, %r136;
	add.s32 	%r23, %r144, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r145, %r130, 48;
	shr.u32 	%r146, %r145, 2;
	add.s32 	%r147, %r134, %r146;
	add.s32 	%r148, %r147, %r136;
	add.s32 	%r25, %r148, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r140, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r144, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r148, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r140, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r144, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r148, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r140, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r144, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r148, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r149, %r89, 252;
	add.s32 	%r150, %r134, %r149;
	shl.b32 	%r151, %r132, 2;
	add.s32 	%r152, %r150, %r151;
	ld.shared.f32 	%f1, [%r152];
	ld.shared.f32 	%f2, [%r152+4];
	ld.shared.f32 	%f3, [%r152+8];
	ld.shared.f32 	%f4, [%r152+12];
	or.b32  	%r153, %r132, 1024;
	shr.u32 	%r154, %r153, 2;
	and.b32  	%r155, %r154, 508;
	add.s32 	%r156, %r134, %r155;
	add.s32 	%r157, %r156, %r151;
	ld.shared.f32 	%f5, [%r157+4096];
	ld.shared.f32 	%f6, [%r157+4100];
	ld.shared.f32 	%f7, [%r157+4104];
	ld.shared.f32 	%f8, [%r157+4108];
	or.b32  	%r158, %r132, 2048;
	shr.u32 	%r159, %r158, 2;
	and.b32  	%r160, %r159, 764;
	add.s32 	%r161, %r134, %r160;
	add.s32 	%r162, %r161, %r151;
	ld.shared.f32 	%f9, [%r162+8192];
	ld.shared.f32 	%f10, [%r162+8196];
	ld.shared.f32 	%f11, [%r162+8200];
	ld.shared.f32 	%f12, [%r162+8204];
	or.b32  	%r163, %r132, 3072;
	shr.u32 	%r164, %r163, 2;
	and.b32  	%r165, %r164, 1020;
	add.s32 	%r166, %r134, %r165;
	add.s32 	%r167, %r166, %r151;
	ld.shared.f32 	%f13, [%r167+12288];
	ld.shared.f32 	%f14, [%r167+12292];
	ld.shared.f32 	%f15, [%r167+12296];
	ld.shared.f32 	%f16, [%r167+12300];
	.loc	1 33 30                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:33:30
	mul.wide.s32 	%rd22, %r123, 4;
	add.s64 	%rd5, %rd15, %rd22;
	.loc	1 33 35                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:33:35
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r53 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 18                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:34:18
	bar.sync 	0;
	shl.b32 	%r168, %r97, 3;
	add.s32 	%r52, %r134, %r168;
	// begin inline asm
	@%p5 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r169, %r93, 3;
	add.s32 	%r170, %r134, %r169;
	ld.shared.f32 	%f17, [%r170];
	shl.b32 	%r171, %r94, 3;
	add.s32 	%r172, %r134, %r171;
	ld.shared.f32 	%f18, [%r172];
	shl.b32 	%r173, %r95, 3;
	add.s32 	%r174, %r134, %r173;
	ld.shared.f32 	%f19, [%r174];
	shl.b32 	%r175, %r96, 3;
	add.s32 	%r176, %r134, %r175;
	ld.shared.f32 	%f20, [%r176];
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	shl.b32 	%r177, %r97, 2;
	sub.s32 	%r54, %r52, %r177;
	// begin inline asm
	@%p5 st.shared.b32 [ %r54 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r178, %r92, 2;
	add.s32 	%r179, %r134, %r178;
$L__tmp2:
	.loc	1 34 18                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:34:18
	add.f32 	%f21, %f1, %f17;
	add.f32 	%f22, %f2, %f17;
	add.f32 	%f23, %f3, %f17;
	add.f32 	%f24, %f4, %f17;
	add.f32 	%f25, %f5, %f18;
	add.f32 	%f26, %f6, %f18;
	add.f32 	%f27, %f7, %f18;
	add.f32 	%f28, %f8, %f18;
	add.f32 	%f29, %f9, %f19;
	add.f32 	%f30, %f10, %f19;
	add.f32 	%f31, %f11, %f19;
	add.f32 	%f32, %f12, %f19;
	add.f32 	%f33, %f13, %f20;
	add.f32 	%f34, %f14, %f20;
	add.f32 	%f35, %f15, %f20;
	add.f32 	%f36, %f16, %f20;
	.loc	1 32 57                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:32:57
	mov.b32 	%f37, %r50;
	mov.b32 	%f38, %r48;
	mov.b32 	%f39, %r46;
	mov.b32 	%f40, %r44;
	mov.b32 	%f41, %r42;
	mov.b32 	%f42, %r40;
	mov.b32 	%f43, %r38;
	mov.b32 	%f44, %r36;
	mov.b32 	%f45, %r34;
	mov.b32 	%f46, %r32;
	mov.b32 	%f47, %r30;
	mov.b32 	%f48, %r28;
	mov.b32 	%f49, %r26;
	mov.b32 	%f50, %r24;
	mov.b32 	%f51, %r22;
	mov.b32 	%f52, %r20;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	ld.shared.v4.f32 	{%f53, %f54, %f55, %f56}, [%r179];
$L__tmp4:
	.loc	1 34 18                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:34:18
	add.f32 	%f57, %f53, %f52;
	add.f32 	%f58, %f54, %f51;
	add.f32 	%f59, %f55, %f50;
	add.f32 	%f60, %f56, %f49;
	add.f32 	%f61, %f53, %f48;
	add.f32 	%f62, %f54, %f47;
	add.f32 	%f63, %f55, %f46;
	add.f32 	%f64, %f56, %f45;
	add.f32 	%f65, %f53, %f44;
	add.f32 	%f66, %f54, %f43;
	add.f32 	%f67, %f55, %f42;
	add.f32 	%f68, %f56, %f41;
	add.f32 	%f69, %f53, %f40;
	add.f32 	%f70, %f54, %f39;
	add.f32 	%f71, %f55, %f38;
	add.f32 	%f72, %f56, %f37;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p32, %f72, 0f00000000;
	setp.lt.f32 	%p33, %f71, 0f00000000;
	setp.lt.f32 	%p34, %f70, 0f00000000;
	setp.lt.f32 	%p35, %f69, 0f00000000;
	setp.lt.f32 	%p36, %f68, 0f00000000;
	setp.lt.f32 	%p37, %f67, 0f00000000;
	setp.lt.f32 	%p38, %f66, 0f00000000;
	setp.lt.f32 	%p39, %f65, 0f00000000;
	setp.lt.f32 	%p40, %f64, 0f00000000;
	setp.lt.f32 	%p41, %f63, 0f00000000;
	setp.lt.f32 	%p42, %f62, 0f00000000;
	setp.lt.f32 	%p43, %f61, 0f00000000;
	setp.lt.f32 	%p44, %f60, 0f00000000;
	setp.lt.f32 	%p45, %f59, 0f00000000;
	setp.lt.f32 	%p46, %f58, 0f00000000;
	setp.lt.f32 	%p47, %f57, 0f00000000;
$L__tmp6:
	.loc	1 37 35                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:37:35
	shl.b32 	%r180, %r99, 12;
	shl.b32 	%r181, %r100, 12;
	shl.b32 	%r182, %r101, 12;
	shl.b32 	%r183, %r102, 12;
	.loc	1 37 30                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:37:30
	add.s32 	%r184, %r110, %r180;
	add.s32 	%r185, %r110, %r181;
	add.s32 	%r186, %r110, %r182;
	add.s32 	%r187, %r110, %r183;
	.loc	1 37 25                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:37:25
	mul.wide.s32 	%rd23, %r184, 4;
	add.s64 	%rd6, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r185, 4;
	add.s64 	%rd7, %rd16, %rd24;
	mul.wide.s32 	%rd25, %r186, 4;
	add.s64 	%rd8, %rd16, %rd25;
	mul.wide.s32 	%rd26, %r187, 4;
	add.s64 	%rd9, %rd16, %rd26;
	.loc	1 37 46                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:37:46
	mov.b32 	%r56, %f21;
	mov.b32 	%r57, %f22;
	mov.b32 	%r58, %f23;
	mov.b32 	%r59, %f24;
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd6 + 0 ], { %r56, %r57, %r58, %r59 };
	// end inline asm
	mov.b32 	%r60, %f25;
	mov.b32 	%r61, %f26;
	mov.b32 	%r62, %f27;
	mov.b32 	%r63, %f28;
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd7 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	mov.b32 	%r64, %f29;
	mov.b32 	%r65, %f30;
	mov.b32 	%r66, %f31;
	mov.b32 	%r67, %f32;
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd8 + 0 ], { %r64, %r65, %r66, %r67 };
	// end inline asm
	mov.b32 	%r68, %f33;
	mov.b32 	%r69, %f34;
	mov.b32 	%r70, %f35;
	mov.b32 	%r71, %f36;
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd9 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	.loc	1 38 25                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:25
	add.s64 	%rd10, %rd17, %rd18;
	add.s64 	%rd11, %rd17, %rd19;
	add.s64 	%rd12, %rd17, %rd20;
	add.s64 	%rd13, %rd17, %rd21;
	.loc	1 38 58                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:58
	mov.b32 	%r188, %f72;
	mov.b32 	%r189, %f71;
	mov.b32 	%r190, %f70;
	mov.b32 	%r191, %f69;
	mov.b32 	%r192, %f68;
	mov.b32 	%r193, %f67;
	mov.b32 	%r194, %f66;
	mov.b32 	%r195, %f65;
	mov.b32 	%r196, %f64;
	mov.b32 	%r197, %f63;
	mov.b32 	%r198, %f62;
	mov.b32 	%r199, %f61;
	mov.b32 	%r200, %f60;
	mov.b32 	%r201, %f59;
	mov.b32 	%r202, %f58;
	mov.b32 	%r203, %f57;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r72, 0, %r203, %p47;
	selp.b32 	%r73, 0, %r202, %p46;
	selp.b32 	%r74, 0, %r201, %p45;
	selp.b32 	%r75, 0, %r200, %p44;
$L__tmp8:
	.loc	1 38 58                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:58
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r72, %r73, %r74, %r75 };
	// end inline asm
$L__tmp9:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r76, 0, %r199, %p43;
	selp.b32 	%r77, 0, %r198, %p42;
	selp.b32 	%r78, 0, %r197, %p41;
	selp.b32 	%r79, 0, %r196, %p40;
$L__tmp10:
	.loc	1 38 58                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:58
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r76, %r77, %r78, %r79 };
	// end inline asm
$L__tmp11:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r80, 0, %r195, %p39;
	selp.b32 	%r81, 0, %r194, %p38;
	selp.b32 	%r82, 0, %r193, %p37;
	selp.b32 	%r83, 0, %r192, %p36;
$L__tmp12:
	.loc	1 38 58                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:58
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r80, %r81, %r82, %r83 };
	// end inline asm
$L__tmp13:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r84, 0, %r191, %p35;
	selp.b32 	%r85, 0, %r190, %p34;
	selp.b32 	%r86, 0, %r189, %p33;
	selp.b32 	%r87, 0, %r188, %p32;
$L__tmp14:
	.loc	1 38 58                         // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:58
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	.loc	1 38 4                          // c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py:38:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4u/c4ue7447l5rrpfrmnihy3qhwvjpprp5czluuhtkbkxjcm2bfch33.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 117
.b8 101
.b8 55
.b8 52
.b8 52
.b8 55
.b8 108
.b8 53
.b8 114
.b8 114
.b8 112
.b8 102
.b8 114
.b8 109
.b8 110
.b8 105
.b8 104
.b8 121
.b8 51
.b8 113
.b8 104
.b8 119
.b8 118
.b8 106
.b8 112
.b8 112
.b8 114
.b8 112
.b8 53
.b8 99
.b8 122
.b8 108
.b8 117
.b8 117
.b8 104
.b8 116
.b8 107
.b8 98
.b8 107
.b8 120
.b8 106
.b8 99
.b8 109
.b8 50
.b8 98
.b8 102
.b8 99
.b8 104
.b8 51
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
