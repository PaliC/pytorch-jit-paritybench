#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":19:0)
#loc1 = loc(unknown)
#loc19 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":37:24)
#loc28 = loc(callsite(#loc1 at #loc19))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_mean_sum_37(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":19:0)) attributes {noinline = false} {
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %c16384_i32 = arith.constant 16384 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1024> : tensor<1x16xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %0, %c1024_i32 : i32 loc(#loc4)
    %4 = arith.divsi %0, %c1024_i32 : i32 loc(#loc5)
    %5 = arith.muli %2, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc6)
    %6 = tt.splat %3 : i32 -> tensor<1x16xi32, #blocked> loc(#loc7)
    %7 = arith.addi %6, %5 : tensor<1x16xi32, #blocked> loc(#loc7)
    %8 = arith.muli %4, %c16384_i32 : i32 loc(#loc8)
    %9 = tt.splat %8 : i32 -> tensor<1x16xi32, #blocked> loc(#loc9)
    %10 = arith.addi %7, %9 : tensor<1x16xi32, #blocked> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %10 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc10)
    %13 = tt.load %12 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = arith.addi %3, %c65536_i32 : i32 loc(#loc12)
    %15 = tt.splat %14 : i32 -> tensor<1x16xi32, #blocked> loc(#loc13)
    %16 = arith.addi %15, %5 : tensor<1x16xi32, #blocked> loc(#loc13)
    %17 = arith.addi %16, %9 : tensor<1x16xi32, #blocked> loc(#loc14)
    %18 = tt.addptr %11, %17 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc15)
    %19 = tt.load %18 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc16)
    %20 = arith.addf %13, %19 : tensor<1x16xf32, #blocked> loc(#loc17)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc19)), %arg5: f32 loc(callsite(#loc1 at #loc19))):
      %26 = arith.addf %arg4, %arg5 : f32 loc(#loc30)
      tt.reduce.return %26 : f32 loc(#loc27)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc27)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc21)
    %23 = arith.divf %22, %cst : tensor<1x1xf32, #blocked> loc(#loc22)
    gpu.barrier loc(#loc23)
    %24 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc24)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    tt.store %25, %23 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":23:28)
#loc3 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":26:34)
#loc4 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":30:19)
#loc5 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":31:19)
#loc6 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:40)
#loc7 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:35)
#loc8 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:51)
#loc9 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:45)
#loc10 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:30)
#loc11 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":33:56)
#loc12 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":34:38)
#loc13 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":34:43)
#loc14 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":34:53)
#loc15 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":34:30)
#loc16 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":34:64)
#loc17 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":35:18)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc21 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":37:27)
#loc22 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":39:18)
#loc23 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":40:4)
#loc24 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":41:28)
#loc25 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":41:39)
#loc26 = loc("inductor_cache/vy/cvyfli6e4lgkjhtwxzzgcpqgar5mw7ysn2furiwxf6encv55ia55.py":41:4)
#loc27 = loc(callsite(#loc18 at #loc19))
#loc29 = loc(callsite(#loc20 at #loc18))
#loc30 = loc(callsite(#loc29 at #loc19))
