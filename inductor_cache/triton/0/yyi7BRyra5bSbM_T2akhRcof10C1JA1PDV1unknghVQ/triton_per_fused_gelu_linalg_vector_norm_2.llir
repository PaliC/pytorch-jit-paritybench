; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_per_fused_gelu_linalg_vector_norm_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 24, !dbg !12
  %9 = shl i32 %7, 2, !dbg !12
  %10 = and i32 %9, 28, !dbg !12
  %11 = and i32 %7, 31, !dbg !12
  %12 = or disjoint i32 %6, %10, !dbg !13
  %13 = icmp slt i32 %12, 64, !dbg !14
  %14 = lshr i32 %7, 5, !dbg !15
  %.frozen = freeze i32 %12, !dbg !16
  %15 = sdiv i32 %.frozen, 16, !dbg !16
  %16 = mul i32 %15, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = shl i32 %7, 1, !dbg !18
  %18 = and i32 %17, 240, !dbg !18
  %19 = add nsw i32 %.decomposed, %18, !dbg !19
  %20 = shl i32 %15, 8, !dbg !20
  %21 = add i32 %19, %20, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !22
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %23, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13, i32 0, i1 %13) #5, !dbg !23
  %25 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !23
  %26 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !23
  %27 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !23
  %28 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !23
  %29 = bitcast i32 %25 to float, !dbg !23
  %30 = bitcast i32 %26 to float, !dbg !23
  %31 = bitcast i32 %27 to float, !dbg !23
  %32 = bitcast i32 %28 to float, !dbg !23
  %33 = fmul float %29, 5.000000e-01, !dbg !24
  %34 = fmul float %30, 5.000000e-01, !dbg !24
  %35 = fmul float %31, 5.000000e-01, !dbg !24
  %36 = fmul float %32, 5.000000e-01, !dbg !24
  %37 = fmul float %29, 0x3FE6A09E60000000, !dbg !25
  %38 = fmul float %30, 0x3FE6A09E60000000, !dbg !25
  %39 = fmul float %31, 0x3FE6A09E60000000, !dbg !25
  %40 = fmul float %32, 0x3FE6A09E60000000, !dbg !25
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i1 = icmp eq i32 %41, 0, !dbg !26
  %42 = tail call float @llvm.nvvm.fabs.ftz.f(float %37) #5, !dbg !26
  %43 = tail call float @llvm.nvvm.fabs.f(float %37) #5, !dbg !26
  %.0.i2 = select i1 %.not.i1, float %43, float %42, !dbg !26
  %44 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !26
  br i1 %44, label %__nv_fabsf.exit1.i, label %46, !dbg !26

__nv_fabsf.exit1.i:                               ; preds = %4
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not1.i4 = icmp eq i32 %45, 0, !dbg !26
  %.01.i = select i1 %.not1.i4, float %43, float %42, !dbg !26
  br label %__internal_fmad.exit.i, !dbg !26

46:                                               ; preds = %4
  %47 = fmul float %37, %37, !dbg !26
  br label %__internal_fmad.exit.i, !dbg !26

__internal_fmad.exit.i:                           ; preds = %46, %__nv_fabsf.exit1.i
  %48 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %46 ], !dbg !26
  %49 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %46 ], !dbg !26
  %50 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %46 ], !dbg !26
  %51 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %46 ], !dbg !26
  %52 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %46 ], !dbg !26
  %53 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %46 ], !dbg !26
  %54 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %46 ], !dbg !26
  %55 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %47, %46 ], !dbg !26
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not2.i3 = icmp eq i32 %56, 0, !dbg !26
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %54, float %55, float %53) #5, !dbg !26
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %54, float %55, float %53) #5, !dbg !26
  %.02.i = select i1 %.not2.i3, float %58, float %57, !dbg !26
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not3.i = icmp eq i32 %59, 0, !dbg !26
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %55, float %52) #5, !dbg !26
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %55, float %52) #5, !dbg !26
  %.03.i = select i1 %.not3.i, float %61, float %60, !dbg !26
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not4.i = icmp eq i32 %62, 0, !dbg !26
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %55, float %51) #5, !dbg !26
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %55, float %51) #5, !dbg !26
  %.04.i = select i1 %.not4.i, float %64, float %63, !dbg !26
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not5.i = icmp eq i32 %65, 0, !dbg !26
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %55, float %50) #5, !dbg !26
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %55, float %50) #5, !dbg !26
  %.05.i = select i1 %.not5.i, float %67, float %66, !dbg !26
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not6.i = icmp eq i32 %68, 0, !dbg !26
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %55, float %49) #5, !dbg !26
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %55, float %49) #5, !dbg !26
  %.06.i = select i1 %.not6.i, float %70, float %69, !dbg !26
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not7.i = icmp eq i32 %71, 0, !dbg !26
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %55, float %48) #5, !dbg !26
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %55, float %48) #5, !dbg !26
  %.07.i = select i1 %.not7.i, float %73, float %72, !dbg !26
  %74 = fneg float %55, !dbg !26
  %75 = select i1 %44, float %74, float %37, !dbg !26
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not8.i = icmp eq i32 %76, 0, !dbg !26
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %75, float %75) #5, !dbg !26
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %75, float %75) #5, !dbg !26
  %.08.i = select i1 %.not8.i, float %78, float %77, !dbg !26
  br i1 %44, label %79, label %__nv_erff.exit, !dbg !26

79:                                               ; preds = %__internal_fmad.exit.i
  %80 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #5, !dbg !26
  %81 = fsub float 1.000000e+00, %80, !dbg !26
  %82 = bitcast float %81 to i32, !dbg !26
  %83 = bitcast float %37 to i32, !dbg !26
  %84 = and i32 %83, -2147483648, !dbg !26
  %85 = or i32 %84, %82, !dbg !26
  %86 = bitcast i32 %85 to float, !dbg !26
  br label %__nv_erff.exit, !dbg !26

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %79
  %r.0.i = phi float [ %86, %79 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !26
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i5 = icmp eq i32 %87, 0, !dbg !26
  %88 = tail call float @llvm.nvvm.fabs.ftz.f(float %38) #5, !dbg !26
  %89 = tail call float @llvm.nvvm.fabs.f(float %38) #5, !dbg !26
  %.0.i6 = select i1 %.not.i5, float %89, float %88, !dbg !26
  %90 = fcmp oge float %.0.i6, 0x3FF00C1FC0000000, !dbg !26
  br i1 %90, label %__nv_fabsf.exit1.i23, label %92, !dbg !26

__nv_fabsf.exit1.i23:                             ; preds = %__nv_erff.exit
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not1.i24 = icmp eq i32 %91, 0, !dbg !26
  %.01.i25 = select i1 %.not1.i24, float %89, float %88, !dbg !26
  br label %__internal_fmad.exit.i7, !dbg !26

92:                                               ; preds = %__nv_erff.exit
  %93 = fmul float %38, %38, !dbg !26
  br label %__internal_fmad.exit.i7, !dbg !26

__internal_fmad.exit.i7:                          ; preds = %92, %__nv_fabsf.exit1.i23
  %94 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i23 ], [ 0x3FC06EBA60000000, %92 ], !dbg !26
  %95 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i23 ], [ 0xBFD8127580000000, %92 ], !dbg !26
  %96 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i23 ], [ 0x3FBCE315E0000000, %92 ], !dbg !26
  %97 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i23 ], [ 0xBF9B837CE0000000, %92 ], !dbg !26
  %98 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i23 ], [ 0x3F755ABD40000000, %92 ], !dbg !26
  %99 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i23 ], [ 0xBF4AE9A400000000, %92 ], !dbg !26
  %100 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i23 ], [ 0x3F163D2D40000000, %92 ], !dbg !26
  %101 = phi float [ %.01.i25, %__nv_fabsf.exit1.i23 ], [ %93, %92 ], !dbg !26
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not2.i8 = icmp eq i32 %102, 0, !dbg !26
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %100, float %101, float %99) #5, !dbg !26
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %100, float %101, float %99) #5, !dbg !26
  %.02.i9 = select i1 %.not2.i8, float %104, float %103, !dbg !26
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not3.i10 = icmp eq i32 %105, 0, !dbg !26
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i9, float %101, float %98) #5, !dbg !26
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i9, float %101, float %98) #5, !dbg !26
  %.03.i11 = select i1 %.not3.i10, float %107, float %106, !dbg !26
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not4.i12 = icmp eq i32 %108, 0, !dbg !26
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i11, float %101, float %97) #5, !dbg !26
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i11, float %101, float %97) #5, !dbg !26
  %.04.i13 = select i1 %.not4.i12, float %110, float %109, !dbg !26
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not5.i14 = icmp eq i32 %111, 0, !dbg !26
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i13, float %101, float %96) #5, !dbg !26
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i13, float %101, float %96) #5, !dbg !26
  %.05.i15 = select i1 %.not5.i14, float %113, float %112, !dbg !26
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not6.i16 = icmp eq i32 %114, 0, !dbg !26
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i15, float %101, float %95) #5, !dbg !26
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i15, float %101, float %95) #5, !dbg !26
  %.06.i17 = select i1 %.not6.i16, float %116, float %115, !dbg !26
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not7.i18 = icmp eq i32 %117, 0, !dbg !26
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i17, float %101, float %94) #5, !dbg !26
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i17, float %101, float %94) #5, !dbg !26
  %.07.i19 = select i1 %.not7.i18, float %119, float %118, !dbg !26
  %120 = fneg float %101, !dbg !26
  %121 = select i1 %90, float %120, float %38, !dbg !26
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not8.i20 = icmp eq i32 %122, 0, !dbg !26
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i19, float %121, float %121) #5, !dbg !26
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i19, float %121, float %121) #5, !dbg !26
  %.08.i21 = select i1 %.not8.i20, float %124, float %123, !dbg !26
  br i1 %90, label %125, label %__nv_erff.exit26, !dbg !26

125:                                              ; preds = %__internal_fmad.exit.i7
  %126 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i21) #5, !dbg !26
  %127 = fsub float 1.000000e+00, %126, !dbg !26
  %128 = bitcast float %127 to i32, !dbg !26
  %129 = bitcast float %38 to i32, !dbg !26
  %130 = and i32 %129, -2147483648, !dbg !26
  %131 = or i32 %130, %128, !dbg !26
  %132 = bitcast i32 %131 to float, !dbg !26
  br label %__nv_erff.exit26, !dbg !26

__nv_erff.exit26:                                 ; preds = %__internal_fmad.exit.i7, %125
  %r.0.i22 = phi float [ %132, %125 ], [ %.08.i21, %__internal_fmad.exit.i7 ], !dbg !26
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i27 = icmp eq i32 %133, 0, !dbg !26
  %134 = tail call float @llvm.nvvm.fabs.ftz.f(float %39) #5, !dbg !26
  %135 = tail call float @llvm.nvvm.fabs.f(float %39) #5, !dbg !26
  %.0.i28 = select i1 %.not.i27, float %135, float %134, !dbg !26
  %136 = fcmp oge float %.0.i28, 0x3FF00C1FC0000000, !dbg !26
  br i1 %136, label %__nv_fabsf.exit1.i45, label %138, !dbg !26

__nv_fabsf.exit1.i45:                             ; preds = %__nv_erff.exit26
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not1.i46 = icmp eq i32 %137, 0, !dbg !26
  %.01.i47 = select i1 %.not1.i46, float %135, float %134, !dbg !26
  br label %__internal_fmad.exit.i29, !dbg !26

138:                                              ; preds = %__nv_erff.exit26
  %139 = fmul float %39, %39, !dbg !26
  br label %__internal_fmad.exit.i29, !dbg !26

__internal_fmad.exit.i29:                         ; preds = %138, %__nv_fabsf.exit1.i45
  %140 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i45 ], [ 0x3FC06EBA60000000, %138 ], !dbg !26
  %141 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i45 ], [ 0xBFD8127580000000, %138 ], !dbg !26
  %142 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i45 ], [ 0x3FBCE315E0000000, %138 ], !dbg !26
  %143 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i45 ], [ 0xBF9B837CE0000000, %138 ], !dbg !26
  %144 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i45 ], [ 0x3F755ABD40000000, %138 ], !dbg !26
  %145 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i45 ], [ 0xBF4AE9A400000000, %138 ], !dbg !26
  %146 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i45 ], [ 0x3F163D2D40000000, %138 ], !dbg !26
  %147 = phi float [ %.01.i47, %__nv_fabsf.exit1.i45 ], [ %139, %138 ], !dbg !26
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not2.i30 = icmp eq i32 %148, 0, !dbg !26
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %146, float %147, float %145) #5, !dbg !26
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %146, float %147, float %145) #5, !dbg !26
  %.02.i31 = select i1 %.not2.i30, float %150, float %149, !dbg !26
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not3.i32 = icmp eq i32 %151, 0, !dbg !26
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float %147, float %144) #5, !dbg !26
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float %147, float %144) #5, !dbg !26
  %.03.i33 = select i1 %.not3.i32, float %153, float %152, !dbg !26
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not4.i34 = icmp eq i32 %154, 0, !dbg !26
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i33, float %147, float %143) #5, !dbg !26
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i33, float %147, float %143) #5, !dbg !26
  %.04.i35 = select i1 %.not4.i34, float %156, float %155, !dbg !26
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not5.i36 = icmp eq i32 %157, 0, !dbg !26
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %147, float %142) #5, !dbg !26
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %147, float %142) #5, !dbg !26
  %.05.i37 = select i1 %.not5.i36, float %159, float %158, !dbg !26
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not6.i38 = icmp eq i32 %160, 0, !dbg !26
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i37, float %147, float %141) #5, !dbg !26
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i37, float %147, float %141) #5, !dbg !26
  %.06.i39 = select i1 %.not6.i38, float %162, float %161, !dbg !26
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not7.i40 = icmp eq i32 %163, 0, !dbg !26
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i39, float %147, float %140) #5, !dbg !26
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i39, float %147, float %140) #5, !dbg !26
  %.07.i41 = select i1 %.not7.i40, float %165, float %164, !dbg !26
  %166 = fneg float %147, !dbg !26
  %167 = select i1 %136, float %166, float %39, !dbg !26
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not8.i42 = icmp eq i32 %168, 0, !dbg !26
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i41, float %167, float %167) #5, !dbg !26
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i41, float %167, float %167) #5, !dbg !26
  %.08.i43 = select i1 %.not8.i42, float %170, float %169, !dbg !26
  br i1 %136, label %171, label %__nv_erff.exit48, !dbg !26

171:                                              ; preds = %__internal_fmad.exit.i29
  %172 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i43) #5, !dbg !26
  %173 = fsub float 1.000000e+00, %172, !dbg !26
  %174 = bitcast float %173 to i32, !dbg !26
  %175 = bitcast float %39 to i32, !dbg !26
  %176 = and i32 %175, -2147483648, !dbg !26
  %177 = or i32 %176, %174, !dbg !26
  %178 = bitcast i32 %177 to float, !dbg !26
  br label %__nv_erff.exit48, !dbg !26

__nv_erff.exit48:                                 ; preds = %__internal_fmad.exit.i29, %171
  %r.0.i44 = phi float [ %178, %171 ], [ %.08.i43, %__internal_fmad.exit.i29 ], !dbg !26
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i49 = icmp eq i32 %179, 0, !dbg !26
  %180 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #5, !dbg !26
  %181 = tail call float @llvm.nvvm.fabs.f(float %40) #5, !dbg !26
  %.0.i50 = select i1 %.not.i49, float %181, float %180, !dbg !26
  %182 = fcmp oge float %.0.i50, 0x3FF00C1FC0000000, !dbg !26
  br i1 %182, label %__nv_fabsf.exit1.i67, label %184, !dbg !26

__nv_fabsf.exit1.i67:                             ; preds = %__nv_erff.exit48
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not1.i68 = icmp eq i32 %183, 0, !dbg !26
  %.01.i69 = select i1 %.not1.i68, float %181, float %180, !dbg !26
  br label %__internal_fmad.exit.i51, !dbg !26

184:                                              ; preds = %__nv_erff.exit48
  %185 = fmul float %40, %40, !dbg !26
  br label %__internal_fmad.exit.i51, !dbg !26

__internal_fmad.exit.i51:                         ; preds = %184, %__nv_fabsf.exit1.i67
  %186 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i67 ], [ 0x3FC06EBA60000000, %184 ], !dbg !26
  %187 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i67 ], [ 0xBFD8127580000000, %184 ], !dbg !26
  %188 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i67 ], [ 0x3FBCE315E0000000, %184 ], !dbg !26
  %189 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i67 ], [ 0xBF9B837CE0000000, %184 ], !dbg !26
  %190 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i67 ], [ 0x3F755ABD40000000, %184 ], !dbg !26
  %191 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i67 ], [ 0xBF4AE9A400000000, %184 ], !dbg !26
  %192 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i67 ], [ 0x3F163D2D40000000, %184 ], !dbg !26
  %193 = phi float [ %.01.i69, %__nv_fabsf.exit1.i67 ], [ %185, %184 ], !dbg !26
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not2.i52 = icmp eq i32 %194, 0, !dbg !26
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %192, float %193, float %191) #5, !dbg !26
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %192, float %193, float %191) #5, !dbg !26
  %.02.i53 = select i1 %.not2.i52, float %196, float %195, !dbg !26
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not3.i54 = icmp eq i32 %197, 0, !dbg !26
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i53, float %193, float %190) #5, !dbg !26
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i53, float %193, float %190) #5, !dbg !26
  %.03.i55 = select i1 %.not3.i54, float %199, float %198, !dbg !26
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not4.i56 = icmp eq i32 %200, 0, !dbg !26
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i55, float %193, float %189) #5, !dbg !26
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i55, float %193, float %189) #5, !dbg !26
  %.04.i57 = select i1 %.not4.i56, float %202, float %201, !dbg !26
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not5.i58 = icmp eq i32 %203, 0, !dbg !26
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i57, float %193, float %188) #5, !dbg !26
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i57, float %193, float %188) #5, !dbg !26
  %.05.i59 = select i1 %.not5.i58, float %205, float %204, !dbg !26
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not6.i60 = icmp eq i32 %206, 0, !dbg !26
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i59, float %193, float %187) #5, !dbg !26
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i59, float %193, float %187) #5, !dbg !26
  %.06.i61 = select i1 %.not6.i60, float %208, float %207, !dbg !26
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not7.i62 = icmp eq i32 %209, 0, !dbg !26
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i61, float %193, float %186) #5, !dbg !26
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i61, float %193, float %186) #5, !dbg !26
  %.07.i63 = select i1 %.not7.i62, float %211, float %210, !dbg !26
  %212 = fneg float %193, !dbg !26
  %213 = select i1 %182, float %212, float %40, !dbg !26
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not8.i64 = icmp eq i32 %214, 0, !dbg !26
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i63, float %213, float %213) #5, !dbg !26
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i63, float %213, float %213) #5, !dbg !26
  %.08.i65 = select i1 %.not8.i64, float %216, float %215, !dbg !26
  br i1 %182, label %217, label %__nv_erff.exit70, !dbg !26

217:                                              ; preds = %__internal_fmad.exit.i51
  %218 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i65) #5, !dbg !26
  %219 = fsub float 1.000000e+00, %218, !dbg !26
  %220 = bitcast float %219 to i32, !dbg !26
  %221 = bitcast float %40 to i32, !dbg !26
  %222 = and i32 %221, -2147483648, !dbg !26
  %223 = or i32 %222, %220, !dbg !26
  %224 = bitcast i32 %223 to float, !dbg !26
  br label %__nv_erff.exit70, !dbg !26

__nv_erff.exit70:                                 ; preds = %__internal_fmad.exit.i51, %217
  %r.0.i66 = phi float [ %224, %217 ], [ %.08.i65, %__internal_fmad.exit.i51 ], !dbg !26
  %225 = fadd float %r.0.i, 1.000000e+00, !dbg !27
  %226 = fadd float %r.0.i22, 1.000000e+00, !dbg !27
  %227 = fadd float %r.0.i44, 1.000000e+00, !dbg !27
  %228 = fadd float %r.0.i66, 1.000000e+00, !dbg !27
  %229 = fmul float %33, %225, !dbg !28
  %230 = fmul float %34, %226, !dbg !28
  %231 = fmul float %35, %227, !dbg !28
  %232 = fmul float %36, %228, !dbg !28
  %233 = fmul float %229, %229, !dbg !29
  %234 = fmul float %230, %230, !dbg !29
  %235 = fmul float %231, %231, !dbg !29
  %236 = fmul float %232, %232, !dbg !29
  %237 = select i1 %13, float %233, float 0.000000e+00, !dbg !30
  %238 = select i1 %13, float %234, float 0.000000e+00, !dbg !30
  %239 = select i1 %13, float %235, float 0.000000e+00, !dbg !30
  %240 = select i1 %13, float %236, float 0.000000e+00, !dbg !30
  %241 = bitcast float %237 to i32, !dbg !31
  %242 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %241, i32 16, i32 31), !dbg !31
  %243 = bitcast i32 %242 to float, !dbg !31
  %244 = fadd float %237, %243, !dbg !35
  %245 = bitcast float %244 to i32, !dbg !31
  %246 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %245, i32 8, i32 31), !dbg !31
  %247 = bitcast i32 %246 to float, !dbg !31
  %248 = fadd float %244, %247, !dbg !35
  %249 = bitcast float %238 to i32, !dbg !31
  %250 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %249, i32 16, i32 31), !dbg !31
  %251 = bitcast i32 %250 to float, !dbg !31
  %252 = fadd float %238, %251, !dbg !35
  %253 = bitcast float %252 to i32, !dbg !31
  %254 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %253, i32 8, i32 31), !dbg !31
  %255 = bitcast i32 %254 to float, !dbg !31
  %256 = fadd float %252, %255, !dbg !35
  %257 = bitcast float %239 to i32, !dbg !31
  %258 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %257, i32 16, i32 31), !dbg !31
  %259 = bitcast i32 %258 to float, !dbg !31
  %260 = fadd float %239, %259, !dbg !35
  %261 = bitcast float %260 to i32, !dbg !31
  %262 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %261, i32 8, i32 31), !dbg !31
  %263 = bitcast i32 %262 to float, !dbg !31
  %264 = fadd float %260, %263, !dbg !35
  %265 = bitcast float %240 to i32, !dbg !31
  %266 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %265, i32 16, i32 31), !dbg !31
  %267 = bitcast i32 %266 to float, !dbg !31
  %268 = fadd float %240, %267, !dbg !35
  %269 = bitcast float %268 to i32, !dbg !31
  %270 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %269, i32 8, i32 31), !dbg !31
  %271 = bitcast i32 %270 to float, !dbg !31
  %272 = fadd float %268, %271, !dbg !35
  %273 = icmp eq i32 %8, 0, !dbg !31
  %274 = and i32 %14, 3, !dbg !31
  %275 = shl nuw nsw i32 %10, 2, !dbg !31
  %276 = or disjoint i32 %275, %274, !dbg !31
  %277 = getelementptr float, ptr addrspace(3) @global_smem, i32 %276, !dbg !31
  %278 = bitcast float %248 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %277, <1 x i32> %278, i1 %273) #5, !dbg !31
  %279 = or disjoint i32 %275, 4, !dbg !31
  %280 = or disjoint i32 %279, %274, !dbg !31
  %281 = getelementptr float, ptr addrspace(3) @global_smem, i32 %280, !dbg !31
  %282 = bitcast float %256 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %281, <1 x i32> %282, i1 %273) #5, !dbg !31
  %283 = or disjoint i32 %275, 8, !dbg !31
  %284 = or disjoint i32 %283, %274, !dbg !31
  %285 = getelementptr float, ptr addrspace(3) @global_smem, i32 %284, !dbg !31
  %286 = bitcast float %264 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %285, <1 x i32> %286, i1 %273) #5, !dbg !31
  %287 = or disjoint i32 %275, 12, !dbg !31
  %288 = or disjoint i32 %287, %274, !dbg !31
  %289 = getelementptr float, ptr addrspace(3) @global_smem, i32 %288, !dbg !31
  %290 = bitcast float %272 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %289, <1 x i32> %290, i1 %273) #5, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %291 = icmp slt i32 %7, 128, !dbg !31
  %292 = getelementptr float, ptr addrspace(3) @global_smem, i32 %7, !dbg !31
  %293 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %292, i1 %291) #5, !dbg !31
  %294 = bitcast i32 %293 to float, !dbg !31
  %295 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %293, i32 2, i32 31), !dbg !31
  %296 = bitcast i32 %295 to float, !dbg !31
  %297 = fadd float %294, %296, !dbg !35
  %298 = bitcast float %297 to i32, !dbg !31
  %299 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %298, i32 1, i32 31), !dbg !31
  %300 = bitcast i32 %299 to float, !dbg !31
  %301 = fadd float %297, %300, !dbg !35
  %302 = and i32 %7, 3, !dbg !31
  %303 = icmp eq i32 %302, 0, !dbg !31
  %304 = and i1 %291, %303, !dbg !31
  %305 = bitcast float %301 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %292, <1 x i32> %305, i1 %304) #5, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %306 = getelementptr float, ptr addrspace(3) @global_smem, i32 %275, !dbg !31
  %307 = load i32, ptr addrspace(3) %306, align 16, !dbg !31
  %308 = getelementptr float, ptr addrspace(3) @global_smem, i32 %279, !dbg !31
  %309 = load i32, ptr addrspace(3) %308, align 16, !dbg !31
  %310 = getelementptr float, ptr addrspace(3) @global_smem, i32 %283, !dbg !31
  %311 = load i32, ptr addrspace(3) %310, align 16, !dbg !31
  %312 = getelementptr float, ptr addrspace(3) @global_smem, i32 %287, !dbg !31
  %313 = load i32, ptr addrspace(3) %312, align 16, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %314 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !37
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %314, i32 %307, i32 %309, i32 %311, i32 %313, i1 true) #5, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %315 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !37
  %316 = load float, ptr addrspace(3) %315, align 4, !dbg !37
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !37
  %.not.i = icmp eq i32 %317, 0, !dbg !37
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !37
  %.not1.i = icmp eq i32 %318, 0, !dbg !37
  br i1 %.not.i, label %324, label %319, !dbg !37

319:                                              ; preds = %__nv_erff.exit70
  br i1 %.not1.i, label %322, label %320, !dbg !37

320:                                              ; preds = %319
  %321 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %316) #5, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

322:                                              ; preds = %319
  %323 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %316) #5, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

324:                                              ; preds = %__nv_erff.exit70
  br i1 %.not1.i, label %327, label %325, !dbg !37

325:                                              ; preds = %324
  %326 = tail call float @llvm.nvvm.sqrt.rn.f(float %316) #5, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

327:                                              ; preds = %324
  %328 = tail call float @llvm.nvvm.sqrt.approx.f(float %316) #5, !dbg !37
  br label %__nv_sqrtf.exit, !dbg !37

__nv_sqrtf.exit:                                  ; preds = %320, %322, %325, %327
  %.0.i = phi float [ %321, %320 ], [ %323, %322 ], [ %326, %325 ], [ %328, %327 ], !dbg !37
  %329 = or disjoint i32 %6, %11, !dbg !13
  %330 = icmp slt i32 %329, 64, !dbg !14
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %331 = sext i32 %329 to i64, !dbg !39
  %332 = getelementptr float, ptr addrspace(1) %0, i64 %331, !dbg !39
  %333 = icmp eq i32 %274, 0, !dbg !40
  %334 = bitcast float %.0.i to i32, !dbg !40
  %335 = and i1 %333, %330, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %334, ptr addrspace(1) %332, i1 %335) #5, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py", directory: "inductor_cache/mk")
!4 = !{ptr @triton_per_fused_gelu_linalg_vector_norm_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_gelu_linalg_vector_norm_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_gelu_linalg_vector_norm_2", linkageName: "triton_per_fused_gelu_linalg_vector_norm_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 19, scope: !7)
!17 = !DILocation(line: 30, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 38, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 47, scope: !7)
!21 = !DILocation(line: 33, column: 43, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 52, scope: !7)
!24 = !DILocation(line: 35, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 25, scope: !7)
!27 = !DILocation(line: 40, column: 18, scope: !7)
!28 = !DILocation(line: 41, column: 18, scope: !7)
!29 = !DILocation(line: 42, column: 18, scope: !7)
!30 = !DILocation(line: 44, column: 35, scope: !7)
!31 = !DILocation(line: 267, column: 36, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!34 = !DILocation(line: 45, column: 26, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !34)
!36 = distinct !DILexicalBlockFile(scope: !32, file: !33, discriminator: 0)
!37 = !DILocation(line: 46, column: 27, scope: !7)
!38 = !DILocation(line: 47, column: 4, scope: !7)
!39 = !DILocation(line: 48, column: 28, scope: !7)
!40 = !DILocation(line: 48, column: 40, scope: !7)
!41 = !DILocation(line: 48, column: 4, scope: !7)
