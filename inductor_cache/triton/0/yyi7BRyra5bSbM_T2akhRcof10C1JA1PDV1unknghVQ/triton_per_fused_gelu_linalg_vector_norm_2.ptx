//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_gelu_linalg_vector_norm_2 // -- Begin function triton_per_fused_gelu_linalg_vector_norm_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_gelu_linalg_vector_norm_2
.visible .entry triton_per_fused_gelu_linalg_vector_norm_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_linalg_vector_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_gelu_linalg_vector_norm_2_param_1,
	.param .u32 triton_per_fused_gelu_linalg_vector_norm_2_param_2,
	.param .u32 triton_per_fused_gelu_linalg_vector_norm_2_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<94>;
	.reg .f32 	%f<250>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_gelu_linalg_vector_norm_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:23:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:23:33
	shl.b32 	%r1, %r8, 5;
	.loc	1 24 44                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r17, %r2, 2;
	and.b32  	%r4, %r17, 28;
	.loc	1 24 23                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:23
	or.b32  	%r6, %r1, %r4;
	.loc	1 25 21                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:25:21
	setp.lt.s32 	%p1, %r6, 64;
	.loc	1 31 19                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:31:19
	shr.s32 	%r19, %r6, 31;
	shr.u32 	%r20, %r19, 28;
	add.s32 	%r21, %r6, %r20;
	.loc	1 30 19                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:30:19
	and.b32  	%r22, %r21, -16;
	sub.s32 	%r23, %r6, %r22;
	.loc	1 33 38                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:38
	shl.b32 	%r24, %r2, 1;
	and.b32  	%r25, %r24, 240;
	.loc	1 33 35                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:35
	add.s32 	%r26, %r23, %r25;
	.loc	1 33 47                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:47
	shl.b32 	%r27, %r21, 4;
	and.b32  	%r28, %r27, -256;
	.loc	1 33 43                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:43
	add.s32 	%r29, %r26, %r28;
	.loc	1 33 30                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:30
	mul.wide.s32 	%rd4, %r29, 4;
	add.s64 	%rd2, %rd3, %rd4;
	mov.b32 	%r13, 0;
	.loc	1 33 52                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:33:52
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r9, %r13;
	@!%p1 mov.u32 %r10, %r13;
	@!%p1 mov.u32 %r11, %r13;
	@!%p1 mov.u32 %r12, %r13;
	// end inline asm
	mov.b32 	%f68, %r9;
	mov.b32 	%f69, %r10;
	.loc	1 37 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:37:18
	mul.f32 	%f5, %f68, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	abs.ftz.f32 	%f9, %f5;
	setp.ge.f32 	%p6, %f9, 0f3F8060FE;
	mov.f32 	%f220, 0f3789CA3C;
	mov.f32 	%f219, 0fB9F560B9;
	mov.f32 	%f218, 0f3BAC840B;
	mov.f32 	%f217, 0fBD0C8162;
	mov.f32 	%f216, 0f3E1CF906;
	mov.f32 	%f215, 0f3F6A937E;
	mov.f32 	%f214, 0f3F20D842;
	mov.f32 	%f221, %f9;
	@%p6 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 25                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:25
	mov.f32 	%f220, 0f38B1E96A;
	mov.f32 	%f219, 0fBA574D20;
	mov.f32 	%f218, 0f3BAAD5EA;
	mov.f32 	%f217, 0fBCDC1BE7;
	mov.f32 	%f216, 0f3DE718AF;
	mov.f32 	%f215, 0fBEC093AC;
	mov.f32 	%f214, 0f3E0375D3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	mul.f32 	%f221, %f5, %f5;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mul.f32 	%f6, %f69, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p7, %f9, 0f3F8060FE;
	fma.rn.ftz.f32 	%f79, %f220, %f221, %f219;
	fma.rn.ftz.f32 	%f80, %f79, %f221, %f218;
	fma.rn.ftz.f32 	%f81, %f80, %f221, %f217;
	fma.rn.ftz.f32 	%f82, %f81, %f221, %f216;
	fma.rn.ftz.f32 	%f83, %f82, %f221, %f215;
	fma.rn.ftz.f32 	%f84, %f83, %f221, %f214;
	neg.f32 	%f85, %f221;
	selp.f32 	%f86, %f85, %f5, %p6;
	fma.rn.ftz.f32 	%f222, %f84, %f86, %f86;
	mov.f32 	%f213, 0f3F800000;
	@%p7 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f87, %f222;
	sub.f32 	%f89, %f213, %f87;
	mov.b32 	%r30, %f89;
	mov.b32 	%r31, %f5;
	and.b32  	%r32, %r31, -2147483648;
	or.b32  	%r33, %r32, %r30;
	mov.b32 	%f222, %r33;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mov.b32 	%f70, %r11;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	abs.ftz.f32 	%f22, %f6;
	setp.ge.f32 	%p9, %f22, 0f3F8060FE;
	mov.f32 	%f229, 0f3789CA3C;
	mov.f32 	%f228, 0fB9F560B9;
	mov.f32 	%f227, 0f3BAC840B;
	mov.f32 	%f226, 0fBD0C8162;
	mov.f32 	%f225, 0f3E1CF906;
	mov.f32 	%f224, 0f3F6A937E;
	mov.f32 	%f223, 0f3F20D842;
	mov.f32 	%f230, %f22;
	@%p9 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f230, %f6, %f6;
	mov.f32 	%f229, 0f38B1E96A;
	mov.f32 	%f228, 0fBA574D20;
	mov.f32 	%f227, 0f3BAAD5EA;
	mov.f32 	%f226, 0fBCDC1BE7;
	mov.f32 	%f225, 0f3DE718AF;
	mov.f32 	%f224, 0fBEC093AC;
	mov.f32 	%f223, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i7
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mul.f32 	%f7, %f70, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p10, %f22, 0f3F8060FE;
	fma.rn.ftz.f32 	%f104, %f229, %f230, %f228;
	fma.rn.ftz.f32 	%f105, %f104, %f230, %f227;
	fma.rn.ftz.f32 	%f106, %f105, %f230, %f226;
	fma.rn.ftz.f32 	%f107, %f106, %f230, %f225;
	fma.rn.ftz.f32 	%f108, %f107, %f230, %f224;
	fma.rn.ftz.f32 	%f109, %f108, %f230, %f223;
	neg.f32 	%f110, %f230;
	selp.f32 	%f111, %f110, %f6, %p9;
	fma.rn.ftz.f32 	%f231, %f109, %f111, %f111;
	@%p10 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f112, %f231;
	sub.f32 	%f114, %f213, %f112;
	mov.b32 	%r34, %f114;
	mov.b32 	%r35, %f6;
	and.b32  	%r36, %r35, -2147483648;
	or.b32  	%r37, %r36, %r34;
	mov.b32 	%f231, %r37;
$L__BB0_8:                              // %__nv_erff.exit26
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mov.b32 	%f71, %r12;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	abs.ftz.f32 	%f35, %f7;
	setp.ge.f32 	%p12, %f35, 0f3F8060FE;
	mov.f32 	%f238, 0f3789CA3C;
	mov.f32 	%f237, 0fB9F560B9;
	mov.f32 	%f236, 0f3BAC840B;
	mov.f32 	%f235, 0fBD0C8162;
	mov.f32 	%f234, 0f3E1CF906;
	mov.f32 	%f233, 0f3F6A937E;
	mov.f32 	%f232, 0f3F20D842;
	mov.f32 	%f239, %f35;
	@%p12 bra 	$L__BB0_10;
// %bb.9:
	mul.f32 	%f239, %f7, %f7;
	mov.f32 	%f238, 0f38B1E96A;
	mov.f32 	%f237, 0fBA574D20;
	mov.f32 	%f236, 0f3BAAD5EA;
	mov.f32 	%f235, 0fBCDC1BE7;
	mov.f32 	%f234, 0f3DE718AF;
	mov.f32 	%f233, 0fBEC093AC;
	mov.f32 	%f232, 0f3E0375D3;
$L__BB0_10:                             // %__internal_fmad.exit.i29
	.loc	1 0 0                           // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:0
	mul.f32 	%f8, %f71, 0f3F3504F3;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p13, %f35, 0f3F8060FE;
	fma.rn.ftz.f32 	%f129, %f238, %f239, %f237;
	fma.rn.ftz.f32 	%f130, %f129, %f239, %f236;
	fma.rn.ftz.f32 	%f131, %f130, %f239, %f235;
	fma.rn.ftz.f32 	%f132, %f131, %f239, %f234;
	fma.rn.ftz.f32 	%f133, %f132, %f239, %f233;
	fma.rn.ftz.f32 	%f134, %f133, %f239, %f232;
	neg.f32 	%f135, %f239;
	selp.f32 	%f136, %f135, %f7, %p12;
	fma.rn.ftz.f32 	%f240, %f134, %f136, %f136;
	@%p13 bra 	$L__BB0_12;
// %bb.11:
	ex2.approx.ftz.f32 	%f137, %f240;
	sub.f32 	%f139, %f213, %f137;
	mov.b32 	%r38, %f139;
	mov.b32 	%r39, %f7;
	and.b32  	%r40, %r39, -2147483648;
	or.b32  	%r41, %r40, %r38;
	mov.b32 	%f240, %r41;
$L__BB0_12:                             // %__nv_erff.exit48
	abs.ftz.f32 	%f48, %f8;
	setp.ge.f32 	%p15, %f48, 0f3F8060FE;
	mov.f32 	%f247, 0f3789CA3C;
	mov.f32 	%f246, 0fB9F560B9;
	mov.f32 	%f245, 0f3BAC840B;
	mov.f32 	%f244, 0fBD0C8162;
	mov.f32 	%f243, 0f3E1CF906;
	mov.f32 	%f242, 0f3F6A937E;
	mov.f32 	%f241, 0f3F20D842;
	mov.f32 	%f248, %f48;
	@%p15 bra 	$L__BB0_14;
// %bb.13:
	mul.f32 	%f248, %f8, %f8;
	mov.f32 	%f247, 0f38B1E96A;
	mov.f32 	%f246, 0fBA574D20;
	mov.f32 	%f245, 0f3BAAD5EA;
	mov.f32 	%f244, 0fBCDC1BE7;
	mov.f32 	%f243, 0f3DE718AF;
	mov.f32 	%f242, 0fBEC093AC;
	mov.f32 	%f241, 0f3E0375D3;
$L__BB0_14:                             // %__internal_fmad.exit.i51
	.loc	1 0 25                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:0:25
	ld.param.u64 	%rd1, [triton_per_fused_gelu_linalg_vector_norm_2_param_0];
	and.b32  	%r3, %r2, 24;
	and.b32  	%r5, %r2, 31;
	shr.u32 	%r7, %r2, 5;
	mul.f32 	%f1, %f68, 0f3F000000;
	mul.f32 	%f2, %f69, 0f3F000000;
	mul.f32 	%f3, %f70, 0f3F000000;
	mul.f32 	%f4, %f71, 0f3F000000;
	.loc	1 38 25                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:38:25
	setp.ltu.f32 	%p16, %f48, 0f3F8060FE;
	fma.rn.ftz.f32 	%f154, %f247, %f248, %f246;
	fma.rn.ftz.f32 	%f155, %f154, %f248, %f245;
	fma.rn.ftz.f32 	%f156, %f155, %f248, %f244;
	fma.rn.ftz.f32 	%f157, %f156, %f248, %f243;
	fma.rn.ftz.f32 	%f158, %f157, %f248, %f242;
	fma.rn.ftz.f32 	%f159, %f158, %f248, %f241;
	neg.f32 	%f160, %f248;
	selp.f32 	%f161, %f160, %f8, %p15;
	fma.rn.ftz.f32 	%f249, %f159, %f161, %f161;
	@%p16 bra 	$L__BB0_16;
// %bb.15:
	ex2.approx.ftz.f32 	%f162, %f249;
	sub.f32 	%f164, %f213, %f162;
	mov.b32 	%r42, %f164;
	mov.b32 	%r43, %f8;
	and.b32  	%r44, %r43, -2147483648;
	or.b32  	%r45, %r44, %r42;
	mov.b32 	%f249, %r45;
$L__BB0_16:                             // %__nv_erff.exit70
	.loc	1 40 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:40:18
	add.f32 	%f165, %f222, 0f3F800000;
	add.f32 	%f166, %f231, 0f3F800000;
	add.f32 	%f167, %f240, 0f3F800000;
	add.f32 	%f168, %f249, 0f3F800000;
	.loc	1 41 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:41:18
	mul.f32 	%f169, %f1, %f165;
	mul.f32 	%f170, %f2, %f166;
	mul.f32 	%f171, %f3, %f167;
	mul.f32 	%f172, %f4, %f168;
	.loc	1 42 18                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:42:18
	mul.f32 	%f173, %f169, %f169;
	mul.f32 	%f174, %f170, %f170;
	mul.f32 	%f175, %f171, %f171;
	mul.f32 	%f176, %f172, %f172;
	.loc	1 44 35                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:44:35
	selp.f32 	%f177, %f173, 0f00000000, %p1;
	selp.f32 	%f178, %f174, 0f00000000, %p1;
	selp.f32 	%f179, %f175, 0f00000000, %p1;
	selp.f32 	%f180, %f176, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f177;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f181, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f182, %f177, %f181;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f182;
	shfl.sync.bfly.b32	%r67, %r66, 8, 31, -1;
	mov.b32 	%f183, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f178;
	shfl.sync.bfly.b32	%r69, %r68, 16, 31, -1;
	mov.b32 	%f185, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f178, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f186;
	shfl.sync.bfly.b32	%r71, %r70, 8, 31, -1;
	mov.b32 	%f187, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f186, %f187;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f179;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f189, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f190, %f179, %f189;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f190;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f191, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f192, %f190, %f191;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f180;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f193, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f194, %f180, %f193;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f194;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f195, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f196, %f194, %f195;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p18, %r3, 0;
	and.b32  	%r80, %r7, 3;
	shl.b32 	%r81, %r80, 2;
	shl.b32 	%r82, %r4, 4;
	or.b32  	%r83, %r82, %r81;
	mov.u32 	%r84, global_smem;
	add.s32 	%r46, %r84, %r83;
	mov.b32 	%r47, %f184;
	// begin inline asm
	@%p18 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r46, 16;
	mov.b32 	%r49, %f188;
	// begin inline asm
	@%p18 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r46, 32;
	mov.b32 	%r51, %f192;
	// begin inline asm
	@%p18 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r46, 48;
	mov.b32 	%r53, %f196;
	// begin inline asm
	@%p18 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r2, 128;
	add.s32 	%r55, %r84, %r17;
	// begin inline asm
	@%p22 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f197, %r54;
	shfl.sync.bfly.b32	%r86, %r54, 2, 31, -1;
	mov.b32 	%f198, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f199, %f197, %f198;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f199;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f200, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f201, %f199, %f200;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r89, %r2, 3;
	setp.eq.s32 	%p27, %r89, 0;
	and.pred  	%p23, %p22, %p27;
	mov.b32 	%r57, %f201;
	// begin inline asm
	@%p23 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r90, %r84, %r82;
	ld.shared.u32 	%r59, [%r90];
	ld.shared.u32 	%r60, [%r90+16];
	ld.shared.u32 	%r61, [%r90+32];
	ld.shared.u32 	%r62, [%r90+48];
$L__tmp2:
	.loc	1 46 27                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:46:27
	bar.sync 	0;
	mad.lo.s32 	%r58, %r4, -12, %r90;
	mov.pred 	%p24, -1;
	// begin inline asm
	@%p24 st.shared.v4.b32 [ %r58 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r91, %r5, 2;
	add.s32 	%r92, %r84, %r91;
	ld.shared.f32 	%f202, [%r92];
	sqrt.approx.ftz.f32 	%f203, %f202;
	.loc	1 24 23                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:24:23
	or.b32  	%r93, %r1, %r5;
	.loc	1 25 21                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:25:21
	setp.lt.s32 	%p28, %r93, 64;
	.loc	1 47 4                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:47:4
	bar.sync 	0;
	.loc	1 48 28                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:28
	mul.wide.s32 	%rd6, %r93, 4;
	add.s64 	%rd5, %rd1, %rd6;
	.loc	1 48 40                         // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:40
	setp.eq.s32 	%p29, %r80, 0;
	mov.b32 	%r63, %f203;
	and.pred  	%p25, %p29, %p28;
	// begin inline asm
	@%p25 st.global.b32 [ %rd5 + 0 ], { %r63 };
	// end inline asm
	.loc	1 48 4                          // cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py:48:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mk/cmk7rwlkwy2ukinbkuo76hxzppq4vh7hi3zrg5hv2wo5ozgal4eu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 107
.b8 55
.b8 114
.b8 119
.b8 108
.b8 107
.b8 119
.b8 121
.b8 50
.b8 117
.b8 107
.b8 105
.b8 110
.b8 98
.b8 107
.b8 117
.b8 111
.b8 55
.b8 54
.b8 104
.b8 120
.b8 122
.b8 112
.b8 112
.b8 113
.b8 52
.b8 118
.b8 104
.b8 55
.b8 104
.b8 105
.b8 51
.b8 122
.b8 114
.b8 103
.b8 53
.b8 104
.b8 118
.b8 50
.b8 119
.b8 111
.b8 53
.b8 111
.b8 122
.b8 103
.b8 97
.b8 108
.b8 52
.b8 101
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
