//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_mul_rsub_sum_0 // -- Begin function triton_per_fused__to_copy_mul_rsub_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_mul_rsub_sum_0
.visible .entry triton_per_fused__to_copy_mul_rsub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_mul_rsub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_mul_rsub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_mul_rsub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_mul_rsub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_mul_rsub_sum_0_param_4,
	.param .u32 triton_per_fused__to_copy_mul_rsub_sum_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<44>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_mul_rsub_sum_0_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_mul_rsub_sum_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:27:26
	mov.u32 	%r18, %tid.x;
	and.b32  	%r19, %r18, 31;
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_mul_rsub_sum_0_param_2];
	ld.param.u64 	%rd9, [triton_per_fused__to_copy_mul_rsub_sum_0_param_3];
	shl.b32 	%r20, %r18, 2;
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_mul_rsub_sum_0_param_4];
	and.b32  	%r21, %r20, 252;
	.loc	1 31 30                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:31:30
	cvt.u64.u32 	%rd10, %r21;
	mul.wide.u32 	%rd11, %r21, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:32:30
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 32 35                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 35                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:31:35
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r4;
	.loc	1 32 35                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:32:35
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r6;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r8;
	.loc	1 33 18                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:33:18
	mul.f32 	%f9, %f4, %f8;
	mul.f32 	%f10, %f3, %f7;
	mul.f32 	%f11, %f2, %f6;
	mul.f32 	%f12, %f1, %f5;
	.loc	1 34 19                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:34:19
	cvt.rzi.s16.f32 	%rs1, %f12;
	and.b16  	%rs2, %rs1, 255;
	cvt.rzi.s16.f32 	%rs3, %f11;
	and.b16  	%rs4, %rs3, 255;
	cvt.rzi.s16.f32 	%rs5, %f10;
	and.b16  	%rs6, %rs5, 255;
	cvt.rzi.s16.f32 	%rs7, %f9;
	and.b16  	%rs8, %rs7, 255;
	mov.f32 	%f13, 0f3F800000;
	.loc	1 36 18                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:36:18
	sub.f32 	%f14, %f13, %f4;
	sub.f32 	%f15, %f13, %f3;
	sub.f32 	%f16, %f13, %f2;
	sub.f32 	%f17, %f13, %f1;
	.loc	1 37 18                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:37:18
	mul.f32 	%f18, %f17, %f5;
	mul.f32 	%f19, %f16, %f6;
	mul.f32 	%f20, %f15, %f7;
	mul.f32 	%f21, %f14, %f8;
	.loc	1 38 19                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:38:19
	cvt.rzi.s16.f32 	%rs9, %f21;
	cvt.rzi.s16.f32 	%rs10, %f20;
	mov.b32 	%r22, {%rs10, %rs9};
	mov.b32 	{%rs11, %rs12}, %r22;
	cvt.u32.u16 	%r23, %rs12;
	cvt.u32.u16 	%r24, %rs11;
	prmt.b32 	%r25, %r24, %r23, 0x3340U;
	cvt.rzi.s16.f32 	%rs13, %f19;
	cvt.rzi.s16.f32 	%rs14, %f18;
	mov.b32 	%r26, {%rs14, %rs13};
	mov.b32 	{%rs15, %rs16}, %r26;
	cvt.u32.u16 	%r27, %rs16;
	cvt.u32.u16 	%r28, %rs15;
	prmt.b32 	%r29, %r28, %r27, 0x3340U;
	prmt.b32 	%r30, %r29, %r25, 0x5410U;
	.loc	1 39 19                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:39:19
	cvt.rn.f32.u16 	%f22, %rs2;
	cvt.rn.f32.u16 	%f23, %rs4;
	cvt.rn.f32.u16 	%f24, %rs6;
	cvt.rn.f32.u16 	%f25, %rs8;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f22, %f23;
	add.f32 	%f27, %f26, %f24;
	add.f32 	%f28, %f27, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f28;
	shfl.sync.bfly.b32	%r32, %r31, 16, 31, -1;
	mov.b32 	%f29, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f30;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f31, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f32;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f33, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f34;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f35, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f36;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f37, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r19, 0;
	shr.u32 	%r41, %r18, 3;
	and.b32  	%r42, %r41, 4;
	mov.u32 	%r43, global_smem;
	add.s32 	%r9, %r43, %r42;
	mov.b32 	%r10, %f38;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r18, 2;
	add.s32 	%r12, %r43, %r20;
	// begin inline asm
	@%p4 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r11;
	shfl.sync.bfly.b32	%r44, %r11, 1, 31, -1;
	mov.b32 	%f40, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r45, %r18, 1;
	setp.eq.b32 	%p9, %r45, 1;
	not.pred 	%p10, %p9;
	and.pred  	%p5, %p4, %p10;
	mov.b32 	%r14, %f41;
	// begin inline asm
	@%p5 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f42, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f43, %f42, 0f00000000;
$L__tmp3:
	.loc	1 42 25                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:42:25
	add.s64 	%rd3, %rd8, %rd10;
	.loc	1 42 63                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:42:63
	cvt.u32.u16 	%r46, %rs7;
	cvt.u32.u16 	%r47, %rs5;
	prmt.b32 	%r48, %r47, %r46, 0x3340U;
	cvt.u32.u16 	%r49, %rs3;
	cvt.u32.u16 	%r50, %rs1;
	prmt.b32 	%r51, %r50, %r49, 0x3340U;
	prmt.b32 	%r52, %r51, %r48, 0x5410U;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r52 };
	// end inline asm
	.loc	1 43 25                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:43:25
	add.s64 	%rd4, %rd9, %rd10;
	.loc	1 43 63                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:43:63
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r30 };
	// end inline asm
	.loc	1 44 60                         // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:44:60
	and.b32  	%r53, %r18, 63;
	setp.eq.s32 	%p8, %r53, 0;
	mov.b32 	%r17, %f43;
	// begin inline asm
	@%p8 st.global.b32 [ %rd5 + 0 ], { %r17 };
	// end inline asm
	.loc	1 44 4                          // cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py:44:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/z3/cz3jdqzmfazfaoicv5rjdo6y77edjrtbxzkweakaesomfo7smmfa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 209                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xca DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 51
.b8 106
.b8 100
.b8 113
.b8 122
.b8 109
.b8 102
.b8 97
.b8 122
.b8 102
.b8 97
.b8 111
.b8 105
.b8 99
.b8 118
.b8 53
.b8 114
.b8 106
.b8 100
.b8 111
.b8 54
.b8 121
.b8 55
.b8 55
.b8 101
.b8 100
.b8 106
.b8 114
.b8 116
.b8 98
.b8 120
.b8 122
.b8 107
.b8 119
.b8 101
.b8 97
.b8 107
.b8 97
.b8 101
.b8 115
.b8 111
.b8 109
.b8 102
.b8 111
.b8 55
.b8 115
.b8 109
.b8 109
.b8 102
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 58                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
