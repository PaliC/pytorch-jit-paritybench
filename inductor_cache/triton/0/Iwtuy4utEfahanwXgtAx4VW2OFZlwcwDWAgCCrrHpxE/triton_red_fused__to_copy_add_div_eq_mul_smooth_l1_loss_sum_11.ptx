//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11 // -- Begin function triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_5[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_5[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_5[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 54, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_4[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_4[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_4[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 56, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 55, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 55, 99, 47, 99, 55, 99, 101, 121, 100, 54, 102, 108, 52, 119, 50, 110, 108, 102, 116, 99, 121, 111, 105, 113, 101, 50, 113, 110, 107, 105, 105, 121, 100, 99, 51, 109, 119, 115, 109, 104, 102, 113, 119, 100, 53, 55, 111, 107, 114, 98, 107, 113, 117, 50, 101, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11
.visible .entry triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11(
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_8,
	.param .u32 triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<165>;
	.reg .b32 	%r<244>;
	.reg .f32 	%f<152>;
	.reg .b64 	%rd<299>;
	.loc	1 19 0                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:19:0

// %bb.0:
	ld.param.u64 	%rd54, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_0];
$L__tmp0:
	.loc	1 25 33                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:25:33
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 63;
	ld.param.u64 	%rd55, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_2];
	or.b32  	%r106, %r2, 64;
	or.b32  	%r107, %r2, 128;
	or.b32  	%r108, %r2, 192;
	ld.param.u64 	%rd56, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_5];
	shl.b32 	%r3, %r1, 2;
	ld.param.u64 	%rd57, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_6];
	and.b32  	%r4, %r3, 252;
	ld.param.u64 	%rd58, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_7];
	.loc	1 31 23                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:31:23
	bfe.u32 	%r109, %r1, 4, 2;
	shr.u32 	%r110, %r106, 4;
	shr.u32 	%r111, %r107, 4;
	shr.u32 	%r112, %r108, 4;
	.loc	1 36 34                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:36:34
	mul.wide.u32 	%rd59, %r109, 8;
	add.s64 	%rd43, %rd55, %rd59;
	mul.wide.u32 	%rd60, %r110, 8;
	add.s64 	%rd45, %rd55, %rd60;
	mul.wide.u32 	%rd61, %r111, 8;
	add.s64 	%rd47, %rd55, %rd61;
	mul.wide.u32 	%rd62, %r112, 8;
	add.s64 	%rd49, %rd55, %rd62;
	mov.pred 	%p44, -1;
	.loc	1 36 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:36:39
	// begin inline asm
	mov.u64 %rd42, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd42 }, [ %rd43 + 0 ];
	@!%p44 mov.u64 %rd42, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd44, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd44 }, [ %rd45 + 0 ];
	@!%p44 mov.u64 %rd44, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd46, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd46 }, [ %rd47 + 0 ];
	@!%p44 mov.u64 %rd46, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd48, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd48 }, [ %rd49 + 0 ];
	@!%p44 mov.u64 %rd48, 0x0;
	// end inline asm
	.loc	1 37 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:37:35
	mul.wide.u32 	%rd63, %r4, 4;
	add.s64 	%rd50, %rd56, %rd63;
	mov.b32 	%r97, 0;
	.loc	1 37 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:37:40
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p44 ld.global.L1::evict_first.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd50 + 0 ];
	@!%p44 mov.u32 %r42, %r97;
	@!%p44 mov.u32 %r43, %r97;
	@!%p44 mov.u32 %r44, %r97;
	@!%p44 mov.u32 %r45, %r97;
	// end inline asm
	shl.b32 	%r113, %r4, 3;
	mov.u32 	%r114, global_smem;
	add.s32 	%r98, %r114, %r113;
	// begin inline asm
	@%p44 st.shared.b32 [ %r98 + 0 ], %r42;
	// end inline asm
	add.s32 	%r52, %r98, 8;
	// begin inline asm
	@%p44 st.shared.b32 [ %r52 + 0 ], %r43;
	// end inline asm
	add.s32 	%r54, %r98, 16;
	// begin inline asm
	@%p44 st.shared.b32 [ %r54 + 0 ], %r44;
	// end inline asm
	add.s32 	%r56, %r98, 24;
	// begin inline asm
	@%p44 st.shared.b32 [ %r56 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r115, %r2, 3;
	add.s32 	%r7, %r114, %r115;
	ld.shared.f32 	%f1, [%r7];
	shl.b32 	%r116, %r106, 3;
	add.s32 	%r117, %r114, %r116;
	ld.shared.f32 	%f2, [%r117];
	shl.b32 	%r118, %r107, 3;
	add.s32 	%r119, %r114, %r118;
	ld.shared.f32 	%f3, [%r119];
	shl.b32 	%r120, %r108, 3;
	add.s32 	%r121, %r114, %r120;
	ld.shared.f32 	%f4, [%r121];
	.loc	1 38 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:38:39
	add.s64 	%rd51, %rd54, %rd63;
	.loc	1 38 44                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:38:44
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p44 ld.global.L1::evict_first.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd51 + 0 ];
	@!%p44 mov.u32 %r58, %r97;
	@!%p44 mov.u32 %r59, %r97;
	@!%p44 mov.u32 %r60, %r97;
	@!%p44 mov.u32 %r61, %r97;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b32 [ %r98 + 0 ], %r58;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r52 + 0 ], %r59;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r54 + 0 ], %r60;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r56 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r7];
	ld.shared.f32 	%f6, [%r117];
	ld.shared.f32 	%f7, [%r119];
	ld.shared.f32 	%f8, [%r121];
	.loc	1 39 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:39:35
	add.s64 	%rd52, %rd57, %rd63;
	.loc	1 39 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:39:40
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p44 ld.global.L1::evict_first.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd52 + 0 ];
	@!%p44 mov.u32 %r74, %r97;
	@!%p44 mov.u32 %r75, %r97;
	@!%p44 mov.u32 %r76, %r97;
	@!%p44 mov.u32 %r77, %r97;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b32 [ %r98 + 0 ], %r74;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r52 + 0 ], %r75;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r54 + 0 ], %r76;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r56 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r7];
	ld.shared.f32 	%f10, [%r117];
	ld.shared.f32 	%f11, [%r119];
	ld.shared.f32 	%f12, [%r121];
	.loc	1 41 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:41:35
	add.s64 	%rd53, %rd58, %rd63;
	.loc	1 41 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:41:40
	// begin inline asm
	mov.u32 %r90, 0x0;
	mov.u32 %r91, 0x0;
	mov.u32 %r92, 0x0;
	mov.u32 %r93, 0x0;
	@%p44 ld.global.L1::evict_first.v4.b32 { %r90, %r91, %r92, %r93 }, [ %rd53 + 0 ];
	@!%p44 mov.u32 %r90, %r97;
	@!%p44 mov.u32 %r91, %r97;
	@!%p44 mov.u32 %r92, %r97;
	@!%p44 mov.u32 %r93, %r97;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b32 [ %r98 + 0 ], %r90;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r52 + 0 ], %r91;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r54 + 0 ], %r92;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b32 [ %r56 + 0 ], %r93;
	// end inline asm
	bar.sync 	0;
	.loc	1 45 36                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:45:36
	shr.u64 	%rd64, %rd42, 61;
	shr.u64 	%rd65, %rd48, 61;
	shr.u64 	%rd66, %rd44, 61;
	shr.u64 	%rd67, %rd46, 61;
	and.b64  	%rd68, %rd67, 4;
	and.b64  	%rd69, %rd66, 4;
	and.b64  	%rd70, %rd65, 4;
	and.b64  	%rd71, %rd64, 4;
	add.s64 	%rd2, %rd71, %rd42;
	add.s64 	%rd4, %rd70, %rd48;
	add.s64 	%rd1, %rd69, %rd44;
	add.s64 	%rd3, %rd68, %rd46;
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	or.b64  	%rd72, %rd1, %rd3;
	or.b64  	%rd73, %rd2, %rd4;
	or.b64  	%rd74, %rd72, %rd73;
	setp.lt.u64 	%p45, %rd74, 4;
	@%p45 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 64                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:64
	ld.param.u64 	%rd39, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_3];
	ld.shared.f32 	%f13, [%r7];
	ld.shared.f32 	%f14, [%r117];
	ld.shared.f32 	%f15, [%r119];
	ld.shared.f32 	%f16, [%r121];
	.loc	1 32 30                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:32:30
	bfe.u32 	%r122, %r1, 2, 2;
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	bar.sync 	0;
	.loc	1 47 41                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:41
	shl.b64 	%rd6, %rd2, 2;
	shl.b64 	%rd8, %rd1, 2;
	shl.b64 	%rd10, %rd3, 2;
	shl.b64 	%rd12, %rd4, 2;
	.loc	1 47 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:39
	cvt.u64.u32 	%rd13, %r122;
	or.b64  	%rd89, %rd6, %rd13;
	or.b64  	%rd90, %rd8, %rd13;
	or.b64  	%rd91, %rd10, %rd13;
	.loc	1 47 48                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:48
	or.b64  	%rd92, %rd12, %rd13;
	.loc	1 47 34                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:34
	shl.b64 	%rd93, %rd89, 3;
	add.s64 	%rd82, %rd39, %rd93;
	shl.b64 	%rd94, %rd90, 3;
	add.s64 	%rd95, %rd39, %rd94;
	add.s64 	%rd84, %rd95, 128;
	shl.b64 	%rd96, %rd91, 3;
	add.s64 	%rd97, %rd39, %rd96;
	add.s64 	%rd86, %rd97, 256;
	shl.b64 	%rd98, %rd92, 3;
	add.s64 	%rd99, %rd39, %rd98;
	add.s64 	%rd88, %rd99, 384;
	.loc	1 47 56                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:47:56
	// begin inline asm
	mov.u64 %rd81, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd81 }, [ %rd82 + 0 ];
	@!%p44 mov.u64 %rd81, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd83, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd83 }, [ %rd84 + 0 ];
	@!%p44 mov.u64 %rd83, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd85, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd85 }, [ %rd86 + 0 ];
	@!%p44 mov.u64 %rd85, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd87, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd87 }, [ %rd88 + 0 ];
	@!%p44 mov.u64 %rd87, 0x0;
	// end inline asm
	.loc	1 50 36                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:50:36
	shr.u64 	%rd100, %rd81, 61;
	shr.u64 	%rd101, %rd87, 61;
	shr.u64 	%rd102, %rd83, 61;
	shr.u64 	%rd103, %rd85, 61;
	and.b64  	%rd104, %rd103, 4;
	and.b64  	%rd105, %rd102, 4;
	and.b64  	%rd106, %rd101, 4;
	and.b64  	%rd107, %rd100, 4;
	add.s64 	%rd16, %rd107, %rd81;
	add.s64 	%rd18, %rd106, %rd87;
	add.s64 	%rd15, %rd105, %rd83;
	add.s64 	%rd17, %rd104, %rd85;
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	or.b64  	%rd108, %rd15, %rd17;
	or.b64  	%rd109, %rd16, %rd18;
	or.b64  	%rd110, %rd108, %rd109;
	setp.lt.u64 	%p54, %rd110, 4;
	@%p54 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 64                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:64
	ld.param.u64 	%rd40, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_4];
	and.b32  	%r5, %r1, 3;
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	bar.sync 	0;
	.loc	1 52 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:35
	add.s64 	%rd117, %rd40, %rd6;
	add.s64 	%rd137, %rd40, %rd8;
	add.s64 	%rd118, %rd137, 16;
	add.s64 	%rd139, %rd40, %rd10;
	add.s64 	%rd119, %rd139, 32;
	add.s64 	%rd141, %rd40, %rd12;
	add.s64 	%rd120, %rd141, 48;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	// begin inline asm
	mov.u32 %r123, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r123 }, [ %rd117 + 0 ];
	@!%p44 mov.u32 %r123, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r125, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r125 }, [ %rd118 + 0 ];
	@!%p44 mov.u32 %r125, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r127, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r127 }, [ %rd119 + 0 ];
	@!%p44 mov.u32 %r127, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r129, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r129 }, [ %rd120 + 0 ];
	@!%p44 mov.u32 %r129, %r97;
	// end inline asm
	.loc	1 53 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:35
	shl.b64 	%rd142, %rd16, 2;
	add.s64 	%rd121, %rd40, %rd142;
	shl.b64 	%rd143, %rd15, 2;
	add.s64 	%rd144, %rd40, %rd143;
	add.s64 	%rd122, %rd144, 16;
	shl.b64 	%rd145, %rd17, 2;
	add.s64 	%rd146, %rd40, %rd145;
	add.s64 	%rd123, %rd146, 32;
	shl.b64 	%rd147, %rd18, 2;
	add.s64 	%rd148, %rd40, %rd147;
	add.s64 	%rd124, %rd148, 48;
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	// begin inline asm
	mov.u32 %r131, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r131 }, [ %rd121 + 0 ];
	@!%p44 mov.u32 %r131, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r133, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r133 }, [ %rd122 + 0 ];
	@!%p44 mov.u32 %r133, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r135, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r135 }, [ %rd123 + 0 ];
	@!%p44 mov.u32 %r135, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r137, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r137 }, [ %rd124 + 0 ];
	@!%p44 mov.u32 %r137, %r97;
	// end inline asm
	.loc	1 55 40                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:40
	cvt.u64.u32 	%rd24, %r5;
	or.b64  	%rd149, %rd6, %rd24;
	or.b64  	%rd150, %rd8, %rd24;
	or.b64  	%rd151, %rd10, %rd24;
	.loc	1 55 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:49
	or.b64  	%rd152, %rd12, %rd24;
	.loc	1 55 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:35
	shl.b64 	%rd153, %rd149, 3;
	add.s64 	%rd25, %rd39, %rd153;
	shl.b64 	%rd154, %rd150, 3;
	add.s64 	%rd155, %rd39, %rd154;
	add.s64 	%rd126, %rd155, 128;
	shl.b64 	%rd156, %rd151, 3;
	add.s64 	%rd157, %rd39, %rd156;
	add.s64 	%rd127, %rd157, 256;
	shl.b64 	%rd158, %rd152, 3;
	add.s64 	%rd159, %rd39, %rd158;
	add.s64 	%rd128, %rd159, 384;
	.loc	1 55 57                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:55:57
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b64 [ %r7 + 0 ], %rd25;
	// end inline asm
	add.s32 	%r140, %r7, 512;
	// begin inline asm
	@%p44 st.shared.b64 [ %r140 + 0 ], %rd126;
	// end inline asm
	add.s32 	%r141, %r7, 1024;
	// begin inline asm
	@%p44 st.shared.b64 [ %r141 + 0 ], %rd127;
	// end inline asm
	add.s32 	%r142, %r7, 1536;
	// begin inline asm
	@%p44 st.shared.b64 [ %r142 + 0 ], %rd128;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd131, [%r98];
	ld.shared.u64 	%rd134, [%r98+16];
	// begin inline asm
	mov.u64 %rd129, 0x0;
	mov.u64 %rd130, 0x0;
	@%p44 ld.global.L1::evict_last.v2.b64 { %rd129, %rd130 }, [ %rd131 + 0 ];
	@!%p44 mov.u64 %rd129, 0x0;
	@!%p44 mov.u64 %rd130, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd132, 0x0;
	mov.u64 %rd133, 0x0;
	@%p44 ld.global.L1::evict_last.v2.b64 { %rd132, %rd133 }, [ %rd134 + 0 ];
	@!%p44 mov.u64 %rd132, 0x0;
	@!%p44 mov.u64 %rd133, 0x0;
	// end inline asm
	.loc	1 58 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:58:39
	shr.u64 	%rd160, %rd129, 61;
	shr.u64 	%rd161, %rd132, 61;
	shr.u64 	%rd162, %rd130, 61;
	shr.u64 	%rd163, %rd133, 61;
	and.b64  	%rd164, %rd163, 4;
	and.b64  	%rd165, %rd162, 4;
	and.b64  	%rd166, %rd161, 4;
	and.b64  	%rd167, %rd160, 4;
	add.s64 	%rd26, %rd167, %rd129;
	add.s64 	%rd28, %rd166, %rd132;
	add.s64 	%rd27, %rd165, %rd130;
	add.s64 	%rd29, %rd164, %rd133;
	.loc	1 59 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:66
	or.b64  	%rd168, %rd27, %rd29;
	or.b64  	%rd169, %rd26, %rd28;
	or.b64  	%rd170, %rd169, %rd168;
	setp.lt.u64 	%p81, %rd170, 4;
	@%p81 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	.loc	1 0 0                           // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:0
	shl.b32 	%r8, %r106, 1;
	shl.b32 	%r9, %r107, 1;
	shl.b32 	%r10, %r108, 1;
	shr.u32 	%r143, %r3, 4;
	and.b32  	%r144, %r143, 12;
	cvt.u64.u32 	%rd19, %r144;
	.loc	1 59 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:66
	bar.sync 	0;
	.loc	1 60 43                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:43
	or.b64  	%rd193, %rd29, %rd19;
	.loc	1 60 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:35
	shl.b64 	%rd194, %rd26, 2;
	add.s64 	%rd195, %rd40, %rd194;
	shl.b64 	%rd196, %rd19, 2;
	add.s64 	%rd177, %rd195, %rd196;
	shl.b64 	%rd197, %rd27, 2;
	add.s64 	%rd198, %rd40, %rd197;
	add.s64 	%rd178, %rd198, %rd196;
	shl.b64 	%rd199, %rd28, 2;
	add.s64 	%rd200, %rd40, %rd199;
	add.s64 	%rd179, %rd200, %rd196;
	shl.b64 	%rd201, %rd193, 2;
	add.s64 	%rd180, %rd40, %rd201;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	bar.sync 	0;
	add.s32 	%r145, %r98, %r113;
	// begin inline asm
	@%p44 st.shared.b64 [ %r145 + 0 ], %rd177;
	// end inline asm
	add.s32 	%r146, %r145, 16;
	// begin inline asm
	@%p44 st.shared.b64 [ %r146 + 0 ], %rd178;
	// end inline asm
	add.s32 	%r147, %r145, 32;
	// begin inline asm
	@%p44 st.shared.b64 [ %r147 + 0 ], %rd179;
	// end inline asm
	add.s32 	%r148, %r145, 48;
	// begin inline asm
	@%p44 st.shared.b64 [ %r148 + 0 ], %rd180;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r26, %r7, %r115;
	ld.shared.u64 	%rd181, [%r26];
	shl.b32 	%r159, %r8, 3;
	add.s32 	%r27, %r114, %r159;
	ld.shared.u64 	%rd182, [%r27];
	shl.b32 	%r161, %r9, 3;
	add.s32 	%r28, %r114, %r161;
	ld.shared.u64 	%rd183, [%r28];
	shl.b32 	%r162, %r10, 3;
	add.s32 	%r29, %r114, %r162;
	ld.shared.u64 	%rd184, [%r29];
	// begin inline asm
	mov.u32 %r149, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r149 }, [ %rd181 + 0 ];
	@!%p44 mov.u32 %r149, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r151, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r151 }, [ %rd182 + 0 ];
	@!%p44 mov.u32 %r151, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r153, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r153 }, [ %rd183 + 0 ];
	@!%p44 mov.u32 %r153, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r155, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r155 }, [ %rd184 + 0 ];
	@!%p44 mov.u32 %r155, %r97;
	// end inline asm
	.loc	1 71 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:71:66
	bar.sync 	0;
	add.s64 	%rd202, %rd8, %rd13;
	.loc	1 72 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:72:35
	shl.b64 	%rd203, %rd202, 3;
	add.s64 	%rd204, %rd39, %rd203;
	add.s64 	%rd188, %rd204, 128;
	add.s64 	%rd205, %rd10, %rd13;
	shl.b64 	%rd206, %rd205, 3;
	add.s64 	%rd207, %rd39, %rd206;
	add.s64 	%rd190, %rd207, 256;
	add.s64 	%rd208, %rd12, %rd13;
	shl.b64 	%rd209, %rd208, 3;
	add.s64 	%rd210, %rd39, %rd209;
	add.s64 	%rd192, %rd210, 384;
	.loc	1 72 81                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:72:81
	// begin inline asm
	mov.u64 %rd185, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd185 }, [ %rd82 + 0 ];
	@!%p44 mov.u64 %rd185, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd187, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd187 }, [ %rd188 + 0 ];
	@!%p44 mov.u64 %rd187, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd189, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd189 }, [ %rd190 + 0 ];
	@!%p44 mov.u64 %rd189, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd191, 0x0;
	@%p44 ld.global.L1::evict_last.b64 { %rd191 }, [ %rd192 + 0 ];
	@!%p44 mov.u64 %rd191, 0x0;
	// end inline asm
	.loc	1 75 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:75:39
	shr.u64 	%rd211, %rd185, 61;
	shr.u64 	%rd212, %rd191, 61;
	shr.u64 	%rd213, %rd187, 61;
	shr.u64 	%rd214, %rd189, 61;
	and.b64  	%rd215, %rd214, 4;
	and.b64  	%rd216, %rd213, 4;
	and.b64  	%rd217, %rd212, 4;
	and.b64  	%rd218, %rd211, 4;
	add.s64 	%rd31, %rd218, %rd185;
	add.s64 	%rd33, %rd217, %rd191;
	add.s64 	%rd30, %rd216, %rd187;
	add.s64 	%rd32, %rd215, %rd189;
	.loc	1 76 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:76:66
	or.b64  	%rd219, %rd30, %rd32;
	or.b64  	%rd220, %rd31, %rd33;
	or.b64  	%rd221, %rd219, %rd220;
	setp.lt.u64 	%p102, %rd221, 4;
	@%p102 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	bar.sync 	0;
	.loc	1 77 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:77:58
	// begin inline asm
	mov.u32 %r163, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r163 }, [ %rd117 + 0 ];
	@!%p44 mov.u32 %r163, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r165, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r165 }, [ %rd118 + 0 ];
	@!%p44 mov.u32 %r165, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r167, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r167 }, [ %rd119 + 0 ];
	@!%p44 mov.u32 %r167, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r169, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r169 }, [ %rd120 + 0 ];
	@!%p44 mov.u32 %r169, %r97;
	// end inline asm
	.loc	1 78 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:35
	shl.b64 	%rd246, %rd31, 2;
	add.s64 	%rd232, %rd40, %rd246;
	shl.b64 	%rd247, %rd30, 2;
	add.s64 	%rd248, %rd40, %rd247;
	add.s64 	%rd233, %rd248, 16;
	shl.b64 	%rd249, %rd32, 2;
	add.s64 	%rd250, %rd40, %rd249;
	add.s64 	%rd234, %rd250, 32;
	shl.b64 	%rd251, %rd33, 2;
	add.s64 	%rd252, %rd40, %rd251;
	add.s64 	%rd235, %rd252, 48;
	.loc	1 78 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:58
	// begin inline asm
	mov.u32 %r171, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r171 }, [ %rd232 + 0 ];
	@!%p44 mov.u32 %r171, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r173, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r173 }, [ %rd233 + 0 ];
	@!%p44 mov.u32 %r173, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r175, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r175 }, [ %rd234 + 0 ];
	@!%p44 mov.u32 %r175, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r177, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r177 }, [ %rd235 + 0 ];
	@!%p44 mov.u32 %r177, %r97;
	// end inline asm
	add.s64 	%rd253, %rd8, %rd24;
	.loc	1 80 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:80:35
	shl.b64 	%rd254, %rd253, 3;
	add.s64 	%rd255, %rd39, %rd254;
	add.s64 	%rd237, %rd255, 128;
	add.s64 	%rd256, %rd10, %rd24;
	shl.b64 	%rd257, %rd256, 3;
	add.s64 	%rd258, %rd39, %rd257;
	add.s64 	%rd238, %rd258, 256;
	add.s64 	%rd259, %rd12, %rd24;
	shl.b64 	%rd260, %rd259, 3;
	add.s64 	%rd261, %rd39, %rd260;
	add.s64 	%rd239, %rd261, 384;
	.loc	1 80 74                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:80:74
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b64 [ %r7 + 0 ], %rd25;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r140 + 0 ], %rd237;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r141 + 0 ], %rd238;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r142 + 0 ], %rd239;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd242, [%r98];
	ld.shared.u64 	%rd245, [%r98+16];
	// begin inline asm
	mov.u64 %rd240, 0x0;
	mov.u64 %rd241, 0x0;
	@%p44 ld.global.L1::evict_first.v2.b64 { %rd240, %rd241 }, [ %rd242 + 0 ];
	@!%p44 mov.u64 %rd240, 0x0;
	@!%p44 mov.u64 %rd241, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd243, 0x0;
	mov.u64 %rd244, 0x0;
	@%p44 ld.global.L1::evict_first.v2.b64 { %rd243, %rd244 }, [ %rd245 + 0 ];
	@!%p44 mov.u64 %rd243, 0x0;
	@!%p44 mov.u64 %rd244, 0x0;
	// end inline asm
	.loc	1 83 39                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:83:39
	shr.u64 	%rd262, %rd240, 61;
	shr.u64 	%rd263, %rd243, 61;
	shr.u64 	%rd264, %rd241, 61;
	shr.u64 	%rd265, %rd244, 61;
	and.b64  	%rd266, %rd265, 4;
	and.b64  	%rd267, %rd264, 4;
	and.b64  	%rd268, %rd263, 4;
	and.b64  	%rd269, %rd262, 4;
	add.s64 	%rd34, %rd269, %rd240;
	add.s64 	%rd36, %rd268, %rd243;
	add.s64 	%rd35, %rd267, %rd241;
	add.s64 	%rd37, %rd266, %rd244;
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	or.b64  	%rd270, %rd35, %rd37;
	or.b64  	%rd271, %rd34, %rd36;
	or.b64  	%rd272, %rd271, %rd270;
	setp.lt.u64 	%p129, %rd272, 4;
	@%p129 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:
	.loc	1 0 66                          // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:0:66
	ld.param.u64 	%rd288, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_8];
	ld.param.u64 	%rd287, [triton_red_fused__to_copy_add_div_eq_mul_smooth_l1_loss_sum_11_param_1];
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	mov.b32 	%f17, %r169;
	mov.b32 	%f18, %r137;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	mov.b32 	%f19, %r177;
	mov.b32 	%f20, %r129;
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	mov.b32 	%f21, %r167;
	mov.b32 	%f22, %r135;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	mov.b32 	%f23, %r175;
	mov.b32 	%f24, %r127;
	.loc	1 78 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:78:58
	mov.b32 	%f25, %r171;
	mov.b32 	%f26, %r165;
	.loc	1 77 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:77:58
	mov.b32 	%f27, %r163;
	mov.b32 	%f28, %r173;
	.loc	1 53 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:53:49
	mov.b32 	%f29, %r125;
	mov.b32 	%f30, %r131;
	.loc	1 52 49                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:52:49
	mov.b32 	%f31, %r133;
	mov.b32 	%f32, %r123;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	mov.b32 	%f33, %r151;
	mov.b32 	%f34, %r149;
	.loc	1 25 33                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:25:33
	and.b32  	%r216, %r1, 31;
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	bar.sync 	0;
	.loc	1 85 43                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:43
	or.b64  	%rd290, %rd37, %rd19;
	.loc	1 85 35                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:35
	shl.b64 	%rd291, %rd34, 2;
	add.s64 	%rd292, %rd40, %rd291;
	add.s64 	%rd279, %rd292, %rd196;
	shl.b64 	%rd294, %rd35, 2;
	add.s64 	%rd295, %rd40, %rd294;
	add.s64 	%rd280, %rd295, %rd196;
	shl.b64 	%rd296, %rd36, 2;
	add.s64 	%rd297, %rd40, %rd296;
	add.s64 	%rd281, %rd297, %rd196;
	shl.b64 	%rd298, %rd290, 2;
	add.s64 	%rd282, %rd40, %rd298;
	.loc	1 85 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:58
	bar.sync 	0;
	// begin inline asm
	@%p44 st.shared.b64 [ %r145 + 0 ], %rd279;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r146 + 0 ], %rd280;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r147 + 0 ], %rd281;
	// end inline asm
	// begin inline asm
	@%p44 st.shared.b64 [ %r148 + 0 ], %rd282;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd283, [%r26];
	ld.shared.u64 	%rd284, [%r27];
	ld.shared.u64 	%rd285, [%r28];
	ld.shared.u64 	%rd286, [%r29];
	// begin inline asm
	mov.u32 %r187, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r187 }, [ %rd283 + 0 ];
	@!%p44 mov.u32 %r187, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r189, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r189 }, [ %rd284 + 0 ];
	@!%p44 mov.u32 %r189, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r191, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r191 }, [ %rd285 + 0 ];
	@!%p44 mov.u32 %r191, %r97;
	// end inline asm
	// begin inline asm
	mov.u32 %r193, 0x0;
	@%p44 ld.global.L1::evict_last.b32 { %r193 }, [ %rd286 + 0 ];
	@!%p44 mov.u32 %r193, %r97;
	// end inline asm
	.loc	1 54 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:54:24
	add.f32 	%f35, %f22, %f24;
	add.f32 	%f36, %f21, %f23;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	mov.b32 	%f37, %r191;
	mov.b32 	%f38, %r153;
	.loc	1 61 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:61:24
	add.f32 	%f39, %f21, %f37;
	add.f32 	%f40, %f24, %f38;
	.loc	1 62 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:62:24
	mul.f32 	%f41, %f36, %f39;
	mul.f32 	%f42, %f35, %f40;
	.loc	1 64 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:64:25
	setp.eq.f32 	%p151, %f42, 0f40800000;
	setp.eq.f32 	%p152, %f41, 0f40800000;
	.loc	1 65 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:65:25
	selp.f32 	%f43, 0f3F800000, 0f00000000, %p152;
	selp.f32 	%f44, 0f3F800000, 0f00000000, %p151;
	.loc	1 66 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:66:24
	mul.f32 	%f45, %f3, %f44;
	mul.f32 	%f46, %f15, %f43;
	.loc	1 67 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:67:24
	mul.f32 	%f47, %f11, %f46;
	.loc	1 54 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:54:24
	add.f32 	%f48, %f18, %f20;
	add.f32 	%f49, %f17, %f19;
	.loc	1 60 50                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:60:50
	mov.b32 	%f50, %r193;
	mov.b32 	%f51, %r155;
	.loc	1 61 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:61:24
	add.f32 	%f52, %f17, %f50;
	add.f32 	%f53, %f20, %f51;
	.loc	1 62 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:62:24
	mul.f32 	%f54, %f49, %f52;
	mul.f32 	%f55, %f48, %f53;
	.loc	1 64 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:64:25
	setp.eq.f32 	%p153, %f55, 0f40800000;
	setp.eq.f32 	%p154, %f54, 0f40800000;
	.loc	1 65 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:65:25
	selp.f32 	%f56, 0f3F800000, 0f00000000, %p154;
	selp.f32 	%f57, 0f3F800000, 0f00000000, %p153;
	.loc	1 66 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:66:24
	mul.f32 	%f58, %f4, %f57;
	mul.f32 	%f59, %f16, %f56;
	.loc	1 67 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:67:24
	mul.f32 	%f60, %f12, %f59;
	.loc	1 92 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:92:24
	neg.f32 	%f61, %f47;
	fma.rn.f32 	%f62, %f7, %f45, %f61;
	neg.f32 	%f63, %f60;
	fma.rn.f32 	%f64, %f8, %f58, %f63;
	.loc	1 93 28                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:93:28
	abs.f32 	%f65, %f62;
	abs.f32 	%f66, %f64;
	.loc	1 95 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:95:24
	setp.lt.f32 	%p155, %f65, 0f3F800000;
	setp.lt.f32 	%p156, %f66, 0f3F800000;
	.loc	1 96 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:96:24
	mul.f32 	%f67, %f62, %f62;
	mul.f32 	%f68, %f64, %f64;
	.loc	1 100 24                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:100:24
	add.f32 	%f69, %f65, 0fBF000000;
	add.f32 	%f70, %f66, 0fBF000000;
	.loc	1 79 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:79:24
	add.f32 	%f71, %f26, %f28;
	add.f32 	%f72, %f25, %f27;
	.loc	1 54 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:54:24
	add.f32 	%f73, %f30, %f32;
	add.f32 	%f74, %f29, %f31;
	.loc	1 61 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:61:24
	add.f32 	%f75, %f32, %f34;
	add.f32 	%f76, %f29, %f33;
	.loc	1 62 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:62:24
	mul.f32 	%f77, %f74, %f76;
	mul.f32 	%f78, %f73, %f75;
	.loc	1 64 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:64:25
	setp.eq.f32 	%p157, %f78, 0f40800000;
	setp.eq.f32 	%p158, %f77, 0f40800000;
	.loc	1 65 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:65:25
	selp.f32 	%f79, 0f3F800000, 0f00000000, %p158;
	selp.f32 	%f80, 0f3F800000, 0f00000000, %p157;
	.loc	1 66 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:66:24
	mul.f32 	%f81, %f1, %f80;
	mul.f32 	%f82, %f2, %f79;
	.loc	1 85 58                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:85:58
	mov.b32 	%f83, %r187;
	mov.b32 	%f84, %r189;
	.loc	1 86 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:86:24
	add.f32 	%f85, %f26, %f84;
	add.f32 	%f86, %f27, %f83;
	.loc	1 87 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:87:24
	mul.f32 	%f87, %f72, %f86;
	mul.f32 	%f88, %f71, %f85;
	.loc	1 88 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:88:25
	setp.eq.f32 	%p159, %f88, 0f40800000;
	setp.eq.f32 	%p160, %f87, 0f40800000;
	.loc	1 89 25                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:89:25
	selp.f32 	%f89, 0f3F800000, 0f00000000, %p160;
	selp.f32 	%f90, 0f3F800000, 0f00000000, %p159;
	.loc	1 90 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:90:24
	mul.f32 	%f91, %f14, %f90;
	mul.f32 	%f92, %f13, %f89;
	.loc	1 91 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:91:24
	mul.f32 	%f93, %f9, %f92;
	mul.f32 	%f94, %f10, %f91;
	.loc	1 92 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:92:24
	neg.f32 	%f95, %f94;
	fma.rn.f32 	%f96, %f6, %f82, %f95;
	neg.f32 	%f97, %f93;
	fma.rn.f32 	%f98, %f5, %f81, %f97;
	.loc	1 93 28                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:93:28
	abs.f32 	%f99, %f98;
	abs.f32 	%f100, %f96;
	.loc	1 95 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:95:24
	setp.lt.f32 	%p161, %f100, 0f3F800000;
	setp.lt.f32 	%p162, %f99, 0f3F800000;
	.loc	1 96 24                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:96:24
	mul.f32 	%f101, %f98, %f98;
	mul.f32 	%f102, %f96, %f96;
	.loc	1 100 24                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:100:24
	add.f32 	%f103, %f100, 0fBF000000;
	add.f32 	%f104, %f99, 0fBF000000;
	.loc	1 103 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:103:25
	fma.rn.f32 	%f105, %f102, 0f3F000000, 0f00000000;
	fma.rn.f32 	%f106, %f101, 0f3F000000, 0f00000000;
	.loc	1 101 39                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:101:39
	selp.f32 	%f107, %f106, %f104, %p162;
	selp.f32 	%f108, %f105, %f103, %p161;
	.loc	1 103 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:103:25
	fma.rn.f32 	%f109, %f67, 0f3F000000, 0f00000000;
	.loc	1 101 39                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:101:39
	selp.f32 	%f110, %f109, %f69, %p155;
	.loc	1 103 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:103:25
	fma.rn.f32 	%f111, %f68, 0f3F000000, 0f00000000;
	.loc	1 101 39                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:101:39
	selp.f32 	%f112, %f111, %f70, %p156;
	.loc	1 106 25                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:106:25
	fma.rn.f32 	%f113, %f2, %f79, 0f00000000;
	fma.rn.f32 	%f114, %f1, %f80, 0f00000000;
	fma.rn.f32 	%f115, %f3, %f44, 0f00000000;
	fma.rn.f32 	%f116, %f4, %f57, 0f00000000;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f107, %f108;
	add.f32 	%f118, %f117, %f110;
	add.f32 	%f119, %f118, %f112;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r217, %f119;
	shfl.sync.bfly.b32	%r218, %r217, 16, 31, -1;
	mov.b32 	%f120, %r218;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f121, %f119, %f120;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r219, %f121;
	shfl.sync.bfly.b32	%r220, %r219, 8, 31, -1;
	mov.b32 	%f122, %r220;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f123, %f121, %f122;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r221, %f123;
	shfl.sync.bfly.b32	%r222, %r221, 4, 31, -1;
	mov.b32 	%f124, %r222;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f125, %f123, %f124;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r223, %f125;
	shfl.sync.bfly.b32	%r224, %r223, 2, 31, -1;
	mov.b32 	%f126, %r224;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f127, %f125, %f126;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r225, %f127;
	shfl.sync.bfly.b32	%r226, %r225, 1, 31, -1;
	mov.b32 	%f128, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f129, %f127, %f128;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p142, %r216, 0;
	shr.u32 	%r227, %r1, 3;
	and.b32  	%r228, %r227, 4;
	add.s32 	%r195, %r114, %r228;
	mov.b32 	%r196, %f129;
	// begin inline asm
	@%p142 st.shared.b32 [ %r195 + 0 ], %r196;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p143, %r1, 2;
	add.s32 	%r198, %r114, %r3;
	// begin inline asm
	@%p143 ld.shared.b32 %r197, [ %r198 + 0 ];
	// end inline asm
	mov.b32 	%f130, %r197;
	shfl.sync.bfly.b32	%r231, %r197, 1, 31, -1;
	mov.b32 	%f131, %r231;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r232, %r1, 1;
	setp.eq.b32 	%p163, %r232, 1;
	not.pred 	%p164, %p163;
	and.pred  	%p144, %p143, %p164;
	mov.b32 	%r200, %f132;
	// begin inline asm
	@%p144 st.shared.b32 [ %r198 + 0 ], %r200;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	ld.shared.u32 	%r213, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f133, %f114, %f113;
	add.f32 	%f134, %f133, %f115;
	add.f32 	%f135, %f134, %f116;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r233, %f135;
	shfl.sync.bfly.b32	%r234, %r233, 16, 31, -1;
	mov.b32 	%f136, %r234;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f137, %f135, %f136;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r235, %f137;
	shfl.sync.bfly.b32	%r236, %r235, 8, 31, -1;
	mov.b32 	%f138, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r237, %f139;
	shfl.sync.bfly.b32	%r238, %r237, 4, 31, -1;
	mov.b32 	%f140, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f141, %f139, %f140;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r239, %f141;
	shfl.sync.bfly.b32	%r240, %r239, 2, 31, -1;
	mov.b32 	%f142, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f143, %f141, %f142;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r241, %f143;
	shfl.sync.bfly.b32	%r242, %r241, 1, 31, -1;
	mov.b32 	%f144, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f145, %f143, %f144;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r202, %f145;
	// begin inline asm
	@%p142 st.shared.b32 [ %r195 + 0 ], %r202;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p143 ld.shared.b32 %r203, [ %r198 + 0 ];
	// end inline asm
	mov.b32 	%f146, %r203;
	shfl.sync.bfly.b32	%r243, %r203, 1, 31, -1;
	mov.b32 	%f147, %r243;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f146, %f147;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r206, %f148;
	// begin inline asm
	@%p144 st.shared.b32 [ %r198 + 0 ], %r206;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	ld.shared.u32 	%r214, [global_smem];
	.loc	1 110 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:110:20
	// begin inline asm
	mov.u32 %r210, 0x0;
	@%p44 ld.global.b32 { %r210 }, [ %rd287 + 0 ];
	// end inline asm
	.loc	1 112 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:112:20
	// begin inline asm
	mov.u32 %r211, 0x0;
	@%p44 ld.global.b32 { %r211 }, [ %rd288 + 0 ];
	// end inline asm
	.loc	1 114 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:114:20
	// begin inline asm
	div.full.f32 %r209, %r210, %r211;
	// end inline asm
	mov.b32 	%f149, %r209;
	.loc	1 115 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:115:20
	// begin inline asm
	div.full.f32 %r212, %r213, %r214;
	// end inline asm
	mov.b32 	%f150, %r212;
	.loc	1 116 20                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:116:20
	add.f32 	%f151, %f149, %f150;
	.loc	1 117 4                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:117:4
	bar.sync 	0;
	.loc	1 118 71                        // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:118:71
	setp.eq.s32 	%p150, %r2, 0;
	mov.b32 	%r215, %f151;
	// begin inline asm
	@%p150 st.global.b32 [ %rd287 + 0 ], { %r215 };
	// end inline asm
	.loc	1 118 4                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:118:4
	ret;
$L__BB0_1:
	.loc	1 46 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:46:64
	mov.u64 	%rd75, assertMessage_0;
	cvta.global.u64 	%rd76, %rd75;
	mov.u64 	%rd77, assertFile_0;
	cvta.global.u64 	%rd78, %rd77;
	mov.u64 	%rd79, assertFunc_0;
	cvta.global.u64 	%rd80, %rd79;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd76;
	.param .b64 param1;
	st.param.b64 	[param1], %rd78;
	.param .b32 param2;
	st.param.b32 	[param2], 46;
	.param .b64 param3;
	st.param.b64 	[param3], %rd80;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__BB0_3:
	.loc	1 51 64                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:51:64
	mov.u64 	%rd111, assertMessage_1;
	cvta.global.u64 	%rd112, %rd111;
	mov.u64 	%rd113, assertFile_1;
	cvta.global.u64 	%rd114, %rd113;
	mov.u64 	%rd115, assertFunc_1;
	cvta.global.u64 	%rd116, %rd115;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd112;
	.param .b64 param1;
	st.param.b64 	[param1], %rd114;
	.param .b32 param2;
	st.param.b32 	[param2], 51;
	.param .b64 param3;
	st.param.b64 	[param3], %rd116;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_5:
	.loc	1 59 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:59:66
	mov.u64 	%rd171, assertMessage_2;
	cvta.global.u64 	%rd172, %rd171;
	mov.u64 	%rd173, assertFile_2;
	cvta.global.u64 	%rd174, %rd173;
	mov.u64 	%rd175, assertFunc_2;
	cvta.global.u64 	%rd176, %rd175;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd172;
	.param .b64 param1;
	st.param.b64 	[param1], %rd174;
	.param .b32 param2;
	st.param.b32 	[param2], 59;
	.param .b64 param3;
	st.param.b64 	[param3], %rd176;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_7:
	.loc	1 76 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:76:66
	mov.u64 	%rd222, assertMessage_4;
	cvta.global.u64 	%rd223, %rd222;
	mov.u64 	%rd224, assertFile_4;
	cvta.global.u64 	%rd225, %rd224;
	mov.u64 	%rd226, assertFunc_4;
	cvta.global.u64 	%rd227, %rd226;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd223;
	.param .b64 param1;
	st.param.b64 	[param1], %rd225;
	.param .b32 param2;
	st.param.b32 	[param2], 76;
	.param .b64 param3;
	st.param.b64 	[param3], %rd227;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_9:
	.loc	1 84 66                         // c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py:84:66
	mov.u64 	%rd273, assertMessage_5;
	cvta.global.u64 	%rd274, %rd273;
	mov.u64 	%rd275, assertFile_5;
	cvta.global.u64 	%rd276, %rd275;
	mov.u64 	%rd277, assertFunc_5;
	cvta.global.u64 	%rd278, %rd277;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd274;
	.param .b64 param1;
	st.param.b64 	[param1], %rd276;
	.param .b32 param2;
	st.param.b32 	[param2], 84;
	.param .b64 param3;
	st.param.b64 	[param3], %rd278;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7c/c7ceyd6fl4w2nlftcyoiqe2qnkiiydc3mwsmhfqwd57okrbkqu2e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 231                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 99
.b8 101
.b8 121
.b8 100
.b8 54
.b8 102
.b8 108
.b8 52
.b8 119
.b8 50
.b8 110
.b8 108
.b8 102
.b8 116
.b8 99
.b8 121
.b8 111
.b8 105
.b8 113
.b8 101
.b8 50
.b8 113
.b8 110
.b8 107
.b8 105
.b8 105
.b8 121
.b8 100
.b8 99
.b8 51
.b8 109
.b8 119
.b8 115
.b8 109
.b8 104
.b8 102
.b8 113
.b8 119
.b8 100
.b8 53
.b8 55
.b8 111
.b8 107
.b8 114
.b8 98
.b8 107
.b8 113
.b8 117
.b8 50
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x41 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 113
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 109
.b8 111
.b8 111
.b8 116
.b8 104
.b8 95
.b8 108
.b8 49
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa4:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 108                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 109                                 // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
