#loc = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":19:0)
module {
  tt.func public @triton_poi_fused_constant_pad_nd_relu_40(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1408> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<352> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-440> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-1> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2200> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<88> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_8 = arith.constant dense<440> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<8800> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_7 : tensor<128xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_6 : tensor<128xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_7 : tensor<128xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_8 : tensor<128xi32> loc(#loc12)
    %12 = arith.addi %7, %cst_4 : tensor<128xi32> loc(#loc13)
    %13 = arith.extsi %12 : tensor<128xi32> to tensor<128xi64> loc(#loc14)
    %14 = arith.cmpi sge, %13, %cst_3 : tensor<128xi64> loc(#loc14)
    %15 = arith.addi %9, %cst_4 : tensor<128xi32> loc(#loc15)
    %16 = arith.extsi %15 : tensor<128xi32> to tensor<128xi64> loc(#loc16)
    %17 = arith.cmpi sge, %16, %cst_3 : tensor<128xi64> loc(#loc16)
    %18 = arith.andi %14, %17 : tensor<128xi1> loc(#loc17)
    %19 = arith.addi %11, %cst_2 : tensor<128xi32> loc(#loc18)
    %20 = arith.muli %7, %cst_1 : tensor<128xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<128xi32> loc(#loc20)
    %22 = arith.muli %10, %cst_0 : tensor<128xi32> loc(#loc21)
    %23 = arith.addi %21, %22 : tensor<128xi32> loc(#loc22)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc23)
    %25 = tt.addptr %24, %23 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc23)
    %26 = arith.andi %18, %5 : tensor<128xi1> loc(#loc24)
    %27 = tt.load %25, %26, %cst : tensor<128x!tt.ptr<f32>> loc(#loc25)
    %28 = arith.cmpf ogt, %cst, %27 : tensor<128xf32> loc(#loc33)
    %29 = arith.select %28, %cst, %27 : tensor<128xi1>, tensor<128xf32> loc(#loc34)
    %30 = arith.select %18, %29, %cst : tensor<128xi1>, tensor<128xf32> loc(#loc29)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc30)
    %32 = tt.addptr %31, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc30)
    tt.store %32, %30, %5 : tensor<128x!tt.ptr<f32>> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":21:28)
#loc3 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":21:33)
#loc4 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":22:36)
#loc5 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":22:23)
#loc6 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":23:21)
#loc7 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":24:21)
#loc8 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":24:28)
#loc9 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":25:21)
#loc10 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":25:27)
#loc11 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":26:19)
#loc12 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":27:19)
#loc13 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":29:18)
#loc14 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":31:19)
#loc15 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":32:18)
#loc16 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":33:19)
#loc17 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":34:18)
#loc18 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:39)
#loc19 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:48)
#loc20 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:44)
#loc21 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:58)
#loc22 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:53)
#loc23 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:30)
#loc24 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:70)
#loc25 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":35:63)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc27 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":37:40)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc29 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":39:33)
#loc30 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":40:25)
#loc31 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":40:37)
#loc32 = loc("inductor_cache/nl/cnldzewunut6zetvjfzkkiusnlikbyonuhq3li3zd7devibodbgb.py":40:4)
#loc33 = loc(callsite(#loc26 at #loc27))
#loc34 = loc(callsite(#loc28 at #loc27))
