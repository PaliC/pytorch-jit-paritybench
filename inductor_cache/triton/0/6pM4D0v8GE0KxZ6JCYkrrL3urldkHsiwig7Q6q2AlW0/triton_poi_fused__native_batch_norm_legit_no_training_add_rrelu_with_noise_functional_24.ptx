//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b32 	%r<198>;
	.reg .f32 	%f<121>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_0];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_1];
$L__tmp0:
	.loc	1 22 28                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:22:33
	shl.b32 	%r111, %r1, 5;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_2];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_3];
	.loc	1 23 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:23:44
	mov.u32 	%r112, %tid.x;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_4];
	bfe.u32 	%r113, %r112, 3, 4;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_5];
	or.b32  	%r114, %r113, 16;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_6];
	shl.b32 	%r115, %r112, 3;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_rrelu_with_noise_functional_24_param_7];
	and.b32  	%r116, %r115, 24;
	shl.b32 	%r117, %r112, 2;
	and.b32  	%r118, %r117, 28;
	.loc	1 23 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:23:23
	or.b32  	%r119, %r111, %r113;
	or.b32  	%r120, %r111, %r114;
	or.b32  	%r121, %r111, %r116;
	or.b32  	%r122, %r121, 4;
	.loc	1 24 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:24:21
	setp.lt.s32 	%p26, %r119, 256;
	setp.lt.s32 	%p27, %r120, 256;
	setp.lt.s32 	%p13, %r121, 256;
	.loc	1 25 28                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:25:33
	shl.b32 	%r123, %r2, 5;
	.loc	1 26 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:44
	bfe.u32 	%r124, %r112, 2, 5;
	.loc	1 26 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:23
	or.b32  	%r125, %r123, %r118;
	or.b32  	%r126, %r123, %r124;
	.loc	1 27 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:27:21
	setp.lt.s32 	%p28, %r125, 256;
	setp.lt.s32 	%p29, %r126, 256;
	.loc	1 31 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:31:19
	shr.s32 	%r128, %r121, 31;
	shr.u32 	%r129, %r128, 26;
	add.s32 	%r130, %r121, %r129;
	.loc	1 30 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:30:19
	and.b32  	%r131, %r130, -64;
	sub.s32 	%r132, %r121, %r131;
	bfe.s32 	%r133, %r1, 26, 1;
	shr.u32 	%r134, %r133, 26;
	add.s32 	%r135, %r122, %r134;
	and.b32  	%r136, %r135, -64;
	sub.s32 	%r137, %r122, %r136;
	.loc	1 32 39                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:39
	shl.b32 	%r138, %r119, 8;
	shl.b32 	%r139, %r120, 8;
	.loc	1 32 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:35
	add.s32 	%r140, %r125, %r138;
	add.s32 	%r141, %r125, %r139;
	.loc	1 32 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:30
	mul.wide.s32 	%rd24, %r140, 4;
	add.s64 	%rd1, %rd16, %rd24;
	mul.wide.s32 	%rd25, %r141, 4;
	add.s64 	%rd2, %rd16, %rd25;
	.loc	1 32 52                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:52
	and.pred  	%p1, %p26, %p28;
	and.pred  	%p2, %p27, %p28;
	and.pred  	%p11, %p13, %p29;
	.loc	1 32 44                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r142, %r112, 7;
	and.b32  	%r143, %r142, 896;
	or.b32  	%r144, %r143, %r113;
	mov.u32 	%r145, global_smem;
	add.s32 	%r146, %r145, %r143;
	shl.b32 	%r147, %r144, 2;
	add.s32 	%r11, %r146, %r147;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 160;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 320;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 480;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 64;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 224;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 544;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r148, %r115, 992;
	add.s32 	%r149, %r145, %r148;
	shl.b32 	%r150, %r112, 5;
	and.b32  	%r151, %r150, 4064;
	add.s32 	%r93, %r149, %r151;
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r93];
	add.s32 	%r98, %r93, 16;
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r93+16];
	.loc	1 33 38                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:38
	shl.b32 	%r152, %r126, 6;
	.loc	1 33 49                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:49
	shl.b32 	%r153, %r130, 8;
	and.b32  	%r154, %r153, -16384;
	.loc	1 33 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:35
	add.s32 	%r155, %r154, %r152;
	.loc	1 33 43                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:43
	add.s32 	%r156, %r155, %r132;
	add.s32 	%r157, %r155, %r137;
	.loc	1 33 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:30
	cvt.s64.s32 	%rd26, %r156;
	mul.wide.s32 	%rd27, %r156, 4;
	add.s64 	%rd3, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r157, 4;
	add.s64 	%rd4, %rd17, %rd28;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p11 ld.global.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p11 ld.global.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:30
	mul.wide.s32 	%rd29, %r132, 4;
	add.s64 	%rd5, %rd18, %rd29;
	mul.wide.s32 	%rd30, %r137, 4;
	add.s64 	%rd6, %rd18, %rd30;
	.loc	1 34 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:35
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:35:30
	add.s64 	%rd7, %rd19, %rd29;
	add.s64 	%rd8, %rd19, %rd30;
	.loc	1 35 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:35:35
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r43;
	mov.b32 	%f10, %r44;
	mov.b32 	%f11, %r45;
	mov.b32 	%f12, %r46;
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r47;
	mov.b32 	%f14, %r48;
	mov.b32 	%f15, %r49;
	mov.b32 	%f16, %r50;
	.loc	1 36 31                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:31
	add.s64 	%rd9, %rd20, %rd29;
	add.s64 	%rd10, %rd20, %rd30;
	.loc	1 36 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:36
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:31
	add.s64 	%rd11, %rd21, %rd29;
	add.s64 	%rd12, %rd21, %rd30;
	.loc	1 37 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:36
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r59, %r60, %r61, %r62 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:40:18
	add.f32 	%f17, %f9, 0f3727C5AC;
	add.f32 	%f18, %f10, 0f3727C5AC;
	add.f32 	%f19, %f11, 0f3727C5AC;
	add.f32 	%f20, %f12, 0f3727C5AC;
	add.f32 	%f21, %f13, 0f3727C5AC;
	add.f32 	%f22, %f14, 0f3727C5AC;
	add.f32 	%f23, %f15, 0f3727C5AC;
	add.f32 	%f24, %f16, 0f3727C5AC;
	.loc	1 41 26                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:41:26
	sqrt.approx.ftz.f32 	%f25, %f17;
	sqrt.approx.ftz.f32 	%f26, %f18;
	sqrt.approx.ftz.f32 	%f27, %f19;
	sqrt.approx.ftz.f32 	%f28, %f20;
	sqrt.approx.ftz.f32 	%f29, %f21;
	sqrt.approx.ftz.f32 	%f30, %f22;
	sqrt.approx.ftz.f32 	%f31, %f23;
	sqrt.approx.ftz.f32 	%f32, %f24;
	.loc	1 23 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:23:23
	or.b32  	%r158, %r111, %r118;
	.loc	1 31 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:31:19
	shr.s32 	%r160, %r158, 31;
	shr.u32 	%r161, %r160, 26;
	add.s32 	%r162, %r158, %r161;
	.loc	1 30 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:30:19
	and.b32  	%r163, %r162, -64;
	sub.s32 	%r164, %r158, %r163;
	.loc	1 26 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:23
	or.b32  	%r165, %r123, %r114;
	.loc	1 33 38                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:38
	shl.b32 	%r166, %r165, 6;
	.loc	1 33 49                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:49
	shl.b32 	%r167, %r162, 8;
	and.b32  	%r168, %r167, -16384;
	.loc	1 33 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:35
	add.s32 	%r169, %r168, %r164;
	.loc	1 33 43                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:43
	add.s32 	%r170, %r169, %r166;
	.loc	1 26 23                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:26:23
	or.b32  	%r171, %r123, %r113;
	.loc	1 33 38                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:38
	shl.b32 	%r172, %r171, 6;
	.loc	1 33 43                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:43
	add.s32 	%r173, %r169, %r172;
	.loc	1 27 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:27:21
	setp.lt.s32 	%p30, %r165, 256;
	.loc	1 24 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:24:21
	setp.lt.s32 	%p31, %r158, 256;
	.loc	1 32 52                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:52
	and.pred  	%p25, %p31, %p30;
	.loc	1 27 21                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:27:21
	setp.lt.s32 	%p32, %r171, 256;
	.loc	1 32 52                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:32:52
	and.pred  	%p24, %p31, %p32;
	.loc	1 43 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:43:18
	mov.b32 	%r69, %f25;
	mov.b32 	%r68, 1065353216;
	// begin inline asm
	div.full.f32 %r67, %r68, %r69;
	// end inline asm
	mov.b32 	%f33, %r67;
	mov.b32 	%r72, %f26;
	// begin inline asm
	div.full.f32 %r70, %r68, %r72;
	// end inline asm
	mov.b32 	%f34, %r70;
	mov.b32 	%r75, %f27;
	// begin inline asm
	div.full.f32 %r73, %r68, %r75;
	// end inline asm
	mov.b32 	%f35, %r73;
	mov.b32 	%r78, %f28;
	// begin inline asm
	div.full.f32 %r76, %r68, %r78;
	// end inline asm
	mov.b32 	%f36, %r76;
	mov.b32 	%r81, %f29;
	// begin inline asm
	div.full.f32 %r79, %r68, %r81;
	// end inline asm
	mov.b32 	%f37, %r79;
	mov.b32 	%r84, %f30;
	// begin inline asm
	div.full.f32 %r82, %r68, %r84;
	// end inline asm
	mov.b32 	%f38, %r82;
	mov.b32 	%r87, %f31;
	// begin inline asm
	div.full.f32 %r85, %r68, %r87;
	// end inline asm
	mov.b32 	%f39, %r85;
	mov.b32 	%r90, %f32;
	// begin inline asm
	div.full.f32 %r88, %r68, %r90;
	// end inline asm
	mov.b32 	%f40, %r88;
	.loc	1 55 25                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:55:25
	add.s64 	%rd13, %rd22, %rd26;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	mov.b32 	%f41, %r27;
	mov.b32 	%f42, %r28;
	mov.b32 	%f43, %r29;
	mov.b32 	%f44, %r30;
	.loc	1 34 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:35
	mov.b32 	%f45, %r35;
	mov.b32 	%f46, %r36;
	mov.b32 	%f47, %r37;
	mov.b32 	%f48, %r38;
	.loc	1 38 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:38:18
	sub.f32 	%f49, %f44, %f48;
	sub.f32 	%f50, %f43, %f47;
	sub.f32 	%f51, %f42, %f46;
	sub.f32 	%f52, %f41, %f45;
	.loc	1 37 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:36
	mov.b32 	%f53, %r59;
	mov.b32 	%f54, %r60;
	mov.b32 	%f55, %r61;
	mov.b32 	%f56, %r62;
	.loc	1 36 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:36
	mov.b32 	%f57, %r51;
	mov.b32 	%f58, %r52;
	mov.b32 	%f59, %r53;
	mov.b32 	%f60, %r54;
	.loc	1 46 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:46:19
	mul.f32 	%f61, %f52, %f33;
	mul.f32 	%f62, %f51, %f34;
	mul.f32 	%f63, %f50, %f35;
	mul.f32 	%f64, %f49, %f36;
	.loc	1 48 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:48:20
	fma.rn.f32 	%f65, %f64, %f60, %f56;
	fma.rn.f32 	%f66, %f63, %f59, %f55;
	fma.rn.f32 	%f67, %f62, %f58, %f54;
	fma.rn.f32 	%f68, %f61, %f57, %f53;
	.loc	1 49 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:49:19
	add.f32 	%f69, %f1, %f68;
	add.f32 	%f70, %f2, %f67;
	add.f32 	%f71, %f3, %f66;
	add.f32 	%f72, %f4, %f65;
	.loc	1 51 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:51:20
	setp.gt.f32 	%p33, %f72, 0f00000000;
	setp.gt.f32 	%p34, %f71, 0f00000000;
	setp.gt.f32 	%p35, %f70, 0f00000000;
	setp.gt.f32 	%p36, %f69, 0f00000000;
	.loc	1 53 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:53:20
	mul.f32 	%f73, %f69, 0f3E6AAAAB;
	mul.f32 	%f74, %f70, 0f3E6AAAAB;
	mul.f32 	%f75, %f71, 0f3E6AAAAB;
	mul.f32 	%f76, %f72, 0f3E6AAAAB;
	.loc	1 54 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:54:35
	selp.f32 	%f77, %f69, %f73, %p36;
	selp.f32 	%f78, %f70, %f74, %p35;
	selp.f32 	%f79, %f71, %f75, %p34;
	selp.f32 	%f80, %f72, %f76, %p33;
	.loc	1 33 54                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:33:54
	mov.b32 	%f81, %r31;
	mov.b32 	%f82, %r32;
	mov.b32 	%f83, %r33;
	mov.b32 	%f84, %r34;
	.loc	1 34 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:34:35
	mov.b32 	%f85, %r39;
	mov.b32 	%f86, %r40;
	mov.b32 	%f87, %r41;
	mov.b32 	%f88, %r42;
	.loc	1 38 18                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:38:18
	sub.f32 	%f89, %f84, %f88;
	sub.f32 	%f90, %f83, %f87;
	sub.f32 	%f91, %f82, %f86;
	sub.f32 	%f92, %f81, %f85;
	.loc	1 37 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:37:36
	mov.b32 	%f93, %r63;
	mov.b32 	%f94, %r64;
	mov.b32 	%f95, %r65;
	mov.b32 	%f96, %r66;
	.loc	1 36 36                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:36:36
	mov.b32 	%f97, %r55;
	mov.b32 	%f98, %r56;
	mov.b32 	%f99, %r57;
	mov.b32 	%f100, %r58;
	.loc	1 46 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:46:19
	mul.f32 	%f101, %f92, %f37;
	mul.f32 	%f102, %f91, %f38;
	mul.f32 	%f103, %f90, %f39;
	mul.f32 	%f104, %f89, %f40;
	.loc	1 48 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:48:20
	fma.rn.f32 	%f105, %f104, %f100, %f96;
	fma.rn.f32 	%f106, %f103, %f99, %f95;
	fma.rn.f32 	%f107, %f102, %f98, %f94;
	fma.rn.f32 	%f108, %f101, %f97, %f93;
	.loc	1 49 19                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:49:19
	add.f32 	%f109, %f5, %f108;
	add.f32 	%f110, %f6, %f107;
	add.f32 	%f111, %f7, %f106;
	add.f32 	%f112, %f8, %f105;
	.loc	1 51 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:51:20
	setp.gt.f32 	%p37, %f112, 0f00000000;
	setp.gt.f32 	%p38, %f111, 0f00000000;
	setp.gt.f32 	%p39, %f110, 0f00000000;
	setp.gt.f32 	%p40, %f109, 0f00000000;
	.loc	1 53 20                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:53:20
	mul.f32 	%f113, %f109, 0f3E6AAAAB;
	mul.f32 	%f114, %f110, 0f3E6AAAAB;
	mul.f32 	%f115, %f111, 0f3E6AAAAB;
	mul.f32 	%f116, %f112, 0f3E6AAAAB;
	.loc	1 54 35                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:54:35
	selp.f32 	%f117, %f109, %f113, %p40;
	selp.f32 	%f118, %f110, %f114, %p39;
	selp.f32 	%f119, %f111, %f115, %p38;
	selp.f32 	%f120, %f112, %f116, %p37;
	.loc	1 55 56                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:55:56
	selp.u32 	%r174, 1, 0, %p33;
	selp.u32 	%r175, 1, 0, %p34;
	prmt.b32 	%r176, %r175, %r174, 0x3340U;
	selp.u32 	%r177, 1, 0, %p35;
	selp.u32 	%r178, 1, 0, %p36;
	prmt.b32 	%r179, %r178, %r177, 0x3340U;
	prmt.b32 	%r180, %r179, %r176, 0x5410U;
	selp.u32 	%r181, 1, 0, %p37;
	selp.u32 	%r182, 1, 0, %p38;
	prmt.b32 	%r183, %r182, %r181, 0x3340U;
	selp.u32 	%r184, 1, 0, %p39;
	selp.u32 	%r185, 1, 0, %p40;
	prmt.b32 	%r186, %r185, %r184, 0x3340U;
	prmt.b32 	%r187, %r186, %r183, 0x5410U;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd13 + 0 ], { %r180, %r187 };
	// end inline asm
	.loc	1 56 25                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:25
	mul.wide.s32 	%rd31, %r173, 4;
	add.s64 	%rd14, %rd23, %rd31;
	mul.wide.s32 	%rd32, %r170, 4;
	add.s64 	%rd15, %rd23, %rd32;
	.loc	1 56 56                         // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:56
	bar.sync 	0;
	and.b32  	%r188, %r117, 508;
	mov.b32 	%r94, %f77;
	mov.b32 	%r95, %f78;
	mov.b32 	%r96, %f79;
	mov.b32 	%r97, %f80;
	mov.b32 	%r99, %f117;
	mov.b32 	%r100, %f118;
	mov.b32 	%r101, %f119;
	mov.b32 	%r102, %f120;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r93 + 0 ], { %r94, %r95, %r96, %r97 };
	// end inline asm
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r98 + 0 ], { %r99, %r100, %r101, %r102 };
	// end inline asm
	bar.sync 	0;
	and.b32  	%r189, %r112, 120;
	shl.b32 	%r190, %r189, 2;
	add.s32 	%r191, %r145, %r190;
	shl.b32 	%r192, %r188, 2;
	add.s32 	%r193, %r191, %r192;
	or.b32  	%r194, %r188, 512;
	and.b32  	%r195, %r194, 992;
	add.s32 	%r196, %r145, %r195;
	add.s32 	%r197, %r196, %r192;
	ld.shared.v4.u32 	{%r107, %r108, %r109, %r110}, [%r197+2048];
	ld.shared.v4.u32 	{%r103, %r104, %r105, %r106}, [%r193];
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd14 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd15 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	.loc	1 56 4                          // cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py:56:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s4/cs4huljedcbbnwcyftnr7a5vqbtraeeg5nqflqc6jyzr5emvn3gt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 52
.b8 104
.b8 117
.b8 108
.b8 106
.b8 101
.b8 100
.b8 99
.b8 98
.b8 98
.b8 110
.b8 119
.b8 99
.b8 121
.b8 102
.b8 116
.b8 110
.b8 114
.b8 55
.b8 97
.b8 53
.b8 118
.b8 113
.b8 98
.b8 116
.b8 114
.b8 97
.b8 101
.b8 101
.b8 103
.b8 53
.b8 110
.b8 113
.b8 102
.b8 108
.b8 113
.b8 99
.b8 54
.b8 106
.b8 121
.b8 122
.b8 114
.b8 53
.b8 101
.b8 109
.b8 118
.b8 110
.b8 51
.b8 103
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
