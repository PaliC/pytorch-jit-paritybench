#loc = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":42:67)
#loc46 = loc(callsite(#loc1 at #loc22))
module {
  tt.func public @triton_per_fused_native_group_norm_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":19:0)) attributes {noinline = false} {
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %0, %c64_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c64_i32 : i32 loc(#loc7)
    %7 = arith.muli %4, %cst_1 : tensor<1x64xi32> loc(#loc8)
    %8 = tt.splat %5 : i32 -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.addi %8, %7 : tensor<1x64xi32> loc(#loc9)
    %10 = arith.muli %6, %c4096_i32 : i32 loc(#loc10)
    %11 = tt.splat %10 : i32 -> tensor<1x64xi32> loc(#loc11)
    %12 = arith.addi %9, %11 : tensor<1x64xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %15 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_0 : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.addptr %17, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %19 = tt.load %18, %15, %cst_0 : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %20, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %22 = tt.load %21, %15, %cst_0 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %23 = arith.select %15, %16, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc18)
    %24 = arith.select %15, %19, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc19)
    %25 = arith.select %15, %22, %cst_0 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc20)
    %26:3 = "tt.reduce"(%23, %24, %25) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc22)), %arg9: f32 loc(callsite(#loc1 at #loc22)), %arg10: f32 loc(callsite(#loc1 at #loc22)), %arg11: f32 loc(callsite(#loc1 at #loc22)), %arg12: f32 loc(callsite(#loc1 at #loc22)), %arg13: f32 loc(callsite(#loc1 at #loc22))):
      %36 = arith.subf %arg11, %arg8 : f32 loc(#loc59)
      %37 = arith.addf %arg10, %arg13 : f32 loc(#loc60)
      %38 = arith.cmpf oeq, %37, %cst : f32 loc(#loc61)
      %39 = arith.divf %arg13, %37 : f32 loc(#loc62)
      %40 = arith.select %38, %cst, %39 : f32 loc(#loc63)
      %41 = arith.mulf %36, %40 : f32 loc(#loc64)
      %42 = arith.addf %arg8, %41 : f32 loc(#loc65)
      %43 = arith.addf %arg9, %arg12 : f32 loc(#loc66)
      %44 = arith.mulf %36, %36 : f32 loc(#loc67)
      %45 = arith.mulf %44, %arg10 : f32 loc(#loc68)
      %46 = arith.mulf %45, %40 : f32 loc(#loc69)
      %47 = arith.addf %43, %46 : f32 loc(#loc70)
      tt.reduce.return %42, %47, %37 : f32, f32, f32 loc(#loc45)
    }) : (tensor<1x64xf32>, tensor<1x64xf32>, tensor<1x64xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc45)
    %27 = tt.expand_dims %26#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc35)
    %28 = tt.expand_dims %26#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc36)
    %29 = tt.expand_dims %26#2 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc37)
    %30 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.store %31, %27, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    %32 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc40)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.store %33, %28, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    %34 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc42)
    %35 = tt.splat %34 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc42)
    tt.store %35, %29, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":23:28)
#loc3 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":25:21)
#loc4 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":26:26)
#loc5 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":26:34)
#loc6 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":30:19)
#loc7 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":31:19)
#loc8 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:38)
#loc9 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:35)
#loc10 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:48)
#loc11 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:43)
#loc12 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:30)
#loc13 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":33:53)
#loc14 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":34:30)
#loc15 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":34:53)
#loc16 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":35:30)
#loc17 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":35:53)
#loc18 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":39:33)
#loc19 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":40:33)
#loc20 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":41:33)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc35 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":43:18)
#loc36 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":44:18)
#loc37 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":45:18)
#loc38 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":46:25)
#loc39 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":46:37)
#loc40 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":47:25)
#loc41 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":47:37)
#loc42 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":48:25)
#loc43 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":48:37)
#loc44 = loc("inductor_cache/ab/cabyc2q3cbaianihsuagy3gki75plxphce35web7phajsj7b3xyn.py":48:4)
#loc45 = loc(callsite(#loc21 at #loc22))
#loc47 = loc(callsite(#loc23 at #loc21))
#loc48 = loc(callsite(#loc24 at #loc21))
#loc49 = loc(callsite(#loc25 at #loc21))
#loc50 = loc(callsite(#loc26 at #loc21))
#loc51 = loc(callsite(#loc27 at #loc21))
#loc52 = loc(callsite(#loc28 at #loc21))
#loc53 = loc(callsite(#loc29 at #loc21))
#loc54 = loc(callsite(#loc30 at #loc21))
#loc55 = loc(callsite(#loc31 at #loc21))
#loc56 = loc(callsite(#loc32 at #loc21))
#loc57 = loc(callsite(#loc33 at #loc21))
#loc58 = loc(callsite(#loc34 at #loc21))
#loc59 = loc(callsite(#loc47 at #loc22))
#loc60 = loc(callsite(#loc48 at #loc22))
#loc61 = loc(callsite(#loc49 at #loc22))
#loc62 = loc(callsite(#loc50 at #loc22))
#loc63 = loc(callsite(#loc51 at #loc22))
#loc64 = loc(callsite(#loc52 at #loc22))
#loc65 = loc(callsite(#loc53 at #loc22))
#loc66 = loc(callsite(#loc54 at #loc22))
#loc67 = loc(callsite(#loc55 at #loc22))
#loc68 = loc(callsite(#loc56 at #loc22))
#loc69 = loc(callsite(#loc57 at #loc22))
#loc70 = loc(callsite(#loc58 at #loc22))
