//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_11,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_12
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<45>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:21:33
	shl.b32 	%r36, %r1, 8;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_3];
	.loc	1 22 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:22:36
	mov.u32 	%r37, %tid.x;
	shl.b32 	%r38, %r37, 1;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_4];
	and.b32  	%r39, %r38, 254;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_5];
	.loc	1 22 23                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:22:23
	or.b32  	%r40, %r36, %r39;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_6];
	.loc	1 23 21                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:23:21
	setp.lt.s32 	%p1, %r40, 512;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_7];
	.loc	1 25 19                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:25:19
	bfe.s32 	%r41, %r1, 23, 1;
	shr.u32 	%r42, %r41, 25;
	add.s32 	%r43, %r40, %r42;
	and.b32  	%r44, %r43, -128;
	sub.s32 	%r45, %r40, %r44;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_8];
	.loc	1 26 34                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:26:34
	cvt.s64.s32 	%rd23, %r40;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_9];
	mul.wide.s32 	%rd25, %r40, 4;
	add.s64 	%rd1, %rd14, %rd25;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_10];
	.loc	1 26 39                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_div_eq_masked_fill_mul_native_batch_norm_backward_ones_like_relu_sub_threshold_backward_8_param_11];
	.loc	1 27 30                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:27:30
	add.s64 	%rd2, %rd15, %rd25;
	.loc	1 27 35                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 28 30                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:28:30
	mul.wide.s32 	%rd28, %r45, 4;
	add.s64 	%rd3, %rd16, %rd28;
	.loc	1 28 35                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:28:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 29 31                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:29:31
	add.s64 	%rd4, %rd17, %rd28;
	.loc	1 29 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:29:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:30:31
	add.s64 	%rd5, %rd18, %rd28;
	.loc	1 30 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:30:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 31 31                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:31:31
	add.s64 	%rd6, %rd19, %rd28;
	.loc	1 31 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:31:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 31                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:32:31
	add.s64 	%rd7, %rd20, %rd28;
	.loc	1 32 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:32:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 34 19                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:34:19
	and.b32  	%r46, %r2, 2147483647;
	and.b32  	%r47, %r3, 2147483647;
	setp.eq.s32 	%p14, %r47, 0;
	setp.eq.s32 	%p15, %r46, 0;
	.loc	1 36 32                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:36:32
	mov.b32 	%f5, %r2;
	selp.f32 	%f6, 0f3F800000, %f5, %p15;
	mov.b32 	%f7, %r3;
	selp.f32 	%f8, 0f3F800000, %f7, %p14;
	.loc	1 37 18                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:37:18
	mov.b32 	%f9, %r6;
	add.f32 	%f10, %f1, %f9;
	mov.b32 	%f11, %r7;
	add.f32 	%f12, %f2, %f11;
	.loc	1 38 18                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:38:18
	sub.f32 	%f13, %f10, %f9;
	sub.f32 	%f14, %f12, %f11;
	.loc	1 39 18                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:39:18
	mov.b32 	%r18, %f6;
	mov.b32 	%r17, %f13;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f15, %r16;
	mov.b32 	%r21, %f8;
	mov.b32 	%r20, %f14;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f16, %r19;
	.loc	1 44 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:44:20
	add.f32 	%f17, %f3, 0f3727C5AC;
	add.f32 	%f18, %f4, 0f3727C5AC;
	.loc	1 45 27                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:45:27
	sqrt.approx.ftz.f32 	%f19, %f17;
	sqrt.approx.ftz.f32 	%f20, %f18;
	.loc	1 40 19                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:40:19
	add.f32 	%f21, %f16, %f11;
	add.f32 	%f22, %f15, %f9;
	.loc	1 47 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:47:20
	mov.b32 	%r24, %f19;
	mov.b32 	%r23, 1065353216;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f23, %r22;
	mov.b32 	%r27, %f20;
	// begin inline asm
	div.full.f32 %r25, %r23, %r27;
	// end inline asm
	mov.b32 	%f24, %r25;
	.loc	1 54 33                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:54:33
	selp.f32 	%f25, 0f00000000, 0f3F800000, %p15;
	selp.f32 	%f26, 0f00000000, 0f3F800000, %p14;
	.loc	1 57 25                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:57:25
	add.s64 	%rd8, %rd21, %rd23;
	.loc	1 57 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:57:36
	selp.u16 	%rs3, 1, 0, %p15;
	selp.u16 	%rs4, 1, 0, %p14;
	shl.b16 	%rs5, %rs4, 8;
	or.b16  	%rs1, %rs3, %rs5;
	// begin inline asm
	@%p1 st.global.b16 [ %rd8 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 58 39                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:58:39
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r18, %r21 };
	// end inline asm
	.loc	1 59 25                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:59:25
	add.s64 	%rd10, %rd22, %rd25;
	.loc	1 60 25                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:60:25
	add.s64 	%rd11, %rd24, %rd25;
	.loc	1 60 37                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:60:37
	mov.b32 	%r32, %f25;
	mov.b32 	%r33, %f26;
	.loc	1 61 25                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:61:25
	add.s64 	%rd12, %rd26, %rd25;
	.loc	1 62 25                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:62:25
	add.s64 	%rd13, %rd27, %rd23;
	.loc	1 41 33                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:41:33
	selp.f32 	%f27, 0f00000000, %f22, %p15;
	selp.f32 	%f28, 0f00000000, %f21, %p14;
	.loc	1 29 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:29:36
	mov.b32 	%f29, %r8;
	mov.b32 	%f30, %r9;
	.loc	1 42 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:42:20
	sub.f32 	%f31, %f28, %f30;
	sub.f32 	%f32, %f27, %f29;
	.loc	1 32 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:32:36
	mov.b32 	%f33, %r14;
	mov.b32 	%f34, %r15;
	.loc	1 31 36                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:31:36
	mov.b32 	%f35, %r12;
	mov.b32 	%f36, %r13;
	.loc	1 49 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:49:20
	mul.f32 	%f37, %f32, %f23;
	mul.f32 	%f38, %f31, %f24;
	.loc	1 51 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:51:20
	fma.rn.f32 	%f39, %f38, %f36, %f34;
	fma.rn.f32 	%f40, %f37, %f35, %f33;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f40, 0f00000000;
	setp.lt.f32 	%p17, %f39, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f41, 0f00000000, %f39, %p17;
	selp.f32 	%f42, 0f00000000, %f40, %p16;
$L__tmp2:
	.loc	1 55 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:55:20
	mul.f32 	%f43, %f25, %f42;
	mul.f32 	%f44, %f26, %f41;
	.loc	1 56 21                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:56:21
	setp.le.f32 	%p18, %f41, 0f00000000;
	setp.le.f32 	%p19, %f42, 0f00000000;
	.loc	1 42 20                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:42:20
	mov.b32 	%r30, %f32;
	mov.b32 	%r31, %f31;
	.loc	1 59 37                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:59:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 60 37                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:60:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r32, %r33 };
	// end inline asm
	.loc	1 61 37                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:61:37
	mov.b32 	%r34, %f43;
	mov.b32 	%r35, %f44;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r34, %r35 };
	// end inline asm
	.loc	1 62 37                         // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:62:37
	selp.u16 	%rs6, 1, 0, %p19;
	selp.u16 	%rs7, 1, 0, %p18;
	shl.b16 	%rs8, %rs7, 8;
	or.b16  	%rs2, %rs6, %rs8;
	// begin inline asm
	@%p1 st.global.b16 [ %rd13 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 62 4                          // charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py:62:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ha/charsq46tmsqmlhqrrvztyxv7oybhlnrymyydvzxrpmrrskyarv4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 304                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x129 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 97
.b8 114
.b8 115
.b8 113
.b8 52
.b8 54
.b8 116
.b8 109
.b8 115
.b8 113
.b8 109
.b8 108
.b8 104
.b8 113
.b8 114
.b8 114
.b8 118
.b8 122
.b8 116
.b8 121
.b8 120
.b8 118
.b8 55
.b8 111
.b8 121
.b8 98
.b8 104
.b8 108
.b8 110
.b8 114
.b8 121
.b8 109
.b8 121
.b8 121
.b8 100
.b8 118
.b8 122
.b8 120
.b8 114
.b8 112
.b8 109
.b8 114
.b8 114
.b8 115
.b8 107
.b8 121
.b8 97
.b8 114
.b8 118
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0xa2 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 113
.b8 95
.b8 109
.b8 97
.b8 115
.b8 107
.b8 101
.b8 100
.b8 95
.b8 102
.b8 105
.b8 108
.b8 108
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 111
.b8 110
.b8 101
.b8 115
.b8 95
.b8 108
.b8 105
.b8 107
.b8 101
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x105:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x11a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
