; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 64, !dbg !14
  %13 = mul i32 %12, 64, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = sdiv i32 %11, 16384, !dbg !16
  %15 = sext i32 %11 to i64, !dbg !17
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !17
  %17 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !18
  %18 = extractvalue { i32, i32, i32, i32 } %17, 0, !dbg !18
  %19 = extractvalue { i32, i32, i32, i32 } %17, 1, !dbg !18
  %20 = extractvalue { i32, i32, i32, i32 } %17, 2, !dbg !18
  %21 = extractvalue { i32, i32, i32, i32 } %17, 3, !dbg !18
  %22 = shl nsw i32 %14, 6, !dbg !19
  %23 = add nsw i32 %22, %.decomposed, !dbg !20
  %24 = sext i32 %23 to i64, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !21
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !22
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !22
  %28 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !22
  %29 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !22
  %30 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !22
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !23
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !24
  %33 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !24
  %34 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !24
  %35 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !24
  %36 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !24
  %37 = insertelement <4 x i32> poison, i32 %21, i64 0, !dbg !18
  %38 = insertelement <4 x i32> %37, i32 %20, i64 1, !dbg !18
  %39 = insertelement <4 x i32> %38, i32 %19, i64 2, !dbg !18
  %40 = insertelement <4 x i32> %39, i32 %18, i64 3, !dbg !18
  %41 = bitcast <4 x i32> %40 to <4 x float>, !dbg !18
  %42 = insertelement <4 x i32> poison, i32 %30, i64 0, !dbg !22
  %43 = insertelement <4 x i32> %42, i32 %29, i64 1, !dbg !22
  %44 = insertelement <4 x i32> %43, i32 %28, i64 2, !dbg !22
  %45 = insertelement <4 x i32> %44, i32 %27, i64 3, !dbg !22
  %46 = bitcast <4 x i32> %45 to <4 x float>, !dbg !22
  %47 = insertelement <4 x i32> poison, i32 %36, i64 0, !dbg !24
  %48 = insertelement <4 x i32> %47, i32 %35, i64 1, !dbg !24
  %49 = insertelement <4 x i32> %48, i32 %34, i64 2, !dbg !24
  %50 = insertelement <4 x i32> %49, i32 %33, i64 3, !dbg !24
  %51 = bitcast <4 x i32> %50 to <4 x float>, !dbg !24
  %52 = fsub <4 x float> %41, %46, !dbg !25
  %53 = fmul <4 x float> %52, %51, !dbg !26
  %54 = fcmp ogt <4 x float> %53, zeroinitializer, !dbg !27
  %55 = extractelement <4 x float> %53, i64 3, !dbg !28
  %56 = fmul float %55, 0x3FB99999A0000000, !dbg !29
  %57 = extractelement <4 x float> %53, i64 2, !dbg !28
  %58 = fmul float %57, 0x3FB99999A0000000, !dbg !29
  %59 = extractelement <4 x float> %53, i64 1, !dbg !28
  %60 = fmul float %59, 0x3FB99999A0000000, !dbg !29
  %61 = extractelement <4 x float> %53, i64 0, !dbg !28
  %62 = fmul float %61, 0x3FB99999A0000000, !dbg !29
  %63 = extractelement <4 x i1> %54, i64 3, !dbg !28
  %64 = select i1 %63, float %55, float %56, !dbg !28
  %65 = extractelement <4 x i1> %54, i64 2, !dbg !28
  %66 = select i1 %65, float %57, float %58, !dbg !28
  %67 = extractelement <4 x i1> %54, i64 1, !dbg !28
  %68 = select i1 %67, float %59, float %60, !dbg !28
  %69 = extractelement <4 x i1> %54, i64 0, !dbg !28
  %70 = select i1 %69, float %61, float %62, !dbg !28
  %71 = shl i32 %12, 7, !dbg !30
  %72 = add i32 %71, %.decomposed, !dbg !31
  %73 = sext i32 %72 to i64, !dbg !32
  %74 = getelementptr float, ptr addrspace(1) %3, i64 %73, !dbg !32
  %75 = bitcast float %64 to i32, !dbg !33
  %76 = bitcast float %66 to i32, !dbg !33
  %77 = bitcast float %68 to i32, !dbg !33
  %78 = bitcast float %70 to i32, !dbg !33
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %75, i32 %76, i32 %77, i32 %78, ptr addrspace(1) %74, i1 true) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdi4do6n3fk7ckw3cs663655hcop46jmocccumiaezn3flwaxjkp.py", directory: "inductor_cache/di")
!4 = !{ptr @triton_poi_fused_cat_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_33, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_33", linkageName: "triton_poi_fused_cat_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 27, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 30, scope: !7)
!18 = !DILocation(line: 28, column: 35, scope: !7)
!19 = !DILocation(line: 29, column: 38, scope: !7)
!20 = !DILocation(line: 29, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 43, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 43, scope: !7)
!25 = !DILocation(line: 31, column: 18, scope: !7)
!26 = !DILocation(line: 32, column: 18, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 32, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 34, scope: !7)
!31 = !DILocation(line: 38, column: 30, scope: !7)
!32 = !DILocation(line: 38, column: 25, scope: !7)
!33 = !DILocation(line: 38, column: 45, scope: !7)
!34 = !DILocation(line: 38, column: 4, scope: !7)
