//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_add_convolution_native_group_norm_33 // -- Begin function triton_red_fused__unsafe_index_add_convolution_native_group_norm_33
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33
.visible .entry triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_7,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_8,
	.param .u32 triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_9
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<98>;
	.reg .b32 	%r<319>;
	.reg .f32 	%f<307>;
	.reg .b64 	%rd<244>;
	.loc	1 19 0                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:19:0

// %bb.0:
	ld.param.u64 	%rd34, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_7];
	ld.param.u64 	%rd33, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_6];
	ld.param.u64 	%rd32, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_5];
	ld.param.u64 	%rd241, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_4];
	ld.param.u64 	%rd240, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_3];
	ld.param.u64 	%rd29, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_1];
	ld.param.u64 	%rd28, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_0];
$L__tmp0:
	.loc	1 22 28                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:22:28
	// begin inline asm
	mov.u32 %r34, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:22:33
	shl.b32 	%r36, %r34, 6;
	ld.param.u64 	%rd38, [triton_red_fused__unsafe_index_add_convolution_native_group_norm_33_param_2];
	.loc	1 23 44                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 63;
	shr.u32 	%r37, %r1, 4;
	bfe.u32 	%r38, %r1, 4, 4;
	and.b32  	%r39, %r1, 256;
	shr.u32 	%r40, %r39, 4;
	or.b32  	%r41, %r38, %r40;
	.loc	1 23 23                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:23:23
	or.b32  	%r3, %r36, %r2;
	or.b32  	%r4, %r36, %r41;
	or.b32  	%r5, %r4, 32;
	.loc	1 24 21                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:24:21
	setp.lt.s32 	%p2, %r3, 512;
	.loc	1 25 33                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:25:33
	shr.u32 	%r6, %r1, 6;
	bfe.u32 	%r42, %r1, 6, 1;
	and.b32  	%r43, %r6, 2;
	or.b32  	%r44, %r42, %r43;
	shr.u32 	%r45, %r39, 6;
	or.b32  	%r46, %r44, %r45;
	shl.b32 	%r47, %r1, 2;
	.loc	1 27 19                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:27:19
	shr.s32 	%r49, %r3, 31;
	shr.u32 	%r50, %r49, 30;
	add.s32 	%r51, %r3, %r50;
	shr.s32 	%r52, %r51, 2;
	.loc	1 26 19                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:26:19
	and.b32  	%r53, %r51, 268435452;
	sub.s32 	%r54, %r3, %r53;
	.loc	1 28 26                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:28:26
	shr.s32 	%r55, %r51, 31;
	shr.u32 	%r56, %r55, 27;
	add.s32 	%r57, %r52, %r56;
	and.b32  	%r58, %r57, -32;
	sub.s32 	%r59, %r52, %r58;
	.loc	1 29 31                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:29:31
	mul.wide.s32 	%rd39, %r59, 4;
	add.s64 	%rd35, %rd38, %rd39;
	.loc	1 29 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:29:36
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r35 }, [ %rd35 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r35;
	.loc	1 41 42                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:42
	shl.b32 	%r7, %r54, 4;
	.loc	1 55 71                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:71
	shl.b32 	%r60, %r52, 15;
	.loc	1 55 65                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:65
	cvt.s64.s32 	%rd1, %r60;
	mul.wide.u32 	%rd40, %r46, 8;
	add.s64 	%rd77, %rd28, %rd40;
	add.s64 	%rd79, %rd77, 64;
	add.s64 	%rd81, %rd77, 128;
	add.s64 	%rd83, %rd77, 192;
	add.s64 	%rd85, %rd77, 256;
	add.s64 	%rd87, %rd77, 320;
	add.s64 	%rd89, %rd77, 384;
	add.s64 	%rd91, %rd77, 448;
	shl.b32 	%r61, %r1, 8;
	and.b32  	%r62, %r61, 3840;
	or.b32  	%r63, %r41, %r62;
	and.b32  	%r64, %r1, 511;
	shr.u32 	%r65, %r62, 4;
	mov.u32 	%r66, global_smem;
	add.s32 	%r67, %r66, %r65;
	shl.b32 	%r68, %r63, 2;
	add.s32 	%r149, %r67, %r68;
	or.b32  	%r69, %r62, 64;
	shr.u32 	%r70, %r69, 4;
	add.s32 	%r71, %r66, %r70;
	add.s32 	%r72, %r71, %r68;
	add.s32 	%r151, %r72, 256;
	or.b32  	%r73, %r62, 128;
	shr.u32 	%r74, %r73, 4;
	add.s32 	%r75, %r66, %r74;
	add.s32 	%r76, %r75, %r68;
	add.s32 	%r153, %r76, 512;
	or.b32  	%r77, %r62, 192;
	shr.u32 	%r78, %r77, 4;
	add.s32 	%r79, %r66, %r78;
	add.s32 	%r80, %r79, %r68;
	add.s32 	%r155, %r80, 768;
	add.s32 	%r157, %r149, 128;
	add.s32 	%r159, %r72, 384;
	add.s32 	%r161, %r76, 640;
	add.s32 	%r163, %r80, 896;
	and.b32  	%r81, %r37, 28;
	add.s32 	%r82, %r66, %r81;
	shl.b32 	%r83, %r64, 2;
	add.s32 	%r16, %r82, %r83;
	or.b32  	%r84, %r64, 512;
	shr.u32 	%r85, %r84, 4;
	and.b32  	%r86, %r85, 60;
	add.s32 	%r87, %r66, %r86;
	add.s32 	%r17, %r87, %r83;
	or.b32  	%r88, %r64, 1024;
	shr.u32 	%r89, %r88, 4;
	and.b32  	%r90, %r89, 92;
	add.s32 	%r91, %r66, %r90;
	add.s32 	%r18, %r91, %r83;
	or.b32  	%r92, %r64, 1536;
	shr.u32 	%r93, %r92, 4;
	and.b32  	%r94, %r93, 124;
	add.s32 	%r95, %r66, %r94;
	add.s32 	%r19, %r95, %r83;
	or.b32  	%r96, %r64, 2048;
	shr.u32 	%r97, %r96, 4;
	and.b32  	%r98, %r97, 156;
	add.s32 	%r99, %r66, %r98;
	add.s32 	%r20, %r99, %r83;
	or.b32  	%r100, %r64, 2560;
	shr.u32 	%r101, %r100, 4;
	and.b32  	%r102, %r101, 188;
	add.s32 	%r103, %r66, %r102;
	add.s32 	%r21, %r103, %r83;
	or.b32  	%r104, %r64, 3072;
	shr.u32 	%r105, %r104, 4;
	and.b32  	%r106, %r105, 220;
	add.s32 	%r107, %r66, %r106;
	add.s32 	%r22, %r107, %r83;
	or.b32  	%r108, %r64, 3584;
	shr.u32 	%r109, %r108, 4;
	and.b32  	%r110, %r109, 252;
	add.s32 	%r111, %r66, %r110;
	add.s32 	%r23, %r111, %r83;
	shl.b32 	%r112, %r1, 6;
	and.b32  	%r113, %r112, 4032;
	or.b32  	%r114, %r113, %r46;
	and.b32  	%r115, %r47, 2044;
	shr.u32 	%r116, %r113, 2;
	add.s32 	%r117, %r66, %r116;
	shl.b32 	%r118, %r114, 2;
	add.s32 	%r222, %r117, %r118;
	add.s32 	%r224, %r222, 32;
	add.s32 	%r226, %r222, 64;
	add.s32 	%r228, %r222, 96;
	add.s32 	%r230, %r222, 128;
	add.s32 	%r232, %r222, 160;
	add.s32 	%r234, %r222, 192;
	add.s32 	%r236, %r222, 224;
	and.b32  	%r119, %r1, 496;
	add.s32 	%r120, %r66, %r119;
	shl.b32 	%r121, %r115, 2;
	add.s32 	%r32, %r120, %r121;
	or.b32  	%r122, %r115, 2048;
	shr.u32 	%r123, %r122, 2;
	and.b32  	%r124, %r123, 1008;
	add.s32 	%r125, %r66, %r124;
	add.s32 	%r33, %r125, %r121;
	.loc	1 34 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:34:36
	and.b32  	%r126, %r1, 15;
	mul.wide.u32 	%rd41, %r126, 16;
	or.b32  	%r127, %r36, %r40;
	or.b32  	%r128, %r127, %r38;
	shl.b32 	%r129, %r128, 16;
	or.b32  	%r130, %r129, 2097152;
	mul.wide.s32 	%rd42, %r130, 4;
	or.b64  	%rd10, %rd41, %rd42;
	mul.wide.s32 	%rd43, %r129, 4;
	or.b64  	%rd11, %rd41, %rd43;
	or.b32  	%r131, %r45, %r43;
	or.b32  	%r132, %r131, %r42;
	mov.u64 	%rd242, 0;
	cvt.u64.u32 	%rd13, %r132;
	mov.f32 	%f106, 0f00000000;
	mov.u64 	%rd243, -64;
	setp.lt.s32 	%p39, %r5, 512;
	setp.lt.s32 	%p34, %r4, 512;
	shl.b64 	%rd170, %rd1, 2;
	mov.f32 	%f108, 0f3F800000;
	mov.f32 	%f259, %f106;
	mov.f32 	%f260, %f106;
	mov.f32 	%f261, %f106;
	mov.f32 	%f262, %f106;
	mov.f32 	%f263, %f106;
	mov.f32 	%f264, %f106;
	mov.f32 	%f265, %f106;
	mov.f32 	%f266, %f106;
	mov.f32 	%f267, %f106;
	mov.f32 	%f268, %f106;
	mov.f32 	%f269, %f106;
	mov.f32 	%f270, %f106;
	mov.f32 	%f271, %f106;
	mov.f32 	%f272, %f106;
	mov.f32 	%f273, %f106;
	mov.f32 	%f274, %f106;
	mov.f32 	%f275, %f106;
	mov.f32 	%f276, %f106;
	mov.f32 	%f277, %f106;
	mov.f32 	%f278, %f106;
	mov.f32 	%f279, %f106;
	mov.f32 	%f280, %f106;
	mov.f32 	%f281, %f106;
	mov.f32 	%f282, %f106;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 62 54                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:62:54
	selp.f32 	%f275, %f291, %f275, %p2;
	selp.f32 	%f276, %f292, %f276, %p2;
	selp.f32 	%f277, %f293, %f277, %p2;
	selp.f32 	%f278, %f294, %f278, %p2;
	selp.f32 	%f279, %f295, %f279, %p2;
	selp.f32 	%f280, %f296, %f280, %p2;
	selp.f32 	%f281, %f297, %f281, %p2;
	selp.f32 	%f282, %f298, %f282, %p2;
	.loc	1 63 50                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:63:50
	selp.f32 	%f267, %f283, %f267, %p2;
	selp.f32 	%f268, %f284, %f268, %p2;
	selp.f32 	%f269, %f285, %f269, %p2;
	selp.f32 	%f270, %f286, %f270, %p2;
	selp.f32 	%f271, %f287, %f271, %p2;
	selp.f32 	%f272, %f288, %f272, %p2;
	selp.f32 	%f273, %f289, %f273, %p2;
	selp.f32 	%f274, %f290, %f274, %p2;
	.loc	1 64 58                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:64:58
	selp.f32 	%f259, %f299, %f259, %p2;
	selp.f32 	%f260, %f300, %f260, %p2;
	selp.f32 	%f261, %f301, %f261, %p2;
	selp.f32 	%f262, %f302, %f262, %p2;
	selp.f32 	%f263, %f303, %f263, %p2;
	selp.f32 	%f264, %f304, %f264, %p2;
	selp.f32 	%f265, %f305, %f265, %p2;
	selp.f32 	%f266, %f306, %f266, %p2;
	.loc	1 65 29                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:65:29
	add.s64 	%rd234, %rd241, %rd11;
	.loc	1 65 52                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:65:52
	add.s64 	%rd235, %rd241, %rd10;
	bar.sync 	0;
	mov.b32 	%r223, %f26;
	// begin inline asm
	@%p73 st.shared.b32 [ %r222 + 0 ], %r223;
	// end inline asm
	mov.b32 	%r225, %f27;
	// begin inline asm
	@%p73 st.shared.b32 [ %r224 + 0 ], %r225;
	// end inline asm
	mov.b32 	%r227, %f28;
	// begin inline asm
	@%p73 st.shared.b32 [ %r226 + 0 ], %r227;
	// end inline asm
	mov.b32 	%r229, %f29;
	// begin inline asm
	@%p73 st.shared.b32 [ %r228 + 0 ], %r229;
	// end inline asm
	mov.b32 	%r231, %f30;
	// begin inline asm
	@%p73 st.shared.b32 [ %r230 + 0 ], %r231;
	// end inline asm
	mov.b32 	%r233, %f31;
	// begin inline asm
	@%p73 st.shared.b32 [ %r232 + 0 ], %r233;
	// end inline asm
	mov.b32 	%r235, %f32;
	// begin inline asm
	@%p73 st.shared.b32 [ %r234 + 0 ], %r235;
	// end inline asm
	mov.b32 	%r237, %f33;
	// begin inline asm
	@%p73 st.shared.b32 [ %r236 + 0 ], %r237;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r242, %r243, %r244, %r245}, [%r33+8192];
	ld.shared.v4.u32 	{%r238, %r239, %r240, %r241}, [%r32];
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd234 + 0 ], { %r238, %r239, %r240, %r241 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd235 + 0 ], { %r242, %r243, %r244, %r245 };
	// end inline asm
	.loc	1 34 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:34:36
	add.s64 	%rd242, %rd242, 1;
	add.s64 	%rd241, %rd241, 256;
	add.s64 	%rd240, %rd240, 256;
	setp.lt.u64 	%p72, %rd24, 65472;
	mov.u64 	%rd243, %rd24;
	@%p72 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 37 23                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:37:23
	add.s64 	%rd24, %rd243, 64;
	cvt.u32.u64 	%r173, %rd24;
	shr.u32 	%r174, %r173, 12;
	add.s64 	%rd102, %rd13, %rd243;
	cvt.u32.u64 	%r175, %rd102;
	add.s32 	%r176, %r175, 72;
	shr.u32 	%r177, %r176, 12;
	add.s32 	%r178, %r175, 80;
	shr.u32 	%r179, %r178, 12;
	add.s32 	%r180, %r175, 88;
	shr.u32 	%r181, %r180, 12;
	add.s32 	%r182, %r175, 96;
	shr.u32 	%r183, %r182, 12;
	add.s32 	%r184, %r175, 104;
	shr.u32 	%r185, %r184, 12;
	add.s32 	%r186, %r175, 112;
	shr.u32 	%r187, %r186, 12;
	add.s32 	%r188, %r175, 120;
	shr.u32 	%r189, %r188, 12;
	.loc	1 38 31                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:38:31
	and.b64  	%rd103, %rd242, 63;
	.loc	1 41 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:39
	or.b32  	%r190, %r174, %r7;
	add.s32 	%r191, %r177, %r7;
	add.s32 	%r192, %r179, %r7;
	add.s32 	%r193, %r181, %r7;
	add.s32 	%r194, %r183, %r7;
	add.s32 	%r195, %r185, %r7;
	add.s32 	%r196, %r187, %r7;
	add.s32 	%r197, %r189, %r7;
	.loc	1 41 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:34
	mul.wide.s32 	%rd104, %r190, 8;
	add.s64 	%rd45, %rd28, %rd104;
	mul.wide.s32 	%rd105, %r191, 8;
	add.s64 	%rd47, %rd28, %rd105;
	mul.wide.s32 	%rd106, %r192, 8;
	add.s64 	%rd49, %rd28, %rd106;
	mul.wide.s32 	%rd107, %r193, 8;
	add.s64 	%rd51, %rd28, %rd107;
	mul.wide.s32 	%rd108, %r194, 8;
	add.s64 	%rd53, %rd28, %rd108;
	mul.wide.s32 	%rd109, %r195, 8;
	add.s64 	%rd55, %rd28, %rd109;
	mul.wide.s32 	%rd110, %r196, 8;
	add.s64 	%rd57, %rd28, %rd110;
	mul.wide.s32 	%rd111, %r197, 8;
	add.s64 	%rd59, %rd28, %rd111;
	.loc	1 41 47                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:41:47
	// begin inline asm
	mov.u64 %rd44, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd44 }, [ %rd45 + 0 ];
	@!%p2 mov.u64 %rd44, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd46, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd46 }, [ %rd47 + 0 ];
	@!%p2 mov.u64 %rd46, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd48, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd48 }, [ %rd49 + 0 ];
	@!%p2 mov.u64 %rd48, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd50, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd50 }, [ %rd51 + 0 ];
	@!%p2 mov.u64 %rd50, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd52, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd52 }, [ %rd53 + 0 ];
	@!%p2 mov.u64 %rd52, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd54, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd54 }, [ %rd55 + 0 ];
	@!%p2 mov.u64 %rd54, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd56, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd56 }, [ %rd57 + 0 ];
	@!%p2 mov.u64 %rd56, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd58, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd58 }, [ %rd59 + 0 ];
	@!%p2 mov.u64 %rd58, 0x0;
	// end inline asm
	.loc	1 42 34                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:42:34
	shl.b64 	%rd112, %rd103, 3;
	add.s64 	%rd61, %rd28, %rd112;
	mov.pred 	%p73, -1;
	.loc	1 42 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:42:39
	// begin inline asm
	mov.u64 %rd60, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd60 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd62, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd62 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd64, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd64 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd66, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd66 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd68, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd68 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd70, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd70 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd72, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd72 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd74, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd74 }, [ %rd61 + 0 ];
	// end inline asm
	.loc	1 43 39                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:43:39
	// begin inline asm
	mov.u64 %rd76, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd76 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd78, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd78 }, [ %rd79 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd80, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd80 }, [ %rd81 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd82, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd82 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd84, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd84 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd86, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd86 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd88, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd88 }, [ %rd89 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd90, 0x0;
	@%p73 ld.global.L1::evict_last.b64 { %rd90 }, [ %rd91 + 0 ];
	// end inline asm
	.loc	1 44 35                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:35
	add.s64 	%rd92, %rd240, %rd11;
	.loc	1 44 51                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:44:51
	add.s64 	%rd93, %rd240, %rd10;
	mov.b32 	%r137, 0;
	// begin inline asm
	mov.u32 %r133, 0x0;
	mov.u32 %r134, 0x0;
	mov.u32 %r135, 0x0;
	mov.u32 %r136, 0x0;
	@%p34 ld.global.L1::evict_first.v4.b32 { %r133, %r134, %r135, %r136 }, [ %rd92 + 0 ];
	@!%p34 mov.u32 %r133, %r137;
	@!%p34 mov.u32 %r134, %r137;
	@!%p34 mov.u32 %r135, %r137;
	@!%p34 mov.u32 %r136, %r137;
	// end inline asm
	// begin inline asm
	mov.u32 %r141, 0x0;
	mov.u32 %r142, 0x0;
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	@%p39 ld.global.L1::evict_first.v4.b32 { %r141, %r142, %r143, %r144 }, [ %rd93 + 0 ];
	@!%p39 mov.u32 %r141, %r137;
	@!%p39 mov.u32 %r142, %r137;
	@!%p39 mov.u32 %r143, %r137;
	@!%p39 mov.u32 %r144, %r137;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p73 st.shared.b32 [ %r149 + 0 ], %r133;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r151 + 0 ], %r134;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r153 + 0 ], %r135;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r155 + 0 ], %r136;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r157 + 0 ], %r141;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r159 + 0 ], %r142;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r161 + 0 ], %r143;
	// end inline asm
	// begin inline asm
	@%p73 st.shared.b32 [ %r163 + 0 ], %r144;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f109, [%r16];
	ld.shared.f32 	%f110, [%r17+2048];
	ld.shared.f32 	%f111, [%r18+4096];
	ld.shared.f32 	%f112, [%r19+6144];
	ld.shared.f32 	%f113, [%r20+8192];
	ld.shared.f32 	%f114, [%r21+10240];
	ld.shared.f32 	%f115, [%r22+12288];
	ld.shared.f32 	%f116, [%r23+14336];
	.loc	1 48 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:48:36
	shr.u64 	%rd113, %rd44, 58;
	and.b64  	%rd114, %rd113, 32;
	add.s64 	%rd115, %rd114, %rd44;
	shr.u64 	%rd116, %rd46, 58;
	and.b64  	%rd117, %rd116, 32;
	add.s64 	%rd118, %rd117, %rd46;
	shr.u64 	%rd119, %rd48, 58;
	and.b64  	%rd120, %rd119, 32;
	add.s64 	%rd121, %rd120, %rd48;
	shr.u64 	%rd122, %rd50, 58;
	and.b64  	%rd123, %rd122, 32;
	add.s64 	%rd124, %rd123, %rd50;
	shr.u64 	%rd125, %rd52, 58;
	and.b64  	%rd126, %rd125, 32;
	add.s64 	%rd127, %rd126, %rd52;
	shr.u64 	%rd128, %rd54, 58;
	and.b64  	%rd129, %rd128, 32;
	add.s64 	%rd130, %rd129, %rd54;
	shr.u64 	%rd131, %rd56, 58;
	and.b64  	%rd132, %rd131, 32;
	add.s64 	%rd133, %rd132, %rd56;
	shr.u64 	%rd134, %rd58, 58;
	and.b64  	%rd135, %rd134, 32;
	add.s64 	%rd136, %rd135, %rd58;
	.loc	1 51 36                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:51:36
	shr.u64 	%rd137, %rd60, 58;
	and.b64  	%rd138, %rd137, 32;
	add.s64 	%rd139, %rd138, %rd60;
	shr.u64 	%rd140, %rd62, 58;
	and.b64  	%rd141, %rd140, 32;
	add.s64 	%rd142, %rd141, %rd62;
	shr.u64 	%rd143, %rd64, 58;
	and.b64  	%rd144, %rd143, 32;
	add.s64 	%rd145, %rd144, %rd64;
	shr.u64 	%rd146, %rd66, 58;
	and.b64  	%rd147, %rd146, 32;
	add.s64 	%rd148, %rd147, %rd66;
	shr.u64 	%rd149, %rd68, 58;
	and.b64  	%rd150, %rd149, 32;
	add.s64 	%rd151, %rd150, %rd68;
	shr.u64 	%rd152, %rd70, 58;
	and.b64  	%rd153, %rd152, 32;
	add.s64 	%rd154, %rd153, %rd70;
	shr.u64 	%rd155, %rd72, 58;
	and.b64  	%rd156, %rd155, 32;
	add.s64 	%rd157, %rd156, %rd72;
	shr.u64 	%rd158, %rd74, 58;
	and.b64  	%rd159, %rd158, 32;
	add.s64 	%rd160, %rd159, %rd74;
	.loc	1 55 35                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:35
	shl.b64 	%rd161, %rd76, 2;
	add.s64 	%rd162, %rd29, %rd161;
	shr.u64 	%rd163, %rd76, 56;
	and.b64  	%rd164, %rd163, 128;
	add.s64 	%rd165, %rd162, %rd164;
	shl.b64 	%rd166, %rd139, 7;
	add.s64 	%rd167, %rd165, %rd166;
	shl.b64 	%rd168, %rd115, 12;
	add.s64 	%rd169, %rd167, %rd168;
	add.s64 	%rd94, %rd169, %rd170;
	shl.b64 	%rd171, %rd78, 2;
	add.s64 	%rd172, %rd29, %rd171;
	shr.u64 	%rd173, %rd78, 56;
	and.b64  	%rd174, %rd173, 128;
	add.s64 	%rd175, %rd172, %rd174;
	shl.b64 	%rd176, %rd142, 7;
	add.s64 	%rd177, %rd175, %rd176;
	shl.b64 	%rd178, %rd118, 12;
	add.s64 	%rd179, %rd177, %rd178;
	add.s64 	%rd95, %rd179, %rd170;
	shl.b64 	%rd180, %rd80, 2;
	add.s64 	%rd181, %rd29, %rd180;
	shr.u64 	%rd182, %rd80, 56;
	and.b64  	%rd183, %rd182, 128;
	add.s64 	%rd184, %rd181, %rd183;
	shl.b64 	%rd185, %rd145, 7;
	add.s64 	%rd186, %rd184, %rd185;
	shl.b64 	%rd187, %rd121, 12;
	add.s64 	%rd188, %rd186, %rd187;
	add.s64 	%rd96, %rd188, %rd170;
	shl.b64 	%rd189, %rd82, 2;
	add.s64 	%rd190, %rd29, %rd189;
	shr.u64 	%rd191, %rd82, 56;
	and.b64  	%rd192, %rd191, 128;
	add.s64 	%rd193, %rd190, %rd192;
	shl.b64 	%rd194, %rd148, 7;
	add.s64 	%rd195, %rd193, %rd194;
	shl.b64 	%rd196, %rd124, 12;
	add.s64 	%rd197, %rd195, %rd196;
	add.s64 	%rd97, %rd197, %rd170;
	shl.b64 	%rd198, %rd84, 2;
	add.s64 	%rd199, %rd29, %rd198;
	shr.u64 	%rd200, %rd84, 56;
	and.b64  	%rd201, %rd200, 128;
	add.s64 	%rd202, %rd199, %rd201;
	shl.b64 	%rd203, %rd151, 7;
	add.s64 	%rd204, %rd202, %rd203;
	shl.b64 	%rd205, %rd127, 12;
	add.s64 	%rd206, %rd204, %rd205;
	add.s64 	%rd98, %rd206, %rd170;
	shl.b64 	%rd207, %rd86, 2;
	add.s64 	%rd208, %rd29, %rd207;
	shr.u64 	%rd209, %rd86, 56;
	and.b64  	%rd210, %rd209, 128;
	add.s64 	%rd211, %rd208, %rd210;
	shl.b64 	%rd212, %rd154, 7;
	add.s64 	%rd213, %rd211, %rd212;
	shl.b64 	%rd214, %rd130, 12;
	add.s64 	%rd215, %rd213, %rd214;
	add.s64 	%rd99, %rd215, %rd170;
	shl.b64 	%rd216, %rd88, 2;
	add.s64 	%rd217, %rd29, %rd216;
	shr.u64 	%rd218, %rd88, 56;
	and.b64  	%rd219, %rd218, 128;
	add.s64 	%rd220, %rd217, %rd219;
	shl.b64 	%rd221, %rd157, 7;
	add.s64 	%rd222, %rd220, %rd221;
	shl.b64 	%rd223, %rd133, 12;
	add.s64 	%rd224, %rd222, %rd223;
	add.s64 	%rd100, %rd224, %rd170;
	shl.b64 	%rd225, %rd90, 2;
	add.s64 	%rd226, %rd29, %rd225;
	shr.u64 	%rd227, %rd90, 56;
	and.b64  	%rd228, %rd227, 128;
	add.s64 	%rd229, %rd226, %rd228;
	shl.b64 	%rd230, %rd160, 7;
	add.s64 	%rd231, %rd229, %rd230;
	shl.b64 	%rd232, %rd136, 12;
	add.s64 	%rd233, %rd231, %rd232;
	add.s64 	%rd101, %rd233, %rd170;
	.loc	1 55 76                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:55:76
	// begin inline asm
	mov.u32 %r165, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r165 }, [ %rd94 + 0 ];
	// end inline asm
	mov.b32 	%f117, %r165;
	// begin inline asm
	mov.u32 %r166, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r166 }, [ %rd95 + 0 ];
	// end inline asm
	mov.b32 	%f118, %r166;
	// begin inline asm
	mov.u32 %r167, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r167 }, [ %rd96 + 0 ];
	// end inline asm
	mov.b32 	%f119, %r167;
	// begin inline asm
	mov.u32 %r168, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r168 }, [ %rd97 + 0 ];
	// end inline asm
	mov.b32 	%f120, %r168;
	// begin inline asm
	mov.u32 %r169, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r169 }, [ %rd98 + 0 ];
	// end inline asm
	mov.b32 	%f121, %r169;
	// begin inline asm
	mov.u32 %r170, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r170 }, [ %rd99 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r170;
	// begin inline asm
	mov.u32 %r171, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r171 }, [ %rd100 + 0 ];
	// end inline asm
	mov.b32 	%f123, %r171;
	// begin inline asm
	mov.u32 %r172, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r172 }, [ %rd101 + 0 ];
	// end inline asm
	mov.b32 	%f124, %r172;
	.loc	1 56 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:56:24
	add.f32 	%f125, %f1, %f117;
	add.f32 	%f126, %f1, %f118;
	add.f32 	%f127, %f1, %f119;
	add.f32 	%f128, %f1, %f120;
	add.f32 	%f129, %f1, %f121;
	add.f32 	%f130, %f1, %f122;
	add.f32 	%f131, %f1, %f123;
	add.f32 	%f132, %f1, %f124;
	.loc	1 57 24                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:57:24
	add.f32 	%f26, %f109, %f125;
	add.f32 	%f27, %f110, %f126;
	add.f32 	%f28, %f111, %f127;
	add.f32 	%f29, %f112, %f128;
	add.f32 	%f30, %f113, %f129;
	add.f32 	%f31, %f114, %f130;
	add.f32 	%f32, %f115, %f131;
	add.f32 	%f33, %f116, %f132;
	.loc	1 60 66                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:60:66
	setp.eq.s64 	%p60, %rd243, -64;
	mov.f32 	%f283, %f106;
	mov.f32 	%f284, %f106;
	mov.f32 	%f285, %f106;
	mov.f32 	%f286, %f106;
	mov.f32 	%f287, %f106;
	mov.f32 	%f288, %f106;
	mov.f32 	%f289, %f106;
	mov.f32 	%f290, %f106;
	mov.f32 	%f291, %f26;
	mov.f32 	%f292, %f27;
	mov.f32 	%f293, %f28;
	mov.f32 	%f294, %f29;
	mov.f32 	%f295, %f30;
	mov.f32 	%f296, %f31;
	mov.f32 	%f297, %f32;
	mov.f32 	%f298, %f33;
	mov.f32 	%f299, %f108;
	mov.f32 	%f300, %f108;
	mov.f32 	%f301, %f108;
	mov.f32 	%f302, %f108;
	mov.f32 	%f303, %f108;
	mov.f32 	%f304, %f108;
	mov.f32 	%f305, %f108;
	mov.f32 	%f306, %f108;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p60 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f133, %f26, %f275;
	sub.f32 	%f134, %f27, %f276;
	sub.f32 	%f135, %f28, %f277;
	sub.f32 	%f136, %f29, %f278;
	sub.f32 	%f137, %f30, %f279;
	sub.f32 	%f138, %f31, %f280;
	sub.f32 	%f139, %f32, %f281;
	sub.f32 	%f140, %f33, %f282;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f299, %f259, 0f3F800000;
	add.f32 	%f300, %f260, 0f3F800000;
	add.f32 	%f301, %f261, 0f3F800000;
	add.f32 	%f302, %f262, 0f3F800000;
	add.f32 	%f303, %f263, 0f3F800000;
	add.f32 	%f304, %f264, 0f3F800000;
	add.f32 	%f305, %f265, 0f3F800000;
	add.f32 	%f306, %f266, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r199, %f133;
	mov.b32 	%r200, %f299;
	// begin inline asm
	div.full.f32 %r198, %r199, %r200;
	// end inline asm
	mov.b32 	%f141, %r198;
	mov.b32 	%r202, %f134;
	mov.b32 	%r203, %f300;
	// begin inline asm
	div.full.f32 %r201, %r202, %r203;
	// end inline asm
	mov.b32 	%f142, %r201;
	mov.b32 	%r205, %f135;
	mov.b32 	%r206, %f301;
	// begin inline asm
	div.full.f32 %r204, %r205, %r206;
	// end inline asm
	mov.b32 	%f143, %r204;
	mov.b32 	%r208, %f136;
	mov.b32 	%r209, %f302;
	// begin inline asm
	div.full.f32 %r207, %r208, %r209;
	// end inline asm
	mov.b32 	%f144, %r207;
	mov.b32 	%r211, %f137;
	mov.b32 	%r212, %f303;
	// begin inline asm
	div.full.f32 %r210, %r211, %r212;
	// end inline asm
	mov.b32 	%f145, %r210;
	mov.b32 	%r214, %f138;
	mov.b32 	%r215, %f304;
	// begin inline asm
	div.full.f32 %r213, %r214, %r215;
	// end inline asm
	mov.b32 	%f146, %r213;
	mov.b32 	%r217, %f139;
	mov.b32 	%r218, %f305;
	// begin inline asm
	div.full.f32 %r216, %r217, %r218;
	// end inline asm
	mov.b32 	%f147, %r216;
	mov.b32 	%r220, %f140;
	mov.b32 	%r221, %f306;
	// begin inline asm
	div.full.f32 %r219, %r220, %r221;
	// end inline asm
	mov.b32 	%f148, %r219;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f291, %f275, %f141;
	add.f32 	%f292, %f276, %f142;
	add.f32 	%f293, %f277, %f143;
	add.f32 	%f294, %f278, %f144;
	add.f32 	%f295, %f279, %f145;
	add.f32 	%f296, %f280, %f146;
	add.f32 	%f297, %f281, %f147;
	add.f32 	%f298, %f282, %f148;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f149, %f26, %f291;
	sub.f32 	%f150, %f27, %f292;
	sub.f32 	%f151, %f28, %f293;
	sub.f32 	%f152, %f29, %f294;
	sub.f32 	%f153, %f30, %f295;
	sub.f32 	%f154, %f31, %f296;
	sub.f32 	%f155, %f32, %f297;
	sub.f32 	%f156, %f33, %f298;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f283, %f133, %f149, %f267;
	fma.rn.f32 	%f284, %f134, %f150, %f268;
	fma.rn.f32 	%f285, %f135, %f151, %f269;
	fma.rn.f32 	%f286, %f136, %f152, %f270;
	fma.rn.f32 	%f287, %f137, %f153, %f271;
	fma.rn.f32 	%f288, %f138, %f154, %f272;
	fma.rn.f32 	%f289, %f139, %f155, %f273;
	fma.rn.f32 	%f290, %f140, %f156, %f274;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f157, %f276, %f275;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f158, %f259, %f260;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p86, %f158, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r248, %f158;
	mov.b32 	%r247, %f260;
	// begin inline asm
	div.full.f32 %r246, %r247, %r248;
	// end inline asm
	mov.b32 	%f159, %r246;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f160, 0f00000000, %f159, %p86;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f161, %f157, %f160, %f275;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f162, %f267, %f268;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f163, %f157, %f157;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f164, %f163, %f259;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f165, %f164, %f160, %f162;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f166, %f277, %f161;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f167, %f261, %f158;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p87, %f167, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r251, %f167;
	mov.b32 	%r250, %f261;
	// begin inline asm
	div.full.f32 %r249, %r250, %r251;
	// end inline asm
	mov.b32 	%f168, %r249;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f169, 0f00000000, %f168, %p87;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f170, %f169, %f166, %f161;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f171, %f269, %f165;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f172, %f166, %f166;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f173, %f158, %f172;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f174, %f169, %f173, %f171;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f175, %f278, %f170;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f176, %f262, %f167;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p88, %f176, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r254, %f176;
	mov.b32 	%r253, %f262;
	// begin inline asm
	div.full.f32 %r252, %r253, %r254;
	// end inline asm
	mov.b32 	%f177, %r252;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f178, 0f00000000, %f177, %p88;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f179, %f178, %f175, %f170;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f180, %f270, %f174;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f181, %f175, %f175;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f182, %f167, %f181;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f183, %f178, %f182, %f180;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f184, %f279, %f179;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f185, %f263, %f176;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p89, %f185, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r257, %f185;
	mov.b32 	%r256, %f263;
	// begin inline asm
	div.full.f32 %r255, %r256, %r257;
	// end inline asm
	mov.b32 	%f186, %r255;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f187, 0f00000000, %f186, %p89;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f188, %f187, %f184, %f179;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f189, %f271, %f183;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f190, %f184, %f184;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f191, %f176, %f190;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f192, %f187, %f191, %f189;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f193, %f280, %f188;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f194, %f264, %f185;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p90, %f194, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r260, %f194;
	mov.b32 	%r259, %f264;
	// begin inline asm
	div.full.f32 %r258, %r259, %r260;
	// end inline asm
	mov.b32 	%f195, %r258;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f196, 0f00000000, %f195, %p90;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f197, %f196, %f193, %f188;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f198, %f272, %f192;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f199, %f193, %f193;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f200, %f185, %f199;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f201, %f196, %f200, %f198;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f202, %f281, %f197;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f203, %f265, %f194;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p91, %f203, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r263, %f203;
	mov.b32 	%r262, %f265;
	// begin inline asm
	div.full.f32 %r261, %r262, %r263;
	// end inline asm
	mov.b32 	%f204, %r261;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f205, 0f00000000, %f204, %p91;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f206, %f205, %f202, %f197;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f207, %f273, %f201;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f208, %f202, %f202;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f209, %f194, %f208;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f210, %f205, %f209, %f207;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f211, %f282, %f206;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f212, %f266, %f203;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p92, %f212, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r266, %f212;
	mov.b32 	%r265, %f266;
	// begin inline asm
	div.full.f32 %r264, %r265, %r266;
	// end inline asm
	mov.b32 	%f213, %r264;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f214, 0f00000000, %f213, %p92;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f215, %f214, %f211, %f206;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f216, %f274, %f210;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f217, %f211, %f211;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f218, %f203, %f217;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f219, %f214, %f218, %f216;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r297, %r6, 7;
	shl.b32 	%r298, %r297, 2;
	shl.b32 	%r299, %r2, 5;
	or.b32  	%r300, %r299, %r298;
	add.s32 	%r267, %r66, %r300;
	mov.b32 	%r268, %f215;
	// begin inline asm
	@%p73 st.shared.b32 [ %r267 + 0 ], %r268;
	// end inline asm
	add.s32 	%r302, %r66, 2048;
	add.s32 	%r269, %r302, %r300;
	mov.b32 	%r270, %f219;
	// begin inline asm
	@%p73 st.shared.b32 [ %r269 + 0 ], %r270;
	// end inline asm
	add.s32 	%r303, %r66, 4096;
	add.s32 	%r271, %r303, %r300;
	// begin inline asm
	@%p73 st.shared.b32 [ %r271 + 0 ], %r266;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p76, %r1, 512;
	add.s32 	%r274, %r66, %r47;
	// begin inline asm
	@%p76 ld.shared.b32 %r273, [ %r274 + 0 ];
	// end inline asm
	mov.b32 	%f220, %r273;
	add.s32 	%r276, %r302, %r47;
	// begin inline asm
	@%p76 ld.shared.b32 %r275, [ %r276 + 0 ];
	// end inline asm
	mov.b32 	%f221, %r275;
	add.s32 	%r278, %r303, %r47;
	// begin inline asm
	@%p76 ld.shared.b32 %r277, [ %r278 + 0 ];
	// end inline asm
	mov.b32 	%f222, %r277;
	shfl.sync.bfly.b32	%r305, %r273, 4, 31, -1;
	mov.b32 	%f223, %r305;
	shfl.sync.bfly.b32	%r306, %r275, 4, 31, -1;
	mov.b32 	%f224, %r306;
	shfl.sync.bfly.b32	%r280, %r277, 4, 31, -1;
	mov.b32 	%f225, %r280;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f226, %f223, %f220;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f227, %f222, %f225;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p93, %f227, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r281, %f227;
	// begin inline asm
	div.full.f32 %r279, %r280, %r281;
	// end inline asm
	mov.b32 	%f228, %r279;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f229, 0f00000000, %f228, %p93;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f230, %f226, %f229, %f220;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f231, %f221, %f224;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f232, %f226, %f226;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f233, %f232, %f222;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f234, %f233, %f229, %f231;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r307, %f230;
	shfl.sync.bfly.b32	%r308, %r307, 2, 31, -1;
	mov.b32 	%f235, %r308;
	mov.b32 	%r309, %f234;
	shfl.sync.bfly.b32	%r310, %r309, 2, 31, -1;
	mov.b32 	%f236, %r310;
	shfl.sync.bfly.b32	%r283, %r281, 2, 31, -1;
	mov.b32 	%f237, %r283;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f238, %f235, %f230;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f239, %f227, %f237;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p94, %f239, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r284, %f239;
	// begin inline asm
	div.full.f32 %r282, %r283, %r284;
	// end inline asm
	mov.b32 	%f240, %r282;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f241, 0f00000000, %f240, %p94;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f242, %f238, %f241, %f230;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f243, %f234, %f236;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f244, %f238, %f238;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f245, %f227, %f244;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f246, %f241, %f245, %f243;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r311, %f242;
	shfl.sync.bfly.b32	%r312, %r311, 1, 31, -1;
	mov.b32 	%f247, %r312;
	mov.b32 	%r313, %f246;
	shfl.sync.bfly.b32	%r314, %r313, 1, 31, -1;
	mov.b32 	%f248, %r314;
	shfl.sync.bfly.b32	%r286, %r284, 1, 31, -1;
	mov.b32 	%f249, %r286;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f250, %f247, %f242;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f251, %f239, %f249;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p95, %f251, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r287, %f251;
	// begin inline asm
	div.full.f32 %r285, %r286, %r287;
	// end inline asm
	mov.b32 	%f252, %r285;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f253, 0f00000000, %f252, %p95;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f254, %f250, %f253, %f242;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f255, %f246, %f248;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f256, %f250, %f250;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f257, %f239, %f256;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f258, %f253, %f257, %f255;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r315, %r1, 7;
	setp.eq.s32 	%p96, %r315, 0;
	and.pred  	%p79, %p76, %p96;
	mov.b32 	%r289, %f254;
	// begin inline asm
	@%p79 st.shared.b32 [ %r274 + 0 ], %r289;
	// end inline asm
	mov.b32 	%r291, %f258;
	// begin inline asm
	@%p79 st.shared.b32 [ %r276 + 0 ], %r291;
	// end inline asm
	// begin inline asm
	@%p79 st.shared.b32 [ %r278 + 0 ], %r287;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r316, %r66, %r299;
	ld.shared.u32 	%r294, [%r316];
	add.s32 	%r317, %r302, %r299;
	ld.shared.u32 	%r295, [%r317];
	add.s32 	%r318, %r303, %r299;
	ld.shared.u32 	%r296, [%r318];
$L__tmp3:
	.loc	1 72 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:72:25
	mul.wide.s32 	%rd239, %r3, 4;
	add.s64 	%rd236, %rd32, %rd239;
	.loc	1 72 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:72:37
	setp.eq.s32 	%p97, %r297, 0;
	and.pred  	%p82, %p97, %p2;
	// begin inline asm
	@%p82 st.global.b32 [ %rd236 + 0 ], { %r294 };
	// end inline asm
	.loc	1 73 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:73:25
	add.s64 	%rd237, %rd33, %rd239;
	.loc	1 73 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:73:37
	// begin inline asm
	@%p82 st.global.b32 [ %rd237 + 0 ], { %r295 };
	// end inline asm
	.loc	1 74 25                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:25
	add.s64 	%rd238, %rd34, %rd239;
	.loc	1 74 37                         // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:37
	// begin inline asm
	@%p82 st.global.b32 [ %rd238 + 0 ], { %r296 };
	// end inline asm
	.loc	1 74 4                          // cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py:74:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 117
.b8 102
.b8 121
.b8 101
.b8 52
.b8 116
.b8 52
.b8 113
.b8 103
.b8 99
.b8 110
.b8 118
.b8 55
.b8 97
.b8 119
.b8 117
.b8 50
.b8 111
.b8 97
.b8 113
.b8 117
.b8 98
.b8 114
.b8 103
.b8 107
.b8 116
.b8 115
.b8 52
.b8 116
.b8 114
.b8 113
.b8 111
.b8 104
.b8 101
.b8 98
.b8 122
.b8 119
.b8 106
.b8 98
.b8 114
.b8 113
.b8 116
.b8 53
.b8 109
.b8 103
.b8 116
.b8 113
.b8 112
.b8 115
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
