#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 16], warpsPerCTA = [16, 1], order = [1, 0]}>
#loc = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)
#loc1 = loc(unknown)
#loc68 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":67:44)
#loc101 = loc(callsite(#loc1 at #loc68))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__unsafe_index_add_convolution_native_group_norm_33(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<64x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<64x64xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<64x64xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<64x64xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<64x64xf32, #blocked1> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<512> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<32> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<4096> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<65536> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<32768> : tensor<64x1xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<32> : tensor<1x64xi64, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<1.000000e+00> : tensor<64x64xf32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<0> : tensor<1x64xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<64x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<64x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_5 : tensor<64x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_6 : tensor<64x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %14 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc7)
    %15 = tt.expand_dims %13 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc7)
    %16 = arith.remsi %8, %cst_7 : tensor<64x1xi32, #blocked> loc(#loc8)
    %17 = arith.divsi %8, %cst_7 : tensor<64x1xi32, #blocked> loc(#loc9)
    %18 = arith.remsi %17, %cst_8 : tensor<64x1xi32, #blocked> loc(#loc10)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %20 = tt.addptr %19, %18 : tensor<64x1x!tt.ptr<f32>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc11)
    %21 = tt.load %20, %10 evictionPolicy = evict_last : tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc12)
    %22 = arith.muli %16, %cst_11 : tensor<64x1xi32, #blocked> loc(#loc13)
    %23 = tt.broadcast %22 : tensor<64x1xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc14)
    %24 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<64x64x!tt.ptr<i64>, #blocked> loc(#loc15)
    %25 = tt.broadcast %10 : tensor<64x1xi1, #blocked> -> tensor<64x64xi1, #blocked> loc(#loc16)
    %26 = tt.broadcast %11 : tensor<64x1xi1, #blocked1> -> tensor<64x64xi1, #blocked1> loc(#loc16)
    %27 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x64x!tt.ptr<i64>, #blocked> loc(#loc17)
    %28 = arith.muli %9, %cst_12 : tensor<64x1xi32, #blocked1> loc(#loc18)
    %29 = tt.broadcast %28 : tensor<64x1xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc19)
    %30 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc20)
    %31 = arith.muli %17, %cst_13 : tensor<64x1xi32, #blocked> loc(#loc21)
    %32 = arith.extsi %31 : tensor<64x1xi32, #blocked> to tensor<64x1xi64, #blocked> loc(#loc22)
    %33 = tt.broadcast %32 : tensor<64x1xi64, #blocked> -> tensor<64x64xi64, #blocked> loc(#loc22)
    %34 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>, #blocked> loc(#loc23)
    %35 = tt.broadcast %21 : tensor<64x1xf32, #blocked> -> tensor<64x64xf32, #blocked> loc(#loc24)
    %36 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc25)
    %37:3 = scf.for %arg10 = %c0_i32 to %c65536_i32 step %c64_i32 iter_args(%arg11 = %cst, %arg12 = %cst, %arg13 = %cst) -> (tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>)  : i32 {
      %48 = tt.splat %arg10 : i32 -> tensor<1x64xi32, #blocked> loc(#loc27)
      %49 = tt.splat %arg10 : i32 -> tensor<1x64xi32, #blocked1> loc(#loc27)
      %50 = arith.addi %48, %14 : tensor<1x64xi32, #blocked> loc(#loc27)
      %51 = arith.addi %49, %15 : tensor<1x64xi32, #blocked1> loc(#loc27)
      %52 = arith.divsi %50, %cst_9 : tensor<1x64xi32, #blocked> loc(#loc28)
      %53 = arith.divsi %50, %cst_10 : tensor<1x64xi32, #blocked> loc(#loc29)
      %54 = arith.remsi %53, %cst_10 : tensor<1x64xi32, #blocked> loc(#loc30)
      %55 = arith.remsi %50, %cst_10 : tensor<1x64xi32, #blocked> loc(#loc31)
      %56 = tt.broadcast %52 : tensor<1x64xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc14)
      %57 = arith.addi %56, %23 : tensor<64x64xi32, #blocked> loc(#loc14)
      %58 = tt.addptr %24, %57 : tensor<64x64x!tt.ptr<i64>, #blocked>, tensor<64x64xi32, #blocked> loc(#loc15)
      %59 = tt.load %58, %25, %cst_2 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<i64>, #blocked> loc(#loc16)
      %60 = tt.addptr %27, %54 : tensor<1x64x!tt.ptr<i64>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc17)
      %61 = tt.load %60 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>, #blocked> loc(#loc32)
      %62 = tt.addptr %27, %55 : tensor<1x64x!tt.ptr<i64>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc33)
      %63 = tt.load %62 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>, #blocked> loc(#loc34)
      %64 = tt.broadcast %51 : tensor<1x64xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc19)
      %65 = arith.addi %64, %29 : tensor<64x64xi32, #blocked1> loc(#loc19)
      %66 = tt.addptr %30, %65 : tensor<64x64x!tt.ptr<f32>, #blocked1>, tensor<64x64xi32, #blocked1> loc(#loc20)
      %67 = tt.load %66, %26, %cst_4 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc35)
      %68 = triton_gpu.convert_layout %67 : tensor<64x64xf32, #blocked1> -> tensor<64x64xf32, #blocked> loc(#loc35)
      %69 = arith.addi %59, %cst_0 : tensor<64x64xi64, #blocked> loc(#loc36)
      %70 = arith.cmpi slt, %59, %cst_2 : tensor<64x64xi64, #blocked> loc(#loc37)
      %71 = arith.select %70, %69, %59 : tensor<64x64xi1, #blocked>, tensor<64x64xi64, #blocked> loc(#loc38)
      %72 = arith.addi %61, %cst_14 : tensor<1x64xi64, #blocked> loc(#loc39)
      %73 = arith.cmpi slt, %61, %cst_16 : tensor<1x64xi64, #blocked> loc(#loc40)
      %74 = arith.select %73, %72, %61 : tensor<1x64xi1, #blocked>, tensor<1x64xi64, #blocked> loc(#loc41)
      %75 = arith.addi %63, %cst_14 : tensor<1x64xi64, #blocked> loc(#loc42)
      %76 = arith.cmpi slt, %63, %cst_16 : tensor<1x64xi64, #blocked> loc(#loc43)
      %77 = arith.select %76, %75, %63 : tensor<1x64xi1, #blocked>, tensor<1x64xi64, #blocked> loc(#loc44)
      %78 = arith.muli %74, %cst_14 : tensor<1x64xi64, #blocked> loc(#loc45)
      %79 = arith.addi %77, %78 : tensor<1x64xi64, #blocked> loc(#loc46)
      %80 = tt.broadcast %79 : tensor<1x64xi64, #blocked> -> tensor<64x64xi64, #blocked> loc(#loc46)
      %81 = arith.muli %71, %cst_1 : tensor<64x64xi64, #blocked> loc(#loc47)
      %82 = arith.addi %80, %81 : tensor<64x64xi64, #blocked> loc(#loc48)
      %83 = arith.addi %82, %33 : tensor<64x64xi64, #blocked> loc(#loc22)
      %84 = tt.addptr %34, %83 : tensor<64x64x!tt.ptr<f32>, #blocked>, tensor<64x64xi64, #blocked> loc(#loc23)
      %85 = tt.load %84, %25 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>, #blocked> loc(#loc49)
      %86 = arith.addf %85, %35 : tensor<64x64xf32, #blocked> loc(#loc24)
      %87 = arith.addf %86, %68 : tensor<64x64xf32, #blocked> loc(#loc50)
      %88 = arith.cmpi eq, %arg10, %c0_i32 : i32 loc(#loc51)
      %89:3 = scf.if %88 -> (tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>) {
        scf.yield %cst, %87, %cst_15 : tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked> loc(#loc92)
      } else {
        %95 = arith.subf %87, %arg11 : tensor<64x64xf32, #blocked> loc(#loc93)
        %96 = arith.addf %arg13, %cst_15 : tensor<64x64xf32, #blocked> loc(#loc94)
        %97 = arith.divf %95, %96 : tensor<64x64xf32, #blocked> loc(#loc95)
        %98 = arith.addf %arg11, %97 : tensor<64x64xf32, #blocked> loc(#loc96)
        %99 = arith.subf %87, %98 : tensor<64x64xf32, #blocked> loc(#loc97)
        %100 = arith.mulf %95, %99 : tensor<64x64xf32, #blocked> loc(#loc98)
        %101 = arith.addf %arg12, %100 : tensor<64x64xf32, #blocked> loc(#loc99)
        scf.yield %101, %98, %96 : tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked> loc(#loc99)
      } loc(#loc91)
      %90 = arith.select %25, %89#1, %arg11 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc62)
      %91 = arith.select %25, %89#0, %arg12 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc63)
      %92 = arith.select %25, %89#2, %arg13 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc64)
      %93 = tt.addptr %36, %65 : tensor<64x64x!tt.ptr<f32>, #blocked1>, tensor<64x64xi32, #blocked1> loc(#loc25)
      %94 = triton_gpu.convert_layout %87 : tensor<64x64xf32, #blocked> -> tensor<64x64xf32, #blocked1> loc(#loc65)
      tt.store %93, %94, %26 : tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc65)
      scf.yield %90, %91, %92 : tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked> loc(#loc66)
    } loc(#loc26)
    %38:3 = "tt.reduce"(%37#0, %37#1, %37#2) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc68)), %arg11: f32 loc(callsite(#loc1 at #loc68)), %arg12: f32 loc(callsite(#loc1 at #loc68)), %arg13: f32 loc(callsite(#loc1 at #loc68)), %arg14: f32 loc(callsite(#loc1 at #loc68)), %arg15: f32 loc(callsite(#loc1 at #loc68))):
      %48 = arith.subf %arg13, %arg10 : f32 loc(#loc114)
      %49 = arith.addf %arg12, %arg15 : f32 loc(#loc115)
      %50 = arith.cmpf oeq, %49, %cst_3 : f32 loc(#loc116)
      %51 = arith.divf %arg15, %49 : f32 loc(#loc117)
      %52 = arith.select %50, %cst_3, %51 : f32 loc(#loc118)
      %53 = arith.mulf %48, %52 : f32 loc(#loc119)
      %54 = arith.addf %arg10, %53 : f32 loc(#loc120)
      %55 = arith.addf %arg11, %arg14 : f32 loc(#loc121)
      %56 = arith.mulf %48, %48 : f32 loc(#loc122)
      %57 = arith.mulf %56, %arg12 : f32 loc(#loc123)
      %58 = arith.mulf %57, %52 : f32 loc(#loc124)
      %59 = arith.addf %55, %58 : f32 loc(#loc125)
      tt.reduce.return %54, %59, %49 : f32, f32, f32 loc(#loc100)
    }) : (tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>, tensor<64x64xf32, #blocked>) -> (tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc100)
    %39 = tt.expand_dims %38#0 {axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc81)
    %40 = tt.expand_dims %38#1 {axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc82)
    %41 = tt.expand_dims %38#2 {axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc83)
    %42 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc84)
    %43 = tt.addptr %42, %8 : tensor<64x1x!tt.ptr<f32>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc84)
    tt.store %43, %39, %10 : tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc85)
    %44 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc86)
    %45 = tt.addptr %44, %8 : tensor<64x1x!tt.ptr<f32>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc86)
    tt.store %45, %40, %10 : tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc87)
    %46 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc88)
    %47 = tt.addptr %46, %8 : tensor<64x1x!tt.ptr<f32>, #blocked>, tensor<64x1xi32, #blocked> loc(#loc88)
    tt.store %47, %41, %10 : tensor<64x1x!tt.ptr<f32>, #blocked> loc(#loc89)
    tt.return loc(#loc90)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:28)
#loc3 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":22:33)
#loc4 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":23:44)
#loc5 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":23:23)
#loc6 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":24:21)
#loc7 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":25:33)
#loc8 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":26:19)
#loc9 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":27:19)
#loc10 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":28:26)
#loc11 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:31)
#loc12 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":29:36)
#loc13 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:42)
#loc14 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:39)
#loc15 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:34)
#loc16 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":41:47)
#loc17 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:34)
#loc18 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:46)
#loc19 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:40)
#loc20 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:35)
#loc21 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:71)
#loc22 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:65)
#loc23 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:35)
#loc24 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":56:24)
#loc25 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:29)
#loc26 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":34:36)
#loc27 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":35:27)
#loc28 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":37:23)
#loc29 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:25)
#loc30 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":38:31)
#loc31 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":39:23)
#loc32 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":42:39)
#loc33 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:34)
#loc34 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":43:39)
#loc35 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":44:51)
#loc36 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":46:22)
#loc37 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":47:22)
#loc38 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":48:36)
#loc39 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":49:22)
#loc40 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":50:22)
#loc41 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":51:36)
#loc42 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":52:23)
#loc43 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":53:23)
#loc44 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":54:39)
#loc45 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:46)
#loc46 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:43)
#loc47 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:58)
#loc48 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:53)
#loc49 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":55:76)
#loc50 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":57:24)
#loc51 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:66)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc53 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":60:55)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc62 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":62:54)
#loc63 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":63:50)
#loc64 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":64:58)
#loc65 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:52)
#loc66 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":65:8)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc80 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc81 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":69:22)
#loc82 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":70:22)
#loc83 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":71:22)
#loc84 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:25)
#loc85 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":72:37)
#loc86 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:25)
#loc87 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":73:37)
#loc88 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:25)
#loc89 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:37)
#loc90 = loc("inductor_cache/vu/cvufye4t4qgcnv7awu2oaqubrgkts4trqohebzwjbrqt5mgtqpsa.py":74:4)
#loc91 = loc(callsite(#loc52 at #loc53))
#loc92 = loc(callsite(#loc54 at #loc53))
#loc93 = loc(callsite(#loc55 at #loc53))
#loc94 = loc(callsite(#loc56 at #loc53))
#loc95 = loc(callsite(#loc57 at #loc53))
#loc96 = loc(callsite(#loc58 at #loc53))
#loc97 = loc(callsite(#loc59 at #loc53))
#loc98 = loc(callsite(#loc60 at #loc53))
#loc99 = loc(callsite(#loc61 at #loc53))
#loc100 = loc(callsite(#loc67 at #loc68))
#loc102 = loc(callsite(#loc69 at #loc67))
#loc103 = loc(callsite(#loc70 at #loc67))
#loc104 = loc(callsite(#loc71 at #loc67))
#loc105 = loc(callsite(#loc72 at #loc67))
#loc106 = loc(callsite(#loc73 at #loc67))
#loc107 = loc(callsite(#loc74 at #loc67))
#loc108 = loc(callsite(#loc75 at #loc67))
#loc109 = loc(callsite(#loc76 at #loc67))
#loc110 = loc(callsite(#loc77 at #loc67))
#loc111 = loc(callsite(#loc78 at #loc67))
#loc112 = loc(callsite(#loc79 at #loc67))
#loc113 = loc(callsite(#loc80 at #loc67))
#loc114 = loc(callsite(#loc102 at #loc68))
#loc115 = loc(callsite(#loc103 at #loc68))
#loc116 = loc(callsite(#loc104 at #loc68))
#loc117 = loc(callsite(#loc105 at #loc68))
#loc118 = loc(callsite(#loc106 at #loc68))
#loc119 = loc(callsite(#loc107 at #loc68))
#loc120 = loc(callsite(#loc108 at #loc68))
#loc121 = loc(callsite(#loc109 at #loc68))
#loc122 = loc(callsite(#loc110 at #loc68))
#loc123 = loc(callsite(#loc111 at #loc68))
#loc124 = loc(callsite(#loc112 at #loc68))
#loc125 = loc(callsite(#loc113 at #loc68))
