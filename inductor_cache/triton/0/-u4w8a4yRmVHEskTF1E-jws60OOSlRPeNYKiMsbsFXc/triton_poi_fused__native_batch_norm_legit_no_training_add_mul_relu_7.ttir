#loc = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<16x256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<16x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4718592> : tensor<1x256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<16x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999974E-6> : tensor<16x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<1152> : tensor<1x256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4096> : tensor<1x256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1152> : tensor<16x1xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.muli %6, %c16_i32 : i32 loc(#loc8)
    %8 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc9)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc10)
    %10 = tt.splat %7 : i32 -> tensor<16x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<16x1xi32> loc(#loc11)
    %12 = arith.cmpi slt, %11, %cst_6 : tensor<16x1xi32> loc(#loc12)
    %13 = arith.remsi %5, %cst_5 : tensor<1x256xi32> loc(#loc13)
    %14 = arith.divsi %5, %cst_5 : tensor<1x256xi32> loc(#loc14)
    %15 = arith.muli %5, %cst_4 : tensor<1x256xi32> loc(#loc15)
    %16 = tt.broadcast %11 : tensor<16x1xi32> -> tensor<16x256xi32> loc(#loc16)
    %17 = tt.broadcast %15 : tensor<1x256xi32> -> tensor<16x256xi32> loc(#loc16)
    %18 = arith.addi %16, %17 : tensor<16x256xi32> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x256x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<16x256x!tt.ptr<f32>>, tensor<16x256xi32> loc(#loc17)
    %21 = tt.broadcast %12 : tensor<16x1xi1> -> tensor<16x256xi1> loc(#loc18)
    %22 = tt.load %20, %21 evictionPolicy = evict_last : tensor<16x256x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x256x!tt.ptr<f32>> loc(#loc19)
    %24 = tt.addptr %23, %18 : tensor<16x256x!tt.ptr<f32>>, tensor<16x256xi32> loc(#loc19)
    %25 = tt.load %24, %21 evictionPolicy = evict_last : tensor<16x256x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x256x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.addptr %26, %18 : tensor<16x256x!tt.ptr<f32>>, tensor<16x256xi32> loc(#loc21)
    %28 = tt.load %27, %21 evictionPolicy = evict_last : tensor<16x256x!tt.ptr<f32>> loc(#loc22)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x256x!tt.ptr<f32>> loc(#loc23)
    %30 = tt.addptr %29, %18 : tensor<16x256x!tt.ptr<f32>>, tensor<16x256xi32> loc(#loc23)
    %31 = tt.load %30, %21 evictionPolicy = evict_last : tensor<16x256x!tt.ptr<f32>> loc(#loc24)
    %32 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<16x1x!tt.ptr<f32>> loc(#loc25)
    %33 = tt.addptr %32, %11 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc25)
    %34 = tt.load %33, %12 evictionPolicy = evict_last : tensor<16x1x!tt.ptr<f32>> loc(#loc26)
    %35 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<16x1x!tt.ptr<f32>> loc(#loc27)
    %36 = tt.addptr %35, %11 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc27)
    %37 = tt.load %36, %12 evictionPolicy = evict_last : tensor<16x1x!tt.ptr<f32>> loc(#loc28)
    %38 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<16x1x!tt.ptr<f32>> loc(#loc29)
    %39 = tt.addptr %38, %11 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc29)
    %40 = tt.load %39, %12 evictionPolicy = evict_last : tensor<16x1x!tt.ptr<f32>> loc(#loc30)
    %41 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<16x1x!tt.ptr<f32>> loc(#loc31)
    %42 = tt.addptr %41, %11 : tensor<16x1x!tt.ptr<f32>>, tensor<16x1xi32> loc(#loc31)
    %43 = tt.load %42, %12 evictionPolicy = evict_last : tensor<16x1x!tt.ptr<f32>> loc(#loc32)
    %44 = arith.addf %22, %25 : tensor<16x256xf32> loc(#loc33)
    %45 = arith.addf %44, %28 : tensor<16x256xf32> loc(#loc34)
    %46 = tt.broadcast %34 : tensor<16x1xf32> -> tensor<16x256xf32> loc(#loc35)
    %47 = arith.subf %31, %46 : tensor<16x256xf32> loc(#loc35)
    %48 = arith.addf %37, %cst_3 : tensor<16x1xf32> loc(#loc36)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<16x1xf32>) -> tensor<16x1xf32> loc(#loc37)
    %50 = arith.divf %cst_0, %49 : tensor<16x1xf32> loc(#loc38)
    %51 = tt.broadcast %50 : tensor<16x1xf32> -> tensor<16x256xf32> loc(#loc39)
    %52 = arith.mulf %47, %51 : tensor<16x256xf32> loc(#loc39)
    %53 = tt.broadcast %40 : tensor<16x1xf32> -> tensor<16x256xf32> loc(#loc40)
    %54 = arith.mulf %52, %53 : tensor<16x256xf32> loc(#loc40)
    %55 = tt.broadcast %43 : tensor<16x1xf32> -> tensor<16x256xf32> loc(#loc41)
    %56 = arith.addf %54, %55 : tensor<16x256xf32> loc(#loc41)
    %57 = arith.addf %45, %56 : tensor<16x256xf32> loc(#loc42)
    %58 = arith.cmpf ogt, %cst, %57 : tensor<16x256xf32> loc(#loc53)
    %59 = arith.select %58, %cst, %57 : tensor<16x256xi1>, tensor<16x256xf32> loc(#loc54)
    %60 = arith.muli %11, %cst_2 : tensor<16x1xi32> loc(#loc46)
    %61 = tt.broadcast %13 : tensor<1x256xi32> -> tensor<16x256xi32> loc(#loc47)
    %62 = tt.broadcast %60 : tensor<16x1xi32> -> tensor<16x256xi32> loc(#loc47)
    %63 = arith.addi %61, %62 : tensor<16x256xi32> loc(#loc47)
    %64 = arith.muli %14, %cst_1 : tensor<1x256xi32> loc(#loc48)
    %65 = tt.broadcast %64 : tensor<1x256xi32> -> tensor<16x256xi32> loc(#loc49)
    %66 = arith.addi %63, %65 : tensor<16x256xi32> loc(#loc49)
    %67 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<16x256x!tt.ptr<f32>> loc(#loc50)
    %68 = tt.addptr %67, %66 : tensor<16x256x!tt.ptr<f32>>, tensor<16x256xi32> loc(#loc50)
    tt.store %68, %59, %21 : tensor<16x256x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":22:28)
#loc3 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":22:33)
#loc4 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":23:36)
#loc5 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":23:44)
#loc6 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":23:23)
#loc7 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":25:28)
#loc8 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":25:33)
#loc9 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":26:36)
#loc10 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":26:44)
#loc11 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":26:23)
#loc12 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":27:21)
#loc13 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":30:19)
#loc14 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":31:19)
#loc15 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":32:40)
#loc16 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":32:35)
#loc17 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":32:30)
#loc18 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":32:45)
#loc19 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":33:30)
#loc20 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":33:45)
#loc21 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":34:30)
#loc22 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":34:45)
#loc23 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":35:30)
#loc24 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":35:45)
#loc25 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":36:30)
#loc26 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":36:35)
#loc27 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":37:31)
#loc28 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":37:36)
#loc29 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":38:31)
#loc30 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":38:36)
#loc31 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":39:31)
#loc32 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":39:36)
#loc33 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":42:18)
#loc34 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":44:18)
#loc35 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":45:19)
#loc36 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":47:20)
#loc37 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":48:27)
#loc38 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":50:20)
#loc39 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":52:20)
#loc40 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":53:20)
#loc41 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":54:20)
#loc42 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":56:19)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc44 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":58:42)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc46 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:35)
#loc47 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:30)
#loc48 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:48)
#loc49 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:40)
#loc50 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:25)
#loc51 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:60)
#loc52 = loc("inductor_cache/kb/ckbxd4ntqvfoyfcpw4mokohoo6qzye4h2f2iov7llxpltfkfaa76.py":59:4)
#loc53 = loc(callsite(#loc43 at #loc44))
#loc54 = loc(callsite(#loc45 at #loc44))
