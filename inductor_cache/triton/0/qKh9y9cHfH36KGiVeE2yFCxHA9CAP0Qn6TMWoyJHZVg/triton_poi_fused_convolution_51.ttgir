#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_convolution_51(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0), %arg3: i32 loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":19:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<64> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<16320> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<255> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1020> : tensor<1x512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1x512xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<1x512xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<1x512xi32, #blocked> loc(#loc6)
    %7 = tt.get_program_id x : i32 loc(#loc7)
    %8 = arith.cmpi slt, %7, %c64_i32 : i32 loc(#loc8)
    %9 = arith.remsi %5, %cst_1 : tensor<1x512xi32, #blocked> loc(#loc9)
    %10 = arith.divsi %5, %cst_1 : tensor<1x512xi32, #blocked> loc(#loc10)
    %11 = arith.muli %7, %c255_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x512xi32, #blocked> loc(#loc12)
    %13 = arith.addi %9, %12 : tensor<1x512xi32, #blocked> loc(#loc12)
    %14 = arith.muli %10, %cst_0 : tensor<1x512xi32, #blocked> loc(#loc13)
    %15 = arith.addi %13, %14 : tensor<1x512xi32, #blocked> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc15)
    %18 = tt.splat %8 : i1 -> tensor<1x512xi1, #blocked> loc(#loc16)
    %19 = arith.andi %18, %6 : tensor<1x512xi1, #blocked> loc(#loc16)
    %20 = tt.load %17, %19 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.addptr %21, %9 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc18)
    %23 = tt.load %22, %6 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %24 = arith.addf %20, %23 : tensor<1x512xf32, #blocked> loc(#loc20)
    %25 = arith.muli %5, %cst : tensor<1x512xi32, #blocked> loc(#loc21)
    %26 = tt.splat %7 : i32 -> tensor<1x512xi32, #blocked> loc(#loc22)
    %27 = arith.addi %26, %25 : tensor<1x512xi32, #blocked> loc(#loc22)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %29 = tt.addptr %28, %27 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc23)
    tt.store %29, %24, %19 : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":22:28)
#loc3 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":22:33)
#loc4 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":23:44)
#loc5 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":23:23)
#loc6 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":24:21)
#loc7 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":25:28)
#loc8 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":27:21)
#loc9 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":29:19)
#loc10 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":30:19)
#loc11 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:39)
#loc12 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:35)
#loc13 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:50)
#loc14 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:44)
#loc15 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:30)
#loc16 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:63)
#loc17 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":32:55)
#loc18 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":33:30)
#loc19 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":33:35)
#loc20 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":34:18)
#loc21 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":35:33)
#loc22 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":35:30)
#loc23 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":35:25)
#loc24 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":35:44)
#loc25 = loc("inductor_cache/d7/cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py":35:4)
