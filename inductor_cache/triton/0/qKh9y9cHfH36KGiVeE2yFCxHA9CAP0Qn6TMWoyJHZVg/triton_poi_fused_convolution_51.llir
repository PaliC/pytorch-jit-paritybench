; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_51(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = or disjoint i32 %10, 128, !dbg !13
  %12 = or disjoint i32 %10, 256, !dbg !13
  %13 = or disjoint i32 %10, 384, !dbg !13
  %14 = icmp slt i32 %10, 1020, !dbg !14
  %15 = icmp slt i32 %11, 1020, !dbg !14
  %16 = icmp slt i32 %12, 1020, !dbg !14
  %17 = icmp slt i32 %13, 1020, !dbg !14
  %18 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !15
  %19 = icmp slt i32 %18, 64, !dbg !16
  %.frozen = freeze i32 %10, !dbg !17
  %20 = sdiv i32 %.frozen, 255, !dbg !17
  %21 = mul i32 %20, 255, !dbg !18
  %.decomposed = sub i32 %.frozen, %21, !dbg !18
  %.frozen1 = freeze i32 %11, !dbg !17
  %22 = sdiv i32 %.frozen1, 255, !dbg !17
  %23 = mul i32 %22, 255, !dbg !18
  %.decomposed2 = sub i32 %.frozen1, %23, !dbg !18
  %.frozen3 = freeze i32 %12, !dbg !17
  %24 = sdiv i32 %.frozen3, 255, !dbg !17
  %25 = mul i32 %24, 255, !dbg !18
  %.decomposed4 = sub i32 %.frozen3, %25, !dbg !18
  %.frozen5 = freeze i32 %13, !dbg !17
  %26 = sdiv i32 %.frozen5, 255, !dbg !17
  %27 = mul i32 %26, 255, !dbg !18
  %.decomposed6 = sub i32 %.frozen5, %27, !dbg !18
  %28 = mul i32 %18, 255, !dbg !19
  %29 = add i32 %.decomposed, %28, !dbg !20
  %30 = mul i32 %20, 16320, !dbg !21
  %31 = mul i32 %22, 16320, !dbg !21
  %32 = mul i32 %24, 16320, !dbg !21
  %33 = mul i32 %26, 16320, !dbg !21
  %34 = add i32 %29, %30, !dbg !22
  %35 = add i32 %31, %.decomposed2, !dbg !20
  %36 = add i32 %35, %28, !dbg !22
  %37 = add i32 %32, %.decomposed4, !dbg !20
  %38 = add i32 %37, %28, !dbg !22
  %39 = add i32 %33, %.decomposed6, !dbg !20
  %40 = add i32 %39, %28, !dbg !22
  %41 = sext i32 %34 to i64, !dbg !23
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !23
  %43 = sext i32 %36 to i64, !dbg !23
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !23
  %45 = sext i32 %38 to i64, !dbg !23
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !23
  %47 = sext i32 %40 to i64, !dbg !23
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !23
  %49 = and i1 %19, %14, !dbg !24
  %50 = and i1 %15, %19, !dbg !24
  %51 = and i1 %16, %19, !dbg !24
  %52 = and i1 %17, %19, !dbg !24
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %49) #1, !dbg !25
  %54 = bitcast i32 %53 to float, !dbg !25
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %50) #1, !dbg !25
  %56 = bitcast i32 %55 to float, !dbg !25
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %51) #1, !dbg !25
  %58 = bitcast i32 %57 to float, !dbg !25
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %52) #1, !dbg !25
  %60 = bitcast i32 %59 to float, !dbg !25
  %61 = sext i32 %.decomposed to i64, !dbg !26
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !26
  %63 = sext i32 %.decomposed2 to i64, !dbg !26
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !26
  %65 = sext i32 %.decomposed4 to i64, !dbg !26
  %66 = getelementptr float, ptr addrspace(1) %1, i64 %65, !dbg !26
  %67 = sext i32 %.decomposed6 to i64, !dbg !26
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %67, !dbg !26
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %14) #1, !dbg !27
  %70 = bitcast i32 %69 to float, !dbg !27
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %15) #1, !dbg !27
  %72 = bitcast i32 %71 to float, !dbg !27
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 %16) #1, !dbg !27
  %74 = bitcast i32 %73 to float, !dbg !27
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %17) #1, !dbg !27
  %76 = bitcast i32 %75 to float, !dbg !27
  %77 = fadd float %54, %70, !dbg !28
  %78 = fadd float %56, %72, !dbg !28
  %79 = fadd float %58, %74, !dbg !28
  %80 = fadd float %60, %76, !dbg !28
  %81 = shl i32 %10, 6, !dbg !29
  %82 = shl i32 %11, 6, !dbg !29
  %83 = shl i32 %12, 6, !dbg !29
  %84 = shl i32 %13, 6, !dbg !29
  %85 = add i32 %81, %18, !dbg !30
  %86 = add i32 %18, %82, !dbg !30
  %87 = add i32 %18, %83, !dbg !30
  %88 = add i32 %18, %84, !dbg !30
  %89 = sext i32 %85 to i64, !dbg !31
  %90 = getelementptr float, ptr addrspace(1) %2, i64 %89, !dbg !31
  %91 = sext i32 %86 to i64, !dbg !31
  %92 = getelementptr float, ptr addrspace(1) %2, i64 %91, !dbg !31
  %93 = sext i32 %87 to i64, !dbg !31
  %94 = getelementptr float, ptr addrspace(1) %2, i64 %93, !dbg !31
  %95 = sext i32 %88 to i64, !dbg !31
  %96 = getelementptr float, ptr addrspace(1) %2, i64 %95, !dbg !31
  %97 = bitcast float %77 to i32, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %90, i1 %49) #1, !dbg !32
  %98 = bitcast float %78 to i32, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %98, ptr addrspace(1) %92, i1 %50) #1, !dbg !32
  %99 = bitcast float %79 to i32, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %94, i1 %51) #1, !dbg !32
  %100 = bitcast float %80 to i32, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %100, ptr addrspace(1) %96, i1 %52) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cd7t2esuyce4dplzufbr3qomv6fms6qckxx5oiqvcksvpyvwrof7.py", directory: "inductor_cache/d7")
!4 = !{ptr @triton_poi_fused_convolution_51, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_51, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_51", linkageName: "triton_poi_fused_convolution_51", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 30, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 50, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 32, column: 30, scope: !7)
!24 = !DILocation(line: 32, column: 63, scope: !7)
!25 = !DILocation(line: 32, column: 55, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 35, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 33, scope: !7)
!30 = !DILocation(line: 35, column: 30, scope: !7)
!31 = !DILocation(line: 35, column: 25, scope: !7)
!32 = !DILocation(line: 35, column: 44, scope: !7)
!33 = !DILocation(line: 35, column: 4, scope: !7)
