//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<72>;
	.reg .b32 	%r<147>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<57>;
	.loc	1 19 0                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd40, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_0];
	ld.param.u64 	%rd41, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_1];
$L__tmp0:
	.loc	1 23 28                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:23:33
	shl.b32 	%r88, %r1, 5;
	ld.param.u64 	%rd42, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_2];
	ld.param.u64 	%rd43, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_3];
	.loc	1 24 44                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:24:44
	mov.u32 	%r89, %tid.x;
	ld.param.u64 	%rd44, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_4];
	.loc	1 26 34                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:26:34
	shl.b32 	%r90, %r89, 2;
	ld.param.u64 	%rd45, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_5];
	and.b32  	%r91, %r90, 60;
	ld.param.u64 	%rd46, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_6];
	.loc	1 24 44                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:24:44
	bfe.u32 	%r92, %r89, 4, 4;
	ld.param.u64 	%rd47, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_7];
	.loc	1 24 23                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:24:23
	or.b32  	%r93, %r88, %r92;
	or.b32  	%r94, %r93, 16;
	.loc	1 25 21                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:25:21
	setp.lt.s32 	%p1, %r93, 1556;
	setp.lt.s32 	%p5, %r94, 1556;
	.loc	1 29 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:29:19
	mul.hi.s32 	%r95, %r94, -1468459255;
	mad.lo.s32 	%r96, %r94, 1, %r95;
	.loc	1 31 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:31:19
	shr.u32 	%r97, %r96, 31;
	shr.s32 	%r98, %r96, 8;
	add.s32 	%r99, %r98, %r97;
	.loc	1 29 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:29:19
	mul.lo.s32 	%r100, %r99, 389;
	sub.s32 	%r101, %r94, %r100;
	mul.hi.s32 	%r102, %r93, -1468459255;
	mad.lo.s32 	%r103, %r93, 1, %r102;
	shr.u32 	%r104, %r103, 31;
	shr.s32 	%r105, %r103, 8;
	add.s32 	%r106, %r105, %r104;
	mul.lo.s32 	%r107, %r106, 389;
	sub.s32 	%r108, %r93, %r107;
	.loc	1 33 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:31
	mul.wide.s32 	%rd48, %r108, 4;
	add.s64 	%rd1, %rd43, %rd48;
	mul.wide.s32 	%rd49, %r101, 4;
	add.s64 	%rd5, %rd43, %rd49;
	.loc	1 33 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:34:31
	add.s64 	%rd9, %rd44, %rd48;
	add.s64 	%rd13, %rd44, %rd49;
	.loc	1 34 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:34:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r17;
	.loc	1 35 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:31
	add.s64 	%rd17, %rd45, %rd48;
	add.s64 	%rd21, %rd45, %rd49;
	.loc	1 35 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r22 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r23 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r24 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r25 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:31
	add.s64 	%rd25, %rd46, %rd48;
	add.s64 	%rd29, %rd46, %rd49;
	.loc	1 36 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r30 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r31 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r32 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r33 }, [ %rd29 + 0 ];
	// end inline asm
	.loc	1 41 18                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:41:18
	setp.lt.s32 	%p58, %r101, 377;
	setp.lt.s32 	%p59, %r108, 377;
	.loc	1 42 39                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:39
	shl.b32 	%r109, %r108, 6;
	shl.b32 	%r110, %r101, 6;
	.loc	1 42 35                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:35
	or.b32  	%r111, %r109, %r91;
	or.b32  	%r112, %r110, %r91;
	.loc	1 42 45                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:45
	mad.lo.s32 	%r113, %r106, 24128, %r111;
	mad.lo.s32 	%r114, %r99, 24128, %r112;
	.loc	1 42 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:30
	mul.wide.s32 	%rd50, %r113, 4;
	add.s64 	%rd33, %rd41, %rd50;
	mul.wide.s32 	%rd51, %r114, 4;
	add.s64 	%rd34, %rd41, %rd51;
	.loc	1 42 63                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:63
	and.pred  	%p33, %p1, %p59;
	and.pred  	%p38, %p5, %p58;
	mov.b32 	%r38, 0;
	.loc	1 42 56                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:56
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p33 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd33 + 0 ];
	@!%p33 mov.u32 %r34, %r38;
	@!%p33 mov.u32 %r35, %r38;
	@!%p33 mov.u32 %r36, %r38;
	@!%p33 mov.u32 %r37, %r38;
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p38 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd34 + 0 ];
	@!%p38 mov.u32 %r42, %r38;
	@!%p38 mov.u32 %r43, %r38;
	@!%p38 mov.u32 %r44, %r38;
	@!%p38 mov.u32 %r45, %r38;
	// end inline asm
	.loc	1 43 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:43:19
	setp.gt.s32 	%p60, %r108, 376;
	setp.gt.s32 	%p61, %r101, 376;
	.loc	1 46 35                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:35
	or.b32  	%r115, %r91, -24128;
	.loc	1 46 39                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:39
	add.s32 	%r116, %r115, %r109;
	.loc	1 46 54                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:54
	mad.lo.s32 	%r117, %r106, 768, %r116;
	.loc	1 46 39                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:39
	add.s32 	%r118, %r115, %r110;
	.loc	1 46 54                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:54
	mad.lo.s32 	%r119, %r99, 768, %r118;
	.loc	1 46 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:30
	mul.wide.s32 	%rd52, %r117, 4;
	add.s64 	%rd35, %rd42, %rd52;
	mul.wide.s32 	%rd53, %r119, 4;
	add.s64 	%rd36, %rd42, %rd53;
	.loc	1 46 70                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:70
	and.pred  	%p43, %p1, %p60;
	and.pred  	%p48, %p5, %p61;
	.loc	1 46 63                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:63
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p43 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd35 + 0 ];
	@!%p43 mov.u32 %r50, %r38;
	@!%p43 mov.u32 %r51, %r38;
	@!%p43 mov.u32 %r52, %r38;
	@!%p43 mov.u32 %r53, %r38;
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p48 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd36 + 0 ];
	@!%p48 mov.u32 %r58, %r38;
	@!%p48 mov.u32 %r59, %r38;
	@!%p48 mov.u32 %r60, %r38;
	@!%p48 mov.u32 %r61, %r38;
	// end inline asm
	.loc	1 50 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:50:20
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 51 27                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:51:27
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 33 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:36
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r5;
	.loc	1 36 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:36
	mov.b32 	%f9, %r33;
	mov.b32 	%f10, %r29;
	.loc	1 35 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:36
	mov.b32 	%f11, %r25;
	mov.b32 	%f12, %r21;
	.loc	1 24 44                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:24:44
	and.b32  	%r120, %r89, 31;
	.loc	1 24 23                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:24:23
	or.b32  	%r121, %r88, %r120;
	.loc	1 25 21                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:25:21
	setp.lt.s32 	%p62, %r121, 1556;
	.loc	1 53 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:53:20
	mov.b32 	%r68, %f5;
	mov.b32 	%r67, 1065353216;
	// begin inline asm
	div.full.f32 %r66, %r67, %r68;
	// end inline asm
	mov.b32 	%f13, %r66;
	mov.b32 	%r71, %f6;
	// begin inline asm
	div.full.f32 %r69, %r67, %r71;
	// end inline asm
	mov.b32 	%f14, %r69;
	.loc	1 47 33                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:47:33
	selp.b32 	%r79, %r34, %r50, %p59;
	selp.b32 	%r80, %r35, %r51, %p59;
	selp.b32 	%r81, %r36, %r52, %p59;
	selp.b32 	%r82, %r37, %r53, %p59;
	selp.b32 	%r83, %r42, %r58, %p58;
	selp.b32 	%r84, %r43, %r59, %p58;
	selp.b32 	%r85, %r44, %r60, %p58;
	selp.b32 	%r86, %r45, %r61, %p58;
	mov.b32 	%f15, %r86;
	mov.b32 	%f16, %r85;
	mov.b32 	%f17, %r84;
	mov.b32 	%f18, %r83;
	mov.b32 	%f19, %r82;
	mov.b32 	%f20, %r81;
	mov.b32 	%f21, %r80;
	mov.b32 	%f22, %r79;
	.loc	1 48 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:48:20
	sub.f32 	%f23, %f22, %f8;
	sub.f32 	%f24, %f21, %f8;
	sub.f32 	%f25, %f20, %f8;
	sub.f32 	%f26, %f19, %f8;
	sub.f32 	%f27, %f18, %f7;
	sub.f32 	%f28, %f17, %f7;
	sub.f32 	%f29, %f16, %f7;
	sub.f32 	%f30, %f15, %f7;
	.loc	1 56 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:56:20
	mul.f32 	%f31, %f30, %f14;
	mul.f32 	%f32, %f29, %f14;
	mul.f32 	%f33, %f28, %f14;
	mul.f32 	%f34, %f27, %f14;
	mul.f32 	%f35, %f26, %f13;
	mul.f32 	%f36, %f25, %f13;
	mul.f32 	%f37, %f24, %f13;
	mul.f32 	%f38, %f23, %f13;
	.loc	1 58 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:58:20
	fma.rn.f32 	%f39, %f38, %f12, %f10;
	fma.rn.f32 	%f40, %f37, %f12, %f10;
	fma.rn.f32 	%f41, %f36, %f12, %f10;
	fma.rn.f32 	%f42, %f35, %f12, %f10;
	fma.rn.f32 	%f43, %f34, %f11, %f9;
	fma.rn.f32 	%f44, %f33, %f11, %f9;
	fma.rn.f32 	%f45, %f32, %f11, %f9;
	fma.rn.f32 	%f46, %f31, %f11, %f9;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p63, %f46, 0f00000000;
	setp.lt.f32 	%p64, %f45, 0f00000000;
	setp.lt.f32 	%p65, %f44, 0f00000000;
	setp.lt.f32 	%p66, %f43, 0f00000000;
	setp.lt.f32 	%p67, %f42, 0f00000000;
	setp.lt.f32 	%p68, %f41, 0f00000000;
	setp.lt.f32 	%p69, %f40, 0f00000000;
	setp.lt.f32 	%p70, %f39, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f47, 0f00000000, %f39, %p70;
	selp.f32 	%f48, 0f00000000, %f40, %p69;
	selp.f32 	%f49, 0f00000000, %f41, %p68;
	selp.f32 	%f50, 0f00000000, %f42, %p67;
	selp.f32 	%f51, 0f00000000, %f43, %p66;
	selp.f32 	%f52, 0f00000000, %f44, %p65;
	selp.f32 	%f53, 0f00000000, %f45, %p64;
	selp.f32 	%f54, 0f00000000, %f46, %p63;
$L__tmp2:
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f55, %f47, %f48;
	add.f32 	%f56, %f49, %f55;
	add.f32 	%f57, %f50, %f56;
	selp.f32 	%f58, %f57, 0f00000000, %p1;
	add.f32 	%f59, %f51, %f52;
	add.f32 	%f60, %f53, %f59;
	add.f32 	%f61, %f54, %f60;
	selp.f32 	%f62, %f61, 0f00000000, %p5;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f58;
	shfl.sync.bfly.b32	%r123, %r122, 8, 31, -1;
	mov.b32 	%f63, %r123;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f64, %f58, %f63;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f64;
	shfl.sync.bfly.b32	%r125, %r124, 4, 31, -1;
	mov.b32 	%f65, %r125;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f66;
	shfl.sync.bfly.b32	%r127, %r126, 2, 31, -1;
	mov.b32 	%f67, %r127;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f68;
	shfl.sync.bfly.b32	%r129, %r128, 1, 31, -1;
	mov.b32 	%f69, %r129;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f62;
	shfl.sync.bfly.b32	%r131, %r130, 8, 31, -1;
	mov.b32 	%f71, %r131;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f72, %f62, %f71;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f72;
	shfl.sync.bfly.b32	%r133, %r132, 4, 31, -1;
	mov.b32 	%f73, %r133;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r134, %f74;
	shfl.sync.bfly.b32	%r135, %r134, 2, 31, -1;
	mov.b32 	%f75, %r135;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r136, %f76;
	shfl.sync.bfly.b32	%r137, %r136, 1, 31, -1;
	mov.b32 	%f77, %r137;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
$L__tmp3:
	.loc	1 65 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:65:20
	shl.b32 	%r138, %r92, 2;
	mov.u32 	%r139, global_smem;
	add.s32 	%r72, %r139, %r138;
	mov.b32 	%r73, %f70;
	mov.pred 	%p53, -1;
	// begin inline asm
	@%p53 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r72, 64;
	mov.b32 	%r75, %f78;
	// begin inline asm
	@%p53 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r140, %r120, 2;
	add.s32 	%r141, %r139, %r140;
	ld.shared.u32 	%r77, [%r141];
	mov.b32 	%r78, 1115684864;
	// begin inline asm
	div.full.f32 %r87, %r77, %r78;
	// end inline asm
	.loc	1 66 33                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:33
	shl.b32 	%r142, %r93, 6;
	shl.b32 	%r143, %r94, 6;
	.loc	1 66 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:30
	or.b32  	%r144, %r142, %r91;
	or.b32  	%r145, %r143, %r91;
	.loc	1 66 25                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:25
	mul.wide.s32 	%rd54, %r144, 4;
	add.s64 	%rd37, %rd47, %rd54;
	mul.wide.s32 	%rd55, %r145, 4;
	add.s64 	%rd38, %rd47, %rd55;
	.loc	1 66 45                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:45
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd37 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd38 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 67 4                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:67:4
	bar.sync 	0;
	.loc	1 68 28                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:28
	mul.wide.s32 	%rd56, %r121, 4;
	add.s64 	%rd39, %rd40, %rd56;
	.loc	1 68 40                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:40
	and.b32  	%r146, %r89, 224;
	setp.eq.s32 	%p71, %r146, 0;
	and.pred  	%p57, %p71, %p62;
	// begin inline asm
	@%p57 st.global.b32 [ %rd39 + 0 ], { %r87 };
	// end inline asm
	.loc	1 68 4                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 239                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 51
.b8 103
.b8 120
.b8 103
.b8 98
.b8 122
.b8 106
.b8 98
.b8 107
.b8 117
.b8 53
.b8 54
.b8 104
.b8 111
.b8 114
.b8 99
.b8 55
.b8 106
.b8 55
.b8 99
.b8 105
.b8 116
.b8 114
.b8 100
.b8 104
.b8 53
.b8 97
.b8 108
.b8 52
.b8 104
.b8 106
.b8 112
.b8 55
.b8 118
.b8 106
.b8 122
.b8 107
.b8 116
.b8 110
.b8 114
.b8 55
.b8 113
.b8 100
.b8 121
.b8 99
.b8 102
.b8 53
.b8 121
.b8 54
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x49 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 54
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xac:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
