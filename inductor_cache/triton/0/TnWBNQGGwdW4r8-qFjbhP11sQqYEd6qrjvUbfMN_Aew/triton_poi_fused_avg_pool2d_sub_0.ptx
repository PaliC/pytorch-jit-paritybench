//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_sub_0 // -- Begin function triton_poi_fused_avg_pool2d_sub_0
                                        // @triton_poi_fused_avg_pool2d_sub_0
.visible .entry triton_poi_fused_avg_pool2d_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_sub_0_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_sub_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<75>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_avg_pool2d_sub_0_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_avg_pool2d_sub_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:21:33
	shl.b32 	%r48, %r1, 6;
	.loc	1 22 36                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:22:36
	mov.u32 	%r49, %tid.x;
	shl.b32 	%r50, %r49, 1;
	and.b32  	%r51, %r50, 62;
	.loc	1 22 23                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:22:23
	or.b32  	%r52, %r48, %r51;
	.loc	1 23 21                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:23:21
	setp.lt.s32 	%p1, %r52, 64;
	.loc	1 27 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:27:31
	mul.wide.s32 	%rd14, %r52, 4;
	add.s64 	%rd1, %rd13, %rd14;
	.loc	1 27 36                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:27:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 39 39                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:39:39
	add.s32 	%r53, %r52, -12;
	.loc	1 39 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:39:31
	mul.wide.s32 	%rd15, %r53, 4;
	add.s64 	%rd2, %rd13, %rd15;
	.loc	1 45 38                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:45:38
	add.s32 	%r54, %r52, -8;
	.loc	1 45 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:45:31
	mul.wide.s32 	%rd16, %r54, 4;
	add.s64 	%rd3, %rd13, %rd16;
	.loc	1 52 38                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:52:38
	add.s32 	%r55, %r52, -4;
	.loc	1 52 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:52:31
	mul.wide.s32 	%rd17, %r55, 4;
	add.s64 	%rd4, %rd13, %rd17;
	.loc	1 65 35                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:65:35
	add.s32 	%r56, %r52, 4;
	.loc	1 65 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:65:31
	mul.wide.s32 	%rd18, %r56, 4;
	add.s64 	%rd7, %rd13, %rd18;
	.loc	1 24 21                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:24:21
	bfe.s32 	%r57, %r1, 25, 1;
	shr.u32 	%r58, %r57, 29;
	add.s32 	%r59, %r52, %r58;
	shr.s32 	%r60, %r59, 3;
	shr.u32 	%r61, %r57, 30;
	add.s32 	%r62, %r52, %r61;
	shr.s32 	%r63, %r62, 2;
	.loc	1 24 26                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:24:26
	shr.u32 	%r64, %r62, 31;
	add.s32 	%r65, %r63, %r64;
	and.b32  	%r66, %r65, -2;
	sub.s32 	%r67, %r63, %r66;
	shr.u32 	%r68, %r59, 31;
	add.s32 	%r69, %r60, %r68;
	and.b32  	%r70, %r69, -2;
	sub.s32 	%r71, %r60, %r70;
	.loc	1 30 19                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:30:19
	setp.gt.s32 	%p30, %r71, 0;
	.loc	1 35 19                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:35:19
	setp.gt.s32 	%p31, %r67, 0;
	.loc	1 38 19                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:38:19
	and.pred  	%p32, %p30, %p31;
	.loc	1 39 52                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:39:52
	and.pred  	%p2, %p1, %p32;
	mov.b32 	%r6, 0;
	.loc	1 39 44                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:39:44
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p2 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r4, %r6;
	@!%p2 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 41 21                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:41:21
	setp.gt.s32 	%p33, %r67, -1;
	.loc	1 44 19                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:44:19
	and.pred  	%p34, %p30, %p33;
	.loc	1 45 51                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:45:51
	and.pred  	%p5, %p1, %p34;
	.loc	1 45 43                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:45:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p5 ld.global.v2.b32 { %r8, %r9 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r8, %r6;
	@!%p5 mov.u32 %r9, %r6;
	// end inline asm
	mov.b32 	%f5, %r8;
	mov.b32 	%f6, %r9;
	.loc	1 46 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:46:20
	add.f32 	%f7, %f3, %f5;
	add.f32 	%f8, %f4, %f6;
	.loc	1 69 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:69:20
	setp.lt.s32 	%p35, %r71, 1;
	setp.lt.s32 	%p36, %r67, 1;
	.loc	1 64 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:64:20
	and.pred  	%p37, %p36, %p1;
	.loc	1 52 51                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:52:51
	and.pred  	%p9, %p37, %p30;
	.loc	1 52 43                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:52:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p9 ld.global.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	@!%p9 mov.u32 %r12, %r6;
	@!%p9 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f9, %r12;
	mov.b32 	%f10, %r13;
	.loc	1 53 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:53:20
	add.f32 	%f11, %f7, %f9;
	add.f32 	%f12, %f8, %f10;
	.loc	1 55 21                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:55:21
	setp.gt.s32 	%p38, %r71, -1;
	.loc	1 58 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:58:20
	and.pred  	%p39, %p38, %p31;
	.loc	1 59 51                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:59:51
	and.pred  	%p11, %p1, %p39;
	.loc	1 59 43                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:59:43
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p11 ld.global.v2.b32 { %r16, %r17 }, [ %rd4 + 0 ];
	@!%p11 mov.u32 %r16, %r6;
	@!%p11 mov.u32 %r17, %r6;
	// end inline asm
	mov.b32 	%f13, %r16;
	mov.b32 	%f14, %r17;
	.loc	1 60 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:60:20
	add.f32 	%f15, %f11, %f13;
	add.f32 	%f16, %f12, %f14;
	.loc	1 61 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:61:20
	or.b32  	%r72, %r71, %r67;
	setp.gt.s32 	%p40, %r72, -1;
	.loc	1 62 44                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:62:44
	and.pred  	%p14, %p1, %p40;
	.loc	1 62 36                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:62:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p14 ld.global.v2.b32 { %r20, %r21 }, [ %rd1 + 0 ];
	@!%p14 mov.u32 %r20, %r6;
	@!%p14 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f17, %r20;
	mov.b32 	%f18, %r21;
	.loc	1 63 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:63:20
	add.f32 	%f19, %f15, %f17;
	add.f32 	%f20, %f16, %f18;
	.loc	1 65 48                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:65:48
	and.pred  	%p18, %p37, %p38;
	.loc	1 65 40                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:65:40
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p18 ld.global.v2.b32 { %r24, %r25 }, [ %rd7 + 0 ];
	@!%p18 mov.u32 %r24, %r6;
	@!%p18 mov.u32 %r25, %r6;
	// end inline asm
	mov.b32 	%f21, %r24;
	mov.b32 	%f22, %r25;
	.loc	1 66 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:66:20
	add.f32 	%f23, %f19, %f21;
	add.f32 	%f24, %f20, %f22;
	.loc	1 74 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:74:20
	and.pred  	%p41, %p35, %p1;
	.loc	1 72 48                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:72:48
	and.pred  	%p21, %p41, %p31;
	.loc	1 72 40                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:72:40
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p21 ld.global.v2.b32 { %r28, %r29 }, [ %rd7 + 0 ];
	@!%p21 mov.u32 %r28, %r6;
	@!%p21 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f25, %r28;
	mov.b32 	%f26, %r29;
	.loc	1 73 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:73:20
	add.f32 	%f27, %f23, %f25;
	add.f32 	%f28, %f24, %f26;
	.loc	1 75 35                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:75:35
	add.s32 	%r73, %r52, 8;
	.loc	1 75 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:75:31
	mul.wide.s32 	%rd19, %r73, 4;
	add.s64 	%rd9, %rd13, %rd19;
	.loc	1 75 48                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:75:48
	and.pred  	%p24, %p41, %p33;
	.loc	1 75 40                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:75:40
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p24 ld.global.v2.b32 { %r32, %r33 }, [ %rd9 + 0 ];
	@!%p24 mov.u32 %r32, %r6;
	@!%p24 mov.u32 %r33, %r6;
	// end inline asm
	mov.b32 	%f29, %r32;
	mov.b32 	%f30, %r33;
	.loc	1 76 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:76:20
	add.f32 	%f31, %f27, %f29;
	add.f32 	%f32, %f28, %f30;
	.loc	1 78 36                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:78:36
	add.s32 	%r74, %r52, 12;
	.loc	1 78 31                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:78:31
	mul.wide.s32 	%rd20, %r74, 4;
	add.s64 	%rd10, %rd13, %rd20;
	.loc	1 78 49                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:78:49
	and.pred  	%p27, %p41, %p36;
	.loc	1 78 41                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:78:41
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p27 ld.global.v2.b32 { %r36, %r37 }, [ %rd10 + 0 ];
	@!%p27 mov.u32 %r36, %r6;
	@!%p27 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f33, %r36;
	mov.b32 	%f34, %r37;
	.loc	1 79 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:79:20
	add.f32 	%f35, %f31, %f33;
	add.f32 	%f36, %f32, %f34;
	.loc	1 81 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:81:20
	mov.b32 	%r41, %f35;
	mov.b32 	%r42, 1082130432;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f37, %r40;
	mov.b32 	%r44, %f36;
	// begin inline asm
	div.full.f32 %r43, %r44, %r42;
	// end inline asm
	mov.b32 	%f38, %r43;
	.loc	1 82 20                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:82:20
	sub.f32 	%f39, %f37, %f1;
	sub.f32 	%f40, %f38, %f2;
	.loc	1 83 28                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:83:28
	add.s64 	%rd11, %rd12, %rd14;
	.loc	1 83 40                         // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:83:40
	mov.b32 	%r46, %f39;
	mov.b32 	%r47, %f40;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 83 4                          // ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py:83:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/k5/ck5bkgvktrvgqrcbtghdfcpnljigsrbh2xj7oy5snwvpdm6vhehr.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 53
.b8 98
.b8 107
.b8 103
.b8 118
.b8 107
.b8 116
.b8 114
.b8 118
.b8 103
.b8 113
.b8 114
.b8 99
.b8 98
.b8 116
.b8 103
.b8 104
.b8 100
.b8 102
.b8 99
.b8 112
.b8 110
.b8 108
.b8 106
.b8 105
.b8 103
.b8 115
.b8 114
.b8 98
.b8 104
.b8 50
.b8 120
.b8 106
.b8 55
.b8 111
.b8 121
.b8 53
.b8 115
.b8 110
.b8 119
.b8 118
.b8 112
.b8 100
.b8 109
.b8 54
.b8 118
.b8 104
.b8 101
.b8 104
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
