; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@assertFunc_0 = internal constant [8 x i8] c"unknown\00"
@assertFile_0 = internal constant [74 x i8] c"inductor_cache/ph/cph4icuwhuxvulmexkb7im7chrngiift4tofhpaxmj56xcwtraqo.py\00"
@assertMessage_0 = internal constant [35 x i8] c"index out of bounds: 0 <= tmp4 < 4\00"
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

; Function Attrs: noreturn
declare !dbg !7 void @__assertfail(ptr, ptr, i32, ptr, i64) local_unnamed_addr #0

define void @triton_poi_fused__log_softmax_gather_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !11 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !12
  %6 = shl i32 %5, 2, !dbg !13
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %8 = and i32 %7, 3, !dbg !14
  %9 = or disjoint i32 %6, %8, !dbg !15
  %10 = icmp slt i32 %9, 4, !dbg !16
  %11 = sext i32 %9 to i64, !dbg !17
  %12 = getelementptr i64, ptr addrspace(1) %0, i64 %11, !dbg !17
  %13 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %12, i1 %10) #4, !dbg !18
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !19
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %10) #4, !dbg !20
  %16 = add i32 %9, 64, !dbg !21
  %17 = sext i32 %16 to i64, !dbg !22
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !22
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %10) #4, !dbg !23
  %20 = add i32 %9, 128, !dbg !24
  %21 = sext i32 %20 to i64, !dbg !25
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !25
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %10) #4, !dbg !26
  %24 = add i32 %9, 192, !dbg !27
  %25 = sext i32 %24 to i64, !dbg !28
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !28
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %10) #4, !dbg !29
  %28 = lshr i64 %13, 61, !dbg !30
  %29 = and i64 %28, 4, !dbg !30
  %30 = add i64 %29, %13, !dbg !30
  %31 = icmp ugt i64 %30, 3, !dbg !31
  %.not1 = and i1 %10, %31, !dbg !32
  br i1 %.not1, label %32, label %33, !dbg !32

32:                                               ; preds = %4
  tail call void @__assertfail(ptr nonnull @assertMessage_0, ptr nonnull @assertFile_0, i32 34, ptr nonnull @assertFunc_0, i64 1), !dbg !32
  unreachable, !dbg !32

33:                                               ; preds = %4
  %34 = bitcast i32 %27 to float, !dbg !29
  %35 = bitcast i32 %23 to float, !dbg !26
  %36 = bitcast i32 %19 to float, !dbg !23
  %37 = bitcast i32 %15 to float, !dbg !20
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %.idx = shl i64 %30, 8, !dbg !33
  %38 = getelementptr i8, ptr addrspace(1) %1, i64 %.idx, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %38, i64 %11, !dbg !33
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %10) #4, !dbg !34
  %41 = fmul float %37, 0x3FF7154760000000, !dbg !35
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #4, !dbg !35
  %43 = fmul float %36, 0x3FF7154760000000, !dbg !36
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #4, !dbg !36
  %45 = fadd float %42, %44, !dbg !37
  %46 = fmul float %35, 0x3FF7154760000000, !dbg !38
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #4, !dbg !38
  %48 = fadd float %45, %47, !dbg !39
  %49 = fmul float %34, 0x3FF7154760000000, !dbg !40
  %50 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %49) #4, !dbg !40
  %51 = fadd float %48, %50, !dbg !41
  %52 = fcmp olt float %51, 0x3810000000000000, !dbg !42
  %53 = fmul float %51, 0x4160000000000000, !dbg !42
  %.02.i = select i1 %52, float %53, float %51, !dbg !42
  %i.i.0.i = select i1 %52, float -2.300000e+01, float 0.000000e+00, !dbg !42
  %54 = bitcast float %.02.i to i32, !dbg !42
  %55 = add i32 %54, -1059760811, !dbg !42
  %56 = and i32 %55, -8388608, !dbg !42
  %57 = sub i32 %54, %56, !dbg !42
  %58 = bitcast i32 %57 to float, !dbg !42
  %59 = sitofp i32 %56 to float, !dbg !42
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i = icmp eq i32 %60, 0, !dbg !42
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %59, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !42
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %59, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !42
  %.08.i = select i1 %.not.i, float %62, float %61, !dbg !42
  %63 = fadd float %58, -1.000000e+00, !dbg !42
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i = icmp eq i32 %64, 0, !dbg !42
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %63, float 0x3FC2073EC0000000) #4, !dbg !42
  %66 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %63, float 0x3FC2073EC0000000) #4, !dbg !42
  %.010.i = select i1 %.not1.i, float %66, float %65, !dbg !42
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i = icmp eq i32 %67, 0, !dbg !42
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %63, float 0xBFBF19B980000000) #4, !dbg !42
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %63, float 0xBFBF19B980000000) #4, !dbg !42
  %.011.i = select i1 %.not2.i, float %69, float %68, !dbg !42
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i = icmp eq i32 %70, 0, !dbg !42
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %63, float 0x3FC1E52AA0000000) #4, !dbg !42
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %63, float 0x3FC1E52AA0000000) #4, !dbg !42
  %.012.i = select i1 %.not3.i, float %72, float %71, !dbg !42
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i = icmp eq i32 %73, 0, !dbg !42
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %63, float 0xBFC55B1720000000) #4, !dbg !42
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %63, float 0xBFC55B1720000000) #4, !dbg !42
  %.09.i = select i1 %.not4.i, float %75, float %74, !dbg !42
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i = icmp eq i32 %76, 0, !dbg !42
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %63, float 0x3FC99DA160000000) #4, !dbg !42
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %63, float 0x3FC99DA160000000) #4, !dbg !42
  %.05.i = select i1 %.not5.i, float %78, float %77, !dbg !42
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i = icmp eq i32 %79, 0, !dbg !42
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %63, float 0xBFCFFFE440000000) #4, !dbg !42
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %63, float 0xBFCFFFE440000000) #4, !dbg !42
  %.01.i = select i1 %.not6.i, float %81, float %80, !dbg !42
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not7.i = icmp eq i32 %82, 0, !dbg !42
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %63, float 0x3FD5554F00000000) #4, !dbg !42
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %63, float 0x3FD5554F00000000) #4, !dbg !42
  %.0.i = select i1 %.not7.i, float %84, float %83, !dbg !42
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not8.i = icmp eq i32 %85, 0, !dbg !42
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %63, float -5.000000e-01) #4, !dbg !42
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %63, float -5.000000e-01) #4, !dbg !42
  %.07.i = select i1 %.not8.i, float %87, float %86, !dbg !42
  %88 = fmul float %63, %.07.i, !dbg !42
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not9.i = icmp eq i32 %89, 0, !dbg !42
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float %63, float %63) #4, !dbg !42
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float %63, float %63) #4, !dbg !42
  %.06.i = select i1 %.not9.i, float %91, float %90, !dbg !42
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not10.i = icmp eq i32 %92, 0, !dbg !42
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !42
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !42
  %.04.i = select i1 %.not10.i, float %94, float %93, !dbg !42
  %95 = icmp ugt i32 %54, 2139095039, !dbg !42
  br i1 %95, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !42

__nv_fmaf_rn.exit.i.i:                            ; preds = %33
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not11.i = icmp eq i32 %96, 0, !dbg !42
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i = select i1 %.not11.i, float %98, float %97, !dbg !42
  br label %__nv_logf.exit, !dbg !42

__nv_logf.exit:                                   ; preds = %33, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %33 ], !dbg !42
  %99 = bitcast i32 %40 to float, !dbg !34
  %100 = and i32 %7, 28, !dbg !14
  %101 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !42
  %r.i.1.i = select i1 %101, float 0xFFF0000000000000, float %r.i.0.i, !dbg !42
  %102 = fsub float %99, %r.i.1.i, !dbg !43
  %103 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !44
  %104 = icmp eq i32 %100, 0, !dbg !45
  %105 = bitcast float %102 to i32, !dbg !45
  %106 = and i1 %104, %10, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %105, ptr addrspace(1) %103, i1 %106) #4, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #1

attributes #0 = { noreturn }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cph4icuwhuxvulmexkb7im7chrngiift4tofhpaxmj56xcwtraqo.py", directory: "inductor_cache/ph")
!4 = !{ptr @triton_poi_fused__log_softmax_gather_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_gather_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = !DISubprogram(name: "__assertfail", linkageName: "__assertfail", scope: !8, file: !8, type: !9, spFlags: DISPFlagOptimized)
!8 = !DIFile(filename: "<unknown>", directory: "")
!9 = !DISubroutineType(cc: DW_CC_normal, types: !10)
!10 = !{}
!11 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_gather_1", linkageName: "triton_poi_fused__log_softmax_gather_1", scope: !3, file: !3, line: 19, type: !9, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!12 = !DILocation(line: 21, column: 28, scope: !11)
!13 = !DILocation(line: 21, column: 33, scope: !11)
!14 = !DILocation(line: 22, column: 36, scope: !11)
!15 = !DILocation(line: 22, column: 23, scope: !11)
!16 = !DILocation(line: 23, column: 21, scope: !11)
!17 = !DILocation(line: 25, column: 30, scope: !11)
!18 = !DILocation(line: 25, column: 35, scope: !11)
!19 = !DILocation(line: 26, column: 30, scope: !11)
!20 = !DILocation(line: 26, column: 35, scope: !11)
!21 = !DILocation(line: 27, column: 35, scope: !11)
!22 = !DILocation(line: 27, column: 30, scope: !11)
!23 = !DILocation(line: 27, column: 40, scope: !11)
!24 = !DILocation(line: 28, column: 37, scope: !11)
!25 = !DILocation(line: 28, column: 31, scope: !11)
!26 = !DILocation(line: 28, column: 42, scope: !11)
!27 = !DILocation(line: 29, column: 37, scope: !11)
!28 = !DILocation(line: 29, column: 31, scope: !11)
!29 = !DILocation(line: 29, column: 42, scope: !11)
!30 = !DILocation(line: 33, column: 32, scope: !11)
!31 = !DILocation(line: 34, column: 37, scope: !11)
!32 = !DILocation(line: 34, column: 60, scope: !11)
!33 = !DILocation(line: 35, column: 30, scope: !11)
!34 = !DILocation(line: 35, column: 45, scope: !11)
!35 = !DILocation(line: 36, column: 23, scope: !11)
!36 = !DILocation(line: 37, column: 24, scope: !11)
!37 = !DILocation(line: 38, column: 19, scope: !11)
!38 = !DILocation(line: 39, column: 24, scope: !11)
!39 = !DILocation(line: 40, column: 20, scope: !11)
!40 = !DILocation(line: 41, column: 24, scope: !11)
!41 = !DILocation(line: 42, column: 20, scope: !11)
!42 = !DILocation(line: 43, column: 24, scope: !11)
!43 = !DILocation(line: 44, column: 19, scope: !11)
!44 = !DILocation(line: 45, column: 25, scope: !11)
!45 = !DILocation(line: 45, column: 37, scope: !11)
!46 = !DILocation(line: 45, column: 4, scope: !11)
