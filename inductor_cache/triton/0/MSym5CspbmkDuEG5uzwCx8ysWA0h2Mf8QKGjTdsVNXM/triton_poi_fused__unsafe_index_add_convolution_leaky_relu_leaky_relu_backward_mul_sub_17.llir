; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_convolution_leaky_relu_leaky_relu_backward_mul_sub_17(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) nocapture readnone %9, ptr addrspace(1) %10, ptr addrspace(1) %11, i32 %12) local_unnamed_addr !dbg !7 {
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %15 = shl i32 %14, 7, !dbg !11
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %17 = and i32 %16, 127, !dbg !12
  %18 = or disjoint i32 %15, %17, !dbg !13
  %19 = icmp slt i32 %18, 1024, !dbg !14
  %.frozen = freeze i32 %18, !dbg !15
  %20 = sdiv i32 %.frozen, 2, !dbg !15
  %21 = srem i32 %20, 2, !dbg !16
  %22 = mul i32 %20, 2, !dbg !17
  %.decomposed = sub i32 %.frozen, %22, !dbg !17
  %23 = sdiv i32 %18, 4, !dbg !18
  %24 = srem i32 %23, 64, !dbg !19
  %25 = sext i32 %23 to i64, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %3, i64 %25, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %19) #1, !dbg !21
  %28 = bitcast i32 %27 to float, !dbg !21
  %29 = sext i32 %24 to i64, !dbg !22
  %30 = getelementptr float, ptr addrspace(1) %4, i64 %29, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %19) #1, !dbg !23
  %32 = bitcast i32 %31 to float, !dbg !23
  %33 = sext i32 %.decomposed to i64, !dbg !24
  %34 = getelementptr float, ptr addrspace(1) %6, i64 %33, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %19) #1, !dbg !25
  %36 = bitcast i32 %35 to float, !dbg !25
  %37 = sext i32 %18 to i64, !dbg !26
  %38 = getelementptr float, ptr addrspace(1) %7, i64 %37, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %19) #1, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %8, i64 %29, !dbg !28
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %19) #1, !dbg !29
  %43 = bitcast i32 %42 to float, !dbg !29
  %44 = sext i32 %21 to i64, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %10, i64 %44, !dbg !30
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %19) #1, !dbg !31
  %47 = bitcast i32 %46 to float, !dbg !31
  %48 = fadd float %28, %32, !dbg !32
  %49 = fcmp ogt float %48, 0.000000e+00, !dbg !33
  %50 = fmul float %48, 0x3FB99999A0000000, !dbg !34
  %51 = select i1 %49, float %48, float %50, !dbg !35
  %52 = fsub float %51, %51, !dbg !36
  %53 = fmul float %52, %36, !dbg !37
  %54 = fadd float %51, %53, !dbg !38
  %55 = fadd float %40, %43, !dbg !39
  %56 = fcmp ogt float %55, 0.000000e+00, !dbg !40
  %57 = fmul float %55, 0x3FB99999A0000000, !dbg !41
  %58 = select i1 %56, float %55, float %57, !dbg !42
  %59 = fsub float %54, %54, !dbg !43
  %60 = fmul float %59, %47, !dbg !44
  %61 = fadd float %54, %60, !dbg !45
  %62 = fadd float %58, %61, !dbg !46
  %63 = fcmp ogt float %58, 0.000000e+00, !dbg !47
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !48
  %65 = bitcast float %62 to i32, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %64, i1 %19) #1, !dbg !49
  %66 = getelementptr i1, ptr addrspace(1) %11, i64 %37, !dbg !50
  %67 = zext i1 %63 to i8, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %67, ptr addrspace(1) %66, i1 %19) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coliq36qtw636d5ccxuyvepxt4zc2jmi4jxdupw2kmint4bwwd3x.py", directory: "inductor_cache/ol")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_leaky_relu_leaky_relu_backward_mul_sub_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_leaky_relu_leaky_relu_backward_mul_sub_17, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_convolution_leaky_relu_leaky_relu_backward_mul_sub_17", linkageName: "triton_poi_fused__unsafe_index_add_convolution_leaky_relu_leaky_relu_backward_mul_sub_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 26, scope: !7)
!20 = !DILocation(line: 31, column: 30, scope: !7)
!21 = !DILocation(line: 31, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 31, scope: !7)
!23 = !DILocation(line: 32, column: 36, scope: !7)
!24 = !DILocation(line: 34, column: 31, scope: !7)
!25 = !DILocation(line: 34, column: 36, scope: !7)
!26 = !DILocation(line: 35, column: 31, scope: !7)
!27 = !DILocation(line: 35, column: 36, scope: !7)
!28 = !DILocation(line: 36, column: 31, scope: !7)
!29 = !DILocation(line: 36, column: 36, scope: !7)
!30 = !DILocation(line: 38, column: 31, scope: !7)
!31 = !DILocation(line: 38, column: 36, scope: !7)
!32 = !DILocation(line: 46, column: 19, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 50, column: 20, scope: !7)
!35 = !DILocation(line: 51, column: 35, scope: !7)
!36 = !DILocation(line: 55, column: 20, scope: !7)
!37 = !DILocation(line: 56, column: 20, scope: !7)
!38 = !DILocation(line: 57, column: 20, scope: !7)
!39 = !DILocation(line: 58, column: 20, scope: !7)
!40 = !DILocation(line: 59, column: 20, scope: !7)
!41 = !DILocation(line: 60, column: 20, scope: !7)
!42 = !DILocation(line: 61, column: 35, scope: !7)
!43 = !DILocation(line: 65, column: 20, scope: !7)
!44 = !DILocation(line: 66, column: 20, scope: !7)
!45 = !DILocation(line: 67, column: 20, scope: !7)
!46 = !DILocation(line: 68, column: 20, scope: !7)
!47 = !DILocation(line: 69, column: 20, scope: !7)
!48 = !DILocation(line: 70, column: 28, scope: !7)
!49 = !DILocation(line: 70, column: 40, scope: !7)
!50 = !DILocation(line: 71, column: 25, scope: !7)
!51 = !DILocation(line: 71, column: 37, scope: !7)
!52 = !DILocation(line: 71, column: 4, scope: !7)
