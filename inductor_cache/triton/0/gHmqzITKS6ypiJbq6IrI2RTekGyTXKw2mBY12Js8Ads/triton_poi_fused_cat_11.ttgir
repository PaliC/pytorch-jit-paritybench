#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<52> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<13312> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<26> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<26> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<6656> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-26> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_3 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.extsi %6 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_5 : tensor<512xi64, #blocked> loc(#loc10)
    %11 = arith.muli %7, %cst_6 : tensor<512xi32, #blocked> loc(#loc11)
    %12 = arith.muli %8, %cst_7 : tensor<512xi32, #blocked> loc(#loc12)
    %13 = arith.addi %11, %12 : tensor<512xi32, #blocked> loc(#loc13)
    %14 = arith.addi %13, %6 : tensor<512xi32, #blocked> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = tt.addptr %18, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %20 = tt.load %19, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = arith.subf %17, %20 : tensor<512xf32, #blocked> loc(#loc19)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %23 = tt.addptr %22, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc20)
    %24 = tt.load %23, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %25 = arith.addf %24, %cst_0 : tensor<512xf32, #blocked> loc(#loc22)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc23)
    %27 = arith.divf %cst_1, %26 : tensor<512xf32, #blocked> loc(#loc24)
    %28 = arith.mulf %21, %27 : tensor<512xf32, #blocked> loc(#loc25)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %30 = tt.addptr %29, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc26)
    %31 = tt.load %30, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %32 = arith.mulf %28, %31 : tensor<512xf32, #blocked> loc(#loc28)
    %33 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc29)
    %34 = tt.addptr %33, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc29)
    %35 = tt.load %34, %10, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc30)
    %36 = arith.addf %32, %35 : tensor<512xf32, #blocked> loc(#loc31)
    %37 = arith.cmpf ogt, %cst, %36 : tensor<512xf32, #blocked> loc(#loc62)
    %38 = arith.select %37, %cst, %36 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc63)
    %39 = arith.cmpi sge, %9, %cst_5 : tensor<512xi64, #blocked> loc(#loc35)
    %40 = arith.addi %6, %cst_8 : tensor<512xi32, #blocked> loc(#loc36)
    %41 = arith.addi %13, %40 : tensor<512xi32, #blocked> loc(#loc37)
    %42 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc38)
    %43 = tt.addptr %42, %41 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc38)
    %44 = tt.load %43, %39, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %45 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %46 = tt.addptr %45, %40 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc40)
    %47 = tt.load %46, %39, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %48 = arith.subf %44, %47 : tensor<512xf32, #blocked> loc(#loc42)
    %49 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %50 = tt.addptr %49, %40 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc43)
    %51 = tt.load %50, %39, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %52 = arith.addf %51, %cst_0 : tensor<512xf32, #blocked> loc(#loc45)
    %53 = tt.extern_elementwise %52 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc46)
    %54 = arith.divf %cst_1, %53 : tensor<512xf32, #blocked> loc(#loc47)
    %55 = arith.mulf %48, %54 : tensor<512xf32, #blocked> loc(#loc48)
    %56 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc49)
    %57 = tt.addptr %56, %40 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc49)
    %58 = tt.load %57, %39, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc50)
    %59 = arith.mulf %55, %58 : tensor<512xf32, #blocked> loc(#loc51)
    %60 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc52)
    %61 = tt.addptr %60, %40 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc52)
    %62 = tt.load %61, %39, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc53)
    %63 = arith.addf %59, %62 : tensor<512xf32, #blocked> loc(#loc54)
    %64 = arith.cmpf ogt, %cst, %63 : tensor<512xf32, #blocked> loc(#loc64)
    %65 = arith.select %64, %cst, %63 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc65)
    %66 = arith.select %39, %65, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc56)
    %67 = arith.select %10, %38, %66 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc66)
    %68 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc59)
    %69 = tt.addptr %68, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc59)
    tt.store %69, %67 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":21:28)
#loc3 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":21:33)
#loc4 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":22:36)
#loc5 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":22:23)
#loc6 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":24:21)
#loc7 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":24:28)
#loc8 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":25:19)
#loc9 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":26:19)
#loc10 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":32:18)
#loc11 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:33)
#loc12 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:43)
#loc13 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:38)
#loc14 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:49)
#loc15 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:30)
#loc16 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":33:55)
#loc17 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":34:30)
#loc18 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":34:35)
#loc19 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":35:18)
#loc20 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":36:30)
#loc21 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":36:35)
#loc22 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":38:19)
#loc23 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":39:27)
#loc24 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":41:20)
#loc25 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":44:19)
#loc26 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":45:31)
#loc27 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":45:36)
#loc28 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":46:20)
#loc29 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":47:31)
#loc30 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":47:36)
#loc31 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":48:20)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":50:42)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc35 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":53:20)
#loc36 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":56:58)
#loc37 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":56:50)
#loc38 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":56:31)
#loc39 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":56:64)
#loc40 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":57:31)
#loc41 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":57:44)
#loc42 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":58:20)
#loc43 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":59:31)
#loc44 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":59:44)
#loc45 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":61:20)
#loc46 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":62:27)
#loc47 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":64:20)
#loc48 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":67:20)
#loc49 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":68:31)
#loc50 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":68:44)
#loc51 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":69:20)
#loc52 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":70:31)
#loc53 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":70:44)
#loc54 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":71:20)
#loc55 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":73:42)
#loc56 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":75:35)
#loc57 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":76:34)
#loc58 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":52:34)
#loc59 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":77:25)
#loc60 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":77:37)
#loc61 = loc("inductor_cache/df/cdfbp6pprjcmxudtmnohp357sxeuwwyfplizejjgdnar2wq3yhc2.py":77:4)
#loc62 = loc(callsite(#loc32 at #loc33))
#loc63 = loc(callsite(#loc34 at #loc33))
#loc64 = loc(callsite(#loc32 at #loc55))
#loc65 = loc(callsite(#loc34 at #loc55))
#loc66 = loc(fused[#loc57, #loc58])
