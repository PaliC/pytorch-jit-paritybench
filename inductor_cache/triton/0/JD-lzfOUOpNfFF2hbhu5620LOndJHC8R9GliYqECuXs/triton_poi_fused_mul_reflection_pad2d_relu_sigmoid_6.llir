; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_reflection_pad2d_relu_sigmoid_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 576, !dbg !14
  %13 = srem i32 %11, 6, !dbg !15
  %14 = sdiv i32 %10, 6, !dbg !16
  %15 = sdiv i32 %10, 36, !dbg !17
  %16 = add nsw i32 %13, -1, !dbg !18
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true), !dbg !19
  %18 = add nsw i32 %17, -3, !dbg !20
  %19 = tail call i32 @llvm.abs.i32(i32 %18, i1 true), !dbg !21
  %20 = shl nsw i32 %15, 4, !dbg !22
  %reass.sub = or disjoint i32 %20, 15, !dbg !23
  %21 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !15
  %22 = insertelement <2 x i32> %21, i32 %14, i64 1, !dbg !15
  %23 = srem <2 x i32> %22, splat (i32 6), !dbg !15
  %24 = add nsw <2 x i32> %23, splat (i32 -1), !dbg !18
  %25 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %24, i1 true), !dbg !19
  %26 = add nsw <2 x i32> %25, splat (i32 -3), !dbg !20
  %27 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %26, i1 true), !dbg !21
  %28 = extractelement <2 x i32> %27, i64 0, !dbg !24
  %29 = sub nuw nsw i32 %reass.sub, %28, !dbg !24
  %30 = extractelement <2 x i32> %27, i64 1, !dbg !24
  %31 = mul nsw i32 %30, -4, !dbg !24
  %32 = add i32 %29, %31, !dbg !24
  %33 = sub nuw nsw i32 %reass.sub, %19, !dbg !23
  %34 = add i32 %33, %31, !dbg !24
  %35 = sext i32 %32 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !25
  %37 = sext i32 %34 to i64, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !25
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %12) #2, !dbg !26
  %40 = bitcast i32 %39 to float, !dbg !26
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %12) #2, !dbg !26
  %42 = bitcast i32 %41 to float, !dbg !26
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !27
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !27
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %12) #2, !dbg !28
  %46 = bitcast i32 %45 to float, !dbg !28
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #2, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = fsub float 0.000000e+00, %46, !dbg !29
  %50 = fsub float 0.000000e+00, %48, !dbg !29
  %51 = fmul float %49, 0x3FF7154760000000, !dbg !33
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #2, !dbg !33
  %53 = fmul float %50, 0x3FF7154760000000, !dbg !33
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #2, !dbg !33
  %55 = fadd float %52, 1.000000e+00, !dbg !34
  %56 = fadd float %54, 1.000000e+00, !dbg !34
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %55) #2, !dbg !35
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %56) #2, !dbg !35
  %59 = fmul float %57, %40, !dbg !36
  %60 = fmul float %58, %42, !dbg !36
  %61 = fmul float %59, 0x3FFCCCCCC0000000, !dbg !37
  %62 = fmul float %60, 0x3FFCCCCCC0000000, !dbg !37
  %63 = fcmp olt float %61, 0.000000e+00, !dbg !38
  %64 = fcmp olt float %62, 0.000000e+00, !dbg !38
  %65 = select i1 %63, float 0.000000e+00, float %61, !dbg !42
  %66 = select i1 %64, float 0.000000e+00, float %62, !dbg !42
  %67 = fmul float %65, 0x3FFB6C6020000000, !dbg !43
  %68 = fmul float %66, 0x3FFB6C6020000000, !dbg !43
  %69 = sext i32 %10 to i64, !dbg !44
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !44
  %71 = bitcast float %67 to i32, !dbg !45
  %72 = bitcast float %68 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %71, i32 %72, ptr addrspace(1) %70, i1 %12) #2, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz2ckjuzzav6bz6slaniqpdrcdk56xrton5d6wewfqiwjvs5qopq.py", directory: "inductor_cache/z2")
!4 = !{ptr @triton_poi_fused_mul_reflection_pad2d_relu_sigmoid_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_reflection_pad2d_relu_sigmoid_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_reflection_pad2d_relu_sigmoid_6", linkageName: "triton_poi_fused_mul_reflection_pad2d_relu_sigmoid_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 79, scope: !7)
!19 = !DILocation(line: 28, column: 72, scope: !7)
!20 = !DILocation(line: 28, column: 60, scope: !7)
!21 = !DILocation(line: 28, column: 53, scope: !7)
!22 = !DILocation(line: 28, column: 142, scope: !7)
!23 = !DILocation(line: 28, column: 88, scope: !7)
!24 = !DILocation(line: 28, column: 139, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 147, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 147, scope: !7)
!29 = !DILocation(line: 47, column: 30, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!32 = !DILocation(line: 30, column: 22, scope: !7)
!33 = !DILocation(line: 47, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 47, column: 20, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 47, column: 16, scope: !30, inlinedAt: !32)
!36 = !DILocation(line: 31, column: 18, scope: !7)
!37 = !DILocation(line: 33, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 35, column: 40, scope: !7)
!42 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 37, column: 18, scope: !7)
!44 = !DILocation(line: 38, column: 25, scope: !7)
!45 = !DILocation(line: 38, column: 36, scope: !7)
!46 = !DILocation(line: 38, column: 4, scope: !7)
