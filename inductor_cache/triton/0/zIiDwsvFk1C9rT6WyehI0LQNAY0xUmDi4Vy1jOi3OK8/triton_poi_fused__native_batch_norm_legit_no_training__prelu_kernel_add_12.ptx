//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<91>;
	.reg .f32 	%f<89>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:22:33
	shl.b32 	%r59, %r1, 9;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_2];
	.loc	1 23 44                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:23:44
	mov.u32 	%r60, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_3];
	and.b32  	%r62, %r60, 127;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_4];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_5];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_6];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_12_param_7];
	shl.b32 	%r63, %r60, 2;
	and.b32  	%r64, %r63, 508;
	.loc	1 23 23                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:23:23
	or.b32  	%r65, %r59, %r62;
	or.b32  	%r66, %r59, %r64;
	.loc	1 25 28                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:25:33
	shl.b32 	%r67, %r2, 1;
	.loc	1 26 23                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:26:23
	or.b32  	%r68, %r67, 1;
	.loc	1 27 21                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:27:21
	setp.lt.s32 	%p1, %r67, 2;
	setp.lt.s32 	%p11, %r68, 2;
	.loc	1 31 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:31:19
	bfe.s32 	%r69, %r1, 22, 1;
	shr.u32 	%r70, %r69, 24;
	add.s32 	%r71, %r66, %r70;
	shr.s32 	%r72, %r71, 8;
	.loc	1 30 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:30:19
	and.b32  	%r73, %r71, -256;
	sub.s32 	%r74, %r66, %r73;
	.loc	1 32 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:35
	add.s32 	%r75, %r65, %r2;
	shl.b32 	%r76, %r75, 1;
	add.s32 	%r77, %r76, 256;
	add.s32 	%r78, %r76, 512;
	add.s32 	%r79, %r76, 768;
	.loc	1 32 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:30
	mul.wide.s32 	%rd22, %r76, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r77, 4;
	add.s64 	%rd2, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r78, 4;
	add.s64 	%rd3, %rd14, %rd24;
	mul.wide.s32 	%rd25, %r79, 4;
	add.s64 	%rd4, %rd14, %rd25;
	.loc	1 32 42                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:30
	mul.wide.s32 	%rd26, %r67, 4;
	add.s64 	%rd5, %rd15, %rd26;
	.loc	1 33 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:34:30
	add.s64 	%rd6, %rd16, %rd26;
	.loc	1 34 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:34:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r13;
	mov.b32 	%f2, %r14;
	.loc	1 35 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:31
	add.s64 	%rd7, %rd17, %rd26;
	.loc	1 35 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:31
	add.s64 	%rd8, %rd18, %rd26;
	.loc	1 36 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:31
	add.s64 	%rd9, %rd19, %rd26;
	.loc	1 37 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:36
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 40                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:40
	shl.b32 	%r80, %r68, 8;
	.loc	1 38 49                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:49
	shl.b32 	%r81, %r72, 9;
	.loc	1 38 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:36
	add.s32 	%r82, %r81, %r74;
	.loc	1 38 45                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:45
	add.s32 	%r83, %r72, %r2;
	shl.b32 	%r84, %r83, 9;
	add.s32 	%r85, %r84, %r74;
	add.s32 	%r86, %r82, %r80;
	.loc	1 38 31                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:31
	mul.wide.s32 	%rd27, %r85, 4;
	add.s64 	%rd10, %rd20, %rd27;
	mul.wide.s32 	%rd28, %r86, 4;
	add.s64 	%rd11, %rd20, %rd28;
	.loc	1 38 54                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:54
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 41 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:41:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 42 26                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:42:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 38 54                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:38:54
	mov.b32 	%f7, %r28;
	mov.b32 	%f8, %r27;
	mov.b32 	%f9, %r26;
	mov.b32 	%f10, %r25;
	mov.b32 	%f11, %r24;
	mov.b32 	%f12, %r23;
	mov.b32 	%f13, %r22;
	mov.b32 	%f14, %r21;
	.loc	1 37 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:37:36
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r19;
	.loc	1 44 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:44:18
	mov.b32 	%r31, %f5;
	mov.b32 	%r30, 1065353216;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f17, %r29;
	mov.b32 	%r34, %f6;
	// begin inline asm
	div.full.f32 %r32, %r30, %r34;
	// end inline asm
	mov.b32 	%f18, %r32;
	.loc	1 33 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:33:35
	mov.b32 	%f19, %r12;
	mov.b32 	%f20, %r11;
	.loc	1 32 42                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:32:42
	mov.b32 	%f21, %r10;
	mov.b32 	%f22, %r9;
	mov.b32 	%f23, %r8;
	mov.b32 	%f24, %r7;
	mov.b32 	%f25, %r6;
	mov.b32 	%f26, %r5;
	mov.b32 	%f27, %r4;
	mov.b32 	%f28, %r3;
	.loc	1 39 18                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:39:18
	sub.f32 	%f29, %f28, %f20;
	sub.f32 	%f30, %f27, %f19;
	sub.f32 	%f31, %f26, %f20;
	sub.f32 	%f32, %f25, %f19;
	sub.f32 	%f33, %f24, %f20;
	sub.f32 	%f34, %f23, %f19;
	sub.f32 	%f35, %f22, %f20;
	sub.f32 	%f36, %f21, %f19;
	.loc	1 36 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:36:36
	mov.b32 	%f37, %r18;
	mov.b32 	%f38, %r17;
	.loc	1 35 36                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:35:36
	mov.b32 	%f39, %r16;
	mov.b32 	%f40, %r15;
	.loc	1 47 19                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:47:19
	mul.f32 	%f41, %f36, %f18;
	mul.f32 	%f42, %f35, %f17;
	mul.f32 	%f43, %f34, %f18;
	mul.f32 	%f44, %f33, %f17;
	mul.f32 	%f45, %f32, %f18;
	mul.f32 	%f46, %f31, %f17;
	mul.f32 	%f47, %f30, %f18;
	mul.f32 	%f48, %f29, %f17;
	.loc	1 49 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:49:20
	fma.rn.f32 	%f49, %f48, %f40, %f38;
	fma.rn.f32 	%f50, %f47, %f39, %f37;
	fma.rn.f32 	%f51, %f46, %f40, %f38;
	fma.rn.f32 	%f52, %f45, %f39, %f37;
	fma.rn.f32 	%f53, %f44, %f40, %f38;
	fma.rn.f32 	%f54, %f43, %f39, %f37;
	fma.rn.f32 	%f55, %f42, %f40, %f38;
	fma.rn.f32 	%f56, %f41, %f39, %f37;
	.loc	1 51 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:51:20
	setp.gt.f32 	%p22, %f56, 0f00000000;
	setp.gt.f32 	%p23, %f55, 0f00000000;
	setp.gt.f32 	%p24, %f54, 0f00000000;
	setp.gt.f32 	%p25, %f53, 0f00000000;
	setp.gt.f32 	%p26, %f52, 0f00000000;
	setp.gt.f32 	%p27, %f51, 0f00000000;
	setp.gt.f32 	%p28, %f50, 0f00000000;
	setp.gt.f32 	%p29, %f49, 0f00000000;
	.loc	1 52 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:52:20
	mul.f32 	%f57, %f49, %f16;
	mul.f32 	%f58, %f50, %f15;
	mul.f32 	%f59, %f51, %f16;
	mul.f32 	%f60, %f52, %f15;
	mul.f32 	%f61, %f53, %f16;
	mul.f32 	%f62, %f54, %f15;
	mul.f32 	%f63, %f55, %f16;
	mul.f32 	%f64, %f56, %f15;
	.loc	1 53 35                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:53:35
	selp.f32 	%f65, %f49, %f57, %p29;
	selp.f32 	%f66, %f50, %f58, %p28;
	selp.f32 	%f67, %f51, %f59, %p27;
	selp.f32 	%f68, %f52, %f60, %p26;
	selp.f32 	%f69, %f53, %f61, %p25;
	selp.f32 	%f70, %f54, %f62, %p24;
	selp.f32 	%f71, %f55, %f63, %p23;
	selp.f32 	%f72, %f56, %f64, %p22;
	shl.b32 	%r87, %r62, 2;
	mov.u32 	%r88, global_smem;
	add.s32 	%r35, %r88, %r87;
	mov.b32 	%r36, %f65;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r35, 2064;
	mov.b32 	%r38, %f66;
	// begin inline asm
	@%p12 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r35, 512;
	mov.b32 	%r40, %f67;
	// begin inline asm
	@%p12 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r35, 2576;
	mov.b32 	%r42, %f68;
	// begin inline asm
	@%p12 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 1024;
	mov.b32 	%r44, %f69;
	// begin inline asm
	@%p12 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r35, 3088;
	mov.b32 	%r46, %f70;
	// begin inline asm
	@%p12 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r35, 1536;
	mov.b32 	%r48, %f71;
	// begin inline asm
	@%p12 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r35, 3600;
	mov.b32 	%r50, %f72;
	// begin inline asm
	@%p12 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r89, %r64, 2;
	add.s32 	%r90, %r88, %r89;
	ld.shared.v4.f32 	{%f73, %f74, %f75, %f76}, [%r90];
	ld.shared.v4.f32 	{%f77, %f78, %f79, %f80}, [%r90+2064];
	.loc	1 54 20                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:54:20
	add.f32 	%f81, %f73, %f14;
	add.f32 	%f82, %f74, %f13;
	add.f32 	%f83, %f75, %f12;
	add.f32 	%f84, %f76, %f11;
	add.f32 	%f85, %f77, %f10;
	add.f32 	%f86, %f78, %f9;
	add.f32 	%f87, %f79, %f8;
	add.f32 	%f88, %f80, %f7;
	.loc	1 55 25                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:25
	add.s64 	%rd12, %rd21, %rd27;
	add.s64 	%rd13, %rd21, %rd28;
	.loc	1 55 55                         // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:55
	mov.b32 	%r51, %f81;
	mov.b32 	%r52, %f82;
	mov.b32 	%r53, %f83;
	mov.b32 	%r54, %f84;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	mov.b32 	%r55, %f85;
	mov.b32 	%r56, %f86;
	mov.b32 	%r57, %f87;
	mov.b32 	%r58, %f88;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd13 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	.loc	1 55 4                          // cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/f7/cf7ngmalthsp2ker5pntizg64spnndx267usywyursud5osmuwf2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 55
.b8 110
.b8 103
.b8 109
.b8 97
.b8 108
.b8 116
.b8 104
.b8 115
.b8 112
.b8 50
.b8 107
.b8 101
.b8 114
.b8 53
.b8 112
.b8 110
.b8 116
.b8 105
.b8 122
.b8 103
.b8 54
.b8 52
.b8 115
.b8 112
.b8 110
.b8 110
.b8 100
.b8 120
.b8 50
.b8 54
.b8 55
.b8 117
.b8 115
.b8 121
.b8 119
.b8 121
.b8 117
.b8 114
.b8 115
.b8 117
.b8 100
.b8 53
.b8 111
.b8 115
.b8 109
.b8 117
.b8 119
.b8 102
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
