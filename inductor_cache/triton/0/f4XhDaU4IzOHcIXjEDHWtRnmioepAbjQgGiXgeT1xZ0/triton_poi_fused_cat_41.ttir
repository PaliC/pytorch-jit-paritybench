#loc = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_41(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-448> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-400> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<48> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<448> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-192> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<208> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<400> : tensor<256xi64> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_8 = arith.constant dense<192> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<192> : tensor<256xi64> loc(#loc1)
    %cst_10 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_10 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.extsi %5 : tensor<256xi32> to tensor<256xi64> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_9 : tensor<256xi64> loc(#loc8)
    %9 = arith.muli %6, %cst_8 : tensor<256xi32> loc(#loc9)
    %10 = arith.addi %9, %5 : tensor<256xi32> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %13 = tt.load %12, %8, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %16 = tt.load %15, %8, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %17 = arith.addf %13, %16 : tensor<256xf32> loc(#loc15)
    %18 = arith.cmpf ogt, %cst_7, %17 : tensor<256xf32> loc(#loc63)
    %19 = arith.select %18, %cst_7, %17 : tensor<256xi1>, tensor<256xf32> loc(#loc64)
    %20 = arith.cmpi sge, %7, %cst_9 : tensor<256xi64> loc(#loc19)
    %21 = arith.cmpi slt, %7, %cst_6 : tensor<256xi64> loc(#loc20)
    %22 = arith.andi %20, %21 : tensor<256xi1> loc(#loc21)
    %23 = arith.muli %6, %cst_5 : tensor<256xi32> loc(#loc22)
    %24 = arith.addi %5, %cst_4 : tensor<256xi32> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<256xi32> loc(#loc24)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %26, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %28 = tt.load %27, %22, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %30 = tt.addptr %29, %24 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %31 = tt.load %30, %22, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %32 = arith.addf %28, %31 : tensor<256xf32> loc(#loc29)
    %33 = arith.cmpf ogt, %cst_7, %32 : tensor<256xf32> loc(#loc65)
    %34 = arith.select %33, %cst_7, %32 : tensor<256xi1>, tensor<256xf32> loc(#loc66)
    %35 = arith.cmpi sge, %7, %cst_6 : tensor<256xi64> loc(#loc31)
    %36 = arith.cmpi slt, %7, %cst_3 : tensor<256xi64> loc(#loc32)
    %37 = arith.andi %35, %36 : tensor<256xi1> loc(#loc33)
    %38 = arith.muli %6, %cst_2 : tensor<256xi32> loc(#loc34)
    %39 = arith.addi %5, %cst_1 : tensor<256xi32> loc(#loc35)
    %40 = arith.addi %38, %39 : tensor<256xi32> loc(#loc36)
    %41 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc37)
    %42 = tt.addptr %41, %40 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc37)
    %43 = tt.load %42, %37, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc38)
    %44 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc39)
    %45 = tt.addptr %44, %39 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc39)
    %46 = tt.load %45, %37, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc40)
    %47 = arith.addf %43, %46 : tensor<256xf32> loc(#loc41)
    %48 = arith.cmpf ogt, %cst_7, %47 : tensor<256xf32> loc(#loc67)
    %49 = arith.select %48, %cst_7, %47 : tensor<256xi1>, tensor<256xf32> loc(#loc68)
    %50 = arith.cmpi sge, %7, %cst_3 : tensor<256xi64> loc(#loc43)
    %51 = arith.muli %6, %cst_0 : tensor<256xi32> loc(#loc44)
    %52 = arith.addi %5, %cst : tensor<256xi32> loc(#loc45)
    %53 = arith.addi %51, %52 : tensor<256xi32> loc(#loc46)
    %54 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc47)
    %55 = tt.addptr %54, %53 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc47)
    %56 = tt.load %55, %50, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %57 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc49)
    %58 = tt.addptr %57, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc49)
    %59 = tt.load %58, %50, %cst_7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc50)
    %60 = arith.addf %56, %59 : tensor<256xf32> loc(#loc51)
    %61 = arith.cmpf ogt, %cst_7, %60 : tensor<256xf32> loc(#loc69)
    %62 = arith.select %61, %cst_7, %60 : tensor<256xi1>, tensor<256xf32> loc(#loc70)
    %63 = arith.select %50, %62, %cst_7 : tensor<256xi1>, tensor<256xf32> loc(#loc53)
    %64 = arith.select %37, %49, %63 : tensor<256xi1>, tensor<256xf32> loc(#loc71)
    %65 = arith.select %22, %34, %64 : tensor<256xi1>, tensor<256xf32> loc(#loc72)
    %66 = arith.select %8, %19, %65 : tensor<256xi1>, tensor<256xf32> loc(#loc73)
    %67 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc60)
    %68 = tt.addptr %67, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc60)
    tt.store %68, %66 : tensor<256x!tt.ptr<f32>> loc(#loc61)
    tt.return loc(#loc62)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":21:28)
#loc3 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":21:33)
#loc4 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":22:36)
#loc5 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":22:23)
#loc6 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":24:19)
#loc7 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":25:19)
#loc8 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":31:18)
#loc9 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":32:34)
#loc10 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":32:40)
#loc11 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":32:30)
#loc12 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":32:46)
#loc13 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":33:30)
#loc14 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":33:35)
#loc15 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":34:18)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc17 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":36:40)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc19 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":39:20)
#loc20 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":41:19)
#loc21 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":42:20)
#loc22 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":43:35)
#loc23 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":43:50)
#loc24 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":43:41)
#loc25 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":43:31)
#loc26 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":43:56)
#loc27 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":44:31)
#loc28 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":44:45)
#loc29 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":45:20)
#loc30 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":47:42)
#loc31 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":50:20)
#loc32 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":52:19)
#loc33 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":53:20)
#loc34 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":54:34)
#loc35 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":54:49)
#loc36 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":54:40)
#loc37 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":54:31)
#loc38 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":54:55)
#loc39 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":55:31)
#loc40 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":55:45)
#loc41 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":56:20)
#loc42 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":58:42)
#loc43 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":61:20)
#loc44 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":64:34)
#loc45 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":64:49)
#loc46 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":64:40)
#loc47 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":64:31)
#loc48 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":64:55)
#loc49 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":65:31)
#loc50 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":65:45)
#loc51 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":66:20)
#loc52 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":68:42)
#loc53 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":70:35)
#loc54 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":71:35)
#loc55 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":60:35)
#loc56 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":72:35)
#loc57 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":49:35)
#loc58 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":73:34)
#loc59 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":38:33)
#loc60 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":74:25)
#loc61 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":74:37)
#loc62 = loc("inductor_cache/g6/cg66xcabecha25hvzsr6vti4axf7rldcfoh3zh32xen5xye5hkw7.py":74:4)
#loc63 = loc(callsite(#loc16 at #loc17))
#loc64 = loc(callsite(#loc18 at #loc17))
#loc65 = loc(callsite(#loc16 at #loc30))
#loc66 = loc(callsite(#loc18 at #loc30))
#loc67 = loc(callsite(#loc16 at #loc42))
#loc68 = loc(callsite(#loc18 at #loc42))
#loc69 = loc(callsite(#loc16 at #loc52))
#loc70 = loc(callsite(#loc18 at #loc52))
#loc71 = loc(fused[#loc54, #loc55])
#loc72 = loc(fused[#loc56, #loc57])
#loc73 = loc(fused[#loc58, #loc59])
