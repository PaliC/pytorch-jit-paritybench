//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_max_0  // -- Begin function triton_poi_fused_max_0
                                        // @triton_poi_fused_max_0
.visible .entry triton_poi_fused_max_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_0_param_1,
	.param .u32 triton_poi_fused_max_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_max_0_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_max_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:21:33
	shl.b32 	%r12, %r1, 6;
	.loc	1 22 36                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:22:36
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r14, %r13, 1;
	and.b32  	%r15, %r14, 62;
	.loc	1 22 23                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:22:23
	or.b32  	%r16, %r12, %r15;
	.loc	1 23 21                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:23:21
	setp.lt.s32 	%p1, %r16, 64;
	.loc	1 25 19                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:25:19
	shr.s32 	%r18, %r16, 31;
	shr.u32 	%r19, %r18, 30;
	add.s32 	%r20, %r16, %r19;
	.loc	1 24 19                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:24:19
	and.b32  	%r21, %r20, -4;
	sub.s32 	%r22, %r16, %r21;
	.loc	1 27 38                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:27:38
	shl.b32 	%r23, %r20, 2;
	and.b32  	%r24, %r23, -16;
	.loc	1 27 35                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:27:35
	add.s32 	%r25, %r24, %r22;
	.loc	1 27 30                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:27:30
	mul.wide.s32 	%rd8, %r25, 4;
	add.s64 	%rd1, %rd6, %rd8;
	.loc	1 27 43                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:27:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 28 39                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:28:39
	add.s32 	%r26, %r25, 4;
	.loc	1 28 30                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:28:30
	mul.wide.s32 	%rd9, %r26, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 28 47                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:28:47
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 29 39                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:29:39
	add.s32 	%r27, %r25, 8;
	.loc	1 29 30                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:29:30
	mul.wide.s32 	%rd10, %r27, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 29 47                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:29:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 30 40                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:30:40
	add.s32 	%r28, %r25, 12;
	.loc	1 30 30                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:30:30
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd4, %rd6, %rd11;
	.loc	1 30 48                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:30:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p6, %f1, %f3;
	setp.gt.f32 	%p7, %f2, %f4;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p8, %f1, %f1;
	setp.nan.f32 	%p9, %f2, %f2;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f9, %f1, %f3, %p6;
	selp.f32 	%f10, %f1, %f9, %p8;
	selp.f32 	%f11, %f2, %f4, %p7;
	selp.f32 	%f12, %f2, %f11, %p9;
$L__tmp2:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p10, %f10, %f5;
	setp.gt.f32 	%p11, %f12, %f6;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p12, %f10, %f10;
	setp.nan.f32 	%p13, %f12, %f12;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, %f10, %f5, %p12;
	selp.f32 	%f14, %f10, %f13, %p10;
	selp.f32 	%f15, %f12, %f6, %p13;
	selp.f32 	%f16, %f12, %f15, %p11;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p14, %f14, %f7;
	setp.gt.f32 	%p15, %f16, %f8;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p16, %f14, %f14;
	setp.nan.f32 	%p17, %f16, %f16;
$L__tmp4:
	.loc	1 34 25                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:34:25
	mul.wide.s32 	%rd12, %r16, 4;
	add.s64 	%rd5, %rd7, %rd12;
	.loc	1 34 36                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:34:36
	mov.b32 	%r29, %f14;
$L__tmp5:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r30, %r29, %r8, %p16;
	selp.b32 	%r10, %r29, %r30, %p14;
$L__tmp6:
	.loc	1 34 36                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:34:36
	mov.b32 	%r31, %f16;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r32, %r31, %r9, %p17;
	selp.b32 	%r11, %r31, %r32, %p15;
$L__tmp8:
	.loc	1 34 36                         // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:34:36
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 34 4                          // c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py:34:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/26/c2676jol3n6vhpgggh2ytxg757btjqiegz5h7lgirud4jc3tovmy.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 215                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 54
.b8 55
.b8 54
.b8 106
.b8 111
.b8 108
.b8 51
.b8 110
.b8 54
.b8 118
.b8 104
.b8 112
.b8 103
.b8 103
.b8 103
.b8 104
.b8 50
.b8 121
.b8 116
.b8 120
.b8 103
.b8 55
.b8 53
.b8 55
.b8 98
.b8 116
.b8 106
.b8 113
.b8 105
.b8 101
.b8 103
.b8 122
.b8 53
.b8 104
.b8 55
.b8 108
.b8 103
.b8 105
.b8 114
.b8 117
.b8 100
.b8 52
.b8 106
.b8 99
.b8 51
.b8 116
.b8 111
.b8 118
.b8 109
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 31                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 32                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
