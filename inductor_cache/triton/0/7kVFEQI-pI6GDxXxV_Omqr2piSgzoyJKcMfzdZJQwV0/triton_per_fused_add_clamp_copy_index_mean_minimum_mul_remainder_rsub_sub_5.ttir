#loc = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0)
#loc1 = loc(unknown)
#loc68 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":86:26)
#loc119 = loc(callsite(#loc1 at #loc68))
module {
  tt.func public @triton_per_fused_add_clamp_copy_index_mean_minimum_mul_remainder_rsub_sub_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0), %arg4: i32 loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<8x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<6.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_5 = arith.constant 6.000000e+00 : f32 loc(#loc1)
    %cst_6 = arith.constant dense<5.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_7 = arith.constant dense<1.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_8 = arith.constant dense<3.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<8x1xi64> loc(#loc1)
    %cst_10 = arith.constant dense<1> : tensor<8x1xi64> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %cst_12 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_13 = arith.constant dense<48> : tensor<8x1xi32> loc(#loc1)
    %cst_14 = arith.constant dense<32> : tensor<1x16xi32> loc(#loc1)
    %cst_15 = arith.constant dense<3> : tensor<8x1xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_16 = arith.constant dense<12> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_16 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_15 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_15 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.addi %8, %cst_14 : tensor<1x16xi32> loc(#loc12)
    %12 = arith.muli %10, %cst_13 : tensor<8x1xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc14)
    %14 = tt.broadcast %12 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<8x16xi32> loc(#loc14)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc15)
    %18 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc16)
    %19 = tt.load %17, %18, %cst_12 evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.addptr %20, %10 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc17)
    %22 = tt.load %21, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc19)
    %24 = arith.addi %23, %14 : tensor<8x16xi32> loc(#loc19)
    %25 = tt.addptr %16, %24 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc20)
    %26 = tt.load %25, %18, %cst_12 evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>> loc(#loc21)
    %27 = arith.addi %8, %cst_11 : tensor<1x16xi32> loc(#loc22)
    %28 = tt.broadcast %27 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc23)
    %29 = arith.addi %28, %14 : tensor<8x16xi32> loc(#loc23)
    %30 = tt.addptr %16, %29 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc24)
    %31 = tt.load %30, %18, %cst_12 evictionPolicy = evict_last : tensor<8x16x!tt.ptr<f32>> loc(#loc25)
    %32 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc26)
    %33 = tt.addptr %32, %10 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc26)
    %34 = tt.load %33, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc27)
    %35 = arith.extsi %9 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc28)
    %36 = arith.cmpi slt, %35, %cst_10 : tensor<8x1xi64> loc(#loc28)
    %37 = arith.cmpi slt, %35, %cst_9 : tensor<8x1xi64> loc(#loc29)
    %38 = arith.select %37, %cst_8, %cst_7 : tensor<8x1xi1>, tensor<8x1xf32> loc(#loc30)
    %39 = arith.select %36, %cst_6, %38 : tensor<8x1xi1>, tensor<8x1xf32> loc(#loc31)
    %40 = tt.broadcast %22 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc32)
    %41 = arith.mulf %19, %40 : tensor<8x16xf32> loc(#loc32)
    %42 = arith.cmpf ogt, %26, %cst_12 : tensor<8x16xf32> loc(#loc82)
    %43 = arith.cmpf une, %26, %26 : tensor<8x16xf32> loc(#loc83)
    %44 = arith.ori %42, %43 : tensor<8x16xi1> loc(#loc84)
    %45 = arith.select %44, %26, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc85)
    %46 = arith.cmpf olt, %45, %cst : tensor<8x16xf32> loc(#loc86)
    %47 = arith.cmpf une, %45, %45 : tensor<8x16xf32> loc(#loc87)
    %48 = arith.ori %46, %47 : tensor<8x16xi1> loc(#loc88)
    %49 = arith.select %48, %45, %cst : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc89)
    %50 = arith.mulf %49, %cst_4 : tensor<8x16xf32> loc(#loc43)
    %51 = tt.broadcast %39 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc44)
    %52 = arith.addf %51, %50 : tensor<8x16xf32> loc(#loc44)
    %53 = arith.divf %52, %cst_4 : tensor<8x16xf32> loc(#loc45)
    %54 = math.floor %53 : tensor<8x16xf32> loc(#loc45)
    %55 = arith.mulf %54, %cst_4 : tensor<8x16xf32> loc(#loc45)
    %56 = arith.subf %52, %55 : tensor<8x16xf32> loc(#loc45)
    %57 = arith.cmpf une, %56, %cst_12 : tensor<8x16xf32> loc(#loc46)
    %58 = tt.extern_elementwise %56 {libname = "", libpath = "", pure = true, symbol = "__nv_signbitf"} : (tensor<8x16xf32>) -> tensor<8x16xi32> loc(#loc47)
    %59 = arith.cmpi ne, %58, %cst_3 : tensor<8x16xi32> loc(#loc48)
    %60 = tt.extern_elementwise %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_signbitf"} : (f32) -> i32 loc(#loc49)
    %61 = arith.cmpi ne, %60, %c0_i32 : i32 loc(#loc50)
    %62 = tt.splat %61 : i1 -> tensor<8x16xi1> loc(#loc51)
    %63 = arith.cmpi ne, %59, %62 : tensor<8x16xi1> loc(#loc51)
    %64 = arith.andi %57, %63 : tensor<8x16xi1> loc(#loc52)
    %65 = arith.addf %56, %cst_4 : tensor<8x16xf32> loc(#loc53)
    %66 = arith.select %64, %65, %56 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc54)
    %67 = arith.subf %cst_2, %66 : tensor<8x16xf32> loc(#loc55)
    %68 = arith.cmpf olt, %66, %67 : tensor<8x16xf32> loc(#loc90)
    %69 = arith.cmpf une, %66, %66 : tensor<8x16xf32> loc(#loc91)
    %70 = arith.ori %68, %69 : tensor<8x16xi1> loc(#loc92)
    %71 = arith.select %70, %66, %67 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc93)
    %72 = arith.cmpf ogt, %71, %cst_12 : tensor<8x16xf32> loc(#loc94)
    %73 = arith.cmpf une, %71, %71 : tensor<8x16xf32> loc(#loc95)
    %74 = arith.ori %72, %73 : tensor<8x16xi1> loc(#loc96)
    %75 = arith.select %74, %71, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc97)
    %76 = arith.cmpf ogt, %41, %cst_12 : tensor<8x16xf32> loc(#loc98)
    %77 = arith.cmpf une, %41, %41 : tensor<8x16xf32> loc(#loc99)
    %78 = arith.ori %76, %77 : tensor<8x16xi1> loc(#loc100)
    %79 = arith.select %78, %41, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc101)
    %80 = arith.cmpf olt, %79, %cst : tensor<8x16xf32> loc(#loc102)
    %81 = arith.cmpf une, %79, %79 : tensor<8x16xf32> loc(#loc103)
    %82 = arith.ori %80, %81 : tensor<8x16xi1> loc(#loc104)
    %83 = arith.select %82, %79, %cst : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc105)
    %84 = arith.cmpf ogt, %31, %cst_12 : tensor<8x16xf32> loc(#loc106)
    %85 = arith.cmpf une, %31, %31 : tensor<8x16xf32> loc(#loc107)
    %86 = arith.ori %84, %85 : tensor<8x16xi1> loc(#loc108)
    %87 = arith.select %86, %31, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc109)
    %88 = arith.cmpf olt, %87, %cst : tensor<8x16xf32> loc(#loc110)
    %89 = arith.cmpf une, %87, %87 : tensor<8x16xf32> loc(#loc111)
    %90 = arith.ori %88, %89 : tensor<8x16xi1> loc(#loc112)
    %91 = arith.select %90, %87, %cst : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc113)
    %92 = arith.mulf %83, %91 : tensor<8x16xf32> loc(#loc62)
    %93 = arith.cmpf olt, %75, %cst : tensor<8x16xf32> loc(#loc114)
    %94 = arith.cmpf une, %75, %75 : tensor<8x16xf32> loc(#loc115)
    %95 = arith.ori %93, %94 : tensor<8x16xi1> loc(#loc116)
    %96 = arith.select %95, %75, %cst : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc117)
    %97 = arith.mulf %92, %96 : tensor<8x16xf32> loc(#loc64)
    %98 = arith.subf %83, %97 : tensor<8x16xf32> loc(#loc65)
    %99 = arith.select %18, %98, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc66)
    %100 = "tt.reduce"(%99) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc68)), %arg7: f32 loc(callsite(#loc1 at #loc68))):
      %121 = arith.addf %arg6, %arg7 : f32 loc(#loc129)
      tt.reduce.return %121 : f32 loc(#loc118)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc118)
    %101 = tt.expand_dims %100 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc70)
    %102 = arith.divf %101, %cst_1 : tensor<8x1xf32> loc(#loc71)
    %103 = tt.broadcast %102 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc72)
    %104 = arith.subf %98, %103 : tensor<8x16xf32> loc(#loc72)
    %105 = tt.broadcast %34 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc73)
    %106 = arith.mulf %104, %105 : tensor<8x16xf32> loc(#loc73)
    %107 = arith.addf %106, %103 : tensor<8x16xf32> loc(#loc74)
    %108 = arith.cmpf ogt, %107, %cst_12 : tensor<8x16xf32> loc(#loc121)
    %109 = arith.cmpf une, %107, %107 : tensor<8x16xf32> loc(#loc122)
    %110 = arith.ori %108, %109 : tensor<8x16xi1> loc(#loc123)
    %111 = arith.select %110, %107, %cst_12 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc124)
    %112 = arith.cmpf olt, %111, %cst : tensor<8x16xf32> loc(#loc125)
    %113 = arith.cmpf une, %111, %111 : tensor<8x16xf32> loc(#loc126)
    %114 = arith.ori %112, %113 : tensor<8x16xi1> loc(#loc127)
    %115 = arith.select %114, %111, %cst : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc128)
    %116 = arith.muli %5, %cst_0 : tensor<8x1xi32> loc(#loc77)
    %117 = tt.broadcast %116 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc78)
    %118 = arith.addi %23, %117 : tensor<8x16xi32> loc(#loc78)
    %119 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc79)
    %120 = tt.addptr %119, %118 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc79)
    tt.store %120, %115, %18 : tensor<8x16x!tt.ptr<f32>> loc(#loc80)
    tt.return loc(#loc81)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":23:28)
#loc3 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":23:33)
#loc4 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":24:36)
#loc5 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":24:44)
#loc6 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":24:23)
#loc7 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":25:21)
#loc8 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":26:26)
#loc9 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":26:34)
#loc10 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":29:19)
#loc11 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":31:19)
#loc12 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":33:36)
#loc13 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":33:44)
#loc14 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":33:41)
#loc15 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":33:31)
#loc16 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":33:49)
#loc17 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":34:31)
#loc18 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":34:36)
#loc19 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":35:36)
#loc20 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":35:31)
#loc21 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":35:44)
#loc22 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":36:36)
#loc23 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":36:41)
#loc24 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":36:31)
#loc25 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":36:49)
#loc26 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":37:31)
#loc27 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":37:36)
#loc28 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":40:18)
#loc29 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":42:18)
#loc30 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":45:32)
#loc31 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":47:32)
#loc32 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":51:20)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc34 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":54:42)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc39 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":55:42)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc43 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":57:20)
#loc44 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":58:19)
#loc45 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":59:20)
#loc46 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":60:21)
#loc47 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":61:31)
#loc48 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":61:41)
#loc49 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":62:31)
#loc50 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":62:41)
#loc51 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":63:21)
#loc52 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":64:20)
#loc53 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":65:20)
#loc54 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":66:35)
#loc55 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":68:20)
#loc56 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":69:42)
#loc57 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":70:42)
#loc58 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":73:42)
#loc59 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":74:42)
#loc60 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":78:42)
#loc61 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":79:42)
#loc62 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":80:20)
#loc63 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":81:42)
#loc64 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":82:20)
#loc65 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":83:20)
#loc66 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":85:35)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc70 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":86:29)
#loc71 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":88:20)
#loc72 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":89:20)
#loc73 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":90:20)
#loc74 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":91:20)
#loc75 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":92:42)
#loc76 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":93:42)
#loc77 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":94:36)
#loc78 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":94:33)
#loc79 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":94:28)
#loc80 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":94:48)
#loc81 = loc("inductor_cache/py/cpyhixfqzvowd5vkrt6flmxnltramy3zjpbvhfwlhemqtqzmkl2g.py":94:4)
#loc82 = loc(callsite(#loc33 at #loc34))
#loc83 = loc(callsite(#loc35 at #loc34))
#loc84 = loc(callsite(#loc36 at #loc34))
#loc85 = loc(callsite(#loc37 at #loc34))
#loc86 = loc(callsite(#loc38 at #loc39))
#loc87 = loc(callsite(#loc40 at #loc39))
#loc88 = loc(callsite(#loc41 at #loc39))
#loc89 = loc(callsite(#loc42 at #loc39))
#loc90 = loc(callsite(#loc38 at #loc56))
#loc91 = loc(callsite(#loc40 at #loc56))
#loc92 = loc(callsite(#loc41 at #loc56))
#loc93 = loc(callsite(#loc42 at #loc56))
#loc94 = loc(callsite(#loc33 at #loc57))
#loc95 = loc(callsite(#loc35 at #loc57))
#loc96 = loc(callsite(#loc36 at #loc57))
#loc97 = loc(callsite(#loc37 at #loc57))
#loc98 = loc(callsite(#loc33 at #loc58))
#loc99 = loc(callsite(#loc35 at #loc58))
#loc100 = loc(callsite(#loc36 at #loc58))
#loc101 = loc(callsite(#loc37 at #loc58))
#loc102 = loc(callsite(#loc38 at #loc59))
#loc103 = loc(callsite(#loc40 at #loc59))
#loc104 = loc(callsite(#loc41 at #loc59))
#loc105 = loc(callsite(#loc42 at #loc59))
#loc106 = loc(callsite(#loc33 at #loc60))
#loc107 = loc(callsite(#loc35 at #loc60))
#loc108 = loc(callsite(#loc36 at #loc60))
#loc109 = loc(callsite(#loc37 at #loc60))
#loc110 = loc(callsite(#loc38 at #loc61))
#loc111 = loc(callsite(#loc40 at #loc61))
#loc112 = loc(callsite(#loc41 at #loc61))
#loc113 = loc(callsite(#loc42 at #loc61))
#loc114 = loc(callsite(#loc38 at #loc63))
#loc115 = loc(callsite(#loc40 at #loc63))
#loc116 = loc(callsite(#loc41 at #loc63))
#loc117 = loc(callsite(#loc42 at #loc63))
#loc118 = loc(callsite(#loc67 at #loc68))
#loc120 = loc(callsite(#loc69 at #loc67))
#loc121 = loc(callsite(#loc33 at #loc75))
#loc122 = loc(callsite(#loc35 at #loc75))
#loc123 = loc(callsite(#loc36 at #loc75))
#loc124 = loc(callsite(#loc37 at #loc75))
#loc125 = loc(callsite(#loc38 at #loc76))
#loc126 = loc(callsite(#loc40 at #loc76))
#loc127 = loc(callsite(#loc41 at #loc76))
#loc128 = loc(callsite(#loc42 at #loc76))
#loc129 = loc(callsite(#loc120 at #loc68))
