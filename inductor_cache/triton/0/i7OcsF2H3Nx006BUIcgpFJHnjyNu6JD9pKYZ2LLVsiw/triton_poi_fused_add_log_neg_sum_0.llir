; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_log_neg_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = mul i32 %12, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl i32 %12, 6, !dbg !17
  %15 = add i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %11) #2, !dbg !20
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !20
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !20
  %21 = bitcast i32 %19 to float, !dbg !20
  %22 = bitcast i32 %20 to float, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !21
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %23, i1 %11) #2, !dbg !22
  %25 = add i32 %15, 16, !dbg !23
  %26 = sext i32 %25 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !24
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 %11) #2, !dbg !25
  %29 = add i32 %15, 32, !dbg !26
  %30 = sext i32 %29 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !27
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %11) #2, !dbg !28
  %33 = add i32 %15, 48, !dbg !29
  %34 = sext i32 %33 to i64, !dbg !30
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !30
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %11) #2, !dbg !31
  %37 = fadd float %21, 0x3E80000000000000, !dbg !32
  %38 = fadd float %22, 0x3E80000000000000, !dbg !32
  %39 = fcmp olt float %37, 0x3810000000000000, !dbg !33
  %40 = fmul float %37, 0x4160000000000000, !dbg !33
  %.02.i = select i1 %39, float %40, float %37, !dbg !33
  %i.i.0.i = select i1 %39, float -2.300000e+01, float 0.000000e+00, !dbg !33
  %41 = bitcast float %.02.i to i32, !dbg !33
  %42 = add i32 %41, -1059760811, !dbg !33
  %43 = and i32 %42, -8388608, !dbg !33
  %44 = sub i32 %41, %43, !dbg !33
  %45 = bitcast i32 %44 to float, !dbg !33
  %46 = sitofp i32 %43 to float, !dbg !33
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not.i = icmp eq i32 %47, 0, !dbg !33
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %46, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !33
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %46, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !33
  %.08.i = select i1 %.not.i, float %49, float %48, !dbg !33
  %50 = fadd float %45, -1.000000e+00, !dbg !33
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not1.i = icmp eq i32 %51, 0, !dbg !33
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %50, float 0x3FC2073EC0000000) #2, !dbg !33
  %53 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %50, float 0x3FC2073EC0000000) #2, !dbg !33
  %.010.i = select i1 %.not1.i, float %53, float %52, !dbg !33
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not2.i = icmp eq i32 %54, 0, !dbg !33
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %50, float 0xBFBF19B980000000) #2, !dbg !33
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %50, float 0xBFBF19B980000000) #2, !dbg !33
  %.011.i = select i1 %.not2.i, float %56, float %55, !dbg !33
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not3.i = icmp eq i32 %57, 0, !dbg !33
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %50, float 0x3FC1E52AA0000000) #2, !dbg !33
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %50, float 0x3FC1E52AA0000000) #2, !dbg !33
  %.012.i = select i1 %.not3.i, float %59, float %58, !dbg !33
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not4.i = icmp eq i32 %60, 0, !dbg !33
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %50, float 0xBFC55B1720000000) #2, !dbg !33
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %50, float 0xBFC55B1720000000) #2, !dbg !33
  %.09.i = select i1 %.not4.i, float %62, float %61, !dbg !33
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not5.i = icmp eq i32 %63, 0, !dbg !33
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %50, float 0x3FC99DA160000000) #2, !dbg !33
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %50, float 0x3FC99DA160000000) #2, !dbg !33
  %.05.i = select i1 %.not5.i, float %65, float %64, !dbg !33
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not6.i = icmp eq i32 %66, 0, !dbg !33
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %50, float 0xBFCFFFE440000000) #2, !dbg !33
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %50, float 0xBFCFFFE440000000) #2, !dbg !33
  %.01.i = select i1 %.not6.i, float %68, float %67, !dbg !33
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not7.i = icmp eq i32 %69, 0, !dbg !33
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %50, float 0x3FD5554F00000000) #2, !dbg !33
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %50, float 0x3FD5554F00000000) #2, !dbg !33
  %.0.i = select i1 %.not7.i, float %71, float %70, !dbg !33
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not8.i = icmp eq i32 %72, 0, !dbg !33
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %50, float -5.000000e-01) #2, !dbg !33
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %50, float -5.000000e-01) #2, !dbg !33
  %.07.i = select i1 %.not8.i, float %74, float %73, !dbg !33
  %75 = fmul float %50, %.07.i, !dbg !33
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not9.i = icmp eq i32 %76, 0, !dbg !33
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float %50, float %50) #2, !dbg !33
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %75, float %50, float %50) #2, !dbg !33
  %.06.i = select i1 %.not9.i, float %78, float %77, !dbg !33
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not10.i = icmp eq i32 %79, 0, !dbg !33
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !33
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !33
  %.04.i = select i1 %.not10.i, float %81, float %80, !dbg !33
  %82 = icmp ugt i32 %41, 2139095039, !dbg !33
  br i1 %82, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !33

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not11.i = icmp eq i32 %83, 0, !dbg !33
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !33
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !33
  %.03.i = select i1 %.not11.i, float %85, float %84, !dbg !33
  br label %__nv_logf.exit, !dbg !33

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !33
  %86 = fcmp olt float %38, 0x3810000000000000, !dbg !33
  %87 = fmul float %38, 0x4160000000000000, !dbg !33
  %.02.i1 = select i1 %86, float %87, float %38, !dbg !33
  %i.i.0.i2 = select i1 %86, float -2.300000e+01, float 0.000000e+00, !dbg !33
  %88 = bitcast float %.02.i1 to i32, !dbg !33
  %89 = add i32 %88, -1059760811, !dbg !33
  %90 = and i32 %89, -8388608, !dbg !33
  %91 = sub i32 %88, %90, !dbg !33
  %92 = bitcast i32 %91 to float, !dbg !33
  %93 = sitofp i32 %90 to float, !dbg !33
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not.i3 = icmp eq i32 %94, 0, !dbg !33
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !33
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !33
  %.08.i4 = select i1 %.not.i3, float %96, float %95, !dbg !33
  %97 = fadd float %92, -1.000000e+00, !dbg !33
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not1.i5 = icmp eq i32 %98, 0, !dbg !33
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %97, float 0x3FC2073EC0000000) #2, !dbg !33
  %100 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %97, float 0x3FC2073EC0000000) #2, !dbg !33
  %.010.i6 = select i1 %.not1.i5, float %100, float %99, !dbg !33
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not2.i7 = icmp eq i32 %101, 0, !dbg !33
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %97, float 0xBFBF19B980000000) #2, !dbg !33
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %97, float 0xBFBF19B980000000) #2, !dbg !33
  %.011.i8 = select i1 %.not2.i7, float %103, float %102, !dbg !33
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not3.i9 = icmp eq i32 %104, 0, !dbg !33
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %97, float 0x3FC1E52AA0000000) #2, !dbg !33
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %97, float 0x3FC1E52AA0000000) #2, !dbg !33
  %.012.i10 = select i1 %.not3.i9, float %106, float %105, !dbg !33
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not4.i11 = icmp eq i32 %107, 0, !dbg !33
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %97, float 0xBFC55B1720000000) #2, !dbg !33
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %97, float 0xBFC55B1720000000) #2, !dbg !33
  %.09.i12 = select i1 %.not4.i11, float %109, float %108, !dbg !33
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not5.i13 = icmp eq i32 %110, 0, !dbg !33
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %97, float 0x3FC99DA160000000) #2, !dbg !33
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %97, float 0x3FC99DA160000000) #2, !dbg !33
  %.05.i14 = select i1 %.not5.i13, float %112, float %111, !dbg !33
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not6.i15 = icmp eq i32 %113, 0, !dbg !33
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %97, float 0xBFCFFFE440000000) #2, !dbg !33
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %97, float 0xBFCFFFE440000000) #2, !dbg !33
  %.01.i16 = select i1 %.not6.i15, float %115, float %114, !dbg !33
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not7.i17 = icmp eq i32 %116, 0, !dbg !33
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %97, float 0x3FD5554F00000000) #2, !dbg !33
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %97, float 0x3FD5554F00000000) #2, !dbg !33
  %.0.i18 = select i1 %.not7.i17, float %118, float %117, !dbg !33
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not8.i19 = icmp eq i32 %119, 0, !dbg !33
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %97, float -5.000000e-01) #2, !dbg !33
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %97, float -5.000000e-01) #2, !dbg !33
  %.07.i20 = select i1 %.not8.i19, float %121, float %120, !dbg !33
  %122 = fmul float %97, %.07.i20, !dbg !33
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not9.i21 = icmp eq i32 %123, 0, !dbg !33
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %122, float %97, float %97) #2, !dbg !33
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %122, float %97, float %97) #2, !dbg !33
  %.06.i22 = select i1 %.not9.i21, float %125, float %124, !dbg !33
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not10.i23 = icmp eq i32 %126, 0, !dbg !33
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !33
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !33
  %.04.i24 = select i1 %.not10.i23, float %128, float %127, !dbg !33
  %129 = icmp ugt i32 %88, 2139095039, !dbg !33
  br i1 %129, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !33

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !33
  %.not11.i28 = icmp eq i32 %130, 0, !dbg !33
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !33
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !33
  %.03.i29 = select i1 %.not11.i28, float %132, float %131, !dbg !33
  br label %__nv_logf.exit30, !dbg !33

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !33
  %133 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !33
  %134 = extractvalue { i32, i32 } %36, 1, !dbg !31
  %135 = bitcast i32 %134 to float, !dbg !31
  %136 = extractvalue { i32, i32 } %36, 0, !dbg !31
  %137 = bitcast i32 %136 to float, !dbg !31
  %138 = extractvalue { i32, i32 } %32, 1, !dbg !28
  %139 = bitcast i32 %138 to float, !dbg !28
  %140 = extractvalue { i32, i32 } %32, 0, !dbg !28
  %141 = bitcast i32 %140 to float, !dbg !28
  %142 = extractvalue { i32, i32 } %28, 1, !dbg !25
  %143 = bitcast i32 %142 to float, !dbg !25
  %144 = extractvalue { i32, i32 } %28, 0, !dbg !25
  %145 = bitcast i32 %144 to float, !dbg !25
  %146 = extractvalue { i32, i32 } %24, 1, !dbg !22
  %147 = bitcast i32 %146 to float, !dbg !22
  %148 = extractvalue { i32, i32 } %24, 0, !dbg !22
  %149 = bitcast i32 %148 to float, !dbg !22
  %150 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !33
  %151 = fsub float 0.000000e+00, %r.i.0.i, !dbg !34
  %152 = select i1 %133, float 0x7FF0000000000000, float %151, !dbg !33
  %153 = fsub float 0.000000e+00, %r.i.0.i25, !dbg !34
  %154 = select i1 %150, float 0x7FF0000000000000, float %153, !dbg !33
  %155 = fadd float %149, %145, !dbg !35
  %156 = fadd float %147, %143, !dbg !35
  %157 = fadd float %155, %141, !dbg !36
  %158 = fadd float %156, %139, !dbg !36
  %159 = fadd float %157, %137, !dbg !37
  %160 = fadd float %158, %135, !dbg !37
  %161 = fadd float %159, %152, !dbg !38
  %162 = fadd float %160, %154, !dbg !38
  %163 = sext i32 %10 to i64, !dbg !39
  %164 = getelementptr float, ptr addrspace(1) %2, i64 %163, !dbg !39
  %165 = bitcast float %161 to i32, !dbg !40
  %166 = bitcast float %162 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %165, i32 %166, ptr addrspace(1) %164, i1 %11) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmlwxbvpz3k66cmkm6y6k3bfxq5kizq2qt6jr3u2kpww4uskbrdz.py", directory: "inductor_cache/ml")
!4 = !{ptr @triton_poi_fused_add_log_neg_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_log_neg_sum_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_log_neg_sum_0", linkageName: "triton_poi_fused_add_log_neg_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 43, scope: !7)
!23 = !DILocation(line: 29, column: 40, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 48, scope: !7)
!26 = !DILocation(line: 30, column: 40, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 48, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 49, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 34, column: 23, scope: !7)
!34 = !DILocation(line: 35, column: 12, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 37, column: 18, scope: !7)
!37 = !DILocation(line: 38, column: 19, scope: !7)
!38 = !DILocation(line: 39, column: 19, scope: !7)
!39 = !DILocation(line: 40, column: 25, scope: !7)
!40 = !DILocation(line: 40, column: 37, scope: !7)
!41 = !DILocation(line: 40, column: 4, scope: !7)
