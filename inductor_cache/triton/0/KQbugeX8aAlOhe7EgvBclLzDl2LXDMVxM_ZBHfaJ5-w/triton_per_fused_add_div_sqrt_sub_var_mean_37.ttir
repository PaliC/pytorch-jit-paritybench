#loc = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0)
#loc1 = loc(unknown)
#loc9 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":35:57)
#loc16 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":42:59)
#loc29 = loc(callsite(#loc1 at #loc9))
#loc33 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_per_fused_add_div_sqrt_sub_var_mean_37(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e-10 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.024000e+03 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc3)
    %2 = arith.muli %0, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<1024xi32> loc(#loc5)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1024x!tt.ptr<f32>> loc(#loc7)
    %8 = "tt.reduce"(%7) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc9)), %arg6: f32 loc(callsite(#loc1 at #loc9))):
      %26 = arith.addf %arg5, %arg6 : f32 loc(#loc35)
      tt.reduce.return %26 : f32 loc(#loc28)
    }) : (tensor<1024xf32>) -> f32 loc(#loc28)
    %9 = arith.addf %8, %cst_1 : f32 loc(#loc31)
    %10 = arith.divf %9, %cst_0 : f32 loc(#loc13)
    %11 = tt.splat %10 : f32 -> tensor<1024xf32> loc(#loc14)
    %12 = arith.subf %7, %11 : tensor<1024xf32> loc(#loc14)
    %13 = arith.mulf %12, %12 : tensor<1024xf32> loc(#loc15)
    %14 = "tt.reduce"(%13) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc16)), %arg6: f32 loc(callsite(#loc1 at #loc16))):
      %26 = arith.addf %arg5, %arg6 : f32 loc(#loc36)
      tt.reduce.return %26 : f32 loc(#loc32)
    }) : (tensor<1024xf32>) -> f32 loc(#loc32)
    %15 = arith.addf %14, %cst_1 : f32 loc(#loc34)
    %16 = arith.divf %15, %cst_0 : f32 loc(#loc18)
    %17 = arith.addf %16, %cst : f32 loc(#loc19)
    %18 = tt.extern_elementwise %17 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc20)
    %19 = tt.splat %18 : f32 -> tensor<1xf32> loc(#loc20)
    %20 = tt.splat %18 : f32 -> tensor<1024xf32> loc(#loc21)
    %21 = arith.divf %12, %20 : tensor<1024xf32> loc(#loc21)
    gpu.barrier loc(#loc22)
    %22 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc23)
    tt.store %23, %19 : tensor<1x!tt.ptr<f32>> loc(#loc24)
    %24 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc25)
    %25 = tt.addptr %24, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc25)
    tt.store %25, %21 : tensor<1024x!tt.ptr<f32>> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":24:28)
#loc3 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":27:26)
#loc4 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":32:40)
#loc5 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":32:35)
#loc6 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":32:30)
#loc7 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":32:45)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc12 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":35:44)
#loc13 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":38:18)
#loc14 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":39:18)
#loc15 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":40:19)
#loc17 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":42:45)
#loc18 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":44:20)
#loc19 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":46:20)
#loc20 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":47:27)
#loc21 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":49:20)
#loc22 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":50:4)
#loc23 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":51:28)
#loc24 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":51:40)
#loc25 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":52:25)
#loc26 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":52:47)
#loc27 = loc("inductor_cache/dw/cdwvjngmxr5lzuzkotaa5ty7il6obaco2ysqb7loftssoc2aiaza.py":52:4)
#loc28 = loc(callsite(#loc8 at #loc9))
#loc30 = loc(callsite(#loc10 at #loc8))
#loc31 = loc(callsite(#loc11 at #loc12))
#loc32 = loc(callsite(#loc8 at #loc16))
#loc34 = loc(callsite(#loc11 at #loc17))
#loc35 = loc(callsite(#loc30 at #loc9))
#loc36 = loc(callsite(#loc30 at #loc16))
