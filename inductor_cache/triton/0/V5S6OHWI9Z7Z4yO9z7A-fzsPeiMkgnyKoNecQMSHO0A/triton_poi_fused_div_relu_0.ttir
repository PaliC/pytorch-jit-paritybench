#loc = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":19:0)
module {
  tt.func public @triton_poi_fused_div_relu_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999996E-13> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_4 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<256xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %7, %cst_3 : tensor<256xi32> loc(#loc11)
    %12 = arith.addi %6, %11 : tensor<256xi32> loc(#loc12)
    %13 = tt.addptr %8, %12 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.addi %6, %cst_4 : tensor<256xi32> loc(#loc15)
    %16 = arith.addi %15, %11 : tensor<256xi32> loc(#loc16)
    %17 = tt.addptr %8, %16 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.addi %6, %cst_2 : tensor<256xi32> loc(#loc19)
    %20 = arith.addi %19, %11 : tensor<256xi32> loc(#loc20)
    %21 = tt.addptr %8, %20 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %23 = arith.addi %6, %cst_1 : tensor<256xi32> loc(#loc23)
    %24 = arith.addi %23, %11 : tensor<256xi32> loc(#loc24)
    %25 = tt.addptr %8, %24 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %27 = arith.cmpf ogt, %cst_0, %10 : tensor<256xf32> loc(#loc49)
    %28 = arith.select %27, %cst_0, %10 : tensor<256xi1>, tensor<256xf32> loc(#loc50)
    %29 = arith.cmpf ogt, %cst_0, %14 : tensor<256xf32> loc(#loc51)
    %30 = arith.select %29, %cst_0, %14 : tensor<256xi1>, tensor<256xf32> loc(#loc52)
    %31 = arith.mulf %30, %30 : tensor<256xf32> loc(#loc31)
    %32 = arith.cmpf ogt, %cst_0, %18 : tensor<256xf32> loc(#loc53)
    %33 = arith.select %32, %cst_0, %18 : tensor<256xi1>, tensor<256xf32> loc(#loc54)
    %34 = arith.mulf %33, %33 : tensor<256xf32> loc(#loc33)
    %35 = arith.addf %31, %34 : tensor<256xf32> loc(#loc34)
    %36 = arith.cmpf ogt, %cst_0, %22 : tensor<256xf32> loc(#loc55)
    %37 = arith.select %36, %cst_0, %22 : tensor<256xi1>, tensor<256xf32> loc(#loc56)
    %38 = arith.mulf %37, %37 : tensor<256xf32> loc(#loc36)
    %39 = arith.addf %35, %38 : tensor<256xf32> loc(#loc37)
    %40 = arith.cmpf ogt, %cst_0, %26 : tensor<256xf32> loc(#loc57)
    %41 = arith.select %40, %cst_0, %26 : tensor<256xi1>, tensor<256xf32> loc(#loc58)
    %42 = arith.mulf %41, %41 : tensor<256xf32> loc(#loc39)
    %43 = arith.addf %39, %42 : tensor<256xf32> loc(#loc40)
    %44 = tt.extern_elementwise %43 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc41)
    %45 = arith.cmpf ogt, %44, %cst : tensor<256xf32> loc(#loc59)
    %46 = arith.cmpf une, %44, %44 : tensor<256xf32> loc(#loc60)
    %47 = arith.ori %45, %46 : tensor<256xi1> loc(#loc61)
    %48 = arith.select %47, %44, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc62)
    %49 = arith.divf %28, %48 : tensor<256xf32> loc(#loc45)
    %50 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc46)
    %51 = tt.addptr %50, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc46)
    tt.store %51, %49, %5 : tensor<256x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":21:28)
#loc3 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":21:33)
#loc4 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":22:36)
#loc5 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":22:23)
#loc6 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":23:21)
#loc7 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":25:19)
#loc8 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":26:19)
#loc9 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":27:30)
#loc10 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":27:35)
#loc11 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":28:38)
#loc12 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":28:35)
#loc13 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":28:30)
#loc14 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":28:43)
#loc15 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":29:35)
#loc16 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":29:40)
#loc17 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":29:30)
#loc18 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":29:48)
#loc19 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":30:36)
#loc20 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":30:41)
#loc21 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":30:31)
#loc22 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":30:49)
#loc23 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":31:36)
#loc24 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":31:41)
#loc25 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":31:31)
#loc26 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":31:49)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":33:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":34:40)
#loc31 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":35:18)
#loc32 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":36:40)
#loc33 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":37:18)
#loc34 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":38:18)
#loc35 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":39:41)
#loc36 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":40:20)
#loc37 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":41:19)
#loc38 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":42:41)
#loc39 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":43:20)
#loc40 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":44:20)
#loc41 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":45:27)
#loc42 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":47:42)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc45 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":48:19)
#loc46 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":49:25)
#loc47 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":49:37)
#loc48 = loc("inductor_cache/kh/ckhag352fxughw5qgy2gmdbkawstujzeg4lrzouiw667catjnfhw.py":49:4)
#loc49 = loc(callsite(#loc27 at #loc28))
#loc50 = loc(callsite(#loc29 at #loc28))
#loc51 = loc(callsite(#loc27 at #loc30))
#loc52 = loc(callsite(#loc29 at #loc30))
#loc53 = loc(callsite(#loc27 at #loc32))
#loc54 = loc(callsite(#loc29 at #loc32))
#loc55 = loc(callsite(#loc27 at #loc35))
#loc56 = loc(callsite(#loc29 at #loc35))
#loc57 = loc(callsite(#loc27 at #loc38))
#loc58 = loc(callsite(#loc29 at #loc38))
#loc59 = loc(callsite(#loc27 at #loc42))
#loc60 = loc(callsite(#loc43 at #loc42))
#loc61 = loc(callsite(#loc44 at #loc42))
#loc62 = loc(callsite(#loc29 at #loc42))
