//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_ne_sum_0 // -- Begin function triton_per_fused_ne_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_ne_sum_0
.visible .entry triton_per_fused_ne_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_ne_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_ne_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_ne_sum_0_param_2,
	.param .u32 triton_per_fused_ne_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<14>;
	.reg .b32 	%r<51>;
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<41>;
	.loc	1 19 0                          // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_per_fused_ne_sum_0_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_ne_sum_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:27:26
	mov.u32 	%r9, %tid.x;
	and.b32  	%r10, %r9, 31;
	ld.param.u64 	%rd7, [triton_per_fused_ne_sum_0_param_2];
	shl.b32 	%r11, %r9, 2;
	and.b32  	%r12, %r11, 252;
	.loc	1 31 30                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:31:30
	cvt.u64.u32 	%rd10, %r12;
	mul.wide.u32 	%rd11, %r12, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r2;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r3;
	.loc	1 33 19                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:33:19
	setp.neu.f32 	%p7, %f4, 0f437F0000;
	selp.u16 	%rs1, 1, 0, %p7;
	shl.b16 	%rs2, %rs1, 2;
	setp.neu.f32 	%p8, %f3, 0f437F0000;
	selp.u16 	%rs3, -1, 0, %p8;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	setp.neu.f32 	%p9, %f2, 0f437F0000;
	selp.u16 	%rs6, -1, 0, %p9;
	shl.b16 	%rs7, %rs6, 1;
	setp.neu.f32 	%p10, %f1, 0f437F0000;
	selp.u16 	%rs8, 1, 0, %p10;
	or.b16  	%rs9, %rs8, %rs7;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	and.b16  	%rs12, %rs11, 15;
	cvt.u32.u16 	%r13, %rs12;
	popc.b32 	%r14, %r13;
	cvt.u16.u32 	%rs13, %r14;
	cvt.u64.u16 	%rd12, %rs13;
	.loc	2 267 36                        // standard.py:267:36
	shfl.sync.bfly.b32	%r15, %r14, 16, 31, -1;
	mov.b32 	%r16, 0;
	shfl.sync.bfly.b32	%r17, %r16, 16, 31, -1;
	cvt.u64.u32 	%rd13, %r15;
	cvt.u64.u32 	%rd14, %r17;
	shl.b64 	%rd15, %rd14, 32;
	or.b64  	%rd16, %rd13, %rd15;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd17, %rd12, %rd16;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r18}, %rd17; }
	cvt.u32.u64 	%r19, %rd17;
	shfl.sync.bfly.b32	%r20, %r19, 8, 31, -1;
	shfl.sync.bfly.b32	%r21, %r18, 8, 31, -1;
	cvt.u64.u32 	%rd18, %r20;
	cvt.u64.u32 	%rd19, %r21;
	shl.b64 	%rd20, %rd19, 32;
	or.b64  	%rd21, %rd18, %rd20;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd22, %rd17, %rd21;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r22}, %rd22; }
	cvt.u32.u64 	%r23, %rd22;
	shfl.sync.bfly.b32	%r24, %r23, 4, 31, -1;
	shfl.sync.bfly.b32	%r25, %r22, 4, 31, -1;
	cvt.u64.u32 	%rd23, %r24;
	cvt.u64.u32 	%rd24, %r25;
	shl.b64 	%rd25, %rd24, 32;
	or.b64  	%rd26, %rd23, %rd25;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd27, %rd22, %rd26;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r26}, %rd27; }
	cvt.u32.u64 	%r27, %rd27;
	shfl.sync.bfly.b32	%r28, %r27, 2, 31, -1;
	shfl.sync.bfly.b32	%r29, %r26, 2, 31, -1;
	cvt.u64.u32 	%rd28, %r28;
	cvt.u64.u32 	%rd29, %r29;
	shl.b64 	%rd30, %rd29, 32;
	or.b64  	%rd31, %rd28, %rd30;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd32, %rd27, %rd31;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r30}, %rd32; }
	cvt.u32.u64 	%r31, %rd32;
	shfl.sync.bfly.b32	%r32, %r31, 1, 31, -1;
	shfl.sync.bfly.b32	%r33, %r30, 1, 31, -1;
	cvt.u64.u32 	%rd33, %r32;
	cvt.u64.u32 	%rd34, %r33;
	shl.b64 	%rd35, %rd34, 32;
	or.b64  	%rd36, %rd33, %rd35;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd2, %rd32, %rd36;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p2, %r10, 0;
	shr.u32 	%r34, %r9, 2;
	and.b32  	%r35, %r34, 8;
	mov.u32 	%r36, global_smem;
	add.s32 	%r5, %r36, %r35;
	// begin inline asm
	@%p2 st.shared.b64 [ %r5 + 0 ], %rd2;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p3, %r9, 2;
	shl.b32 	%r37, %r9, 3;
	add.s32 	%r6, %r36, %r37;
	// begin inline asm
	@%p3 ld.shared.b64 %rd3, [ %r6 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r38}, %rd3; }
	cvt.u32.u64 	%r39, %rd3;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	shfl.sync.bfly.b32	%r41, %r38, 1, 31, -1;
	cvt.u64.u32 	%rd37, %r40;
	cvt.u64.u32 	%rd38, %r41;
	shl.b64 	%rd39, %rd38, 32;
	or.b64  	%rd40, %rd37, %rd39;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd4, %rd3, %rd40;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r42, %r9, 1;
	setp.eq.b32 	%p11, %r42, 1;
	not.pred 	%p12, %p11;
	and.pred  	%p4, %p3, %p12;
	// begin inline asm
	@%p4 st.shared.b64 [ %r6 + 0 ], %rd4;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd6, [global_smem];
$L__tmp2:
	.loc	1 37 25                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:37:25
	add.s64 	%rd5, %rd9, %rd10;
	.loc	1 37 63                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:37:63
	selp.u32 	%r43, 1, 0, %p8;
	selp.u32 	%r44, 1, 0, %p7;
	prmt.b32 	%r45, %r44, %r43, 0x3340U;
	selp.u32 	%r46, 1, 0, %p9;
	selp.u32 	%r47, 1, 0, %p10;
	prmt.b32 	%r48, %r47, %r46, 0x3340U;
	prmt.b32 	%r49, %r48, %r45, 0x5410U;
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r49 };
	// end inline asm
	.loc	1 38 59                         // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:38:59
	and.b32  	%r50, %r9, 63;
	setp.eq.s32 	%p6, %r50, 0;
	// begin inline asm
	@%p6 st.global.b64 [ %rd7 + 0 ], { %rd6 };
	// end inline asm
	.loc	1 38 4                          // cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jh/cjhguoojulfm6q2jpyei5iabio5uxu5xyzscbq62ar7fcyy3a374.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 170                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 104
.b8 103
.b8 117
.b8 111
.b8 111
.b8 106
.b8 117
.b8 108
.b8 102
.b8 109
.b8 54
.b8 113
.b8 50
.b8 106
.b8 112
.b8 121
.b8 101
.b8 105
.b8 53
.b8 105
.b8 97
.b8 98
.b8 105
.b8 111
.b8 53
.b8 117
.b8 120
.b8 117
.b8 53
.b8 120
.b8 121
.b8 122
.b8 115
.b8 99
.b8 98
.b8 113
.b8 54
.b8 50
.b8 97
.b8 114
.b8 55
.b8 102
.b8 99
.b8 121
.b8 121
.b8 51
.b8 97
.b8 51
.b8 55
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 101
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7f:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x94:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
