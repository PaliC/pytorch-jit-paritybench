; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_constant_pad_nd_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 14400, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 30, !dbg !15
  %13 = mul i32 %12, 30, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = sdiv i32 %9, 900, !dbg !17
  %15 = add nsw i32 %.decomposed, -11, !dbg !18
  %16 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !19
  %17 = insertelement <2 x i32> %16, i32 %10, i64 1, !dbg !19
  %18 = srem <2 x i32> %17, splat (i32 30), !dbg !19
  %19 = add nsw <2 x i32> %18, splat (i32 -11), !dbg !20
  %20 = extractelement <2 x i32> %19, i64 0, !dbg !21
  %21 = or i32 %20, %15, !dbg !21
  %22 = icmp ult i32 %21, 8, !dbg !21
  %23 = extractelement <2 x i32> %19, i64 1, !dbg !21
  %24 = or i32 %20, %23, !dbg !21
  %25 = icmp ult i32 %24, 8, !dbg !21
  %26 = sitofp i32 %20 to float, !dbg !22
  %27 = fmul float %26, 5.000000e-01, !dbg !23
  %28 = fptosi float %27 to i32, !dbg !24
  %29 = lshr i32 %28, 29, !dbg !25
  %30 = and i32 %29, 4, !dbg !25
  %31 = add i32 %30, %28, !dbg !25
  %32 = sitofp i32 %15 to float, !dbg !26
  %33 = sitofp i32 %23 to float, !dbg !26
  %34 = fmul float %32, 5.000000e-01, !dbg !27
  %35 = fmul float %33, 5.000000e-01, !dbg !27
  %36 = fptosi float %34 to i32, !dbg !28
  %37 = fptosi float %35 to i32, !dbg !28
  %38 = lshr i32 %36, 29, !dbg !29
  %39 = and i32 %38, 4, !dbg !29
  %40 = lshr i32 %37, 29, !dbg !29
  %41 = and i32 %40, 4, !dbg !29
  %42 = shl i32 %31, 2, !dbg !30
  %43 = shl nsw i32 %14, 4, !dbg !31
  %44 = add i32 %42, %43, !dbg !29
  %45 = add i32 %44, %36, !dbg !32
  %46 = add i32 %45, %39, !dbg !33
  %47 = add i32 %44, %37, !dbg !32
  %48 = add i32 %47, %41, !dbg !33
  %49 = sext i32 %46 to i64, !dbg !34
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !34
  %51 = sext i32 %48 to i64, !dbg !34
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !34
  %53 = and i1 %11, %22, !dbg !35
  %54 = and i1 %11, %25, !dbg !35
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %53, i32 0, i1 %53) #1, !dbg !36
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %54, i32 0, i1 %54) #1, !dbg !36
  %57 = sext i32 %9 to i64, !dbg !37
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %55, i32 %56, ptr addrspace(1) %58, i1 %11) #1, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnry26sqz2cg2oiskn35nljba722pufarbvuedbq5mfqjk4mribt.py", directory: "inductor_cache/nr")
!4 = !{ptr @triton_poi_fused__unsafe_index_constant_pad_nd_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_constant_pad_nd_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_constant_pad_nd_0", linkageName: "triton_poi_fused__unsafe_index_constant_pad_nd_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 33, column: 19, scope: !7)
!19 = !DILocation(line: 24, column: 27, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 40, column: 21, scope: !7)
!23 = !DILocation(line: 42, column: 20, scope: !7)
!24 = !DILocation(line: 43, column: 21, scope: !7)
!25 = !DILocation(line: 47, column: 35, scope: !7)
!26 = !DILocation(line: 49, column: 21, scope: !7)
!27 = !DILocation(line: 50, column: 20, scope: !7)
!28 = !DILocation(line: 51, column: 21, scope: !7)
!29 = !DILocation(line: 54, column: 35, scope: !7)
!30 = !DILocation(line: 55, column: 41, scope: !7)
!31 = !DILocation(line: 55, column: 52, scope: !7)
!32 = !DILocation(line: 55, column: 39, scope: !7)
!33 = !DILocation(line: 55, column: 49, scope: !7)
!34 = !DILocation(line: 55, column: 31, scope: !7)
!35 = !DILocation(line: 55, column: 65, scope: !7)
!36 = !DILocation(line: 55, column: 57, scope: !7)
!37 = !DILocation(line: 56, column: 25, scope: !7)
!38 = !DILocation(line: 56, column: 37, scope: !7)
!39 = !DILocation(line: 56, column: 4, scope: !7)
