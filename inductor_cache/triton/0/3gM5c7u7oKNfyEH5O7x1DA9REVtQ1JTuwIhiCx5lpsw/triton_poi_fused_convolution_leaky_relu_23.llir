; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_leaky_relu_23(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 4608, !dbg !14
  %13 = sdiv i32 %10, 9, !dbg !15
  %14 = sdiv i32 %11, 9, !dbg !15
  %15 = srem i32 %13, 128, !dbg !16
  %16 = srem i32 %14, 128, !dbg !16
  %17 = sext i32 %10 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !17
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %12) #1, !dbg !18
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !18
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !18
  %22 = sext i32 %15 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !19
  %24 = sext i32 %16 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %12) #1, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %12) #1, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !21
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !22
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !22
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !22
  %32 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !20
  %33 = insertelement <2 x i32> %32, i32 %26, i64 1, !dbg !20
  %34 = bitcast <2 x i32> %33 to <2 x float>, !dbg !20
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !20
  %36 = insertelement <4 x i32> poison, i32 %31, i64 0, !dbg !22
  %37 = insertelement <4 x i32> %36, i32 %30, i64 1, !dbg !22
  %38 = insertelement <4 x i32> %37, i32 %21, i64 2, !dbg !22
  %39 = insertelement <4 x i32> %38, i32 %20, i64 3, !dbg !22
  %40 = bitcast <4 x i32> %39 to <4 x float>, !dbg !22
  %41 = fadd <4 x float> %35, %40, !dbg !23
  %42 = extractelement <4 x float> %41, i64 3, !dbg !24
  %43 = fmul float %42, 0x3FB99999A0000000, !dbg !25
  %44 = extractelement <4 x float> %41, i64 2, !dbg !24
  %45 = fmul float %44, 0x3FB99999A0000000, !dbg !25
  %46 = fcmp ogt <4 x float> %41, zeroinitializer, !dbg !26
  %47 = extractelement <4 x i1> %46, i64 3, !dbg !24
  %48 = select i1 %47, float %42, float %43, !dbg !24
  %49 = extractelement <4 x i1> %46, i64 2, !dbg !24
  %50 = select i1 %49, float %44, float %45, !dbg !24
  %51 = extractelement <4 x float> %41, i64 1, !dbg !27
  %52 = fmul float %51, 0x3FB99999A0000000, !dbg !28
  %53 = extractelement <4 x float> %41, i64 0, !dbg !27
  %54 = fmul float %53, 0x3FB99999A0000000, !dbg !28
  %55 = extractelement <4 x i1> %46, i64 1, !dbg !27
  %56 = select i1 %55, float %51, float %52, !dbg !27
  %57 = extractelement <4 x i1> %46, i64 0, !dbg !27
  %58 = select i1 %57, float %53, float %54, !dbg !27
  %59 = bitcast float %48 to i32, !dbg !29
  %60 = bitcast float %50 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %59, i32 %60, ptr addrspace(1) %18, i1 %12) #1, !dbg !29
  %61 = bitcast float %56 to i32, !dbg !30
  %62 = bitcast float %58 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %61, i32 %62, ptr addrspace(1) %28, i1 %12) #1, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crkcqtg4yxqa5yhg3pq4xawlk6ymcv3vaw3gumu24xbt6uqcqtvt.py", directory: "inductor_cache/rk")
!4 = !{ptr @triton_poi_fused_convolution_leaky_relu_23, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_leaky_relu_23, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_leaky_relu_23", linkageName: "triton_poi_fused_convolution_leaky_relu_23", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 32, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 19, scope: !7)
!27 = !DILocation(line: 38, column: 34, scope: !7)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 39, column: 39, scope: !7)
!30 = !DILocation(line: 40, column: 40, scope: !7)
!31 = !DILocation(line: 40, column: 4, scope: !7)
