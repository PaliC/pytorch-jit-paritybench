//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_elu_0 // -- Begin function triton_poi_fused_convolution_elu_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_convolution_elu_0
.visible .entry triton_poi_fused_convolution_elu_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_elu_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_elu_0_param_1,
	.param .u32 triton_poi_fused_convolution_elu_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:19:0

// %bb.0:                               // %__nv_expm1f.exit
	ld.param.u64 	%rd4, [triton_poi_fused_convolution_elu_0_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_convolution_elu_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:21:33
	shl.b32 	%r5, %r1, 7;
	.loc	1 22 36                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:22:36
	mov.u32 	%r6, %tid.x;
	and.b32  	%r7, %r6, 127;
	.loc	1 22 23                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:22:23
	or.b32  	%r8, %r5, %r7;
	.loc	1 23 21                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:23:21
	setp.lt.s32 	%p1, %r8, 256;
	.loc	1 25 21                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:25:21
	bfe.s32 	%r9, %r1, 24, 1;
	shr.u32 	%r10, %r9, 28;
	add.s32 	%r11, %r8, %r10;
	shr.s32 	%r12, %r11, 4;
	.loc	1 25 27                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:25:27
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r12, %r13;
	and.b32  	%r15, %r14, -4;
	sub.s32 	%r16, %r12, %r15;
	.loc	1 26 34                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:26:34
	mul.wide.s32 	%rd6, %r8, 4;
	add.s64 	%rd1, %rd4, %rd6;
	.loc	1 26 39                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 27 30                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:27:30
	mul.wide.s32 	%rd7, %r16, 4;
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 27 35                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:27:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 28 18                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:28:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 33 27                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:33:27
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rni.f32.f32 	%f5, %f4;
	abs.ftz.f32 	%f6, %f3;
	setp.lt.f32 	%p4, %f6, 0f3ED1EB85;
	selp.f32 	%f7, 0f00000000, %f5, %p4;
	setp.eq.f32 	%p5, %f7, 0f43000000;
	selp.f32 	%f8, 0f42FE0000, %f7, %p5;
	ex2.approx.ftz.f32 	%f9, %f8;
	.loc	1 30 18                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:30:18
	setp.gt.f32 	%p6, %f3, 0f00000000;
	.loc	1 33 27                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:33:27
	neg.f32 	%f10, %f7;
	mov.f32 	%f11, 0f3F317200;
	fma.rn.ftz.f32 	%f12, %f10, %f11, %f3;
	mov.f32 	%f13, 0f35BFBE8E;
	fma.rn.ftz.f32 	%f14, %f10, %f13, %f12;
	mov.f32 	%f15, 0f3C095663;
	mov.f32 	%f16, 0f3AB5EBE6;
	fma.rn.ftz.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0f3D2AABE3;
	fma.rn.ftz.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0f3E2AA9F6;
	fma.rn.ftz.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f3EFFFFFE;
	fma.rn.ftz.f32 	%f23, %f21, %f14, %f22;
	mul.f32 	%f24, %f14, %f23;
	fma.rn.ftz.f32 	%f25, %f24, %f14, %f14;
	add.f32 	%f26, %f9, 0fBF800000;
	fma.rn.ftz.f32 	%f27, %f25, %f9, %f26;
	add.f32 	%f28, %f27, %f27;
	selp.f32 	%f29, %f28, %f27, %p5;
	setp.gt.f32 	%p7, %f8, 0f43000000;
	selp.f32 	%f30, 0f7F800000, %f29, %p7;
	setp.lt.f32 	%p8, %f8, 0fC1C80000;
	selp.f32 	%f31, 0fBF800000, %f30, %p8;
	setp.eq.f32 	%p9, %f3, 0f00000000;
	add.f32 	%f32, %f3, %f3;
	selp.f32 	%f33, %f32, %f31, %p9;
	.loc	1 35 32                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:35:32
	selp.f32 	%f34, %f3, %f33, %p6;
	.loc	1 36 39                         // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:36:39
	mov.b32 	%r4, %f34;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r4 };
	// end inline asm
	.loc	1 36 4                          // celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/el/celhxqut5dxvx76i5qnq66q2xiac2dydykwg2wynny3z2rniuvxh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 108
.b8 104
.b8 120
.b8 113
.b8 117
.b8 116
.b8 53
.b8 100
.b8 120
.b8 118
.b8 120
.b8 55
.b8 54
.b8 105
.b8 53
.b8 113
.b8 110
.b8 113
.b8 54
.b8 54
.b8 113
.b8 50
.b8 120
.b8 105
.b8 97
.b8 99
.b8 50
.b8 100
.b8 121
.b8 100
.b8 121
.b8 107
.b8 119
.b8 103
.b8 50
.b8 119
.b8 121
.b8 110
.b8 110
.b8 121
.b8 51
.b8 122
.b8 50
.b8 114
.b8 110
.b8 105
.b8 117
.b8 118
.b8 120
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
