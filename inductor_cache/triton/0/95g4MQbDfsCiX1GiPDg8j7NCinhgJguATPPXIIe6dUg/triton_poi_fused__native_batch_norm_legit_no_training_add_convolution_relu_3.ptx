//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_0];
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:21:33
	shl.b32 	%r50, %r1, 9;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_2];
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_3];
	.loc	1 22 36                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:22:36
	mov.u32 	%r51, %tid.x;
	shl.b32 	%r52, %r51, 2;
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_4];
	and.b32  	%r53, %r52, 508;
	ld.param.u64 	%rd30, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_5];
	.loc	1 22 23                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:22:23
	or.b32  	%r54, %r50, %r53;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_6];
	.loc	1 25 21                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:25:21
	bfe.s32 	%r55, %r1, 22, 1;
	shr.u32 	%r56, %r55, 20;
	add.s32 	%r57, %r54, %r56;
	shr.s32 	%r58, %r57, 12;
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_7];
	.loc	1 25 29                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:25:29
	shr.u32 	%r59, %r58, 30;
	add.s32 	%r60, %r58, %r59;
	and.b32  	%r61, %r60, -4;
	sub.s32 	%r62, %r58, %r61;
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_3_param_8];
	.loc	1 26 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:30
	mul.wide.s32 	%rd34, %r54, 4;
	add.s64 	%rd1, %rd25, %rd34;
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:30
	mul.wide.s32 	%rd35, %r62, 4;
	add.s64 	%rd2, %rd26, %rd35;
	.loc	1 27 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:28:30
	add.s64 	%rd6, %rd27, %rd34;
	.loc	1 28 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:28:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 29 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:29:30
	add.s64 	%rd7, %rd28, %rd34;
	.loc	1 29 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:29:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 30 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:30:30
	add.s64 	%rd8, %rd29, %rd35;
	.loc	1 30 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:30:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 31 30                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:31:30
	add.s64 	%rd12, %rd30, %rd35;
	.loc	1 31 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:31:35
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r23;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r24;
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r25;
	.loc	1 32 31                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:32:31
	add.s64 	%rd16, %rd31, %rd35;
	.loc	1 32 36                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:32:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 33 31                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:33:31
	add.s64 	%rd20, %rd32, %rd35;
	.loc	1 33 36                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:33:36
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 39 19                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:39:19
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 40 27                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:40:27
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 26 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:35
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r5;
	.loc	1 27 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:35
	mov.b32 	%f15, %r9;
	mov.b32 	%f16, %r17;
	.loc	1 34 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:34:18
	add.f32 	%f17, %f14, %f15;
	add.f32 	%f18, %f13, %f16;
	.loc	1 30 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:30:35
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r20;
	mov.b32 	%f21, %r19;
	mov.b32 	%f22, %r18;
	.loc	1 26 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:35
	mov.b32 	%f23, %r12;
	mov.b32 	%f24, %r4;
	.loc	1 27 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:35
	mov.b32 	%f25, %r8;
	mov.b32 	%f26, %r16;
	.loc	1 34 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:34:18
	add.f32 	%f27, %f24, %f25;
	add.f32 	%f28, %f23, %f26;
	.loc	1 26 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:35
	mov.b32 	%f29, %r11;
	mov.b32 	%f30, %r3;
	.loc	1 27 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:35
	mov.b32 	%f31, %r7;
	mov.b32 	%f32, %r15;
	.loc	1 34 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:34:18
	add.f32 	%f33, %f30, %f31;
	add.f32 	%f34, %f29, %f32;
	.loc	1 26 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:26:35
	mov.b32 	%f35, %r10;
	mov.b32 	%f36, %r2;
	.loc	1 27 35                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:27:35
	mov.b32 	%f37, %r6;
	mov.b32 	%f38, %r14;
	.loc	1 34 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:34:18
	add.f32 	%f39, %f36, %f37;
	add.f32 	%f40, %f35, %f38;
	.loc	1 33 36                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:33:36
	mov.b32 	%f41, %r33;
	mov.b32 	%f42, %r32;
	mov.b32 	%f43, %r31;
	mov.b32 	%f44, %r30;
	.loc	1 32 36                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:32:36
	mov.b32 	%f45, %r29;
	mov.b32 	%f46, %r28;
	mov.b32 	%f47, %r27;
	mov.b32 	%f48, %r26;
	.loc	1 42 20                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:42:20
	mov.b32 	%r36, %f9;
	mov.b32 	%r35, 1065353216;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f49, %r34;
	mov.b32 	%r39, %f10;
	// begin inline asm
	div.full.f32 %r37, %r35, %r39;
	// end inline asm
	mov.b32 	%f50, %r37;
	mov.b32 	%r42, %f11;
	// begin inline asm
	div.full.f32 %r40, %r35, %r42;
	// end inline asm
	mov.b32 	%f51, %r40;
	mov.b32 	%r45, %f12;
	// begin inline asm
	div.full.f32 %r43, %r35, %r45;
	// end inline asm
	mov.b32 	%f52, %r43;
	.loc	1 36 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:36:18
	add.f32 	%f53, %f17, %f18;
	add.f32 	%f54, %f27, %f28;
	add.f32 	%f55, %f33, %f34;
	add.f32 	%f56, %f39, %f40;
	.loc	1 37 18                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:37:18
	sub.f32 	%f57, %f56, %f22;
	sub.f32 	%f58, %f55, %f21;
	sub.f32 	%f59, %f54, %f20;
	sub.f32 	%f60, %f53, %f19;
	.loc	1 45 19                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:45:19
	mul.f32 	%f61, %f60, %f52;
	mul.f32 	%f62, %f59, %f51;
	mul.f32 	%f63, %f58, %f50;
	mul.f32 	%f64, %f57, %f49;
	.loc	1 47 20                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:47:20
	fma.rn.f32 	%f65, %f64, %f48, %f44;
	fma.rn.f32 	%f66, %f63, %f47, %f43;
	fma.rn.f32 	%f67, %f62, %f46, %f42;
	fma.rn.f32 	%f68, %f61, %f45, %f41;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p25, %f68, 0f00000000;
	setp.lt.f32 	%p26, %f67, 0f00000000;
	setp.lt.f32 	%p27, %f66, 0f00000000;
	setp.lt.f32 	%p28, %f65, 0f00000000;
$L__tmp2:
	.loc	1 50 25                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:50:25
	add.s64 	%rd24, %rd33, %rd34;
	.loc	1 50 37                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:50:37
	mov.b32 	%r63, %f68;
	mov.b32 	%r64, %f67;
	mov.b32 	%r65, %f66;
	mov.b32 	%r66, %f65;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r46, 0, %r66, %p28;
	selp.b32 	%r47, 0, %r65, %p27;
	selp.b32 	%r48, 0, %r64, %p26;
	selp.b32 	%r49, 0, %r63, %p25;
$L__tmp4:
	.loc	1 50 37                         // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:50:37
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd24 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	.loc	1 50 4                          // c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py:50:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6l/c6lgfobamw6fqmpp7txmpiwmnad45d2vkmsvadwrapk77vwbs2g2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 221                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 108
.b8 103
.b8 102
.b8 111
.b8 98
.b8 97
.b8 109
.b8 119
.b8 54
.b8 102
.b8 113
.b8 109
.b8 112
.b8 112
.b8 55
.b8 116
.b8 120
.b8 109
.b8 112
.b8 105
.b8 119
.b8 109
.b8 110
.b8 97
.b8 100
.b8 52
.b8 53
.b8 100
.b8 50
.b8 118
.b8 107
.b8 109
.b8 115
.b8 118
.b8 97
.b8 100
.b8 119
.b8 114
.b8 97
.b8 112
.b8 107
.b8 55
.b8 55
.b8 118
.b8 119
.b8 98
.b8 115
.b8 50
.b8 103
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
