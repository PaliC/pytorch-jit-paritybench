//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_29 // -- Begin function triton_red_fused_mean_29
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_29
.visible .entry triton_red_fused_mean_29(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_29_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_29_param_1,
	.param .u32 triton_red_fused_mean_29_param_2,
	.param .u32 triton_red_fused_mean_29_param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_red_fused_mean_29_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_mean_29_param_0];
$L__tmp0:
	.loc	1 22 28                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:22:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:24:21
	setp.lt.s32 	%p1, %r3, 4;
	.loc	1 25 33                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:25:33
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r5, %r4, 2044;
	.loc	1 32 44                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:44
	shl.b32 	%r6, %r3, 12;
	or.b32  	%r7, %r6, %r5;
	.loc	1 32 34                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:34
	mul.wide.s32 	%rd4, %r7, 4;
	add.s64 	%rd1, %rd3, %rd4;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us.preheader
	.loc	1 0 34                          // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:0:34
	mov.b32 	%r28, 0;
	mov.pred 	%p12, -1;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p12 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd1 + 0 ];
	@!%p12 mov.u32 %r24, %r28;
	@!%p12 mov.u32 %r25, %r28;
	@!%p12 mov.u32 %r26, %r28;
	@!%p12 mov.u32 %r27, %r28;
	// end inline asm
	.loc	1 32 34                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:34
	add.s64 	%rd8, %rd1, 8192;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p12 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd8 + 0 ];
	@!%p12 mov.u32 %r32, %r28;
	@!%p12 mov.u32 %r33, %r28;
	@!%p12 mov.u32 %r34, %r28;
	@!%p12 mov.u32 %r35, %r28;
	// end inline asm
	mov.b32 	%f4, %r25;
	mov.b32 	%f5, %r24;
	.loc	1 34 23                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:34:23
	add.f32 	%f6, %f5, 0f00000000;
	add.f32 	%f7, %f4, 0f00000000;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	mov.b32 	%f8, %r32;
	mov.b32 	%f9, %r33;
	.loc	1 34 23                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:34:23
	add.f32 	%f10, %f7, %f9;
	add.f32 	%f11, %f6, %f8;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	mov.b32 	%f12, %r27;
	mov.b32 	%f13, %r26;
	.loc	1 34 23                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:34:23
	add.f32 	%f14, %f13, 0f00000000;
	add.f32 	%f15, %f12, 0f00000000;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	mov.b32 	%f16, %r34;
	mov.b32 	%f17, %r35;
	.loc	1 34 23                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:34:23
	add.f32 	%f18, %f15, %f17;
	add.f32 	%f19, %f14, %f16;
	.loc	1 25 33                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:25:33
	add.f32 	%f20, %f11, %f10;
	add.f32 	%f21, %f19, %f20;
	add.f32 	%f41, %f18, %f21;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 33                          // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:0:33
	mov.b32 	%r12, 0;
	mov.pred 	%p2, 0;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd1 + 0 ];
	@!%p2 mov.u32 %r8, %r12;
	@!%p2 mov.u32 %r9, %r12;
	@!%p2 mov.u32 %r10, %r12;
	@!%p2 mov.u32 %r11, %r12;
	// end inline asm
	.loc	1 32 34                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:34
	add.s64 	%rd6, %rd1, 8192;
	.loc	1 32 49                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:32:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd6 + 0 ];
	@!%p2 mov.u32 %r16, %r12;
	@!%p2 mov.u32 %r17, %r12;
	@!%p2 mov.u32 %r18, %r12;
	@!%p2 mov.u32 %r19, %r12;
	// end inline asm
	mov.f32 	%f41, 0f00000000;
$L__BB0_3:                              // %.split2.us
	.loc	1 25 33                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:25:33
	and.b32  	%r47, %r2, 31;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f41;
	shfl.sync.bfly.b32	%r49, %r48, 16, 31, -1;
	mov.b32 	%f22, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f41, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f23;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f24, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f25;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f26, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f27;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f28, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f29;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f30, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p22, %r47, 0;
	shr.u32 	%r58, %r2, 3;
	and.b32  	%r59, %r58, 60;
	mov.u32 	%r60, global_smem;
	add.s32 	%r40, %r60, %r59;
	mov.b32 	%r41, %f31;
	// begin inline asm
	@%p22 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r2, 16;
	add.s32 	%r43, %r60, %r4;
	// begin inline asm
	@%p23 ld.shared.b32 %r42, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r42;
	shfl.sync.bfly.b32	%r62, %r42, 8, 31, -1;
	mov.b32 	%f33, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f34;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f35, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f36;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f37, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f38;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f39, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r69, %r2, 15;
	setp.eq.s32 	%p27, %r69, 0;
	and.pred  	%p24, %p23, %p27;
	mov.b32 	%r45, %f40;
	// begin inline asm
	@%p24 st.shared.b32 [ %r43 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r46, [global_smem];
$L__tmp2:
	.loc	1 37 25                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:37:25
	mul.wide.s32 	%rd10, %r3, 4;
	add.s64 	%rd9, %rd2, %rd10;
	.loc	1 37 36                         // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:37:36
	and.b32  	%r70, %r2, 511;
	setp.eq.s32 	%p28, %r70, 0;
	and.pred  	%p25, %p28, %p1;
	// begin inline asm
	@%p25 st.global.b32 [ %rd9 + 0 ], { %r46 };
	// end inline asm
	.loc	1 37 4                          // cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ge/cgepemld4bm7vkqfglzmxi2ef2xmh2adz5oikfy7aqzbvwb3dgi6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 101
.b8 112
.b8 101
.b8 109
.b8 108
.b8 100
.b8 52
.b8 98
.b8 109
.b8 55
.b8 118
.b8 107
.b8 113
.b8 102
.b8 103
.b8 108
.b8 122
.b8 109
.b8 120
.b8 105
.b8 50
.b8 101
.b8 102
.b8 50
.b8 120
.b8 109
.b8 104
.b8 50
.b8 97
.b8 100
.b8 122
.b8 53
.b8 111
.b8 105
.b8 107
.b8 102
.b8 121
.b8 55
.b8 97
.b8 113
.b8 122
.b8 98
.b8 118
.b8 119
.b8 98
.b8 51
.b8 100
.b8 103
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
