//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_3 // -- Begin function triton_poi_fused_avg_pool2d_3
                                        // @triton_poi_fused_avg_pool2d_3
.visible .entry triton_poi_fused_avg_pool2d_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_3_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_3_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<33>;
	.loc	1 19 0                          // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_avg_pool2d_3_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_avg_pool2d_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:21:33
	shl.b32 	%r22, %r1, 9;
	.loc	1 22 36                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 2;
	and.b32  	%r25, %r24, 508;
	.loc	1 22 23                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:22:23
	or.b32  	%r26, %r22, %r25;
	or.b32  	%r27, %r26, 1;
	or.b32  	%r28, %r26, 2;
	or.b32  	%r29, %r26, 3;
	.loc	1 25 19                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:25:19
	shr.s32 	%r31, %r26, 31;
	shr.u32 	%r32, %r31, 28;
	add.s32 	%r33, %r26, %r32;
	.loc	1 24 19                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:24:19
	and.b32  	%r34, %r33, 2147483632;
	sub.s32 	%r35, %r26, %r34;
	bfe.s32 	%r36, %r1, 22, 1;
	shr.u32 	%r37, %r36, 28;
	add.s32 	%r38, %r27, %r37;
	and.b32  	%r39, %r38, 2147483632;
	sub.s32 	%r40, %r27, %r39;
	add.s32 	%r41, %r28, %r37;
	and.b32  	%r42, %r41, 2147483632;
	sub.s32 	%r43, %r28, %r42;
	add.s32 	%r44, %r29, %r37;
	and.b32  	%r45, %r44, 2147483632;
	sub.s32 	%r46, %r29, %r45;
	.loc	1 27 32                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:27:32
	shl.b32 	%r47, %r35, 1;
	shl.b32 	%r48, %r40, 1;
	shl.b32 	%r49, %r43, 1;
	shl.b32 	%r50, %r46, 1;
	.loc	1 27 40                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:27:40
	shl.b32 	%r51, %r33, 2;
	and.b32  	%r52, %r51, -64;
	.loc	1 27 37                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:27:37
	add.s32 	%r53, %r47, %r52;
	add.s32 	%r54, %r52, %r48;
	add.s32 	%r55, %r52, %r49;
	add.s32 	%r56, %r52, %r50;
	.loc	1 27 30                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:27:30
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd1, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r54, 4;
	add.s64 	%rd2, %rd18, %rd21;
	mul.wide.s32 	%rd22, %r55, 4;
	add.s64 	%rd3, %rd18, %rd22;
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd4, %rd18, %rd23;
	mov.pred 	%p1, -1;
	.loc	1 27 45                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:27:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 28 30                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:28:30
	add.s64 	%rd5, %rd1, 4;
	add.s64 	%rd6, %rd2, 4;
	add.s64 	%rd7, %rd3, 4;
	add.s64 	%rd8, %rd4, 4;
	.loc	1 28 49                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:28:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 29 35                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:29:35
	or.b32  	%r57, %r52, 32;
	.loc	1 29 42                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:29:42
	add.s32 	%r58, %r57, %r47;
	add.s32 	%r59, %r57, %r48;
	add.s32 	%r60, %r57, %r49;
	add.s32 	%r61, %r57, %r50;
	.loc	1 29 30                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:29:30
	mul.wide.s32 	%rd24, %r58, 4;
	add.s64 	%rd9, %rd18, %rd24;
	mul.wide.s32 	%rd25, %r59, 4;
	add.s64 	%rd10, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r60, 4;
	add.s64 	%rd11, %rd18, %rd26;
	mul.wide.s32 	%rd27, %r61, 4;
	add.s64 	%rd12, %rd18, %rd27;
	.loc	1 29 50                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:29:50
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 30 35                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:30:35
	or.b32  	%r62, %r52, 33;
	.loc	1 30 42                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:30:42
	add.s32 	%r63, %r62, %r47;
	add.s32 	%r64, %r62, %r48;
	add.s32 	%r65, %r62, %r49;
	add.s32 	%r66, %r62, %r50;
	.loc	1 30 30                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:30:30
	mul.wide.s32 	%rd28, %r63, 4;
	add.s64 	%rd13, %rd18, %rd28;
	mul.wide.s32 	%rd29, %r64, 4;
	add.s64 	%rd14, %rd18, %rd29;
	mul.wide.s32 	%rd30, %r65, 4;
	add.s64 	%rd15, %rd18, %rd30;
	mul.wide.s32 	%rd31, %r66, 4;
	add.s64 	%rd16, %rd18, %rd31;
	.loc	1 30 50                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:30:50
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r16;
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r17;
	.loc	1 31 18                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:31:18
	add.f32 	%f17, %f1, %f5;
	add.f32 	%f18, %f2, %f6;
	add.f32 	%f19, %f3, %f7;
	add.f32 	%f20, %f4, %f8;
	.loc	1 32 18                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:32:18
	add.f32 	%f21, %f17, %f9;
	add.f32 	%f22, %f18, %f10;
	add.f32 	%f23, %f19, %f11;
	add.f32 	%f24, %f20, %f12;
	.loc	1 33 18                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:33:18
	add.f32 	%f25, %f21, %f13;
	add.f32 	%f26, %f22, %f14;
	add.f32 	%f27, %f23, %f15;
	add.f32 	%f28, %f24, %f16;
	.loc	1 35 18                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:35:18
	mul.f32 	%f29, %f25, 0f3E800000;
	mul.f32 	%f30, %f26, 0f3E800000;
	mul.f32 	%f31, %f27, 0f3E800000;
	mul.f32 	%f32, %f28, 0f3E800000;
	.loc	1 36 25                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:36:25
	mul.wide.s32 	%rd32, %r26, 4;
	add.s64 	%rd17, %rd19, %rd32;
	.loc	1 36 36                         // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:36:36
	mov.b32 	%r18, %f29;
	mov.b32 	%r19, %f30;
	mov.b32 	%r20, %f31;
	mov.b32 	%r21, %f32;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	.loc	1 36 4                          // czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zr/czrs6m754omykgmc6pro6cq45hmldjevbhi6ir6j2euit5qxicmt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 114
.b8 115
.b8 54
.b8 109
.b8 55
.b8 53
.b8 52
.b8 111
.b8 109
.b8 121
.b8 107
.b8 103
.b8 109
.b8 99
.b8 54
.b8 112
.b8 114
.b8 111
.b8 54
.b8 99
.b8 113
.b8 52
.b8 53
.b8 104
.b8 109
.b8 108
.b8 100
.b8 106
.b8 101
.b8 118
.b8 98
.b8 104
.b8 105
.b8 54
.b8 105
.b8 114
.b8 54
.b8 106
.b8 50
.b8 101
.b8 117
.b8 105
.b8 116
.b8 53
.b8 113
.b8 120
.b8 105
.b8 99
.b8 109
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
