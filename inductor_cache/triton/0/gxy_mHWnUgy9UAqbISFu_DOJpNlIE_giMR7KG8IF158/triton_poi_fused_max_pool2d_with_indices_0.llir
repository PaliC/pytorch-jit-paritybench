; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = icmp slt i32 %9, 64, !dbg !14
  %12 = srem i32 %10, 2, !dbg !15
  %13 = ashr exact i32 %9, 1, !dbg !16
  %14 = srem i32 %13, 2, !dbg !17
  %15 = sdiv i32 %9, 4, !dbg !18
  %16 = icmp sgt i32 %14, 0, !dbg !19
  %17 = mul nsw i32 %14, 12, !dbg !20
  %18 = select i1 %16, i32 12, i32 %17, !dbg !21
  %19 = shl i32 %15, 4, !dbg !22
  %20 = add i32 %18, %19, !dbg !23
  %21 = mul nsw i32 %12, 3, !dbg !24
  %22 = icmp sgt i32 %12, 0, !dbg !25
  %23 = select i1 %22, i32 3, i32 %21, !dbg !26
  %24 = add i32 %20, %23, !dbg !27
  %25 = sext i32 %20 to i64, !dbg !28
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !28
  %27 = sext i32 %24 to i64, !dbg !28
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !28
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %11) #1, !dbg !29
  %30 = bitcast i32 %29 to float, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !29
  %32 = bitcast i32 %31 to float, !dbg !29
  %33 = add nsw i32 %21, 1, !dbg !30
  %34 = select i1 %22, i32 3, i32 %33, !dbg !31
  %35 = or disjoint i32 %20, 1, !dbg !32
  %36 = add i32 %20, %34, !dbg !32
  %37 = sext i32 %35 to i64, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !33
  %39 = sext i32 %36 to i64, !dbg !33
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !33
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %11) #1, !dbg !34
  %42 = bitcast i32 %41 to float, !dbg !34
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %11) #1, !dbg !34
  %44 = bitcast i32 %43 to float, !dbg !34
  %45 = add nsw i32 %21, 2, !dbg !35
  %46 = select i1 %22, i32 3, i32 %45, !dbg !36
  %47 = or disjoint i32 %20, 2, !dbg !37
  %48 = add i32 %20, %46, !dbg !37
  %49 = sext i32 %47 to i64, !dbg !38
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !38
  %51 = sext i32 %48 to i64, !dbg !38
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !38
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %11) #1, !dbg !39
  %54 = bitcast i32 %53 to float, !dbg !39
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %11) #1, !dbg !39
  %56 = bitcast i32 %55 to float, !dbg !39
  %57 = or disjoint i32 %19, 3, !dbg !40
  %58 = add i32 %57, %18, !dbg !41
  %59 = sext i32 %58 to i64, !dbg !42
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !42
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %11) #1, !dbg !43
  %62 = bitcast i32 %61 to float, !dbg !43
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %11) #1, !dbg !43
  %64 = bitcast i32 %63 to float, !dbg !43
  %65 = add nsw i32 %17, 4, !dbg !44
  %66 = select i1 %16, i32 12, i32 %65, !dbg !45
  %67 = add i32 %66, %19, !dbg !46
  %68 = add i32 %67, %23, !dbg !47
  %69 = sext i32 %67 to i64, !dbg !48
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !48
  %71 = sext i32 %68 to i64, !dbg !48
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !48
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %11) #1, !dbg !49
  %74 = bitcast i32 %73 to float, !dbg !49
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %11) #1, !dbg !49
  %76 = bitcast i32 %75 to float, !dbg !49
  %77 = or disjoint i32 %67, 1, !dbg !50
  %78 = add i32 %67, %34, !dbg !50
  %79 = sext i32 %77 to i64, !dbg !51
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !51
  %81 = sext i32 %78 to i64, !dbg !51
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !51
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %11) #1, !dbg !52
  %84 = bitcast i32 %83 to float, !dbg !52
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 %11) #1, !dbg !52
  %86 = bitcast i32 %85 to float, !dbg !52
  %87 = or disjoint i32 %67, 2, !dbg !53
  %88 = add i32 %67, %46, !dbg !53
  %89 = sext i32 %87 to i64, !dbg !54
  %90 = getelementptr float, ptr addrspace(1) %0, i64 %89, !dbg !54
  %91 = sext i32 %88 to i64, !dbg !54
  %92 = getelementptr float, ptr addrspace(1) %0, i64 %91, !dbg !54
  %93 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 %11) #1, !dbg !55
  %94 = bitcast i32 %93 to float, !dbg !55
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %92, i1 %11) #1, !dbg !55
  %96 = bitcast i32 %95 to float, !dbg !55
  %97 = add i32 %57, %66, !dbg !56
  %98 = sext i32 %97 to i64, !dbg !57
  %99 = getelementptr float, ptr addrspace(1) %0, i64 %98, !dbg !57
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %11) #1, !dbg !58
  %101 = bitcast i32 %100 to float, !dbg !58
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %11) #1, !dbg !58
  %103 = bitcast i32 %102 to float, !dbg !58
  %104 = add nsw i32 %17, 8, !dbg !59
  %105 = select i1 %16, i32 12, i32 %104, !dbg !60
  %106 = add i32 %105, %19, !dbg !61
  %107 = add i32 %106, %23, !dbg !62
  %108 = sext i32 %106 to i64, !dbg !63
  %109 = getelementptr float, ptr addrspace(1) %0, i64 %108, !dbg !63
  %110 = sext i32 %107 to i64, !dbg !63
  %111 = getelementptr float, ptr addrspace(1) %0, i64 %110, !dbg !63
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %109, i1 %11) #1, !dbg !64
  %113 = bitcast i32 %112 to float, !dbg !64
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %111, i1 %11) #1, !dbg !64
  %115 = bitcast i32 %114 to float, !dbg !64
  %116 = or disjoint i32 %106, 1, !dbg !65
  %117 = add i32 %106, %34, !dbg !65
  %118 = sext i32 %116 to i64, !dbg !66
  %119 = getelementptr float, ptr addrspace(1) %0, i64 %118, !dbg !66
  %120 = sext i32 %117 to i64, !dbg !66
  %121 = getelementptr float, ptr addrspace(1) %0, i64 %120, !dbg !66
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %119, i1 %11) #1, !dbg !67
  %123 = bitcast i32 %122 to float, !dbg !67
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %121, i1 %11) #1, !dbg !67
  %125 = bitcast i32 %124 to float, !dbg !67
  %126 = or disjoint i32 %106, 2, !dbg !68
  %127 = add i32 %106, %46, !dbg !68
  %128 = sext i32 %126 to i64, !dbg !69
  %129 = getelementptr float, ptr addrspace(1) %0, i64 %128, !dbg !69
  %130 = sext i32 %127 to i64, !dbg !69
  %131 = getelementptr float, ptr addrspace(1) %0, i64 %130, !dbg !69
  %132 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %129, i1 %11) #1, !dbg !70
  %133 = bitcast i32 %132 to float, !dbg !70
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %131, i1 %11) #1, !dbg !70
  %135 = bitcast i32 %134 to float, !dbg !70
  %136 = add i32 %57, %105, !dbg !71
  %137 = sext i32 %136 to i64, !dbg !72
  %138 = getelementptr float, ptr addrspace(1) %0, i64 %137, !dbg !72
  %139 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %138, i1 %11) #1, !dbg !73
  %140 = bitcast i32 %139 to float, !dbg !73
  %141 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %138, i1 %11) #1, !dbg !73
  %142 = bitcast i32 %141 to float, !dbg !73
  %143 = or disjoint i32 %19, 12, !dbg !74
  %144 = add i32 %143, %23, !dbg !75
  %145 = sext i32 %143 to i64, !dbg !76
  %146 = getelementptr float, ptr addrspace(1) %0, i64 %145, !dbg !76
  %147 = sext i32 %144 to i64, !dbg !76
  %148 = getelementptr float, ptr addrspace(1) %0, i64 %147, !dbg !76
  %149 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %146, i1 %11) #1, !dbg !77
  %150 = bitcast i32 %149 to float, !dbg !77
  %151 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %148, i1 %11) #1, !dbg !77
  %152 = bitcast i32 %151 to float, !dbg !77
  %153 = or disjoint i32 %19, 13, !dbg !78
  %154 = add i32 %34, %143, !dbg !78
  %155 = sext i32 %153 to i64, !dbg !79
  %156 = getelementptr float, ptr addrspace(1) %0, i64 %155, !dbg !79
  %157 = sext i32 %154 to i64, !dbg !79
  %158 = getelementptr float, ptr addrspace(1) %0, i64 %157, !dbg !79
  %159 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %156, i1 %11) #1, !dbg !80
  %160 = bitcast i32 %159 to float, !dbg !80
  %161 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %158, i1 %11) #1, !dbg !80
  %162 = bitcast i32 %161 to float, !dbg !80
  %163 = or disjoint i32 %19, 14, !dbg !81
  %164 = add i32 %46, %143, !dbg !81
  %165 = sext i32 %163 to i64, !dbg !82
  %166 = getelementptr float, ptr addrspace(1) %0, i64 %165, !dbg !82
  %167 = sext i32 %164 to i64, !dbg !82
  %168 = getelementptr float, ptr addrspace(1) %0, i64 %167, !dbg !82
  %169 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %166, i1 %11) #1, !dbg !83
  %170 = bitcast i32 %169 to float, !dbg !83
  %171 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %168, i1 %11) #1, !dbg !83
  %172 = bitcast i32 %171 to float, !dbg !83
  %173 = or disjoint i32 %19, 15, !dbg !84
  %174 = sext i32 %173 to i64, !dbg !85
  %175 = getelementptr float, ptr addrspace(1) %0, i64 %174, !dbg !85
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %175, i1 %11) #1, !dbg !86
  %177 = bitcast i32 %176 to float, !dbg !86
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %175, i1 %11) #1, !dbg !86
  %179 = bitcast i32 %178 to float, !dbg !86
  %180 = fcmp ogt float %42, %30, !dbg !87
  %181 = fcmp ogt float %44, %32, !dbg !87
  %182 = fcmp uno float %42, 0.000000e+00, !dbg !91
  %183 = fcmp uno float %44, 0.000000e+00, !dbg !91
  %184 = or i1 %180, %182, !dbg !92
  %185 = or i1 %181, %183, !dbg !92
  %186 = select i1 %184, float %42, float %30, !dbg !93
  %187 = select i1 %185, float %44, float %32, !dbg !93
  %188 = fcmp olt float %186, %54, !dbg !94
  %189 = fcmp olt float %187, %56, !dbg !94
  %190 = fcmp uno float %54, 0.000000e+00, !dbg !96
  %191 = fcmp uno float %56, 0.000000e+00, !dbg !96
  %192 = or i1 %190, %188, !dbg !97
  %193 = or i1 %191, %189, !dbg !97
  %194 = select i1 %192, float %54, float %186, !dbg !98
  %195 = select i1 %193, float %56, float %187, !dbg !98
  %196 = fcmp olt float %194, %62, !dbg !99
  %197 = fcmp olt float %195, %64, !dbg !99
  %198 = fcmp uno float %62, 0.000000e+00, !dbg !101
  %199 = fcmp uno float %64, 0.000000e+00, !dbg !101
  %200 = or i1 %198, %196, !dbg !102
  %201 = or i1 %199, %197, !dbg !102
  %202 = select i1 %200, float %62, float %194, !dbg !103
  %203 = select i1 %201, float %64, float %195, !dbg !103
  %204 = fcmp olt float %202, %74, !dbg !104
  %205 = fcmp olt float %203, %76, !dbg !104
  %206 = fcmp uno float %74, 0.000000e+00, !dbg !106
  %207 = fcmp uno float %76, 0.000000e+00, !dbg !106
  %208 = or i1 %206, %204, !dbg !107
  %209 = or i1 %207, %205, !dbg !107
  %210 = select i1 %208, float %74, float %202, !dbg !108
  %211 = select i1 %209, float %76, float %203, !dbg !108
  %212 = fcmp olt float %210, %84, !dbg !109
  %213 = fcmp olt float %211, %86, !dbg !109
  %214 = fcmp uno float %84, 0.000000e+00, !dbg !111
  %215 = fcmp uno float %86, 0.000000e+00, !dbg !111
  %216 = or i1 %214, %212, !dbg !112
  %217 = or i1 %215, %213, !dbg !112
  %218 = select i1 %216, float %84, float %210, !dbg !113
  %219 = select i1 %217, float %86, float %211, !dbg !113
  %220 = fcmp olt float %218, %94, !dbg !114
  %221 = fcmp olt float %219, %96, !dbg !114
  %222 = fcmp uno float %94, 0.000000e+00, !dbg !116
  %223 = fcmp uno float %96, 0.000000e+00, !dbg !116
  %224 = or i1 %222, %220, !dbg !117
  %225 = or i1 %223, %221, !dbg !117
  %226 = select i1 %224, float %94, float %218, !dbg !118
  %227 = select i1 %225, float %96, float %219, !dbg !118
  %228 = fcmp olt float %226, %101, !dbg !119
  %229 = fcmp olt float %227, %103, !dbg !119
  %230 = fcmp uno float %101, 0.000000e+00, !dbg !121
  %231 = fcmp uno float %103, 0.000000e+00, !dbg !121
  %232 = or i1 %230, %228, !dbg !122
  %233 = or i1 %231, %229, !dbg !122
  %234 = select i1 %232, float %101, float %226, !dbg !123
  %235 = select i1 %233, float %103, float %227, !dbg !123
  %236 = fcmp olt float %234, %113, !dbg !124
  %237 = fcmp olt float %235, %115, !dbg !124
  %238 = fcmp uno float %113, 0.000000e+00, !dbg !126
  %239 = fcmp uno float %115, 0.000000e+00, !dbg !126
  %240 = or i1 %238, %236, !dbg !127
  %241 = or i1 %239, %237, !dbg !127
  %242 = select i1 %240, float %113, float %234, !dbg !128
  %243 = select i1 %241, float %115, float %235, !dbg !128
  %244 = fcmp olt float %242, %123, !dbg !129
  %245 = fcmp olt float %243, %125, !dbg !129
  %246 = fcmp uno float %123, 0.000000e+00, !dbg !131
  %247 = fcmp uno float %125, 0.000000e+00, !dbg !131
  %248 = or i1 %246, %244, !dbg !132
  %249 = or i1 %247, %245, !dbg !132
  %250 = select i1 %248, float %123, float %242, !dbg !133
  %251 = select i1 %249, float %125, float %243, !dbg !133
  %252 = fcmp olt float %250, %133, !dbg !134
  %253 = fcmp olt float %251, %135, !dbg !134
  %254 = fcmp uno float %133, 0.000000e+00, !dbg !136
  %255 = fcmp uno float %135, 0.000000e+00, !dbg !136
  %256 = or i1 %254, %252, !dbg !137
  %257 = or i1 %255, %253, !dbg !137
  %258 = select i1 %256, float %133, float %250, !dbg !138
  %259 = select i1 %257, float %135, float %251, !dbg !138
  %260 = fcmp olt float %258, %140, !dbg !139
  %261 = fcmp olt float %259, %142, !dbg !139
  %262 = fcmp uno float %140, 0.000000e+00, !dbg !141
  %263 = fcmp uno float %142, 0.000000e+00, !dbg !141
  %264 = or i1 %262, %260, !dbg !142
  %265 = or i1 %263, %261, !dbg !142
  %266 = select i1 %264, float %140, float %258, !dbg !143
  %267 = select i1 %265, float %142, float %259, !dbg !143
  %268 = fcmp olt float %266, %150, !dbg !144
  %269 = fcmp olt float %267, %152, !dbg !144
  %270 = fcmp uno float %150, 0.000000e+00, !dbg !146
  %271 = fcmp uno float %152, 0.000000e+00, !dbg !146
  %272 = or i1 %270, %268, !dbg !147
  %273 = or i1 %271, %269, !dbg !147
  %274 = select i1 %272, float %150, float %266, !dbg !148
  %275 = select i1 %273, float %152, float %267, !dbg !148
  %276 = fcmp olt float %274, %160, !dbg !149
  %277 = fcmp olt float %275, %162, !dbg !149
  %278 = fcmp uno float %160, 0.000000e+00, !dbg !151
  %279 = fcmp uno float %162, 0.000000e+00, !dbg !151
  %280 = or i1 %278, %276, !dbg !152
  %281 = or i1 %279, %277, !dbg !152
  %282 = select i1 %280, float %160, float %274, !dbg !153
  %283 = select i1 %281, float %162, float %275, !dbg !153
  %284 = fcmp olt float %282, %170, !dbg !154
  %285 = fcmp olt float %283, %172, !dbg !154
  %286 = fcmp uno float %170, 0.000000e+00, !dbg !156
  %287 = fcmp uno float %172, 0.000000e+00, !dbg !156
  %288 = or i1 %286, %284, !dbg !157
  %289 = or i1 %287, %285, !dbg !157
  %290 = select i1 %288, float %170, float %282, !dbg !158
  %291 = select i1 %289, float %172, float %283, !dbg !158
  %292 = fcmp olt float %290, %177, !dbg !159
  %293 = fcmp olt float %291, %179, !dbg !159
  %294 = fcmp uno float %177, 0.000000e+00, !dbg !161
  %295 = fcmp uno float %179, 0.000000e+00, !dbg !161
  %296 = or i1 %294, %292, !dbg !162
  %297 = or i1 %295, %293, !dbg !162
  %298 = sext i32 %9 to i64, !dbg !163
  %299 = getelementptr float, ptr addrspace(1) %1, i64 %298, !dbg !163
  %300 = bitcast float %290 to i32, !dbg !164
  %301 = select i1 %296, i32 %176, i32 %300, !dbg !165
  %302 = bitcast float %291 to i32, !dbg !164
  %303 = select i1 %297, i32 %178, i32 %302, !dbg !165
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %301, i32 %303, ptr addrspace(1) %299, i1 %11) #1, !dbg !164
  ret void, !dbg !166
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cq42t4rlt5mg6v6tsdhapzk27zcmyobtiud3mpgzosc4422soryd.py", directory: "inductor_cache/q4")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 48, scope: !7)
!20 = !DILocation(line: 28, column: 33, scope: !7)
!21 = !DILocation(line: 28, column: 57, scope: !7)
!22 = !DILocation(line: 28, column: 87, scope: !7)
!23 = !DILocation(line: 28, column: 84, scope: !7)
!24 = !DILocation(line: 28, column: 110, scope: !7)
!25 = !DILocation(line: 28, column: 108, scope: !7)
!26 = !DILocation(line: 28, column: 117, scope: !7)
!27 = !DILocation(line: 28, column: 93, scope: !7)
!28 = !DILocation(line: 28, column: 30, scope: !7)
!29 = !DILocation(line: 28, column: 144, scope: !7)
!30 = !DILocation(line: 29, column: 112, scope: !7)
!31 = !DILocation(line: 29, column: 121, scope: !7)
!32 = !DILocation(line: 29, column: 93, scope: !7)
!33 = !DILocation(line: 29, column: 30, scope: !7)
!34 = !DILocation(line: 29, column: 156, scope: !7)
!35 = !DILocation(line: 30, column: 112, scope: !7)
!36 = !DILocation(line: 30, column: 121, scope: !7)
!37 = !DILocation(line: 30, column: 93, scope: !7)
!38 = !DILocation(line: 30, column: 30, scope: !7)
!39 = !DILocation(line: 30, column: 156, scope: !7)
!40 = !DILocation(line: 31, column: 34, scope: !7)
!41 = !DILocation(line: 31, column: 88, scope: !7)
!42 = !DILocation(line: 31, column: 30, scope: !7)
!43 = !DILocation(line: 31, column: 96, scope: !7)
!44 = !DILocation(line: 32, column: 33, scope: !7)
!45 = !DILocation(line: 32, column: 61, scope: !7)
!46 = !DILocation(line: 32, column: 96, scope: !7)
!47 = !DILocation(line: 32, column: 105, scope: !7)
!48 = !DILocation(line: 32, column: 30, scope: !7)
!49 = !DILocation(line: 32, column: 156, scope: !7)
!50 = !DILocation(line: 33, column: 105, scope: !7)
!51 = !DILocation(line: 33, column: 30, scope: !7)
!52 = !DILocation(line: 33, column: 168, scope: !7)
!53 = !DILocation(line: 34, column: 106, scope: !7)
!54 = !DILocation(line: 34, column: 31, scope: !7)
!55 = !DILocation(line: 34, column: 169, scope: !7)
!56 = !DILocation(line: 35, column: 101, scope: !7)
!57 = !DILocation(line: 35, column: 31, scope: !7)
!58 = !DILocation(line: 35, column: 109, scope: !7)
!59 = !DILocation(line: 36, column: 34, scope: !7)
!60 = !DILocation(line: 36, column: 62, scope: !7)
!61 = !DILocation(line: 36, column: 97, scope: !7)
!62 = !DILocation(line: 36, column: 106, scope: !7)
!63 = !DILocation(line: 36, column: 31, scope: !7)
!64 = !DILocation(line: 36, column: 157, scope: !7)
!65 = !DILocation(line: 37, column: 106, scope: !7)
!66 = !DILocation(line: 37, column: 31, scope: !7)
!67 = !DILocation(line: 37, column: 169, scope: !7)
!68 = !DILocation(line: 38, column: 106, scope: !7)
!69 = !DILocation(line: 38, column: 31, scope: !7)
!70 = !DILocation(line: 38, column: 169, scope: !7)
!71 = !DILocation(line: 39, column: 101, scope: !7)
!72 = !DILocation(line: 39, column: 31, scope: !7)
!73 = !DILocation(line: 39, column: 109, scope: !7)
!74 = !DILocation(line: 40, column: 36, scope: !7)
!75 = !DILocation(line: 40, column: 45, scope: !7)
!76 = !DILocation(line: 40, column: 31, scope: !7)
!77 = !DILocation(line: 40, column: 96, scope: !7)
!78 = !DILocation(line: 41, column: 45, scope: !7)
!79 = !DILocation(line: 41, column: 31, scope: !7)
!80 = !DILocation(line: 41, column: 108, scope: !7)
!81 = !DILocation(line: 42, column: 45, scope: !7)
!82 = !DILocation(line: 42, column: 31, scope: !7)
!83 = !DILocation(line: 42, column: 108, scope: !7)
!84 = !DILocation(line: 43, column: 36, scope: !7)
!85 = !DILocation(line: 43, column: 31, scope: !7)
!86 = !DILocation(line: 43, column: 44, scope: !7)
!87 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !90)
!88 = distinct !DILexicalBlockFile(scope: !7, file: !89, discriminator: 0)
!89 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!90 = !DILocation(line: 44, column: 40, scope: !7)
!91 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !90)
!93 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !90)
!94 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !95)
!95 = !DILocation(line: 45, column: 40, scope: !7)
!96 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !95)
!97 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !95)
!98 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !95)
!99 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !100)
!100 = !DILocation(line: 46, column: 40, scope: !7)
!101 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !100)
!102 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !100)
!103 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !100)
!104 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !105)
!105 = !DILocation(line: 47, column: 40, scope: !7)
!106 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !105)
!107 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !105)
!108 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !105)
!109 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !110)
!110 = !DILocation(line: 48, column: 41, scope: !7)
!111 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !110)
!114 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !115)
!115 = !DILocation(line: 49, column: 42, scope: !7)
!116 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !115)
!117 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !115)
!118 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !115)
!119 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !120)
!120 = !DILocation(line: 50, column: 42, scope: !7)
!121 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !120)
!122 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !120)
!123 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !120)
!124 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !125)
!125 = !DILocation(line: 51, column: 42, scope: !7)
!126 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !125)
!127 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !125)
!128 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !125)
!129 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !130)
!130 = !DILocation(line: 52, column: 42, scope: !7)
!131 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !130)
!132 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !130)
!133 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !130)
!134 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !135)
!135 = !DILocation(line: 53, column: 42, scope: !7)
!136 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !135)
!137 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !135)
!138 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !135)
!139 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !140)
!140 = !DILocation(line: 54, column: 42, scope: !7)
!141 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !140)
!142 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !140)
!143 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !140)
!144 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !145)
!145 = !DILocation(line: 55, column: 42, scope: !7)
!146 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !145)
!147 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !145)
!148 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !145)
!149 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !150)
!150 = !DILocation(line: 56, column: 42, scope: !7)
!151 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !150)
!152 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !150)
!153 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !150)
!154 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !155)
!155 = !DILocation(line: 57, column: 42, scope: !7)
!156 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !155)
!157 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !155)
!158 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !155)
!159 = !DILocation(line: 118, column: 15, scope: !88, inlinedAt: !160)
!160 = !DILocation(line: 58, column: 42, scope: !7)
!161 = !DILocation(line: 120, column: 21, scope: !88, inlinedAt: !160)
!162 = !DILocation(line: 120, column: 16, scope: !88, inlinedAt: !160)
!163 = !DILocation(line: 59, column: 25, scope: !7)
!164 = !DILocation(line: 59, column: 37, scope: !7)
!165 = !DILocation(line: 121, column: 29, scope: !88, inlinedAt: !160)
!166 = !DILocation(line: 59, column: 4, scope: !7)
