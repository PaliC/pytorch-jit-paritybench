; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %10 = shl i32 %9, 1, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = lshr i32 %11, 6, !dbg !12
  %.lobit = and i32 %12, 1, !dbg !12
  %13 = or disjoint i32 %10, %.lobit, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %16 = shl i32 %15, 8, !dbg !16
  %17 = shl i32 %11, 2, !dbg !17
  %18 = and i32 %17, 252, !dbg !17
  %19 = shl i32 %11, 1, !dbg !17
  %20 = and i32 %19, 254, !dbg !17
  %21 = or disjoint i32 %16, %18, !dbg !18
  %22 = or disjoint i32 %16, %20, !dbg !18
  %23 = icmp slt i32 %21, 256, !dbg !19
  %24 = icmp slt i32 %22, 256, !dbg !19
  %25 = shl i32 %13, 8, !dbg !20
  %26 = add i32 %21, %25, !dbg !21
  %27 = sext i32 %26 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = and i1 %14, %23, !dbg !23
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %29) #4, !dbg !24
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !24
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !24
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !24
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !24
  %35 = and i32 %17, 508, !dbg !24
  %36 = lshr i32 %35, 8, !dbg !24
  %37 = or disjoint i32 %36, %35, !dbg !24
  %38 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %37, !dbg !24
  %39 = insertelement <1 x i32> poison, i32 %31, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %38, <1 x i32> %39, i1 true) #4, !dbg !24
  %40 = or disjoint i32 %35, 1, !dbg !24
  %41 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %36, !dbg !24
  %42 = getelementptr inbounds float, ptr addrspace(3) %41, i32 %40, !dbg !24
  %43 = insertelement <1 x i32> poison, i32 %32, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %42, <1 x i32> %43, i1 true) #4, !dbg !24
  %44 = or disjoint i32 %35, 2, !dbg !24
  %45 = or disjoint i32 %36, %44, !dbg !24
  %46 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %45, !dbg !24
  %47 = insertelement <1 x i32> poison, i32 %33, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %46, <1 x i32> %47, i1 true) #4, !dbg !24
  %48 = or disjoint i32 %35, 3, !dbg !24
  %49 = getelementptr inbounds float, ptr addrspace(3) %41, i32 %48, !dbg !24
  %50 = insertelement <1 x i32> poison, i32 %34, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %49, <1 x i32> %50, i1 true) #4, !dbg !24
  tail call void @llvm.nvvm.barrier0(), !dbg !24
  %51 = getelementptr float, ptr addrspace(3) @global_smem, i32 %20, !dbg !24
  %52 = load float, ptr addrspace(3) %51, align 8, !dbg !24
  %53 = or disjoint i32 %20, 1, !dbg !24
  %54 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %53, !dbg !24
  %55 = load float, ptr addrspace(3) %54, align 4, !dbg !24
  %56 = or disjoint i32 %20, 256, !dbg !24
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i32 %56, !dbg !24
  %58 = getelementptr i8, ptr addrspace(3) %57, i32 4, !dbg !24
  %59 = load float, ptr addrspace(3) %58, align 4, !dbg !24
  %60 = or disjoint i32 %20, 257, !dbg !24
  %61 = getelementptr float, ptr addrspace(3) @global_smem, i32 %60, !dbg !24
  %62 = getelementptr i8, ptr addrspace(3) %61, i32 4, !dbg !24
  %63 = load float, ptr addrspace(3) %62, align 8, !dbg !24
  %64 = sext i32 %22 to i64, !dbg !25
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !25
  %66 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %65, i1 %24) #4, !dbg !26
  %67 = extractvalue { i32, i32 } %66, 0, !dbg !26
  %68 = extractvalue { i32, i32 } %66, 1, !dbg !26
  %69 = bitcast i32 %67 to float, !dbg !26
  %70 = bitcast i32 %68 to float, !dbg !26
  %71 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !27
  %72 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %71, i1 %24) #4, !dbg !28
  %73 = extractvalue { i32, i32 } %72, 0, !dbg !28
  %74 = extractvalue { i32, i32 } %72, 1, !dbg !28
  %75 = bitcast i32 %73 to float, !dbg !28
  %76 = bitcast i32 %74 to float, !dbg !28
  %77 = getelementptr float, ptr addrspace(1) %3, i64 %64, !dbg !29
  %78 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %77, i1 %24) #4, !dbg !30
  %79 = extractvalue { i32, i32 } %78, 0, !dbg !30
  %80 = extractvalue { i32, i32 } %78, 1, !dbg !30
  %81 = bitcast i32 %79 to float, !dbg !30
  %82 = bitcast i32 %80 to float, !dbg !30
  %83 = getelementptr float, ptr addrspace(1) %4, i64 %64, !dbg !31
  %84 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %83, i1 %24) #4, !dbg !32
  %85 = extractvalue { i32, i32 } %84, 0, !dbg !32
  %86 = extractvalue { i32, i32 } %84, 1, !dbg !32
  %87 = bitcast i32 %85 to float, !dbg !32
  %88 = bitcast i32 %86 to float, !dbg !32
  %89 = fsub float %52, %69, !dbg !33
  %90 = fsub float %55, %70, !dbg !33
  %91 = fsub float %59, %69, !dbg !33
  %92 = fsub float %63, %70, !dbg !33
  %93 = fadd float %75, 0x3EE4F8B580000000, !dbg !34
  %94 = fadd float %76, 0x3EE4F8B580000000, !dbg !34
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i = icmp eq i32 %95, 0, !dbg !35
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !35
  %.not1.i = icmp eq i32 %96, 0, !dbg !35
  br i1 %.not.i, label %102, label %97, !dbg !35

97:                                               ; preds = %8
  br i1 %.not1.i, label %100, label %98, !dbg !35

98:                                               ; preds = %97
  %99 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %93) #4, !dbg !35
  br label %__nv_sqrtf.exit, !dbg !35

100:                                              ; preds = %97
  %101 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %93) #4, !dbg !35
  br label %__nv_sqrtf.exit, !dbg !35

102:                                              ; preds = %8
  br i1 %.not1.i, label %105, label %103, !dbg !35

103:                                              ; preds = %102
  %104 = tail call float @llvm.nvvm.sqrt.rn.f(float %93) #4, !dbg !35
  br label %__nv_sqrtf.exit, !dbg !35

105:                                              ; preds = %102
  %106 = tail call float @llvm.nvvm.sqrt.approx.f(float %93) #4, !dbg !35
  br label %__nv_sqrtf.exit, !dbg !35

__nv_sqrtf.exit:                                  ; preds = %98, %100, %103, %105
  %.0.i = phi float [ %99, %98 ], [ %101, %100 ], [ %104, %103 ], [ %106, %105 ], !dbg !35
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i9 = icmp eq i32 %107, 0, !dbg !35
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !35
  %.not1.i12 = icmp eq i32 %108, 0, !dbg !35
  br i1 %.not.i9, label %114, label %109, !dbg !35

109:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i12, label %112, label %110, !dbg !35

110:                                              ; preds = %109
  %111 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %94) #4, !dbg !35
  br label %__nv_sqrtf.exit13, !dbg !35

112:                                              ; preds = %109
  %113 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %94) #4, !dbg !35
  br label %__nv_sqrtf.exit13, !dbg !35

114:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i12, label %117, label %115, !dbg !35

115:                                              ; preds = %114
  %116 = tail call float @llvm.nvvm.sqrt.rn.f(float %94) #4, !dbg !35
  br label %__nv_sqrtf.exit13, !dbg !35

117:                                              ; preds = %114
  %118 = tail call float @llvm.nvvm.sqrt.approx.f(float %94) #4, !dbg !35
  br label %__nv_sqrtf.exit13, !dbg !35

__nv_sqrtf.exit13:                                ; preds = %110, %112, %115, %117
  %.0.i11 = phi float [ %111, %110 ], [ %113, %112 ], [ %116, %115 ], [ %118, %117 ], !dbg !35
  %119 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #4, !dbg !36
  %120 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i11) #4, !dbg !36
  %121 = fmul float %89, %119, !dbg !37
  %122 = fmul float %90, %120, !dbg !37
  %123 = fmul float %91, %119, !dbg !37
  %124 = fmul float %92, %120, !dbg !37
  %125 = fmul float %121, %81, !dbg !38
  %126 = fmul float %122, %82, !dbg !38
  %127 = fmul float %123, %81, !dbg !38
  %128 = fmul float %124, %82, !dbg !38
  %129 = fadd float %125, %87, !dbg !39
  %130 = fadd float %126, %88, !dbg !39
  %131 = fadd float %127, %87, !dbg !39
  %132 = fadd float %128, %88, !dbg !39
  %133 = fcmp ogt float %129, 2.000000e+01, !dbg !40
  %134 = fcmp ogt float %130, 2.000000e+01, !dbg !40
  %135 = fcmp ogt float %131, 2.000000e+01, !dbg !40
  %136 = fcmp ogt float %132, 2.000000e+01, !dbg !40
  %137 = fmul float %129, 0x3FF7154760000000, !dbg !41
  %138 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %137) #4, !dbg !41
  %139 = fmul float %130, 0x3FF7154760000000, !dbg !41
  %140 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %139) #4, !dbg !41
  %141 = fmul float %131, 0x3FF7154760000000, !dbg !41
  %142 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %141) #4, !dbg !41
  %143 = fmul float %132, 0x3FF7154760000000, !dbg !41
  %144 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %143) #4, !dbg !41
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i75 = icmp eq i32 %145, 0, !dbg !42
  %146 = tail call float @llvm.nvvm.add.rz.ftz.f(float %138, float 1.000000e+00) #4, !dbg !42
  %147 = tail call float @llvm.nvvm.add.rz.f(float %138, float 1.000000e+00) #4, !dbg !42
  %.01.i76 = select i1 %.not.i75, float %147, float %146, !dbg !42
  %148 = bitcast float %.01.i76 to i32, !dbg !42
  %149 = add i32 %148, -1061158912, !dbg !42
  %150 = and i32 %149, -8388608, !dbg !42
  %151 = bitcast float %138 to i32, !dbg !42
  %152 = sub i32 %151, %150, !dbg !42
  %153 = bitcast i32 %152 to float, !dbg !42
  %154 = sub i32 1082130432, %150, !dbg !42
  %155 = bitcast i32 %154 to float, !dbg !42
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not14.i = icmp eq i32 %156, 0, !dbg !42
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %155, float -1.000000e+00) #4, !dbg !42
  %158 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %155, float -1.000000e+00) #4, !dbg !42
  %.09.i = select i1 %.not14.i, float %158, float %157, !dbg !42
  %159 = fadd float %.09.i, %153, !dbg !42
  %160 = sitofp i32 %150 to float, !dbg !42
  %161 = fmul float %160, 0x3E80000000000000, !dbg !42
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not15.i = icmp eq i32 %162, 0, !dbg !42
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %159, float 0x3FBB000240000000) #4, !dbg !42
  %164 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %159, float 0x3FBB000240000000) #4, !dbg !42
  %.012.i = select i1 %.not15.i, float %164, float %163, !dbg !42
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not16.i = icmp eq i32 %165, 0, !dbg !42
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %159, float 0xBFC0EF1C00000000) #4, !dbg !42
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %159, float 0xBFC0EF1C00000000) #4, !dbg !42
  %.010.i = select i1 %.not16.i, float %167, float %166, !dbg !42
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not17.i = icmp eq i32 %168, 0, !dbg !42
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %159, float 0x3FC28C8EA0000000) #4, !dbg !42
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %159, float 0x3FC28C8EA0000000) #4, !dbg !42
  %.06.i77 = select i1 %.not17.i, float %170, float %169, !dbg !42
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not18.i = icmp eq i32 %171, 0, !dbg !42
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i77, float %159, float 0xBFC54D1BA0000000) #4, !dbg !42
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i77, float %159, float 0xBFC54D1BA0000000) #4, !dbg !42
  %.02.i78 = select i1 %.not18.i, float %173, float %172, !dbg !42
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not19.i = icmp eq i32 %174, 0, !dbg !42
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i78, float %159, float 0x3FC995F3C0000000) #4, !dbg !42
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i78, float %159, float 0x3FC995F3C0000000) #4, !dbg !42
  %.0.i79 = select i1 %.not19.i, float %176, float %175, !dbg !42
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not20.i = icmp eq i32 %177, 0, !dbg !42
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i79, float %159, float 0xBFD0000840000000) #4, !dbg !42
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i79, float %159, float 0xBFD0000840000000) #4, !dbg !42
  %.011.i = select i1 %.not20.i, float %179, float %178, !dbg !42
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not21.i = icmp eq i32 %180, 0, !dbg !42
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %159, float 0x3FD5555CC0000000) #4, !dbg !42
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %159, float 0x3FD5555CC0000000) #4, !dbg !42
  %.08.i = select i1 %.not21.i, float %182, float %181, !dbg !42
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not22.i = icmp eq i32 %183, 0, !dbg !42
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %159, float -5.000000e-01) #4, !dbg !42
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %159, float -5.000000e-01) #4, !dbg !42
  %.07.i = select i1 %.not22.i, float %185, float %184, !dbg !42
  %186 = fmul float %159, %.07.i, !dbg !42
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not23.i = icmp eq i32 %187, 0, !dbg !42
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %186, float %159, float %159) #4, !dbg !42
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %186, float %159, float %159) #4, !dbg !42
  %.05.i80 = select i1 %.not23.i, float %189, float %188, !dbg !42
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not24.i = icmp eq i32 %190, 0, !dbg !42
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3FE62E4300000000, float %.05.i80) #4, !dbg !42
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3FE62E4300000000, float %.05.i80) #4, !dbg !42
  %.04.i81 = select i1 %.not24.i, float %192, float %191, !dbg !42
  %193 = icmp ugt i32 %151, 2139095039, !dbg !42
  br i1 %193, label %194, label %__nv_log1pf.exit, !dbg !42

194:                                              ; preds = %__nv_sqrtf.exit13
  %195 = icmp sgt i32 %151, -1082130432, !dbg !42
  br i1 %195, label %__nv_fmaf_rn.exit.i, label %199, !dbg !42

__nv_fmaf_rn.exit.i:                              ; preds = %194
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not25.i = icmp eq i32 %196, 0, !dbg !42
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i82 = select i1 %.not25.i, float %198, float %197, !dbg !42
  br label %199, !dbg !42

199:                                              ; preds = %__nv_fmaf_rn.exit.i, %194
  %r.0.i = phi float [ %.03.i82, %__nv_fmaf_rn.exit.i ], [ %.04.i81, %194 ], !dbg !42
  %200 = fcmp oeq float %138, 0.000000e+00, !dbg !42
  %r.1.i = select i1 %200, float -0.000000e+00, float %r.0.i, !dbg !42
  br label %__nv_log1pf.exit, !dbg !42

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit13, %199
  %r.2.i = phi float [ %r.1.i, %199 ], [ %.04.i81, %__nv_sqrtf.exit13 ], !dbg !42
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i83 = icmp eq i32 %201, 0, !dbg !42
  %202 = tail call float @llvm.nvvm.add.rz.ftz.f(float %140, float 1.000000e+00) #4, !dbg !42
  %203 = tail call float @llvm.nvvm.add.rz.f(float %140, float 1.000000e+00) #4, !dbg !42
  %.01.i84 = select i1 %.not.i83, float %203, float %202, !dbg !42
  %204 = bitcast float %.01.i84 to i32, !dbg !42
  %205 = add i32 %204, -1061158912, !dbg !42
  %206 = and i32 %205, -8388608, !dbg !42
  %207 = bitcast float %140 to i32, !dbg !42
  %208 = sub i32 %207, %206, !dbg !42
  %209 = bitcast i32 %208 to float, !dbg !42
  %210 = sub i32 1082130432, %206, !dbg !42
  %211 = bitcast i32 %210 to float, !dbg !42
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not14.i85 = icmp eq i32 %212, 0, !dbg !42
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %211, float -1.000000e+00) #4, !dbg !42
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %211, float -1.000000e+00) #4, !dbg !42
  %.09.i86 = select i1 %.not14.i85, float %214, float %213, !dbg !42
  %215 = fadd float %.09.i86, %209, !dbg !42
  %216 = sitofp i32 %206 to float, !dbg !42
  %217 = fmul float %216, 0x3E80000000000000, !dbg !42
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not15.i87 = icmp eq i32 %218, 0, !dbg !42
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %215, float 0x3FBB000240000000) #4, !dbg !42
  %220 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %215, float 0x3FBB000240000000) #4, !dbg !42
  %.012.i88 = select i1 %.not15.i87, float %220, float %219, !dbg !42
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not16.i89 = icmp eq i32 %221, 0, !dbg !42
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i88, float %215, float 0xBFC0EF1C00000000) #4, !dbg !42
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i88, float %215, float 0xBFC0EF1C00000000) #4, !dbg !42
  %.010.i90 = select i1 %.not16.i89, float %223, float %222, !dbg !42
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not17.i91 = icmp eq i32 %224, 0, !dbg !42
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i90, float %215, float 0x3FC28C8EA0000000) #4, !dbg !42
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i90, float %215, float 0x3FC28C8EA0000000) #4, !dbg !42
  %.06.i92 = select i1 %.not17.i91, float %226, float %225, !dbg !42
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not18.i93 = icmp eq i32 %227, 0, !dbg !42
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i92, float %215, float 0xBFC54D1BA0000000) #4, !dbg !42
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i92, float %215, float 0xBFC54D1BA0000000) #4, !dbg !42
  %.02.i94 = select i1 %.not18.i93, float %229, float %228, !dbg !42
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not19.i95 = icmp eq i32 %230, 0, !dbg !42
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i94, float %215, float 0x3FC995F3C0000000) #4, !dbg !42
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i94, float %215, float 0x3FC995F3C0000000) #4, !dbg !42
  %.0.i96 = select i1 %.not19.i95, float %232, float %231, !dbg !42
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not20.i97 = icmp eq i32 %233, 0, !dbg !42
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i96, float %215, float 0xBFD0000840000000) #4, !dbg !42
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i96, float %215, float 0xBFD0000840000000) #4, !dbg !42
  %.011.i98 = select i1 %.not20.i97, float %235, float %234, !dbg !42
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not21.i99 = icmp eq i32 %236, 0, !dbg !42
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i98, float %215, float 0x3FD5555CC0000000) #4, !dbg !42
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i98, float %215, float 0x3FD5555CC0000000) #4, !dbg !42
  %.08.i100 = select i1 %.not21.i99, float %238, float %237, !dbg !42
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not22.i101 = icmp eq i32 %239, 0, !dbg !42
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i100, float %215, float -5.000000e-01) #4, !dbg !42
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i100, float %215, float -5.000000e-01) #4, !dbg !42
  %.07.i102 = select i1 %.not22.i101, float %241, float %240, !dbg !42
  %242 = fmul float %215, %.07.i102, !dbg !42
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not23.i103 = icmp eq i32 %243, 0, !dbg !42
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %242, float %215, float %215) #4, !dbg !42
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %242, float %215, float %215) #4, !dbg !42
  %.05.i104 = select i1 %.not23.i103, float %245, float %244, !dbg !42
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not24.i105 = icmp eq i32 %246, 0, !dbg !42
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %217, float 0x3FE62E4300000000, float %.05.i104) #4, !dbg !42
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %217, float 0x3FE62E4300000000, float %.05.i104) #4, !dbg !42
  %.04.i106 = select i1 %.not24.i105, float %248, float %247, !dbg !42
  %249 = icmp ugt i32 %207, 2139095039, !dbg !42
  br i1 %249, label %250, label %__nv_log1pf.exit113, !dbg !42

250:                                              ; preds = %__nv_log1pf.exit
  %251 = icmp sgt i32 %207, -1082130432, !dbg !42
  br i1 %251, label %__nv_fmaf_rn.exit.i110, label %255, !dbg !42

__nv_fmaf_rn.exit.i110:                           ; preds = %250
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not25.i111 = icmp eq i32 %252, 0, !dbg !42
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %140, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i112 = select i1 %.not25.i111, float %254, float %253, !dbg !42
  br label %255, !dbg !42

255:                                              ; preds = %__nv_fmaf_rn.exit.i110, %250
  %r.0.i108 = phi float [ %.03.i112, %__nv_fmaf_rn.exit.i110 ], [ %.04.i106, %250 ], !dbg !42
  %256 = fcmp oeq float %140, 0.000000e+00, !dbg !42
  %r.1.i109 = select i1 %256, float -0.000000e+00, float %r.0.i108, !dbg !42
  br label %__nv_log1pf.exit113, !dbg !42

__nv_log1pf.exit113:                              ; preds = %__nv_log1pf.exit, %255
  %r.2.i107 = phi float [ %r.1.i109, %255 ], [ %.04.i106, %__nv_log1pf.exit ], !dbg !42
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i114 = icmp eq i32 %257, 0, !dbg !42
  %258 = tail call float @llvm.nvvm.add.rz.ftz.f(float %142, float 1.000000e+00) #4, !dbg !42
  %259 = tail call float @llvm.nvvm.add.rz.f(float %142, float 1.000000e+00) #4, !dbg !42
  %.01.i115 = select i1 %.not.i114, float %259, float %258, !dbg !42
  %260 = bitcast float %.01.i115 to i32, !dbg !42
  %261 = add i32 %260, -1061158912, !dbg !42
  %262 = and i32 %261, -8388608, !dbg !42
  %263 = bitcast float %142 to i32, !dbg !42
  %264 = sub i32 %263, %262, !dbg !42
  %265 = bitcast i32 %264 to float, !dbg !42
  %266 = sub i32 1082130432, %262, !dbg !42
  %267 = bitcast i32 %266 to float, !dbg !42
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not14.i116 = icmp eq i32 %268, 0, !dbg !42
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %267, float -1.000000e+00) #4, !dbg !42
  %270 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %267, float -1.000000e+00) #4, !dbg !42
  %.09.i117 = select i1 %.not14.i116, float %270, float %269, !dbg !42
  %271 = fadd float %.09.i117, %265, !dbg !42
  %272 = sitofp i32 %262 to float, !dbg !42
  %273 = fmul float %272, 0x3E80000000000000, !dbg !42
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not15.i118 = icmp eq i32 %274, 0, !dbg !42
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %271, float 0x3FBB000240000000) #4, !dbg !42
  %276 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %271, float 0x3FBB000240000000) #4, !dbg !42
  %.012.i119 = select i1 %.not15.i118, float %276, float %275, !dbg !42
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not16.i120 = icmp eq i32 %277, 0, !dbg !42
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i119, float %271, float 0xBFC0EF1C00000000) #4, !dbg !42
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i119, float %271, float 0xBFC0EF1C00000000) #4, !dbg !42
  %.010.i121 = select i1 %.not16.i120, float %279, float %278, !dbg !42
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not17.i122 = icmp eq i32 %280, 0, !dbg !42
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i121, float %271, float 0x3FC28C8EA0000000) #4, !dbg !42
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i121, float %271, float 0x3FC28C8EA0000000) #4, !dbg !42
  %.06.i123 = select i1 %.not17.i122, float %282, float %281, !dbg !42
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not18.i124 = icmp eq i32 %283, 0, !dbg !42
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i123, float %271, float 0xBFC54D1BA0000000) #4, !dbg !42
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i123, float %271, float 0xBFC54D1BA0000000) #4, !dbg !42
  %.02.i125 = select i1 %.not18.i124, float %285, float %284, !dbg !42
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not19.i126 = icmp eq i32 %286, 0, !dbg !42
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i125, float %271, float 0x3FC995F3C0000000) #4, !dbg !42
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i125, float %271, float 0x3FC995F3C0000000) #4, !dbg !42
  %.0.i127 = select i1 %.not19.i126, float %288, float %287, !dbg !42
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not20.i128 = icmp eq i32 %289, 0, !dbg !42
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i127, float %271, float 0xBFD0000840000000) #4, !dbg !42
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i127, float %271, float 0xBFD0000840000000) #4, !dbg !42
  %.011.i129 = select i1 %.not20.i128, float %291, float %290, !dbg !42
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not21.i130 = icmp eq i32 %292, 0, !dbg !42
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i129, float %271, float 0x3FD5555CC0000000) #4, !dbg !42
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i129, float %271, float 0x3FD5555CC0000000) #4, !dbg !42
  %.08.i131 = select i1 %.not21.i130, float %294, float %293, !dbg !42
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not22.i132 = icmp eq i32 %295, 0, !dbg !42
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i131, float %271, float -5.000000e-01) #4, !dbg !42
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i131, float %271, float -5.000000e-01) #4, !dbg !42
  %.07.i133 = select i1 %.not22.i132, float %297, float %296, !dbg !42
  %298 = fmul float %271, %.07.i133, !dbg !42
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not23.i134 = icmp eq i32 %299, 0, !dbg !42
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %298, float %271, float %271) #4, !dbg !42
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %298, float %271, float %271) #4, !dbg !42
  %.05.i135 = select i1 %.not23.i134, float %301, float %300, !dbg !42
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not24.i136 = icmp eq i32 %302, 0, !dbg !42
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %273, float 0x3FE62E4300000000, float %.05.i135) #4, !dbg !42
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %273, float 0x3FE62E4300000000, float %.05.i135) #4, !dbg !42
  %.04.i137 = select i1 %.not24.i136, float %304, float %303, !dbg !42
  %305 = icmp ugt i32 %263, 2139095039, !dbg !42
  br i1 %305, label %306, label %__nv_log1pf.exit144, !dbg !42

306:                                              ; preds = %__nv_log1pf.exit113
  %307 = icmp sgt i32 %263, -1082130432, !dbg !42
  br i1 %307, label %__nv_fmaf_rn.exit.i141, label %311, !dbg !42

__nv_fmaf_rn.exit.i141:                           ; preds = %306
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not25.i142 = icmp eq i32 %308, 0, !dbg !42
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %142, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i143 = select i1 %.not25.i142, float %310, float %309, !dbg !42
  br label %311, !dbg !42

311:                                              ; preds = %__nv_fmaf_rn.exit.i141, %306
  %r.0.i139 = phi float [ %.03.i143, %__nv_fmaf_rn.exit.i141 ], [ %.04.i137, %306 ], !dbg !42
  %312 = fcmp oeq float %142, 0.000000e+00, !dbg !42
  %r.1.i140 = select i1 %312, float -0.000000e+00, float %r.0.i139, !dbg !42
  br label %__nv_log1pf.exit144, !dbg !42

__nv_log1pf.exit144:                              ; preds = %__nv_log1pf.exit113, %311
  %r.2.i138 = phi float [ %r.1.i140, %311 ], [ %.04.i137, %__nv_log1pf.exit113 ], !dbg !42
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i145 = icmp eq i32 %313, 0, !dbg !42
  %314 = tail call float @llvm.nvvm.add.rz.ftz.f(float %144, float 1.000000e+00) #4, !dbg !42
  %315 = tail call float @llvm.nvvm.add.rz.f(float %144, float 1.000000e+00) #4, !dbg !42
  %.01.i146 = select i1 %.not.i145, float %315, float %314, !dbg !42
  %316 = bitcast float %.01.i146 to i32, !dbg !42
  %317 = add i32 %316, -1061158912, !dbg !42
  %318 = and i32 %317, -8388608, !dbg !42
  %319 = bitcast float %144 to i32, !dbg !42
  %320 = sub i32 %319, %318, !dbg !42
  %321 = bitcast i32 %320 to float, !dbg !42
  %322 = sub i32 1082130432, %318, !dbg !42
  %323 = bitcast i32 %322 to float, !dbg !42
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not14.i147 = icmp eq i32 %324, 0, !dbg !42
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %323, float -1.000000e+00) #4, !dbg !42
  %326 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %323, float -1.000000e+00) #4, !dbg !42
  %.09.i148 = select i1 %.not14.i147, float %326, float %325, !dbg !42
  %327 = fadd float %.09.i148, %321, !dbg !42
  %328 = sitofp i32 %318 to float, !dbg !42
  %329 = fmul float %328, 0x3E80000000000000, !dbg !42
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not15.i149 = icmp eq i32 %330, 0, !dbg !42
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %327, float 0x3FBB000240000000) #4, !dbg !42
  %332 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %327, float 0x3FBB000240000000) #4, !dbg !42
  %.012.i150 = select i1 %.not15.i149, float %332, float %331, !dbg !42
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not16.i151 = icmp eq i32 %333, 0, !dbg !42
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i150, float %327, float 0xBFC0EF1C00000000) #4, !dbg !42
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i150, float %327, float 0xBFC0EF1C00000000) #4, !dbg !42
  %.010.i152 = select i1 %.not16.i151, float %335, float %334, !dbg !42
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not17.i153 = icmp eq i32 %336, 0, !dbg !42
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %327, float 0x3FC28C8EA0000000) #4, !dbg !42
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %327, float 0x3FC28C8EA0000000) #4, !dbg !42
  %.06.i154 = select i1 %.not17.i153, float %338, float %337, !dbg !42
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not18.i155 = icmp eq i32 %339, 0, !dbg !42
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i154, float %327, float 0xBFC54D1BA0000000) #4, !dbg !42
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i154, float %327, float 0xBFC54D1BA0000000) #4, !dbg !42
  %.02.i156 = select i1 %.not18.i155, float %341, float %340, !dbg !42
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not19.i157 = icmp eq i32 %342, 0, !dbg !42
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i156, float %327, float 0x3FC995F3C0000000) #4, !dbg !42
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i156, float %327, float 0x3FC995F3C0000000) #4, !dbg !42
  %.0.i158 = select i1 %.not19.i157, float %344, float %343, !dbg !42
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not20.i159 = icmp eq i32 %345, 0, !dbg !42
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i158, float %327, float 0xBFD0000840000000) #4, !dbg !42
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i158, float %327, float 0xBFD0000840000000) #4, !dbg !42
  %.011.i160 = select i1 %.not20.i159, float %347, float %346, !dbg !42
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not21.i161 = icmp eq i32 %348, 0, !dbg !42
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i160, float %327, float 0x3FD5555CC0000000) #4, !dbg !42
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i160, float %327, float 0x3FD5555CC0000000) #4, !dbg !42
  %.08.i162 = select i1 %.not21.i161, float %350, float %349, !dbg !42
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not22.i163 = icmp eq i32 %351, 0, !dbg !42
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i162, float %327, float -5.000000e-01) #4, !dbg !42
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i162, float %327, float -5.000000e-01) #4, !dbg !42
  %.07.i164 = select i1 %.not22.i163, float %353, float %352, !dbg !42
  %354 = fmul float %327, %.07.i164, !dbg !42
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not23.i165 = icmp eq i32 %355, 0, !dbg !42
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float %327, float %327) #4, !dbg !42
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %354, float %327, float %327) #4, !dbg !42
  %.05.i166 = select i1 %.not23.i165, float %357, float %356, !dbg !42
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not24.i167 = icmp eq i32 %358, 0, !dbg !42
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %329, float 0x3FE62E4300000000, float %.05.i166) #4, !dbg !42
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %329, float 0x3FE62E4300000000, float %.05.i166) #4, !dbg !42
  %.04.i168 = select i1 %.not24.i167, float %360, float %359, !dbg !42
  %361 = icmp ugt i32 %319, 2139095039, !dbg !42
  br i1 %361, label %362, label %__nv_log1pf.exit175, !dbg !42

362:                                              ; preds = %__nv_log1pf.exit144
  %363 = icmp sgt i32 %319, -1082130432, !dbg !42
  br i1 %363, label %__nv_fmaf_rn.exit.i172, label %367, !dbg !42

__nv_fmaf_rn.exit.i172:                           ; preds = %362
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not25.i173 = icmp eq i32 %364, 0, !dbg !42
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %144, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !42
  %.03.i174 = select i1 %.not25.i173, float %366, float %365, !dbg !42
  br label %367, !dbg !42

367:                                              ; preds = %__nv_fmaf_rn.exit.i172, %362
  %r.0.i170 = phi float [ %.03.i174, %__nv_fmaf_rn.exit.i172 ], [ %.04.i168, %362 ], !dbg !42
  %368 = fcmp oeq float %144, 0.000000e+00, !dbg !42
  %r.1.i171 = select i1 %368, float -0.000000e+00, float %r.0.i170, !dbg !42
  br label %__nv_log1pf.exit175, !dbg !42

__nv_log1pf.exit175:                              ; preds = %__nv_log1pf.exit144, %367
  %r.2.i169 = phi float [ %r.1.i171, %367 ], [ %.04.i168, %__nv_log1pf.exit144 ], !dbg !42
  %369 = select i1 %133, float %129, float %r.2.i, !dbg !43
  %370 = select i1 %134, float %130, float %r.2.i107, !dbg !43
  %371 = select i1 %135, float %131, float %r.2.i138, !dbg !43
  %372 = select i1 %136, float %132, float %r.2.i169, !dbg !43
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not.i14 = icmp eq i32 %373, 0, !dbg !44
  %374 = tail call float @llvm.nvvm.fabs.ftz.f(float %369) #4, !dbg !44
  %375 = tail call float @llvm.nvvm.fabs.f(float %369) #4, !dbg !44
  %.01.i = select i1 %.not.i14, float %375, float %374, !dbg !44
  %376 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !44
  br i1 %376, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !44

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit175
  %377 = fmul float %.01.i, 0x4007154760000000, !dbg !44
  %378 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %377) #4, !dbg !44
  %379 = fadd float %378, 1.000000e+00, !dbg !44
  %380 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %379) #5, !dbg !44, !srcloc !45
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not6.i = icmp eq i32 %381, 0, !dbg !44
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %380, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %380, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %.03.i = select i1 %.not6.i, float %383, float %382, !dbg !44
  %384 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !44
  %s.0.i = select i1 %384, float 1.000000e+00, float %.03.i, !dbg !44
  %385 = bitcast float %s.0.i to i32, !dbg !44
  %386 = bitcast float %369 to i32, !dbg !44
  %387 = and i32 %386, -2147483648, !dbg !44
  %388 = or i32 %387, %385, !dbg !44
  %389 = bitcast i32 %388 to float, !dbg !44
  br label %__nv_tanhf.exit, !dbg !44

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit175
  %390 = fmul float %369, %369, !dbg !44
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not1.i15 = icmp eq i32 %391, 0, !dbg !44
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %390, float 0xBFAAC795C0000000) #4, !dbg !44
  %393 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %390, float 0xBFAAC795C0000000) #4, !dbg !44
  %.06.i = select i1 %.not1.i15, float %393, float %392, !dbg !44
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not2.i16 = icmp eq i32 %394, 0, !dbg !44
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %390, float 0x3FC10B2820000000) #4, !dbg !44
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %390, float 0x3FC10B2820000000) #4, !dbg !44
  %.05.i = select i1 %.not2.i16, float %396, float %395, !dbg !44
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not3.i = icmp eq i32 %397, 0, !dbg !44
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %390, float 0xBFD5553DA0000000) #4, !dbg !44
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %390, float 0xBFD5553DA0000000) #4, !dbg !44
  %.0.i17 = select i1 %.not3.i, float %399, float %398, !dbg !44
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not4.i = icmp eq i32 %400, 0, !dbg !44
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i17, float %390, float 0.000000e+00) #4, !dbg !44
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i17, float %390, float 0.000000e+00) #4, !dbg !44
  %.04.i = select i1 %.not4.i, float %402, float %401, !dbg !44
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not5.i = icmp eq i32 %403, 0, !dbg !44
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %369, float %369) #4, !dbg !44
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %369, float %369) #4, !dbg !44
  %.02.i = select i1 %.not5.i, float %405, float %404, !dbg !44
  br label %__nv_tanhf.exit, !dbg !44

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %389, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !44
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not.i18 = icmp eq i32 %406, 0, !dbg !44
  %407 = tail call float @llvm.nvvm.fabs.ftz.f(float %370) #4, !dbg !44
  %408 = tail call float @llvm.nvvm.fabs.f(float %370) #4, !dbg !44
  %.01.i19 = select i1 %.not.i18, float %408, float %407, !dbg !44
  %409 = fcmp ult float %.01.i19, 0x3FE3333340000000, !dbg !44
  br i1 %409, label %__internal_fmad.exit3.i25, label %__internal_fmad.exit1.i20, !dbg !44

__internal_fmad.exit1.i20:                        ; preds = %__nv_tanhf.exit
  %410 = fmul float %.01.i19, 0x4007154760000000, !dbg !44
  %411 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %410) #4, !dbg !44
  %412 = fadd float %411, 1.000000e+00, !dbg !44
  %413 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %412) #5, !dbg !44, !srcloc !45
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not6.i21 = icmp eq i32 %414, 0, !dbg !44
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %413, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %413, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %.03.i22 = select i1 %.not6.i21, float %416, float %415, !dbg !44
  %417 = fcmp oge float %.01.i19, 0x4022059680000000, !dbg !44
  %s.0.i23 = select i1 %417, float 1.000000e+00, float %.03.i22, !dbg !44
  %418 = bitcast float %s.0.i23 to i32, !dbg !44
  %419 = bitcast float %370 to i32, !dbg !44
  %420 = and i32 %419, -2147483648, !dbg !44
  %421 = or i32 %420, %418, !dbg !44
  %422 = bitcast i32 %421 to float, !dbg !44
  br label %__nv_tanhf.exit36, !dbg !44

__internal_fmad.exit3.i25:                        ; preds = %__nv_tanhf.exit
  %423 = fmul float %370, %370, !dbg !44
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not1.i26 = icmp eq i32 %424, 0, !dbg !44
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %423, float 0xBFAAC795C0000000) #4, !dbg !44
  %426 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %423, float 0xBFAAC795C0000000) #4, !dbg !44
  %.06.i27 = select i1 %.not1.i26, float %426, float %425, !dbg !44
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not2.i28 = icmp eq i32 %427, 0, !dbg !44
  %428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i27, float %423, float 0x3FC10B2820000000) #4, !dbg !44
  %429 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i27, float %423, float 0x3FC10B2820000000) #4, !dbg !44
  %.05.i29 = select i1 %.not2.i28, float %429, float %428, !dbg !44
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not3.i30 = icmp eq i32 %430, 0, !dbg !44
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i29, float %423, float 0xBFD5553DA0000000) #4, !dbg !44
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i29, float %423, float 0xBFD5553DA0000000) #4, !dbg !44
  %.0.i31 = select i1 %.not3.i30, float %432, float %431, !dbg !44
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not4.i32 = icmp eq i32 %433, 0, !dbg !44
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i31, float %423, float 0.000000e+00) #4, !dbg !44
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i31, float %423, float 0.000000e+00) #4, !dbg !44
  %.04.i33 = select i1 %.not4.i32, float %435, float %434, !dbg !44
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not5.i34 = icmp eq i32 %436, 0, !dbg !44
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i33, float %370, float %370) #4, !dbg !44
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i33, float %370, float %370) #4, !dbg !44
  %.02.i35 = select i1 %.not5.i34, float %438, float %437, !dbg !44
  br label %__nv_tanhf.exit36, !dbg !44

__nv_tanhf.exit36:                                ; preds = %__internal_fmad.exit1.i20, %__internal_fmad.exit3.i25
  %s.1.i24 = phi float [ %422, %__internal_fmad.exit1.i20 ], [ %.02.i35, %__internal_fmad.exit3.i25 ], !dbg !44
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not.i37 = icmp eq i32 %439, 0, !dbg !44
  %440 = tail call float @llvm.nvvm.fabs.ftz.f(float %371) #4, !dbg !44
  %441 = tail call float @llvm.nvvm.fabs.f(float %371) #4, !dbg !44
  %.01.i38 = select i1 %.not.i37, float %441, float %440, !dbg !44
  %442 = fcmp ult float %.01.i38, 0x3FE3333340000000, !dbg !44
  br i1 %442, label %__internal_fmad.exit3.i44, label %__internal_fmad.exit1.i39, !dbg !44

__internal_fmad.exit1.i39:                        ; preds = %__nv_tanhf.exit36
  %443 = fmul float %.01.i38, 0x4007154760000000, !dbg !44
  %444 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %443) #4, !dbg !44
  %445 = fadd float %444, 1.000000e+00, !dbg !44
  %446 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %445) #5, !dbg !44, !srcloc !45
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not6.i40 = icmp eq i32 %447, 0, !dbg !44
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %446, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %446, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %.03.i41 = select i1 %.not6.i40, float %449, float %448, !dbg !44
  %450 = fcmp oge float %.01.i38, 0x4022059680000000, !dbg !44
  %s.0.i42 = select i1 %450, float 1.000000e+00, float %.03.i41, !dbg !44
  %451 = bitcast float %s.0.i42 to i32, !dbg !44
  %452 = bitcast float %371 to i32, !dbg !44
  %453 = and i32 %452, -2147483648, !dbg !44
  %454 = or i32 %453, %451, !dbg !44
  %455 = bitcast i32 %454 to float, !dbg !44
  br label %__nv_tanhf.exit55, !dbg !44

__internal_fmad.exit3.i44:                        ; preds = %__nv_tanhf.exit36
  %456 = fmul float %371, %371, !dbg !44
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not1.i45 = icmp eq i32 %457, 0, !dbg !44
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %456, float 0xBFAAC795C0000000) #4, !dbg !44
  %459 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %456, float 0xBFAAC795C0000000) #4, !dbg !44
  %.06.i46 = select i1 %.not1.i45, float %459, float %458, !dbg !44
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not2.i47 = icmp eq i32 %460, 0, !dbg !44
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %456, float 0x3FC10B2820000000) #4, !dbg !44
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %456, float 0x3FC10B2820000000) #4, !dbg !44
  %.05.i48 = select i1 %.not2.i47, float %462, float %461, !dbg !44
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not3.i49 = icmp eq i32 %463, 0, !dbg !44
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i48, float %456, float 0xBFD5553DA0000000) #4, !dbg !44
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i48, float %456, float 0xBFD5553DA0000000) #4, !dbg !44
  %.0.i50 = select i1 %.not3.i49, float %465, float %464, !dbg !44
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not4.i51 = icmp eq i32 %466, 0, !dbg !44
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %456, float 0.000000e+00) #4, !dbg !44
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %456, float 0.000000e+00) #4, !dbg !44
  %.04.i52 = select i1 %.not4.i51, float %468, float %467, !dbg !44
  %469 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not5.i53 = icmp eq i32 %469, 0, !dbg !44
  %470 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i52, float %371, float %371) #4, !dbg !44
  %471 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i52, float %371, float %371) #4, !dbg !44
  %.02.i54 = select i1 %.not5.i53, float %471, float %470, !dbg !44
  br label %__nv_tanhf.exit55, !dbg !44

__nv_tanhf.exit55:                                ; preds = %__internal_fmad.exit1.i39, %__internal_fmad.exit3.i44
  %s.1.i43 = phi float [ %455, %__internal_fmad.exit1.i39 ], [ %.02.i54, %__internal_fmad.exit3.i44 ], !dbg !44
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not.i56 = icmp eq i32 %472, 0, !dbg !44
  %473 = tail call float @llvm.nvvm.fabs.ftz.f(float %372) #4, !dbg !44
  %474 = tail call float @llvm.nvvm.fabs.f(float %372) #4, !dbg !44
  %.01.i57 = select i1 %.not.i56, float %474, float %473, !dbg !44
  %475 = fcmp ult float %.01.i57, 0x3FE3333340000000, !dbg !44
  br i1 %475, label %__internal_fmad.exit3.i63, label %__internal_fmad.exit1.i58, !dbg !44

__internal_fmad.exit1.i58:                        ; preds = %__nv_tanhf.exit55
  %476 = fmul float %.01.i57, 0x4007154760000000, !dbg !44
  %477 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %476) #4, !dbg !44
  %478 = fadd float %477, 1.000000e+00, !dbg !44
  %479 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %478) #5, !dbg !44, !srcloc !45
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not6.i59 = icmp eq i32 %480, 0, !dbg !44
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %479, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %479, float -2.000000e+00, float 1.000000e+00) #4, !dbg !44
  %.03.i60 = select i1 %.not6.i59, float %482, float %481, !dbg !44
  %483 = fcmp oge float %.01.i57, 0x4022059680000000, !dbg !44
  %s.0.i61 = select i1 %483, float 1.000000e+00, float %.03.i60, !dbg !44
  %484 = bitcast float %s.0.i61 to i32, !dbg !44
  %485 = bitcast float %372 to i32, !dbg !44
  %486 = and i32 %485, -2147483648, !dbg !44
  %487 = or i32 %486, %484, !dbg !44
  %488 = bitcast i32 %487 to float, !dbg !44
  br label %__nv_tanhf.exit74, !dbg !44

__internal_fmad.exit3.i63:                        ; preds = %__nv_tanhf.exit55
  %489 = fmul float %372, %372, !dbg !44
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not1.i64 = icmp eq i32 %490, 0, !dbg !44
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %489, float 0xBFAAC795C0000000) #4, !dbg !44
  %492 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %489, float 0xBFAAC795C0000000) #4, !dbg !44
  %.06.i65 = select i1 %.not1.i64, float %492, float %491, !dbg !44
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not2.i66 = icmp eq i32 %493, 0, !dbg !44
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i65, float %489, float 0x3FC10B2820000000) #4, !dbg !44
  %495 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i65, float %489, float 0x3FC10B2820000000) #4, !dbg !44
  %.05.i67 = select i1 %.not2.i66, float %495, float %494, !dbg !44
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not3.i68 = icmp eq i32 %496, 0, !dbg !44
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i67, float %489, float 0xBFD5553DA0000000) #4, !dbg !44
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i67, float %489, float 0xBFD5553DA0000000) #4, !dbg !44
  %.0.i69 = select i1 %.not3.i68, float %498, float %497, !dbg !44
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not4.i70 = icmp eq i32 %499, 0, !dbg !44
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i69, float %489, float 0.000000e+00) #4, !dbg !44
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i69, float %489, float 0.000000e+00) #4, !dbg !44
  %.04.i71 = select i1 %.not4.i70, float %501, float %500, !dbg !44
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !44
  %.not5.i72 = icmp eq i32 %502, 0, !dbg !44
  %503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i71, float %372, float %372) #4, !dbg !44
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i71, float %372, float %372) #4, !dbg !44
  %.02.i73 = select i1 %.not5.i72, float %504, float %503, !dbg !44
  br label %__nv_tanhf.exit74, !dbg !44

__nv_tanhf.exit74:                                ; preds = %__internal_fmad.exit1.i58, %__internal_fmad.exit3.i63
  %s.1.i62 = phi float [ %488, %__internal_fmad.exit1.i58 ], [ %.02.i73, %__internal_fmad.exit3.i63 ], !dbg !44
  %505 = and i32 %11, 127, !dbg !17
  %506 = or disjoint i32 %505, %16, !dbg !18
  %507 = or disjoint i32 %506, 128, !dbg !18
  %508 = icmp slt i32 %507, 256, !dbg !19
  %509 = icmp slt i32 %10, 256, !dbg !14
  %510 = and i1 %509, %508, !dbg !23
  %511 = icmp slt i32 %506, 256, !dbg !19
  %512 = and i1 %509, %511, !dbg !23
  %.frozen = freeze i32 %10, !dbg !46
  %513 = sdiv i32 %.frozen, 64, !dbg !46
  %514 = mul i32 %513, 64, !dbg !47
  %.decomposed = sub i32 %.frozen, %514, !dbg !47
  %515 = fmul float %129, %s.1.i, !dbg !48
  %516 = fmul float %130, %s.1.i24, !dbg !48
  %517 = fmul float %131, %s.1.i43, !dbg !48
  %518 = fmul float %132, %s.1.i62, !dbg !48
  %519 = shl i32 %506, 6, !dbg !49
  %520 = shl i32 %507, 6, !dbg !49
  %521 = shl i32 %513, 14, !dbg !50
  %522 = add i32 %521, %.decomposed, !dbg !51
  %523 = add i32 %522, %519, !dbg !52
  %524 = add i32 %522, %520, !dbg !52
  %525 = sext i32 %523 to i64, !dbg !53
  %526 = getelementptr float, ptr addrspace(1) %5, i64 %525, !dbg !53
  %527 = sext i32 %524 to i64, !dbg !53
  %528 = getelementptr float, ptr addrspace(1) %5, i64 %527, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %.idx = shl nuw nsw i32 %35, 3, !dbg !54
  %529 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !54
  %530 = bitcast float %515 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %529, <1 x i32> %530, i1 true) #4, !dbg !54
  %.idx2 = shl nuw nsw i32 %44, 3, !dbg !54
  %531 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx2, !dbg !54
  %532 = bitcast float %516 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %531, <1 x i32> %532, i1 true) #4, !dbg !54
  %533 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %35, !dbg !54
  %534 = getelementptr inbounds float, ptr addrspace(3) %533, i32 %40, !dbg !54
  %535 = bitcast float %517 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %534, <1 x i32> %535, i1 true) #4, !dbg !54
  %536 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %44, !dbg !54
  %537 = getelementptr inbounds float, ptr addrspace(3) %536, i32 %48, !dbg !54
  %538 = bitcast float %518 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %537, <1 x i32> %538, i1 true) #4, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %539 = getelementptr float, ptr addrspace(3) %51, i32 %20, !dbg !54
  %540 = getelementptr float, ptr addrspace(3) %57, i32 %56, !dbg !54
  %541 = load <2 x i32>, ptr addrspace(3) %540, align 8, !dbg !54
  %.extract = load i32, ptr addrspace(3) %539, align 8, !dbg !54
  %542 = getelementptr inbounds i8, ptr addrspace(3) %539, i32 4, !dbg !54
  %.extract6 = load i32, ptr addrspace(3) %542, align 4, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract6, ptr addrspace(1) %526, i1 %512) #4, !dbg !54
  %.extract7 = extractelement <2 x i32> %541, i64 0, !dbg !54
  %.extract8 = extractelement <2 x i32> %541, i64 1, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract7, i32 %.extract8, ptr addrspace(1) %528, i1 %510) #4, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctsqsqz33xavaaahcs25oxfy3xxqqkiacskihjlkgwpl7yelluaa.py", directory: "inductor_cache/ts")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 52, scope: !7)
!24 = !DILocation(line: 32, column: 44, scope: !7)
!25 = !DILocation(line: 33, column: 30, scope: !7)
!26 = !DILocation(line: 33, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 35, scope: !7)
!29 = !DILocation(line: 35, column: 31, scope: !7)
!30 = !DILocation(line: 35, column: 36, scope: !7)
!31 = !DILocation(line: 36, column: 31, scope: !7)
!32 = !DILocation(line: 36, column: 36, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 39, column: 18, scope: !7)
!35 = !DILocation(line: 40, column: 26, scope: !7)
!36 = !DILocation(line: 42, column: 18, scope: !7)
!37 = !DILocation(line: 45, column: 19, scope: !7)
!38 = !DILocation(line: 46, column: 20, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 49, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 24, scope: !7)
!42 = !DILocation(line: 51, column: 28, scope: !7)
!43 = !DILocation(line: 52, column: 35, scope: !7)
!44 = !DILocation(line: 53, column: 27, scope: !7)
!45 = !{i32 21046}
!46 = !DILocation(line: 31, column: 19, scope: !7)
!47 = !DILocation(line: 30, column: 19, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 33, scope: !7)
!50 = !DILocation(line: 55, column: 44, scope: !7)
!51 = !DILocation(line: 55, column: 30, scope: !7)
!52 = !DILocation(line: 55, column: 38, scope: !7)
!53 = !DILocation(line: 55, column: 25, scope: !7)
!54 = !DILocation(line: 55, column: 56, scope: !7)
!55 = !DILocation(line: 55, column: 4, scope: !7)
