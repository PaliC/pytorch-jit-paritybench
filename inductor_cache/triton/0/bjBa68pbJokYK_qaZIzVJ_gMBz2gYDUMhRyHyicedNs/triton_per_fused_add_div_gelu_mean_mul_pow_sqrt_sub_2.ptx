//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2 // -- Begin function triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.visible .entry triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_6,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<153>;
	.reg .f32 	%f<509>;
	.reg .b64 	%rd<23>;
$L__func_begin0:

// %bb.0:                               // %__nv_sqrtf.exit
	.loc	1 23 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:33
	shl.b32 	%r1, %r6, 7;
	.loc	1 24 44                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:44
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd10, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3];
	ld.param.u64 	%rd11, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4];
	bfe.u32 	%r81, %r2, 2, 6;
	ld.param.u64 	%rd12, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5];
	and.b32  	%r3, %r2, 127;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r4, %r1, %r81;
	or.b32  	%r5, %r4, 64;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p1, %r4, 1024;
	setp.lt.s32 	%p6, %r5, 1024;
	.loc	1 26 34                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:26:34
	shl.b32 	%r82, %r2, 2;
	and.b32  	%r83, %r82, 12;
	.loc	1 31 38                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:38
	shl.b32 	%r84, %r4, 4;
	shl.b32 	%r85, %r5, 4;
	.loc	1 31 35                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:35
	or.b32  	%r86, %r84, %r83;
	or.b32  	%r87, %r85, %r83;
	.loc	1 31 30                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:30
	mul.wide.s32 	%rd13, %r86, 4;
	add.s64 	%rd6, %rd10, %rd13;
	mul.wide.s32 	%rd14, %r87, 4;
	add.s64 	%rd7, %rd10, %rd14;
	mov.b32 	%r11, 0;
	.loc	1 31 43                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r7, %r11;
	@!%p1 mov.u32 %r8, %r11;
	@!%p1 mov.u32 %r9, %r11;
	@!%p1 mov.u32 %r10, %r11;
	// end inline asm
	mov.b32 	%f130, %r7;
	mov.b32 	%f131, %r8;
	mov.b32 	%f132, %r9;
	mov.b32 	%f133, %r10;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p6 ld.global.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r15, %r11;
	@!%p6 mov.u32 %r16, %r11;
	@!%p6 mov.u32 %r17, %r11;
	@!%p6 mov.u32 %r18, %r11;
	// end inline asm
	mov.b32 	%f134, %r15;
	mov.b32 	%f135, %r16;
	mov.b32 	%f136, %r17;
	mov.b32 	%f137, %r18;
	.loc	1 32 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:31
	mul.wide.u32 	%rd15, %r83, 4;
	add.s64 	%rd8, %rd11, %rd15;
	mov.pred 	%p11, -1;
	.loc	1 32 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:36
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f138, %r23;
	mov.b32 	%f139, %r24;
	.loc	1 33 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:31
	add.s64 	%rd9, %rd12, %rd15;
	.loc	1 33 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f142, %r27;
	mov.b32 	%f143, %r28;
$L__tmp0:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f130, %f131;
	add.f32 	%f147, %f146, %f132;
	add.f32 	%f148, %f147, %f133;
	selp.f32 	%f149, %f148, 0f00000000, %p1;
	add.f32 	%f150, %f134, %f135;
	add.f32 	%f151, %f150, %f136;
	add.f32 	%f152, %f151, %f137;
	selp.f32 	%f153, %f152, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f149;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f154, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f155, %f149, %f154;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f155;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f156, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f157, %f155, %f156;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f153;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f158, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f159, %f153, %f158;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f159;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f160, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f161, %f159, %f160;
$L__tmp1:
	.loc	1 38 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:38:18
	shl.b32 	%r96, %r81, 2;
	mov.u32 	%r97, global_smem;
	add.s32 	%r31, %r97, %r96;
	mov.b32 	%r32, %f157;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r31, 256;
	mov.b32 	%r34, %f161;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r98, %r3, 2;
	add.s32 	%r99, %r97, %r98;
	ld.shared.u32 	%r36, [%r99];
	mov.b32 	%r40, 1098907648;
	// begin inline asm
	div.full.f32 %r38, %r32, %r40;
	// end inline asm
	mov.b32 	%f162, %r38;
	// begin inline asm
	div.full.f32 %r41, %r34, %r40;
	// end inline asm
	mov.b32 	%f163, %r41;
	.loc	1 39 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:39:18
	sub.f32 	%f164, %f130, %f162;
	sub.f32 	%f165, %f131, %f162;
	sub.f32 	%f166, %f132, %f162;
	sub.f32 	%f167, %f133, %f162;
	sub.f32 	%f168, %f134, %f163;
	sub.f32 	%f169, %f135, %f163;
	sub.f32 	%f170, %f136, %f163;
	sub.f32 	%f171, %f137, %f163;
	.loc	1 40 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:40:18
	mul.f32 	%f172, %f165, %f165;
	mul.f32 	%f173, %f169, %f169;
$L__tmp2:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f174, %f164, %f164, %f172;
	fma.rn.f32 	%f175, %f166, %f166, %f174;
	fma.rn.f32 	%f176, %f167, %f167, %f175;
	selp.f32 	%f177, %f176, 0f00000000, %p1;
	fma.rn.f32 	%f178, %f168, %f168, %f173;
	fma.rn.f32 	%f179, %f170, %f170, %f178;
	fma.rn.f32 	%f180, %f171, %f171, %f179;
	selp.f32 	%f181, %f180, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f177;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f182, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f183, %f177, %f182;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f183;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f184, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f185, %f183, %f184;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f181;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f186, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f187, %f181, %f186;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f187;
	shfl.sync.bfly.b32	%r107, %r106, 1, 31, -1;
	mov.b32 	%f188, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f189, %f187, %f188;
$L__tmp3:
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	bar.sync 	0;
	mov.b32 	%r45, %f185;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r45;
	// end inline asm
	mov.b32 	%r47, %f189;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
	.loc	1 44 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:44:20
	// begin inline asm
	div.full.f32 %r51, %r45, %r40;
	// end inline asm
	mov.b32 	%f191, %r51;
	// begin inline asm
	div.full.f32 %r54, %r47, %r40;
	// end inline asm
	mov.b32 	%f192, %r54;
	.loc	1 46 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:46:20
	add.f32 	%f194, %f191, 0f358637BD;
	add.f32 	%f195, %f192, 0f358637BD;
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	sqrt.approx.ftz.f32 	%f196, %f194;
	.loc	1 48 19                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:48:19
	mov.b32 	%r59, %f196;
	mov.b32 	%r58, %f164;
	// begin inline asm
	div.full.f32 %r57, %r58, %r59;
	// end inline asm
	mov.b32 	%f198, %r57;
	mov.b32 	%r61, %f165;
	// begin inline asm
	div.full.f32 %r60, %r61, %r59;
	// end inline asm
	mov.b32 	%f199, %r60;
	mov.b32 	%r64, %f166;
	// begin inline asm
	div.full.f32 %r63, %r64, %r59;
	// end inline asm
	.loc	1 50 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:50:20
	fma.rn.f32 	%f3, %f198, %f138, %f142;
	fma.rn.f32 	%f4, %f199, %f139, %f143;
	.loc	1 54 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:54:20
	mul.f32 	%f11, %f3, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f19, %f11;
	setp.ge.f32 	%p17, %f19, 0f3F8060FE;
	mov.f32 	%f443, 0f3789CA3C;
	mov.f32 	%f442, 0fB9F560B9;
	mov.f32 	%f441, 0f3BAC840B;
	mov.f32 	%f440, 0fBD0C8162;
	mov.f32 	%f439, 0f3E1CF906;
	mov.f32 	%f438, 0f3F6A937E;
	mov.f32 	%f437, 0f3F20D842;
	mov.f32 	%f444, %f19;
	@%p17 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	mov.f32 	%f443, 0f38B1E96A;
	mov.f32 	%f442, 0fBA574D20;
	mov.f32 	%f441, 0f3BAAD5EA;
	mov.f32 	%f440, 0fBCDC1BE7;
	mov.f32 	%f439, 0f3DE718AF;
	mov.f32 	%f438, 0fBEC093AC;
	mov.f32 	%f437, 0f3E0375D3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	mul.f32 	%f444, %f11, %f11;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	sqrt.approx.ftz.f32 	%f197, %f195;
	mov.b32 	%r67, %f167;
	mov.b32 	%f140, %r25;
	mov.b32 	%f144, %r29;
	mov.b32 	%f200, %r63;
	mul.f32 	%f12, %f4, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p18, %f19, 0f3F8060FE;
	fma.rn.ftz.f32 	%f213, %f443, %f444, %f442;
	fma.rn.ftz.f32 	%f214, %f213, %f444, %f441;
	fma.rn.ftz.f32 	%f215, %f214, %f444, %f440;
	fma.rn.ftz.f32 	%f216, %f215, %f444, %f439;
	fma.rn.ftz.f32 	%f217, %f216, %f444, %f438;
	fma.rn.ftz.f32 	%f218, %f217, %f444, %f437;
	neg.f32 	%f219, %f444;
	selp.f32 	%f220, %f219, %f11, %p17;
	fma.rn.ftz.f32 	%f445, %f218, %f220, %f220;
	mov.f32 	%f436, 0f3F800000;
	@%p18 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f221, %f445;
	sub.f32 	%f223, %f436, %f221;
	mov.b32 	%r108, %f223;
	mov.b32 	%r109, %f11;
	and.b32  	%r110, %r109, -2147483648;
	or.b32  	%r111, %r110, %r108;
	mov.b32 	%f445, %r111;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r77, %f197;
	// begin inline asm
	div.full.f32 %r66, %r67, %r59;
	// end inline asm
	fma.rn.f32 	%f5, %f200, %f140, %f144;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f32, %f12;
	setp.ge.f32 	%p20, %f32, 0f3F8060FE;
	mov.f32 	%f452, 0f3789CA3C;
	mov.f32 	%f451, 0fB9F560B9;
	mov.f32 	%f450, 0f3BAC840B;
	mov.f32 	%f449, 0fBD0C8162;
	mov.f32 	%f448, 0f3E1CF906;
	mov.f32 	%f447, 0f3F6A937E;
	mov.f32 	%f446, 0f3F20D842;
	mov.f32 	%f453, %f32;
	@%p20 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f453, %f12, %f12;
	mov.f32 	%f452, 0f38B1E96A;
	mov.f32 	%f451, 0fBA574D20;
	mov.f32 	%f450, 0f3BAAD5EA;
	mov.f32 	%f449, 0fBCDC1BE7;
	mov.f32 	%f448, 0f3DE718AF;
	mov.f32 	%f447, 0fBEC093AC;
	mov.f32 	%f446, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i49
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r70, %f168;
	mov.b32 	%f141, %r26;
	mov.b32 	%f145, %r30;
	mov.b32 	%f201, %r66;
	mul.f32 	%f13, %f5, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p21, %f32, 0f3F8060FE;
	fma.rn.ftz.f32 	%f238, %f452, %f453, %f451;
	fma.rn.ftz.f32 	%f239, %f238, %f453, %f450;
	fma.rn.ftz.f32 	%f240, %f239, %f453, %f449;
	fma.rn.ftz.f32 	%f241, %f240, %f453, %f448;
	fma.rn.ftz.f32 	%f242, %f241, %f453, %f447;
	fma.rn.ftz.f32 	%f243, %f242, %f453, %f446;
	neg.f32 	%f244, %f453;
	selp.f32 	%f245, %f244, %f12, %p20;
	fma.rn.ftz.f32 	%f454, %f243, %f245, %f245;
	@%p21 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f246, %f454;
	sub.f32 	%f248, %f436, %f246;
	mov.b32 	%r112, %f248;
	mov.b32 	%r113, %f12;
	and.b32  	%r114, %r113, -2147483648;
	or.b32  	%r115, %r114, %r112;
	mov.b32 	%f454, %r115;
$L__BB0_8:                              // %__nv_erff.exit68
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r69, %r70, %r77;
	// end inline asm
	fma.rn.f32 	%f6, %f201, %f141, %f145;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f45, %f13;
	setp.ge.f32 	%p23, %f45, 0f3F8060FE;
	mov.f32 	%f461, 0f3789CA3C;
	mov.f32 	%f460, 0fB9F560B9;
	mov.f32 	%f459, 0f3BAC840B;
	mov.f32 	%f458, 0fBD0C8162;
	mov.f32 	%f457, 0f3E1CF906;
	mov.f32 	%f456, 0f3F6A937E;
	mov.f32 	%f455, 0f3F20D842;
	mov.f32 	%f462, %f45;
	@%p23 bra 	$L__BB0_10;
// %bb.9:
	mul.f32 	%f462, %f13, %f13;
	mov.f32 	%f461, 0f38B1E96A;
	mov.f32 	%f460, 0fBA574D20;
	mov.f32 	%f459, 0f3BAAD5EA;
	mov.f32 	%f458, 0fBCDC1BE7;
	mov.f32 	%f457, 0f3DE718AF;
	mov.f32 	%f456, 0fBEC093AC;
	mov.f32 	%f455, 0f3E0375D3;
$L__BB0_10:                             // %__internal_fmad.exit.i71
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r73, %f169;
	mov.b32 	%f202, %r69;
	mul.f32 	%f14, %f6, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p24, %f45, 0f3F8060FE;
	fma.rn.ftz.f32 	%f263, %f461, %f462, %f460;
	fma.rn.ftz.f32 	%f264, %f263, %f462, %f459;
	fma.rn.ftz.f32 	%f265, %f264, %f462, %f458;
	fma.rn.ftz.f32 	%f266, %f265, %f462, %f457;
	fma.rn.ftz.f32 	%f267, %f266, %f462, %f456;
	fma.rn.ftz.f32 	%f268, %f267, %f462, %f455;
	neg.f32 	%f269, %f462;
	selp.f32 	%f270, %f269, %f13, %p23;
	fma.rn.ftz.f32 	%f463, %f268, %f270, %f270;
	@%p24 bra 	$L__BB0_12;
// %bb.11:
	ex2.approx.ftz.f32 	%f271, %f463;
	sub.f32 	%f273, %f436, %f271;
	mov.b32 	%r116, %f273;
	mov.b32 	%r117, %f13;
	and.b32  	%r118, %r117, -2147483648;
	or.b32  	%r119, %r118, %r116;
	mov.b32 	%f463, %r119;
$L__BB0_12:                             // %__nv_erff.exit90
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r72, %r73, %r77;
	// end inline asm
	fma.rn.f32 	%f7, %f202, %f138, %f142;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f58, %f14;
	setp.ge.f32 	%p26, %f58, 0f3F8060FE;
	mov.f32 	%f470, 0f3789CA3C;
	mov.f32 	%f469, 0fB9F560B9;
	mov.f32 	%f468, 0f3BAC840B;
	mov.f32 	%f467, 0fBD0C8162;
	mov.f32 	%f466, 0f3E1CF906;
	mov.f32 	%f465, 0f3F6A937E;
	mov.f32 	%f464, 0f3F20D842;
	mov.f32 	%f471, %f58;
	@%p26 bra 	$L__BB0_14;
// %bb.13:
	mul.f32 	%f471, %f14, %f14;
	mov.f32 	%f470, 0f38B1E96A;
	mov.f32 	%f469, 0fBA574D20;
	mov.f32 	%f468, 0f3BAAD5EA;
	mov.f32 	%f467, 0fBCDC1BE7;
	mov.f32 	%f466, 0f3DE718AF;
	mov.f32 	%f465, 0fBEC093AC;
	mov.f32 	%f464, 0f3E0375D3;
$L__BB0_14:                             // %__internal_fmad.exit.i93
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r76, %f170;
	mov.b32 	%f203, %r72;
	mul.f32 	%f15, %f7, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p27, %f58, 0f3F8060FE;
	fma.rn.ftz.f32 	%f288, %f470, %f471, %f469;
	fma.rn.ftz.f32 	%f289, %f288, %f471, %f468;
	fma.rn.ftz.f32 	%f290, %f289, %f471, %f467;
	fma.rn.ftz.f32 	%f291, %f290, %f471, %f466;
	fma.rn.ftz.f32 	%f292, %f291, %f471, %f465;
	fma.rn.ftz.f32 	%f293, %f292, %f471, %f464;
	neg.f32 	%f294, %f471;
	selp.f32 	%f295, %f294, %f14, %p26;
	fma.rn.ftz.f32 	%f472, %f293, %f295, %f295;
	@%p27 bra 	$L__BB0_16;
// %bb.15:
	ex2.approx.ftz.f32 	%f296, %f472;
	sub.f32 	%f298, %f436, %f296;
	mov.b32 	%r120, %f298;
	mov.b32 	%r121, %f14;
	and.b32  	%r122, %r121, -2147483648;
	or.b32  	%r123, %r122, %r120;
	mov.b32 	%f472, %r123;
$L__BB0_16:                             // %__nv_erff.exit112
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r75, %r76, %r77;
	// end inline asm
	fma.rn.f32 	%f8, %f203, %f139, %f143;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f71, %f15;
	setp.ge.f32 	%p29, %f71, 0f3F8060FE;
	mov.f32 	%f479, 0f3789CA3C;
	mov.f32 	%f478, 0fB9F560B9;
	mov.f32 	%f477, 0f3BAC840B;
	mov.f32 	%f476, 0fBD0C8162;
	mov.f32 	%f475, 0f3E1CF906;
	mov.f32 	%f474, 0f3F6A937E;
	mov.f32 	%f473, 0f3F20D842;
	mov.f32 	%f480, %f71;
	@%p29 bra 	$L__BB0_18;
// %bb.17:
	mul.f32 	%f480, %f15, %f15;
	mov.f32 	%f479, 0f38B1E96A;
	mov.f32 	%f478, 0fBA574D20;
	mov.f32 	%f477, 0f3BAAD5EA;
	mov.f32 	%f476, 0fBCDC1BE7;
	mov.f32 	%f475, 0f3DE718AF;
	mov.f32 	%f474, 0fBEC093AC;
	mov.f32 	%f473, 0f3E0375D3;
$L__BB0_18:                             // %__internal_fmad.exit.i115
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r79, %f171;
	mov.b32 	%f204, %r75;
	mul.f32 	%f16, %f8, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p30, %f71, 0f3F8060FE;
	fma.rn.ftz.f32 	%f313, %f479, %f480, %f478;
	fma.rn.ftz.f32 	%f314, %f313, %f480, %f477;
	fma.rn.ftz.f32 	%f315, %f314, %f480, %f476;
	fma.rn.ftz.f32 	%f316, %f315, %f480, %f475;
	fma.rn.ftz.f32 	%f317, %f316, %f480, %f474;
	fma.rn.ftz.f32 	%f318, %f317, %f480, %f473;
	neg.f32 	%f319, %f480;
	selp.f32 	%f320, %f319, %f15, %p29;
	fma.rn.ftz.f32 	%f481, %f318, %f320, %f320;
	@%p30 bra 	$L__BB0_20;
// %bb.19:
	ex2.approx.ftz.f32 	%f321, %f481;
	sub.f32 	%f323, %f436, %f321;
	mov.b32 	%r124, %f323;
	mov.b32 	%r125, %f15;
	and.b32  	%r126, %r125, -2147483648;
	or.b32  	%r127, %r126, %r124;
	mov.b32 	%f481, %r127;
$L__BB0_20:                             // %__nv_erff.exit134
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r78, %r79, %r77;
	// end inline asm
	fma.rn.f32 	%f9, %f204, %f140, %f144;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f84, %f16;
	setp.ge.f32 	%p32, %f84, 0f3F8060FE;
	mov.f32 	%f488, 0f3789CA3C;
	mov.f32 	%f487, 0fB9F560B9;
	mov.f32 	%f486, 0f3BAC840B;
	mov.f32 	%f485, 0fBD0C8162;
	mov.f32 	%f484, 0f3E1CF906;
	mov.f32 	%f483, 0f3F6A937E;
	mov.f32 	%f482, 0f3F20D842;
	mov.f32 	%f489, %f84;
	@%p32 bra 	$L__BB0_22;
// %bb.21:
	mul.f32 	%f489, %f16, %f16;
	mov.f32 	%f488, 0f38B1E96A;
	mov.f32 	%f487, 0fBA574D20;
	mov.f32 	%f486, 0f3BAAD5EA;
	mov.f32 	%f485, 0fBCDC1BE7;
	mov.f32 	%f484, 0f3DE718AF;
	mov.f32 	%f483, 0fBEC093AC;
	mov.f32 	%f482, 0f3E0375D3;
$L__BB0_22:                             // %__internal_fmad.exit.i137
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	ld.shared.u32 	%r49, [%r99];
	mov.b32 	%f205, %r78;
	mul.f32 	%f17, %f9, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p33, %f84, 0f3F8060FE;
	fma.rn.ftz.f32 	%f338, %f488, %f489, %f487;
	fma.rn.ftz.f32 	%f339, %f338, %f489, %f486;
	fma.rn.ftz.f32 	%f340, %f339, %f489, %f485;
	fma.rn.ftz.f32 	%f341, %f340, %f489, %f484;
	fma.rn.ftz.f32 	%f342, %f341, %f489, %f483;
	fma.rn.ftz.f32 	%f343, %f342, %f489, %f482;
	neg.f32 	%f344, %f489;
	selp.f32 	%f345, %f344, %f16, %p32;
	fma.rn.ftz.f32 	%f490, %f343, %f345, %f345;
	@%p33 bra 	$L__BB0_24;
// %bb.23:
	ex2.approx.ftz.f32 	%f346, %f490;
	sub.f32 	%f348, %f436, %f346;
	mov.b32 	%r128, %f348;
	mov.b32 	%r129, %f16;
	and.b32  	%r130, %r129, -2147483648;
	or.b32  	%r131, %r130, %r128;
	mov.b32 	%f490, %r131;
$L__BB0_24:                             // %__nv_erff.exit156
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r48, %r49, %r40;
	// end inline asm
	fma.rn.f32 	%f10, %f205, %f141, %f145;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f97, %f17;
	setp.ge.f32 	%p35, %f97, 0f3F8060FE;
	mov.f32 	%f497, 0f3789CA3C;
	mov.f32 	%f496, 0fB9F560B9;
	mov.f32 	%f495, 0f3BAC840B;
	mov.f32 	%f494, 0fBD0C8162;
	mov.f32 	%f493, 0f3E1CF906;
	mov.f32 	%f492, 0f3F6A937E;
	mov.f32 	%f491, 0f3F20D842;
	mov.f32 	%f498, %f97;
	@%p35 bra 	$L__BB0_26;
// %bb.25:
	mul.f32 	%f498, %f17, %f17;
	mov.f32 	%f497, 0f38B1E96A;
	mov.f32 	%f496, 0fBA574D20;
	mov.f32 	%f495, 0f3BAAD5EA;
	mov.f32 	%f494, 0fBCDC1BE7;
	mov.f32 	%f493, 0f3DE718AF;
	mov.f32 	%f492, 0fBEC093AC;
	mov.f32 	%f491, 0f3E0375D3;
$L__BB0_26:                             // %__internal_fmad.exit.i159
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%f190, %r48;
	mul.f32 	%f18, %f10, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p36, %f97, 0f3F8060FE;
	fma.rn.ftz.f32 	%f363, %f497, %f498, %f496;
	fma.rn.ftz.f32 	%f364, %f363, %f498, %f495;
	fma.rn.ftz.f32 	%f365, %f364, %f498, %f494;
	fma.rn.ftz.f32 	%f366, %f365, %f498, %f493;
	fma.rn.ftz.f32 	%f367, %f366, %f498, %f492;
	fma.rn.ftz.f32 	%f368, %f367, %f498, %f491;
	neg.f32 	%f369, %f498;
	selp.f32 	%f370, %f369, %f17, %p35;
	fma.rn.ftz.f32 	%f499, %f368, %f370, %f370;
	@%p36 bra 	$L__BB0_28;
// %bb.27:
	ex2.approx.ftz.f32 	%f371, %f499;
	sub.f32 	%f373, %f436, %f371;
	mov.b32 	%r132, %f373;
	mov.b32 	%r133, %f17;
	and.b32  	%r134, %r133, -2147483648;
	or.b32  	%r135, %r134, %r132;
	mov.b32 	%f499, %r135;
$L__BB0_28:                             // %__nv_erff.exit178
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r152, %r36, %r40;
	// end inline asm
	add.f32 	%f193, %f190, 0f358637BD;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f110, %f18;
	setp.ge.f32 	%p38, %f110, 0f3F8060FE;
	mov.f32 	%f506, 0f3789CA3C;
	mov.f32 	%f505, 0fB9F560B9;
	mov.f32 	%f504, 0f3BAC840B;
	mov.f32 	%f503, 0fBD0C8162;
	mov.f32 	%f502, 0f3E1CF906;
	mov.f32 	%f501, 0f3F6A937E;
	mov.f32 	%f500, 0f3F20D842;
	mov.f32 	%f507, %f110;
	@%p38 bra 	$L__BB0_30;
// %bb.29:
	mul.f32 	%f507, %f18, %f18;
	mov.f32 	%f506, 0f38B1E96A;
	mov.f32 	%f505, 0fBA574D20;
	mov.f32 	%f504, 0f3BAAD5EA;
	mov.f32 	%f503, 0fBCDC1BE7;
	mov.f32 	%f502, 0f3DE718AF;
	mov.f32 	%f501, 0fBEC093AC;
	mov.f32 	%f500, 0f3E0375D3;
$L__BB0_30:                             // %__internal_fmad.exit.i181
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	ld.param.u64 	%rd5, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2];
	ld.param.u64 	%rd4, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1];
	ld.param.u64 	%rd3, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0];
	cvt.s64.s32 	%rd1, %r86;
	cvt.s64.s32 	%rd2, %r87;
	mov.b32 	%f1, %r152;
	sqrt.approx.ftz.f32 	%f2, %f193;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p39, %f110, 0f3F8060FE;
	fma.rn.ftz.f32 	%f388, %f506, %f507, %f505;
	fma.rn.ftz.f32 	%f389, %f388, %f507, %f504;
	fma.rn.ftz.f32 	%f390, %f389, %f507, %f503;
	fma.rn.ftz.f32 	%f391, %f390, %f507, %f502;
	fma.rn.ftz.f32 	%f392, %f391, %f507, %f501;
	fma.rn.ftz.f32 	%f393, %f392, %f507, %f500;
	neg.f32 	%f394, %f507;
	selp.f32 	%f395, %f394, %f18, %p38;
	fma.rn.ftz.f32 	%f508, %f393, %f395, %f395;
	@%p39 bra 	$L__BB0_32;
// %bb.31:
	ex2.approx.ftz.f32 	%f396, %f508;
	sub.f32 	%f398, %f436, %f396;
	mov.b32 	%r136, %f398;
	mov.b32 	%r137, %f18;
	and.b32  	%r138, %r137, -2147483648;
	or.b32  	%r139, %r138, %r136;
	mov.b32 	%f508, %r139;
$L__BB0_32:                             // %__nv_erff.exit200
	.loc	1 52 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:52:20
	mul.f32 	%f399, %f10, 0f3F000000;
	mul.f32 	%f400, %f9, 0f3F000000;
	mul.f32 	%f401, %f8, 0f3F000000;
	mul.f32 	%f402, %f7, 0f3F000000;
	mul.f32 	%f403, %f6, 0f3F000000;
	mul.f32 	%f404, %f5, 0f3F000000;
	mul.f32 	%f405, %f4, 0f3F000000;
	mul.f32 	%f406, %f3, 0f3F000000;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r150, %r1, %r3;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p45, %r150, 1024;
	.loc	1 57 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:57:20
	add.f32 	%f407, %f445, 0f3F800000;
	add.f32 	%f408, %f454, 0f3F800000;
	add.f32 	%f409, %f463, 0f3F800000;
	add.f32 	%f410, %f472, 0f3F800000;
	add.f32 	%f411, %f481, 0f3F800000;
	add.f32 	%f412, %f490, 0f3F800000;
	add.f32 	%f413, %f499, 0f3F800000;
	add.f32 	%f414, %f508, 0f3F800000;
	.loc	1 58 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:58:20
	mul.f32 	%f415, %f406, %f407;
	mul.f32 	%f416, %f405, %f408;
	mul.f32 	%f417, %f404, %f409;
	mul.f32 	%f418, %f403, %f410;
	mul.f32 	%f419, %f402, %f411;
	mul.f32 	%f420, %f401, %f412;
	mul.f32 	%f421, %f400, %f413;
	mul.f32 	%f422, %f399, %f414;
	.loc	1 59 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:28
	mul.wide.s32 	%rd20, %r150, 4;
	add.s64 	%rd16, %rd3, %rd20;
	.loc	1 60 39                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:39
	and.b32  	%r151, %r2, 128;
	setp.eq.s32 	%p46, %r151, 0;
	and.pred  	%p41, %p46, %p45;
	// begin inline asm
	@%p41 st.global.b32 [ %rd16 + 0 ], { %r152 };
	// end inline asm
	.loc	1 61 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:61:4
	bar.sync 	0;
	.loc	1 62 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:28
	add.s64 	%rd17, %rd4, %rd20;
	.loc	1 62 40                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:40
	mov.b32 	%r141, %f2;
	// begin inline asm
	@%p41 st.global.b32 [ %rd17 + 0 ], { %r141 };
	// end inline asm
	.loc	1 63 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:28
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd18, %rd5, %rd21;
	shl.b64 	%rd22, %rd2, 2;
	add.s64 	%rd19, %rd5, %rd22;
	.loc	1 63 48                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:48
	mov.b32 	%r142, %f415;
	mov.b32 	%r143, %f416;
	mov.b32 	%r144, %f417;
	mov.b32 	%r145, %f418;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd18 + 0 ], { %r142, %r143, %r144, %r145 };
	// end inline asm
	mov.b32 	%r146, %f419;
	mov.b32 	%r147, %f420;
	mov.b32 	%r148, %f421;
	mov.b32 	%r149, %f422;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd19 + 0 ], { %r146, %r147, %r148, %r149 };
	// end inline asm
	.loc	1 63 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7t/c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 116
.b8 101
.b8 102
.b8 53
.b8 52
.b8 122
.b8 50
.b8 53
.b8 117
.b8 117
.b8 109
.b8 105
.b8 104
.b8 104
.b8 110
.b8 99
.b8 101
.b8 112
.b8 109
.b8 50
.b8 99
.b8 121
.b8 120
.b8 114
.b8 110
.b8 102
.b8 104
.b8 54
.b8 106
.b8 99
.b8 103
.b8 114
.b8 97
.b8 120
.b8 107
.b8 109
.b8 120
.b8 110
.b8 53
.b8 52
.b8 100
.b8 108
.b8 121
.b8 100
.b8 120
.b8 114
.b8 113
.b8 103
.b8 109
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
