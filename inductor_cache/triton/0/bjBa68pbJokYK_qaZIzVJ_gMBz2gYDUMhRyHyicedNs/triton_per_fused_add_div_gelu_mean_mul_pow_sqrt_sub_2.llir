; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = lshr i32 %11, 2, !dbg !12
  %13 = and i32 %12, 63, !dbg !12
  %14 = or disjoint i32 %13, 64, !dbg !12
  %15 = and i32 %11, 127, !dbg !12
  %16 = or disjoint i32 %10, %13, !dbg !13
  %17 = or disjoint i32 %10, %14, !dbg !13
  %18 = icmp slt i32 %16, 1024, !dbg !14
  %19 = icmp slt i32 %17, 1024, !dbg !14
  %20 = shl i32 %11, 2, !dbg !15
  %21 = and i32 %20, 12, !dbg !15
  %22 = shl i32 %16, 4, !dbg !16
  %23 = shl i32 %17, 4, !dbg !16
  %24 = or disjoint i32 %22, %21, !dbg !17
  %25 = or disjoint i32 %23, %21, !dbg !17
  %26 = sext i32 %24 to i64, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %26, !dbg !18
  %28 = sext i32 %25 to i64, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %28, !dbg !18
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %27, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #5, !dbg !19
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !19
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !19
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !19
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !19
  %35 = bitcast i32 %31 to float, !dbg !19
  %36 = bitcast i32 %32 to float, !dbg !19
  %37 = bitcast i32 %33 to float, !dbg !19
  %38 = bitcast i32 %34 to float, !dbg !19
  %39 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %29, i1 %19, i32 0, i1 %19, i32 0, i1 %19, i32 0, i1 %19, i32 0, i1 %19) #5, !dbg !19
  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !19
  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !19
  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !19
  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !19
  %44 = bitcast i32 %40 to float, !dbg !19
  %45 = bitcast i32 %41 to float, !dbg !19
  %46 = bitcast i32 %42 to float, !dbg !19
  %47 = bitcast i32 %43 to float, !dbg !19
  %48 = zext nneg i32 %21 to i64, !dbg !20
  %49 = getelementptr float, ptr addrspace(1) %4, i64 %48, !dbg !20
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %49, i1 true) #5, !dbg !21
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !21
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !21
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !21
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !21
  %55 = bitcast i32 %51 to float, !dbg !21
  %56 = bitcast i32 %52 to float, !dbg !21
  %57 = bitcast i32 %53 to float, !dbg !21
  %58 = bitcast i32 %54 to float, !dbg !21
  %59 = getelementptr float, ptr addrspace(1) %5, i64 %48, !dbg !22
  %60 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %59, i1 true) #5, !dbg !23
  %61 = extractvalue { i32, i32, i32, i32 } %60, 0, !dbg !23
  %62 = extractvalue { i32, i32, i32, i32 } %60, 1, !dbg !23
  %63 = extractvalue { i32, i32, i32, i32 } %60, 2, !dbg !23
  %64 = extractvalue { i32, i32, i32, i32 } %60, 3, !dbg !23
  %65 = bitcast i32 %61 to float, !dbg !23
  %66 = bitcast i32 %62 to float, !dbg !23
  %67 = bitcast i32 %63 to float, !dbg !23
  %68 = bitcast i32 %64 to float, !dbg !23
  %69 = fadd float %35, %36, !dbg !24
  %70 = fadd float %69, %37, !dbg !24
  %71 = fadd float %70, %38, !dbg !24
  %72 = select i1 %18, float %71, float 0.000000e+00, !dbg !24
  %73 = fadd float %44, %45, !dbg !24
  %74 = fadd float %73, %46, !dbg !24
  %75 = fadd float %74, %47, !dbg !24
  %76 = select i1 %19, float %75, float 0.000000e+00, !dbg !24
  %77 = bitcast float %72 to i32, !dbg !29
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 2, i32 31), !dbg !29
  %79 = bitcast i32 %78 to float, !dbg !29
  %80 = fadd float %72, %79, !dbg !24
  %81 = bitcast float %80 to i32, !dbg !29
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 1, i32 31), !dbg !29
  %83 = bitcast i32 %82 to float, !dbg !29
  %84 = fadd float %80, %83, !dbg !24
  %85 = bitcast float %76 to i32, !dbg !29
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 2, i32 31), !dbg !29
  %87 = bitcast i32 %86 to float, !dbg !29
  %88 = fadd float %76, %87, !dbg !24
  %89 = bitcast float %88 to i32, !dbg !29
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 1, i32 31), !dbg !29
  %91 = bitcast i32 %90 to float, !dbg !29
  %92 = fadd float %88, %91, !dbg !24
  %93 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !30
  %94 = bitcast float %84 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %93, <1 x i32> %94, i1 true) #5, !dbg !30
  %95 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !30
  %96 = bitcast float %92 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %95, <1 x i32> %96, i1 true) #5, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %97 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %15, !dbg !30
  %98 = load float, ptr addrspace(3) %97, align 4, !dbg !30
  %99 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %98, float 1.600000e+01) #5, !dbg !30
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %84, float 1.600000e+01) #5, !dbg !30
  %101 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %92, float 1.600000e+01) #5, !dbg !30
  %102 = fsub float %35, %100, !dbg !31
  %103 = fsub float %36, %100, !dbg !31
  %104 = fsub float %37, %100, !dbg !31
  %105 = fsub float %38, %100, !dbg !31
  %106 = fsub float %44, %101, !dbg !31
  %107 = fsub float %45, %101, !dbg !31
  %108 = fsub float %46, %101, !dbg !31
  %109 = fsub float %47, %101, !dbg !31
  %110 = fmul float %102, %102, !dbg !32
  %111 = fmul float %103, %103, !dbg !32
  %112 = fmul float %104, %104, !dbg !32
  %113 = fmul float %105, %105, !dbg !32
  %114 = fmul float %106, %106, !dbg !32
  %115 = fmul float %107, %107, !dbg !32
  %116 = fmul float %108, %108, !dbg !32
  %117 = fmul float %109, %109, !dbg !32
  %118 = fadd float %110, %111, !dbg !33
  %119 = fadd float %112, %118, !dbg !33
  %120 = fadd float %113, %119, !dbg !33
  %121 = select i1 %18, float %120, float 0.000000e+00, !dbg !33
  %122 = fadd float %114, %115, !dbg !33
  %123 = fadd float %116, %122, !dbg !33
  %124 = fadd float %117, %123, !dbg !33
  %125 = select i1 %19, float %124, float 0.000000e+00, !dbg !33
  %126 = bitcast float %121 to i32, !dbg !35
  %127 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %126, i32 2, i32 31), !dbg !35
  %128 = bitcast i32 %127 to float, !dbg !35
  %129 = fadd float %121, %128, !dbg !33
  %130 = bitcast float %129 to i32, !dbg !35
  %131 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %130, i32 1, i32 31), !dbg !35
  %132 = bitcast i32 %131 to float, !dbg !35
  %133 = fadd float %129, %132, !dbg !33
  %134 = bitcast float %125 to i32, !dbg !35
  %135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %134, i32 2, i32 31), !dbg !35
  %136 = bitcast i32 %135 to float, !dbg !35
  %137 = fadd float %125, %136, !dbg !33
  %138 = bitcast float %137 to i32, !dbg !35
  %139 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %138, i32 1, i32 31), !dbg !35
  %140 = bitcast i32 %139 to float, !dbg !35
  %141 = fadd float %137, %140, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %142 = bitcast float %133 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %93, <1 x i32> %142, i1 true) #5, !dbg !36
  %143 = bitcast float %141 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %95, <1 x i32> %143, i1 true) #5, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %144 = load float, ptr addrspace(3) %97, align 4, !dbg !36
  %145 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %144, float 1.600000e+01) #5, !dbg !37
  %146 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %133, float 1.600000e+01) #5, !dbg !37
  %147 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %141, float 1.600000e+01) #5, !dbg !37
  %148 = fadd float %145, 0x3EB0C6F7A0000000, !dbg !38
  %149 = fadd float %146, 0x3EB0C6F7A0000000, !dbg !38
  %150 = fadd float %147, 0x3EB0C6F7A0000000, !dbg !38
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i = icmp eq i32 %151, 0, !dbg !36
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %.not1.i = icmp eq i32 %152, 0, !dbg !36
  br i1 %.not.i, label %158, label %153, !dbg !36

153:                                              ; preds = %8
  br i1 %.not1.i, label %156, label %154, !dbg !36

154:                                              ; preds = %153
  %155 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %148) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

156:                                              ; preds = %153
  %157 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %148) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

158:                                              ; preds = %8
  br i1 %.not1.i, label %161, label %159, !dbg !36

159:                                              ; preds = %158
  %160 = tail call float @llvm.nvvm.sqrt.rn.f(float %148) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

161:                                              ; preds = %158
  %162 = tail call float @llvm.nvvm.sqrt.approx.f(float %148) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

__nv_sqrtf.exit:                                  ; preds = %154, %156, %159, %161
  %.0.i = phi float [ %155, %154 ], [ %157, %156 ], [ %160, %159 ], [ %162, %161 ], !dbg !36
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i18 = icmp eq i32 %169, 0, !dbg !36
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %.not1.i21 = icmp eq i32 %170, 0, !dbg !36
  br i1 %.not.i18, label %176, label %171, !dbg !36

171:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i21, label %174, label %172, !dbg !36

172:                                              ; preds = %171
  %173 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %149) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

174:                                              ; preds = %171
  %175 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %149) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

176:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i21, label %179, label %177, !dbg !36

177:                                              ; preds = %176
  %178 = tail call float @llvm.nvvm.sqrt.rn.f(float %149) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

179:                                              ; preds = %176
  %180 = tail call float @llvm.nvvm.sqrt.approx.f(float %149) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

__nv_sqrtf.exit22:                                ; preds = %172, %174, %177, %179
  %.0.i20 = phi float [ %173, %172 ], [ %175, %174 ], [ %178, %177 ], [ %180, %179 ], !dbg !36
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i38 = icmp eq i32 %187, 0, !dbg !36
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %.not1.i41 = icmp eq i32 %188, 0, !dbg !36
  br i1 %.not.i38, label %194, label %189, !dbg !36

189:                                              ; preds = %__nv_sqrtf.exit22
  br i1 %.not1.i41, label %192, label %190, !dbg !36

190:                                              ; preds = %189
  %191 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %150) #5, !dbg !36
  br label %__nv_sqrtf.exit42, !dbg !36

192:                                              ; preds = %189
  %193 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %150) #5, !dbg !36
  br label %__nv_sqrtf.exit42, !dbg !36

194:                                              ; preds = %__nv_sqrtf.exit22
  br i1 %.not1.i41, label %197, label %195, !dbg !36

195:                                              ; preds = %194
  %196 = tail call float @llvm.nvvm.sqrt.rn.f(float %150) #5, !dbg !36
  br label %__nv_sqrtf.exit42, !dbg !36

197:                                              ; preds = %194
  %198 = tail call float @llvm.nvvm.sqrt.approx.f(float %150) #5, !dbg !36
  br label %__nv_sqrtf.exit42, !dbg !36

__nv_sqrtf.exit42:                                ; preds = %190, %192, %195, %197
  %.0.i40 = phi float [ %191, %190 ], [ %193, %192 ], [ %196, %195 ], [ %198, %197 ], !dbg !36
  %199 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %102, float %.0.i20) #5, !dbg !39
  %200 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %103, float %.0.i20) #5, !dbg !39
  %201 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %104, float %.0.i20) #5, !dbg !39
  %202 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %105, float %.0.i20) #5, !dbg !39
  %203 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %106, float %.0.i40) #5, !dbg !39
  %204 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %107, float %.0.i40) #5, !dbg !39
  %205 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %108, float %.0.i40) #5, !dbg !39
  %206 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %109, float %.0.i40) #5, !dbg !39
  %207 = fmul float %199, %55, !dbg !40
  %208 = fmul float %200, %56, !dbg !40
  %209 = fmul float %201, %57, !dbg !40
  %210 = fmul float %202, %58, !dbg !40
  %211 = fmul float %203, %55, !dbg !40
  %212 = fmul float %204, %56, !dbg !40
  %213 = fmul float %205, %57, !dbg !40
  %214 = fmul float %206, %58, !dbg !40
  %215 = fadd float %207, %65, !dbg !41
  %216 = fadd float %208, %66, !dbg !41
  %217 = fadd float %209, %67, !dbg !41
  %218 = fadd float %210, %68, !dbg !41
  %219 = fadd float %211, %65, !dbg !41
  %220 = fadd float %212, %66, !dbg !41
  %221 = fadd float %213, %67, !dbg !41
  %222 = fadd float %214, %68, !dbg !41
  %223 = fmul float %215, 0x3FE6A09E60000000, !dbg !42
  %224 = fmul float %216, 0x3FE6A09E60000000, !dbg !42
  %225 = fmul float %217, 0x3FE6A09E60000000, !dbg !42
  %226 = fmul float %218, 0x3FE6A09E60000000, !dbg !42
  %227 = fmul float %219, 0x3FE6A09E60000000, !dbg !42
  %228 = fmul float %220, 0x3FE6A09E60000000, !dbg !42
  %229 = fmul float %221, 0x3FE6A09E60000000, !dbg !42
  %230 = fmul float %222, 0x3FE6A09E60000000, !dbg !42
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i43 = icmp eq i32 %231, 0, !dbg !43
  %232 = tail call float @llvm.nvvm.fabs.ftz.f(float %223) #5, !dbg !43
  %233 = tail call float @llvm.nvvm.fabs.f(float %223) #5, !dbg !43
  %.0.i44 = select i1 %.not.i43, float %233, float %232, !dbg !43
  %234 = fcmp oge float %.0.i44, 0x3FF00C1FC0000000, !dbg !43
  br i1 %234, label %__nv_fabsf.exit1.i, label %236, !dbg !43

__nv_fabsf.exit1.i:                               ; preds = %__nv_sqrtf.exit42
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i46 = icmp eq i32 %235, 0, !dbg !43
  %.01.i = select i1 %.not1.i46, float %233, float %232, !dbg !43
  br label %__internal_fmad.exit.i, !dbg !43

236:                                              ; preds = %__nv_sqrtf.exit42
  %237 = fmul float %223, %223, !dbg !43
  br label %__internal_fmad.exit.i, !dbg !43

__internal_fmad.exit.i:                           ; preds = %236, %__nv_fabsf.exit1.i
  %238 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %236 ], !dbg !43
  %239 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %236 ], !dbg !43
  %240 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %236 ], !dbg !43
  %241 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %236 ], !dbg !43
  %242 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %236 ], !dbg !43
  %243 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %236 ], !dbg !43
  %244 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %236 ], !dbg !43
  %245 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %237, %236 ], !dbg !43
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i45 = icmp eq i32 %246, 0, !dbg !43
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float %245, float %243) #5, !dbg !43
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %244, float %245, float %243) #5, !dbg !43
  %.02.i = select i1 %.not2.i45, float %248, float %247, !dbg !43
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i = icmp eq i32 %249, 0, !dbg !43
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %245, float %242) #5, !dbg !43
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %245, float %242) #5, !dbg !43
  %.03.i = select i1 %.not3.i, float %251, float %250, !dbg !43
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i = icmp eq i32 %252, 0, !dbg !43
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %245, float %241) #5, !dbg !43
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %245, float %241) #5, !dbg !43
  %.04.i = select i1 %.not4.i, float %254, float %253, !dbg !43
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i = icmp eq i32 %255, 0, !dbg !43
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %245, float %240) #5, !dbg !43
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %245, float %240) #5, !dbg !43
  %.05.i = select i1 %.not5.i, float %257, float %256, !dbg !43
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i = icmp eq i32 %258, 0, !dbg !43
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %245, float %239) #5, !dbg !43
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %245, float %239) #5, !dbg !43
  %.06.i = select i1 %.not6.i, float %260, float %259, !dbg !43
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i = icmp eq i32 %261, 0, !dbg !43
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %245, float %238) #5, !dbg !43
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %245, float %238) #5, !dbg !43
  %.07.i = select i1 %.not7.i, float %263, float %262, !dbg !43
  %264 = fneg float %245, !dbg !43
  %265 = select i1 %234, float %264, float %223, !dbg !43
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i = icmp eq i32 %266, 0, !dbg !43
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %265, float %265) #5, !dbg !43
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %265, float %265) #5, !dbg !43
  %.08.i = select i1 %.not8.i, float %268, float %267, !dbg !43
  br i1 %234, label %269, label %__nv_erff.exit, !dbg !43

269:                                              ; preds = %__internal_fmad.exit.i
  %270 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #5, !dbg !43
  %271 = fsub float 1.000000e+00, %270, !dbg !43
  %272 = bitcast float %271 to i32, !dbg !43
  %273 = bitcast float %223 to i32, !dbg !43
  %274 = and i32 %273, -2147483648, !dbg !43
  %275 = or i32 %274, %272, !dbg !43
  %276 = bitcast i32 %275 to float, !dbg !43
  br label %__nv_erff.exit, !dbg !43

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %269
  %r.0.i = phi float [ %276, %269 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !43
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i47 = icmp eq i32 %277, 0, !dbg !43
  %278 = tail call float @llvm.nvvm.fabs.ftz.f(float %224) #5, !dbg !43
  %279 = tail call float @llvm.nvvm.fabs.f(float %224) #5, !dbg !43
  %.0.i48 = select i1 %.not.i47, float %279, float %278, !dbg !43
  %280 = fcmp oge float %.0.i48, 0x3FF00C1FC0000000, !dbg !43
  br i1 %280, label %__nv_fabsf.exit1.i65, label %282, !dbg !43

__nv_fabsf.exit1.i65:                             ; preds = %__nv_erff.exit
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i66 = icmp eq i32 %281, 0, !dbg !43
  %.01.i67 = select i1 %.not1.i66, float %279, float %278, !dbg !43
  br label %__internal_fmad.exit.i49, !dbg !43

282:                                              ; preds = %__nv_erff.exit
  %283 = fmul float %224, %224, !dbg !43
  br label %__internal_fmad.exit.i49, !dbg !43

__internal_fmad.exit.i49:                         ; preds = %282, %__nv_fabsf.exit1.i65
  %284 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i65 ], [ 0x3FC06EBA60000000, %282 ], !dbg !43
  %285 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i65 ], [ 0xBFD8127580000000, %282 ], !dbg !43
  %286 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i65 ], [ 0x3FBCE315E0000000, %282 ], !dbg !43
  %287 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i65 ], [ 0xBF9B837CE0000000, %282 ], !dbg !43
  %288 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i65 ], [ 0x3F755ABD40000000, %282 ], !dbg !43
  %289 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i65 ], [ 0xBF4AE9A400000000, %282 ], !dbg !43
  %290 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i65 ], [ 0x3F163D2D40000000, %282 ], !dbg !43
  %291 = phi float [ %.01.i67, %__nv_fabsf.exit1.i65 ], [ %283, %282 ], !dbg !43
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i50 = icmp eq i32 %292, 0, !dbg !43
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %290, float %291, float %289) #5, !dbg !43
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %290, float %291, float %289) #5, !dbg !43
  %.02.i51 = select i1 %.not2.i50, float %294, float %293, !dbg !43
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i52 = icmp eq i32 %295, 0, !dbg !43
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i51, float %291, float %288) #5, !dbg !43
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i51, float %291, float %288) #5, !dbg !43
  %.03.i53 = select i1 %.not3.i52, float %297, float %296, !dbg !43
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i54 = icmp eq i32 %298, 0, !dbg !43
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i53, float %291, float %287) #5, !dbg !43
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i53, float %291, float %287) #5, !dbg !43
  %.04.i55 = select i1 %.not4.i54, float %300, float %299, !dbg !43
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i56 = icmp eq i32 %301, 0, !dbg !43
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i55, float %291, float %286) #5, !dbg !43
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i55, float %291, float %286) #5, !dbg !43
  %.05.i57 = select i1 %.not5.i56, float %303, float %302, !dbg !43
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i58 = icmp eq i32 %304, 0, !dbg !43
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i57, float %291, float %285) #5, !dbg !43
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i57, float %291, float %285) #5, !dbg !43
  %.06.i59 = select i1 %.not6.i58, float %306, float %305, !dbg !43
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i60 = icmp eq i32 %307, 0, !dbg !43
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i59, float %291, float %284) #5, !dbg !43
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i59, float %291, float %284) #5, !dbg !43
  %.07.i61 = select i1 %.not7.i60, float %309, float %308, !dbg !43
  %310 = fneg float %291, !dbg !43
  %311 = select i1 %280, float %310, float %224, !dbg !43
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i62 = icmp eq i32 %312, 0, !dbg !43
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i61, float %311, float %311) #5, !dbg !43
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i61, float %311, float %311) #5, !dbg !43
  %.08.i63 = select i1 %.not8.i62, float %314, float %313, !dbg !43
  br i1 %280, label %315, label %__nv_erff.exit68, !dbg !43

315:                                              ; preds = %__internal_fmad.exit.i49
  %316 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i63) #5, !dbg !43
  %317 = fsub float 1.000000e+00, %316, !dbg !43
  %318 = bitcast float %317 to i32, !dbg !43
  %319 = bitcast float %224 to i32, !dbg !43
  %320 = and i32 %319, -2147483648, !dbg !43
  %321 = or i32 %320, %318, !dbg !43
  %322 = bitcast i32 %321 to float, !dbg !43
  br label %__nv_erff.exit68, !dbg !43

__nv_erff.exit68:                                 ; preds = %__internal_fmad.exit.i49, %315
  %r.0.i64 = phi float [ %322, %315 ], [ %.08.i63, %__internal_fmad.exit.i49 ], !dbg !43
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i69 = icmp eq i32 %323, 0, !dbg !43
  %324 = tail call float @llvm.nvvm.fabs.ftz.f(float %225) #5, !dbg !43
  %325 = tail call float @llvm.nvvm.fabs.f(float %225) #5, !dbg !43
  %.0.i70 = select i1 %.not.i69, float %325, float %324, !dbg !43
  %326 = fcmp oge float %.0.i70, 0x3FF00C1FC0000000, !dbg !43
  br i1 %326, label %__nv_fabsf.exit1.i87, label %328, !dbg !43

__nv_fabsf.exit1.i87:                             ; preds = %__nv_erff.exit68
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i88 = icmp eq i32 %327, 0, !dbg !43
  %.01.i89 = select i1 %.not1.i88, float %325, float %324, !dbg !43
  br label %__internal_fmad.exit.i71, !dbg !43

328:                                              ; preds = %__nv_erff.exit68
  %329 = fmul float %225, %225, !dbg !43
  br label %__internal_fmad.exit.i71, !dbg !43

__internal_fmad.exit.i71:                         ; preds = %328, %__nv_fabsf.exit1.i87
  %330 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i87 ], [ 0x3FC06EBA60000000, %328 ], !dbg !43
  %331 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i87 ], [ 0xBFD8127580000000, %328 ], !dbg !43
  %332 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i87 ], [ 0x3FBCE315E0000000, %328 ], !dbg !43
  %333 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i87 ], [ 0xBF9B837CE0000000, %328 ], !dbg !43
  %334 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i87 ], [ 0x3F755ABD40000000, %328 ], !dbg !43
  %335 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i87 ], [ 0xBF4AE9A400000000, %328 ], !dbg !43
  %336 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i87 ], [ 0x3F163D2D40000000, %328 ], !dbg !43
  %337 = phi float [ %.01.i89, %__nv_fabsf.exit1.i87 ], [ %329, %328 ], !dbg !43
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i72 = icmp eq i32 %338, 0, !dbg !43
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %336, float %337, float %335) #5, !dbg !43
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %336, float %337, float %335) #5, !dbg !43
  %.02.i73 = select i1 %.not2.i72, float %340, float %339, !dbg !43
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i74 = icmp eq i32 %341, 0, !dbg !43
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i73, float %337, float %334) #5, !dbg !43
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i73, float %337, float %334) #5, !dbg !43
  %.03.i75 = select i1 %.not3.i74, float %343, float %342, !dbg !43
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i76 = icmp eq i32 %344, 0, !dbg !43
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i75, float %337, float %333) #5, !dbg !43
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i75, float %337, float %333) #5, !dbg !43
  %.04.i77 = select i1 %.not4.i76, float %346, float %345, !dbg !43
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i78 = icmp eq i32 %347, 0, !dbg !43
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i77, float %337, float %332) #5, !dbg !43
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i77, float %337, float %332) #5, !dbg !43
  %.05.i79 = select i1 %.not5.i78, float %349, float %348, !dbg !43
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i80 = icmp eq i32 %350, 0, !dbg !43
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i79, float %337, float %331) #5, !dbg !43
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i79, float %337, float %331) #5, !dbg !43
  %.06.i81 = select i1 %.not6.i80, float %352, float %351, !dbg !43
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i82 = icmp eq i32 %353, 0, !dbg !43
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %337, float %330) #5, !dbg !43
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %337, float %330) #5, !dbg !43
  %.07.i83 = select i1 %.not7.i82, float %355, float %354, !dbg !43
  %356 = fneg float %337, !dbg !43
  %357 = select i1 %326, float %356, float %225, !dbg !43
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i84 = icmp eq i32 %358, 0, !dbg !43
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i83, float %357, float %357) #5, !dbg !43
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i83, float %357, float %357) #5, !dbg !43
  %.08.i85 = select i1 %.not8.i84, float %360, float %359, !dbg !43
  br i1 %326, label %361, label %__nv_erff.exit90, !dbg !43

361:                                              ; preds = %__internal_fmad.exit.i71
  %362 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i85) #5, !dbg !43
  %363 = fsub float 1.000000e+00, %362, !dbg !43
  %364 = bitcast float %363 to i32, !dbg !43
  %365 = bitcast float %225 to i32, !dbg !43
  %366 = and i32 %365, -2147483648, !dbg !43
  %367 = or i32 %366, %364, !dbg !43
  %368 = bitcast i32 %367 to float, !dbg !43
  br label %__nv_erff.exit90, !dbg !43

__nv_erff.exit90:                                 ; preds = %__internal_fmad.exit.i71, %361
  %r.0.i86 = phi float [ %368, %361 ], [ %.08.i85, %__internal_fmad.exit.i71 ], !dbg !43
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i91 = icmp eq i32 %369, 0, !dbg !43
  %370 = tail call float @llvm.nvvm.fabs.ftz.f(float %226) #5, !dbg !43
  %371 = tail call float @llvm.nvvm.fabs.f(float %226) #5, !dbg !43
  %.0.i92 = select i1 %.not.i91, float %371, float %370, !dbg !43
  %372 = fcmp oge float %.0.i92, 0x3FF00C1FC0000000, !dbg !43
  br i1 %372, label %__nv_fabsf.exit1.i109, label %374, !dbg !43

__nv_fabsf.exit1.i109:                            ; preds = %__nv_erff.exit90
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i110 = icmp eq i32 %373, 0, !dbg !43
  %.01.i111 = select i1 %.not1.i110, float %371, float %370, !dbg !43
  br label %__internal_fmad.exit.i93, !dbg !43

374:                                              ; preds = %__nv_erff.exit90
  %375 = fmul float %226, %226, !dbg !43
  br label %__internal_fmad.exit.i93, !dbg !43

__internal_fmad.exit.i93:                         ; preds = %374, %__nv_fabsf.exit1.i109
  %376 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i109 ], [ 0x3FC06EBA60000000, %374 ], !dbg !43
  %377 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i109 ], [ 0xBFD8127580000000, %374 ], !dbg !43
  %378 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i109 ], [ 0x3FBCE315E0000000, %374 ], !dbg !43
  %379 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i109 ], [ 0xBF9B837CE0000000, %374 ], !dbg !43
  %380 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i109 ], [ 0x3F755ABD40000000, %374 ], !dbg !43
  %381 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i109 ], [ 0xBF4AE9A400000000, %374 ], !dbg !43
  %382 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i109 ], [ 0x3F163D2D40000000, %374 ], !dbg !43
  %383 = phi float [ %.01.i111, %__nv_fabsf.exit1.i109 ], [ %375, %374 ], !dbg !43
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i94 = icmp eq i32 %384, 0, !dbg !43
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %382, float %383, float %381) #5, !dbg !43
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %382, float %383, float %381) #5, !dbg !43
  %.02.i95 = select i1 %.not2.i94, float %386, float %385, !dbg !43
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i96 = icmp eq i32 %387, 0, !dbg !43
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i95, float %383, float %380) #5, !dbg !43
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i95, float %383, float %380) #5, !dbg !43
  %.03.i97 = select i1 %.not3.i96, float %389, float %388, !dbg !43
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i98 = icmp eq i32 %390, 0, !dbg !43
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i97, float %383, float %379) #5, !dbg !43
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i97, float %383, float %379) #5, !dbg !43
  %.04.i99 = select i1 %.not4.i98, float %392, float %391, !dbg !43
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i100 = icmp eq i32 %393, 0, !dbg !43
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i99, float %383, float %378) #5, !dbg !43
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i99, float %383, float %378) #5, !dbg !43
  %.05.i101 = select i1 %.not5.i100, float %395, float %394, !dbg !43
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i102 = icmp eq i32 %396, 0, !dbg !43
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float %383, float %377) #5, !dbg !43
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float %383, float %377) #5, !dbg !43
  %.06.i103 = select i1 %.not6.i102, float %398, float %397, !dbg !43
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i104 = icmp eq i32 %399, 0, !dbg !43
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i103, float %383, float %376) #5, !dbg !43
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i103, float %383, float %376) #5, !dbg !43
  %.07.i105 = select i1 %.not7.i104, float %401, float %400, !dbg !43
  %402 = fneg float %383, !dbg !43
  %403 = select i1 %372, float %402, float %226, !dbg !43
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i106 = icmp eq i32 %404, 0, !dbg !43
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i105, float %403, float %403) #5, !dbg !43
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i105, float %403, float %403) #5, !dbg !43
  %.08.i107 = select i1 %.not8.i106, float %406, float %405, !dbg !43
  br i1 %372, label %407, label %__nv_erff.exit112, !dbg !43

407:                                              ; preds = %__internal_fmad.exit.i93
  %408 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i107) #5, !dbg !43
  %409 = fsub float 1.000000e+00, %408, !dbg !43
  %410 = bitcast float %409 to i32, !dbg !43
  %411 = bitcast float %226 to i32, !dbg !43
  %412 = and i32 %411, -2147483648, !dbg !43
  %413 = or i32 %412, %410, !dbg !43
  %414 = bitcast i32 %413 to float, !dbg !43
  br label %__nv_erff.exit112, !dbg !43

__nv_erff.exit112:                                ; preds = %__internal_fmad.exit.i93, %407
  %r.0.i108 = phi float [ %414, %407 ], [ %.08.i107, %__internal_fmad.exit.i93 ], !dbg !43
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i113 = icmp eq i32 %415, 0, !dbg !43
  %416 = tail call float @llvm.nvvm.fabs.ftz.f(float %227) #5, !dbg !43
  %417 = tail call float @llvm.nvvm.fabs.f(float %227) #5, !dbg !43
  %.0.i114 = select i1 %.not.i113, float %417, float %416, !dbg !43
  %418 = fcmp oge float %.0.i114, 0x3FF00C1FC0000000, !dbg !43
  br i1 %418, label %__nv_fabsf.exit1.i131, label %420, !dbg !43

__nv_fabsf.exit1.i131:                            ; preds = %__nv_erff.exit112
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i132 = icmp eq i32 %419, 0, !dbg !43
  %.01.i133 = select i1 %.not1.i132, float %417, float %416, !dbg !43
  br label %__internal_fmad.exit.i115, !dbg !43

420:                                              ; preds = %__nv_erff.exit112
  %421 = fmul float %227, %227, !dbg !43
  br label %__internal_fmad.exit.i115, !dbg !43

__internal_fmad.exit.i115:                        ; preds = %420, %__nv_fabsf.exit1.i131
  %422 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i131 ], [ 0x3FC06EBA60000000, %420 ], !dbg !43
  %423 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i131 ], [ 0xBFD8127580000000, %420 ], !dbg !43
  %424 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i131 ], [ 0x3FBCE315E0000000, %420 ], !dbg !43
  %425 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i131 ], [ 0xBF9B837CE0000000, %420 ], !dbg !43
  %426 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i131 ], [ 0x3F755ABD40000000, %420 ], !dbg !43
  %427 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i131 ], [ 0xBF4AE9A400000000, %420 ], !dbg !43
  %428 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i131 ], [ 0x3F163D2D40000000, %420 ], !dbg !43
  %429 = phi float [ %.01.i133, %__nv_fabsf.exit1.i131 ], [ %421, %420 ], !dbg !43
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i116 = icmp eq i32 %430, 0, !dbg !43
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %428, float %429, float %427) #5, !dbg !43
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %428, float %429, float %427) #5, !dbg !43
  %.02.i117 = select i1 %.not2.i116, float %432, float %431, !dbg !43
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i118 = icmp eq i32 %433, 0, !dbg !43
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i117, float %429, float %426) #5, !dbg !43
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i117, float %429, float %426) #5, !dbg !43
  %.03.i119 = select i1 %.not3.i118, float %435, float %434, !dbg !43
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i120 = icmp eq i32 %436, 0, !dbg !43
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i119, float %429, float %425) #5, !dbg !43
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i119, float %429, float %425) #5, !dbg !43
  %.04.i121 = select i1 %.not4.i120, float %438, float %437, !dbg !43
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i122 = icmp eq i32 %439, 0, !dbg !43
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i121, float %429, float %424) #5, !dbg !43
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i121, float %429, float %424) #5, !dbg !43
  %.05.i123 = select i1 %.not5.i122, float %441, float %440, !dbg !43
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i124 = icmp eq i32 %442, 0, !dbg !43
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i123, float %429, float %423) #5, !dbg !43
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i123, float %429, float %423) #5, !dbg !43
  %.06.i125 = select i1 %.not6.i124, float %444, float %443, !dbg !43
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i126 = icmp eq i32 %445, 0, !dbg !43
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i125, float %429, float %422) #5, !dbg !43
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i125, float %429, float %422) #5, !dbg !43
  %.07.i127 = select i1 %.not7.i126, float %447, float %446, !dbg !43
  %448 = fneg float %429, !dbg !43
  %449 = select i1 %418, float %448, float %227, !dbg !43
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i128 = icmp eq i32 %450, 0, !dbg !43
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i127, float %449, float %449) #5, !dbg !43
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i127, float %449, float %449) #5, !dbg !43
  %.08.i129 = select i1 %.not8.i128, float %452, float %451, !dbg !43
  br i1 %418, label %453, label %__nv_erff.exit134, !dbg !43

453:                                              ; preds = %__internal_fmad.exit.i115
  %454 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i129) #5, !dbg !43
  %455 = fsub float 1.000000e+00, %454, !dbg !43
  %456 = bitcast float %455 to i32, !dbg !43
  %457 = bitcast float %227 to i32, !dbg !43
  %458 = and i32 %457, -2147483648, !dbg !43
  %459 = or i32 %458, %456, !dbg !43
  %460 = bitcast i32 %459 to float, !dbg !43
  br label %__nv_erff.exit134, !dbg !43

__nv_erff.exit134:                                ; preds = %__internal_fmad.exit.i115, %453
  %r.0.i130 = phi float [ %460, %453 ], [ %.08.i129, %__internal_fmad.exit.i115 ], !dbg !43
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i135 = icmp eq i32 %461, 0, !dbg !43
  %462 = tail call float @llvm.nvvm.fabs.ftz.f(float %228) #5, !dbg !43
  %463 = tail call float @llvm.nvvm.fabs.f(float %228) #5, !dbg !43
  %.0.i136 = select i1 %.not.i135, float %463, float %462, !dbg !43
  %464 = fcmp oge float %.0.i136, 0x3FF00C1FC0000000, !dbg !43
  br i1 %464, label %__nv_fabsf.exit1.i153, label %466, !dbg !43

__nv_fabsf.exit1.i153:                            ; preds = %__nv_erff.exit134
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i154 = icmp eq i32 %465, 0, !dbg !43
  %.01.i155 = select i1 %.not1.i154, float %463, float %462, !dbg !43
  br label %__internal_fmad.exit.i137, !dbg !43

466:                                              ; preds = %__nv_erff.exit134
  %467 = fmul float %228, %228, !dbg !43
  br label %__internal_fmad.exit.i137, !dbg !43

__internal_fmad.exit.i137:                        ; preds = %466, %__nv_fabsf.exit1.i153
  %468 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i153 ], [ 0x3FC06EBA60000000, %466 ], !dbg !43
  %469 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i153 ], [ 0xBFD8127580000000, %466 ], !dbg !43
  %470 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i153 ], [ 0x3FBCE315E0000000, %466 ], !dbg !43
  %471 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i153 ], [ 0xBF9B837CE0000000, %466 ], !dbg !43
  %472 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i153 ], [ 0x3F755ABD40000000, %466 ], !dbg !43
  %473 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i153 ], [ 0xBF4AE9A400000000, %466 ], !dbg !43
  %474 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i153 ], [ 0x3F163D2D40000000, %466 ], !dbg !43
  %475 = phi float [ %.01.i155, %__nv_fabsf.exit1.i153 ], [ %467, %466 ], !dbg !43
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i138 = icmp eq i32 %476, 0, !dbg !43
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %474, float %475, float %473) #5, !dbg !43
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %474, float %475, float %473) #5, !dbg !43
  %.02.i139 = select i1 %.not2.i138, float %478, float %477, !dbg !43
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i140 = icmp eq i32 %479, 0, !dbg !43
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i139, float %475, float %472) #5, !dbg !43
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i139, float %475, float %472) #5, !dbg !43
  %.03.i141 = select i1 %.not3.i140, float %481, float %480, !dbg !43
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i142 = icmp eq i32 %482, 0, !dbg !43
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i141, float %475, float %471) #5, !dbg !43
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i141, float %475, float %471) #5, !dbg !43
  %.04.i143 = select i1 %.not4.i142, float %484, float %483, !dbg !43
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i144 = icmp eq i32 %485, 0, !dbg !43
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i143, float %475, float %470) #5, !dbg !43
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i143, float %475, float %470) #5, !dbg !43
  %.05.i145 = select i1 %.not5.i144, float %487, float %486, !dbg !43
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i146 = icmp eq i32 %488, 0, !dbg !43
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i145, float %475, float %469) #5, !dbg !43
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i145, float %475, float %469) #5, !dbg !43
  %.06.i147 = select i1 %.not6.i146, float %490, float %489, !dbg !43
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i148 = icmp eq i32 %491, 0, !dbg !43
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i147, float %475, float %468) #5, !dbg !43
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i147, float %475, float %468) #5, !dbg !43
  %.07.i149 = select i1 %.not7.i148, float %493, float %492, !dbg !43
  %494 = fneg float %475, !dbg !43
  %495 = select i1 %464, float %494, float %228, !dbg !43
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i150 = icmp eq i32 %496, 0, !dbg !43
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i149, float %495, float %495) #5, !dbg !43
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i149, float %495, float %495) #5, !dbg !43
  %.08.i151 = select i1 %.not8.i150, float %498, float %497, !dbg !43
  br i1 %464, label %499, label %__nv_erff.exit156, !dbg !43

499:                                              ; preds = %__internal_fmad.exit.i137
  %500 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i151) #5, !dbg !43
  %501 = fsub float 1.000000e+00, %500, !dbg !43
  %502 = bitcast float %501 to i32, !dbg !43
  %503 = bitcast float %228 to i32, !dbg !43
  %504 = and i32 %503, -2147483648, !dbg !43
  %505 = or i32 %504, %502, !dbg !43
  %506 = bitcast i32 %505 to float, !dbg !43
  br label %__nv_erff.exit156, !dbg !43

__nv_erff.exit156:                                ; preds = %__internal_fmad.exit.i137, %499
  %r.0.i152 = phi float [ %506, %499 ], [ %.08.i151, %__internal_fmad.exit.i137 ], !dbg !43
  %507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i157 = icmp eq i32 %507, 0, !dbg !43
  %508 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #5, !dbg !43
  %509 = tail call float @llvm.nvvm.fabs.f(float %229) #5, !dbg !43
  %.0.i158 = select i1 %.not.i157, float %509, float %508, !dbg !43
  %510 = fcmp oge float %.0.i158, 0x3FF00C1FC0000000, !dbg !43
  br i1 %510, label %__nv_fabsf.exit1.i175, label %512, !dbg !43

__nv_fabsf.exit1.i175:                            ; preds = %__nv_erff.exit156
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i176 = icmp eq i32 %511, 0, !dbg !43
  %.01.i177 = select i1 %.not1.i176, float %509, float %508, !dbg !43
  br label %__internal_fmad.exit.i159, !dbg !43

512:                                              ; preds = %__nv_erff.exit156
  %513 = fmul float %229, %229, !dbg !43
  br label %__internal_fmad.exit.i159, !dbg !43

__internal_fmad.exit.i159:                        ; preds = %512, %__nv_fabsf.exit1.i175
  %514 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i175 ], [ 0x3FC06EBA60000000, %512 ], !dbg !43
  %515 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i175 ], [ 0xBFD8127580000000, %512 ], !dbg !43
  %516 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i175 ], [ 0x3FBCE315E0000000, %512 ], !dbg !43
  %517 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i175 ], [ 0xBF9B837CE0000000, %512 ], !dbg !43
  %518 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i175 ], [ 0x3F755ABD40000000, %512 ], !dbg !43
  %519 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i175 ], [ 0xBF4AE9A400000000, %512 ], !dbg !43
  %520 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i175 ], [ 0x3F163D2D40000000, %512 ], !dbg !43
  %521 = phi float [ %.01.i177, %__nv_fabsf.exit1.i175 ], [ %513, %512 ], !dbg !43
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i160 = icmp eq i32 %522, 0, !dbg !43
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %520, float %521, float %519) #5, !dbg !43
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %520, float %521, float %519) #5, !dbg !43
  %.02.i161 = select i1 %.not2.i160, float %524, float %523, !dbg !43
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i162 = icmp eq i32 %525, 0, !dbg !43
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i161, float %521, float %518) #5, !dbg !43
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i161, float %521, float %518) #5, !dbg !43
  %.03.i163 = select i1 %.not3.i162, float %527, float %526, !dbg !43
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i164 = icmp eq i32 %528, 0, !dbg !43
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i163, float %521, float %517) #5, !dbg !43
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i163, float %521, float %517) #5, !dbg !43
  %.04.i165 = select i1 %.not4.i164, float %530, float %529, !dbg !43
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i166 = icmp eq i32 %531, 0, !dbg !43
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i165, float %521, float %516) #5, !dbg !43
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i165, float %521, float %516) #5, !dbg !43
  %.05.i167 = select i1 %.not5.i166, float %533, float %532, !dbg !43
  %534 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i168 = icmp eq i32 %534, 0, !dbg !43
  %535 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i167, float %521, float %515) #5, !dbg !43
  %536 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i167, float %521, float %515) #5, !dbg !43
  %.06.i169 = select i1 %.not6.i168, float %536, float %535, !dbg !43
  %537 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i170 = icmp eq i32 %537, 0, !dbg !43
  %538 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i169, float %521, float %514) #5, !dbg !43
  %539 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i169, float %521, float %514) #5, !dbg !43
  %.07.i171 = select i1 %.not7.i170, float %539, float %538, !dbg !43
  %540 = fneg float %521, !dbg !43
  %541 = select i1 %510, float %540, float %229, !dbg !43
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i172 = icmp eq i32 %542, 0, !dbg !43
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i171, float %541, float %541) #5, !dbg !43
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i171, float %541, float %541) #5, !dbg !43
  %.08.i173 = select i1 %.not8.i172, float %544, float %543, !dbg !43
  br i1 %510, label %545, label %__nv_erff.exit178, !dbg !43

545:                                              ; preds = %__internal_fmad.exit.i159
  %546 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i173) #5, !dbg !43
  %547 = fsub float 1.000000e+00, %546, !dbg !43
  %548 = bitcast float %547 to i32, !dbg !43
  %549 = bitcast float %229 to i32, !dbg !43
  %550 = and i32 %549, -2147483648, !dbg !43
  %551 = or i32 %550, %548, !dbg !43
  %552 = bitcast i32 %551 to float, !dbg !43
  br label %__nv_erff.exit178, !dbg !43

__nv_erff.exit178:                                ; preds = %__internal_fmad.exit.i159, %545
  %r.0.i174 = phi float [ %552, %545 ], [ %.08.i173, %__internal_fmad.exit.i159 ], !dbg !43
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i179 = icmp eq i32 %553, 0, !dbg !43
  %554 = tail call float @llvm.nvvm.fabs.ftz.f(float %230) #5, !dbg !43
  %555 = tail call float @llvm.nvvm.fabs.f(float %230) #5, !dbg !43
  %.0.i180 = select i1 %.not.i179, float %555, float %554, !dbg !43
  %556 = fcmp oge float %.0.i180, 0x3FF00C1FC0000000, !dbg !43
  br i1 %556, label %__nv_fabsf.exit1.i197, label %558, !dbg !43

__nv_fabsf.exit1.i197:                            ; preds = %__nv_erff.exit178
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i198 = icmp eq i32 %557, 0, !dbg !43
  %.01.i199 = select i1 %.not1.i198, float %555, float %554, !dbg !43
  br label %__internal_fmad.exit.i181, !dbg !43

558:                                              ; preds = %__nv_erff.exit178
  %559 = fmul float %230, %230, !dbg !43
  br label %__internal_fmad.exit.i181, !dbg !43

__internal_fmad.exit.i181:                        ; preds = %558, %__nv_fabsf.exit1.i197
  %560 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i197 ], [ 0x3FC06EBA60000000, %558 ], !dbg !43
  %561 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i197 ], [ 0xBFD8127580000000, %558 ], !dbg !43
  %562 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i197 ], [ 0x3FBCE315E0000000, %558 ], !dbg !43
  %563 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i197 ], [ 0xBF9B837CE0000000, %558 ], !dbg !43
  %564 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i197 ], [ 0x3F755ABD40000000, %558 ], !dbg !43
  %565 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i197 ], [ 0xBF4AE9A400000000, %558 ], !dbg !43
  %566 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i197 ], [ 0x3F163D2D40000000, %558 ], !dbg !43
  %567 = phi float [ %.01.i199, %__nv_fabsf.exit1.i197 ], [ %559, %558 ], !dbg !43
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i182 = icmp eq i32 %568, 0, !dbg !43
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %566, float %567, float %565) #5, !dbg !43
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %566, float %567, float %565) #5, !dbg !43
  %.02.i183 = select i1 %.not2.i182, float %570, float %569, !dbg !43
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i184 = icmp eq i32 %571, 0, !dbg !43
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i183, float %567, float %564) #5, !dbg !43
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i183, float %567, float %564) #5, !dbg !43
  %.03.i185 = select i1 %.not3.i184, float %573, float %572, !dbg !43
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i186 = icmp eq i32 %574, 0, !dbg !43
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i185, float %567, float %563) #5, !dbg !43
  %576 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i185, float %567, float %563) #5, !dbg !43
  %.04.i187 = select i1 %.not4.i186, float %576, float %575, !dbg !43
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i188 = icmp eq i32 %577, 0, !dbg !43
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i187, float %567, float %562) #5, !dbg !43
  %579 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i187, float %567, float %562) #5, !dbg !43
  %.05.i189 = select i1 %.not5.i188, float %579, float %578, !dbg !43
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i190 = icmp eq i32 %580, 0, !dbg !43
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i189, float %567, float %561) #5, !dbg !43
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i189, float %567, float %561) #5, !dbg !43
  %.06.i191 = select i1 %.not6.i190, float %582, float %581, !dbg !43
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i192 = icmp eq i32 %583, 0, !dbg !43
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i191, float %567, float %560) #5, !dbg !43
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i191, float %567, float %560) #5, !dbg !43
  %.07.i193 = select i1 %.not7.i192, float %585, float %584, !dbg !43
  %586 = fneg float %567, !dbg !43
  %587 = select i1 %556, float %586, float %230, !dbg !43
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i194 = icmp eq i32 %588, 0, !dbg !43
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i193, float %587, float %587) #5, !dbg !43
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i193, float %587, float %587) #5, !dbg !43
  %.08.i195 = select i1 %.not8.i194, float %590, float %589, !dbg !43
  br i1 %556, label %591, label %__nv_erff.exit200, !dbg !43

591:                                              ; preds = %__internal_fmad.exit.i181
  %592 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i195) #5, !dbg !43
  %593 = fsub float 1.000000e+00, %592, !dbg !43
  %594 = bitcast float %593 to i32, !dbg !43
  %595 = bitcast float %230 to i32, !dbg !43
  %596 = and i32 %595, -2147483648, !dbg !43
  %597 = or i32 %596, %594, !dbg !43
  %598 = bitcast i32 %597 to float, !dbg !43
  br label %__nv_erff.exit200, !dbg !43

__nv_erff.exit200:                                ; preds = %__internal_fmad.exit.i181, %591
  %r.0.i196 = phi float [ %598, %591 ], [ %.08.i195, %__internal_fmad.exit.i181 ], !dbg !43
  %599 = fmul float %222, 5.000000e-01, !dbg !44
  %600 = fmul float %221, 5.000000e-01, !dbg !44
  %601 = fmul float %220, 5.000000e-01, !dbg !44
  %602 = fmul float %219, 5.000000e-01, !dbg !44
  %603 = fmul float %218, 5.000000e-01, !dbg !44
  %604 = fmul float %217, 5.000000e-01, !dbg !44
  %605 = fmul float %216, 5.000000e-01, !dbg !44
  %606 = fmul float %215, 5.000000e-01, !dbg !44
  %607 = or disjoint i32 %10, %15, !dbg !13
  %608 = icmp slt i32 %607, 1024, !dbg !14
  %609 = fadd float %r.0.i, 1.000000e+00, !dbg !45
  %610 = fadd float %r.0.i64, 1.000000e+00, !dbg !45
  %611 = fadd float %r.0.i86, 1.000000e+00, !dbg !45
  %612 = fadd float %r.0.i108, 1.000000e+00, !dbg !45
  %613 = fadd float %r.0.i130, 1.000000e+00, !dbg !45
  %614 = fadd float %r.0.i152, 1.000000e+00, !dbg !45
  %615 = fadd float %r.0.i174, 1.000000e+00, !dbg !45
  %616 = fadd float %r.0.i196, 1.000000e+00, !dbg !45
  %617 = fmul float %606, %609, !dbg !46
  %618 = fmul float %605, %610, !dbg !46
  %619 = fmul float %604, %611, !dbg !46
  %620 = fmul float %603, %612, !dbg !46
  %621 = fmul float %602, %613, !dbg !46
  %622 = fmul float %601, %614, !dbg !46
  %623 = fmul float %600, %615, !dbg !46
  %624 = fmul float %599, %616, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !47
  %625 = sext i32 %607 to i64, !dbg !48
  %626 = getelementptr float, ptr addrspace(1) %0, i64 %625, !dbg !48
  %627 = and i32 %11, 128, !dbg !49
  %628 = icmp eq i32 %627, 0, !dbg !49
  %629 = bitcast float %99 to i32, !dbg !49
  %630 = and i1 %628, %608, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %629, ptr addrspace(1) %626, i1 %630) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %631 = getelementptr float, ptr addrspace(1) %1, i64 %625, !dbg !51
  %632 = bitcast float %.0.i to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %632, ptr addrspace(1) %631, i1 %630) #5, !dbg !52
  %633 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !53
  %634 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !53
  %635 = bitcast float %617 to i32, !dbg !54
  %636 = bitcast float %618 to i32, !dbg !54
  %637 = bitcast float %619 to i32, !dbg !54
  %638 = bitcast float %620 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %635, i32 %636, i32 %637, i32 %638, ptr addrspace(1) %633, i1 %18) #5, !dbg !54
  %639 = bitcast float %621 to i32, !dbg !54
  %640 = bitcast float %622 to i32, !dbg !54
  %641 = bitcast float %623 to i32, !dbg !54
  %642 = bitcast float %624 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %639, i32 %640, i32 %641, i32 %642, ptr addrspace(1) %634, i1 %19) #5, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py", directory: "inductor_cache/7t")
!4 = !{ptr @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2", linkageName: "triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 38, scope: !7)
!17 = !DILocation(line: 31, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 43, scope: !7)
!20 = !DILocation(line: 32, column: 31, scope: !7)
!21 = !DILocation(line: 32, column: 36, scope: !7)
!22 = !DILocation(line: 33, column: 31, scope: !7)
!23 = !DILocation(line: 33, column: 36, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !28)
!25 = distinct !DILexicalBlockFile(scope: !27, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!28 = !DILocation(line: 36, column: 24, scope: !7)
!29 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !28)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 18, scope: !7)
!32 = !DILocation(line: 40, column: 18, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !34)
!34 = !DILocation(line: 43, column: 26, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !34)
!36 = !DILocation(line: 47, column: 27, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 46, column: 20, scope: !7)
!39 = !DILocation(line: 48, column: 19, scope: !7)
!40 = !DILocation(line: 49, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 20, scope: !7)
!42 = !DILocation(line: 54, column: 20, scope: !7)
!43 = !DILocation(line: 55, column: 26, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 57, column: 20, scope: !7)
!46 = !DILocation(line: 58, column: 20, scope: !7)
!47 = !DILocation(line: 59, column: 4, scope: !7)
!48 = !DILocation(line: 60, column: 28, scope: !7)
!49 = !DILocation(line: 60, column: 39, scope: !7)
!50 = !DILocation(line: 61, column: 4, scope: !7)
!51 = !DILocation(line: 62, column: 28, scope: !7)
!52 = !DILocation(line: 62, column: 40, scope: !7)
!53 = !DILocation(line: 63, column: 28, scope: !7)
!54 = !DILocation(line: 63, column: 48, scope: !7)
!55 = !DILocation(line: 63, column: 4, scope: !7)
