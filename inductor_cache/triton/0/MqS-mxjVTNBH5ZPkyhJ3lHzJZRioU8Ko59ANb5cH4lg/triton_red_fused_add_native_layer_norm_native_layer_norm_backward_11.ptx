//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11 // -- Begin function triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11
.visible .entry triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_4,
	.param .u32 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_5,
	.param .u32 triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<73>;
	.reg .b32 	%r<201>;
	.reg .f32 	%f<182>;
	.reg .b64 	%rd<47>;
	.loc	1 19 0                          // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:19:0

// %bb.0:                               // %.peel.begin
	ld.param.u64 	%rd18, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_4];
	ld.param.u64 	%rd17, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_3];
	ld.param.u64 	%rd16, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_2];
	ld.param.u64 	%rd15, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_1];
	ld.param.u64 	%rd14, [triton_red_fused_add_native_layer_norm_native_layer_norm_backward_11_param_0];
$L__tmp0:
	.loc	1 22 28                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:22:28
	// begin inline asm
	mov.u32 %r19, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:22:33
	shl.b32 	%r1, %r19, 6;
	.loc	1 23 44                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 1, 6;
	shl.b32 	%r52, %r2, 2;
	and.b32  	%r53, %r52, 4;
	and.b32  	%r54, %r52, 60;
	.loc	1 23 23                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:23:23
	or.b32  	%r4, %r1, %r3;
	or.b32  	%r5, %r1, %r54;
	.loc	1 24 21                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:24:21
	setp.lt.s32 	%p14, %r4, 1024;
	setp.lt.s32 	%p5, %r5, 1024;
	.loc	1 25 33                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:25:33
	bfe.u32 	%r55, %r2, 4, 3;
	.loc	1 27 19                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:27:19
	shr.s32 	%r57, %r5, 31;
	shr.u32 	%r58, %r57, 24;
	add.s32 	%r59, %r5, %r58;
	shr.s32 	%r60, %r59, 8;
	.loc	1 26 19                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:26:19
	and.b32  	%r61, %r59, -256;
	sub.s32 	%r62, %r5, %r61;
	.loc	1 37 42                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:42
	mul.lo.s32 	%r63, %r4, 96;
	mad.lo.s32 	%r64, %r60, 24576, %r62;
	shl.b32 	%r65, %r2, 5;
	and.b32  	%r66, %r65, 480;
	or.b32  	%r67, %r66, %r55;
	mov.u32 	%r68, global_smem;
	shl.b32 	%r69, %r67, 2;
	shl.b32 	%r70, %r66, 1;
	add.s32 	%r71, %r68, %r70;
	add.s32 	%r28, %r71, %r69;
	add.s32 	%r30, %r28, 48;
	add.s32 	%r32, %r28, 96;
	add.s32 	%r34, %r28, 144;
	shl.b32 	%r72, %r2, 3;
	and.b32  	%r73, %r72, 1008;
	add.s32 	%r74, %r68, %r73;
	shl.b32 	%r75, %r2, 4;
	and.b32  	%r76, %r75, 2032;
	add.s32 	%r10, %r74, %r76;
	.loc	1 36 48                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:48
	shl.b32 	%r77, %r55, 8;
	add.s32 	%r78, %r64, %r77;
	.loc	1 36 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:34
	mul.wide.s32 	%rd23, %r78, 4;
	add.s64 	%rd19, %rd14, %rd23;
	mov.b32 	%r24, 0;
	.loc	1 36 59                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:59
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r35, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r29, %r31, %r33, %r35 }, [ %rd19 + 0 ];
	@!%p5 mov.u32 %r29, %r24;
	@!%p5 mov.u32 %r31, %r24;
	@!%p5 mov.u32 %r33, %r24;
	@!%p5 mov.u32 %r35, %r24;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 39                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:39
	or.b32  	%r79, %r63, %r53;
	.loc	1 37 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:34
	mul.wide.s32 	%rd24, %r79, 4;
	add.s64 	%rd20, %rd15, %rd24;
	.loc	1 38 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:38:34
	mul.wide.u32 	%rd25, %r53, 4;
	add.s64 	%rd21, %rd16, %rd25;
	.loc	1 36 59                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:59
	ld.shared.v4.f32 	{%f34, %f35, %f36, %f37}, [%r10];
	.loc	1 37 47                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:47
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p14 ld.global.L1::evict_last.v4.b32 { %r36, %r37, %r38, %r39 }, [ %rd20 + 0 ];
	@!%p14 mov.u32 %r36, %r24;
	@!%p14 mov.u32 %r37, %r24;
	@!%p14 mov.u32 %r38, %r24;
	@!%p14 mov.u32 %r39, %r24;
	// end inline asm
	mov.b32 	%f38, %r36;
	mov.b32 	%f39, %r37;
	mov.b32 	%f40, %r38;
	mov.b32 	%f41, %r39;
	.loc	1 38 39                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:38:39
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r44, %r45, %r46, %r47 }, [ %rd21 + 0 ];
	@!%p10 mov.u32 %r44, %r24;
	@!%p10 mov.u32 %r45, %r24;
	@!%p10 mov.u32 %r46, %r24;
	@!%p10 mov.u32 %r47, %r24;
	// end inline asm
	mov.b32 	%f42, %r44;
	mov.b32 	%f43, %r45;
	mov.b32 	%f44, %r46;
	mov.b32 	%f45, %r47;
	.loc	1 39 22                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:39:22
	add.f32 	%f46, %f41, %f45;
	add.f32 	%f47, %f40, %f44;
	add.f32 	%f48, %f39, %f43;
	add.f32 	%f49, %f38, %f42;
	.loc	1 40 22                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:40:22
	add.f32 	%f50, %f34, %f49;
	add.f32 	%f51, %f35, %f48;
	add.f32 	%f52, %f36, %f47;
	add.f32 	%f53, %f37, %f46;
	.loc	1 45 60                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:45:60
	selp.f32 	%f181, %f53, 0f00000000, %p14;
	selp.f32 	%f180, %f52, 0f00000000, %p14;
	selp.f32 	%f179, %f51, 0f00000000, %p14;
	selp.f32 	%f178, %f50, 0f00000000, %p14;
	.loc	1 47 64                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:47:64
	selp.f32 	%f170, 0f3F800000, 0f00000000, %p14;
	.loc	1 32 36                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:32:36
	mad.lo.s32 	%r80, %r60, 24320, %r5;
	add.s32 	%r200, %r80, %r77;
	add.s32 	%r199, %r200, 2048;
	and.b32  	%r81, %r2, 1;
	mul.wide.u32 	%rd1, %r81, 16;
	add.s64 	%rd26, %rd1, %rd16;
	add.s64 	%rd43, %rd26, 32;
	mul.lo.s32 	%r82, %r3, 96;
	mad.lo.s32 	%r83, %r19, 6144, %r82;
	or.b32  	%r13, %r83, %r53;
	or.b32  	%r84, %r13, 8;
	cvt.u64.u32 	%rd3, %r84;
	mov.f32 	%f174, 0f00000000;
	mov.u64 	%rd44, 0;
	mov.f32 	%f171, %f170;
	mov.f32 	%f172, %f170;
	mov.f32 	%f173, %f170;
	mov.f32 	%f175, %f174;
	mov.f32 	%f176, %f174;
	mov.f32 	%f177, %f174;
$L__BB0_1:                              // %._crit_edge
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:34
	mul.wide.s32 	%rd30, %r199, 4;
	add.s64 	%rd27, %rd14, %rd30;
	.loc	1 36 59                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:59
	// begin inline asm
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r85, %r86, %r87, %r88 }, [ %rd27 + 0 ];
	@!%p5 mov.u32 %r85, %r24;
	@!%p5 mov.u32 %r86, %r24;
	@!%p5 mov.u32 %r87, %r24;
	@!%p5 mov.u32 %r88, %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 st.shared.b32 [ %r28 + 0 ], %r85;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r30 + 0 ], %r86;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r32 + 0 ], %r87;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r34 + 0 ], %r88;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:34
	add.s64 	%rd31, %rd3, %rd44;
	cvt.u32.u64 	%r129, %rd31;
	mul.wide.s32 	%rd32, %r129, 4;
	add.s64 	%rd28, %rd15, %rd32;
	.loc	1 36 59                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:36:59
	ld.shared.v4.f32 	{%f54, %f55, %f56, %f57}, [%r10];
	.loc	1 37 47                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:47
	// begin inline asm
	mov.u32 %r101, 0x0;
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	@%p14 ld.global.L1::evict_last.v4.b32 { %r101, %r102, %r103, %r104 }, [ %rd28 + 0 ];
	@!%p14 mov.u32 %r101, %r24;
	@!%p14 mov.u32 %r102, %r24;
	@!%p14 mov.u32 %r103, %r24;
	@!%p14 mov.u32 %r104, %r24;
	// end inline asm
	.loc	1 38 39                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:38:39
	// begin inline asm
	mov.u32 %r109, 0x0;
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r109, %r110, %r111, %r112 }, [ %rd43 + 0 ];
	@!%p10 mov.u32 %r109, %r24;
	@!%p10 mov.u32 %r110, %r24;
	@!%p10 mov.u32 %r111, %r24;
	@!%p10 mov.u32 %r112, %r24;
	// end inline asm
	.loc	1 37 47                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:37:47
	mov.b32 	%f58, %r101;
	mov.b32 	%f59, %r102;
	mov.b32 	%f60, %r103;
	mov.b32 	%f61, %r104;
	.loc	1 38 39                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:38:39
	mov.b32 	%f62, %r109;
	mov.b32 	%f63, %r110;
	mov.b32 	%f64, %r111;
	mov.b32 	%f65, %r112;
	.loc	1 39 22                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:39:22
	add.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f60, %f64;
	add.f32 	%f68, %f59, %f63;
	add.f32 	%f69, %f58, %f62;
	.loc	1 40 22                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:40:22
	add.f32 	%f70, %f54, %f69;
	add.f32 	%f71, %f55, %f68;
	add.f32 	%f72, %f56, %f67;
	add.f32 	%f73, %f57, %f66;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f74, %f73, %f181;
	sub.f32 	%f75, %f72, %f180;
	sub.f32 	%f76, %f71, %f179;
	sub.f32 	%f77, %f70, %f178;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f78, %f170, 0f3F800000;
	add.f32 	%f79, %f171, 0f3F800000;
	add.f32 	%f80, %f172, 0f3F800000;
	add.f32 	%f81, %f173, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r118, %f77;
	mov.b32 	%r119, %f78;
	// begin inline asm
	div.full.f32 %r117, %r118, %r119;
	// end inline asm
	mov.b32 	%f82, %r117;
	mov.b32 	%r121, %f76;
	mov.b32 	%r122, %f79;
	// begin inline asm
	div.full.f32 %r120, %r121, %r122;
	// end inline asm
	mov.b32 	%f83, %r120;
	mov.b32 	%r124, %f75;
	mov.b32 	%r125, %f80;
	// begin inline asm
	div.full.f32 %r123, %r124, %r125;
	// end inline asm
	mov.b32 	%f84, %r123;
	mov.b32 	%r127, %f74;
	mov.b32 	%r128, %f81;
	// begin inline asm
	div.full.f32 %r126, %r127, %r128;
	// end inline asm
	mov.b32 	%f85, %r126;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f86, %f178, %f82;
	add.f32 	%f87, %f179, %f83;
	add.f32 	%f88, %f180, %f84;
	add.f32 	%f89, %f181, %f85;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f90, %f73, %f89;
	sub.f32 	%f91, %f72, %f88;
	sub.f32 	%f92, %f71, %f87;
	sub.f32 	%f93, %f70, %f86;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f94, %f77, %f93, %f174;
	fma.rn.f32 	%f95, %f76, %f92, %f175;
	fma.rn.f32 	%f96, %f75, %f91, %f176;
	fma.rn.f32 	%f97, %f74, %f90, %f177;
$L__tmp2:
	.loc	1 45 60                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:45:60
	selp.f32 	%f181, %f89, %f181, %p14;
	selp.f32 	%f180, %f88, %f180, %p14;
	selp.f32 	%f179, %f87, %f179, %p14;
	selp.f32 	%f178, %f86, %f178, %p14;
	.loc	1 46 56                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:46:56
	selp.f32 	%f174, %f94, %f174, %p14;
	selp.f32 	%f175, %f95, %f175, %p14;
	selp.f32 	%f176, %f96, %f176, %p14;
	selp.f32 	%f177, %f97, %f177, %p14;
	.loc	1 47 64                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:47:64
	selp.f32 	%f170, %f78, %f170, %p14;
	selp.f32 	%f171, %f79, %f171, %p14;
	selp.f32 	%f172, %f80, %f172, %p14;
	selp.f32 	%f173, %f81, %f173, %p14;
	.loc	1 32 36                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:32:36
	add.s64 	%rd44, %rd44, 8;
	add.s32 	%r199, %r199, 2048;
	add.s64 	%rd43, %rd43, 32;
	setp.lt.u64 	%p43, %rd44, 88;
	@%p43 bra 	$L__BB0_1;
// %bb.2:                               // %__nv_rsqrtf.exit
	.loc	1 23 44                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:23:44
	and.b32  	%r16, %r2, 63;
$L__tmp3:
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f98, %f179, %f178;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f99, %f170, %f171;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f99, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r132, %f99;
	mov.b32 	%r131, %f171;
	// begin inline asm
	div.full.f32 %r130, %r131, %r132;
	// end inline asm
	mov.b32 	%f100, %r130;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f101, 0f00000000, %f100, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f102, %f98, %f101, %f178;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f103, %f174, %f175;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f104, %f98, %f98;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f105, %f104, %f170;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f106, %f105, %f101, %f103;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f107, %f180, %f102;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f108, %f172, %f99;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f108, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r135, %f108;
	mov.b32 	%r134, %f172;
	// begin inline asm
	div.full.f32 %r133, %r134, %r135;
	// end inline asm
	mov.b32 	%f109, %r133;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f110, 0f00000000, %f109, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f111, %f110, %f107, %f102;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f112, %f176, %f106;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f113, %f107, %f107;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f114, %f99, %f113;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f115, %f110, %f114, %f112;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f116, %f181, %f111;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f117, %f173, %f108;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p47, %f117, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r138, %f117;
	mov.b32 	%r137, %f173;
	// begin inline asm
	div.full.f32 %r136, %r137, %r138;
	// end inline asm
	mov.b32 	%f118, %r136;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f119, 0f00000000, %f118, %p47;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f120, %f119, %f116, %f111;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f121, %f177, %f115;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f122, %f116, %f116;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f123, %f108, %f122;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f124, %f119, %f123, %f121;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r147, %f120;
	shfl.sync.bfly.b32	%r148, %r147, 1, 31, -1;
	mov.b32 	%f125, %r148;
	mov.b32 	%r149, %f124;
	shfl.sync.bfly.b32	%r150, %r149, 1, 31, -1;
	mov.b32 	%f126, %r150;
	shfl.sync.bfly.b32	%r140, %r138, 1, 31, -1;
	mov.b32 	%f127, %r140;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f128, %f125, %f120;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f129, %f117, %f127;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p48, %f129, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r141, %f129;
	// begin inline asm
	div.full.f32 %r139, %r140, %r141;
	// end inline asm
	mov.b32 	%f130, %r139;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f131, 0f00000000, %f130, %p48;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f30, %f131, %f128, %f120;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f132, %f124, %f126;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f133, %f128, %f128;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f134, %f117, %f133;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f135, %f131, %f134, %f132;
$L__tmp4:
	.loc	1 77 20                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:77:20
	bar.sync 	0;
	shl.b32 	%r151, %r3, 2;
	add.s32 	%r142, %r68, %r151;
	mov.b32 	%r143, %f135;
	// begin inline asm
	@%p10 st.shared.b32 [ %r142 + 0 ], %r143;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r153, %r16, 2;
	add.s32 	%r154, %r68, %r153;
	ld.shared.f32 	%f31, [%r154];
	mov.b32 	%r146, 1119879168;
	.loc	1 65 23                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:65:23
	// begin inline asm
	div.full.f32 %r144, %r143, %r146;
	// end inline asm
	mov.b32 	%f136, %r144;
	.loc	1 67 24                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:67:24
	add.f32 	%f137, %f136, 0f358637BD;
	.loc	1 68 32                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:68:32
	rsqrt.approx.ftz.f32 	%f32, %f137;
	.loc	1 54 36                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:54:36
	add.s64 	%rd45, %rd16, %rd1;
	cvt.u64.u32 	%rd9, %r13;
	mov.u64 	%rd46, -8;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 58 34                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:58:34
	mul.wide.s32 	%rd38, %r200, 4;
	add.s64 	%rd34, %rd14, %rd38;
	.loc	1 58 59                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:58:59
	// begin inline asm
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	mov.u32 %r158, 0x0;
	@%p5 ld.global.L1::evict_first.v4.b32 { %r155, %r156, %r157, %r158 }, [ %rd34 + 0 ];
	@!%p5 mov.u32 %r155, %r24;
	@!%p5 mov.u32 %r156, %r24;
	@!%p5 mov.u32 %r157, %r24;
	@!%p5 mov.u32 %r158, %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 st.shared.b32 [ %r28 + 0 ], %r155;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r30 + 0 ], %r156;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r32 + 0 ], %r157;
	// end inline asm
	// begin inline asm
	@%p10 st.shared.b32 [ %r34 + 0 ], %r158;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f138, %f139, %f140, %f141}, [%r10];
	.loc	1 59 35                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:59:35
	add.s64 	%rd39, %rd9, %rd46;
	cvt.u32.u64 	%r191, %rd39;
	add.s32 	%r192, %r191, 8;
	mul.wide.s32 	%rd40, %r192, 4;
	add.s64 	%rd35, %rd15, %rd40;
	.loc	1 59 48                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:59:48
	// begin inline asm
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	@%p14 ld.global.L1::evict_first.v4.b32 { %r171, %r172, %r173, %r174 }, [ %rd35 + 0 ];
	@!%p14 mov.u32 %r171, %r24;
	@!%p14 mov.u32 %r172, %r24;
	@!%p14 mov.u32 %r173, %r24;
	@!%p14 mov.u32 %r174, %r24;
	// end inline asm
	mov.b32 	%f142, %r171;
	mov.b32 	%f143, %r172;
	mov.b32 	%f144, %r173;
	mov.b32 	%f145, %r174;
	.loc	1 60 40                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:60:40
	// begin inline asm
	mov.u32 %r179, 0x0;
	mov.u32 %r180, 0x0;
	mov.u32 %r181, 0x0;
	mov.u32 %r182, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r179, %r180, %r181, %r182 }, [ %rd45 + 0 ];
	@!%p10 mov.u32 %r179, %r24;
	@!%p10 mov.u32 %r180, %r24;
	@!%p10 mov.u32 %r181, %r24;
	@!%p10 mov.u32 %r182, %r24;
	// end inline asm
	mov.b32 	%f146, %r179;
	mov.b32 	%f147, %r180;
	mov.b32 	%f148, %r181;
	mov.b32 	%f149, %r182;
	.loc	1 61 24                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:61:24
	add.f32 	%f150, %f142, %f146;
	add.f32 	%f151, %f143, %f147;
	add.f32 	%f152, %f144, %f148;
	add.f32 	%f153, %f145, %f149;
	.loc	1 62 23                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:62:23
	add.f32 	%f154, %f138, %f150;
	add.f32 	%f155, %f139, %f151;
	add.f32 	%f156, %f140, %f152;
	add.f32 	%f157, %f141, %f153;
	.loc	1 63 24                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:63:24
	sub.f32 	%f158, %f154, %f30;
	sub.f32 	%f159, %f155, %f30;
	sub.f32 	%f160, %f156, %f30;
	sub.f32 	%f161, %f157, %f30;
	.loc	1 69 24                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:69:24
	mul.f32 	%f162, %f32, %f158;
	mul.f32 	%f163, %f32, %f159;
	mul.f32 	%f164, %f32, %f160;
	mul.f32 	%f165, %f32, %f161;
	.loc	1 70 29                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:70:29
	add.s64 	%rd37, %rd17, %rd40;
	.loc	1 70 49                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:70:49
	mov.b32 	%r187, %f162;
	mov.b32 	%r188, %f163;
	mov.b32 	%r189, %f164;
	mov.b32 	%r190, %f165;
	// begin inline asm
	@%p14 st.global.v4.b32 [ %rd37 + 0 ], { %r187, %r188, %r189, %r190 };
	// end inline asm
	.loc	1 54 36                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:54:36
	add.s64 	%rd46, %rd46, 8;
	add.s32 	%r200, %r200, 2048;
	add.s64 	%rd45, %rd45, 32;
	setp.lt.u64 	%p69, %rd46, 88;
	@%p69 bra 	$L__BB0_3;
// %bb.4:                               // %__nv_rsqrtf.exit30
	.loc	1 72 19                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:72:19
	mov.b32 	%r194, %f31;
	// begin inline asm
	div.full.f32 %r193, %r194, %r146;
	// end inline asm
	mov.b32 	%f166, %r193;
	.loc	1 74 20                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:74:20
	add.f32 	%f167, %f166, 0f358637BD;
	.loc	1 75 28                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:75:28
	rsqrt.approx.ftz.f32 	%f168, %f167;
	.loc	1 23 23                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:23:23
	or.b32  	%r197, %r1, %r16;
	.loc	1 24 21                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:24:21
	setp.lt.s32 	%p71, %r197, 1024;
	.loc	1 77 20                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:77:20
	mul.f32 	%f169, %f168, 0f3C2AAAAB;
	.loc	1 78 25                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:78:25
	mul.wide.s32 	%rd42, %r197, 4;
	add.s64 	%rd41, %rd18, %rd42;
	.loc	1 78 37                         // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:78:37
	and.b32  	%r198, %r2, 64;
	setp.eq.s32 	%p72, %r198, 0;
	mov.b32 	%r196, %f169;
	and.pred  	%p70, %p72, %p71;
	// begin inline asm
	@%p70 st.global.b32 [ %rd41 + 0 ], { %r196 };
	// end inline asm
	.loc	1 78 4                          // czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py:78:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zq/czq4yd62bffstvtuxtglrlqeukv3ra2an27t7rdrzi2xxctvfer3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 237                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 113
.b8 52
.b8 121
.b8 100
.b8 54
.b8 50
.b8 98
.b8 102
.b8 102
.b8 115
.b8 116
.b8 118
.b8 116
.b8 117
.b8 120
.b8 116
.b8 103
.b8 108
.b8 114
.b8 108
.b8 113
.b8 101
.b8 117
.b8 107
.b8 118
.b8 51
.b8 114
.b8 97
.b8 50
.b8 97
.b8 110
.b8 50
.b8 55
.b8 116
.b8 55
.b8 114
.b8 100
.b8 114
.b8 122
.b8 105
.b8 50
.b8 120
.b8 120
.b8 99
.b8 116
.b8 118
.b8 102
.b8 101
.b8 114
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 51                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
