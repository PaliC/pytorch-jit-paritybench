; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_adaptive_max_pool2d_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 176, !dbg !14
  %11 = mul i32 %9, 11, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %10) #1, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = add i32 %11, 1, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %10) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = add i32 %11, 2, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = add i32 %11, 3, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = add i32 %11, 4, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !28
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %10) #1, !dbg !29
  %35 = bitcast i32 %34 to float, !dbg !29
  %36 = add i32 %11, 5, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !32
  %40 = bitcast i32 %39 to float, !dbg !32
  %41 = add i32 %11, 6, !dbg !33
  %42 = sext i32 %41 to i64, !dbg !34
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !34
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %10) #1, !dbg !35
  %45 = bitcast i32 %44 to float, !dbg !35
  %46 = add i32 %11, 7, !dbg !36
  %47 = sext i32 %46 to i64, !dbg !37
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !37
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %10) #1, !dbg !38
  %50 = bitcast i32 %49 to float, !dbg !38
  %51 = add i32 %11, 8, !dbg !39
  %52 = sext i32 %51 to i64, !dbg !40
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !40
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %10) #1, !dbg !41
  %55 = bitcast i32 %54 to float, !dbg !41
  %56 = add i32 %11, 9, !dbg !42
  %57 = sext i32 %56 to i64, !dbg !43
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !43
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %10) #1, !dbg !44
  %60 = bitcast i32 %59 to float, !dbg !44
  %61 = add i32 %11, 10, !dbg !45
  %62 = sext i32 %61 to i64, !dbg !46
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !46
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %10) #1, !dbg !47
  %65 = bitcast i32 %64 to float, !dbg !47
  %66 = fcmp ogt float %20, %15, !dbg !48
  %67 = fcmp uno float %20, 0.000000e+00, !dbg !52
  %68 = or i1 %66, %67, !dbg !53
  %69 = select i1 %68, float %20, float %15, !dbg !54
  %70 = fcmp olt float %69, %25, !dbg !55
  %71 = fcmp uno float %25, 0.000000e+00, !dbg !57
  %72 = or i1 %71, %70, !dbg !58
  %73 = select i1 %72, float %25, float %69, !dbg !59
  %74 = fcmp olt float %73, %30, !dbg !60
  %75 = fcmp uno float %30, 0.000000e+00, !dbg !62
  %76 = or i1 %75, %74, !dbg !63
  %77 = select i1 %76, float %30, float %73, !dbg !64
  %78 = fcmp olt float %77, %35, !dbg !65
  %79 = fcmp uno float %35, 0.000000e+00, !dbg !67
  %80 = or i1 %79, %78, !dbg !68
  %81 = select i1 %80, float %35, float %77, !dbg !69
  %82 = fcmp olt float %81, %40, !dbg !70
  %83 = fcmp uno float %40, 0.000000e+00, !dbg !72
  %84 = or i1 %83, %82, !dbg !73
  %85 = select i1 %84, float %40, float %81, !dbg !74
  %86 = fcmp olt float %85, %45, !dbg !75
  %87 = fcmp uno float %45, 0.000000e+00, !dbg !77
  %88 = or i1 %87, %86, !dbg !78
  %89 = select i1 %88, float %45, float %85, !dbg !79
  %90 = fcmp olt float %89, %50, !dbg !80
  %91 = fcmp uno float %50, 0.000000e+00, !dbg !82
  %92 = or i1 %91, %90, !dbg !83
  %93 = select i1 %92, float %50, float %89, !dbg !84
  %94 = fcmp olt float %93, %55, !dbg !85
  %95 = fcmp uno float %55, 0.000000e+00, !dbg !87
  %96 = or i1 %95, %94, !dbg !88
  %97 = select i1 %96, float %55, float %93, !dbg !89
  %98 = fcmp olt float %97, %60, !dbg !90
  %99 = fcmp uno float %60, 0.000000e+00, !dbg !92
  %100 = or i1 %99, %98, !dbg !93
  %101 = select i1 %100, float %60, float %97, !dbg !94
  %102 = fcmp olt float %101, %65, !dbg !95
  %103 = fcmp uno float %65, 0.000000e+00, !dbg !97
  %104 = or i1 %103, %102, !dbg !98
  %105 = zext i1 %66 to i8, !dbg !99
  %106 = select i1 %70, i8 2, i8 %105, !dbg !100
  %107 = select i1 %74, i8 3, i8 %106, !dbg !101
  %108 = select i1 %78, i8 4, i8 %107, !dbg !102
  %109 = select i1 %82, i8 5, i8 %108, !dbg !103
  %110 = select i1 %86, i8 6, i8 %109, !dbg !104
  %111 = select i1 %90, i8 7, i8 %110, !dbg !105
  %112 = select i1 %94, i8 8, i8 %111, !dbg !106
  %113 = select i1 %98, i8 9, i8 %112, !dbg !107
  %114 = select i1 %102, i8 10, i8 %113, !dbg !108
  %115 = sext i32 %9 to i64, !dbg !109
  %116 = getelementptr float, ptr addrspace(1) %1, i64 %115, !dbg !109
  %117 = bitcast float %101 to i32, !dbg !110
  %118 = select i1 %104, i32 %64, i32 %117, !dbg !111
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %118, ptr addrspace(1) %116, i1 %10) #1, !dbg !110
  %119 = getelementptr i8, ptr addrspace(1) %2, i64 %115, !dbg !112
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %114, ptr addrspace(1) %119, i1 %10) #1, !dbg !113
  ret void, !dbg !114
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cukzu3fc5dbmlx3f4r7rpigmiyq5jb2vhjymbil263yu7hev7eul.py", directory: "inductor_cache/uk")
!4 = !{ptr @triton_poi_fused_adaptive_max_pool2d_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_adaptive_max_pool2d_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_adaptive_max_pool2d_3", linkageName: "triton_poi_fused_adaptive_max_pool2d_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 38, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 42, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 29, column: 34, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 42, scope: !7)
!30 = !DILocation(line: 30, column: 34, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 42, scope: !7)
!33 = !DILocation(line: 31, column: 35, scope: !7)
!34 = !DILocation(line: 31, column: 31, scope: !7)
!35 = !DILocation(line: 31, column: 43, scope: !7)
!36 = !DILocation(line: 32, column: 35, scope: !7)
!37 = !DILocation(line: 32, column: 31, scope: !7)
!38 = !DILocation(line: 32, column: 43, scope: !7)
!39 = !DILocation(line: 33, column: 35, scope: !7)
!40 = !DILocation(line: 33, column: 31, scope: !7)
!41 = !DILocation(line: 33, column: 43, scope: !7)
!42 = !DILocation(line: 34, column: 35, scope: !7)
!43 = !DILocation(line: 34, column: 31, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 35, column: 36, scope: !7)
!46 = !DILocation(line: 35, column: 31, scope: !7)
!47 = !DILocation(line: 35, column: 44, scope: !7)
!48 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !51)
!49 = distinct !DILexicalBlockFile(scope: !7, file: !50, discriminator: 0)
!50 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!51 = !DILocation(line: 36, column: 40, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !51)
!55 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !56)
!56 = !DILocation(line: 37, column: 40, scope: !7)
!57 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !56)
!58 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !56)
!59 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !56)
!60 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !61)
!61 = !DILocation(line: 38, column: 40, scope: !7)
!62 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !61)
!63 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !61)
!64 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !61)
!65 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !66)
!66 = !DILocation(line: 39, column: 40, scope: !7)
!67 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !66)
!68 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !66)
!69 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !66)
!70 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !71)
!71 = !DILocation(line: 40, column: 41, scope: !7)
!72 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !71)
!73 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !71)
!74 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !71)
!75 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !76)
!76 = !DILocation(line: 41, column: 42, scope: !7)
!77 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !76)
!78 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !76)
!79 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !76)
!80 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !81)
!81 = !DILocation(line: 42, column: 42, scope: !7)
!82 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !81)
!83 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !81)
!84 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !81)
!85 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !86)
!86 = !DILocation(line: 43, column: 42, scope: !7)
!87 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !86)
!88 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !86)
!89 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !86)
!90 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !91)
!91 = !DILocation(line: 44, column: 42, scope: !7)
!92 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !91)
!93 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !91)
!94 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !91)
!95 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !96)
!96 = !DILocation(line: 45, column: 42, scope: !7)
!97 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !96)
!98 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !96)
!99 = !DILocation(line: 49, column: 35, scope: !7)
!100 = !DILocation(line: 52, column: 35, scope: !7)
!101 = !DILocation(line: 55, column: 35, scope: !7)
!102 = !DILocation(line: 58, column: 35, scope: !7)
!103 = !DILocation(line: 61, column: 35, scope: !7)
!104 = !DILocation(line: 64, column: 35, scope: !7)
!105 = !DILocation(line: 67, column: 35, scope: !7)
!106 = !DILocation(line: 70, column: 35, scope: !7)
!107 = !DILocation(line: 73, column: 35, scope: !7)
!108 = !DILocation(line: 76, column: 35, scope: !7)
!109 = !DILocation(line: 77, column: 25, scope: !7)
!110 = !DILocation(line: 77, column: 37, scope: !7)
!111 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !96)
!112 = !DILocation(line: 78, column: 25, scope: !7)
!113 = !DILocation(line: 78, column: 37, scope: !7)
!114 = !DILocation(line: 78, column: 4, scope: !7)
