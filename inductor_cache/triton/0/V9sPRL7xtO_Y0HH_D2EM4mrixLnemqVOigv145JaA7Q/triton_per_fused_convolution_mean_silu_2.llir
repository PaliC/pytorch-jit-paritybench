; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_convolution_mean_silu_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = srem i32 %6, 4, !dbg !13
  %11 = shl i32 %6, 4, !dbg !14
  %12 = or disjoint i32 %11, %9, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %7, i32 0, i1 %7) #3, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %7, i32 0, i1 %7) #3, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = sext i32 %10 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !18
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %7) #3, !dbg !19
  %22 = bitcast i32 %21 to float, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %7) #3, !dbg !19
  %24 = bitcast i32 %23 to float, !dbg !19
  %25 = fadd float %16, %22, !dbg !20
  %26 = fadd float %18, %24, !dbg !20
  %27 = fsub float 0.000000e+00, %25, !dbg !21
  %28 = fmul float %27, 0x3FF7154760000000, !dbg !25
  %29 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %28) #3, !dbg !25
  %30 = fadd float %29, 1.000000e+00, !dbg !26
  %31 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %30) #3, !dbg !27
  %32 = fmul float %25, %31, !dbg !28
  %33 = select i1 %7, float %32, float 0.000000e+00, !dbg !29
  %34 = bitcast float %33 to i32, !dbg !30
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 8, i32 31), !dbg !30
  %36 = bitcast i32 %35 to float, !dbg !30
  %37 = fadd float %33, %36, !dbg !32
  %38 = bitcast float %37 to i32, !dbg !30
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 4, i32 31), !dbg !30
  %40 = bitcast i32 %39 to float, !dbg !30
  %41 = fadd float %37, %40, !dbg !32
  %42 = bitcast float %41 to i32, !dbg !30
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !30
  %44 = bitcast i32 %43 to float, !dbg !30
  %45 = fadd float %41, %44, !dbg !32
  %46 = bitcast float %45 to i32, !dbg !30
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 1, i32 31), !dbg !30
  %48 = bitcast i32 %47 to float, !dbg !30
  %49 = fadd float %45, %48, !dbg !32
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %49, float 1.600000e+01) #3, !dbg !34
  %51 = and i32 %8, 48, !dbg !35
  %52 = icmp eq i32 %51, 0, !dbg !35
  %53 = bitcast float %26 to i32, !dbg !35
  %54 = and i1 %52, %7, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %14, i1 %54) #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %55 = sext i32 %6 to i64, !dbg !37
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !37
  %urem = and i32 %8, 63, !dbg !38
  %57 = icmp eq i32 %urem, 0, !dbg !38
  %58 = bitcast float %50 to i32, !dbg !38
  %59 = and i1 %57, %7, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %58, ptr addrspace(1) %56, i1 %59) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdoy3oi554konzh3mwtmpwktvlhp6hdtbqacxf725grzwzwueysd.py", directory: "inductor_cache/do")
!4 = !{ptr @triton_per_fused_convolution_mean_silu_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_convolution_mean_silu_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_convolution_mean_silu_2", linkageName: "triton_per_fused_convolution_mean_silu_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 32, column: 42, scope: !7)
!15 = !DILocation(line: 32, column: 39, scope: !7)
!16 = !DILocation(line: 32, column: 34, scope: !7)
!17 = !DILocation(line: 32, column: 47, scope: !7)
!18 = !DILocation(line: 33, column: 30, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 34, column: 18, scope: !7)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 35, column: 22, scope: !7)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 36, column: 18, scope: !7)
!29 = !DILocation(line: 38, column: 33, scope: !7)
!30 = !DILocation(line: 267, column: 36, scope: !22, inlinedAt: !31)
!31 = !DILocation(line: 39, column: 24, scope: !7)
!32 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !31)
!33 = distinct !DILexicalBlockFile(scope: !22, file: !23, discriminator: 0)
!34 = !DILocation(line: 41, column: 19, scope: !7)
!35 = !DILocation(line: 42, column: 47, scope: !7)
!36 = !DILocation(line: 43, column: 4, scope: !7)
!37 = !DILocation(line: 44, column: 28, scope: !7)
!38 = !DILocation(line: 44, column: 40, scope: !7)
!39 = !DILocation(line: 44, column: 4, scope: !7)
