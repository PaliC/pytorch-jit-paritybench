; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 512, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = srem i32 %12, 8, !dbg !16
  %14 = mul i32 %12, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = sdiv i32 %10, 128, !dbg !18
  %16 = icmp slt i32 %13, 1, !dbg !19
  %17 = shl nsw i32 %15, 6, !dbg !20
  %18 = add nsw i32 %17, %.decomposed, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = and i1 %11, %16, !dbg !23
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #1, !dbg !24
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !24
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !24
  %25 = icmp eq i32 %13, 1, !dbg !25
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !26
  %27 = and i1 %11, %25, !dbg !27
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %26, i1 %27, i32 0, i1 %27, i32 0, i1 %27) #1, !dbg !28
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !28
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !28
  %31 = icmp eq i32 %13, 2, !dbg !29
  %32 = add nsw i32 %18, 16, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !31
  %35 = and i1 %11, %31, !dbg !32
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35, i32 0, i1 %35) #1, !dbg !33
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !33
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !33
  %39 = icmp eq i32 %13, 3, !dbg !34
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !35
  %41 = and i1 %11, %39, !dbg !36
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41, i32 0, i1 %41) #1, !dbg !37
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !37
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !37
  %45 = icmp eq i32 %13, 4, !dbg !38
  %46 = add nsw i32 %18, 32, !dbg !39
  %47 = sext i32 %46 to i64, !dbg !40
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !40
  %49 = and i1 %11, %45, !dbg !41
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %48, i1 %49, i32 0, i1 %49, i32 0, i1 %49) #1, !dbg !42
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !42
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !42
  %53 = icmp eq i32 %13, 5, !dbg !43
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !44
  %55 = and i1 %11, %53, !dbg !45
  %56 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %54, i1 %55, i32 0, i1 %55, i32 0, i1 %55) #1, !dbg !46
  %57 = extractvalue { i32, i32 } %56, 0, !dbg !46
  %58 = extractvalue { i32, i32 } %56, 1, !dbg !46
  %59 = icmp eq i32 %13, 6, !dbg !47
  %60 = add nsw i32 %18, 48, !dbg !48
  %61 = sext i32 %60 to i64, !dbg !49
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !49
  %63 = and i1 %11, %59, !dbg !50
  %64 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %62, i1 %63, i32 0, i1 %63, i32 0, i1 %63) #1, !dbg !51
  %65 = extractvalue { i32, i32 } %64, 0, !dbg !51
  %66 = extractvalue { i32, i32 } %64, 1, !dbg !51
  %67 = icmp sgt i32 %13, 6, !dbg !52
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !53
  %69 = and i1 %11, %67, !dbg !54
  %70 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %68, i1 %69, i32 0, i1 %69, i32 0, i1 %69) #1, !dbg !55
  %71 = extractvalue { i32, i32 } %70, 0, !dbg !55
  %72 = extractvalue { i32, i32 } %70, 1, !dbg !55
  %.v = select i1 %59, i32 %65, i32 %71, !dbg !56
  %.v1 = select i1 %59, i32 %66, i32 %72, !dbg !56
  %.v2 = select i1 %53, i32 %57, i32 %.v, !dbg !57
  %.v3 = select i1 %53, i32 %58, i32 %.v1, !dbg !57
  %.v4 = select i1 %45, i32 %51, i32 %.v2, !dbg !58
  %.v5 = select i1 %45, i32 %52, i32 %.v3, !dbg !58
  %.v6 = select i1 %39, i32 %43, i32 %.v4, !dbg !59
  %.v7 = select i1 %39, i32 %44, i32 %.v5, !dbg !59
  %.v8 = select i1 %31, i32 %37, i32 %.v6, !dbg !60
  %.v9 = select i1 %31, i32 %38, i32 %.v7, !dbg !60
  %.v10 = select i1 %25, i32 %29, i32 %.v8, !dbg !61
  %.v11 = select i1 %25, i32 %30, i32 %.v9, !dbg !61
  %.v12 = select i1 %16, i32 %23, i32 %.v10, !dbg !62
  %.v13 = select i1 %16, i32 %24, i32 %.v11, !dbg !62
  %73 = sext i32 %10 to i64, !dbg !63
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %73, !dbg !63
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v12, i32 %.v13, ptr addrspace(1) %74, i1 %11) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c63kxhlttoxzkidnkkjxwkyyple4edb2so7qozuhpyrqvcw5ksbo.py", directory: "inductor_cache/63")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 38, scope: !7)
!21 = !DILocation(line: 33, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 50, scope: !7)
!24 = !DILocation(line: 33, column: 43, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 31, scope: !7)
!27 = !DILocation(line: 38, column: 51, scope: !7)
!28 = !DILocation(line: 38, column: 44, scope: !7)
!29 = !DILocation(line: 42, column: 20, scope: !7)
!30 = !DILocation(line: 43, column: 41, scope: !7)
!31 = !DILocation(line: 43, column: 31, scope: !7)
!32 = !DILocation(line: 43, column: 57, scope: !7)
!33 = !DILocation(line: 43, column: 49, scope: !7)
!34 = !DILocation(line: 47, column: 20, scope: !7)
!35 = !DILocation(line: 48, column: 31, scope: !7)
!36 = !DILocation(line: 48, column: 57, scope: !7)
!37 = !DILocation(line: 48, column: 49, scope: !7)
!38 = !DILocation(line: 52, column: 20, scope: !7)
!39 = !DILocation(line: 53, column: 41, scope: !7)
!40 = !DILocation(line: 53, column: 31, scope: !7)
!41 = !DILocation(line: 53, column: 57, scope: !7)
!42 = !DILocation(line: 53, column: 49, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 58, column: 31, scope: !7)
!45 = !DILocation(line: 58, column: 57, scope: !7)
!46 = !DILocation(line: 58, column: 49, scope: !7)
!47 = !DILocation(line: 62, column: 20, scope: !7)
!48 = !DILocation(line: 63, column: 41, scope: !7)
!49 = !DILocation(line: 63, column: 31, scope: !7)
!50 = !DILocation(line: 63, column: 57, scope: !7)
!51 = !DILocation(line: 63, column: 49, scope: !7)
!52 = !DILocation(line: 64, column: 20, scope: !7)
!53 = !DILocation(line: 67, column: 31, scope: !7)
!54 = !DILocation(line: 67, column: 57, scope: !7)
!55 = !DILocation(line: 67, column: 49, scope: !7)
!56 = !DILocation(line: 68, column: 35, scope: !7)
!57 = !DILocation(line: 69, column: 35, scope: !7)
!58 = !DILocation(line: 70, column: 35, scope: !7)
!59 = !DILocation(line: 71, column: 35, scope: !7)
!60 = !DILocation(line: 72, column: 35, scope: !7)
!61 = !DILocation(line: 73, column: 34, scope: !7)
!62 = !DILocation(line: 74, column: 33, scope: !7)
!63 = !DILocation(line: 75, column: 25, scope: !7)
!64 = !DILocation(line: 75, column: 37, scope: !7)
!65 = !DILocation(line: 75, column: 4, scope: !7)
