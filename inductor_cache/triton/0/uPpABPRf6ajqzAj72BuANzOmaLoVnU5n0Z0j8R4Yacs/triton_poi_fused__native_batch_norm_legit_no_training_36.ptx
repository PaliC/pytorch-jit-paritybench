//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_36 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_36
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_36
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_36(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_36_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_36_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_36_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<51>;
	.reg .b32 	%r<200>;
	.reg .f32 	%f<72>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:22:33
	shl.b32 	%r94, %r1, 8;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_2];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_3];
	.loc	1 23 44                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:44
	mov.u32 	%r95, %tid.x;
	shl.b32 	%r96, %r95, 2;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_4];
	and.b32  	%r97, %r96, 252;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_36_param_5];
	and.b32  	%r98, %r95, 255;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r99, %r94, %r97;
	or.b32  	%r100, %r94, %r98;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p37, %r99, 512;
	setp.lt.s32 	%p9, %r100, 512;
	.loc	1 25 28                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:25:33
	shl.b32 	%r101, %r2, 4;
	.loc	1 26 44                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:26:44
	bfe.u32 	%r102, %r95, 6, 2;
	.loc	1 26 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:26:23
	or.b32  	%r103, %r101, %r102;
	or.b32  	%r104, %r103, 4;
	or.b32  	%r105, %r103, 8;
	or.b32  	%r106, %r103, 12;
	.loc	1 27 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:27:21
	setp.lt.s32 	%p38, %r103, 30;
	setp.lt.s32 	%p39, %r104, 30;
	setp.lt.s32 	%p40, %r105, 30;
	setp.lt.s32 	%p41, %r106, 30;
	.loc	1 30 19                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:30:19
	shr.s32 	%r108, %r99, 31;
	shr.u32 	%r109, %r108, 25;
	add.s32 	%r110, %r99, %r109;
	shr.s32 	%r111, %r110, 7;
	.loc	1 29 19                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:29:19
	and.b32  	%r112, %r110, -128;
	sub.s32 	%r113, %r99, %r112;
	bfe.s32 	%r114, %r1, 23, 1;
	shr.u32 	%r115, %r114, 25;
	add.s32 	%r116, %r100, %r115;
	and.b32  	%r117, %r116, -128;
	sub.s32 	%r118, %r100, %r117;
	.loc	1 32 39                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:39
	shl.b32 	%r119, %r103, 7;
	shl.b32 	%r120, %r104, 7;
	shl.b32 	%r121, %r105, 7;
	shl.b32 	%r122, %r106, 7;
	.loc	1 32 35                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:35
	mad.lo.s32 	%r123, %r111, 3840, %r113;
	.loc	1 32 44                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:44
	add.s32 	%r124, %r123, %r119;
	add.s32 	%r125, %r123, %r120;
	add.s32 	%r126, %r123, %r121;
	add.s32 	%r127, %r123, %r122;
	.loc	1 32 30                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:30
	mul.wide.s32 	%rd23, %r124, 4;
	add.s64 	%rd1, %rd17, %rd23;
	mul.wide.s32 	%rd24, %r125, 4;
	add.s64 	%rd2, %rd17, %rd24;
	mul.wide.s32 	%rd25, %r126, 4;
	add.s64 	%rd3, %rd17, %rd25;
	mul.wide.s32 	%rd26, %r127, 4;
	add.s64 	%rd4, %rd17, %rd26;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p1, %p37, %p38;
	and.pred  	%p2, %p39, %p37;
	and.pred  	%p3, %p40, %p37;
	and.pred  	%p4, %p41, %p37;
	.loc	1 32 54                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:54
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd4 + 0 ];
	// end inline asm
	shr.u32 	%r128, %r95, 2;
	and.b32  	%r129, %r128, 48;
	mov.u32 	%r130, global_smem;
	add.s32 	%r131, %r130, %r129;
	shl.b32 	%r132, %r95, 4;
	.loc	1 48 45                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:48:45
	and.b32  	%r133, %r132, 4080;
	.loc	1 32 54                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:54
	add.s32 	%r19, %r131, %r133;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r134, %r98, 2;
	add.s32 	%r135, %r130, %r134;
	ld.shared.f32 	%f1, [%r135];
	ld.shared.f32 	%f2, [%r135+1040];
	ld.shared.f32 	%f3, [%r135+2080];
	ld.shared.f32 	%f4, [%r135+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r135];
	ld.shared.f32 	%f6, [%r135+1040];
	ld.shared.f32 	%f7, [%r135+2080];
	ld.shared.f32 	%f8, [%r135+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r135];
	ld.shared.f32 	%f10, [%r135+1040];
	ld.shared.f32 	%f11, [%r135+2080];
	ld.shared.f32 	%f12, [%r135+3120];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r19 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [%r135];
	ld.shared.f32 	%f14, [%r135+1040];
	ld.shared.f32 	%f15, [%r135+2080];
	ld.shared.f32 	%f16, [%r135+3120];
	.loc	1 33 30                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:33:30
	mul.wide.s32 	%rd27, %r118, 4;
	add.s64 	%rd5, %rd18, %rd27;
	.loc	1 33 35                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:33:35
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:34:30
	add.s64 	%rd6, %rd19, %rd27;
	.loc	1 34 35                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:34:35
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r40 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r40;
	.loc	1 35 31                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:35:31
	add.s64 	%rd7, %rd20, %rd27;
	.loc	1 35 36                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:35:36
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r41 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:36:31
	add.s64 	%rd8, %rd21, %rd27;
	.loc	1 36 36                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:36:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r42 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:39:18
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 40 26                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:40:26
	sqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 33 35                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:33:35
	mov.b32 	%f20, %r39;
	.loc	1 37 18                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:37:18
	sub.f32 	%f21, %f16, %f20;
	sub.f32 	%f22, %f15, %f20;
	sub.f32 	%f23, %f14, %f20;
	sub.f32 	%f24, %f13, %f20;
	sub.f32 	%f25, %f12, %f20;
	sub.f32 	%f26, %f11, %f20;
	sub.f32 	%f27, %f10, %f20;
	sub.f32 	%f28, %f9, %f20;
	sub.f32 	%f29, %f8, %f20;
	sub.f32 	%f30, %f7, %f20;
	sub.f32 	%f31, %f6, %f20;
	sub.f32 	%f32, %f5, %f20;
	sub.f32 	%f33, %f4, %f20;
	sub.f32 	%f34, %f3, %f20;
	sub.f32 	%f35, %f2, %f20;
	sub.f32 	%f36, %f1, %f20;
	.loc	1 36 36                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:36:36
	mov.b32 	%f37, %r42;
	.loc	1 35 36                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:35:36
	mov.b32 	%f38, %r41;
	.loc	1 26 44                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:26:44
	shl.b32 	%r136, %r95, 1;
	and.b32  	%r137, %r136, 14;
	.loc	1 26 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:26:23
	or.b32  	%r138, %r101, %r137;
	.loc	1 27 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:27:21
	setp.lt.s32 	%p42, %r138, 30;
	.loc	1 23 44                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:44
	bfe.u32 	%r139, %r95, 3, 5;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r140, %r139, %r94;
	or.b32  	%r141, %r140, 224;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p43, %r141, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p36, %p43, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r142, %r140, 192;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p44, %r142, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p35, %p44, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r143, %r140, 160;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p45, %r143, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p34, %p45, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r144, %r140, 128;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p46, %r144, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p33, %p46, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r145, %r140, 96;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p47, %r145, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p32, %p47, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r146, %r140, 64;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p48, %r146, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p31, %p48, %p42;
	.loc	1 23 23                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:23:23
	or.b32  	%r147, %r140, 32;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p49, %r147, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p30, %p49, %p42;
	.loc	1 24 21                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:24:21
	setp.lt.s32 	%p50, %r140, 512;
	.loc	1 32 62                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:32:62
	and.pred  	%p29, %p50, %p42;
	.loc	1 42 18                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:42:18
	mov.b32 	%r45, %f19;
	mov.b32 	%r44, 1065353216;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f39, %r43;
	.loc	1 45 19                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:45:19
	mul.f32 	%f40, %f36, %f39;
	mul.f32 	%f41, %f35, %f39;
	mul.f32 	%f42, %f34, %f39;
	mul.f32 	%f43, %f33, %f39;
	mul.f32 	%f44, %f32, %f39;
	mul.f32 	%f45, %f31, %f39;
	mul.f32 	%f46, %f30, %f39;
	mul.f32 	%f47, %f29, %f39;
	mul.f32 	%f48, %f28, %f39;
	mul.f32 	%f49, %f27, %f39;
	mul.f32 	%f50, %f26, %f39;
	mul.f32 	%f51, %f25, %f39;
	mul.f32 	%f52, %f24, %f39;
	mul.f32 	%f53, %f23, %f39;
	mul.f32 	%f54, %f22, %f39;
	mul.f32 	%f55, %f21, %f39;
	.loc	1 47 20                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:47:20
	fma.rn.f32 	%f56, %f40, %f38, %f37;
	fma.rn.f32 	%f57, %f41, %f38, %f37;
	fma.rn.f32 	%f58, %f42, %f38, %f37;
	fma.rn.f32 	%f59, %f43, %f38, %f37;
	fma.rn.f32 	%f60, %f44, %f38, %f37;
	fma.rn.f32 	%f61, %f45, %f38, %f37;
	fma.rn.f32 	%f62, %f46, %f38, %f37;
	fma.rn.f32 	%f63, %f47, %f38, %f37;
	fma.rn.f32 	%f64, %f48, %f38, %f37;
	fma.rn.f32 	%f65, %f49, %f38, %f37;
	fma.rn.f32 	%f66, %f50, %f38, %f37;
	fma.rn.f32 	%f67, %f51, %f38, %f37;
	fma.rn.f32 	%f68, %f52, %f38, %f37;
	fma.rn.f32 	%f69, %f53, %f38, %f37;
	fma.rn.f32 	%f70, %f54, %f38, %f37;
	fma.rn.f32 	%f71, %f55, %f38, %f37;
	.loc	1 48 30                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:48:30
	mad.lo.s32 	%r148, %r140, 30, %r138;
	add.s32 	%r149, %r148, 960;
	add.s32 	%r150, %r148, 1920;
	add.s32 	%r151, %r148, 2880;
	add.s32 	%r152, %r148, 3840;
	add.s32 	%r153, %r148, 4800;
	add.s32 	%r154, %r148, 5760;
	add.s32 	%r155, %r148, 6720;
	.loc	1 48 25                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:48:25
	mul.wide.s32 	%rd28, %r148, 4;
	add.s64 	%rd9, %rd22, %rd28;
	mul.wide.s32 	%rd29, %r149, 4;
	add.s64 	%rd10, %rd22, %rd29;
	mul.wide.s32 	%rd30, %r150, 4;
	add.s64 	%rd11, %rd22, %rd30;
	mul.wide.s32 	%rd31, %r151, 4;
	add.s64 	%rd12, %rd22, %rd31;
	mul.wide.s32 	%rd32, %r152, 4;
	add.s64 	%rd13, %rd22, %rd32;
	mul.wide.s32 	%rd33, %r153, 4;
	add.s64 	%rd14, %rd22, %rd33;
	mul.wide.s32 	%rd34, %r154, 4;
	add.s64 	%rd15, %rd22, %rd34;
	mul.wide.s32 	%rd35, %r155, 4;
	add.s64 	%rd16, %rd22, %rd35;
	.loc	1 48 45                         // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:48:45
	bar.sync 	0;
	and.b32  	%r156, %r136, 510;
	shr.u32 	%r157, %r133, 2;
	add.s32 	%r158, %r130, %r157;
	shl.b32 	%r159, %r133, 2;
	add.s32 	%r46, %r158, %r159;
	mov.b32 	%r47, %f56;
	// begin inline asm
	@%p5 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r46, 4;
	mov.b32 	%r49, %f57;
	// begin inline asm
	@%p5 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r46, 8;
	mov.b32 	%r51, %f58;
	// begin inline asm
	@%p5 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r46, 12;
	mov.b32 	%r53, %f59;
	// begin inline asm
	@%p5 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r46, 16;
	mov.b32 	%r55, %f60;
	// begin inline asm
	@%p5 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r46, 20;
	mov.b32 	%r57, %f61;
	// begin inline asm
	@%p5 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r46, 24;
	mov.b32 	%r59, %f62;
	// begin inline asm
	@%p5 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r46, 28;
	mov.b32 	%r61, %f63;
	// begin inline asm
	@%p5 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r46, 32;
	mov.b32 	%r63, %f64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r46, 36;
	mov.b32 	%r65, %f65;
	// begin inline asm
	@%p5 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r46, 40;
	mov.b32 	%r67, %f66;
	// begin inline asm
	@%p5 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r46, 44;
	mov.b32 	%r69, %f67;
	// begin inline asm
	@%p5 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r46, 48;
	mov.b32 	%r71, %f68;
	// begin inline asm
	@%p5 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r46, 52;
	mov.b32 	%r73, %f69;
	// begin inline asm
	@%p5 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r46, 56;
	mov.b32 	%r75, %f70;
	// begin inline asm
	@%p5 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r46, 60;
	mov.b32 	%r77, %f71;
	// begin inline asm
	@%p5 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r160, %r95, 1;
	and.b32  	%r161, %r160, 124;
	add.s32 	%r162, %r130, %r161;
	shl.b32 	%r163, %r156, 2;
	add.s32 	%r164, %r162, %r163;
	ld.shared.u32 	%r78, [%r164];
	ld.shared.u32 	%r79, [%r164+4];
	or.b32  	%r165, %r156, 512;
	shr.u32 	%r166, %r165, 2;
	and.b32  	%r167, %r166, 252;
	add.s32 	%r168, %r130, %r167;
	add.s32 	%r169, %r168, %r163;
	ld.shared.u32 	%r80, [%r169+2048];
	ld.shared.u32 	%r81, [%r169+2052];
	or.b32  	%r170, %r156, 1024;
	shr.u32 	%r171, %r170, 2;
	and.b32  	%r172, %r171, 380;
	add.s32 	%r173, %r130, %r172;
	add.s32 	%r174, %r173, %r163;
	ld.shared.u32 	%r82, [%r174+4096];
	ld.shared.u32 	%r83, [%r174+4100];
	or.b32  	%r175, %r156, 1536;
	shr.u32 	%r176, %r175, 2;
	and.b32  	%r177, %r176, 508;
	add.s32 	%r178, %r130, %r177;
	add.s32 	%r179, %r178, %r163;
	ld.shared.u32 	%r84, [%r179+6144];
	ld.shared.u32 	%r85, [%r179+6148];
	or.b32  	%r180, %r156, 2048;
	shr.u32 	%r181, %r180, 2;
	and.b32  	%r182, %r181, 636;
	add.s32 	%r183, %r130, %r182;
	add.s32 	%r184, %r183, %r163;
	ld.shared.u32 	%r86, [%r184+8192];
	ld.shared.u32 	%r87, [%r184+8196];
	or.b32  	%r185, %r156, 2560;
	shr.u32 	%r186, %r185, 2;
	and.b32  	%r187, %r186, 764;
	add.s32 	%r188, %r130, %r187;
	add.s32 	%r189, %r188, %r163;
	ld.shared.u32 	%r88, [%r189+10240];
	ld.shared.u32 	%r89, [%r189+10244];
	or.b32  	%r190, %r156, 3072;
	shr.u32 	%r191, %r190, 2;
	and.b32  	%r192, %r191, 892;
	add.s32 	%r193, %r130, %r192;
	add.s32 	%r194, %r193, %r163;
	ld.shared.u32 	%r90, [%r194+12288];
	ld.shared.u32 	%r91, [%r194+12292];
	or.b32  	%r195, %r156, 3584;
	shr.u32 	%r196, %r195, 2;
	and.b32  	%r197, %r196, 1020;
	add.s32 	%r198, %r130, %r197;
	add.s32 	%r199, %r198, %r163;
	ld.shared.u32 	%r92, [%r199+14336];
	ld.shared.u32 	%r93, [%r199+14340];
	// begin inline asm
	@%p29 st.global.v2.b32 [ %rd9 + 0 ], { %r78, %r79 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v2.b32 [ %rd10 + 0 ], { %r80, %r81 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v2.b32 [ %rd11 + 0 ], { %r82, %r83 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v2.b32 [ %rd12 + 0 ], { %r84, %r85 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v2.b32 [ %rd13 + 0 ], { %r86, %r87 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v2.b32 [ %rd14 + 0 ], { %r88, %r89 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v2.b32 [ %rd15 + 0 ], { %r90, %r91 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v2.b32 [ %rd16 + 0 ], { %r92, %r93 };
	// end inline asm
	.loc	1 48 4                          // cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py:48:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bp/cbpr5xosznznfm5meozkmfr64fw4anl7wajv6w2knwjpzrhqbttb.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 112
.b8 114
.b8 53
.b8 120
.b8 111
.b8 115
.b8 122
.b8 110
.b8 122
.b8 110
.b8 102
.b8 109
.b8 53
.b8 109
.b8 101
.b8 111
.b8 122
.b8 107
.b8 109
.b8 102
.b8 114
.b8 54
.b8 52
.b8 102
.b8 119
.b8 52
.b8 97
.b8 110
.b8 108
.b8 55
.b8 119
.b8 97
.b8 106
.b8 118
.b8 54
.b8 119
.b8 50
.b8 107
.b8 110
.b8 119
.b8 106
.b8 112
.b8 122
.b8 114
.b8 104
.b8 113
.b8 98
.b8 116
.b8 116
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
