//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_7 // -- Begin function triton_poi_fused_clone_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_7
.visible .entry triton_poi_fused_clone_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_5,
	.param .u32 triton_poi_fused_clone_7_param_6,
	.param .u32 triton_poi_fused_clone_7_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_clone_7_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_clone_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:22:33
	shl.b32 	%r23, %r1, 2;
	ld.param.u64 	%rd9, [triton_poi_fused_clone_7_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_clone_7_param_3];
	.loc	1 23 44                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:23:44
	mov.u32 	%r24, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused_clone_7_param_4];
	bfe.u32 	%r25, %r24, 5, 2;
	ld.param.u64 	%rd12, [triton_poi_fused_clone_7_param_5];
	and.b32  	%r26, %r24, 1;
	shl.b32 	%r27, %r26, 1;
	.loc	1 23 23                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:23:23
	or.b32  	%r28, %r25, %r23;
	or.b32  	%r29, %r23, %r27;
	.loc	1 24 21                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:24:21
	setp.lt.s32 	%p11, %r28, 128;
	setp.lt.s32 	%p5, %r29, 128;
	.loc	1 25 28                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:25:33
	shl.b32 	%r30, %r2, 6;
	.loc	1 26 44                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:26:44
	shl.b32 	%r31, %r24, 1;
	and.b32  	%r32, %r31, 62;
	shr.u32 	%r33, %r24, 1;
	bfe.u32 	%r34, %r24, 1, 4;
	and.b32  	%r35, %r33, 16;
	and.b32  	%r36, %r33, 32;
	.loc	1 26 23                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:26:23
	or.b32  	%r37, %r30, %r32;
	.loc	1 26 44                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:26:44
	or.b32  	%r38, %r35, %r34;
	or.b32  	%r39, %r38, %r36;
	.loc	1 26 23                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:26:23
	or.b32  	%r40, %r39, %r30;
	.loc	1 27 21                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:27:21
	setp.lt.s32 	%p12, %r37, 64;
	setp.lt.s32 	%p13, %r40, 64;
	.loc	1 31 19                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:31:19
	shr.s32 	%r42, %r29, 31;
	shr.u32 	%r43, %r42, 27;
	add.s32 	%r44, %r29, %r43;
	.loc	1 30 19                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:30:19
	and.b32  	%r45, %r44, -32;
	sub.s32 	%r46, %r29, %r45;
	.loc	1 32 38                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:32:38
	shl.b32 	%r47, %r28, 6;
	.loc	1 32 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:32:35
	add.s32 	%r48, %r37, %r47;
	.loc	1 32 30                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:32:30
	mul.wide.s32 	%rd13, %r48, 4;
	add.s64 	%rd1, %rd7, %rd13;
	.loc	1 32 51                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:32:51
	and.pred  	%p1, %p11, %p12;
	and.pred  	%p4, %p5, %p13;
	.loc	1 32 43                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:32:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r49, %r24, 3;
	and.b32  	%r50, %r49, 248;
	or.b32  	%r51, %r25, %r50;
	mov.u32 	%r52, global_smem;
	shl.b32 	%r53, %r51, 2;
	shl.b32 	%r54, %r50, 1;
	add.s32 	%r55, %r52, %r54;
	add.s32 	%r5, %r55, %r53;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 24;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r56, %r24, 126;
	shl.b32 	%r57, %r56, 2;
	add.s32 	%r58, %r52, %r57;
	and.b32  	%r59, %r49, 1016;
	add.s32 	%r60, %r58, %r59;
	ld.shared.v2.f32 	{%f1, %f2}, [%r60];
	.loc	1 33 38                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:38
	shl.b32 	%r61, %r40, 5;
	.loc	1 33 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:35
	add.s32 	%r62, %r61, %r46;
	.loc	1 33 48                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:48
	shl.b32 	%r63, %r44, 6;
	and.b32  	%r64, %r63, -2048;
	.loc	1 33 43                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:43
	add.s32 	%r65, %r62, %r64;
	.loc	1 33 30                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:30
	mul.wide.s32 	%rd14, %r65, 4;
	add.s64 	%rd2, %rd8, %rd14;
	.loc	1 33 53                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:53
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:34:30
	mul.wide.s32 	%rd15, %r46, 4;
	add.s64 	%rd3, %rd9, %rd15;
	.loc	1 34 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:34:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 30                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:35:30
	add.s64 	%rd4, %rd10, %rd14;
	.loc	1 35 53                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:35:53
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 30                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:36:30
	add.s64 	%rd5, %rd11, %rd15;
	.loc	1 36 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:36:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 53                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:53
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r13;
	.loc	1 34 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:34:35
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r15;
	.loc	1 37 18                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:37:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 38 18                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:38:18
	add.f32 	%f9, %f1, %f8;
	.loc	1 33 53                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:33:53
	mov.b32 	%f10, %r10;
	mov.b32 	%f11, %r14;
	.loc	1 34 35                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:34:35
	mov.b32 	%f12, %r12;
	mov.b32 	%f13, %r16;
	.loc	1 37 18                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:37:18
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f10, %f12;
	.loc	1 38 18                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:38:18
	add.f32 	%f16, %f2, %f15;
	.loc	1 40 18                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:40:18
	add.f32 	%f17, %f9, %f7;
	add.f32 	%f18, %f16, %f14;
	.loc	1 41 25                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:41:25
	add.s64 	%rd6, %rd12, %rd13;
	.loc	1 41 44                         // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:41:44
	bar.sync 	0;
	shl.b32 	%r66, %r26, 7;
	or.b32  	%r67, %r66, %r34;
	or.b32  	%r68, %r67, %r35;
	or.b32  	%r69, %r68, %r36;
	shl.b32 	%r70, %r26, 3;
	add.s32 	%r71, %r52, %r70;
	shl.b32 	%r72, %r69, 2;
	add.s32 	%r17, %r71, %r72;
	mov.b32 	%r18, %f17;
	// begin inline asm
	@%p2 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	shr.u32 	%r73, %r66, 4;
	add.s32 	%r74, %r52, %r73;
	add.s32 	%r75, %r74, %r72;
	add.s32 	%r19, %r75, 260;
	mov.b32 	%r20, %f18;
	// begin inline asm
	@%p2 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r76, %r24, 3;
	and.b32  	%r77, %r76, 12;
	add.s32 	%r78, %r52, %r77;
	add.s32 	%r79, %r78, %r59;
	ld.shared.u32 	%r21, [%r79];
	ld.shared.u32 	%r22, [%r79+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r21, %r22 };
	// end inline asm
	.loc	1 41 4                          // ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cd/ccd3mvbs22v22xl5ejhz3m4nyb7hbhl3ntbbllxkaxg3peysftux.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 100
.b8 51
.b8 109
.b8 118
.b8 98
.b8 115
.b8 50
.b8 50
.b8 118
.b8 50
.b8 50
.b8 120
.b8 108
.b8 53
.b8 101
.b8 106
.b8 104
.b8 122
.b8 51
.b8 109
.b8 52
.b8 110
.b8 121
.b8 98
.b8 55
.b8 104
.b8 98
.b8 104
.b8 108
.b8 51
.b8 110
.b8 116
.b8 98
.b8 98
.b8 108
.b8 108
.b8 120
.b8 107
.b8 97
.b8 120
.b8 103
.b8 51
.b8 112
.b8 101
.b8 121
.b8 115
.b8 102
.b8 116
.b8 117
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
