; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_native_layer_norm_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 4, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 15, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %16 = icmp slt i32 %15, 16, !dbg !14
  %.frozen = freeze i32 %15, !dbg !15
  %17 = sdiv i32 %.frozen, 4, !dbg !15
  %18 = mul i32 %17, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sext i32 %15 to i64, !dbg !17
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %16) #3, !dbg !18
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %16) #3, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %16) #3, !dbg !22
  %26 = sext i32 %17 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %26, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #3, !dbg !24
  %29 = getelementptr float, ptr addrspace(1) %4, i64 %26, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %16) #3, !dbg !26
  %31 = bitcast i32 %30 to float, !dbg !26
  %32 = sext i32 %.decomposed to i64, !dbg !27
  %33 = getelementptr float, ptr addrspace(1) %5, i64 %32, !dbg !27
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %16) #3, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %6, i64 %32, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %16) #3, !dbg !30
  %37 = fadd float %31, 0x3EE4F8B580000000, !dbg !31
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i = icmp eq i32 %38, 0, !dbg !32
  br i1 %.not.i, label %41, label %39, !dbg !32

39:                                               ; preds = %10
  %40 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %37), !dbg !32
  br label %__nv_rsqrtf.exit, !dbg !32

41:                                               ; preds = %10
  %42 = tail call float @llvm.nvvm.rsqrt.approx.f(float %37), !dbg !32
  br label %__nv_rsqrtf.exit, !dbg !32

__nv_rsqrtf.exit:                                 ; preds = %39, %41
  %.0.i = phi float [ %40, %39 ], [ %42, %41 ], !dbg !32
  %43 = bitcast i32 %21 to float, !dbg !18
  %44 = bitcast i32 %23 to float, !dbg !20
  %45 = fadd float %43, %44, !dbg !33
  %46 = bitcast i32 %25 to float, !dbg !22
  %47 = fmul float %45, %46, !dbg !34
  %48 = bitcast i32 %28 to float, !dbg !24
  %49 = fsub float %47, %48, !dbg !35
  %50 = bitcast i32 %36 to float, !dbg !30
  %51 = bitcast i32 %34 to float, !dbg !28
  %52 = and i32 %13, 16, !dbg !12
  %53 = fmul float %49, %.0.i, !dbg !36
  %54 = fmul float %53, %51, !dbg !37
  %55 = fadd float %54, %50, !dbg !38
  %56 = getelementptr float, ptr addrspace(1) %7, i64 %19, !dbg !39
  %57 = icmp eq i32 %52, 0, !dbg !40
  %58 = bitcast float %53 to i32, !dbg !40
  %59 = and i1 %57, %16, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %58, ptr addrspace(1) %56, i1 %59) #3, !dbg !40
  %60 = getelementptr float, ptr addrspace(1) %8, i64 %19, !dbg !41
  %61 = bitcast float %55 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %61, ptr addrspace(1) %60, i1 %59) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjxrdhiv2f2emt2n6iyb2yuqgnvnpsttu5b4sh3kfwos3pxlso5j.py", directory: "inductor_cache/jx")
!4 = !{ptr @triton_poi_fused_add_mul_native_layer_norm_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_native_layer_norm_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_native_layer_norm_1", linkageName: "triton_poi_fused_add_mul_native_layer_norm_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 35, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 36, scope: !7)
!31 = !DILocation(line: 38, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 28, scope: !7)
!33 = !DILocation(line: 34, column: 18, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 40, column: 19, scope: !7)
!37 = !DILocation(line: 41, column: 20, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 25, scope: !7)
!40 = !DILocation(line: 43, column: 37, scope: !7)
!41 = !DILocation(line: 44, column: 25, scope: !7)
!42 = !DILocation(line: 44, column: 37, scope: !7)
!43 = !DILocation(line: 44, column: 4, scope: !7)
