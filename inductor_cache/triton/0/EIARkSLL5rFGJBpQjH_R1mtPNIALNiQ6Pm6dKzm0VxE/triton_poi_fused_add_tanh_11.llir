; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_tanh_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 2, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 6, !dbg !12
  %.lobit = and i32 %9, 1, !dbg !12
  %10 = or disjoint i32 %.lobit, 2, !dbg !12
  %11 = or disjoint i32 %7, %.lobit, !dbg !13
  %12 = or disjoint i32 %7, %10, !dbg !13
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !14
  %14 = shl i32 %13, 8, !dbg !15
  %15 = shl i32 %8, 2, !dbg !16
  %16 = and i32 %15, 252, !dbg !16
  %17 = or disjoint i32 %14, %16, !dbg !17
  %18 = icmp slt i32 %17, 256, !dbg !18
  %19 = shl i32 %11, 8, !dbg !19
  %20 = shl i32 %12, 8, !dbg !19
  %21 = add i32 %17, %19, !dbg !20
  %22 = add i32 %17, %20, !dbg !20
  %23 = sext i32 %21 to i64, !dbg !21
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !21
  %25 = sext i32 %22 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !21
  %27 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %24, i1 %18) #4, !dbg !22
  %28 = extractvalue { i32, i32, i32, i32 } %27, 0, !dbg !22
  %29 = extractvalue { i32, i32, i32, i32 } %27, 1, !dbg !22
  %30 = extractvalue { i32, i32, i32, i32 } %27, 2, !dbg !22
  %31 = extractvalue { i32, i32, i32, i32 } %27, 3, !dbg !22
  %32 = bitcast i32 %28 to float, !dbg !22
  %33 = bitcast i32 %29 to float, !dbg !22
  %34 = bitcast i32 %30 to float, !dbg !22
  %35 = bitcast i32 %31 to float, !dbg !22
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 %18) #4, !dbg !22
  %37 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !22
  %38 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !22
  %39 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !22
  %40 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !22
  %41 = bitcast i32 %37 to float, !dbg !22
  %42 = bitcast i32 %38 to float, !dbg !22
  %43 = bitcast i32 %39 to float, !dbg !22
  %44 = bitcast i32 %40 to float, !dbg !22
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !23
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !23
  %47 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %45, i1 %18) #4, !dbg !24
  %48 = extractvalue { i32, i32, i32, i32 } %47, 0, !dbg !24
  %49 = extractvalue { i32, i32, i32, i32 } %47, 1, !dbg !24
  %50 = extractvalue { i32, i32, i32, i32 } %47, 2, !dbg !24
  %51 = extractvalue { i32, i32, i32, i32 } %47, 3, !dbg !24
  %52 = bitcast i32 %48 to float, !dbg !24
  %53 = bitcast i32 %49 to float, !dbg !24
  %54 = bitcast i32 %50 to float, !dbg !24
  %55 = bitcast i32 %51 to float, !dbg !24
  %56 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %46, i1 %18) #4, !dbg !24
  %57 = extractvalue { i32, i32, i32, i32 } %56, 0, !dbg !24
  %58 = extractvalue { i32, i32, i32, i32 } %56, 1, !dbg !24
  %59 = extractvalue { i32, i32, i32, i32 } %56, 2, !dbg !24
  %60 = extractvalue { i32, i32, i32, i32 } %56, 3, !dbg !24
  %61 = bitcast i32 %57 to float, !dbg !24
  %62 = bitcast i32 %58 to float, !dbg !24
  %63 = bitcast i32 %59 to float, !dbg !24
  %64 = bitcast i32 %60 to float, !dbg !24
  %65 = fadd float %32, %52, !dbg !25
  %66 = fadd float %33, %53, !dbg !25
  %67 = fadd float %34, %54, !dbg !25
  %68 = fadd float %35, %55, !dbg !25
  %69 = fadd float %41, %61, !dbg !25
  %70 = fadd float %42, %62, !dbg !25
  %71 = fadd float %43, %63, !dbg !25
  %72 = fadd float %44, %64, !dbg !25
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i = icmp eq i32 %73, 0, !dbg !26
  %74 = tail call float @llvm.nvvm.fabs.ftz.f(float %65) #4, !dbg !26
  %75 = tail call float @llvm.nvvm.fabs.f(float %65) #4, !dbg !26
  %.01.i = select i1 %.not.i, float %75, float %74, !dbg !26
  %76 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %76, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %5
  %77 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %78 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %77) #4, !dbg !26
  %79 = fadd float %78, 1.000000e+00, !dbg !26
  %80 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %79) #5, !dbg !26, !srcloc !27
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %81, 0, !dbg !26
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %80, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %80, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i = select i1 %.not6.i, float %83, float %82, !dbg !26
  %84 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %84, float 1.000000e+00, float %.03.i, !dbg !26
  %85 = bitcast float %s.0.i to i32, !dbg !26
  %86 = bitcast float %65 to i32, !dbg !26
  %87 = and i32 %86, -2147483648, !dbg !26
  %88 = or i32 %87, %85, !dbg !26
  %89 = bitcast i32 %88 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %5
  %90 = fmul float %65, %65, !dbg !26
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %91, 0, !dbg !26
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %90, float 0xBFAAC795C0000000) #4, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %90, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i = select i1 %.not1.i, float %93, float %92, !dbg !26
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %94, 0, !dbg !26
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %90, float 0x3FC10B2820000000) #4, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %90, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i = select i1 %.not2.i, float %96, float %95, !dbg !26
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %97, 0, !dbg !26
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %90, float 0xBFD5553DA0000000) #4, !dbg !26
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %90, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i = select i1 %.not3.i, float %99, float %98, !dbg !26
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %100, 0, !dbg !26
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %90, float 0.000000e+00) #4, !dbg !26
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %90, float 0.000000e+00) #4, !dbg !26
  %.04.i = select i1 %.not4.i, float %102, float %101, !dbg !26
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %103, 0, !dbg !26
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %65, float %65) #4, !dbg !26
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %65, float %65) #4, !dbg !26
  %.02.i = select i1 %.not5.i, float %105, float %104, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %89, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i16 = icmp eq i32 %106, 0, !dbg !26
  %107 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #4, !dbg !26
  %108 = tail call float @llvm.nvvm.fabs.f(float %66) #4, !dbg !26
  %.01.i17 = select i1 %.not.i16, float %108, float %107, !dbg !26
  %109 = fcmp ult float %.01.i17, 0x3FE3333340000000, !dbg !26
  br i1 %109, label %__internal_fmad.exit3.i23, label %__internal_fmad.exit1.i18, !dbg !26

__internal_fmad.exit1.i18:                        ; preds = %__nv_tanhf.exit
  %110 = fmul float %.01.i17, 0x4007154760000000, !dbg !26
  %111 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %110) #4, !dbg !26
  %112 = fadd float %111, 1.000000e+00, !dbg !26
  %113 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %112) #5, !dbg !26, !srcloc !27
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i19 = icmp eq i32 %114, 0, !dbg !26
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i20 = select i1 %.not6.i19, float %116, float %115, !dbg !26
  %117 = fcmp oge float %.01.i17, 0x4022059680000000, !dbg !26
  %s.0.i21 = select i1 %117, float 1.000000e+00, float %.03.i20, !dbg !26
  %118 = bitcast float %s.0.i21 to i32, !dbg !26
  %119 = bitcast float %66 to i32, !dbg !26
  %120 = and i32 %119, -2147483648, !dbg !26
  %121 = or i32 %120, %118, !dbg !26
  %122 = bitcast i32 %121 to float, !dbg !26
  br label %__nv_tanhf.exit34, !dbg !26

__internal_fmad.exit3.i23:                        ; preds = %__nv_tanhf.exit
  %123 = fmul float %66, %66, !dbg !26
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i24 = icmp eq i32 %124, 0, !dbg !26
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %123, float 0xBFAAC795C0000000) #4, !dbg !26
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %123, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i25 = select i1 %.not1.i24, float %126, float %125, !dbg !26
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i26 = icmp eq i32 %127, 0, !dbg !26
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i25, float %123, float 0x3FC10B2820000000) #4, !dbg !26
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i25, float %123, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i27 = select i1 %.not2.i26, float %129, float %128, !dbg !26
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i28 = icmp eq i32 %130, 0, !dbg !26
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i27, float %123, float 0xBFD5553DA0000000) #4, !dbg !26
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i27, float %123, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i29 = select i1 %.not3.i28, float %132, float %131, !dbg !26
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i30 = icmp eq i32 %133, 0, !dbg !26
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %123, float 0.000000e+00) #4, !dbg !26
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %123, float 0.000000e+00) #4, !dbg !26
  %.04.i31 = select i1 %.not4.i30, float %135, float %134, !dbg !26
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i32 = icmp eq i32 %136, 0, !dbg !26
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i31, float %66, float %66) #4, !dbg !26
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i31, float %66, float %66) #4, !dbg !26
  %.02.i33 = select i1 %.not5.i32, float %138, float %137, !dbg !26
  br label %__nv_tanhf.exit34, !dbg !26

__nv_tanhf.exit34:                                ; preds = %__internal_fmad.exit1.i18, %__internal_fmad.exit3.i23
  %s.1.i22 = phi float [ %122, %__internal_fmad.exit1.i18 ], [ %.02.i33, %__internal_fmad.exit3.i23 ], !dbg !26
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i35 = icmp eq i32 %139, 0, !dbg !26
  %140 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #4, !dbg !26
  %141 = tail call float @llvm.nvvm.fabs.f(float %67) #4, !dbg !26
  %.01.i36 = select i1 %.not.i35, float %141, float %140, !dbg !26
  %142 = fcmp ult float %.01.i36, 0x3FE3333340000000, !dbg !26
  br i1 %142, label %__internal_fmad.exit3.i42, label %__internal_fmad.exit1.i37, !dbg !26

__internal_fmad.exit1.i37:                        ; preds = %__nv_tanhf.exit34
  %143 = fmul float %.01.i36, 0x4007154760000000, !dbg !26
  %144 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %143) #4, !dbg !26
  %145 = fadd float %144, 1.000000e+00, !dbg !26
  %146 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %145) #5, !dbg !26, !srcloc !27
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i38 = icmp eq i32 %147, 0, !dbg !26
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %146, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %146, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i39 = select i1 %.not6.i38, float %149, float %148, !dbg !26
  %150 = fcmp oge float %.01.i36, 0x4022059680000000, !dbg !26
  %s.0.i40 = select i1 %150, float 1.000000e+00, float %.03.i39, !dbg !26
  %151 = bitcast float %s.0.i40 to i32, !dbg !26
  %152 = bitcast float %67 to i32, !dbg !26
  %153 = and i32 %152, -2147483648, !dbg !26
  %154 = or i32 %153, %151, !dbg !26
  %155 = bitcast i32 %154 to float, !dbg !26
  br label %__nv_tanhf.exit53, !dbg !26

__internal_fmad.exit3.i42:                        ; preds = %__nv_tanhf.exit34
  %156 = fmul float %67, %67, !dbg !26
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i43 = icmp eq i32 %157, 0, !dbg !26
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %156, float 0xBFAAC795C0000000) #4, !dbg !26
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %156, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i44 = select i1 %.not1.i43, float %159, float %158, !dbg !26
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i45 = icmp eq i32 %160, 0, !dbg !26
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %156, float 0x3FC10B2820000000) #4, !dbg !26
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %156, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i46 = select i1 %.not2.i45, float %162, float %161, !dbg !26
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i47 = icmp eq i32 %163, 0, !dbg !26
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float %156, float 0xBFD5553DA0000000) #4, !dbg !26
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float %156, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i48 = select i1 %.not3.i47, float %165, float %164, !dbg !26
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i49 = icmp eq i32 %166, 0, !dbg !26
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %156, float 0.000000e+00) #4, !dbg !26
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %156, float 0.000000e+00) #4, !dbg !26
  %.04.i50 = select i1 %.not4.i49, float %168, float %167, !dbg !26
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i51 = icmp eq i32 %169, 0, !dbg !26
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i50, float %67, float %67) #4, !dbg !26
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i50, float %67, float %67) #4, !dbg !26
  %.02.i52 = select i1 %.not5.i51, float %171, float %170, !dbg !26
  br label %__nv_tanhf.exit53, !dbg !26

__nv_tanhf.exit53:                                ; preds = %__internal_fmad.exit1.i37, %__internal_fmad.exit3.i42
  %s.1.i41 = phi float [ %155, %__internal_fmad.exit1.i37 ], [ %.02.i52, %__internal_fmad.exit3.i42 ], !dbg !26
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i54 = icmp eq i32 %172, 0, !dbg !26
  %173 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #4, !dbg !26
  %174 = tail call float @llvm.nvvm.fabs.f(float %68) #4, !dbg !26
  %.01.i55 = select i1 %.not.i54, float %174, float %173, !dbg !26
  %175 = fcmp ult float %.01.i55, 0x3FE3333340000000, !dbg !26
  br i1 %175, label %__internal_fmad.exit3.i61, label %__internal_fmad.exit1.i56, !dbg !26

__internal_fmad.exit1.i56:                        ; preds = %__nv_tanhf.exit53
  %176 = fmul float %.01.i55, 0x4007154760000000, !dbg !26
  %177 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %176) #4, !dbg !26
  %178 = fadd float %177, 1.000000e+00, !dbg !26
  %179 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %178) #5, !dbg !26, !srcloc !27
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i57 = icmp eq i32 %180, 0, !dbg !26
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %179, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i58 = select i1 %.not6.i57, float %182, float %181, !dbg !26
  %183 = fcmp oge float %.01.i55, 0x4022059680000000, !dbg !26
  %s.0.i59 = select i1 %183, float 1.000000e+00, float %.03.i58, !dbg !26
  %184 = bitcast float %s.0.i59 to i32, !dbg !26
  %185 = bitcast float %68 to i32, !dbg !26
  %186 = and i32 %185, -2147483648, !dbg !26
  %187 = or i32 %186, %184, !dbg !26
  %188 = bitcast i32 %187 to float, !dbg !26
  br label %__nv_tanhf.exit72, !dbg !26

__internal_fmad.exit3.i61:                        ; preds = %__nv_tanhf.exit53
  %189 = fmul float %68, %68, !dbg !26
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i62 = icmp eq i32 %190, 0, !dbg !26
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #4, !dbg !26
  %192 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i63 = select i1 %.not1.i62, float %192, float %191, !dbg !26
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i64 = icmp eq i32 %193, 0, !dbg !26
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i63, float %189, float 0x3FC10B2820000000) #4, !dbg !26
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i63, float %189, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i65 = select i1 %.not2.i64, float %195, float %194, !dbg !26
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i66 = icmp eq i32 %196, 0, !dbg !26
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %189, float 0xBFD5553DA0000000) #4, !dbg !26
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %189, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i67 = select i1 %.not3.i66, float %198, float %197, !dbg !26
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i68 = icmp eq i32 %199, 0, !dbg !26
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %189, float 0.000000e+00) #4, !dbg !26
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %189, float 0.000000e+00) #4, !dbg !26
  %.04.i69 = select i1 %.not4.i68, float %201, float %200, !dbg !26
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i70 = icmp eq i32 %202, 0, !dbg !26
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i69, float %68, float %68) #4, !dbg !26
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i69, float %68, float %68) #4, !dbg !26
  %.02.i71 = select i1 %.not5.i70, float %204, float %203, !dbg !26
  br label %__nv_tanhf.exit72, !dbg !26

__nv_tanhf.exit72:                                ; preds = %__internal_fmad.exit1.i56, %__internal_fmad.exit3.i61
  %s.1.i60 = phi float [ %188, %__internal_fmad.exit1.i56 ], [ %.02.i71, %__internal_fmad.exit3.i61 ], !dbg !26
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i73 = icmp eq i32 %205, 0, !dbg !26
  %206 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #4, !dbg !26
  %207 = tail call float @llvm.nvvm.fabs.f(float %69) #4, !dbg !26
  %.01.i74 = select i1 %.not.i73, float %207, float %206, !dbg !26
  %208 = fcmp ult float %.01.i74, 0x3FE3333340000000, !dbg !26
  br i1 %208, label %__internal_fmad.exit3.i80, label %__internal_fmad.exit1.i75, !dbg !26

__internal_fmad.exit1.i75:                        ; preds = %__nv_tanhf.exit72
  %209 = fmul float %.01.i74, 0x4007154760000000, !dbg !26
  %210 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %209) #4, !dbg !26
  %211 = fadd float %210, 1.000000e+00, !dbg !26
  %212 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %211) #5, !dbg !26, !srcloc !27
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i76 = icmp eq i32 %213, 0, !dbg !26
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i77 = select i1 %.not6.i76, float %215, float %214, !dbg !26
  %216 = fcmp oge float %.01.i74, 0x4022059680000000, !dbg !26
  %s.0.i78 = select i1 %216, float 1.000000e+00, float %.03.i77, !dbg !26
  %217 = bitcast float %s.0.i78 to i32, !dbg !26
  %218 = bitcast float %69 to i32, !dbg !26
  %219 = and i32 %218, -2147483648, !dbg !26
  %220 = or i32 %219, %217, !dbg !26
  %221 = bitcast i32 %220 to float, !dbg !26
  br label %__nv_tanhf.exit91, !dbg !26

__internal_fmad.exit3.i80:                        ; preds = %__nv_tanhf.exit72
  %222 = fmul float %69, %69, !dbg !26
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i81 = icmp eq i32 %223, 0, !dbg !26
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %222, float 0xBFAAC795C0000000) #4, !dbg !26
  %225 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %222, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i82 = select i1 %.not1.i81, float %225, float %224, !dbg !26
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i83 = icmp eq i32 %226, 0, !dbg !26
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i82, float %222, float 0x3FC10B2820000000) #4, !dbg !26
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i82, float %222, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i84 = select i1 %.not2.i83, float %228, float %227, !dbg !26
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i85 = icmp eq i32 %229, 0, !dbg !26
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i84, float %222, float 0xBFD5553DA0000000) #4, !dbg !26
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i84, float %222, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i86 = select i1 %.not3.i85, float %231, float %230, !dbg !26
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i87 = icmp eq i32 %232, 0, !dbg !26
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i86, float %222, float 0.000000e+00) #4, !dbg !26
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i86, float %222, float 0.000000e+00) #4, !dbg !26
  %.04.i88 = select i1 %.not4.i87, float %234, float %233, !dbg !26
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i89 = icmp eq i32 %235, 0, !dbg !26
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i88, float %69, float %69) #4, !dbg !26
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i88, float %69, float %69) #4, !dbg !26
  %.02.i90 = select i1 %.not5.i89, float %237, float %236, !dbg !26
  br label %__nv_tanhf.exit91, !dbg !26

__nv_tanhf.exit91:                                ; preds = %__internal_fmad.exit1.i75, %__internal_fmad.exit3.i80
  %s.1.i79 = phi float [ %221, %__internal_fmad.exit1.i75 ], [ %.02.i90, %__internal_fmad.exit3.i80 ], !dbg !26
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i92 = icmp eq i32 %238, 0, !dbg !26
  %239 = tail call float @llvm.nvvm.fabs.ftz.f(float %70) #4, !dbg !26
  %240 = tail call float @llvm.nvvm.fabs.f(float %70) #4, !dbg !26
  %.01.i93 = select i1 %.not.i92, float %240, float %239, !dbg !26
  %241 = fcmp ult float %.01.i93, 0x3FE3333340000000, !dbg !26
  br i1 %241, label %__internal_fmad.exit3.i99, label %__internal_fmad.exit1.i94, !dbg !26

__internal_fmad.exit1.i94:                        ; preds = %__nv_tanhf.exit91
  %242 = fmul float %.01.i93, 0x4007154760000000, !dbg !26
  %243 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %242) #4, !dbg !26
  %244 = fadd float %243, 1.000000e+00, !dbg !26
  %245 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %244) #5, !dbg !26, !srcloc !27
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i95 = icmp eq i32 %246, 0, !dbg !26
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %245, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i96 = select i1 %.not6.i95, float %248, float %247, !dbg !26
  %249 = fcmp oge float %.01.i93, 0x4022059680000000, !dbg !26
  %s.0.i97 = select i1 %249, float 1.000000e+00, float %.03.i96, !dbg !26
  %250 = bitcast float %s.0.i97 to i32, !dbg !26
  %251 = bitcast float %70 to i32, !dbg !26
  %252 = and i32 %251, -2147483648, !dbg !26
  %253 = or i32 %252, %250, !dbg !26
  %254 = bitcast i32 %253 to float, !dbg !26
  br label %__nv_tanhf.exit110, !dbg !26

__internal_fmad.exit3.i99:                        ; preds = %__nv_tanhf.exit91
  %255 = fmul float %70, %70, !dbg !26
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i100 = icmp eq i32 %256, 0, !dbg !26
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #4, !dbg !26
  %258 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i101 = select i1 %.not1.i100, float %258, float %257, !dbg !26
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i102 = icmp eq i32 %259, 0, !dbg !26
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i101, float %255, float 0x3FC10B2820000000) #4, !dbg !26
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i101, float %255, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i103 = select i1 %.not2.i102, float %261, float %260, !dbg !26
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i104 = icmp eq i32 %262, 0, !dbg !26
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i103, float %255, float 0xBFD5553DA0000000) #4, !dbg !26
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i103, float %255, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i105 = select i1 %.not3.i104, float %264, float %263, !dbg !26
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i106 = icmp eq i32 %265, 0, !dbg !26
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i105, float %255, float 0.000000e+00) #4, !dbg !26
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i105, float %255, float 0.000000e+00) #4, !dbg !26
  %.04.i107 = select i1 %.not4.i106, float %267, float %266, !dbg !26
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i108 = icmp eq i32 %268, 0, !dbg !26
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i107, float %70, float %70) #4, !dbg !26
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i107, float %70, float %70) #4, !dbg !26
  %.02.i109 = select i1 %.not5.i108, float %270, float %269, !dbg !26
  br label %__nv_tanhf.exit110, !dbg !26

__nv_tanhf.exit110:                               ; preds = %__internal_fmad.exit1.i94, %__internal_fmad.exit3.i99
  %s.1.i98 = phi float [ %254, %__internal_fmad.exit1.i94 ], [ %.02.i109, %__internal_fmad.exit3.i99 ], !dbg !26
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i111 = icmp eq i32 %271, 0, !dbg !26
  %272 = tail call float @llvm.nvvm.fabs.ftz.f(float %71) #4, !dbg !26
  %273 = tail call float @llvm.nvvm.fabs.f(float %71) #4, !dbg !26
  %.01.i112 = select i1 %.not.i111, float %273, float %272, !dbg !26
  %274 = fcmp ult float %.01.i112, 0x3FE3333340000000, !dbg !26
  br i1 %274, label %__internal_fmad.exit3.i118, label %__internal_fmad.exit1.i113, !dbg !26

__internal_fmad.exit1.i113:                       ; preds = %__nv_tanhf.exit110
  %275 = fmul float %.01.i112, 0x4007154760000000, !dbg !26
  %276 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %275) #4, !dbg !26
  %277 = fadd float %276, 1.000000e+00, !dbg !26
  %278 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %277) #5, !dbg !26, !srcloc !27
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i114 = icmp eq i32 %279, 0, !dbg !26
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %278, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %278, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i115 = select i1 %.not6.i114, float %281, float %280, !dbg !26
  %282 = fcmp oge float %.01.i112, 0x4022059680000000, !dbg !26
  %s.0.i116 = select i1 %282, float 1.000000e+00, float %.03.i115, !dbg !26
  %283 = bitcast float %s.0.i116 to i32, !dbg !26
  %284 = bitcast float %71 to i32, !dbg !26
  %285 = and i32 %284, -2147483648, !dbg !26
  %286 = or i32 %285, %283, !dbg !26
  %287 = bitcast i32 %286 to float, !dbg !26
  br label %__nv_tanhf.exit129, !dbg !26

__internal_fmad.exit3.i118:                       ; preds = %__nv_tanhf.exit110
  %288 = fmul float %71, %71, !dbg !26
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i119 = icmp eq i32 %289, 0, !dbg !26
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #4, !dbg !26
  %291 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i120 = select i1 %.not1.i119, float %291, float %290, !dbg !26
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i121 = icmp eq i32 %292, 0, !dbg !26
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i120, float %288, float 0x3FC10B2820000000) #4, !dbg !26
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i120, float %288, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i122 = select i1 %.not2.i121, float %294, float %293, !dbg !26
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i123 = icmp eq i32 %295, 0, !dbg !26
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %288, float 0xBFD5553DA0000000) #4, !dbg !26
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %288, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i124 = select i1 %.not3.i123, float %297, float %296, !dbg !26
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i125 = icmp eq i32 %298, 0, !dbg !26
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i124, float %288, float 0.000000e+00) #4, !dbg !26
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i124, float %288, float 0.000000e+00) #4, !dbg !26
  %.04.i126 = select i1 %.not4.i125, float %300, float %299, !dbg !26
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i127 = icmp eq i32 %301, 0, !dbg !26
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i126, float %71, float %71) #4, !dbg !26
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i126, float %71, float %71) #4, !dbg !26
  %.02.i128 = select i1 %.not5.i127, float %303, float %302, !dbg !26
  br label %__nv_tanhf.exit129, !dbg !26

__nv_tanhf.exit129:                               ; preds = %__internal_fmad.exit1.i113, %__internal_fmad.exit3.i118
  %s.1.i117 = phi float [ %287, %__internal_fmad.exit1.i113 ], [ %.02.i128, %__internal_fmad.exit3.i118 ], !dbg !26
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i130 = icmp eq i32 %304, 0, !dbg !26
  %305 = tail call float @llvm.nvvm.fabs.ftz.f(float %72) #4, !dbg !26
  %306 = tail call float @llvm.nvvm.fabs.f(float %72) #4, !dbg !26
  %.01.i131 = select i1 %.not.i130, float %306, float %305, !dbg !26
  %307 = fcmp ult float %.01.i131, 0x3FE3333340000000, !dbg !26
  br i1 %307, label %__internal_fmad.exit3.i137, label %__internal_fmad.exit1.i132, !dbg !26

__internal_fmad.exit1.i132:                       ; preds = %__nv_tanhf.exit129
  %308 = fmul float %.01.i131, 0x4007154760000000, !dbg !26
  %309 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %308) #4, !dbg !26
  %310 = fadd float %309, 1.000000e+00, !dbg !26
  %311 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %310) #5, !dbg !26, !srcloc !27
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i133 = icmp eq i32 %312, 0, !dbg !26
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %311, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %311, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i134 = select i1 %.not6.i133, float %314, float %313, !dbg !26
  %315 = fcmp oge float %.01.i131, 0x4022059680000000, !dbg !26
  %s.0.i135 = select i1 %315, float 1.000000e+00, float %.03.i134, !dbg !26
  %316 = bitcast float %s.0.i135 to i32, !dbg !26
  %317 = bitcast float %72 to i32, !dbg !26
  %318 = and i32 %317, -2147483648, !dbg !26
  %319 = or i32 %318, %316, !dbg !26
  %320 = bitcast i32 %319 to float, !dbg !26
  br label %__nv_tanhf.exit148, !dbg !26

__internal_fmad.exit3.i137:                       ; preds = %__nv_tanhf.exit129
  %321 = fmul float %72, %72, !dbg !26
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i138 = icmp eq i32 %322, 0, !dbg !26
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #4, !dbg !26
  %324 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i139 = select i1 %.not1.i138, float %324, float %323, !dbg !26
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i140 = icmp eq i32 %325, 0, !dbg !26
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i139, float %321, float 0x3FC10B2820000000) #4, !dbg !26
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i139, float %321, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i141 = select i1 %.not2.i140, float %327, float %326, !dbg !26
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i142 = icmp eq i32 %328, 0, !dbg !26
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i141, float %321, float 0xBFD5553DA0000000) #4, !dbg !26
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i141, float %321, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i143 = select i1 %.not3.i142, float %330, float %329, !dbg !26
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i144 = icmp eq i32 %331, 0, !dbg !26
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i143, float %321, float 0.000000e+00) #4, !dbg !26
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i143, float %321, float 0.000000e+00) #4, !dbg !26
  %.04.i145 = select i1 %.not4.i144, float %333, float %332, !dbg !26
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i146 = icmp eq i32 %334, 0, !dbg !26
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i145, float %72, float %72) #4, !dbg !26
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i145, float %72, float %72) #4, !dbg !26
  %.02.i147 = select i1 %.not5.i146, float %336, float %335, !dbg !26
  br label %__nv_tanhf.exit148, !dbg !26

__nv_tanhf.exit148:                               ; preds = %__internal_fmad.exit1.i132, %__internal_fmad.exit3.i137
  %s.1.i136 = phi float [ %320, %__internal_fmad.exit1.i132 ], [ %.02.i147, %__internal_fmad.exit3.i137 ], !dbg !26
  %.frozen = freeze i32 %7, !dbg !28
  %337 = sdiv i32 %.frozen, 256, !dbg !28
  %338 = mul i32 %337, 256, !dbg !29
  %.decomposed = sub i32 %.frozen, %338, !dbg !29
  %339 = and i32 %8, 127, !dbg !16
  %340 = or disjoint i32 %339, %14, !dbg !17
  %341 = or disjoint i32 %340, 128, !dbg !17
  %342 = icmp slt i32 %341, 256, !dbg !18
  %343 = icmp slt i32 %340, 256, !dbg !18
  %344 = shl i32 %340, 8, !dbg !30
  %345 = shl i32 %341, 8, !dbg !30
  %346 = shl i32 %337, 16, !dbg !31
  %347 = add i32 %346, %.decomposed, !dbg !32
  %348 = add i32 %347, %344, !dbg !33
  %349 = add i32 %347, %345, !dbg !33
  %350 = sext i32 %348 to i64, !dbg !34
  %351 = getelementptr float, ptr addrspace(1) %2, i64 %350, !dbg !34
  %352 = sext i32 %349 to i64, !dbg !34
  %353 = getelementptr float, ptr addrspace(1) %2, i64 %352, !dbg !34
  %354 = shl i32 %8, 4, !dbg !35
  %355 = and i32 %354, 1008, !dbg !35
  %356 = or disjoint i32 %355, %.lobit, !dbg !35
  %357 = and i32 %15, 508, !dbg !35
  %358 = getelementptr float, ptr addrspace(3) @global_smem, i32 %355, !dbg !35
  %359 = getelementptr float, ptr addrspace(3) %358, i32 %356, !dbg !35
  %360 = bitcast float %s.1.i to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %359, <1 x i32> %360, i1 true) #4, !dbg !35
  %361 = or disjoint i32 %356, 4, !dbg !35
  %362 = or disjoint i32 %355, 4, !dbg !35
  %363 = getelementptr float, ptr addrspace(3) @global_smem, i32 %362, !dbg !35
  %364 = getelementptr float, ptr addrspace(3) %363, i32 %361, !dbg !35
  %365 = bitcast float %s.1.i22 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %364, <1 x i32> %365, i1 true) #4, !dbg !35
  %366 = or disjoint i32 %356, 8, !dbg !35
  %367 = or disjoint i32 %355, 8, !dbg !35
  %368 = getelementptr float, ptr addrspace(3) @global_smem, i32 %367, !dbg !35
  %369 = getelementptr float, ptr addrspace(3) %368, i32 %366, !dbg !35
  %370 = bitcast float %s.1.i41 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %369, <1 x i32> %370, i1 true) #4, !dbg !35
  %371 = or disjoint i32 %356, 12, !dbg !35
  %372 = or disjoint i32 %355, 12, !dbg !35
  %373 = getelementptr float, ptr addrspace(3) @global_smem, i32 %372, !dbg !35
  %374 = getelementptr float, ptr addrspace(3) %373, i32 %371, !dbg !35
  %375 = bitcast float %s.1.i60 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %374, <1 x i32> %375, i1 true) #4, !dbg !35
  %376 = or disjoint i32 %356, 2, !dbg !35
  %377 = getelementptr float, ptr addrspace(3) %358, i32 %376, !dbg !35
  %378 = bitcast float %s.1.i79 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %377, <1 x i32> %378, i1 true) #4, !dbg !35
  %379 = or disjoint i32 %356, 6, !dbg !35
  %380 = getelementptr float, ptr addrspace(3) %363, i32 %379, !dbg !35
  %381 = bitcast float %s.1.i98 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %380, <1 x i32> %381, i1 true) #4, !dbg !35
  %382 = or disjoint i32 %356, 10, !dbg !35
  %383 = getelementptr float, ptr addrspace(3) %368, i32 %382, !dbg !35
  %384 = bitcast float %s.1.i117 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %383, <1 x i32> %384, i1 true) #4, !dbg !35
  %385 = or disjoint i32 %356, 14, !dbg !35
  %386 = getelementptr float, ptr addrspace(3) %373, i32 %385, !dbg !35
  %387 = bitcast float %s.1.i136 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %386, <1 x i32> %387, i1 true) #4, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %.idx = shl nuw nsw i32 %357, 3, !dbg !35
  %388 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !35
  %389 = shl nuw nsw i32 %357, 1, !dbg !35
  %390 = or disjoint i32 %389, 1024, !dbg !35
  %391 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %390, !dbg !35
  %392 = load <4 x i32>, ptr addrspace(3) %391, align 16, !dbg !35
  %.extract = load i32, ptr addrspace(3) %388, align 16, !dbg !35
  %393 = getelementptr inbounds i8, ptr addrspace(3) %388, i32 4, !dbg !35
  %.extract9 = load i32, ptr addrspace(3) %393, align 4, !dbg !35
  %394 = getelementptr inbounds i8, ptr addrspace(3) %388, i32 8, !dbg !35
  %.extract10 = load i32, ptr addrspace(3) %394, align 8, !dbg !35
  %395 = getelementptr inbounds i8, ptr addrspace(3) %388, i32 12, !dbg !35
  %.extract11 = load i32, ptr addrspace(3) %395, align 4, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract9, i32 %.extract10, i32 %.extract11, ptr addrspace(1) %351, i1 %343) #4, !dbg !35
  %.extract12 = extractelement <4 x i32> %392, i64 0, !dbg !35
  %.extract13 = extractelement <4 x i32> %392, i64 1, !dbg !35
  %.extract14 = extractelement <4 x i32> %392, i64 2, !dbg !35
  %.extract15 = extractelement <4 x i32> %392, i64 3, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract12, i32 %.extract13, i32 %.extract14, i32 %.extract15, ptr addrspace(1) %353, i1 %342) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py", directory: "inductor_cache/jm")
!4 = !{ptr @triton_poi_fused_add_tanh_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_tanh_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_tanh_11", linkageName: "triton_poi_fused_add_tanh_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 44, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 35, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 31, column: 19, scope: !7)
!29 = !DILocation(line: 30, column: 19, scope: !7)
!30 = !DILocation(line: 36, column: 34, scope: !7)
!31 = !DILocation(line: 36, column: 45, scope: !7)
!32 = !DILocation(line: 36, column: 30, scope: !7)
!33 = !DILocation(line: 36, column: 39, scope: !7)
!34 = !DILocation(line: 36, column: 25, scope: !7)
!35 = !DILocation(line: 36, column: 56, scope: !7)
!36 = !DILocation(line: 36, column: 4, scope: !7)
