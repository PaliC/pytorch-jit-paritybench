//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_tanh_11 // -- Begin function triton_poi_fused_add_tanh_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_tanh_11
.visible .entry triton_poi_fused_add_tanh_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_11_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_11_param_2,
	.param .u32 triton_poi_fused_add_tanh_11_param_3,
	.param .u32 triton_poi_fused_add_tanh_11_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<111>;
	.reg .f32 	%f<246>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_add_tanh_11_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_add_tanh_11_param_1];
$L__tmp0:
	.loc	1 22 28                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:22:28
	// begin inline asm
	mov.u32 %r6, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:22:33
	shl.b32 	%r1, %r6, 2;
	.loc	1 23 44                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 6, 1;
	.loc	1 23 23                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:23:23
	or.b32  	%r24, %r1, %r3;
	.loc	1 25 28                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:25:28
	// begin inline asm
	mov.u32 %r7, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:25:33
	shl.b32 	%r4, %r7, 8;
	.loc	1 26 44                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:26:44
	shl.b32 	%r5, %r2, 2;
	and.b32  	%r25, %r5, 252;
	.loc	1 26 23                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:26:23
	or.b32  	%r26, %r4, %r25;
	.loc	1 27 21                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:27:21
	setp.lt.s32 	%p1, %r26, 256;
	.loc	1 23 23                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:23:23
	shl.b32 	%r27, %r24, 8;
	.loc	1 32 35                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:32:35
	add.s32 	%r28, %r26, %r27;
	add.s32 	%r29, %r28, 512;
	.loc	1 32 30                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:32:30
	mul.wide.s32 	%rd8, %r28, 4;
	add.s64 	%rd2, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r29, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 32 44                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:32:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r8;
	mov.b32 	%f42, %r9;
	mov.b32 	%f43, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:33:30
	add.s64 	%rd4, %rd7, %rd8;
	add.s64 	%rd5, %rd7, %rd9;
	.loc	1 33 44                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:33:44
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r16;
	mov.b32 	%f50, %r17;
	mov.b32 	%f51, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:34:18
	add.f32 	%f1, %f41, %f49;
	add.f32 	%f2, %f42, %f50;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f9, %f1;
	setp.ltu.f32 	%p5, %f9, 0f3F19999A;
	mov.f32 	%f201, 0f3F800000;
	mov.f32 	%f202, 0fC0000000;
	mov.f32 	%f233, 0fBD563CAE;
	mov.f32 	%f234, 0f3C80F082;
	mov.f32 	%f235, 0f3E085941;
	mov.f32 	%f236, 0fBEAAA9ED;
	mov.f32 	%f237, 0f00000000;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f65, %f1, %f1;
	fma.rn.ftz.f32 	%f68, %f234, %f65, %f233;
	fma.rn.ftz.f32 	%f70, %f68, %f65, %f235;
	fma.rn.ftz.f32 	%f72, %f70, %f65, %f236;
	fma.rn.ftz.f32 	%f74, %f72, %f65, %f237;
	fma.rn.ftz.f32 	%f238, %f74, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f59, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f60, %f59;
	add.f32 	%f58, %f60, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f57,%f58;
	// end inline asm
	fma.rn.ftz.f32 	%f63, %f57, %f202, %f201;
	setp.ge.f32 	%p6, %f9, 0f41102CB4;
	selp.f32 	%f64, 0f3F800000, %f63, %p6;
	mov.b32 	%r30, %f64;
	mov.b32 	%r31, %f1;
	and.b32  	%r32, %r31, -2147483648;
	or.b32  	%r33, %r32, %r30;
	mov.b32 	%f238, %r33;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	mov.b32 	%f44, %r11;
	mov.b32 	%f52, %r19;
	add.f32 	%f3, %f43, %f51;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f13, %f2;
	setp.ltu.f32 	%p7, %f13, 0f3F19999A;
	@%p7 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i23
	mul.f32 	%f83, %f2, %f2;
	fma.rn.ftz.f32 	%f86, %f234, %f83, %f233;
	fma.rn.ftz.f32 	%f88, %f86, %f83, %f235;
	fma.rn.ftz.f32 	%f90, %f88, %f83, %f236;
	fma.rn.ftz.f32 	%f92, %f90, %f83, %f237;
	fma.rn.ftz.f32 	%f239, %f92, %f2, %f2;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i18
	mul.f32 	%f77, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f78, %f77;
	add.f32 	%f76, %f78, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f75,%f76;
	// end inline asm
	fma.rn.ftz.f32 	%f81, %f75, %f202, %f201;
	setp.ge.f32 	%p8, %f13, 0f41102CB4;
	selp.f32 	%f82, 0f3F800000, %f81, %p8;
	mov.b32 	%r34, %f82;
	mov.b32 	%r35, %f2;
	and.b32  	%r36, %r35, -2147483648;
	or.b32  	%r37, %r36, %r34;
	mov.b32 	%f239, %r37;
$L__BB0_6:                              // %__nv_tanhf.exit34
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	mov.b32 	%f45, %r12;
	mov.b32 	%f53, %r20;
	add.f32 	%f4, %f44, %f52;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f17, %f3;
	setp.ltu.f32 	%p9, %f17, 0f3F19999A;
	@%p9 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i42
	mul.f32 	%f101, %f3, %f3;
	fma.rn.ftz.f32 	%f104, %f234, %f101, %f233;
	fma.rn.ftz.f32 	%f106, %f104, %f101, %f235;
	fma.rn.ftz.f32 	%f108, %f106, %f101, %f236;
	fma.rn.ftz.f32 	%f110, %f108, %f101, %f237;
	fma.rn.ftz.f32 	%f240, %f110, %f3, %f3;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i37
	mul.f32 	%f95, %f17, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f96, %f95;
	add.f32 	%f94, %f96, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f93,%f94;
	// end inline asm
	fma.rn.ftz.f32 	%f99, %f93, %f202, %f201;
	setp.ge.f32 	%p10, %f17, 0f41102CB4;
	selp.f32 	%f100, 0f3F800000, %f99, %p10;
	mov.b32 	%r38, %f100;
	mov.b32 	%r39, %f3;
	and.b32  	%r40, %r39, -2147483648;
	or.b32  	%r41, %r40, %r38;
	mov.b32 	%f240, %r41;
$L__BB0_9:                              // %__nv_tanhf.exit53
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	mov.b32 	%f46, %r13;
	mov.b32 	%f54, %r21;
	add.f32 	%f5, %f45, %f53;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f21, %f4;
	setp.ltu.f32 	%p11, %f21, 0f3F19999A;
	@%p11 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i61
	mul.f32 	%f119, %f4, %f4;
	fma.rn.ftz.f32 	%f122, %f234, %f119, %f233;
	fma.rn.ftz.f32 	%f124, %f122, %f119, %f235;
	fma.rn.ftz.f32 	%f126, %f124, %f119, %f236;
	fma.rn.ftz.f32 	%f128, %f126, %f119, %f237;
	fma.rn.ftz.f32 	%f241, %f128, %f4, %f4;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i56
	mul.f32 	%f113, %f21, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f114, %f113;
	add.f32 	%f112, %f114, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f111,%f112;
	// end inline asm
	fma.rn.ftz.f32 	%f117, %f111, %f202, %f201;
	setp.ge.f32 	%p12, %f21, 0f41102CB4;
	selp.f32 	%f118, 0f3F800000, %f117, %p12;
	mov.b32 	%r42, %f118;
	mov.b32 	%r43, %f4;
	and.b32  	%r44, %r43, -2147483648;
	or.b32  	%r45, %r44, %r42;
	mov.b32 	%f241, %r45;
$L__BB0_12:                             // %__nv_tanhf.exit72
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	mov.b32 	%f47, %r14;
	mov.b32 	%f55, %r22;
	add.f32 	%f6, %f46, %f54;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f25, %f5;
	setp.ltu.f32 	%p13, %f25, 0f3F19999A;
	@%p13 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_13;
$L__BB0_14:                             // %__internal_fmad.exit3.i80
	mul.f32 	%f137, %f5, %f5;
	fma.rn.ftz.f32 	%f140, %f234, %f137, %f233;
	fma.rn.ftz.f32 	%f142, %f140, %f137, %f235;
	fma.rn.ftz.f32 	%f144, %f142, %f137, %f236;
	fma.rn.ftz.f32 	%f146, %f144, %f137, %f237;
	fma.rn.ftz.f32 	%f242, %f146, %f5, %f5;
	bra.uni 	$L__BB0_15;
$L__BB0_13:                             // %__internal_fmad.exit1.i75
	mul.f32 	%f131, %f25, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f132, %f131;
	add.f32 	%f130, %f132, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f129,%f130;
	// end inline asm
	fma.rn.ftz.f32 	%f135, %f129, %f202, %f201;
	setp.ge.f32 	%p14, %f25, 0f41102CB4;
	selp.f32 	%f136, 0f3F800000, %f135, %p14;
	mov.b32 	%r46, %f136;
	mov.b32 	%r47, %f5;
	and.b32  	%r48, %r47, -2147483648;
	or.b32  	%r49, %r48, %r46;
	mov.b32 	%f242, %r49;
$L__BB0_15:                             // %__nv_tanhf.exit91
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	mov.b32 	%f48, %r15;
	mov.b32 	%f56, %r23;
	add.f32 	%f7, %f47, %f55;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f29, %f6;
	setp.ltu.f32 	%p15, %f29, 0f3F19999A;
	@%p15 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;
$L__BB0_17:                             // %__internal_fmad.exit3.i99
	mul.f32 	%f155, %f6, %f6;
	fma.rn.ftz.f32 	%f158, %f234, %f155, %f233;
	fma.rn.ftz.f32 	%f160, %f158, %f155, %f235;
	fma.rn.ftz.f32 	%f162, %f160, %f155, %f236;
	fma.rn.ftz.f32 	%f164, %f162, %f155, %f237;
	fma.rn.ftz.f32 	%f243, %f164, %f6, %f6;
	bra.uni 	$L__BB0_18;
$L__BB0_16:                             // %__internal_fmad.exit1.i94
	mul.f32 	%f149, %f29, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f150, %f149;
	add.f32 	%f148, %f150, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f147,%f148;
	// end inline asm
	fma.rn.ftz.f32 	%f153, %f147, %f202, %f201;
	setp.ge.f32 	%p16, %f29, 0f41102CB4;
	selp.f32 	%f154, 0f3F800000, %f153, %p16;
	mov.b32 	%r50, %f154;
	mov.b32 	%r51, %f6;
	and.b32  	%r52, %r51, -2147483648;
	or.b32  	%r53, %r52, %r50;
	mov.b32 	%f243, %r53;
$L__BB0_18:                             // %__nv_tanhf.exit110
	.loc	1 0 0                           // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:0
	add.f32 	%f8, %f48, %f56;
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f33, %f7;
	setp.ltu.f32 	%p17, %f33, 0f3F19999A;
	@%p17 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;
$L__BB0_20:                             // %__internal_fmad.exit3.i118
	mul.f32 	%f173, %f7, %f7;
	fma.rn.ftz.f32 	%f176, %f234, %f173, %f233;
	fma.rn.ftz.f32 	%f178, %f176, %f173, %f235;
	fma.rn.ftz.f32 	%f180, %f178, %f173, %f236;
	fma.rn.ftz.f32 	%f182, %f180, %f173, %f237;
	fma.rn.ftz.f32 	%f244, %f182, %f7, %f7;
	bra.uni 	$L__BB0_21;
$L__BB0_19:                             // %__internal_fmad.exit1.i113
	mul.f32 	%f167, %f33, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f168, %f167;
	add.f32 	%f166, %f168, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f165,%f166;
	// end inline asm
	fma.rn.ftz.f32 	%f171, %f165, %f202, %f201;
	setp.ge.f32 	%p18, %f33, 0f41102CB4;
	selp.f32 	%f172, 0f3F800000, %f171, %p18;
	mov.b32 	%r54, %f172;
	mov.b32 	%r55, %f7;
	and.b32  	%r56, %r55, -2147483648;
	or.b32  	%r57, %r56, %r54;
	mov.b32 	%f244, %r57;
$L__BB0_21:                             // %__nv_tanhf.exit129
	.loc	1 0 26                          // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:0:26
	ld.param.u64 	%rd1, [triton_poi_fused_add_tanh_11_param_2];
	.loc	1 35 26                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:35:26
	abs.ftz.f32 	%f37, %f8;
	setp.ltu.f32 	%p19, %f37, 0f3F19999A;
	@%p19 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;
$L__BB0_23:                             // %__internal_fmad.exit3.i137
	mul.f32 	%f191, %f8, %f8;
	fma.rn.ftz.f32 	%f194, %f234, %f191, %f233;
	fma.rn.ftz.f32 	%f196, %f194, %f191, %f235;
	fma.rn.ftz.f32 	%f198, %f196, %f191, %f236;
	fma.rn.ftz.f32 	%f200, %f198, %f191, %f237;
	fma.rn.ftz.f32 	%f245, %f200, %f8, %f8;
	bra.uni 	$L__BB0_24;
$L__BB0_22:                             // %__internal_fmad.exit1.i132
	mul.f32 	%f185, %f37, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f186, %f185;
	add.f32 	%f184, %f186, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f183,%f184;
	// end inline asm
	fma.rn.ftz.f32 	%f189, %f183, %f202, %f201;
	setp.ge.f32 	%p20, %f37, 0f41102CB4;
	selp.f32 	%f190, 0f3F800000, %f189, %p20;
	mov.b32 	%r58, %f190;
	mov.b32 	%r59, %f8;
	and.b32  	%r60, %r59, -2147483648;
	or.b32  	%r61, %r60, %r58;
	mov.b32 	%f245, %r61;
$L__BB0_24:                             // %__nv_tanhf.exit148
	.loc	1 31 19                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:31:19
	shr.s32 	%r86, %r1, 31;
	shr.u32 	%r87, %r86, 24;
	add.s32 	%r88, %r1, %r87;
	.loc	1 30 19                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:30:19
	and.b32  	%r89, %r88, -256;
	sub.s32 	%r90, %r1, %r89;
	.loc	1 26 44                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:26:44
	and.b32  	%r91, %r2, 127;
	.loc	1 26 23                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:26:23
	or.b32  	%r92, %r91, %r4;
	or.b32  	%r93, %r92, 128;
	.loc	1 27 21                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:27:21
	setp.lt.s32 	%p30, %r93, 256;
	setp.lt.s32 	%p29, %r92, 256;
	.loc	1 36 34                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:34
	shl.b32 	%r94, %r92, 8;
	shl.b32 	%r95, %r93, 8;
	.loc	1 36 45                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:45
	shl.b32 	%r96, %r88, 8;
	and.b32  	%r97, %r96, -65536;
	.loc	1 36 30                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:30
	add.s32 	%r98, %r97, %r90;
	.loc	1 36 39                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:39
	add.s32 	%r99, %r98, %r94;
	add.s32 	%r100, %r98, %r95;
	.loc	1 36 25                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:25
	mul.wide.s32 	%rd12, %r99, 4;
	add.s64 	%rd10, %rd1, %rd12;
	mul.wide.s32 	%rd13, %r100, 4;
	add.s64 	%rd11, %rd1, %rd13;
	.loc	1 36 56                         // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:56
	shl.b32 	%r101, %r2, 4;
	and.b32  	%r102, %r101, 1008;
	or.b32  	%r103, %r102, %r3;
	and.b32  	%r104, %r5, 508;
	shl.b32 	%r105, %r102, 2;
	mov.u32 	%r106, global_smem;
	add.s32 	%r107, %r106, %r105;
	shl.b32 	%r108, %r103, 2;
	add.s32 	%r62, %r107, %r108;
	mov.b32 	%r63, %f238;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r62, 32;
	mov.b32 	%r65, %f239;
	// begin inline asm
	@%p21 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r62, 64;
	mov.b32 	%r67, %f240;
	// begin inline asm
	@%p21 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r62, 96;
	mov.b32 	%r69, %f241;
	// begin inline asm
	@%p21 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r62, 8;
	mov.b32 	%r71, %f242;
	// begin inline asm
	@%p21 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r62, 40;
	mov.b32 	%r73, %f243;
	// begin inline asm
	@%p21 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r62, 72;
	mov.b32 	%r75, %f244;
	// begin inline asm
	@%p21 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r62, 104;
	mov.b32 	%r77, %f245;
	// begin inline asm
	@%p21 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r109, %r104, 3;
	add.s32 	%r110, %r106, %r109;
	ld.shared.v4.u32 	{%r82, %r83, %r84, %r85}, [%r110+4096];
	ld.shared.v4.u32 	{%r78, %r79, %r80, %r81}, [%r110];
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd10 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd11 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	.loc	1 36 4                          // cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jm/cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 109
.b8 111
.b8 104
.b8 99
.b8 98
.b8 104
.b8 51
.b8 112
.b8 109
.b8 110
.b8 118
.b8 110
.b8 105
.b8 101
.b8 117
.b8 122
.b8 119
.b8 112
.b8 118
.b8 102
.b8 120
.b8 111
.b8 98
.b8 101
.b8 106
.b8 108
.b8 98
.b8 111
.b8 100
.b8 117
.b8 99
.b8 109
.b8 119
.b8 99
.b8 120
.b8 50
.b8 105
.b8 104
.b8 104
.b8 104
.b8 101
.b8 107
.b8 53
.b8 102
.b8 102
.b8 111
.b8 100
.b8 100
.b8 103
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
