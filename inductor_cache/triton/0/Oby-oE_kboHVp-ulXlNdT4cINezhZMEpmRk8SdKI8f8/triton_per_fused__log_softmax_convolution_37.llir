; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__log_softmax_convolution_37(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = and i32 %8, 31, !dbg !11
  %10 = icmp samesign ult i32 %9, 21, !dbg !12
  %11 = mul i32 %7, 21, !dbg !13
  %12 = add i32 %11, %9, !dbg !14
  %13 = sext i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %10, i32 0, i1 %10) #2, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = zext nneg i32 %9 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %10, i32 0, i1 %10) #2, !dbg !18
  %20 = bitcast i32 %19 to float, !dbg !18
  %21 = fadd float %16, %20, !dbg !19
  %22 = select i1 %10, float %21, float 0xFFF0000000000000, !dbg !20
  %23 = bitcast float %22 to i32, !dbg !21
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 16, i32 31), !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = fcmp ogt float %22, %25, !dbg !25
  %27 = fcmp uno float %22, 0.000000e+00, !dbg !27
  %28 = or i1 %26, %27, !dbg !28
  %29 = select i1 %28, float %22, float %25, !dbg !29
  %30 = bitcast float %29 to i32, !dbg !21
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 8, i32 31), !dbg !21
  %32 = bitcast i32 %31 to float, !dbg !21
  %33 = fcmp ogt float %29, %32, !dbg !25
  %34 = fcmp uno float %29, 0.000000e+00, !dbg !27
  %35 = or i1 %33, %34, !dbg !28
  %36 = select i1 %35, float %29, float %32, !dbg !29
  %37 = bitcast float %36 to i32, !dbg !21
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 4, i32 31), !dbg !21
  %39 = bitcast i32 %38 to float, !dbg !21
  %40 = fcmp ogt float %36, %39, !dbg !25
  %41 = fcmp uno float %36, 0.000000e+00, !dbg !27
  %42 = or i1 %40, %41, !dbg !28
  %43 = select i1 %42, float %36, float %39, !dbg !29
  %44 = bitcast float %43 to i32, !dbg !21
  %45 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %44, i32 2, i32 31), !dbg !21
  %46 = bitcast i32 %45 to float, !dbg !21
  %47 = fcmp ogt float %43, %46, !dbg !25
  %48 = fcmp uno float %43, 0.000000e+00, !dbg !27
  %49 = or i1 %47, %48, !dbg !28
  %50 = select i1 %49, float %43, float %46, !dbg !29
  %51 = bitcast float %50 to i32, !dbg !21
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 1, i32 31), !dbg !21
  %53 = bitcast i32 %52 to float, !dbg !21
  %54 = fcmp ogt float %50, %53, !dbg !25
  %55 = fcmp uno float %50, 0.000000e+00, !dbg !27
  %56 = or i1 %54, %55, !dbg !28
  %57 = select i1 %56, float %50, float %53, !dbg !29
  %58 = fsub float %21, %57, !dbg !30
  %59 = fmul float %58, 0x3FF7154760000000, !dbg !31
  %60 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %59) #2, !dbg !31
  %61 = select i1 %10, float %60, float 0.000000e+00, !dbg !32
  %62 = bitcast float %61 to i32, !dbg !33
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 16, i32 31), !dbg !33
  %64 = bitcast i32 %63 to float, !dbg !33
  %65 = fadd float %61, %64, !dbg !37
  %66 = bitcast float %65 to i32, !dbg !33
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 8, i32 31), !dbg !33
  %68 = bitcast i32 %67 to float, !dbg !33
  %69 = fadd float %65, %68, !dbg !37
  %70 = bitcast float %69 to i32, !dbg !33
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 4, i32 31), !dbg !33
  %72 = bitcast i32 %71 to float, !dbg !33
  %73 = fadd float %69, %72, !dbg !37
  %74 = bitcast float %73 to i32, !dbg !33
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 2, i32 31), !dbg !33
  %76 = bitcast i32 %75 to float, !dbg !33
  %77 = fadd float %73, %76, !dbg !37
  %78 = bitcast float %77 to i32, !dbg !33
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 1, i32 31), !dbg !33
  %80 = bitcast i32 %79 to float, !dbg !33
  %81 = fadd float %77, %80, !dbg !37
  %82 = sext i32 %7 to i64, !dbg !39
  %83 = getelementptr float, ptr addrspace(1) %2, i64 %82, !dbg !39
  %84 = and i32 %8, 63, !dbg !40
  %85 = icmp eq i32 %84, 0, !dbg !40
  %86 = bitcast float %57 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %83, i1 %85) #2, !dbg !40
  %87 = getelementptr float, ptr addrspace(1) %3, i64 %82, !dbg !41
  %88 = bitcast float %81 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %87, i1 %85) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py", directory: "inductor_cache/3u")
!4 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_convolution_37, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_convolution_37", linkageName: "triton_per_fused__log_softmax_convolution_37", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 26, column: 34, scope: !7)
!12 = !DILocation(line: 28, column: 21, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 35, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 35, column: 33, scope: !7)
!21 = !DILocation(line: 131, column: 29, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 36, column: 37, scope: !7)
!25 = !DILocation(line: 118, column: 15, scope: !26, inlinedAt: !24)
!26 = distinct !DILexicalBlockFile(scope: !22, file: !23, discriminator: 0)
!27 = !DILocation(line: 120, column: 21, scope: !26, inlinedAt: !24)
!28 = !DILocation(line: 120, column: 16, scope: !26, inlinedAt: !24)
!29 = !DILocation(line: 121, column: 29, scope: !26, inlinedAt: !24)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 38, column: 23, scope: !7)
!32 = !DILocation(line: 40, column: 34, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!36 = !DILocation(line: 41, column: 26, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !36)
!38 = distinct !DILexicalBlockFile(scope: !34, file: !35, discriminator: 0)
!39 = !DILocation(line: 42, column: 25, scope: !7)
!40 = !DILocation(line: 42, column: 36, scope: !7)
!41 = !DILocation(line: 43, column: 25, scope: !7)
!42 = !DILocation(line: 43, column: 37, scope: !7)
!43 = !DILocation(line: 43, column: 4, scope: !7)
