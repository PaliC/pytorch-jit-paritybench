//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_12 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_12
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b32 	%r<198>;
	.reg .f32 	%f<55>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:22:33
	shl.b32 	%r59, %r1, 8;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_3];
	.loc	1 23 44                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:44
	mov.u32 	%r60, %tid.x;
	shl.b32 	%r61, %r60, 2;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_4];
	and.b32  	%r62, %r61, 252;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_relu_12_param_5];
	shl.b32 	%r63, %r60, 1;
	and.b32  	%r64, %r63, 254;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r65, %r59, %r62;
	or.b32  	%r66, %r59, %r64;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p25, %r65, 256;
	setp.lt.s32 	%p5, %r66, 256;
	.loc	1 25 28                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:25:33
	shl.b32 	%r67, %r2, 2;
	.loc	1 26 44                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:26:44
	bfe.u32 	%r68, %r60, 6, 1;
	.loc	1 26 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:26:23
	or.b32  	%r69, %r67, %r68;
	or.b32  	%r70, %r69, 2;
	.loc	1 27 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:27:21
	setp.lt.s32 	%p26, %r69, 289;
	setp.lt.s32 	%p27, %r70, 289;
	.loc	1 30 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:30:19
	shr.s32 	%r72, %r65, 31;
	shr.u32 	%r73, %r72, 26;
	add.s32 	%r74, %r65, %r73;
	shr.s32 	%r75, %r74, 6;
	.loc	1 29 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:29:19
	and.b32  	%r76, %r74, -64;
	sub.s32 	%r77, %r65, %r76;
	bfe.s32 	%r78, %r1, 23, 1;
	.loc	1 30 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:30:19
	shr.u32 	%r79, %r78, 26;
	.loc	1 29 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:29:19
	add.s32 	%r80, %r66, %r79;
	and.b32  	%r81, %r80, -64;
	sub.s32 	%r82, %r66, %r81;
	.loc	1 31 38                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:38
	shl.b32 	%r83, %r69, 6;
	shl.b32 	%r84, %r70, 6;
	.loc	1 31 35                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:35
	mad.lo.s32 	%r85, %r75, 18496, %r77;
	.loc	1 31 43                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:43
	add.s32 	%r86, %r85, %r83;
	add.s32 	%r87, %r85, %r84;
	.loc	1 31 30                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:30
	mul.wide.s32 	%rd21, %r86, 4;
	add.s64 	%rd1, %rd15, %rd21;
	mul.wide.s32 	%rd22, %r87, 4;
	add.s64 	%rd2, %rd15, %rd22;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p1, %p25, %p26;
	and.pred  	%p2, %p27, %p25;
	.loc	1 31 54                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:54
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd2 + 0 ];
	// end inline asm
	shr.u32 	%r88, %r60, 2;
	and.b32  	%r89, %r88, 16;
	mov.u32 	%r90, global_smem;
	add.s32 	%r91, %r90, %r89;
	shl.b32 	%r92, %r60, 4;
	and.b32  	%r93, %r92, 2032;
	add.s32 	%r11, %r91, %r93;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r11 + 0 ], { %r12, %r13, %r14, %r15 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r94, %r64, 2;
	add.s32 	%r95, %r90, %r94;
	ld.shared.v2.f32 	{%f1, %f2}, [%r95];
	ld.shared.v2.f32 	{%f3, %f4}, [%r95+1040];
	bar.sync 	0;
	// begin inline asm
	@%p3 st.shared.v4.b32 [ %r11 + 0 ], { %r17, %r18, %r19, %r20 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f5, %f6}, [%r95];
	ld.shared.v2.f32 	{%f7, %f8}, [%r95+1040];
	.loc	1 32 30                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:32:30
	mul.wide.s32 	%rd23, %r82, 4;
	add.s64 	%rd3, %rd16, %rd23;
	.loc	1 32 35                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:32:35
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r21, %r22 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:33:30
	add.s64 	%rd4, %rd17, %rd23;
	.loc	1 33 35                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:33:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r23, %r24 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r23;
	mov.b32 	%f10, %r24;
	.loc	1 34 31                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:34:31
	add.s64 	%rd5, %rd18, %rd23;
	.loc	1 34 36                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:34:36
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r25, %r26 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:35:31
	add.s64 	%rd6, %rd19, %rd23;
	.loc	1 35 36                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:35:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r27, %r28 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 18                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:38:18
	add.f32 	%f11, %f9, 0f3727C5AC;
	add.f32 	%f12, %f10, 0f3727C5AC;
	.loc	1 39 26                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:39:26
	sqrt.approx.ftz.f32 	%f13, %f11;
	sqrt.approx.ftz.f32 	%f14, %f12;
	.loc	1 26 44                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:26:44
	and.b32  	%r96, %r60, 3;
	.loc	1 26 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:26:23
	or.b32  	%r97, %r67, %r96;
	.loc	1 27 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:27:21
	setp.lt.s32 	%p28, %r97, 289;
	.loc	1 23 44                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:44
	bfe.u32 	%r98, %r60, 2, 5;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r99, %r98, %r59;
	or.b32  	%r100, %r99, 224;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p29, %r100, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p24, %p29, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r101, %r99, 192;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p30, %r101, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p23, %p30, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r102, %r99, 160;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p31, %r102, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p22, %p31, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r103, %r99, 128;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p32, %r103, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p21, %p32, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r104, %r99, 96;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p33, %r104, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p20, %p33, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r105, %r99, 64;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p34, %r105, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p19, %p34, %p28;
	.loc	1 23 23                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:23:23
	or.b32  	%r106, %r99, 32;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p35, %r106, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p18, %p35, %p28;
	.loc	1 24 21                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:24:21
	setp.lt.s32 	%p36, %r99, 256;
	.loc	1 31 62                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:31:62
	and.pred  	%p17, %p36, %p28;
	.loc	1 30 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:30:19
	shr.s32 	%r108, %r100, 31;
	shr.u32 	%r109, %r108, 26;
	add.s32 	%r110, %r100, %r109;
	shr.s32 	%r111, %r110, 6;
	add.s32 	%r112, %r101, %r79;
	shr.s32 	%r113, %r112, 6;
	shr.s32 	%r115, %r102, 31;
	shr.u32 	%r116, %r115, 26;
	add.s32 	%r117, %r102, %r116;
	shr.s32 	%r118, %r117, 6;
	add.s32 	%r119, %r103, %r79;
	shr.s32 	%r120, %r119, 6;
	shr.s32 	%r122, %r104, 31;
	shr.u32 	%r123, %r122, 26;
	add.s32 	%r124, %r104, %r123;
	shr.s32 	%r125, %r124, 6;
	add.s32 	%r126, %r105, %r79;
	shr.s32 	%r127, %r126, 6;
	shr.s32 	%r129, %r106, 31;
	shr.u32 	%r130, %r129, 26;
	add.s32 	%r131, %r106, %r130;
	shr.s32 	%r132, %r131, 6;
	shr.s32 	%r134, %r99, 31;
	shr.u32 	%r135, %r134, 26;
	add.s32 	%r136, %r99, %r135;
	shr.s32 	%r137, %r136, 6;
	.loc	1 29 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:29:19
	and.b32  	%r138, %r110, -64;
	sub.s32 	%r139, %r100, %r138;
	and.b32  	%r140, %r136, -64;
	sub.s32 	%r141, %r99, %r140;
	and.b32  	%r142, %r117, -64;
	sub.s32 	%r143, %r102, %r142;
	and.b32  	%r144, %r124, -64;
	sub.s32 	%r145, %r104, %r144;
	and.b32  	%r146, %r131, -64;
	sub.s32 	%r147, %r106, %r146;
	.loc	1 41 18                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:41:18
	mov.b32 	%r31, %f13;
	mov.b32 	%r30, 1065353216;
	// begin inline asm
	div.full.f32 %r29, %r30, %r31;
	// end inline asm
	mov.b32 	%f15, %r29;
	mov.b32 	%r34, %f14;
	// begin inline asm
	div.full.f32 %r32, %r30, %r34;
	// end inline asm
	mov.b32 	%f16, %r32;
	.loc	1 32 35                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:32:35
	mov.b32 	%f17, %r22;
	mov.b32 	%f18, %r21;
	.loc	1 36 18                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:36:18
	sub.f32 	%f19, %f1, %f18;
	sub.f32 	%f20, %f2, %f17;
	sub.f32 	%f21, %f3, %f18;
	sub.f32 	%f22, %f4, %f17;
	sub.f32 	%f23, %f5, %f18;
	sub.f32 	%f24, %f6, %f17;
	sub.f32 	%f25, %f7, %f18;
	sub.f32 	%f26, %f8, %f17;
	.loc	1 35 36                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:35:36
	mov.b32 	%f27, %r28;
	mov.b32 	%f28, %r27;
	.loc	1 34 36                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:34:36
	mov.b32 	%f29, %r26;
	mov.b32 	%f30, %r25;
	.loc	1 44 19                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:44:19
	mul.f32 	%f31, %f26, %f16;
	mul.f32 	%f32, %f25, %f15;
	mul.f32 	%f33, %f24, %f16;
	mul.f32 	%f34, %f23, %f15;
	mul.f32 	%f35, %f22, %f16;
	mul.f32 	%f36, %f21, %f15;
	mul.f32 	%f37, %f20, %f16;
	mul.f32 	%f38, %f19, %f15;
	.loc	1 46 20                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:46:20
	fma.rn.f32 	%f39, %f38, %f30, %f28;
	fma.rn.f32 	%f40, %f37, %f29, %f27;
	fma.rn.f32 	%f41, %f36, %f30, %f28;
	fma.rn.f32 	%f42, %f35, %f29, %f27;
	fma.rn.f32 	%f43, %f34, %f30, %f28;
	fma.rn.f32 	%f44, %f33, %f29, %f27;
	fma.rn.f32 	%f45, %f32, %f30, %f28;
	fma.rn.f32 	%f46, %f31, %f29, %f27;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p37, %f46, 0f00000000;
	setp.lt.f32 	%p38, %f45, 0f00000000;
	setp.lt.f32 	%p39, %f44, 0f00000000;
	setp.lt.f32 	%p40, %f43, 0f00000000;
	setp.lt.f32 	%p41, %f42, 0f00000000;
	setp.lt.f32 	%p42, %f41, 0f00000000;
	setp.lt.f32 	%p43, %f40, 0f00000000;
	setp.lt.f32 	%p44, %f39, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f47, 0f00000000, %f39, %p44;
	selp.f32 	%f48, 0f00000000, %f40, %p43;
	selp.f32 	%f49, 0f00000000, %f41, %p42;
	selp.f32 	%f50, 0f00000000, %f42, %p41;
	selp.f32 	%f51, 0f00000000, %f43, %p40;
	selp.f32 	%f52, 0f00000000, %f44, %p39;
	selp.f32 	%f53, 0f00000000, %f45, %p38;
	selp.f32 	%f54, 0f00000000, %f46, %p37;
$L__tmp2:
	.loc	1 49 30                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:49:30
	mad.lo.s32 	%r148, %r141, 289, %r97;
	mad.lo.s32 	%r149, %r147, 289, %r97;
	mad.lo.s32 	%r150, %r145, 289, %r97;
	mad.lo.s32 	%r151, %r143, 289, %r97;
	mad.lo.s32 	%r152, %r139, 289, %r97;
	.loc	1 49 39                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:49:39
	mad.lo.s32 	%r153, %r137, 110976, %r148;
	mad.lo.s32 	%r154, %r132, 110976, %r149;
	mad.lo.s32 	%r155, %r127, 110976, %r148;
	mad.lo.s32 	%r156, %r125, 110976, %r150;
	mad.lo.s32 	%r157, %r120, 110976, %r148;
	mad.lo.s32 	%r158, %r118, 110976, %r151;
	mad.lo.s32 	%r159, %r113, 110976, %r148;
	mad.lo.s32 	%r160, %r111, 110976, %r152;
	.loc	1 49 25                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:49:25
	mul.wide.s32 	%rd24, %r153, 4;
	add.s64 	%rd7, %rd20, %rd24;
	mul.wide.s32 	%rd25, %r154, 4;
	add.s64 	%rd8, %rd20, %rd25;
	mul.wide.s32 	%rd26, %r155, 4;
	add.s64 	%rd9, %rd20, %rd26;
	mul.wide.s32 	%rd27, %r156, 4;
	add.s64 	%rd10, %rd20, %rd27;
	mul.wide.s32 	%rd28, %r157, 4;
	add.s64 	%rd11, %rd20, %rd28;
	mul.wide.s32 	%rd29, %r158, 4;
	add.s64 	%rd12, %rd20, %rd29;
	mul.wide.s32 	%rd30, %r159, 4;
	add.s64 	%rd13, %rd20, %rd30;
	mul.wide.s32 	%rd31, %r160, 4;
	add.s64 	%rd14, %rd20, %rd31;
	.loc	1 49 58                         // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:49:58
	bar.sync 	0;
	shl.b32 	%r161, %r60, 3;
	and.b32  	%r162, %r161, 1016;
	and.b32  	%r163, %r60, 127;
	add.s32 	%r164, %r90, %r162;
	shl.b32 	%r165, %r162, 2;
	add.s32 	%r35, %r164, %r165;
	mov.b32 	%r36, %f47;
	// begin inline asm
	@%p3 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r35, 20;
	mov.b32 	%r38, %f48;
	// begin inline asm
	@%p3 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r35, 4;
	mov.b32 	%r40, %f49;
	// begin inline asm
	@%p3 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r35, 24;
	mov.b32 	%r42, %f50;
	// begin inline asm
	@%p3 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 8;
	mov.b32 	%r44, %f51;
	// begin inline asm
	@%p3 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r35, 28;
	mov.b32 	%r46, %f52;
	// begin inline asm
	@%p3 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r35, 12;
	mov.b32 	%r48, %f53;
	// begin inline asm
	@%p3 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r35, 32;
	mov.b32 	%r50, %f54;
	// begin inline asm
	@%p3 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r166, %r60, 124;
	add.s32 	%r167, %r90, %r166;
	shl.b32 	%r168, %r163, 2;
	add.s32 	%r169, %r167, %r168;
	ld.shared.u32 	%r51, [%r169];
	or.b32  	%r170, %r163, 128;
	and.b32  	%r171, %r170, 252;
	add.s32 	%r172, %r90, %r171;
	add.s32 	%r173, %r172, %r168;
	ld.shared.u32 	%r52, [%r173+512];
	or.b32  	%r174, %r163, 256;
	and.b32  	%r175, %r174, 380;
	add.s32 	%r176, %r90, %r175;
	add.s32 	%r177, %r176, %r168;
	ld.shared.u32 	%r53, [%r177+1024];
	or.b32  	%r178, %r163, 384;
	and.b32  	%r179, %r178, 508;
	add.s32 	%r180, %r90, %r179;
	add.s32 	%r181, %r180, %r168;
	ld.shared.u32 	%r54, [%r181+1536];
	or.b32  	%r182, %r163, 512;
	and.b32  	%r183, %r182, 636;
	add.s32 	%r184, %r90, %r183;
	add.s32 	%r185, %r184, %r168;
	ld.shared.u32 	%r55, [%r185+2048];
	or.b32  	%r186, %r163, 640;
	and.b32  	%r187, %r186, 764;
	add.s32 	%r188, %r90, %r187;
	add.s32 	%r189, %r188, %r168;
	ld.shared.u32 	%r56, [%r189+2560];
	or.b32  	%r190, %r163, 768;
	and.b32  	%r191, %r190, 892;
	add.s32 	%r192, %r90, %r191;
	add.s32 	%r193, %r192, %r168;
	ld.shared.u32 	%r57, [%r193+3072];
	or.b32  	%r194, %r163, 896;
	and.b32  	%r195, %r194, 1020;
	add.s32 	%r196, %r90, %r195;
	add.s32 	%r197, %r196, %r168;
	ld.shared.u32 	%r58, [%r197+3584];
	// begin inline asm
	@%p17 st.global.b32 [ %rd7 + 0 ], { %r51 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.b32 [ %rd8 + 0 ], { %r52 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.b32 [ %rd9 + 0 ], { %r53 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.b32 [ %rd10 + 0 ], { %r54 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.b32 [ %rd11 + 0 ], { %r55 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.b32 [ %rd12 + 0 ], { %r56 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd13 + 0 ], { %r57 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.b32 [ %rd14 + 0 ], { %r58 };
	// end inline asm
	.loc	1 49 4                          // cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yv/cyvvxjqypy5rye6lgizmzepubvl2ov5mocgdwc3su7vr7r42stux.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 118
.b8 118
.b8 120
.b8 106
.b8 113
.b8 121
.b8 112
.b8 121
.b8 53
.b8 114
.b8 121
.b8 101
.b8 54
.b8 108
.b8 103
.b8 105
.b8 122
.b8 109
.b8 122
.b8 101
.b8 112
.b8 117
.b8 98
.b8 118
.b8 108
.b8 50
.b8 111
.b8 118
.b8 53
.b8 109
.b8 111
.b8 99
.b8 103
.b8 100
.b8 119
.b8 99
.b8 51
.b8 115
.b8 117
.b8 55
.b8 118
.b8 114
.b8 55
.b8 114
.b8 52
.b8 50
.b8 115
.b8 116
.b8 117
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
