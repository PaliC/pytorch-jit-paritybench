//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_11
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<28>;
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0];
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1];
$L__tmp0:
	.loc	1 23 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:25:21
	setp.lt.s32 	%p1, %r1, 2048;
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2];
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3];
	.loc	1 26 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:26:34
	mov.u32 	%r39, %tid.x;
	and.b32  	%r40, %r39, 31;
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4];
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5];
	and.b32  	%r41, %r39, 63;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6];
	.loc	1 30 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:30:19
	shr.s32 	%r42, %r1, 31;
	shr.u32 	%r43, %r42, 23;
	add.s32 	%r44, %r1, %r43;
	and.b32  	%r45, %r44, -512;
	sub.s32 	%r46, %r1, %r45;
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7];
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8];
	.loc	1 32 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:34
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd1, %rd15, %rd24;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9];
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:30
	mul.wide.s32 	%rd26, %r46, 4;
	add.s64 	%rd3, %rd17, %rd26;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 42                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:42
	shl.b32 	%r47, %r1, 6;
	.loc	1 34 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:39
	or.b32  	%r48, %r47, %r41;
	.loc	1 34 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:34
	mul.wide.s32 	%rd27, %r48, 4;
	add.s64 	%rd5, %rd16, %rd27;
	mov.b32 	%r7, 0;
	.loc	1 34 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r6, %r7;
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 35 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:30
	add.s64 	%rd6, %rd18, %rd26;
	.loc	1 35 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 36 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:31
	add.s64 	%rd7, %rd19, %rd27;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r9, %r7;
	// end inline asm
	.loc	1 37 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:31
	add.s64 	%rd8, %rd20, %rd24;
	.loc	1 37 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:31
	add.s64 	%rd9, %rd21, %rd24;
	.loc	1 38 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f7, %f3, %f4;
	.loc	1 40 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:40:18
	add.f32 	%f8, %f5, %f6;
	.loc	1 44 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:44:34
	selp.f32 	%f9, %f8, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f9;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	mov.b32 	%f10, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f11;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f12, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f13;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f14, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f15;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f16, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f17;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f18, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p12, %r40, 0;
	shr.u32 	%r59, %r39, 3;
	and.b32  	%r60, %r59, 4;
	mov.u32 	%r61, global_smem;
	add.s32 	%r13, %r61, %r60;
	mov.b32 	%r14, %f19;
	// begin inline asm
	@%p12 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r39, 2;
	shl.b32 	%r62, %r39, 2;
	add.s32 	%r16, %r61, %r62;
	// begin inline asm
	@%p13 ld.shared.b32 %r15, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r15;
	shfl.sync.bfly.b32	%r63, %r15, 1, 31, -1;
	mov.b32 	%f21, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r64, %r39, 1;
	setp.eq.b32 	%p23, %r64, 1;
	not.pred 	%p24, %p23;
	and.pred  	%p14, %p13, %p24;
	mov.b32 	%r18, %f22;
	// begin inline asm
	@%p14 st.shared.b32 [ %r16 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 48 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:48:20
	ld.shared.u32 	%r20, [global_smem];
	mov.b32 	%r21, 1115684864;
	// begin inline asm
	div.full.f32 %r38, %r20, %r21;
	// end inline asm
	mov.b32 	%f23, %r38;
	.loc	1 49 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:49:19
	sub.f32 	%f24, %f8, %f23;
	.loc	1 50 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:50:20
	mul.f32 	%f25, %f24, %f24;
	.loc	1 52 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:52:35
	selp.f32 	%f26, %f25, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r65, %f26;
	shfl.sync.bfly.b32	%r66, %r65, 16, 31, -1;
	mov.b32 	%f27, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f28;
	shfl.sync.bfly.b32	%r68, %r67, 8, 31, -1;
	mov.b32 	%f29, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f30;
	shfl.sync.bfly.b32	%r70, %r69, 4, 31, -1;
	mov.b32 	%f31, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f32;
	shfl.sync.bfly.b32	%r72, %r71, 2, 31, -1;
	mov.b32 	%f33, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f34;
	shfl.sync.bfly.b32	%r74, %r73, 1, 31, -1;
	mov.b32 	%f35, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r23, %f36;
	// begin inline asm
	@%p12 st.shared.b32 [ %r13 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p13 ld.shared.b32 %r24, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r24;
	shfl.sync.bfly.b32	%r75, %r24, 1, 31, -1;
	mov.b32 	%f38, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r27, %f39;
	// begin inline asm
	@%p14 st.shared.b32 [ %r16 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	mov.f32 	%f40, 0f00000000;
$L__tmp4:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f41, %f40, %f7;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f42, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r30, %f42;
	mov.b32 	%r29, 1065353216;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f43, %r28;
$L__tmp5:
	.loc	1 60 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:60:20
	ld.shared.u32 	%r32, [global_smem];
	// begin inline asm
	div.full.f32 %r31, %r32, %r21;
	// end inline asm
	mov.b32 	%f44, %r31;
	.loc	1 62 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:62:20
	add.f32 	%f45, %f44, 0f3727C5AC;
	.loc	1 63 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:63:28
	rsqrt.approx.ftz.f32 	%f46, %f45;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	mov.b32 	%f47, %r9;
	.loc	1 37 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:36
	mov.b32 	%f48, %r11;
	.loc	1 54 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:54:20
	sub.f32 	%f49, %f47, %f48;
	.loc	1 38 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:36
	mov.b32 	%f50, %r12;
	.loc	1 55 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:55:20
	mul.f32 	%f51, %f49, %f50;
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	mov.b32 	%f52, %r3;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	mov.b32 	%f53, %r5;
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f54, %f52, %f53;
	.loc	1 64 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:64:20
	mul.f32 	%f55, %f24, %f46;
	.loc	1 65 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:65:20
	fma.rn.f32 	%f56, %f51, %f43, %f55;
$L__tmp6:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p25, %f56, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f57, 0f00000000, %f56, %p25;
$L__tmp7:
	.loc	1 68 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:68:4
	bar.sync 	0;
	.loc	1 69 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:69:39
	setp.eq.s32 	%p26, %r41, 0;
	mov.b32 	%r34, %f54;
	and.pred  	%p18, %p26, %p1;
	// begin inline asm
	@%p18 st.global.b32 [ %rd1 + 0 ], { %r34 };
	// end inline asm
	.loc	1 70 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:70:47
	mov.b32 	%r35, %f8;
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r35 };
	// end inline asm
	.loc	1 71 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:25
	add.s64 	%rd12, %rd23, %rd27;
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	mov.b32 	%r36, %f57;
	// begin inline asm
	@%p1 st.global.b32 [ %rd12 + 0 ], { %r36 };
	// end inline asm
	.loc	1 72 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:25
	add.s64 	%rd13, %rd25, %rd24;
	.loc	1 72 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:37
	mov.b32 	%r37, %f46;
	// begin inline asm
	@%p18 st.global.b32 [ %rd13 + 0 ], { %r37 };
	// end inline asm
	.loc	1 73 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:25
	add.s64 	%rd14, %rd22, %rd24;
	.loc	1 73 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:37
	// begin inline asm
	@%p18 st.global.b32 [ %rd14 + 0 ], { %r38 };
	// end inline asm
	.loc	1 73 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:4
	ret;
$L__tmp8:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 294                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 52
.b8 100
.b8 51
.b8 103
.b8 101
.b8 114
.b8 104
.b8 104
.b8 51
.b8 101
.b8 120
.b8 112
.b8 101
.b8 106
.b8 103
.b8 101
.b8 120
.b8 110
.b8 114
.b8 119
.b8 50
.b8 51
.b8 97
.b8 50
.b8 51
.b8 101
.b8 100
.b8 119
.b8 99
.b8 108
.b8 119
.b8 99
.b8 113
.b8 52
.b8 110
.b8 117
.b8 117
.b8 101
.b8 119
.b8 50
.b8 99
.b8 121
.b8 117
.b8 54
.b8 52
.b8 54
.b8 105
.b8 105
.b8 120
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
