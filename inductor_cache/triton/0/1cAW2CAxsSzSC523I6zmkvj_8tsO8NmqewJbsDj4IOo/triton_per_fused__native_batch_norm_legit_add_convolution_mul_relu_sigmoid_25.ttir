#loc = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0)
#loc1 = loc(unknown)
#loc27 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":45:26)
#loc34 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":53:26)
#loc63 = loc(callsite(#loc1 at #loc27))
#loc66 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c2048_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %0, %c512_i32 : i32 loc(#loc6)
    %6 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.splat %6 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.load %7, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg2, %5 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.load %10, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %12 = arith.muli %0, %c64_i32 : i32 loc(#loc11)
    %13 = tt.splat %12 : i32 -> tensor<1x64xi32> loc(#loc12)
    %14 = arith.addi %4, %13 : tensor<1x64xi32> loc(#loc12)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc13)
    %17 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc14)
    %18 = tt.load %16, %17, %cst_3 : tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc15)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.addptr %22, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc17)
    %24 = tt.load %23, %17, %cst_3 : tensor<1x64x!tt.ptr<f32>> loc(#loc18)
    %25 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc19)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %27 = tt.load %26, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %28 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc21)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc21)
    %30 = tt.load %29, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc22)
    %31 = arith.addf %8, %11 : tensor<1x1xf32> loc(#loc23)
    %32 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc24)
    %33 = arith.addf %18, %32 : tensor<1x64xf32> loc(#loc24)
    %34 = arith.select %17, %33, %cst_3 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc25)
    %35 = "tt.reduce"(%34) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc27)), %arg13: f32 loc(callsite(#loc1 at #loc27))):
      %68 = arith.addf %arg12, %arg13 : f32 loc(#loc73)
      tt.reduce.return %68 : f32 loc(#loc62)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc62)
    %36 = tt.expand_dims %35 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc29)
    %37 = arith.divf %36, %cst_2 : tensor<1x1xf32> loc(#loc30)
    %38 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc31)
    %39 = arith.subf %33, %38 : tensor<1x64xf32> loc(#loc31)
    %40 = arith.mulf %39, %39 : tensor<1x64xf32> loc(#loc32)
    %41 = arith.select %17, %40, %cst_3 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc33)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc34)), %arg13: f32 loc(callsite(#loc1 at #loc34))):
      %68 = arith.addf %arg12, %arg13 : f32 loc(#loc74)
      tt.reduce.return %68 : f32 loc(#loc65)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc65)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc35)
    %44 = tt.broadcast %27 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc36)
    %45 = arith.subf %24, %44 : tensor<1x64xf32> loc(#loc36)
    %46 = tt.broadcast %30 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc37)
    %47 = arith.mulf %45, %46 : tensor<1x64xf32> loc(#loc37)
    %48 = arith.subf %cst, %31 : tensor<1x1xf32> loc(#loc67)
    %49 = math.exp %48 : tensor<1x1xf32> loc(#loc68)
    %50 = arith.addf %49, %cst_0 : tensor<1x1xf32> loc(#loc69)
    %51 = arith.divf %cst_0, %50 : tensor<1x1xf32> loc(#loc70)
    %52 = tt.broadcast %51 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc43)
    %53 = arith.mulf %47, %52 : tensor<1x64xf32> loc(#loc43)
    %54 = arith.divf %43, %cst_2 : tensor<1x1xf32> loc(#loc44)
    %55 = arith.addf %54, %cst_1 : tensor<1x1xf32> loc(#loc45)
    %56 = tt.extern_elementwise %55 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc46)
    %57 = tt.broadcast %56 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc47)
    %58 = arith.mulf %39, %57 : tensor<1x64xf32> loc(#loc47)
    %59 = arith.addf %53, %58 : tensor<1x64xf32> loc(#loc48)
    %60 = arith.cmpf ogt, %cst_3, %59 : tensor<1x64xf32> loc(#loc71)
    %61 = arith.select %60, %cst_3, %59 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc72)
    gpu.barrier loc(#loc52)
    tt.store %7, %31, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc53)
    tt.store %16, %33, %17 : tensor<1x64x!tt.ptr<f32>> loc(#loc54)
    %62 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc55)
    %63 = tt.addptr %62, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc55)
    tt.store %63, %61, %17 : tensor<1x64x!tt.ptr<f32>> loc(#loc56)
    %64 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc57)
    %65 = tt.splat %64 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc57)
    tt.store %65, %56, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc58)
    %66 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc59)
    %67 = tt.splat %66 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc59)
    tt.store %67, %37, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":23:28)
#loc3 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":25:21)
#loc4 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":26:26)
#loc5 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":26:34)
#loc6 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":30:19)
#loc7 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":32:34)
#loc8 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":32:39)
#loc9 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":33:30)
#loc10 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":33:35)
#loc11 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:42)
#loc12 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:39)
#loc13 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:34)
#loc14 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:47)
#loc15 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":35:30)
#loc16 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":35:35)
#loc17 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":36:31)
#loc18 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":36:44)
#loc19 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":37:31)
#loc20 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":37:36)
#loc21 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":38:31)
#loc22 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":38:36)
#loc23 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":39:18)
#loc24 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":40:18)
#loc25 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":44:34)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc29 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":45:29)
#loc30 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":48:20)
#loc31 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":49:19)
#loc32 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":50:20)
#loc33 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":52:35)
#loc35 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":53:29)
#loc36 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":54:20)
#loc37 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":55:20)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc39 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":56:23)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc43 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":57:20)
#loc44 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":60:20)
#loc45 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":62:20)
#loc46 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":63:28)
#loc47 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":64:20)
#loc48 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":65:20)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc50 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":67:42)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc52 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":68:4)
#loc53 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":69:39)
#loc54 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":70:47)
#loc55 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":71:25)
#loc56 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":71:45)
#loc57 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":72:25)
#loc58 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":72:37)
#loc59 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:25)
#loc60 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:37)
#loc61 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:4)
#loc62 = loc(callsite(#loc26 at #loc27))
#loc64 = loc(callsite(#loc28 at #loc26))
#loc65 = loc(callsite(#loc26 at #loc34))
#loc67 = loc(callsite(#loc38 at #loc39))
#loc68 = loc(callsite(#loc40 at #loc39))
#loc69 = loc(callsite(#loc41 at #loc39))
#loc70 = loc(callsite(#loc42 at #loc39))
#loc71 = loc(callsite(#loc49 at #loc50))
#loc72 = loc(callsite(#loc51 at #loc50))
#loc73 = loc(callsite(#loc64 at #loc27))
#loc74 = loc(callsite(#loc64 at #loc34))
