; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_div_log_mean_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %.frozen = freeze i32 %6, !dbg !13
  %9 = sdiv i32 %.frozen, 4, !dbg !13
  %10 = mul i32 %9, 4, !dbg !14
  %.decomposed = sub i32 %.frozen, %10, !dbg !14
  %11 = shl i32 %8, 2, !dbg !15
  %12 = and i32 %11, 60, !dbg !15
  %13 = add nsw i32 %.decomposed, %12, !dbg !16
  %14 = shl i32 %9, 6, !dbg !17
  %15 = add i32 %13, %14, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %7, i32 0, i1 %7) #4, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %7, i32 0, i1 %7) #4, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = fadd float %19, 0x3EE4F8B580000000, !dbg !23
  %24 = fadd float %22, 0x3EE4F8B580000000, !dbg !24
  %25 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %23, float %24) #4, !dbg !25
  %26 = fadd float %25, 0x3EE4F8B580000000, !dbg !26
  %27 = fcmp olt float %26, 0x3810000000000000, !dbg !27
  %28 = fmul float %26, 0x4160000000000000, !dbg !27
  %.02.i = select i1 %27, float %28, float %26, !dbg !27
  %i.i.0.i = select i1 %27, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %29 = bitcast float %.02.i to i32, !dbg !27
  %30 = add i32 %29, -1059760811, !dbg !27
  %31 = and i32 %30, -8388608, !dbg !27
  %32 = sub i32 %29, %31, !dbg !27
  %33 = bitcast i32 %32 to float, !dbg !27
  %34 = sitofp i32 %31 to float, !dbg !27
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %35, 0, !dbg !27
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !27
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !27
  %.08.i = select i1 %.not.i, float %37, float %36, !dbg !27
  %38 = fadd float %33, -1.000000e+00, !dbg !27
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i = icmp eq i32 %39, 0, !dbg !27
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #4, !dbg !27
  %41 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #4, !dbg !27
  %.010.i = select i1 %.not1.i, float %41, float %40, !dbg !27
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i = icmp eq i32 %42, 0, !dbg !27
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %38, float 0xBFBF19B980000000) #4, !dbg !27
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %38, float 0xBFBF19B980000000) #4, !dbg !27
  %.011.i = select i1 %.not2.i, float %44, float %43, !dbg !27
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i = icmp eq i32 %45, 0, !dbg !27
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #4, !dbg !27
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #4, !dbg !27
  %.012.i = select i1 %.not3.i, float %47, float %46, !dbg !27
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i = icmp eq i32 %48, 0, !dbg !27
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %38, float 0xBFC55B1720000000) #4, !dbg !27
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %38, float 0xBFC55B1720000000) #4, !dbg !27
  %.09.i = select i1 %.not4.i, float %50, float %49, !dbg !27
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i = icmp eq i32 %51, 0, !dbg !27
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %38, float 0x3FC99DA160000000) #4, !dbg !27
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %38, float 0x3FC99DA160000000) #4, !dbg !27
  %.05.i = select i1 %.not5.i, float %53, float %52, !dbg !27
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i = icmp eq i32 %54, 0, !dbg !27
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #4, !dbg !27
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #4, !dbg !27
  %.01.i = select i1 %.not6.i, float %56, float %55, !dbg !27
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not7.i = icmp eq i32 %57, 0, !dbg !27
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %38, float 0x3FD5554F00000000) #4, !dbg !27
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %38, float 0x3FD5554F00000000) #4, !dbg !27
  %.0.i = select i1 %.not7.i, float %59, float %58, !dbg !27
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not8.i = icmp eq i32 %60, 0, !dbg !27
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %38, float -5.000000e-01) #4, !dbg !27
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %38, float -5.000000e-01) #4, !dbg !27
  %.07.i = select i1 %.not8.i, float %62, float %61, !dbg !27
  %63 = fmul float %38, %.07.i, !dbg !27
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not9.i = icmp eq i32 %64, 0, !dbg !27
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float %38, float %38) #4, !dbg !27
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %63, float %38, float %38) #4, !dbg !27
  %.06.i = select i1 %.not9.i, float %66, float %65, !dbg !27
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not10.i = icmp eq i32 %67, 0, !dbg !27
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !27
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !27
  %.04.i = select i1 %.not10.i, float %69, float %68, !dbg !27
  %70 = icmp ugt i32 %29, 2139095039, !dbg !27
  br i1 %70, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !27

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not11.i = icmp eq i32 %71, 0, !dbg !27
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !27
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !27
  %.03.i = select i1 %.not11.i, float %73, float %72, !dbg !27
  br label %__nv_logf.exit, !dbg !27

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !27
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %24, float %23) #4, !dbg !28
  %75 = fadd float %74, 0x3EE4F8B580000000, !dbg !29
  %76 = fcmp olt float %75, 0x3810000000000000, !dbg !30
  %77 = fmul float %75, 0x4160000000000000, !dbg !30
  %.02.i1 = select i1 %76, float %77, float %75, !dbg !30
  %i.i.0.i2 = select i1 %76, float -2.300000e+01, float 0.000000e+00, !dbg !30
  %78 = bitcast float %.02.i1 to i32, !dbg !30
  %79 = add i32 %78, -1059760811, !dbg !30
  %80 = and i32 %79, -8388608, !dbg !30
  %81 = sub i32 %78, %80, !dbg !30
  %82 = bitcast i32 %81 to float, !dbg !30
  %83 = sitofp i32 %80 to float, !dbg !30
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i3 = icmp eq i32 %84, 0, !dbg !30
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !30
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %83, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !30
  %.08.i4 = select i1 %.not.i3, float %86, float %85, !dbg !30
  %87 = fadd float %82, -1.000000e+00, !dbg !30
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i5 = icmp eq i32 %88, 0, !dbg !30
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %87, float 0x3FC2073EC0000000) #4, !dbg !30
  %90 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %87, float 0x3FC2073EC0000000) #4, !dbg !30
  %.010.i6 = select i1 %.not1.i5, float %90, float %89, !dbg !30
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i7 = icmp eq i32 %91, 0, !dbg !30
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %87, float 0xBFBF19B980000000) #4, !dbg !30
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %87, float 0xBFBF19B980000000) #4, !dbg !30
  %.011.i8 = select i1 %.not2.i7, float %93, float %92, !dbg !30
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i9 = icmp eq i32 %94, 0, !dbg !30
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %87, float 0x3FC1E52AA0000000) #4, !dbg !30
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %87, float 0x3FC1E52AA0000000) #4, !dbg !30
  %.012.i10 = select i1 %.not3.i9, float %96, float %95, !dbg !30
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i11 = icmp eq i32 %97, 0, !dbg !30
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %87, float 0xBFC55B1720000000) #4, !dbg !30
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %87, float 0xBFC55B1720000000) #4, !dbg !30
  %.09.i12 = select i1 %.not4.i11, float %99, float %98, !dbg !30
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i13 = icmp eq i32 %100, 0, !dbg !30
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %87, float 0x3FC99DA160000000) #4, !dbg !30
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %87, float 0x3FC99DA160000000) #4, !dbg !30
  %.05.i14 = select i1 %.not5.i13, float %102, float %101, !dbg !30
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i15 = icmp eq i32 %103, 0, !dbg !30
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %87, float 0xBFCFFFE440000000) #4, !dbg !30
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %87, float 0xBFCFFFE440000000) #4, !dbg !30
  %.01.i16 = select i1 %.not6.i15, float %105, float %104, !dbg !30
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not7.i17 = icmp eq i32 %106, 0, !dbg !30
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %87, float 0x3FD5554F00000000) #4, !dbg !30
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %87, float 0x3FD5554F00000000) #4, !dbg !30
  %.0.i18 = select i1 %.not7.i17, float %108, float %107, !dbg !30
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not8.i19 = icmp eq i32 %109, 0, !dbg !30
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %87, float -5.000000e-01) #4, !dbg !30
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %87, float -5.000000e-01) #4, !dbg !30
  %.07.i20 = select i1 %.not8.i19, float %111, float %110, !dbg !30
  %112 = fmul float %87, %.07.i20, !dbg !30
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not9.i21 = icmp eq i32 %113, 0, !dbg !30
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float %87, float %87) #4, !dbg !30
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float %87, float %87) #4, !dbg !30
  %.06.i22 = select i1 %.not9.i21, float %115, float %114, !dbg !30
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not10.i23 = icmp eq i32 %116, 0, !dbg !30
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !30
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !30
  %.04.i24 = select i1 %.not10.i23, float %118, float %117, !dbg !30
  %119 = icmp ugt i32 %78, 2139095039, !dbg !30
  br i1 %119, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !30

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not11.i28 = icmp eq i32 %120, 0, !dbg !30
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !30
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !30
  %.03.i29 = select i1 %.not11.i28, float %122, float %121, !dbg !30
  br label %__nv_logf.exit30, !dbg !30

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !30
  %123 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !27
  %r.i.1.i = select i1 %123, float 0xFFF0000000000000, float %r.i.0.i, !dbg !27
  %124 = fmul float %r.i.1.i, %19, !dbg !31
  %125 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !30
  %r.i.1.i26 = select i1 %125, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !30
  %126 = fmul float %r.i.1.i26, %22, !dbg !32
  %127 = fadd float %124, %126, !dbg !33
  %128 = fmul float %127, 5.000000e-01, !dbg !34
  %129 = select i1 %7, float %128, float 0.000000e+00, !dbg !35
  %130 = bitcast float %129 to i32, !dbg !36
  %131 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %130, i32 8, i32 31), !dbg !36
  %132 = bitcast i32 %131 to float, !dbg !36
  %133 = fadd float %129, %132, !dbg !40
  %134 = bitcast float %133 to i32, !dbg !36
  %135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %134, i32 4, i32 31), !dbg !36
  %136 = bitcast i32 %135 to float, !dbg !36
  %137 = fadd float %133, %136, !dbg !40
  %138 = bitcast float %137 to i32, !dbg !36
  %139 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %138, i32 2, i32 31), !dbg !36
  %140 = bitcast i32 %139 to float, !dbg !36
  %141 = fadd float %137, %140, !dbg !40
  %142 = bitcast float %141 to i32, !dbg !36
  %143 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %142, i32 1, i32 31), !dbg !36
  %144 = bitcast i32 %143 to float, !dbg !36
  %145 = fadd float %141, %144, !dbg !40
  %146 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %145, float 1.600000e+01) #4, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %147 = sext i32 %6 to i64, !dbg !44
  %148 = getelementptr float, ptr addrspace(1) %0, i64 %147, !dbg !44
  %149 = and i32 %8, 63, !dbg !45
  %150 = icmp eq i32 %149, 0, !dbg !45
  %151 = bitcast float %146 to i32, !dbg !45
  %152 = and i1 %150, %7, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %151, ptr addrspace(1) %148, i1 %152) #4, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csgcexqohl6nu65uowi6wqa353zdjo5isglbebi4erso7avbce7c.py", directory: "inductor_cache/sg")
!4 = !{ptr @triton_per_fused_add_div_log_mean_mul_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_log_mean_mul_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_log_mean_mul_0", linkageName: "triton_per_fused_add_div_log_mean_mul_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 37, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 45, scope: !7)
!18 = !DILocation(line: 33, column: 42, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 50, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 50, scope: !7)
!23 = !DILocation(line: 36, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 18, scope: !7)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 18, scope: !7)
!27 = !DILocation(line: 40, column: 23, scope: !7)
!28 = !DILocation(line: 42, column: 18, scope: !7)
!29 = !DILocation(line: 43, column: 19, scope: !7)
!30 = !DILocation(line: 44, column: 24, scope: !7)
!31 = !DILocation(line: 41, column: 18, scope: !7)
!32 = !DILocation(line: 45, column: 19, scope: !7)
!33 = !DILocation(line: 46, column: 19, scope: !7)
!34 = !DILocation(line: 48, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 35, scope: !7)
!36 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!39 = !DILocation(line: 51, column: 26, scope: !7)
!40 = !DILocation(line: 256, column: 15, scope: !41, inlinedAt: !39)
!41 = distinct !DILexicalBlockFile(scope: !37, file: !38, discriminator: 0)
!42 = !DILocation(line: 53, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 4, scope: !7)
!44 = !DILocation(line: 55, column: 28, scope: !7)
!45 = !DILocation(line: 55, column: 40, scope: !7)
!46 = !DILocation(line: 55, column: 4, scope: !7)
