; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_relu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %14 = sdiv i32 %12, 16, !dbg !15
  %15 = srem i32 %14, 4, !dbg !16
  %16 = sext i32 %12 to i64, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !17
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %13) #1, !dbg !18
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !18
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !18
  %21 = bitcast i32 %19 to float, !dbg !18
  %22 = bitcast i32 %20 to float, !dbg !18
  %23 = sext i32 %15 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !19
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %13) #1, !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %13) #1, !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !21
  %30 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %29, i1 %13) #1, !dbg !22
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !22
  %32 = extractvalue { i32, i32 } %30, 1, !dbg !22
  %33 = bitcast i32 %31 to float, !dbg !22
  %34 = bitcast i32 %32 to float, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !23
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %13) #1, !dbg !24
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !24
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !24
  %39 = bitcast i32 %37 to float, !dbg !24
  %40 = bitcast i32 %38 to float, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %3, i64 %16, !dbg !25
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 %13) #1, !dbg !26
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !26
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !26
  %45 = bitcast i32 %43 to float, !dbg !26
  %46 = bitcast i32 %44 to float, !dbg !26
  %47 = fadd float %21, %26, !dbg !27
  %48 = fadd float %22, %28, !dbg !27
  %49 = fcmp olt float %47, 0.000000e+00, !dbg !28
  %50 = fcmp olt float %48, 0.000000e+00, !dbg !28
  %51 = select i1 %49, float 0.000000e+00, float %47, !dbg !32
  %52 = select i1 %50, float 0.000000e+00, float %48, !dbg !32
  %53 = fadd float %26, %33, !dbg !33
  %54 = fadd float %28, %34, !dbg !33
  %55 = fcmp olt float %53, 0.000000e+00, !dbg !34
  %56 = fcmp olt float %54, 0.000000e+00, !dbg !34
  %57 = select i1 %55, float 0.000000e+00, float %53, !dbg !36
  %58 = select i1 %56, float 0.000000e+00, float %54, !dbg !36
  %59 = fadd float %26, %39, !dbg !37
  %60 = fadd float %28, %40, !dbg !37
  %61 = fcmp olt float %59, 0.000000e+00, !dbg !38
  %62 = fcmp olt float %60, 0.000000e+00, !dbg !38
  %63 = select i1 %61, float 0.000000e+00, float %59, !dbg !40
  %64 = select i1 %62, float 0.000000e+00, float %60, !dbg !40
  %65 = fadd float %26, %45, !dbg !41
  %66 = fadd float %28, %46, !dbg !41
  %67 = fcmp olt float %65, 0.000000e+00, !dbg !42
  %68 = fcmp olt float %66, 0.000000e+00, !dbg !42
  %69 = select i1 %67, float 0.000000e+00, float %65, !dbg !44
  %70 = select i1 %68, float 0.000000e+00, float %66, !dbg !44
  %71 = bitcast float %51 to i32, !dbg !45
  %72 = bitcast float %52 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %71, i32 %72, ptr addrspace(1) %17, i1 %13) #1, !dbg !45
  %73 = bitcast float %57 to i32, !dbg !46
  %74 = bitcast float %58 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %29, i1 %13) #1, !dbg !46
  %75 = bitcast float %63 to i32, !dbg !47
  %76 = bitcast float %64 to i32, !dbg !47
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %75, i32 %76, ptr addrspace(1) %35, i1 %13) #1, !dbg !47
  %77 = bitcast float %69 to i32, !dbg !48
  %78 = bitcast float %70 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %77, i32 %78, ptr addrspace(1) %41, i1 %13) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py", directory: "inductor_cache/vi")
!4 = !{ptr @triton_poi_fused_convolution_relu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_1", linkageName: "triton_poi_fused_convolution_relu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 39, scope: !7)
!25 = !DILocation(line: 30, column: 35, scope: !7)
!26 = !DILocation(line: 30, column: 40, scope: !7)
!27 = !DILocation(line: 31, column: 18, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 33, column: 40, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 34, column: 18, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !35)
!35 = !DILocation(line: 35, column: 40, scope: !7)
!36 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !35)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !39)
!39 = !DILocation(line: 37, column: 41, scope: !7)
!40 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !39)
!41 = !DILocation(line: 38, column: 20, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !43)
!43 = !DILocation(line: 39, column: 41, scope: !7)
!44 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !43)
!45 = !DILocation(line: 40, column: 39, scope: !7)
!46 = !DILocation(line: 41, column: 39, scope: !7)
!47 = !DILocation(line: 42, column: 40, scope: !7)
!48 = !DILocation(line: 43, column: 40, scope: !7)
!49 = !DILocation(line: 43, column: 4, scope: !7)
