#loc = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0)
module {
  tt.func public @triton_poi_fused_convolution_relu_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_0 : tensor<256xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %10 = tt.load %9, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %13 = tt.load %12, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %16 = tt.load %15, %5 : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %17, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %19 = tt.load %18, %5 : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.addptr %20, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %22 = tt.load %21, %5 : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %23 = arith.addf %10, %13 : tensor<256xf32> loc(#loc19)
    %24 = arith.cmpf ogt, %cst, %23 : tensor<256xf32> loc(#loc34)
    %25 = arith.select %24, %cst, %23 : tensor<256xi1>, tensor<256xf32> loc(#loc35)
    %26 = arith.addf %16, %13 : tensor<256xf32> loc(#loc23)
    %27 = arith.cmpf ogt, %cst, %26 : tensor<256xf32> loc(#loc36)
    %28 = arith.select %27, %cst, %26 : tensor<256xi1>, tensor<256xf32> loc(#loc37)
    %29 = arith.addf %19, %13 : tensor<256xf32> loc(#loc25)
    %30 = arith.cmpf ogt, %cst, %29 : tensor<256xf32> loc(#loc38)
    %31 = arith.select %30, %cst, %29 : tensor<256xi1>, tensor<256xf32> loc(#loc39)
    %32 = arith.addf %22, %13 : tensor<256xf32> loc(#loc27)
    %33 = arith.cmpf ogt, %cst, %32 : tensor<256xf32> loc(#loc40)
    %34 = arith.select %33, %cst, %32 : tensor<256xi1>, tensor<256xf32> loc(#loc41)
    tt.store %9, %25, %5 : tensor<256x!tt.ptr<f32>> loc(#loc29)
    tt.store %15, %28, %5 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    tt.store %18, %31, %5 : tensor<256x!tt.ptr<f32>> loc(#loc31)
    tt.store %21, %34, %5 : tensor<256x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":21:28)
#loc3 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":21:33)
#loc4 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":22:36)
#loc5 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":22:23)
#loc6 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":23:21)
#loc7 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":25:21)
#loc8 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":25:27)
#loc9 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":26:34)
#loc10 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":26:39)
#loc11 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":27:30)
#loc12 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":27:35)
#loc13 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":28:34)
#loc14 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":28:39)
#loc15 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":29:34)
#loc16 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":29:39)
#loc17 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":30:35)
#loc18 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":30:40)
#loc19 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":31:18)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc21 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":33:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":34:18)
#loc24 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":35:40)
#loc25 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":36:18)
#loc26 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":37:41)
#loc27 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":38:20)
#loc28 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":39:41)
#loc29 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":40:39)
#loc30 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":41:39)
#loc31 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":42:40)
#loc32 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":43:40)
#loc33 = loc("inductor_cache/vi/cvi3ssu73q2jtrk46pcqi6saj75kjyphjhwg5bbyrwjrvtelh7cl.py":43:4)
#loc34 = loc(callsite(#loc20 at #loc21))
#loc35 = loc(callsite(#loc22 at #loc21))
#loc36 = loc(callsite(#loc20 at #loc24))
#loc37 = loc(callsite(#loc22 at #loc24))
#loc38 = loc(callsite(#loc20 at #loc26))
#loc39 = loc(callsite(#loc22 at #loc26))
#loc40 = loc(callsite(#loc20 at #loc28))
#loc41 = loc(callsite(#loc22 at #loc28))
