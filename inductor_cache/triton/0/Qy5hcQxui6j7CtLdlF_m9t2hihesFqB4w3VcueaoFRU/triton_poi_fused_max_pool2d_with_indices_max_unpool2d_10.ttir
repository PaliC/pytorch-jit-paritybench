#loc = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_max_unpool2d_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_0 = arith.constant dense<8192> : tensor<128xi64> loc(#loc1)
    %cst_1 = arith.constant dense<false> : tensor<128xi1> loc(#loc1)
    %cst_2 = arith.constant dense<true> : tensor<128xi1> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<128xi8> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<128xi8> loc(#loc1)
    %cst_8 = arith.constant dense<0> : tensor<128xi8> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<128xi8> loc(#loc1)
    %cst_10 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_11 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_13 = arith.constant dense<8> : tensor<128xi32> loc(#loc1)
    %cst_14 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_15 = arith.constant dense<2048> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_15 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_14 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_14 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_14 : tensor<128xi32> loc(#loc9)
    %9 = arith.muli %6, %cst_14 : tensor<128xi32> loc(#loc10)
    %10 = arith.muli %7, %cst_13 : tensor<128xi32> loc(#loc11)
    %11 = arith.addi %9, %10 : tensor<128xi32> loc(#loc12)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.addptr %12, %11 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.addi %9, %cst_12 : tensor<128xi32> loc(#loc15)
    %16 = arith.addi %15, %10 : tensor<128xi32> loc(#loc16)
    %17 = tt.addptr %12, %16 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.addi %9, %cst_11 : tensor<128xi32> loc(#loc19)
    %20 = arith.addi %19, %10 : tensor<128xi32> loc(#loc20)
    %21 = tt.addptr %12, %20 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc21)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc22)
    %23 = arith.addi %9, %cst_10 : tensor<128xi32> loc(#loc23)
    %24 = arith.addi %23, %10 : tensor<128xi32> loc(#loc24)
    %25 = tt.addptr %12, %24 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc25)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %27 = arith.cmpf ogt, %18, %14 : tensor<128xf32> loc(#loc27)
    %28 = arith.select %27, %cst_9, %cst_8 : tensor<128xi1>, tensor<128xi8> loc(#loc28)
    %29 = arith.cmpf une, %18, %18 : tensor<128xf32> loc(#loc71)
    %30 = arith.ori %27, %29 : tensor<128xi1> loc(#loc72)
    %31 = arith.select %30, %18, %14 : tensor<128xi1>, tensor<128xf32> loc(#loc73)
    %32 = arith.cmpf ogt, %22, %31 : tensor<128xf32> loc(#loc33)
    %33 = arith.select %32, %cst_7, %28 : tensor<128xi1>, tensor<128xi8> loc(#loc34)
    %34 = arith.cmpf une, %22, %22 : tensor<128xf32> loc(#loc74)
    %35 = arith.ori %32, %34 : tensor<128xi1> loc(#loc75)
    %36 = arith.select %35, %22, %31 : tensor<128xi1>, tensor<128xf32> loc(#loc76)
    %37 = arith.cmpf ogt, %26, %36 : tensor<128xf32> loc(#loc36)
    %38 = arith.select %37, %cst_6, %33 : tensor<128xi1>, tensor<128xi8> loc(#loc37)
    %39 = arith.extsi %38 : tensor<128xi8> to tensor<128xi32> loc(#loc38)
    %40 = arith.cmpi slt, %39, %cst_5 : tensor<128xi32> loc(#loc38)
    %41 = arith.cmpi ne, %40, %cst_1 : tensor<128xi1> loc(#loc39)
    %42 = arith.remsi %39, %cst_14 : tensor<128xi32> loc(#loc40)
    %43 = arith.cmpi ne, %42, %cst_5 : tensor<128xi32> loc(#loc41)
    %44 = arith.divsi %39, %cst_14 : tensor<128xi32> loc(#loc42)
    %45 = arith.subi %44, %cst_12 : tensor<128xi32> loc(#loc43)
    %46 = arith.select %43, %45, %44 : tensor<128xi1>, tensor<128xi32> loc(#loc44)
    %47 = arith.select %41, %46, %44 : tensor<128xi1>, tensor<128xi32> loc(#loc45)
    %48 = arith.muli %47, %cst_14 : tensor<128xi32> loc(#loc46)
    %49 = arith.subi %39, %48 : tensor<128xi32> loc(#loc47)
    %50 = arith.muli %8, %cst_14 : tensor<128xi32> loc(#loc48)
    %51 = arith.addi %50, %47 : tensor<128xi32> loc(#loc49)
    %52 = arith.addi %9, %49 : tensor<128xi32> loc(#loc50)
    %53 = arith.extsi %51 : tensor<128xi32> to tensor<128xi64> loc(#loc51)
    %54 = arith.muli %53, %cst_4 : tensor<128xi64> loc(#loc51)
    %55 = arith.extsi %52 : tensor<128xi32> to tensor<128xi64> loc(#loc52)
    %56 = arith.addi %54, %55 : tensor<128xi64> loc(#loc52)
    %57 = arith.divsi %4, %cst_11 : tensor<128xi32> loc(#loc53)
    %58 = arith.muli %57, %cst_3 : tensor<128xi32> loc(#loc54)
    %59 = arith.extsi %58 : tensor<128xi32> to tensor<128xi64> loc(#loc55)
    %60 = arith.addi %56, %59 : tensor<128xi64> loc(#loc55)
    %61 = arith.addi %60, %cst_0 : tensor<128xi64> loc(#loc56)
    %62 = arith.cmpi slt, %60, %cst : tensor<128xi64> loc(#loc57)
    %63 = arith.select %62, %61, %60 : tensor<128xi1>, tensor<128xi64> loc(#loc58)
    %64 = arith.cmpi sge, %63, %cst : tensor<128xi64> loc(#loc59)
    %65 = arith.cmpi slt, %63, %cst_0 : tensor<128xi64> loc(#loc60)
    %66 = arith.andi %64, %65 : tensor<128xi1> loc(#loc61)
    %67 = arith.xori %5, %cst_2 : tensor<128xi1> loc(#loc62)
    %68 = arith.ori %66, %67 : tensor<128xi1> loc(#loc63)
    tt.assert %68, "index out of bounds: 0 <= tmp33 < 8192" : tensor<128xi1> loc(#loc64)
    %69 = arith.cmpf une, %26, %26 : tensor<128xf32> loc(#loc77)
    %70 = arith.ori %37, %69 : tensor<128xi1> loc(#loc78)
    %71 = arith.select %70, %26, %36 : tensor<128xi1>, tensor<128xf32> loc(#loc79)
    %72 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>> loc(#loc66)
    %73 = tt.addptr %72, %4 : tensor<128x!tt.ptr<i64>>, tensor<128xi32> loc(#loc66)
    tt.store %73, %56, %5 : tensor<128x!tt.ptr<i64>> loc(#loc67)
    %74 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc68)
    %75 = tt.addptr %74, %63 : tensor<128x!tt.ptr<f32>>, tensor<128xi64> loc(#loc68)
    tt.store %75, %71, %5 : tensor<128x!tt.ptr<f32>> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":21:28)
#loc3 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":21:33)
#loc4 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":22:36)
#loc5 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":22:23)
#loc6 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":23:21)
#loc7 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":24:19)
#loc8 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":25:19)
#loc9 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":26:26)
#loc10 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":28:32)
#loc11 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":28:39)
#loc12 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":28:37)
#loc13 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":28:30)
#loc14 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":28:44)
#loc15 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":29:34)
#loc16 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":29:41)
#loc17 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":29:30)
#loc18 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":29:48)
#loc19 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":30:34)
#loc20 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":30:41)
#loc21 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":30:30)
#loc22 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":30:48)
#loc23 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":31:35)
#loc24 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":31:42)
#loc25 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":31:31)
#loc26 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":31:49)
#loc27 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":36:18)
#loc28 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":39:32)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc30 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":40:40)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":41:18)
#loc34 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":43:33)
#loc35 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":44:41)
#loc36 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":45:20)
#loc37 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":47:35)
#loc38 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:30)
#loc39 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:37)
#loc40 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:66)
#loc41 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:75)
#loc42 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:87)
#loc43 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:95)
#loc44 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:98)
#loc45 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":50:115)
#loc46 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":51:20)
#loc47 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":52:20)
#loc48 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":53:14)
#loc49 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":54:20)
#loc50 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":56:20)
#loc51 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":58:20)
#loc52 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":59:20)
#loc53 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":60:22)
#loc54 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":60:16)
#loc55 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":61:20)
#loc56 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":63:20)
#loc57 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":64:20)
#loc58 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":65:35)
#loc59 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:28)
#loc60 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:46)
#loc61 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:38)
#loc62 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:57)
#loc63 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:55)
#loc64 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":66:65)
#loc65 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":69:42)
#loc66 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":70:25)
#loc67 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":70:37)
#loc68 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":71:25)
#loc69 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":71:67)
#loc70 = loc("inductor_cache/7f/c7fct3sovowyblb472nlfzopiwpsj56tb7pkqgcb7qmhyj7ot2id.py":71:4)
#loc71 = loc(callsite(#loc29 at #loc30))
#loc72 = loc(callsite(#loc31 at #loc30))
#loc73 = loc(callsite(#loc32 at #loc30))
#loc74 = loc(callsite(#loc29 at #loc35))
#loc75 = loc(callsite(#loc31 at #loc35))
#loc76 = loc(callsite(#loc32 at #loc35))
#loc77 = loc(callsite(#loc29 at #loc65))
#loc78 = loc(callsite(#loc31 at #loc65))
#loc79 = loc(callsite(#loc32 at #loc65))
