; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 1024, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 256, !dbg !15
  %13 = mul i32 %12, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 64, !dbg !17
  %15 = sext i32 %.decomposed to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 %11) #3, !dbg !19
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !19
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !19
  %20 = bitcast i32 %18 to float, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %22 = shl nsw i32 %12, 6, !dbg !20
  %23 = add nsw i32 %22, %14, !dbg !21
  %24 = sext i32 %23 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !22
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %11) #3, !dbg !23
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !23
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !23
  %29 = bitcast i32 %27 to float, !dbg !23
  %30 = bitcast i32 %28 to float, !dbg !23
  %31 = fadd float %20, %29, !dbg !24
  %32 = fadd float %21, %30, !dbg !24
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not.i = icmp eq i32 %33, 0, !dbg !25
  %34 = tail call float @llvm.nvvm.fabs.ftz.f(float %31) #3, !dbg !25
  %35 = tail call float @llvm.nvvm.fabs.f(float %31) #3, !dbg !25
  %.01.i = select i1 %.not.i, float %35, float %34, !dbg !25
  %36 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !25
  br i1 %36, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !25

__internal_fmad.exit1.i:                          ; preds = %4
  %37 = fmul float %.01.i, 0x4007154760000000, !dbg !25
  %38 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %37) #3, !dbg !25
  %39 = fadd float %38, 1.000000e+00, !dbg !25
  %40 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %39) #4, !dbg !25, !srcloc !26
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not6.i = icmp eq i32 %41, 0, !dbg !25
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float -2.000000e+00, float 1.000000e+00) #3, !dbg !25
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %40, float -2.000000e+00, float 1.000000e+00) #3, !dbg !25
  %.03.i = select i1 %.not6.i, float %43, float %42, !dbg !25
  %44 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !25
  %s.0.i = select i1 %44, float 1.000000e+00, float %.03.i, !dbg !25
  %45 = bitcast float %s.0.i to i32, !dbg !25
  %46 = bitcast float %31 to i32, !dbg !25
  %47 = and i32 %46, -2147483648, !dbg !25
  %48 = or i32 %47, %45, !dbg !25
  br label %__nv_tanhf.exit, !dbg !25

__internal_fmad.exit3.i:                          ; preds = %4
  %49 = fmul float %31, %31, !dbg !25
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not1.i = icmp eq i32 %50, 0, !dbg !25
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %49, float 0xBFAAC795C0000000) #3, !dbg !25
  %52 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %49, float 0xBFAAC795C0000000) #3, !dbg !25
  %.06.i = select i1 %.not1.i, float %52, float %51, !dbg !25
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not2.i = icmp eq i32 %53, 0, !dbg !25
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %49, float 0x3FC10B2820000000) #3, !dbg !25
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %49, float 0x3FC10B2820000000) #3, !dbg !25
  %.05.i = select i1 %.not2.i, float %55, float %54, !dbg !25
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not3.i = icmp eq i32 %56, 0, !dbg !25
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %49, float 0xBFD5553DA0000000) #3, !dbg !25
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %49, float 0xBFD5553DA0000000) #3, !dbg !25
  %.0.i = select i1 %.not3.i, float %58, float %57, !dbg !25
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not4.i = icmp eq i32 %59, 0, !dbg !25
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %49, float 0.000000e+00) #3, !dbg !25
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %49, float 0.000000e+00) #3, !dbg !25
  %.04.i = select i1 %.not4.i, float %61, float %60, !dbg !25
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not5.i = icmp eq i32 %62, 0, !dbg !25
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %31, float %31) #3, !dbg !25
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %31, float %31) #3, !dbg !25
  %.02.i = select i1 %.not5.i, float %64, float %63, !dbg !25
  %65 = bitcast float %.02.i to i32, !dbg !27
  br label %__nv_tanhf.exit, !dbg !25

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi i32 [ %48, %__internal_fmad.exit1.i ], [ %65, %__internal_fmad.exit3.i ], !dbg !25
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not.i1 = icmp eq i32 %66, 0, !dbg !25
  %67 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #3, !dbg !25
  %68 = tail call float @llvm.nvvm.fabs.f(float %32) #3, !dbg !25
  %.01.i2 = select i1 %.not.i1, float %68, float %67, !dbg !25
  %69 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !25
  br i1 %69, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !25

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %70 = fmul float %.01.i2, 0x4007154760000000, !dbg !25
  %71 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %70) #3, !dbg !25
  %72 = fadd float %71, 1.000000e+00, !dbg !25
  %73 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %72) #4, !dbg !25, !srcloc !26
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not6.i4 = icmp eq i32 %74, 0, !dbg !25
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %73, float -2.000000e+00, float 1.000000e+00) #3, !dbg !25
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %73, float -2.000000e+00, float 1.000000e+00) #3, !dbg !25
  %.03.i5 = select i1 %.not6.i4, float %76, float %75, !dbg !25
  %77 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !25
  %s.0.i6 = select i1 %77, float 1.000000e+00, float %.03.i5, !dbg !25
  %78 = bitcast float %s.0.i6 to i32, !dbg !25
  %79 = bitcast float %32 to i32, !dbg !25
  %80 = and i32 %79, -2147483648, !dbg !25
  %81 = or i32 %80, %78, !dbg !25
  br label %__nv_tanhf.exit19, !dbg !25

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %82 = fmul float %32, %32, !dbg !25
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not1.i9 = icmp eq i32 %83, 0, !dbg !25
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %82, float 0xBFAAC795C0000000) #3, !dbg !25
  %85 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %82, float 0xBFAAC795C0000000) #3, !dbg !25
  %.06.i10 = select i1 %.not1.i9, float %85, float %84, !dbg !25
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not2.i11 = icmp eq i32 %86, 0, !dbg !25
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %82, float 0x3FC10B2820000000) #3, !dbg !25
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %82, float 0x3FC10B2820000000) #3, !dbg !25
  %.05.i12 = select i1 %.not2.i11, float %88, float %87, !dbg !25
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not3.i13 = icmp eq i32 %89, 0, !dbg !25
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %82, float 0xBFD5553DA0000000) #3, !dbg !25
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %82, float 0xBFD5553DA0000000) #3, !dbg !25
  %.0.i14 = select i1 %.not3.i13, float %91, float %90, !dbg !25
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not4.i15 = icmp eq i32 %92, 0, !dbg !25
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %82, float 0.000000e+00) #3, !dbg !25
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %82, float 0.000000e+00) #3, !dbg !25
  %.04.i16 = select i1 %.not4.i15, float %94, float %93, !dbg !25
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !25
  %.not5.i17 = icmp eq i32 %95, 0, !dbg !25
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %32, float %32) #3, !dbg !25
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %32, float %32) #3, !dbg !25
  %.02.i18 = select i1 %.not5.i17, float %97, float %96, !dbg !25
  %98 = bitcast float %.02.i18 to i32, !dbg !27
  br label %__nv_tanhf.exit19, !dbg !25

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi i32 [ %81, %__internal_fmad.exit1.i3 ], [ %98, %__internal_fmad.exit3.i8 ], !dbg !25
  %99 = sext i32 %10 to i64, !dbg !28
  %100 = getelementptr float, ptr addrspace(1) %2, i64 %99, !dbg !28
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %s.1.i, i32 %s.1.i7, ptr addrspace(1) %100, i1 %11) #3, !dbg !27
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgenbc4jg6hkp7sqkp2mqu6lpveb23rcxgqx2zzhwxxlrrkgqckh.py", directory: "inductor_cache/ge")
!4 = !{ptr @triton_poi_fused_add_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_tanh_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_tanh_0", linkageName: "triton_poi_fused_add_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 38, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 43, scope: !7)
!24 = !DILocation(line: 30, column: 18, scope: !7)
!25 = !DILocation(line: 31, column: 26, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 32, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 25, scope: !7)
!29 = !DILocation(line: 32, column: 4, scope: !7)
