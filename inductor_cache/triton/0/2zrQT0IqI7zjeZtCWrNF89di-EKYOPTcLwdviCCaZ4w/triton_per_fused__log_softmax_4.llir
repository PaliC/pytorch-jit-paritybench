; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 3, !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 16, !dbg !13
  %11 = icmp slt i32 %9, 25, !dbg !14
  %12 = icmp slt i32 %10, 25, !dbg !14
  %13 = shl i32 %6, 1, !dbg !15
  %14 = and i32 %13, 14, !dbg !15
  %15 = icmp samesign ult i32 %14, 10, !dbg !16
  %16 = mul i32 %9, 10, !dbg !17
  %17 = mul i32 %10, 10, !dbg !17
  %18 = add i32 %16, %14, !dbg !18
  %19 = add i32 %17, %14, !dbg !18
  %20 = sext i32 %18 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = sext i32 %19 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = and i1 %15, %11, !dbg !20
  %25 = and i1 %15, %12, !dbg !20
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %21, i1 %24, i32 0, i1 %24, i32 0, i1 %24) #3, !dbg !21
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !21
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !21
  %29 = bitcast i32 %27 to float, !dbg !21
  %30 = bitcast i32 %28 to float, !dbg !21
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %23, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #3, !dbg !21
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !21
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !21
  %34 = bitcast i32 %32 to float, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = select i1 %24, float %29, float 0xFFF0000000000000, !dbg !22
  %37 = select i1 %24, float %30, float 0xFFF0000000000000, !dbg !22
  %38 = select i1 %25, float %34, float 0xFFF0000000000000, !dbg !22
  %39 = select i1 %25, float %35, float 0xFFF0000000000000, !dbg !22
  %40 = fcmp ogt float %36, %37, !dbg !23
  %41 = fcmp uno float %36, 0.000000e+00, !dbg !28
  %42 = or i1 %40, %41, !dbg !29
  %43 = select i1 %42, float %36, float %37, !dbg !30
  %44 = fcmp ogt float %38, %39, !dbg !23
  %45 = fcmp uno float %38, 0.000000e+00, !dbg !28
  %46 = or i1 %44, %45, !dbg !29
  %47 = select i1 %46, float %38, float %39, !dbg !30
  %48 = bitcast float %43 to i32, !dbg !31
  %49 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %48, i32 4, i32 31), !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = fcmp ogt float %43, %50, !dbg !23
  %52 = fcmp uno float %43, 0.000000e+00, !dbg !28
  %53 = or i1 %51, %52, !dbg !29
  %54 = select i1 %53, float %43, float %50, !dbg !30
  %55 = bitcast float %54 to i32, !dbg !31
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 2, i32 31), !dbg !31
  %57 = bitcast i32 %56 to float, !dbg !31
  %58 = fcmp ogt float %54, %57, !dbg !23
  %59 = fcmp uno float %54, 0.000000e+00, !dbg !28
  %60 = or i1 %58, %59, !dbg !29
  %61 = select i1 %60, float %54, float %57, !dbg !30
  %62 = bitcast float %61 to i32, !dbg !31
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 1, i32 31), !dbg !31
  %64 = bitcast i32 %63 to float, !dbg !31
  %65 = fcmp ogt float %61, %64, !dbg !23
  %66 = fcmp uno float %61, 0.000000e+00, !dbg !28
  %67 = or i1 %65, %66, !dbg !29
  %68 = select i1 %67, float %61, float %64, !dbg !30
  %69 = bitcast float %47 to i32, !dbg !31
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 4, i32 31), !dbg !31
  %71 = bitcast i32 %70 to float, !dbg !31
  %72 = fcmp ogt float %47, %71, !dbg !23
  %73 = fcmp uno float %47, 0.000000e+00, !dbg !28
  %74 = or i1 %72, %73, !dbg !29
  %75 = select i1 %74, float %47, float %71, !dbg !30
  %76 = bitcast float %75 to i32, !dbg !31
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 2, i32 31), !dbg !31
  %78 = bitcast i32 %77 to float, !dbg !31
  %79 = fcmp ogt float %75, %78, !dbg !23
  %80 = fcmp uno float %75, 0.000000e+00, !dbg !28
  %81 = or i1 %79, %80, !dbg !29
  %82 = select i1 %81, float %75, float %78, !dbg !30
  %83 = bitcast float %82 to i32, !dbg !31
  %84 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %83, i32 1, i32 31), !dbg !31
  %85 = bitcast i32 %84 to float, !dbg !31
  %86 = fcmp ogt float %82, %85, !dbg !23
  %87 = fcmp uno float %82, 0.000000e+00, !dbg !28
  %88 = or i1 %86, %87, !dbg !29
  %89 = select i1 %88, float %82, float %85, !dbg !30
  %90 = fsub float %29, %68, !dbg !32
  %91 = fsub float %30, %68, !dbg !32
  %92 = fsub float %34, %89, !dbg !32
  %93 = fsub float %35, %89, !dbg !32
  %94 = fmul float %90, 0x3FF7154760000000, !dbg !33
  %95 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %94) #3, !dbg !33
  %96 = fmul float %91, 0x3FF7154760000000, !dbg !33
  %97 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %96) #3, !dbg !33
  %98 = fmul float %92, 0x3FF7154760000000, !dbg !33
  %99 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %98) #3, !dbg !33
  %100 = fmul float %93, 0x3FF7154760000000, !dbg !33
  %101 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %100) #3, !dbg !33
  %102 = fadd float %95, %97, !dbg !34
  %103 = select i1 %24, float %102, float 0.000000e+00, !dbg !34
  %104 = fadd float %99, %101, !dbg !34
  %105 = select i1 %25, float %104, float 0.000000e+00, !dbg !34
  %106 = bitcast float %103 to i32, !dbg !39
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 4, i32 31), !dbg !39
  %108 = bitcast i32 %107 to float, !dbg !39
  %109 = fadd float %103, %108, !dbg !34
  %110 = bitcast float %109 to i32, !dbg !39
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 2, i32 31), !dbg !39
  %112 = bitcast i32 %111 to float, !dbg !39
  %113 = fadd float %109, %112, !dbg !34
  %114 = bitcast float %113 to i32, !dbg !39
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 1, i32 31), !dbg !39
  %116 = bitcast i32 %115 to float, !dbg !39
  %117 = fadd float %113, %116, !dbg !34
  %118 = bitcast float %105 to i32, !dbg !39
  %119 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %118, i32 4, i32 31), !dbg !39
  %120 = bitcast i32 %119 to float, !dbg !39
  %121 = fadd float %105, %120, !dbg !34
  %122 = bitcast float %121 to i32, !dbg !39
  %123 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 2, i32 31), !dbg !39
  %124 = bitcast i32 %123 to float, !dbg !39
  %125 = fadd float %121, %124, !dbg !34
  %126 = bitcast float %125 to i32, !dbg !39
  %127 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %126, i32 1, i32 31), !dbg !39
  %128 = bitcast i32 %127 to float, !dbg !39
  %129 = fadd float %125, %128, !dbg !34
  %130 = fcmp olt float %117, 0x3810000000000000, !dbg !40
  %131 = fmul float %117, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %130, float %131, float %117, !dbg !40
  %i.i.0.i = select i1 %130, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %132 = bitcast float %.02.i to i32, !dbg !40
  %133 = add i32 %132, -1059760811, !dbg !40
  %134 = and i32 %133, -8388608, !dbg !40
  %135 = sub i32 %132, %134, !dbg !40
  %136 = bitcast i32 %135 to float, !dbg !40
  %137 = sitofp i32 %134 to float, !dbg !40
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %137, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %137, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %141 = fadd float %136, -1.000000e+00, !dbg !40
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %141, float 0x3FC2073EC0000000) #3, !dbg !40
  %144 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %141, float 0x3FC2073EC0000000) #3, !dbg !40
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %154 = icmp ugt i32 %132, 2139095039, !dbg !40
  br i1 %154, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i3 = icmp eq i32 %156, 0, !dbg !40
  %.08.i4 = select i1 %.not.i3, float %140, float %139, !dbg !40
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i5 = icmp eq i32 %157, 0, !dbg !40
  %.010.i6 = select i1 %.not1.i5, float %144, float %143, !dbg !40
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i7 = icmp eq i32 %158, 0, !dbg !40
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %141, float 0xBFBF19B980000000) #3, !dbg !40
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %141, float 0xBFBF19B980000000) #3, !dbg !40
  %.011.i8 = select i1 %.not2.i7, float %160, float %159, !dbg !40
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i9 = icmp eq i32 %161, 0, !dbg !40
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %141, float 0x3FC1E52AA0000000) #3, !dbg !40
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %141, float 0x3FC1E52AA0000000) #3, !dbg !40
  %.012.i10 = select i1 %.not3.i9, float %163, float %162, !dbg !40
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i11 = icmp eq i32 %164, 0, !dbg !40
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %141, float 0xBFC55B1720000000) #3, !dbg !40
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %141, float 0xBFC55B1720000000) #3, !dbg !40
  %.09.i12 = select i1 %.not4.i11, float %166, float %165, !dbg !40
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i13 = icmp eq i32 %167, 0, !dbg !40
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %141, float 0x3FC99DA160000000) #3, !dbg !40
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %141, float 0x3FC99DA160000000) #3, !dbg !40
  %.05.i14 = select i1 %.not5.i13, float %169, float %168, !dbg !40
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i15 = icmp eq i32 %170, 0, !dbg !40
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %141, float 0xBFCFFFE440000000) #3, !dbg !40
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %141, float 0xBFCFFFE440000000) #3, !dbg !40
  %.01.i16 = select i1 %.not6.i15, float %172, float %171, !dbg !40
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not7.i17 = icmp eq i32 %173, 0, !dbg !40
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %141, float 0x3FD5554F00000000) #3, !dbg !40
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %141, float 0x3FD5554F00000000) #3, !dbg !40
  %.0.i18 = select i1 %.not7.i17, float %175, float %174, !dbg !40
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not8.i19 = icmp eq i32 %176, 0, !dbg !40
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %141, float -5.000000e-01) #3, !dbg !40
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %141, float -5.000000e-01) #3, !dbg !40
  %.07.i20 = select i1 %.not8.i19, float %178, float %177, !dbg !40
  %179 = fmul float %141, %.07.i20, !dbg !40
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not9.i21 = icmp eq i32 %180, 0, !dbg !40
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float %141, float %141) #3, !dbg !40
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %179, float %141, float %141) #3, !dbg !40
  %.06.i22 = select i1 %.not9.i21, float %182, float %181, !dbg !40
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not10.i23 = icmp eq i32 %183, 0, !dbg !40
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !40
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !40
  %.04.i24 = select i1 %.not10.i23, float %185, float %184, !dbg !40
  br i1 %154, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !40

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not11.i28 = icmp eq i32 %186, 0, !dbg !40
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %.03.i29 = select i1 %.not11.i28, float %188, float %187, !dbg !40
  br label %__nv_logf.exit30, !dbg !40

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !40
  %189 = fcmp olt float %129, 0x3810000000000000, !dbg !40
  %190 = fmul float %129, 0x4160000000000000, !dbg !40
  %.02.i31 = select i1 %189, float %190, float %129, !dbg !40
  %i.i.0.i32 = select i1 %189, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %191 = bitcast float %.02.i31 to i32, !dbg !40
  %192 = add i32 %191, -1059760811, !dbg !40
  %193 = and i32 %192, -8388608, !dbg !40
  %194 = sub i32 %191, %193, !dbg !40
  %195 = bitcast i32 %194 to float, !dbg !40
  %196 = sitofp i32 %193 to float, !dbg !40
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %196, float 0x3E80000000000000, float %i.i.0.i32) #3, !dbg !40
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %196, float 0x3E80000000000000, float %i.i.0.i32) #3, !dbg !40
  %200 = fadd float %195, -1.000000e+00, !dbg !40
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %200, float 0x3FC2073EC0000000) #3, !dbg !40
  %203 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %200, float 0x3FC2073EC0000000) #3, !dbg !40
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %213 = icmp ugt i32 %191, 2139095039, !dbg !40
  br i1 %213, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !40

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  br label %__nv_logf.exit60, !dbg !40

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i63 = icmp eq i32 %215, 0, !dbg !40
  %.08.i64 = select i1 %.not.i63, float %199, float %198, !dbg !40
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i65 = icmp eq i32 %216, 0, !dbg !40
  %.010.i66 = select i1 %.not1.i65, float %203, float %202, !dbg !40
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i67 = icmp eq i32 %217, 0, !dbg !40
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %200, float 0xBFBF19B980000000) #3, !dbg !40
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %200, float 0xBFBF19B980000000) #3, !dbg !40
  %.011.i68 = select i1 %.not2.i67, float %219, float %218, !dbg !40
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i69 = icmp eq i32 %220, 0, !dbg !40
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %200, float 0x3FC1E52AA0000000) #3, !dbg !40
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %200, float 0x3FC1E52AA0000000) #3, !dbg !40
  %.012.i70 = select i1 %.not3.i69, float %222, float %221, !dbg !40
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i71 = icmp eq i32 %223, 0, !dbg !40
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %200, float 0xBFC55B1720000000) #3, !dbg !40
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %200, float 0xBFC55B1720000000) #3, !dbg !40
  %.09.i72 = select i1 %.not4.i71, float %225, float %224, !dbg !40
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i73 = icmp eq i32 %226, 0, !dbg !40
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %200, float 0x3FC99DA160000000) #3, !dbg !40
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %200, float 0x3FC99DA160000000) #3, !dbg !40
  %.05.i74 = select i1 %.not5.i73, float %228, float %227, !dbg !40
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i75 = icmp eq i32 %229, 0, !dbg !40
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %200, float 0xBFCFFFE440000000) #3, !dbg !40
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %200, float 0xBFCFFFE440000000) #3, !dbg !40
  %.01.i76 = select i1 %.not6.i75, float %231, float %230, !dbg !40
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not7.i77 = icmp eq i32 %232, 0, !dbg !40
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %200, float 0x3FD5554F00000000) #3, !dbg !40
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %200, float 0x3FD5554F00000000) #3, !dbg !40
  %.0.i78 = select i1 %.not7.i77, float %234, float %233, !dbg !40
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not8.i79 = icmp eq i32 %235, 0, !dbg !40
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %200, float -5.000000e-01) #3, !dbg !40
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %200, float -5.000000e-01) #3, !dbg !40
  %.07.i80 = select i1 %.not8.i79, float %237, float %236, !dbg !40
  %238 = fmul float %200, %.07.i80, !dbg !40
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not9.i81 = icmp eq i32 %239, 0, !dbg !40
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float %200, float %200) #3, !dbg !40
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float %200, float %200) #3, !dbg !40
  %.06.i82 = select i1 %.not9.i81, float %241, float %240, !dbg !40
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not10.i83 = icmp eq i32 %242, 0, !dbg !40
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #3, !dbg !40
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #3, !dbg !40
  %.04.i84 = select i1 %.not10.i83, float %244, float %243, !dbg !40
  br i1 %213, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !40

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not11.i88 = icmp eq i32 %245, 0, !dbg !40
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %.03.i89 = select i1 %.not11.i88, float %247, float %246, !dbg !40
  br label %__nv_logf.exit90, !dbg !40

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !40
  %248 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !40
  %249 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %r.i.1.i26 = select i1 %249, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !40
  %r.i.1.i86 = select i1 %248, float 0xFFF0000000000000, float %r.i.0.i85, !dbg !40
  %250 = fsub float %90, %r.i.1.i26, !dbg !41
  %251 = fsub float %91, %r.i.1.i26, !dbg !41
  %252 = fsub float %92, %r.i.1.i86, !dbg !41
  %253 = fsub float %93, %r.i.1.i86, !dbg !41
  %254 = bitcast float %250 to i32, !dbg !42
  %255 = bitcast float %251 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %254, i32 %255, ptr addrspace(1) %21, i1 %24) #3, !dbg !42
  %256 = bitcast float %252 to i32, !dbg !42
  %257 = bitcast float %253 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %256, i32 %257, ptr addrspace(1) %23, i1 %25) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py", directory: "inductor_cache/ac")
!4 = !{ptr @triton_per_fused__log_softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_4", linkageName: "triton_per_fused__log_softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 42, scope: !7)
!18 = !DILocation(line: 31, column: 39, scope: !7)
!19 = !DILocation(line: 31, column: 34, scope: !7)
!20 = !DILocation(line: 31, column: 55, scope: !7)
!21 = !DILocation(line: 31, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !27)
!24 = distinct !DILexicalBlockFile(scope: !26, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!27 = !DILocation(line: 34, column: 37, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !24, inlinedAt: !27)
!29 = !DILocation(line: 120, column: 16, scope: !24, inlinedAt: !27)
!30 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !27)
!31 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !27)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 23, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !35, inlinedAt: !38)
!35 = distinct !DILexicalBlockFile(scope: !37, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!38 = !DILocation(line: 39, column: 25, scope: !7)
!39 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !38)
!40 = !DILocation(line: 40, column: 24, scope: !7)
!41 = !DILocation(line: 41, column: 19, scope: !7)
!42 = !DILocation(line: 42, column: 48, scope: !7)
!43 = !DILocation(line: 42, column: 4, scope: !7)
