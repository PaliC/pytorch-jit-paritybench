//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_20 // -- Begin function triton_per_fused_native_group_norm_20
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_20
.visible .entry triton_per_fused_native_group_norm_20(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_20_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_20_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_20_param_2,
	.param .u32 triton_per_fused_native_group_norm_20_param_3,
	.param .u32 triton_per_fused_native_group_norm_20_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<74>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused_native_group_norm_20_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_native_group_norm_20_param_1];
$L__tmp0:
	.loc	1 23 28                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:23:33
	shl.b32 	%r40, %r1, 7;
	ld.param.u64 	%rd7, [triton_per_fused_native_group_norm_20_param_2];
	.loc	1 24 44                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:24:44
	mov.u32 	%r41, %tid.x;
	bfe.u32 	%r42, %r41, 2, 6;
	and.b32  	%r43, %r41, 127;
	.loc	1 24 23                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:24:23
	or.b32  	%r44, %r40, %r42;
	or.b32  	%r45, %r44, 64;
	.loc	1 25 21                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:25:21
	setp.lt.s32 	%p1, %r44, 128;
	setp.lt.s32 	%p6, %r45, 128;
	.loc	1 26 34                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:26:34
	shl.b32 	%r46, %r41, 2;
	and.b32  	%r47, %r46, 12;
	.loc	1 31 38                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:31:38
	shl.b32 	%r48, %r44, 4;
	shl.b32 	%r49, %r45, 4;
	.loc	1 31 35                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:31:35
	or.b32  	%r50, %r48, %r47;
	or.b32  	%r51, %r49, %r47;
	.loc	1 31 30                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:31:30
	mul.wide.s32 	%rd8, %r50, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r51, 4;
	add.s64 	%rd2, %rd6, %rd9;
	mov.b32 	%r6, 0;
	.loc	1 31 43                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f2;
	add.f32 	%f10, %f9, %f3;
	add.f32 	%f11, %f10, %f4;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	add.f32 	%f13, %f5, %f6;
	add.f32 	%f14, %f13, %f7;
	add.f32 	%f15, %f14, %f8;
	selp.f32 	%f16, %f15, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f12;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f17, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f12, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f18;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f19, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f16;
	shfl.sync.bfly.b32	%r57, %r56, 2, 31, -1;
	mov.b32 	%f21, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f16, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f22;
	shfl.sync.bfly.b32	%r59, %r58, 1, 31, -1;
	mov.b32 	%f23, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
$L__tmp2:
	.loc	1 39 19                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:39:19
	shl.b32 	%r60, %r42, 2;
	mov.u32 	%r61, global_smem;
	add.s32 	%r18, %r61, %r60;
	mov.b32 	%r19, %f20;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 256;
	mov.b32 	%r21, %f24;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r62, %r43, 2;
	add.s32 	%r63, %r61, %r62;
	ld.shared.u32 	%r23, [%r63];
	mov.b32 	%r24, 1098907648;
	// begin inline asm
	div.full.f32 %r39, %r23, %r24;
	// end inline asm
	// begin inline asm
	div.full.f32 %r25, %r19, %r24;
	// end inline asm
	mov.b32 	%f25, %r25;
	// begin inline asm
	div.full.f32 %r28, %r21, %r24;
	// end inline asm
	mov.b32 	%f26, %r28;
	.loc	1 40 19                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:40:19
	sub.f32 	%f27, %f1, %f25;
	sub.f32 	%f28, %f2, %f25;
	sub.f32 	%f29, %f3, %f25;
	sub.f32 	%f30, %f4, %f25;
	sub.f32 	%f31, %f5, %f26;
	sub.f32 	%f32, %f6, %f26;
	sub.f32 	%f33, %f7, %f26;
	sub.f32 	%f34, %f8, %f26;
	.loc	1 41 20                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:41:20
	mul.f32 	%f35, %f28, %f28;
	mul.f32 	%f36, %f32, %f32;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f37, %f27, %f27, %f35;
	fma.rn.f32 	%f38, %f29, %f29, %f37;
	fma.rn.f32 	%f39, %f30, %f30, %f38;
	selp.f32 	%f40, %f39, 0f00000000, %p1;
	fma.rn.f32 	%f41, %f31, %f31, %f36;
	fma.rn.f32 	%f42, %f33, %f33, %f41;
	fma.rn.f32 	%f43, %f34, %f34, %f42;
	selp.f32 	%f44, %f43, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f40;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f45, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f40, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f46;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f47, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f44;
	shfl.sync.bfly.b32	%r69, %r68, 2, 31, -1;
	mov.b32 	%f49, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f44, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f50;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	mov.b32 	%f51, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
$L__tmp4:
	.loc	1 49 28                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:49:28
	bar.sync 	0;
	mov.b32 	%r32, %f48;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r32;
	// end inline asm
	mov.b32 	%r34, %f52;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:46:20
	ld.shared.u32 	%r36, [%r63];
	// begin inline asm
	div.full.f32 %r35, %r36, %r24;
	// end inline asm
	mov.b32 	%f53, %r35;
	.loc	1 48 20                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:48:20
	add.f32 	%f54, %f53, 0f3727C5AC;
	.loc	1 49 28                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:49:28
	rsqrt.approx.ftz.f32 	%f55, %f54;
	.loc	1 24 23                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:24:23
	or.b32  	%r72, %r40, %r43;
	.loc	1 25 21                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:25:21
	setp.lt.s32 	%p17, %r72, 128;
	.loc	1 50 4                          // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:50:4
	bar.sync 	0;
	.loc	1 51 28                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:51:28
	mul.wide.s32 	%rd10, %r72, 4;
	add.s64 	%rd3, %rd5, %rd10;
	.loc	1 51 40                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:51:40
	and.b32  	%r73, %r41, 128;
	setp.eq.s32 	%p18, %r73, 0;
	mov.b32 	%r38, %f55;
	and.pred  	%p15, %p18, %p17;
	// begin inline asm
	@%p15 st.global.b32 [ %rd3 + 0 ], { %r38 };
	// end inline asm
	.loc	1 52 25                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:52:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 52 37                         // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:52:37
	// begin inline asm
	@%p15 st.global.b32 [ %rd4 + 0 ], { %r39 };
	// end inline asm
	.loc	1 52 4                          // cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mr/cmr3zaapde5j7s22q65pgej6jacjvn7wyrepkn7ztnsvvwfgtalq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 114
.b8 51
.b8 122
.b8 97
.b8 97
.b8 112
.b8 100
.b8 101
.b8 53
.b8 106
.b8 55
.b8 115
.b8 50
.b8 50
.b8 113
.b8 54
.b8 53
.b8 112
.b8 103
.b8 101
.b8 106
.b8 54
.b8 106
.b8 97
.b8 99
.b8 106
.b8 118
.b8 110
.b8 55
.b8 119
.b8 121
.b8 114
.b8 101
.b8 112
.b8 107
.b8 110
.b8 55
.b8 122
.b8 116
.b8 110
.b8 115
.b8 118
.b8 118
.b8 119
.b8 102
.b8 103
.b8 116
.b8 97
.b8 108
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
