//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0 // -- Begin function triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0
.visible .entry triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_2,
	.param .u32 triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_3,
	.param .u32 triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_2];
	ld.param.u64 	%rd4, [triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:23:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd5, [triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0_param_1];
	.loc	1 25 21                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:25:21
	setp.lt.s32 	%p1, %r3, 16;
	.loc	1 26 34                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:26:34
	mov.u32 	%r2, %tid.x;
	.loc	1 31 19                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:31:19
	shr.s32 	%r8, %r3, 31;
	shr.u32 	%r9, %r8, 30;
	add.s32 	%r10, %r3, %r9;
	.loc	1 30 19                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:30:19
	and.b32  	%r11, %r10, -4;
	sub.s32 	%r12, %r3, %r11;
	.loc	1 33 37                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:37
	shl.b32 	%r13, %r2, 2;
	and.b32  	%r14, %r13, 60;
	.loc	1 33 35                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:35
	add.s32 	%r15, %r12, %r14;
	.loc	1 33 45                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:45
	shl.b32 	%r16, %r10, 4;
	and.b32  	%r17, %r16, -64;
	.loc	1 33 42                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:42
	add.s32 	%r18, %r15, %r17;
	.loc	1 33 30                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:30
	mul.wide.s32 	%rd6, %r18, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.b32 	%r5, 0;
	.loc	1 33 50                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:33:50
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f6, %r4;
	.loc	1 34 30                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:34:30
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 34 50                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:34:50
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f7, %r6;
	.loc	1 35 18                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:35:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 36 23                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:36:23
	abs.f32 	%f1, %f8;
	.loc	1 41 18                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:41:18
	fma.rn.f32 	%f9, %f1, 0f40000000, 0f3F800000;
	.loc	1 42 23                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:42:23
	setp.lt.f32 	%p5, %f9, 0f00800000;
	mul.f32 	%f10, %f9, 0f4B000000;
	selp.f32 	%f2, %f10, %f9, %p5;
	selp.f32 	%f11, 0fC1B80000, 0f00000000, %p5;
	mov.b32 	%r19, %f2;
	add.s32 	%r20, %r19, -1059760811;
	and.b32  	%r21, %r20, -8388608;
	sub.s32 	%r22, %r19, %r21;
	mov.b32 	%f12, %r22;
	cvt.rn.f32.s32 	%f13, %r21;
	mov.f32 	%f14, 0f34000000;
	fma.rn.ftz.f32 	%f15, %f13, %f14, %f11;
	add.f32 	%f16, %f12, 0fBF800000;
	mov.f32 	%f17, 0f3E1039F6;
	mov.f32 	%f18, 0fBE055027;
	fma.rn.ftz.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0f3E0F2955;
	fma.rn.ftz.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f25, %f23, %f16, %f24;
	mov.f32 	%f26, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f27, %f25, %f16, %f26;
	mov.f32 	%f28, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f29, %f27, %f16, %f28;
	mov.f32 	%f30, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f31, %f29, %f16, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.ftz.f32 	%f33, %f31, %f16, %f32;
	mul.f32 	%f34, %f16, %f33;
	fma.rn.ftz.f32 	%f35, %f34, %f16, %f16;
	mov.f32 	%f36, 0f3F317218;
	fma.rn.ftz.f32 	%f50, %f15, %f36, %f35;
	setp.lt.u32 	%p6, %r19, 2139095040;
	@%p6 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 23                          // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:0:23
	mov.f32 	%f37, 0f7F800000;
	fma.rn.ftz.f32 	%f50, %f2, %f37, %f37;
$L__BB0_2:                              // %__nv_logf.exit
	.loc	1 38 18                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:38:18
	setp.lt.f32 	%p9, %f1, 0f40000000;
	.loc	1 42 23                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:42:23
	setp.eq.f32 	%p10, %f2, 0f00000000;
	.loc	1 46 20                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:46:20
	fma.rn.f32 	%f38, %f50, 0f41A00000, 0fC1F18294;
	.loc	1 42 23                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:42:23
	selp.f32 	%f39, 0fFF800000, %f38, %p10;
	.loc	1 47 33                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:47:33
	selp.f32 	%f40, %f1, %f39, %p9;
	.loc	1 49 35                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:49:35
	selp.f32 	%f41, %f40, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f41;
	shfl.sync.bfly.b32	%r25, %r24, 8, 31, -1;
	mov.b32 	%f42, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f43;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f44, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f45;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f46, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f47;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f48, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
$L__tmp2:
	.loc	1 51 25                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:51:25
	mul.wide.s32 	%rd8, %r3, 4;
	add.s64 	%rd7, %rd1, %rd8;
	.loc	1 51 37                         // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:51:37
	and.b32  	%r32, %r2, 63;
	setp.eq.s32 	%p11, %r32, 0;
	mov.b32 	%r23, %f49;
	and.pred  	%p7, %p11, %p1;
	// begin inline asm
	@%p7 st.global.b32 [ %rd7 + 0 ], { %r23 };
	// end inline asm
	.loc	1 51 4                          // c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py:51:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/54/c54ynhviqydbvwazjatdbntkjd2gky6r2inzemlybbz5scd534he.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 52
.b8 121
.b8 110
.b8 104
.b8 118
.b8 105
.b8 113
.b8 121
.b8 100
.b8 98
.b8 118
.b8 119
.b8 97
.b8 122
.b8 106
.b8 97
.b8 116
.b8 100
.b8 98
.b8 110
.b8 116
.b8 107
.b8 106
.b8 100
.b8 50
.b8 103
.b8 107
.b8 121
.b8 54
.b8 114
.b8 50
.b8 105
.b8 110
.b8 122
.b8 101
.b8 109
.b8 108
.b8 121
.b8 98
.b8 98
.b8 122
.b8 53
.b8 115
.b8 99
.b8 100
.b8 53
.b8 51
.b8 52
.b8 104
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 108
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 119
.b8 104
.b8 101
.b8 114
.b8 101
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
