; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 4, !dbg !16
  %15 = srem i32 %12, 4, !dbg !17
  %16 = sdiv i32 %9, 16, !dbg !18
  %17 = shl nsw i32 %15, 2, !dbg !19
  %18 = shl nsw i32 %16, 4, !dbg !20
  %19 = add i32 %17, %18, !dbg !21
  %20 = add i32 %19, %.decomposed, !dbg !22
  %21 = add i32 %19, %14, !dbg !22
  %22 = sext i32 %20 to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !23
  %24 = sext i32 %21 to i64, !dbg !23
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !23
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %11) #1, !dbg !24
  %27 = bitcast i32 %26 to float, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %11) #1, !dbg !24
  %29 = bitcast i32 %28 to float, !dbg !24
  %30 = or disjoint i32 %.decomposed, 1, !dbg !25
  %31 = add nsw i32 %14, 1, !dbg !25
  %32 = icmp sgt i32 %.decomposed, 1, !dbg !26
  %33 = icmp sgt i32 %14, 1, !dbg !26
  %34 = select i1 %32, i32 3, i32 0, !dbg !27
  %35 = select i1 %33, i32 3, i32 0, !dbg !27
  %36 = icmp slt i32 %.decomposed, 2, !dbg !28
  %37 = icmp slt i32 %14, 2, !dbg !28
  %38 = select i1 %36, i32 %30, i32 0, !dbg !29
  %39 = select i1 %37, i32 %31, i32 0, !dbg !29
  %40 = add nsw i32 %34, %38, !dbg !30
  %41 = add nsw i32 %35, %39, !dbg !30
  %42 = add i32 %19, %40, !dbg !31
  %43 = add i32 %19, %41, !dbg !31
  %44 = sext i32 %42 to i64, !dbg !32
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !32
  %46 = sext i32 %43 to i64, !dbg !32
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !32
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %11) #1, !dbg !33
  %49 = bitcast i32 %48 to float, !dbg !33
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #1, !dbg !33
  %51 = bitcast i32 %50 to float, !dbg !33
  %52 = add nsw i32 %15, 1, !dbg !34
  %53 = icmp sgt i32 %15, 1, !dbg !35
  %54 = select i1 %53, i32 3, i32 0, !dbg !36
  %55 = icmp slt i32 %15, 2, !dbg !37
  %56 = select i1 %55, i32 %52, i32 0, !dbg !38
  %57 = add nsw i32 %54, %56, !dbg !39
  %58 = shl nsw i32 %57, 2, !dbg !40
  %59 = add i32 %58, %18, !dbg !41
  %60 = add i32 %59, %.decomposed, !dbg !42
  %61 = add i32 %59, %14, !dbg !42
  %62 = sext i32 %60 to i64, !dbg !43
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !43
  %64 = sext i32 %61 to i64, !dbg !43
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !43
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %11) #1, !dbg !44
  %67 = bitcast i32 %66 to float, !dbg !44
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %11) #1, !dbg !44
  %69 = bitcast i32 %68 to float, !dbg !44
  %70 = add i32 %59, %40, !dbg !45
  %71 = add i32 %59, %41, !dbg !45
  %72 = sext i32 %70 to i64, !dbg !46
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !46
  %74 = sext i32 %71 to i64, !dbg !46
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !46
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %11) #1, !dbg !47
  %77 = bitcast i32 %76 to float, !dbg !47
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %11) #1, !dbg !47
  %79 = bitcast i32 %78 to float, !dbg !47
  %80 = fcmp ogt float %49, %27, !dbg !48
  %81 = fcmp ogt float %51, %29, !dbg !48
  %82 = fcmp uno float %49, 0.000000e+00, !dbg !52
  %83 = fcmp uno float %51, 0.000000e+00, !dbg !52
  %84 = or i1 %80, %82, !dbg !53
  %85 = or i1 %81, %83, !dbg !53
  %86 = select i1 %84, float %49, float %27, !dbg !54
  %87 = select i1 %85, float %51, float %29, !dbg !54
  %88 = fcmp olt float %86, %67, !dbg !55
  %89 = fcmp olt float %87, %69, !dbg !55
  %90 = fcmp uno float %67, 0.000000e+00, !dbg !57
  %91 = fcmp uno float %69, 0.000000e+00, !dbg !57
  %92 = or i1 %90, %88, !dbg !58
  %93 = or i1 %91, %89, !dbg !58
  %94 = select i1 %92, float %67, float %86, !dbg !59
  %95 = select i1 %93, float %69, float %87, !dbg !59
  %96 = fcmp olt float %94, %77, !dbg !60
  %97 = fcmp olt float %95, %79, !dbg !60
  %98 = fcmp uno float %77, 0.000000e+00, !dbg !62
  %99 = fcmp uno float %79, 0.000000e+00, !dbg !62
  %100 = or i1 %98, %96, !dbg !63
  %101 = or i1 %99, %97, !dbg !63
  %102 = sext i32 %9 to i64, !dbg !64
  %103 = getelementptr float, ptr addrspace(1) %1, i64 %102, !dbg !64
  %104 = bitcast float %94 to i32, !dbg !65
  %105 = select i1 %100, i32 %76, i32 %104, !dbg !66
  %106 = bitcast float %95 to i32, !dbg !65
  %107 = select i1 %101, i32 %78, i32 %106, !dbg !66
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %105, i32 %107, ptr addrspace(1) %103, i1 %11) #1, !dbg !65
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvogswdyz5f4i5jfvzhd6lwwwkwvjfqnwvyanhqgya34hjjvi5ii.py", directory: "inductor_cache/vo")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 33, scope: !7)
!20 = !DILocation(line: 28, column: 81, scope: !7)
!21 = !DILocation(line: 28, column: 78, scope: !7)
!22 = !DILocation(line: 28, column: 87, scope: !7)
!23 = !DILocation(line: 28, column: 30, scope: !7)
!24 = !DILocation(line: 28, column: 132, scope: !7)
!25 = !DILocation(line: 29, column: 106, scope: !7)
!26 = !DILocation(line: 29, column: 102, scope: !7)
!27 = !DILocation(line: 29, column: 94, scope: !7)
!28 = !DILocation(line: 29, column: 137, scope: !7)
!29 = !DILocation(line: 29, column: 125, scope: !7)
!30 = !DILocation(line: 29, column: 113, scope: !7)
!31 = !DILocation(line: 29, column: 87, scope: !7)
!32 = !DILocation(line: 29, column: 30, scope: !7)
!33 = !DILocation(line: 29, column: 144, scope: !7)
!34 = !DILocation(line: 30, column: 52, scope: !7)
!35 = !DILocation(line: 30, column: 48, scope: !7)
!36 = !DILocation(line: 30, column: 40, scope: !7)
!37 = !DILocation(line: 30, column: 83, scope: !7)
!38 = !DILocation(line: 30, column: 71, scope: !7)
!39 = !DILocation(line: 30, column: 59, scope: !7)
!40 = !DILocation(line: 30, column: 33, scope: !7)
!41 = !DILocation(line: 30, column: 90, scope: !7)
!42 = !DILocation(line: 30, column: 99, scope: !7)
!43 = !DILocation(line: 30, column: 30, scope: !7)
!44 = !DILocation(line: 30, column: 144, scope: !7)
!45 = !DILocation(line: 31, column: 99, scope: !7)
!46 = !DILocation(line: 31, column: 30, scope: !7)
!47 = !DILocation(line: 31, column: 156, scope: !7)
!48 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !51)
!49 = distinct !DILexicalBlockFile(scope: !7, file: !50, discriminator: 0)
!50 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!51 = !DILocation(line: 32, column: 40, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !51)
!55 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !56)
!56 = !DILocation(line: 33, column: 40, scope: !7)
!57 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !56)
!58 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !56)
!59 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !56)
!60 = !DILocation(line: 118, column: 15, scope: !49, inlinedAt: !61)
!61 = !DILocation(line: 34, column: 40, scope: !7)
!62 = !DILocation(line: 120, column: 21, scope: !49, inlinedAt: !61)
!63 = !DILocation(line: 120, column: 16, scope: !49, inlinedAt: !61)
!64 = !DILocation(line: 35, column: 25, scope: !7)
!65 = !DILocation(line: 35, column: 36, scope: !7)
!66 = !DILocation(line: 121, column: 29, scope: !49, inlinedAt: !61)
!67 = !DILocation(line: 35, column: 4, scope: !7)
