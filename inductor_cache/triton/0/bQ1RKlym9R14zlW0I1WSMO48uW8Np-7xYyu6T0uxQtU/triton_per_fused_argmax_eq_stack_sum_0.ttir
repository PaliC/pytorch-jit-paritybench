#loc = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0)
#loc1 = loc(unknown)
#loc55 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":80:26)
#loc60 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":84:26)
#loc64 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":88:26)
#loc68 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":92:26)
#loc80 = loc(callsite(#loc1 at #loc55))
#loc83 = loc(callsite(#loc1 at #loc60))
#loc85 = loc(callsite(#loc1 at #loc64))
#loc87 = loc(callsite(#loc1 at #loc68))
module {
  tt.func public @triton_per_fused_argmax_eq_stack_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0), %arg1: !tt.ptr<i64> loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0), %arg2: !tt.ptr<i64> loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0), %arg3: !tt.ptr<i64> loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<3> : tensor<1x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<1x64xi64> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<1x64xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.muli %1, %cst_6 : tensor<1x64xi32> loc(#loc4)
    %3 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %2 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc5)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.addi %2, %cst_5 : tensor<1x64xi32> loc(#loc7)
    %7 = tt.addptr %3, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc10)
    %10 = tt.addptr %3, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %12 = arith.addi %2, %cst_3 : tensor<1x64xi32> loc(#loc13)
    %13 = tt.addptr %3, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %15 = arith.cmpf ogt, %5, %8 : tensor<1x64xf32> loc(#loc16)
    %16 = arith.cmpf oeq, %5, %8 : tensor<1x64xf32> loc(#loc17)
    %17 = arith.cmpf une, %5, %5 : tensor<1x64xf32> loc(#loc18)
    %18 = arith.cmpf une, %8, %8 : tensor<1x64xf32> loc(#loc19)
    %19 = arith.cmpi ugt, %17, %18 : tensor<1x64xi1> loc(#loc20)
    %20 = arith.ori %15, %19 : tensor<1x64xi1> loc(#loc21)
    %21 = arith.andi %17, %18 : tensor<1x64xi1> loc(#loc22)
    %22 = arith.ori %16, %21 : tensor<1x64xi1> loc(#loc23)
    %23 = arith.ori %20, %22 : tensor<1x64xi1> loc(#loc24)
    %24 = arith.select %23, %5, %8 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc25)
    %25 = arith.select %23, %cst_2, %cst_1 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc26)
    %26 = arith.cmpf ogt, %24, %11 : tensor<1x64xf32> loc(#loc27)
    %27 = arith.cmpf oeq, %24, %11 : tensor<1x64xf32> loc(#loc28)
    %28 = arith.cmpf une, %24, %24 : tensor<1x64xf32> loc(#loc29)
    %29 = arith.cmpf une, %11, %11 : tensor<1x64xf32> loc(#loc30)
    %30 = arith.cmpi ugt, %28, %29 : tensor<1x64xi1> loc(#loc31)
    %31 = arith.ori %26, %30 : tensor<1x64xi1> loc(#loc32)
    %32 = arith.andi %28, %29 : tensor<1x64xi1> loc(#loc33)
    %33 = arith.ori %27, %32 : tensor<1x64xi1> loc(#loc34)
    %34 = arith.cmpi slt, %25, %cst_0 : tensor<1x64xi64> loc(#loc35)
    %35 = arith.andi %33, %34 : tensor<1x64xi1> loc(#loc36)
    %36 = arith.ori %31, %35 : tensor<1x64xi1> loc(#loc37)
    %37 = arith.select %36, %24, %11 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc38)
    %38 = arith.select %36, %25, %cst_0 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc39)
    %39 = arith.cmpf ogt, %37, %14 : tensor<1x64xf32> loc(#loc40)
    %40 = arith.cmpf oeq, %37, %14 : tensor<1x64xf32> loc(#loc41)
    %41 = arith.cmpf une, %37, %37 : tensor<1x64xf32> loc(#loc42)
    %42 = arith.cmpf une, %14, %14 : tensor<1x64xf32> loc(#loc43)
    %43 = arith.cmpi ugt, %41, %42 : tensor<1x64xi1> loc(#loc44)
    %44 = arith.ori %39, %43 : tensor<1x64xi1> loc(#loc45)
    %45 = arith.andi %41, %42 : tensor<1x64xi1> loc(#loc46)
    %46 = arith.ori %40, %45 : tensor<1x64xi1> loc(#loc47)
    %47 = arith.cmpi slt, %38, %cst : tensor<1x64xi64> loc(#loc48)
    %48 = arith.andi %46, %47 : tensor<1x64xi1> loc(#loc49)
    %49 = arith.ori %44, %48 : tensor<1x64xi1> loc(#loc50)
    %50 = arith.select %49, %38, %cst : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc51)
    %51 = arith.cmpi eq, %50, %cst_2 : tensor<1x64xi64> loc(#loc52)
    %52 = arith.extui %51 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc53)
    %53 = "tt.reduce"(%52) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i64 loc(callsite(#loc1 at #loc55)), %arg7: i64 loc(callsite(#loc1 at #loc55))):
      %75 = arith.addi %arg6, %arg7 : i64 loc(#loc88)
      tt.reduce.return %75 : i64 loc(#loc79)
    }) : (tensor<1x64xi64>) -> tensor<1xi64> loc(#loc79)
    %54 = tt.expand_dims %53 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc57)
    %55 = arith.cmpi eq, %50, %cst_1 : tensor<1x64xi64> loc(#loc58)
    %56 = arith.extui %55 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc59)
    %57 = "tt.reduce"(%56) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i64 loc(callsite(#loc1 at #loc60)), %arg7: i64 loc(callsite(#loc1 at #loc60))):
      %75 = arith.addi %arg6, %arg7 : i64 loc(#loc89)
      tt.reduce.return %75 : i64 loc(#loc82)
    }) : (tensor<1x64xi64>) -> tensor<1xi64> loc(#loc82)
    %58 = tt.expand_dims %57 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc61)
    %59 = arith.cmpi eq, %50, %cst_0 : tensor<1x64xi64> loc(#loc62)
    %60 = arith.extui %59 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc63)
    %61 = "tt.reduce"(%60) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i64 loc(callsite(#loc1 at #loc64)), %arg7: i64 loc(callsite(#loc1 at #loc64))):
      %75 = arith.addi %arg6, %arg7 : i64 loc(#loc90)
      tt.reduce.return %75 : i64 loc(#loc84)
    }) : (tensor<1x64xi64>) -> tensor<1xi64> loc(#loc84)
    %62 = tt.expand_dims %61 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc65)
    %63 = arith.cmpi eq, %50, %cst : tensor<1x64xi64> loc(#loc66)
    %64 = arith.extui %63 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc67)
    %65 = "tt.reduce"(%64) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i64 loc(callsite(#loc1 at #loc68)), %arg7: i64 loc(callsite(#loc1 at #loc68))):
      %75 = arith.addi %arg6, %arg7 : i64 loc(#loc91)
      tt.reduce.return %75 : i64 loc(#loc86)
    }) : (tensor<1x64xi64>) -> tensor<1xi64> loc(#loc86)
    %66 = tt.expand_dims %65 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc69)
    %67 = tt.addptr %arg1, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc70)
    %68 = tt.splat %67 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc70)
    tt.store %68, %66 : tensor<1x1x!tt.ptr<i64>> loc(#loc71)
    %69 = tt.addptr %arg2, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc72)
    %70 = tt.splat %69 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc72)
    tt.store %70, %62 : tensor<1x1x!tt.ptr<i64>> loc(#loc73)
    %71 = tt.addptr %arg3, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc74)
    %72 = tt.splat %71 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc74)
    tt.store %72, %58 : tensor<1x1x!tt.ptr<i64>> loc(#loc75)
    %73 = tt.addptr %arg4, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc76)
    %74 = tt.splat %73 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc76)
    tt.store %74, %54 : tensor<1x1x!tt.ptr<i64>> loc(#loc77)
    tt.return loc(#loc78)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":26:26)
#loc3 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":26:34)
#loc4 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":30:32)
#loc5 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":30:30)
#loc6 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":30:37)
#loc7 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":31:34)
#loc8 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":31:30)
#loc9 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":31:41)
#loc10 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":32:35)
#loc11 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":32:31)
#loc12 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":32:42)
#loc13 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":33:35)
#loc14 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":33:31)
#loc15 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":33:42)
#loc16 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":34:18)
#loc17 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":35:19)
#loc18 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":36:19)
#loc19 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":37:19)
#loc20 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":38:18)
#loc21 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":39:18)
#loc22 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":40:18)
#loc23 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":41:18)
#loc24 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":46:19)
#loc25 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":47:34)
#loc26 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":48:35)
#loc27 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":49:20)
#loc28 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":50:21)
#loc29 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":51:21)
#loc30 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":52:21)
#loc31 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":53:20)
#loc32 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":54:20)
#loc33 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":55:20)
#loc34 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":56:20)
#loc35 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":58:20)
#loc36 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":59:20)
#loc37 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":60:20)
#loc38 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":61:35)
#loc39 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":62:35)
#loc40 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":63:20)
#loc41 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":64:21)
#loc42 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":65:21)
#loc43 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":66:21)
#loc44 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":67:20)
#loc45 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":68:20)
#loc46 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":69:20)
#loc47 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":70:20)
#loc48 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":72:20)
#loc49 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":73:20)
#loc50 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":74:20)
#loc51 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":76:35)
#loc52 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":77:21)
#loc53 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":78:21)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc57 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":80:29)
#loc58 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":81:21)
#loc59 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":82:21)
#loc61 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":84:29)
#loc62 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":85:21)
#loc63 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":86:21)
#loc65 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":88:29)
#loc66 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":89:21)
#loc67 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":90:21)
#loc69 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":92:29)
#loc70 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":93:25)
#loc71 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":93:68)
#loc72 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":94:25)
#loc73 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":94:68)
#loc74 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":95:26)
#loc75 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":95:69)
#loc76 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":96:26)
#loc77 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":96:69)
#loc78 = loc("inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py":96:4)
#loc79 = loc(callsite(#loc54 at #loc55))
#loc81 = loc(callsite(#loc56 at #loc54))
#loc82 = loc(callsite(#loc54 at #loc60))
#loc84 = loc(callsite(#loc54 at #loc64))
#loc86 = loc(callsite(#loc54 at #loc68))
#loc88 = loc(callsite(#loc81 at #loc55))
#loc89 = loc(callsite(#loc81 at #loc60))
#loc90 = loc(callsite(#loc81 at #loc64))
#loc91 = loc(callsite(#loc81 at #loc68))
