//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_argmax_eq_stack_sum_0 // -- Begin function triton_per_fused_argmax_eq_stack_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_argmax_eq_stack_sum_0
.visible .entry triton_per_fused_argmax_eq_stack_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_argmax_eq_stack_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_argmax_eq_stack_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_argmax_eq_stack_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_argmax_eq_stack_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_argmax_eq_stack_sum_0_param_4,
	.param .u32 triton_per_fused_argmax_eq_stack_sum_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<58>;
	.reg .b32 	%r<120>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<146>;
	.loc	1 19 0                          // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:19:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_per_fused_argmax_eq_stack_sum_0_param_0];
	ld.param.u64 	%rd18, [triton_per_fused_argmax_eq_stack_sum_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:26:34
	mov.u32 	%r17, %tid.x;
	and.b32  	%r18, %r17, 31;
	ld.param.u64 	%rd20, [triton_per_fused_argmax_eq_stack_sum_0_param_2];
	ld.param.u64 	%rd22, [triton_per_fused_argmax_eq_stack_sum_0_param_3];
	.loc	1 30 32                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:30:32
	shl.b32 	%r19, %r17, 2;
	ld.param.u64 	%rd24, [triton_per_fused_argmax_eq_stack_sum_0_param_4];
	and.b32  	%r20, %r19, 252;
	.loc	1 30 30                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:30:30
	mul.wide.u32 	%rd26, %r20, 4;
	add.s64 	%rd1, %rd25, %rd26;
	mov.pred 	%p1, -1;
	.loc	1 30 37                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:30:37
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 31 30                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:31:30
	add.s64 	%rd2, %rd1, 4;
	.loc	1 31 41                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:31:41
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 32 31                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:32:31
	add.s64 	%rd3, %rd1, 8;
	.loc	1 32 42                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 33 31                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:33:31
	add.s64 	%rd4, %rd1, 12;
	.loc	1 33 42                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:33:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 34 18                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:34:18
	setp.gt.f32 	%p21, %f1, %f2;
	.loc	1 35 19                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:35:19
	setp.eq.f32 	%p22, %f1, %f2;
	.loc	1 36 19                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:36:19
	setp.nan.f32 	%p23, %f1, %f1;
	.loc	1 37 19                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:37:19
	setp.nan.f32 	%p24, %f2, %f2;
	setp.num.f32 	%p25, %f2, %f2;
	.loc	1 38 18                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:38:18
	and.pred  	%p26, %p23, %p25;
	.loc	1 39 18                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:39:18
	or.pred  	%p27, %p21, %p26;
	.loc	1 40 18                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:40:18
	and.pred  	%p28, %p23, %p24;
	.loc	1 41 18                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:41:18
	or.pred  	%p29, %p22, %p28;
	.loc	1 46 19                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:46:19
	or.pred  	%p30, %p27, %p29;
	.loc	1 47 34                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:47:34
	selp.f32 	%f5, %f1, %f2, %p30;
	.loc	1 48 35                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:48:35
	not.pred 	%p31, %p30;
	selp.u64 	%rd27, 1, 0, %p31;
	.loc	1 49 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:49:20
	setp.gt.f32 	%p32, %f5, %f3;
	.loc	1 50 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:50:21
	setp.eq.f32 	%p33, %f5, %f3;
	.loc	1 51 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:51:21
	setp.nan.f32 	%p34, %f5, %f5;
	.loc	1 52 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:52:21
	setp.nan.f32 	%p35, %f3, %f3;
	setp.num.f32 	%p36, %f3, %f3;
	.loc	1 53 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:53:20
	and.pred  	%p37, %p34, %p36;
	.loc	1 54 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:54:20
	or.pred  	%p38, %p32, %p37;
	.loc	1 55 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:55:20
	and.pred  	%p39, %p35, %p34;
	.loc	1 56 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:56:20
	or.pred  	%p40, %p33, %p39;
	.loc	1 60 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:60:20
	or.pred  	%p41, %p38, %p40;
	.loc	1 61 35                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:61:35
	selp.f32 	%f6, %f5, %f3, %p41;
	.loc	1 62 35                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:62:35
	selp.b64 	%rd28, %rd27, 2, %p41;
	.loc	1 63 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:63:20
	setp.gt.f32 	%p42, %f6, %f4;
	.loc	1 64 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:64:21
	setp.eq.f32 	%p43, %f6, %f4;
	.loc	1 65 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:65:21
	setp.nan.f32 	%p44, %f6, %f6;
	.loc	1 66 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:66:21
	setp.nan.f32 	%p45, %f4, %f4;
	setp.num.f32 	%p46, %f4, %f4;
	.loc	1 67 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:67:20
	and.pred  	%p47, %p44, %p46;
	.loc	1 68 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:68:20
	or.pred  	%p48, %p42, %p47;
	.loc	1 69 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:69:20
	and.pred  	%p49, %p45, %p44;
	.loc	1 70 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:70:20
	or.pred  	%p50, %p43, %p49;
	.loc	1 74 20                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:74:20
	or.pred  	%p51, %p48, %p50;
	.loc	1 76 35                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:76:35
	selp.b64 	%rd29, %rd28, 3, %p51;
	.loc	1 77 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:77:21
	setp.eq.s64 	%p52, %rd29, 0;
	.loc	1 78 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:78:21
	selp.u64 	%rd30, 1, 0, %p52;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	selp.u32 	%r21, 1, 0, %p52;
	shfl.sync.bfly.b32	%r22, %r21, 16, 31, -1;
	mov.b32 	%r23, 0;
	shfl.sync.bfly.b32	%r24, %r23, 16, 31, -1;
	cvt.u64.u32 	%rd31, %r22;
	cvt.u64.u32 	%rd32, %r24;
	shl.b64 	%rd33, %rd32, 32;
	or.b64  	%rd34, %rd31, %rd33;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd35, %rd30, %rd34;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r25}, %rd35; }
	cvt.u32.u64 	%r26, %rd35;
	shfl.sync.bfly.b32	%r27, %r26, 8, 31, -1;
	shfl.sync.bfly.b32	%r28, %r25, 8, 31, -1;
	cvt.u64.u32 	%rd36, %r27;
	cvt.u64.u32 	%rd37, %r28;
	shl.b64 	%rd38, %rd37, 32;
	or.b64  	%rd39, %rd36, %rd38;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd40, %rd35, %rd39;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r29}, %rd40; }
	cvt.u32.u64 	%r30, %rd40;
	shfl.sync.bfly.b32	%r31, %r30, 4, 31, -1;
	shfl.sync.bfly.b32	%r32, %r29, 4, 31, -1;
	cvt.u64.u32 	%rd41, %r31;
	cvt.u64.u32 	%rd42, %r32;
	shl.b64 	%rd43, %rd42, 32;
	or.b64  	%rd44, %rd41, %rd43;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd45, %rd40, %rd44;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r33}, %rd45; }
	cvt.u32.u64 	%r34, %rd45;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	shfl.sync.bfly.b32	%r36, %r33, 2, 31, -1;
	cvt.u64.u32 	%rd46, %r35;
	cvt.u64.u32 	%rd47, %r36;
	shl.b64 	%rd48, %rd47, 32;
	or.b64  	%rd49, %rd46, %rd48;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd50, %rd45, %rd49;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r37}, %rd50; }
	cvt.u32.u64 	%r38, %rd50;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	shfl.sync.bfly.b32	%r40, %r37, 1, 31, -1;
	cvt.u64.u32 	%rd51, %r39;
	cvt.u64.u32 	%rd52, %r40;
	shl.b64 	%rd53, %rd52, 32;
	or.b64  	%rd54, %rd51, %rd53;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd5, %rd50, %rd54;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r18, 0;
	shr.u32 	%r41, %r17, 2;
	and.b32  	%r42, %r41, 8;
	mov.u32 	%r43, global_smem;
	add.s32 	%r5, %r43, %r42;
	// begin inline asm
	@%p5 st.shared.b64 [ %r5 + 0 ], %rd5;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r17, 2;
	shl.b32 	%r44, %r17, 3;
	add.s32 	%r6, %r43, %r44;
	// begin inline asm
	@%p6 ld.shared.b64 %rd6, [ %r6 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r45}, %rd6; }
	cvt.u32.u64 	%r46, %rd6;
	shfl.sync.bfly.b32	%r47, %r46, 1, 31, -1;
	shfl.sync.bfly.b32	%r48, %r45, 1, 31, -1;
	cvt.u64.u32 	%rd55, %r47;
	cvt.u64.u32 	%rd56, %r48;
	shl.b64 	%rd57, %rd56, 32;
	or.b64  	%rd58, %rd55, %rd57;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd7, %rd6, %rd58;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r49, %r17, 1;
	setp.eq.b32 	%p53, %r49, 1;
	not.pred 	%p54, %p53;
	and.pred  	%p7, %p6, %p54;
	// begin inline asm
	@%p7 st.shared.b64 [ %r6 + 0 ], %rd7;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd23, [global_smem];
$L__tmp2:
	.loc	1 81 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:81:21
	setp.eq.s64 	%p55, %rd29, 1;
	.loc	1 82 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:82:21
	selp.u64 	%rd59, 1, 0, %p55;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	selp.u32 	%r50, 1, 0, %p55;
	shfl.sync.bfly.b32	%r51, %r50, 16, 31, -1;
	shfl.sync.bfly.b32	%r52, %r23, 16, 31, -1;
	cvt.u64.u32 	%rd60, %r51;
	cvt.u64.u32 	%rd61, %r52;
	shl.b64 	%rd62, %rd61, 32;
	or.b64  	%rd63, %rd60, %rd62;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd64, %rd63, %rd59;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r53}, %rd64; }
	cvt.u32.u64 	%r54, %rd64;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	shfl.sync.bfly.b32	%r56, %r53, 8, 31, -1;
	cvt.u64.u32 	%rd65, %r55;
	cvt.u64.u32 	%rd66, %r56;
	shl.b64 	%rd67, %rd66, 32;
	or.b64  	%rd68, %rd65, %rd67;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd69, %rd64, %rd68;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r57}, %rd69; }
	cvt.u32.u64 	%r58, %rd69;
	shfl.sync.bfly.b32	%r59, %r58, 4, 31, -1;
	shfl.sync.bfly.b32	%r60, %r57, 4, 31, -1;
	cvt.u64.u32 	%rd70, %r59;
	cvt.u64.u32 	%rd71, %r60;
	shl.b64 	%rd72, %rd71, 32;
	or.b64  	%rd73, %rd70, %rd72;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd74, %rd69, %rd73;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r61}, %rd74; }
	cvt.u32.u64 	%r62, %rd74;
	shfl.sync.bfly.b32	%r63, %r62, 2, 31, -1;
	shfl.sync.bfly.b32	%r64, %r61, 2, 31, -1;
	cvt.u64.u32 	%rd75, %r63;
	cvt.u64.u32 	%rd76, %r64;
	shl.b64 	%rd77, %rd76, 32;
	or.b64  	%rd78, %rd75, %rd77;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd79, %rd74, %rd78;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r65}, %rd79; }
	cvt.u32.u64 	%r66, %rd79;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	shfl.sync.bfly.b32	%r68, %r65, 1, 31, -1;
	cvt.u64.u32 	%rd80, %r67;
	cvt.u64.u32 	%rd81, %r68;
	shl.b64 	%rd82, %rd81, 32;
	or.b64  	%rd83, %rd80, %rd82;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd8, %rd79, %rd83;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p5 st.shared.b64 [ %r5 + 0 ], %rd8;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b64 %rd9, [ %r6 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r69}, %rd9; }
	cvt.u32.u64 	%r70, %rd9;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	shfl.sync.bfly.b32	%r72, %r69, 1, 31, -1;
	cvt.u64.u32 	%rd84, %r71;
	cvt.u64.u32 	%rd85, %r72;
	shl.b64 	%rd86, %rd85, 32;
	or.b64  	%rd87, %rd84, %rd86;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd10, %rd9, %rd87;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p7 st.shared.b64 [ %r6 + 0 ], %rd10;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd21, [global_smem];
$L__tmp4:
	.loc	1 85 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:85:21
	setp.eq.s64 	%p56, %rd29, 2;
	.loc	1 86 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:86:21
	selp.u64 	%rd88, 1, 0, %p56;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	selp.u32 	%r73, 1, 0, %p56;
	shfl.sync.bfly.b32	%r74, %r73, 16, 31, -1;
	shfl.sync.bfly.b32	%r75, %r23, 16, 31, -1;
	cvt.u64.u32 	%rd89, %r74;
	cvt.u64.u32 	%rd90, %r75;
	shl.b64 	%rd91, %rd90, 32;
	or.b64  	%rd92, %rd89, %rd91;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd93, %rd92, %rd88;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r76}, %rd93; }
	cvt.u32.u64 	%r77, %rd93;
	shfl.sync.bfly.b32	%r78, %r77, 8, 31, -1;
	shfl.sync.bfly.b32	%r79, %r76, 8, 31, -1;
	cvt.u64.u32 	%rd94, %r78;
	cvt.u64.u32 	%rd95, %r79;
	shl.b64 	%rd96, %rd95, 32;
	or.b64  	%rd97, %rd94, %rd96;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd98, %rd93, %rd97;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r80}, %rd98; }
	cvt.u32.u64 	%r81, %rd98;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	shfl.sync.bfly.b32	%r83, %r80, 4, 31, -1;
	cvt.u64.u32 	%rd99, %r82;
	cvt.u64.u32 	%rd100, %r83;
	shl.b64 	%rd101, %rd100, 32;
	or.b64  	%rd102, %rd99, %rd101;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd103, %rd98, %rd102;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r84}, %rd103; }
	cvt.u32.u64 	%r85, %rd103;
	shfl.sync.bfly.b32	%r86, %r85, 2, 31, -1;
	shfl.sync.bfly.b32	%r87, %r84, 2, 31, -1;
	cvt.u64.u32 	%rd104, %r86;
	cvt.u64.u32 	%rd105, %r87;
	shl.b64 	%rd106, %rd105, 32;
	or.b64  	%rd107, %rd104, %rd106;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd108, %rd103, %rd107;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r88}, %rd108; }
	cvt.u32.u64 	%r89, %rd108;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	shfl.sync.bfly.b32	%r91, %r88, 1, 31, -1;
	cvt.u64.u32 	%rd109, %r90;
	cvt.u64.u32 	%rd110, %r91;
	shl.b64 	%rd111, %rd110, 32;
	or.b64  	%rd112, %rd109, %rd111;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd11, %rd108, %rd112;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p5 st.shared.b64 [ %r5 + 0 ], %rd11;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b64 %rd12, [ %r6 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r92}, %rd12; }
	cvt.u32.u64 	%r93, %rd12;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	shfl.sync.bfly.b32	%r95, %r92, 1, 31, -1;
	cvt.u64.u32 	%rd113, %r94;
	cvt.u64.u32 	%rd114, %r95;
	shl.b64 	%rd115, %rd114, 32;
	or.b64  	%rd116, %rd113, %rd115;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd13, %rd12, %rd116;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p7 st.shared.b64 [ %r6 + 0 ], %rd13;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd19, [global_smem];
$L__tmp6:
	.loc	1 89 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:89:21
	not.pred 	%p57, %p51;
	.loc	1 90 21                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:90:21
	selp.u64 	%rd117, 1, 0, %p57;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	selp.u32 	%r96, 1, 0, %p57;
	shfl.sync.bfly.b32	%r97, %r96, 16, 31, -1;
	shfl.sync.bfly.b32	%r98, %r23, 16, 31, -1;
	cvt.u64.u32 	%rd118, %r97;
	cvt.u64.u32 	%rd119, %r98;
	shl.b64 	%rd120, %rd119, 32;
	or.b64  	%rd121, %rd118, %rd120;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd122, %rd121, %rd117;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r99}, %rd122; }
	cvt.u32.u64 	%r100, %rd122;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	shfl.sync.bfly.b32	%r102, %r99, 8, 31, -1;
	cvt.u64.u32 	%rd123, %r101;
	cvt.u64.u32 	%rd124, %r102;
	shl.b64 	%rd125, %rd124, 32;
	or.b64  	%rd126, %rd123, %rd125;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd127, %rd122, %rd126;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r103}, %rd127; }
	cvt.u32.u64 	%r104, %rd127;
	shfl.sync.bfly.b32	%r105, %r104, 4, 31, -1;
	shfl.sync.bfly.b32	%r106, %r103, 4, 31, -1;
	cvt.u64.u32 	%rd128, %r105;
	cvt.u64.u32 	%rd129, %r106;
	shl.b64 	%rd130, %rd129, 32;
	or.b64  	%rd131, %rd128, %rd130;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd132, %rd127, %rd131;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r107}, %rd132; }
	cvt.u32.u64 	%r108, %rd132;
	shfl.sync.bfly.b32	%r109, %r108, 2, 31, -1;
	shfl.sync.bfly.b32	%r110, %r107, 2, 31, -1;
	cvt.u64.u32 	%rd133, %r109;
	cvt.u64.u32 	%rd134, %r110;
	shl.b64 	%rd135, %rd134, 32;
	or.b64  	%rd136, %rd133, %rd135;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd137, %rd132, %rd136;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r111}, %rd137; }
	cvt.u32.u64 	%r112, %rd137;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	shfl.sync.bfly.b32	%r114, %r111, 1, 31, -1;
	cvt.u64.u32 	%rd138, %r113;
	cvt.u64.u32 	%rd139, %r114;
	shl.b64 	%rd140, %rd139, 32;
	or.b64  	%rd141, %rd138, %rd140;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd14, %rd137, %rd141;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p5 st.shared.b64 [ %r5 + 0 ], %rd14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b64 %rd15, [ %r6 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r115}, %rd15; }
	cvt.u32.u64 	%r116, %rd15;
	shfl.sync.bfly.b32	%r117, %r116, 1, 31, -1;
	shfl.sync.bfly.b32	%r118, %r115, 1, 31, -1;
	cvt.u64.u32 	%rd142, %r117;
	cvt.u64.u32 	%rd143, %r118;
	shl.b64 	%rd144, %rd143, 32;
	or.b64  	%rd145, %rd142, %rd144;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd16, %rd15, %rd145;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p7 st.shared.b64 [ %r6 + 0 ], %rd16;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd17, [global_smem];
$L__tmp8:
	.loc	1 93 68                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:93:68
	and.b32  	%r119, %r17, 63;
	setp.eq.s32 	%p17, %r119, 0;
	// begin inline asm
	@%p17 st.global.b64 [ %rd18 + 0 ], { %rd17 };
	// end inline asm
	.loc	1 94 68                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:94:68
	// begin inline asm
	@%p17 st.global.b64 [ %rd20 + 0 ], { %rd19 };
	// end inline asm
	.loc	1 95 69                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:95:69
	// begin inline asm
	@%p17 st.global.b64 [ %rd22 + 0 ], { %rd21 };
	// end inline asm
	.loc	1 96 69                         // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:96:69
	// begin inline asm
	@%p17 st.global.b64 [ %rd24 + 0 ], { %rd23 };
	// end inline asm
	.loc	1 96 4                          // cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py:96:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 255                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 117
.b8 117
.b8 107
.b8 107
.b8 54
.b8 118
.b8 50
.b8 105
.b8 116
.b8 55
.b8 122
.b8 121
.b8 115
.b8 109
.b8 122
.b8 101
.b8 50
.b8 110
.b8 54
.b8 50
.b8 55
.b8 101
.b8 52
.b8 116
.b8 113
.b8 52
.b8 52
.b8 97
.b8 107
.b8 102
.b8 122
.b8 101
.b8 103
.b8 121
.b8 122
.b8 121
.b8 113
.b8 106
.b8 52
.b8 118
.b8 119
.b8 103
.b8 116
.b8 115
.b8 53
.b8 113
.b8 51
.b8 54
.b8 52
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x29 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 114
.b8 103
.b8 109
.b8 97
.b8 120
.b8 95
.b8 101
.b8 113
.b8 95
.b8 115
.b8 116
.b8 97
.b8 99
.b8 107
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8c:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 80                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 84                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 88                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 92                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
