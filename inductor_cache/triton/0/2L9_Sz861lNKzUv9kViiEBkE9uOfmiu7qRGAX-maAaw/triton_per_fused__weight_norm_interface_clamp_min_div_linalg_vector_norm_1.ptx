//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1 // -- Begin function triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1
.visible .entry triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_5,
	.param .u32 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_6,
	.param .u32 triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<58>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_0];
	ld.param.u64 	%rd10, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:25:21
	setp.lt.s32 	%p5, %r1, 4;
	ld.param.u64 	%rd11, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_2];
	ld.param.u64 	%rd12, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_3];
	.loc	1 26 34                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:26:34
	mov.u32 	%r21, %tid.x;
	and.b32  	%r22, %r21, 15;
	ld.param.u64 	%rd13, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_4];
	.loc	1 28 21                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:28:21
	setp.lt.u32 	%p11, %r22, 12;
	ld.param.u64 	%rd14, [triton_per_fused__weight_norm_interface_clamp_min_div_linalg_vector_norm_1_param_5];
	.loc	1 31 35                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:31:35
	mad.lo.s32 	%r23, %r1, 12, %r22;
	.loc	1 31 30                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:31:30
	mul.wide.s32 	%rd15, %r23, 4;
	add.s64 	%rd1, %rd11, %rd15;
	.loc	1 31 51                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:31:51
	and.pred  	%p1, %p11, %p5;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 32 30                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:32:30
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd3, %rd12, %rd16;
	.loc	1 32 35                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:32:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 18                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:33:18
	mul.f32 	%f3, %f1, %f1;
	mul.f32 	%f4, %f2, %f2;
	.loc	1 35 41                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:35:41
	selp.f32 	%f5, %f3, 0f00000000, %p1;
	selp.f32 	%f6, %f4, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f5;
	shfl.sync.bfly.b32	%r25, %r24, 8, 31, -1;
	mov.b32 	%f7, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f5, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f8;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f9, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f10;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f11, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f12;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f13, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f6;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f15, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f6, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f16;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f17, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f18;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f19, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f20;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f21, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
$L__tmp2:
	.loc	1 37 26                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:37:26
	sqrt.approx.ftz.f32 	%f23, %f14;
	sqrt.approx.ftz.f32 	%f24, %f22;
	.loc	1 38 18                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:38:18
	mov.b32 	%r10, %f23;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f25, %r8;
	mov.b32 	%r13, %f24;
	// begin inline asm
	div.full.f32 %r11, %r12, %r13;
	// end inline asm
	mov.b32 	%f26, %r11;
	.loc	1 39 18                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:39:18
	mul.f32 	%f27, %f25, %f1;
	mul.f32 	%f28, %f26, %f2;
	.loc	1 40 19                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:40:19
	mul.f32 	%f29, %f27, %f27;
	mul.f32 	%f30, %f28, %f28;
	.loc	1 42 43                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:42:43
	selp.f32 	%f31, %f29, 0f00000000, %p1;
	selp.f32 	%f32, %f30, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f31;
	shfl.sync.bfly.b32	%r41, %r40, 8, 31, -1;
	mov.b32 	%f33, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f31, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f34;
	shfl.sync.bfly.b32	%r43, %r42, 4, 31, -1;
	mov.b32 	%f35, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f36;
	shfl.sync.bfly.b32	%r45, %r44, 2, 31, -1;
	mov.b32 	%f37, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f38;
	shfl.sync.bfly.b32	%r47, %r46, 1, 31, -1;
	mov.b32 	%f39, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f32;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f41, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f32, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f42;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f43, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f44;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f45, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f46;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f47, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
$L__tmp4:
	.loc	1 44 27                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:44:27
	sqrt.approx.ftz.f32 	%f49, %f40;
	sqrt.approx.ftz.f32 	%f50, %f48;
$L__tmp5:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p12, %f49, 0f2B8CBCCC;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p13, %f49, %f49;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f51, %f49, 0f2B8CBCCC, %p13;
	selp.f32 	%f52, %f49, %f51, %p12;
$L__tmp6:
	.loc	1 47 19                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:47:19
	mov.b32 	%r16, %f52;
	mov.b32 	%r15, %f27;
	// begin inline asm
	div.full.f32 %r20, %r15, %r16;
	// end inline asm
	.loc	1 48 4                          // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:48:4
	bar.sync 	0;
	.loc	1 49 28                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:49:28
	add.s64 	%rd5, %rd9, %rd16;
	.loc	1 49 39                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:49:39
	and.b32  	%r56, %r21, 63;
	setp.eq.s32 	%p14, %r56, 0;
	and.pred  	%p7, %p14, %p5;
	// begin inline asm
	@%p7 st.global.b32 [ %rd5 + 0 ], { %r13 };
	// end inline asm
	.loc	1 50 25                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:50:25
	add.s64 	%rd6, %rd13, %rd15;
	.loc	1 50 44                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:50:44
	and.b32  	%r57, %r21, 48;
	setp.eq.s32 	%p15, %r57, 0;
	and.pred  	%p8, %p15, %p1;
	// begin inline asm
	@%p8 st.global.b32 [ %rd6 + 0 ], { %r15 };
	// end inline asm
	.loc	1 51 4                          // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:51:4
	bar.sync 	0;
	.loc	1 52 28                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:52:28
	add.s64 	%rd7, %rd10, %rd16;
	.loc	1 52 40                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:52:40
	mov.b32 	%r19, %f50;
	// begin inline asm
	@%p7 st.global.b32 [ %rd7 + 0 ], { %r19 };
	// end inline asm
	.loc	1 53 25                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:53:25
	add.s64 	%rd8, %rd14, %rd15;
	.loc	1 53 45                         // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:53:45
	// begin inline asm
	@%p8 st.global.b32 [ %rd8 + 0 ], { %r20 };
	// end inline asm
	.loc	1 53 4                          // c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py:53:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/76/c76icyf67se64znft7tlcw2hgedmk26uvkh5wbs5zm7rt4ztmqgr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 267                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x104 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 54
.b8 105
.b8 99
.b8 121
.b8 102
.b8 54
.b8 55
.b8 115
.b8 101
.b8 54
.b8 52
.b8 122
.b8 110
.b8 102
.b8 116
.b8 55
.b8 116
.b8 108
.b8 99
.b8 119
.b8 50
.b8 104
.b8 103
.b8 101
.b8 100
.b8 109
.b8 107
.b8 50
.b8 54
.b8 117
.b8 118
.b8 107
.b8 104
.b8 53
.b8 119
.b8 98
.b8 115
.b8 53
.b8 122
.b8 109
.b8 55
.b8 114
.b8 116
.b8 52
.b8 122
.b8 116
.b8 109
.b8 113
.b8 103
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 109
.b8 105
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb0:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
