; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 3, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 7, !dbg !12
  %.lobit = and i32 %9, 1, !dbg !12
  %10 = or disjoint i32 %7, %.lobit, !dbg !13
  %11 = or disjoint i32 %10, 2, !dbg !13
  %12 = or disjoint i32 %10, 4, !dbg !13
  %13 = or disjoint i32 %10, 6, !dbg !13
  %14 = icmp slt i32 %10, 8, !dbg !14
  %15 = icmp slt i32 %11, 8, !dbg !14
  %16 = icmp slt i32 %12, 8, !dbg !14
  %17 = icmp slt i32 %13, 8, !dbg !14
  %18 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %19 = shl i32 %18, 9, !dbg !16
  %20 = shl i32 %8, 2, !dbg !17
  %21 = and i32 %20, 508, !dbg !17
  %22 = or disjoint i32 %19, %21, !dbg !18
  %23 = icmp slt i32 %22, 6144, !dbg !19
  %24 = mul i32 %10, 6144, !dbg !20
  %25 = mul i32 %11, 6144, !dbg !20
  %26 = mul i32 %12, 6144, !dbg !20
  %27 = mul i32 %13, 6144, !dbg !20
  %28 = add i32 %22, %24, !dbg !21
  %29 = add i32 %22, %25, !dbg !21
  %30 = add i32 %22, %26, !dbg !21
  %31 = add i32 %22, %27, !dbg !21
  %32 = sext i32 %28 to i64, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !22
  %34 = sext i32 %29 to i64, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !22
  %36 = sext i32 %30 to i64, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !22
  %38 = sext i32 %31 to i64, !dbg !22
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !22
  %40 = and i1 %14, %23, !dbg !23
  %41 = and i1 %15, %23, !dbg !23
  %42 = and i1 %16, %23, !dbg !23
  %43 = and i1 %17, %23, !dbg !23
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 %40) #4, !dbg !24
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !24
  %46 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !24
  %47 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !24
  %48 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !24
  %49 = bitcast i32 %45 to float, !dbg !24
  %50 = bitcast i32 %46 to float, !dbg !24
  %51 = bitcast i32 %47 to float, !dbg !24
  %52 = bitcast i32 %48 to float, !dbg !24
  %53 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 %41) #4, !dbg !24
  %54 = extractvalue { i32, i32, i32, i32 } %53, 0, !dbg !24
  %55 = extractvalue { i32, i32, i32, i32 } %53, 1, !dbg !24
  %56 = extractvalue { i32, i32, i32, i32 } %53, 2, !dbg !24
  %57 = extractvalue { i32, i32, i32, i32 } %53, 3, !dbg !24
  %58 = bitcast i32 %54 to float, !dbg !24
  %59 = bitcast i32 %55 to float, !dbg !24
  %60 = bitcast i32 %56 to float, !dbg !24
  %61 = bitcast i32 %57 to float, !dbg !24
  %62 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 %42) #4, !dbg !24
  %63 = extractvalue { i32, i32, i32, i32 } %62, 0, !dbg !24
  %64 = extractvalue { i32, i32, i32, i32 } %62, 1, !dbg !24
  %65 = extractvalue { i32, i32, i32, i32 } %62, 2, !dbg !24
  %66 = extractvalue { i32, i32, i32, i32 } %62, 3, !dbg !24
  %67 = bitcast i32 %63 to float, !dbg !24
  %68 = bitcast i32 %64 to float, !dbg !24
  %69 = bitcast i32 %65 to float, !dbg !24
  %70 = bitcast i32 %66 to float, !dbg !24
  %71 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 %43) #4, !dbg !24
  %72 = extractvalue { i32, i32, i32, i32 } %71, 0, !dbg !24
  %73 = extractvalue { i32, i32, i32, i32 } %71, 1, !dbg !24
  %74 = extractvalue { i32, i32, i32, i32 } %71, 2, !dbg !24
  %75 = extractvalue { i32, i32, i32, i32 } %71, 3, !dbg !24
  %76 = bitcast i32 %72 to float, !dbg !24
  %77 = bitcast i32 %73 to float, !dbg !24
  %78 = bitcast i32 %74 to float, !dbg !24
  %79 = bitcast i32 %75 to float, !dbg !24
  %80 = fmul float %49, %49, !dbg !25
  %81 = fmul float %50, %50, !dbg !25
  %82 = fmul float %51, %51, !dbg !25
  %83 = fmul float %52, %52, !dbg !25
  %84 = fmul float %58, %58, !dbg !25
  %85 = fmul float %59, %59, !dbg !25
  %86 = fmul float %60, %60, !dbg !25
  %87 = fmul float %61, %61, !dbg !25
  %88 = fmul float %67, %67, !dbg !25
  %89 = fmul float %68, %68, !dbg !25
  %90 = fmul float %69, %69, !dbg !25
  %91 = fmul float %70, %70, !dbg !25
  %92 = fmul float %76, %76, !dbg !25
  %93 = fmul float %77, %77, !dbg !25
  %94 = fmul float %78, %78, !dbg !25
  %95 = fmul float %79, %79, !dbg !25
  %96 = fmul float %80, %49, !dbg !26
  %97 = fmul float %81, %50, !dbg !26
  %98 = fmul float %82, %51, !dbg !26
  %99 = fmul float %83, %52, !dbg !26
  %100 = fmul float %84, %58, !dbg !26
  %101 = fmul float %85, %59, !dbg !26
  %102 = fmul float %86, %60, !dbg !26
  %103 = fmul float %87, %61, !dbg !26
  %104 = fmul float %88, %67, !dbg !26
  %105 = fmul float %89, %68, !dbg !26
  %106 = fmul float %90, %69, !dbg !26
  %107 = fmul float %91, %70, !dbg !26
  %108 = fmul float %92, %76, !dbg !26
  %109 = fmul float %93, %77, !dbg !26
  %110 = fmul float %94, %78, !dbg !26
  %111 = fmul float %95, %79, !dbg !26
  %112 = fmul float %96, 0x3FA6E4E260000000, !dbg !27
  %113 = fmul float %97, 0x3FA6E4E260000000, !dbg !27
  %114 = fmul float %98, 0x3FA6E4E260000000, !dbg !27
  %115 = fmul float %99, 0x3FA6E4E260000000, !dbg !27
  %116 = fmul float %100, 0x3FA6E4E260000000, !dbg !27
  %117 = fmul float %101, 0x3FA6E4E260000000, !dbg !27
  %118 = fmul float %102, 0x3FA6E4E260000000, !dbg !27
  %119 = fmul float %103, 0x3FA6E4E260000000, !dbg !27
  %120 = fmul float %104, 0x3FA6E4E260000000, !dbg !27
  %121 = fmul float %105, 0x3FA6E4E260000000, !dbg !27
  %122 = fmul float %106, 0x3FA6E4E260000000, !dbg !27
  %123 = fmul float %107, 0x3FA6E4E260000000, !dbg !27
  %124 = fmul float %108, 0x3FA6E4E260000000, !dbg !27
  %125 = fmul float %109, 0x3FA6E4E260000000, !dbg !27
  %126 = fmul float %110, 0x3FA6E4E260000000, !dbg !27
  %127 = fmul float %111, 0x3FA6E4E260000000, !dbg !27
  %128 = fadd float %112, %49, !dbg !28
  %129 = fadd float %113, %50, !dbg !28
  %130 = fadd float %114, %51, !dbg !28
  %131 = fadd float %115, %52, !dbg !28
  %132 = fadd float %116, %58, !dbg !28
  %133 = fadd float %117, %59, !dbg !28
  %134 = fadd float %118, %60, !dbg !28
  %135 = fadd float %119, %61, !dbg !28
  %136 = fadd float %120, %67, !dbg !28
  %137 = fadd float %121, %68, !dbg !28
  %138 = fadd float %122, %69, !dbg !28
  %139 = fadd float %123, %70, !dbg !28
  %140 = fadd float %124, %76, !dbg !28
  %141 = fadd float %125, %77, !dbg !28
  %142 = fadd float %126, %78, !dbg !28
  %143 = fadd float %127, %79, !dbg !28
  %144 = fmul float %128, 0x3FE9884540000000, !dbg !29
  %145 = fmul float %129, 0x3FE9884540000000, !dbg !29
  %146 = fmul float %130, 0x3FE9884540000000, !dbg !29
  %147 = fmul float %131, 0x3FE9884540000000, !dbg !29
  %148 = fmul float %132, 0x3FE9884540000000, !dbg !29
  %149 = fmul float %133, 0x3FE9884540000000, !dbg !29
  %150 = fmul float %134, 0x3FE9884540000000, !dbg !29
  %151 = fmul float %135, 0x3FE9884540000000, !dbg !29
  %152 = fmul float %136, 0x3FE9884540000000, !dbg !29
  %153 = fmul float %137, 0x3FE9884540000000, !dbg !29
  %154 = fmul float %138, 0x3FE9884540000000, !dbg !29
  %155 = fmul float %139, 0x3FE9884540000000, !dbg !29
  %156 = fmul float %140, 0x3FE9884540000000, !dbg !29
  %157 = fmul float %141, 0x3FE9884540000000, !dbg !29
  %158 = fmul float %142, 0x3FE9884540000000, !dbg !29
  %159 = fmul float %143, 0x3FE9884540000000, !dbg !29
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i = icmp eq i32 %160, 0, !dbg !30
  %161 = tail call float @llvm.nvvm.fabs.ftz.f(float %144) #4, !dbg !30
  %162 = tail call float @llvm.nvvm.fabs.f(float %144) #4, !dbg !30
  %.01.i = select i1 %.not.i, float %162, float %161, !dbg !30
  %163 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %163, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %5
  %164 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %165 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %164) #4, !dbg !30
  %166 = fadd float %165, 1.000000e+00, !dbg !30
  %167 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %166) #5, !dbg !30, !srcloc !31
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i = icmp eq i32 %168, 0, !dbg !30
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %167, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %167, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i = select i1 %.not6.i, float %170, float %169, !dbg !30
  %171 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %171, float 1.000000e+00, float %.03.i, !dbg !30
  %172 = bitcast float %s.0.i to i32, !dbg !30
  %173 = bitcast float %144 to i32, !dbg !30
  %174 = and i32 %173, -2147483648, !dbg !30
  %175 = or i32 %174, %172, !dbg !30
  %176 = bitcast i32 %175 to float, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %5
  %177 = fmul float %144, %144, !dbg !30
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i = icmp eq i32 %178, 0, !dbg !30
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %177, float 0xBFAAC795C0000000) #4, !dbg !30
  %180 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %177, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i = select i1 %.not1.i, float %180, float %179, !dbg !30
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i = icmp eq i32 %181, 0, !dbg !30
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %177, float 0x3FC10B2820000000) #4, !dbg !30
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %177, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i = select i1 %.not2.i, float %183, float %182, !dbg !30
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i = icmp eq i32 %184, 0, !dbg !30
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %177, float 0xBFD5553DA0000000) #4, !dbg !30
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %177, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i = select i1 %.not3.i, float %186, float %185, !dbg !30
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i = icmp eq i32 %187, 0, !dbg !30
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %177, float 0.000000e+00) #4, !dbg !30
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %177, float 0.000000e+00) #4, !dbg !30
  %.04.i = select i1 %.not4.i, float %189, float %188, !dbg !30
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i = icmp eq i32 %190, 0, !dbg !30
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %144, float %144) #4, !dbg !30
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %144, float %144) #4, !dbg !30
  %.02.i = select i1 %.not5.i, float %192, float %191, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %176, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !30
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i34 = icmp eq i32 %193, 0, !dbg !30
  %194 = tail call float @llvm.nvvm.fabs.ftz.f(float %145) #4, !dbg !30
  %195 = tail call float @llvm.nvvm.fabs.f(float %145) #4, !dbg !30
  %.01.i35 = select i1 %.not.i34, float %195, float %194, !dbg !30
  %196 = fcmp ult float %.01.i35, 0x3FE3333340000000, !dbg !30
  br i1 %196, label %__internal_fmad.exit3.i41, label %__internal_fmad.exit1.i36, !dbg !30

__internal_fmad.exit1.i36:                        ; preds = %__nv_tanhf.exit
  %197 = fmul float %.01.i35, 0x4007154760000000, !dbg !30
  %198 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %197) #4, !dbg !30
  %199 = fadd float %198, 1.000000e+00, !dbg !30
  %200 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %199) #5, !dbg !30, !srcloc !31
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i37 = icmp eq i32 %201, 0, !dbg !30
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %200, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %200, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i38 = select i1 %.not6.i37, float %203, float %202, !dbg !30
  %204 = fcmp oge float %.01.i35, 0x4022059680000000, !dbg !30
  %s.0.i39 = select i1 %204, float 1.000000e+00, float %.03.i38, !dbg !30
  %205 = bitcast float %s.0.i39 to i32, !dbg !30
  %206 = bitcast float %145 to i32, !dbg !30
  %207 = and i32 %206, -2147483648, !dbg !30
  %208 = or i32 %207, %205, !dbg !30
  %209 = bitcast i32 %208 to float, !dbg !30
  br label %__nv_tanhf.exit52, !dbg !30

__internal_fmad.exit3.i41:                        ; preds = %__nv_tanhf.exit
  %210 = fmul float %145, %145, !dbg !30
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i42 = icmp eq i32 %211, 0, !dbg !30
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %210, float 0xBFAAC795C0000000) #4, !dbg !30
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %210, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i43 = select i1 %.not1.i42, float %213, float %212, !dbg !30
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i44 = icmp eq i32 %214, 0, !dbg !30
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i43, float %210, float 0x3FC10B2820000000) #4, !dbg !30
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i43, float %210, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i45 = select i1 %.not2.i44, float %216, float %215, !dbg !30
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i46 = icmp eq i32 %217, 0, !dbg !30
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %210, float 0xBFD5553DA0000000) #4, !dbg !30
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %210, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i47 = select i1 %.not3.i46, float %219, float %218, !dbg !30
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i48 = icmp eq i32 %220, 0, !dbg !30
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i47, float %210, float 0.000000e+00) #4, !dbg !30
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i47, float %210, float 0.000000e+00) #4, !dbg !30
  %.04.i49 = select i1 %.not4.i48, float %222, float %221, !dbg !30
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i50 = icmp eq i32 %223, 0, !dbg !30
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i49, float %145, float %145) #4, !dbg !30
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i49, float %145, float %145) #4, !dbg !30
  %.02.i51 = select i1 %.not5.i50, float %225, float %224, !dbg !30
  br label %__nv_tanhf.exit52, !dbg !30

__nv_tanhf.exit52:                                ; preds = %__internal_fmad.exit1.i36, %__internal_fmad.exit3.i41
  %s.1.i40 = phi float [ %209, %__internal_fmad.exit1.i36 ], [ %.02.i51, %__internal_fmad.exit3.i41 ], !dbg !30
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i53 = icmp eq i32 %226, 0, !dbg !30
  %227 = tail call float @llvm.nvvm.fabs.ftz.f(float %146) #4, !dbg !30
  %228 = tail call float @llvm.nvvm.fabs.f(float %146) #4, !dbg !30
  %.01.i54 = select i1 %.not.i53, float %228, float %227, !dbg !30
  %229 = fcmp ult float %.01.i54, 0x3FE3333340000000, !dbg !30
  br i1 %229, label %__internal_fmad.exit3.i60, label %__internal_fmad.exit1.i55, !dbg !30

__internal_fmad.exit1.i55:                        ; preds = %__nv_tanhf.exit52
  %230 = fmul float %.01.i54, 0x4007154760000000, !dbg !30
  %231 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %230) #4, !dbg !30
  %232 = fadd float %231, 1.000000e+00, !dbg !30
  %233 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %232) #5, !dbg !30, !srcloc !31
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i56 = icmp eq i32 %234, 0, !dbg !30
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %233, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %233, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i57 = select i1 %.not6.i56, float %236, float %235, !dbg !30
  %237 = fcmp oge float %.01.i54, 0x4022059680000000, !dbg !30
  %s.0.i58 = select i1 %237, float 1.000000e+00, float %.03.i57, !dbg !30
  %238 = bitcast float %s.0.i58 to i32, !dbg !30
  %239 = bitcast float %146 to i32, !dbg !30
  %240 = and i32 %239, -2147483648, !dbg !30
  %241 = or i32 %240, %238, !dbg !30
  %242 = bitcast i32 %241 to float, !dbg !30
  br label %__nv_tanhf.exit71, !dbg !30

__internal_fmad.exit3.i60:                        ; preds = %__nv_tanhf.exit52
  %243 = fmul float %146, %146, !dbg !30
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i61 = icmp eq i32 %244, 0, !dbg !30
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %243, float 0xBFAAC795C0000000) #4, !dbg !30
  %246 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %243, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i62 = select i1 %.not1.i61, float %246, float %245, !dbg !30
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i63 = icmp eq i32 %247, 0, !dbg !30
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i62, float %243, float 0x3FC10B2820000000) #4, !dbg !30
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i62, float %243, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i64 = select i1 %.not2.i63, float %249, float %248, !dbg !30
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i65 = icmp eq i32 %250, 0, !dbg !30
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i64, float %243, float 0xBFD5553DA0000000) #4, !dbg !30
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i64, float %243, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i66 = select i1 %.not3.i65, float %252, float %251, !dbg !30
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i67 = icmp eq i32 %253, 0, !dbg !30
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i66, float %243, float 0.000000e+00) #4, !dbg !30
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i66, float %243, float 0.000000e+00) #4, !dbg !30
  %.04.i68 = select i1 %.not4.i67, float %255, float %254, !dbg !30
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i69 = icmp eq i32 %256, 0, !dbg !30
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %146, float %146) #4, !dbg !30
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %146, float %146) #4, !dbg !30
  %.02.i70 = select i1 %.not5.i69, float %258, float %257, !dbg !30
  br label %__nv_tanhf.exit71, !dbg !30

__nv_tanhf.exit71:                                ; preds = %__internal_fmad.exit1.i55, %__internal_fmad.exit3.i60
  %s.1.i59 = phi float [ %242, %__internal_fmad.exit1.i55 ], [ %.02.i70, %__internal_fmad.exit3.i60 ], !dbg !30
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i72 = icmp eq i32 %259, 0, !dbg !30
  %260 = tail call float @llvm.nvvm.fabs.ftz.f(float %147) #4, !dbg !30
  %261 = tail call float @llvm.nvvm.fabs.f(float %147) #4, !dbg !30
  %.01.i73 = select i1 %.not.i72, float %261, float %260, !dbg !30
  %262 = fcmp ult float %.01.i73, 0x3FE3333340000000, !dbg !30
  br i1 %262, label %__internal_fmad.exit3.i79, label %__internal_fmad.exit1.i74, !dbg !30

__internal_fmad.exit1.i74:                        ; preds = %__nv_tanhf.exit71
  %263 = fmul float %.01.i73, 0x4007154760000000, !dbg !30
  %264 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %263) #4, !dbg !30
  %265 = fadd float %264, 1.000000e+00, !dbg !30
  %266 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %265) #5, !dbg !30, !srcloc !31
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i75 = icmp eq i32 %267, 0, !dbg !30
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i76 = select i1 %.not6.i75, float %269, float %268, !dbg !30
  %270 = fcmp oge float %.01.i73, 0x4022059680000000, !dbg !30
  %s.0.i77 = select i1 %270, float 1.000000e+00, float %.03.i76, !dbg !30
  %271 = bitcast float %s.0.i77 to i32, !dbg !30
  %272 = bitcast float %147 to i32, !dbg !30
  %273 = and i32 %272, -2147483648, !dbg !30
  %274 = or i32 %273, %271, !dbg !30
  %275 = bitcast i32 %274 to float, !dbg !30
  br label %__nv_tanhf.exit90, !dbg !30

__internal_fmad.exit3.i79:                        ; preds = %__nv_tanhf.exit71
  %276 = fmul float %147, %147, !dbg !30
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i80 = icmp eq i32 %277, 0, !dbg !30
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %276, float 0xBFAAC795C0000000) #4, !dbg !30
  %279 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %276, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i81 = select i1 %.not1.i80, float %279, float %278, !dbg !30
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i82 = icmp eq i32 %280, 0, !dbg !30
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %276, float 0x3FC10B2820000000) #4, !dbg !30
  %282 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %276, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i83 = select i1 %.not2.i82, float %282, float %281, !dbg !30
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i84 = icmp eq i32 %283, 0, !dbg !30
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i83, float %276, float 0xBFD5553DA0000000) #4, !dbg !30
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i83, float %276, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i85 = select i1 %.not3.i84, float %285, float %284, !dbg !30
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i86 = icmp eq i32 %286, 0, !dbg !30
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i85, float %276, float 0.000000e+00) #4, !dbg !30
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i85, float %276, float 0.000000e+00) #4, !dbg !30
  %.04.i87 = select i1 %.not4.i86, float %288, float %287, !dbg !30
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i88 = icmp eq i32 %289, 0, !dbg !30
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i87, float %147, float %147) #4, !dbg !30
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i87, float %147, float %147) #4, !dbg !30
  %.02.i89 = select i1 %.not5.i88, float %291, float %290, !dbg !30
  br label %__nv_tanhf.exit90, !dbg !30

__nv_tanhf.exit90:                                ; preds = %__internal_fmad.exit1.i74, %__internal_fmad.exit3.i79
  %s.1.i78 = phi float [ %275, %__internal_fmad.exit1.i74 ], [ %.02.i89, %__internal_fmad.exit3.i79 ], !dbg !30
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i91 = icmp eq i32 %292, 0, !dbg !30
  %293 = tail call float @llvm.nvvm.fabs.ftz.f(float %148) #4, !dbg !30
  %294 = tail call float @llvm.nvvm.fabs.f(float %148) #4, !dbg !30
  %.01.i92 = select i1 %.not.i91, float %294, float %293, !dbg !30
  %295 = fcmp ult float %.01.i92, 0x3FE3333340000000, !dbg !30
  br i1 %295, label %__internal_fmad.exit3.i98, label %__internal_fmad.exit1.i93, !dbg !30

__internal_fmad.exit1.i93:                        ; preds = %__nv_tanhf.exit90
  %296 = fmul float %.01.i92, 0x4007154760000000, !dbg !30
  %297 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %296) #4, !dbg !30
  %298 = fadd float %297, 1.000000e+00, !dbg !30
  %299 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %298) #5, !dbg !30, !srcloc !31
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i94 = icmp eq i32 %300, 0, !dbg !30
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %299, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %299, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i95 = select i1 %.not6.i94, float %302, float %301, !dbg !30
  %303 = fcmp oge float %.01.i92, 0x4022059680000000, !dbg !30
  %s.0.i96 = select i1 %303, float 1.000000e+00, float %.03.i95, !dbg !30
  %304 = bitcast float %s.0.i96 to i32, !dbg !30
  %305 = bitcast float %148 to i32, !dbg !30
  %306 = and i32 %305, -2147483648, !dbg !30
  %307 = or i32 %306, %304, !dbg !30
  %308 = bitcast i32 %307 to float, !dbg !30
  br label %__nv_tanhf.exit109, !dbg !30

__internal_fmad.exit3.i98:                        ; preds = %__nv_tanhf.exit90
  %309 = fmul float %148, %148, !dbg !30
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i99 = icmp eq i32 %310, 0, !dbg !30
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %309, float 0xBFAAC795C0000000) #4, !dbg !30
  %312 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %309, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i100 = select i1 %.not1.i99, float %312, float %311, !dbg !30
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i101 = icmp eq i32 %313, 0, !dbg !30
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i100, float %309, float 0x3FC10B2820000000) #4, !dbg !30
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i100, float %309, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i102 = select i1 %.not2.i101, float %315, float %314, !dbg !30
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i103 = icmp eq i32 %316, 0, !dbg !30
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i102, float %309, float 0xBFD5553DA0000000) #4, !dbg !30
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i102, float %309, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i104 = select i1 %.not3.i103, float %318, float %317, !dbg !30
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i105 = icmp eq i32 %319, 0, !dbg !30
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i104, float %309, float 0.000000e+00) #4, !dbg !30
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i104, float %309, float 0.000000e+00) #4, !dbg !30
  %.04.i106 = select i1 %.not4.i105, float %321, float %320, !dbg !30
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i107 = icmp eq i32 %322, 0, !dbg !30
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i106, float %148, float %148) #4, !dbg !30
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i106, float %148, float %148) #4, !dbg !30
  %.02.i108 = select i1 %.not5.i107, float %324, float %323, !dbg !30
  br label %__nv_tanhf.exit109, !dbg !30

__nv_tanhf.exit109:                               ; preds = %__internal_fmad.exit1.i93, %__internal_fmad.exit3.i98
  %s.1.i97 = phi float [ %308, %__internal_fmad.exit1.i93 ], [ %.02.i108, %__internal_fmad.exit3.i98 ], !dbg !30
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i110 = icmp eq i32 %325, 0, !dbg !30
  %326 = tail call float @llvm.nvvm.fabs.ftz.f(float %149) #4, !dbg !30
  %327 = tail call float @llvm.nvvm.fabs.f(float %149) #4, !dbg !30
  %.01.i111 = select i1 %.not.i110, float %327, float %326, !dbg !30
  %328 = fcmp ult float %.01.i111, 0x3FE3333340000000, !dbg !30
  br i1 %328, label %__internal_fmad.exit3.i117, label %__internal_fmad.exit1.i112, !dbg !30

__internal_fmad.exit1.i112:                       ; preds = %__nv_tanhf.exit109
  %329 = fmul float %.01.i111, 0x4007154760000000, !dbg !30
  %330 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %329) #4, !dbg !30
  %331 = fadd float %330, 1.000000e+00, !dbg !30
  %332 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %331) #5, !dbg !30, !srcloc !31
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i113 = icmp eq i32 %333, 0, !dbg !30
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %332, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %332, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i114 = select i1 %.not6.i113, float %335, float %334, !dbg !30
  %336 = fcmp oge float %.01.i111, 0x4022059680000000, !dbg !30
  %s.0.i115 = select i1 %336, float 1.000000e+00, float %.03.i114, !dbg !30
  %337 = bitcast float %s.0.i115 to i32, !dbg !30
  %338 = bitcast float %149 to i32, !dbg !30
  %339 = and i32 %338, -2147483648, !dbg !30
  %340 = or i32 %339, %337, !dbg !30
  %341 = bitcast i32 %340 to float, !dbg !30
  br label %__nv_tanhf.exit128, !dbg !30

__internal_fmad.exit3.i117:                       ; preds = %__nv_tanhf.exit109
  %342 = fmul float %149, %149, !dbg !30
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i118 = icmp eq i32 %343, 0, !dbg !30
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %342, float 0xBFAAC795C0000000) #4, !dbg !30
  %345 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %342, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i119 = select i1 %.not1.i118, float %345, float %344, !dbg !30
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i120 = icmp eq i32 %346, 0, !dbg !30
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i119, float %342, float 0x3FC10B2820000000) #4, !dbg !30
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i119, float %342, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i121 = select i1 %.not2.i120, float %348, float %347, !dbg !30
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i122 = icmp eq i32 %349, 0, !dbg !30
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i121, float %342, float 0xBFD5553DA0000000) #4, !dbg !30
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i121, float %342, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i123 = select i1 %.not3.i122, float %351, float %350, !dbg !30
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i124 = icmp eq i32 %352, 0, !dbg !30
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i123, float %342, float 0.000000e+00) #4, !dbg !30
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i123, float %342, float 0.000000e+00) #4, !dbg !30
  %.04.i125 = select i1 %.not4.i124, float %354, float %353, !dbg !30
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i126 = icmp eq i32 %355, 0, !dbg !30
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i125, float %149, float %149) #4, !dbg !30
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i125, float %149, float %149) #4, !dbg !30
  %.02.i127 = select i1 %.not5.i126, float %357, float %356, !dbg !30
  br label %__nv_tanhf.exit128, !dbg !30

__nv_tanhf.exit128:                               ; preds = %__internal_fmad.exit1.i112, %__internal_fmad.exit3.i117
  %s.1.i116 = phi float [ %341, %__internal_fmad.exit1.i112 ], [ %.02.i127, %__internal_fmad.exit3.i117 ], !dbg !30
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i129 = icmp eq i32 %358, 0, !dbg !30
  %359 = tail call float @llvm.nvvm.fabs.ftz.f(float %150) #4, !dbg !30
  %360 = tail call float @llvm.nvvm.fabs.f(float %150) #4, !dbg !30
  %.01.i130 = select i1 %.not.i129, float %360, float %359, !dbg !30
  %361 = fcmp ult float %.01.i130, 0x3FE3333340000000, !dbg !30
  br i1 %361, label %__internal_fmad.exit3.i136, label %__internal_fmad.exit1.i131, !dbg !30

__internal_fmad.exit1.i131:                       ; preds = %__nv_tanhf.exit128
  %362 = fmul float %.01.i130, 0x4007154760000000, !dbg !30
  %363 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %362) #4, !dbg !30
  %364 = fadd float %363, 1.000000e+00, !dbg !30
  %365 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %364) #5, !dbg !30, !srcloc !31
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i132 = icmp eq i32 %366, 0, !dbg !30
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %365, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %365, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i133 = select i1 %.not6.i132, float %368, float %367, !dbg !30
  %369 = fcmp oge float %.01.i130, 0x4022059680000000, !dbg !30
  %s.0.i134 = select i1 %369, float 1.000000e+00, float %.03.i133, !dbg !30
  %370 = bitcast float %s.0.i134 to i32, !dbg !30
  %371 = bitcast float %150 to i32, !dbg !30
  %372 = and i32 %371, -2147483648, !dbg !30
  %373 = or i32 %372, %370, !dbg !30
  %374 = bitcast i32 %373 to float, !dbg !30
  br label %__nv_tanhf.exit147, !dbg !30

__internal_fmad.exit3.i136:                       ; preds = %__nv_tanhf.exit128
  %375 = fmul float %150, %150, !dbg !30
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i137 = icmp eq i32 %376, 0, !dbg !30
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %375, float 0xBFAAC795C0000000) #4, !dbg !30
  %378 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %375, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i138 = select i1 %.not1.i137, float %378, float %377, !dbg !30
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i139 = icmp eq i32 %379, 0, !dbg !30
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %375, float 0x3FC10B2820000000) #4, !dbg !30
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %375, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i140 = select i1 %.not2.i139, float %381, float %380, !dbg !30
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i141 = icmp eq i32 %382, 0, !dbg !30
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i140, float %375, float 0xBFD5553DA0000000) #4, !dbg !30
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i140, float %375, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i142 = select i1 %.not3.i141, float %384, float %383, !dbg !30
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i143 = icmp eq i32 %385, 0, !dbg !30
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %375, float 0.000000e+00) #4, !dbg !30
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %375, float 0.000000e+00) #4, !dbg !30
  %.04.i144 = select i1 %.not4.i143, float %387, float %386, !dbg !30
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i145 = icmp eq i32 %388, 0, !dbg !30
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i144, float %150, float %150) #4, !dbg !30
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i144, float %150, float %150) #4, !dbg !30
  %.02.i146 = select i1 %.not5.i145, float %390, float %389, !dbg !30
  br label %__nv_tanhf.exit147, !dbg !30

__nv_tanhf.exit147:                               ; preds = %__internal_fmad.exit1.i131, %__internal_fmad.exit3.i136
  %s.1.i135 = phi float [ %374, %__internal_fmad.exit1.i131 ], [ %.02.i146, %__internal_fmad.exit3.i136 ], !dbg !30
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i148 = icmp eq i32 %391, 0, !dbg !30
  %392 = tail call float @llvm.nvvm.fabs.ftz.f(float %151) #4, !dbg !30
  %393 = tail call float @llvm.nvvm.fabs.f(float %151) #4, !dbg !30
  %.01.i149 = select i1 %.not.i148, float %393, float %392, !dbg !30
  %394 = fcmp ult float %.01.i149, 0x3FE3333340000000, !dbg !30
  br i1 %394, label %__internal_fmad.exit3.i155, label %__internal_fmad.exit1.i150, !dbg !30

__internal_fmad.exit1.i150:                       ; preds = %__nv_tanhf.exit147
  %395 = fmul float %.01.i149, 0x4007154760000000, !dbg !30
  %396 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %395) #4, !dbg !30
  %397 = fadd float %396, 1.000000e+00, !dbg !30
  %398 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %397) #5, !dbg !30, !srcloc !31
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i151 = icmp eq i32 %399, 0, !dbg !30
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %398, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %398, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i152 = select i1 %.not6.i151, float %401, float %400, !dbg !30
  %402 = fcmp oge float %.01.i149, 0x4022059680000000, !dbg !30
  %s.0.i153 = select i1 %402, float 1.000000e+00, float %.03.i152, !dbg !30
  %403 = bitcast float %s.0.i153 to i32, !dbg !30
  %404 = bitcast float %151 to i32, !dbg !30
  %405 = and i32 %404, -2147483648, !dbg !30
  %406 = or i32 %405, %403, !dbg !30
  %407 = bitcast i32 %406 to float, !dbg !30
  br label %__nv_tanhf.exit166, !dbg !30

__internal_fmad.exit3.i155:                       ; preds = %__nv_tanhf.exit147
  %408 = fmul float %151, %151, !dbg !30
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i156 = icmp eq i32 %409, 0, !dbg !30
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %408, float 0xBFAAC795C0000000) #4, !dbg !30
  %411 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %408, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i157 = select i1 %.not1.i156, float %411, float %410, !dbg !30
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i158 = icmp eq i32 %412, 0, !dbg !30
  %413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i157, float %408, float 0x3FC10B2820000000) #4, !dbg !30
  %414 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i157, float %408, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i159 = select i1 %.not2.i158, float %414, float %413, !dbg !30
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i160 = icmp eq i32 %415, 0, !dbg !30
  %416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i159, float %408, float 0xBFD5553DA0000000) #4, !dbg !30
  %417 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i159, float %408, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i161 = select i1 %.not3.i160, float %417, float %416, !dbg !30
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i162 = icmp eq i32 %418, 0, !dbg !30
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i161, float %408, float 0.000000e+00) #4, !dbg !30
  %420 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i161, float %408, float 0.000000e+00) #4, !dbg !30
  %.04.i163 = select i1 %.not4.i162, float %420, float %419, !dbg !30
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i164 = icmp eq i32 %421, 0, !dbg !30
  %422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i163, float %151, float %151) #4, !dbg !30
  %423 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i163, float %151, float %151) #4, !dbg !30
  %.02.i165 = select i1 %.not5.i164, float %423, float %422, !dbg !30
  br label %__nv_tanhf.exit166, !dbg !30

__nv_tanhf.exit166:                               ; preds = %__internal_fmad.exit1.i150, %__internal_fmad.exit3.i155
  %s.1.i154 = phi float [ %407, %__internal_fmad.exit1.i150 ], [ %.02.i165, %__internal_fmad.exit3.i155 ], !dbg !30
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i167 = icmp eq i32 %424, 0, !dbg !30
  %425 = tail call float @llvm.nvvm.fabs.ftz.f(float %152) #4, !dbg !30
  %426 = tail call float @llvm.nvvm.fabs.f(float %152) #4, !dbg !30
  %.01.i168 = select i1 %.not.i167, float %426, float %425, !dbg !30
  %427 = fcmp ult float %.01.i168, 0x3FE3333340000000, !dbg !30
  br i1 %427, label %__internal_fmad.exit3.i174, label %__internal_fmad.exit1.i169, !dbg !30

__internal_fmad.exit1.i169:                       ; preds = %__nv_tanhf.exit166
  %428 = fmul float %.01.i168, 0x4007154760000000, !dbg !30
  %429 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %428) #4, !dbg !30
  %430 = fadd float %429, 1.000000e+00, !dbg !30
  %431 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %430) #5, !dbg !30, !srcloc !31
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i170 = icmp eq i32 %432, 0, !dbg !30
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %431, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %431, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i171 = select i1 %.not6.i170, float %434, float %433, !dbg !30
  %435 = fcmp oge float %.01.i168, 0x4022059680000000, !dbg !30
  %s.0.i172 = select i1 %435, float 1.000000e+00, float %.03.i171, !dbg !30
  %436 = bitcast float %s.0.i172 to i32, !dbg !30
  %437 = bitcast float %152 to i32, !dbg !30
  %438 = and i32 %437, -2147483648, !dbg !30
  %439 = or i32 %438, %436, !dbg !30
  %440 = bitcast i32 %439 to float, !dbg !30
  br label %__nv_tanhf.exit185, !dbg !30

__internal_fmad.exit3.i174:                       ; preds = %__nv_tanhf.exit166
  %441 = fmul float %152, %152, !dbg !30
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i175 = icmp eq i32 %442, 0, !dbg !30
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %441, float 0xBFAAC795C0000000) #4, !dbg !30
  %444 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %441, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i176 = select i1 %.not1.i175, float %444, float %443, !dbg !30
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i177 = icmp eq i32 %445, 0, !dbg !30
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i176, float %441, float 0x3FC10B2820000000) #4, !dbg !30
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i176, float %441, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i178 = select i1 %.not2.i177, float %447, float %446, !dbg !30
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i179 = icmp eq i32 %448, 0, !dbg !30
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i178, float %441, float 0xBFD5553DA0000000) #4, !dbg !30
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i178, float %441, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i180 = select i1 %.not3.i179, float %450, float %449, !dbg !30
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i181 = icmp eq i32 %451, 0, !dbg !30
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i180, float %441, float 0.000000e+00) #4, !dbg !30
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i180, float %441, float 0.000000e+00) #4, !dbg !30
  %.04.i182 = select i1 %.not4.i181, float %453, float %452, !dbg !30
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i183 = icmp eq i32 %454, 0, !dbg !30
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i182, float %152, float %152) #4, !dbg !30
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i182, float %152, float %152) #4, !dbg !30
  %.02.i184 = select i1 %.not5.i183, float %456, float %455, !dbg !30
  br label %__nv_tanhf.exit185, !dbg !30

__nv_tanhf.exit185:                               ; preds = %__internal_fmad.exit1.i169, %__internal_fmad.exit3.i174
  %s.1.i173 = phi float [ %440, %__internal_fmad.exit1.i169 ], [ %.02.i184, %__internal_fmad.exit3.i174 ], !dbg !30
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i186 = icmp eq i32 %457, 0, !dbg !30
  %458 = tail call float @llvm.nvvm.fabs.ftz.f(float %153) #4, !dbg !30
  %459 = tail call float @llvm.nvvm.fabs.f(float %153) #4, !dbg !30
  %.01.i187 = select i1 %.not.i186, float %459, float %458, !dbg !30
  %460 = fcmp ult float %.01.i187, 0x3FE3333340000000, !dbg !30
  br i1 %460, label %__internal_fmad.exit3.i193, label %__internal_fmad.exit1.i188, !dbg !30

__internal_fmad.exit1.i188:                       ; preds = %__nv_tanhf.exit185
  %461 = fmul float %.01.i187, 0x4007154760000000, !dbg !30
  %462 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %461) #4, !dbg !30
  %463 = fadd float %462, 1.000000e+00, !dbg !30
  %464 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %463) #5, !dbg !30, !srcloc !31
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i189 = icmp eq i32 %465, 0, !dbg !30
  %466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %464, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %467 = tail call float @llvm.nvvm.fma.rn.f(float %464, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i190 = select i1 %.not6.i189, float %467, float %466, !dbg !30
  %468 = fcmp oge float %.01.i187, 0x4022059680000000, !dbg !30
  %s.0.i191 = select i1 %468, float 1.000000e+00, float %.03.i190, !dbg !30
  %469 = bitcast float %s.0.i191 to i32, !dbg !30
  %470 = bitcast float %153 to i32, !dbg !30
  %471 = and i32 %470, -2147483648, !dbg !30
  %472 = or i32 %471, %469, !dbg !30
  %473 = bitcast i32 %472 to float, !dbg !30
  br label %__nv_tanhf.exit204, !dbg !30

__internal_fmad.exit3.i193:                       ; preds = %__nv_tanhf.exit185
  %474 = fmul float %153, %153, !dbg !30
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i194 = icmp eq i32 %475, 0, !dbg !30
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %474, float 0xBFAAC795C0000000) #4, !dbg !30
  %477 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %474, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i195 = select i1 %.not1.i194, float %477, float %476, !dbg !30
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i196 = icmp eq i32 %478, 0, !dbg !30
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i195, float %474, float 0x3FC10B2820000000) #4, !dbg !30
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i195, float %474, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i197 = select i1 %.not2.i196, float %480, float %479, !dbg !30
  %481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i198 = icmp eq i32 %481, 0, !dbg !30
  %482 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i197, float %474, float 0xBFD5553DA0000000) #4, !dbg !30
  %483 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i197, float %474, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i199 = select i1 %.not3.i198, float %483, float %482, !dbg !30
  %484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i200 = icmp eq i32 %484, 0, !dbg !30
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i199, float %474, float 0.000000e+00) #4, !dbg !30
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i199, float %474, float 0.000000e+00) #4, !dbg !30
  %.04.i201 = select i1 %.not4.i200, float %486, float %485, !dbg !30
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i202 = icmp eq i32 %487, 0, !dbg !30
  %488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i201, float %153, float %153) #4, !dbg !30
  %489 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i201, float %153, float %153) #4, !dbg !30
  %.02.i203 = select i1 %.not5.i202, float %489, float %488, !dbg !30
  br label %__nv_tanhf.exit204, !dbg !30

__nv_tanhf.exit204:                               ; preds = %__internal_fmad.exit1.i188, %__internal_fmad.exit3.i193
  %s.1.i192 = phi float [ %473, %__internal_fmad.exit1.i188 ], [ %.02.i203, %__internal_fmad.exit3.i193 ], !dbg !30
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i205 = icmp eq i32 %490, 0, !dbg !30
  %491 = tail call float @llvm.nvvm.fabs.ftz.f(float %154) #4, !dbg !30
  %492 = tail call float @llvm.nvvm.fabs.f(float %154) #4, !dbg !30
  %.01.i206 = select i1 %.not.i205, float %492, float %491, !dbg !30
  %493 = fcmp ult float %.01.i206, 0x3FE3333340000000, !dbg !30
  br i1 %493, label %__internal_fmad.exit3.i212, label %__internal_fmad.exit1.i207, !dbg !30

__internal_fmad.exit1.i207:                       ; preds = %__nv_tanhf.exit204
  %494 = fmul float %.01.i206, 0x4007154760000000, !dbg !30
  %495 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %494) #4, !dbg !30
  %496 = fadd float %495, 1.000000e+00, !dbg !30
  %497 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %496) #5, !dbg !30, !srcloc !31
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i208 = icmp eq i32 %498, 0, !dbg !30
  %499 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %497, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %500 = tail call float @llvm.nvvm.fma.rn.f(float %497, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i209 = select i1 %.not6.i208, float %500, float %499, !dbg !30
  %501 = fcmp oge float %.01.i206, 0x4022059680000000, !dbg !30
  %s.0.i210 = select i1 %501, float 1.000000e+00, float %.03.i209, !dbg !30
  %502 = bitcast float %s.0.i210 to i32, !dbg !30
  %503 = bitcast float %154 to i32, !dbg !30
  %504 = and i32 %503, -2147483648, !dbg !30
  %505 = or i32 %504, %502, !dbg !30
  %506 = bitcast i32 %505 to float, !dbg !30
  br label %__nv_tanhf.exit223, !dbg !30

__internal_fmad.exit3.i212:                       ; preds = %__nv_tanhf.exit204
  %507 = fmul float %154, %154, !dbg !30
  %508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i213 = icmp eq i32 %508, 0, !dbg !30
  %509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %507, float 0xBFAAC795C0000000) #4, !dbg !30
  %510 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %507, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i214 = select i1 %.not1.i213, float %510, float %509, !dbg !30
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i215 = icmp eq i32 %511, 0, !dbg !30
  %512 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i214, float %507, float 0x3FC10B2820000000) #4, !dbg !30
  %513 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i214, float %507, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i216 = select i1 %.not2.i215, float %513, float %512, !dbg !30
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i217 = icmp eq i32 %514, 0, !dbg !30
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i216, float %507, float 0xBFD5553DA0000000) #4, !dbg !30
  %516 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i216, float %507, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i218 = select i1 %.not3.i217, float %516, float %515, !dbg !30
  %517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i219 = icmp eq i32 %517, 0, !dbg !30
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i218, float %507, float 0.000000e+00) #4, !dbg !30
  %519 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i218, float %507, float 0.000000e+00) #4, !dbg !30
  %.04.i220 = select i1 %.not4.i219, float %519, float %518, !dbg !30
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i221 = icmp eq i32 %520, 0, !dbg !30
  %521 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i220, float %154, float %154) #4, !dbg !30
  %522 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i220, float %154, float %154) #4, !dbg !30
  %.02.i222 = select i1 %.not5.i221, float %522, float %521, !dbg !30
  br label %__nv_tanhf.exit223, !dbg !30

__nv_tanhf.exit223:                               ; preds = %__internal_fmad.exit1.i207, %__internal_fmad.exit3.i212
  %s.1.i211 = phi float [ %506, %__internal_fmad.exit1.i207 ], [ %.02.i222, %__internal_fmad.exit3.i212 ], !dbg !30
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i224 = icmp eq i32 %523, 0, !dbg !30
  %524 = tail call float @llvm.nvvm.fabs.ftz.f(float %155) #4, !dbg !30
  %525 = tail call float @llvm.nvvm.fabs.f(float %155) #4, !dbg !30
  %.01.i225 = select i1 %.not.i224, float %525, float %524, !dbg !30
  %526 = fcmp ult float %.01.i225, 0x3FE3333340000000, !dbg !30
  br i1 %526, label %__internal_fmad.exit3.i231, label %__internal_fmad.exit1.i226, !dbg !30

__internal_fmad.exit1.i226:                       ; preds = %__nv_tanhf.exit223
  %527 = fmul float %.01.i225, 0x4007154760000000, !dbg !30
  %528 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %527) #4, !dbg !30
  %529 = fadd float %528, 1.000000e+00, !dbg !30
  %530 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %529) #5, !dbg !30, !srcloc !31
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i227 = icmp eq i32 %531, 0, !dbg !30
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %530, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %530, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i228 = select i1 %.not6.i227, float %533, float %532, !dbg !30
  %534 = fcmp oge float %.01.i225, 0x4022059680000000, !dbg !30
  %s.0.i229 = select i1 %534, float 1.000000e+00, float %.03.i228, !dbg !30
  %535 = bitcast float %s.0.i229 to i32, !dbg !30
  %536 = bitcast float %155 to i32, !dbg !30
  %537 = and i32 %536, -2147483648, !dbg !30
  %538 = or i32 %537, %535, !dbg !30
  %539 = bitcast i32 %538 to float, !dbg !30
  br label %__nv_tanhf.exit242, !dbg !30

__internal_fmad.exit3.i231:                       ; preds = %__nv_tanhf.exit223
  %540 = fmul float %155, %155, !dbg !30
  %541 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i232 = icmp eq i32 %541, 0, !dbg !30
  %542 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %540, float 0xBFAAC795C0000000) #4, !dbg !30
  %543 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %540, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i233 = select i1 %.not1.i232, float %543, float %542, !dbg !30
  %544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i234 = icmp eq i32 %544, 0, !dbg !30
  %545 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i233, float %540, float 0x3FC10B2820000000) #4, !dbg !30
  %546 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i233, float %540, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i235 = select i1 %.not2.i234, float %546, float %545, !dbg !30
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i236 = icmp eq i32 %547, 0, !dbg !30
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i235, float %540, float 0xBFD5553DA0000000) #4, !dbg !30
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i235, float %540, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i237 = select i1 %.not3.i236, float %549, float %548, !dbg !30
  %550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i238 = icmp eq i32 %550, 0, !dbg !30
  %551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i237, float %540, float 0.000000e+00) #4, !dbg !30
  %552 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i237, float %540, float 0.000000e+00) #4, !dbg !30
  %.04.i239 = select i1 %.not4.i238, float %552, float %551, !dbg !30
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i240 = icmp eq i32 %553, 0, !dbg !30
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i239, float %155, float %155) #4, !dbg !30
  %555 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i239, float %155, float %155) #4, !dbg !30
  %.02.i241 = select i1 %.not5.i240, float %555, float %554, !dbg !30
  br label %__nv_tanhf.exit242, !dbg !30

__nv_tanhf.exit242:                               ; preds = %__internal_fmad.exit1.i226, %__internal_fmad.exit3.i231
  %s.1.i230 = phi float [ %539, %__internal_fmad.exit1.i226 ], [ %.02.i241, %__internal_fmad.exit3.i231 ], !dbg !30
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i243 = icmp eq i32 %556, 0, !dbg !30
  %557 = tail call float @llvm.nvvm.fabs.ftz.f(float %156) #4, !dbg !30
  %558 = tail call float @llvm.nvvm.fabs.f(float %156) #4, !dbg !30
  %.01.i244 = select i1 %.not.i243, float %558, float %557, !dbg !30
  %559 = fcmp ult float %.01.i244, 0x3FE3333340000000, !dbg !30
  br i1 %559, label %__internal_fmad.exit3.i250, label %__internal_fmad.exit1.i245, !dbg !30

__internal_fmad.exit1.i245:                       ; preds = %__nv_tanhf.exit242
  %560 = fmul float %.01.i244, 0x4007154760000000, !dbg !30
  %561 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %560) #4, !dbg !30
  %562 = fadd float %561, 1.000000e+00, !dbg !30
  %563 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %562) #5, !dbg !30, !srcloc !31
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i246 = icmp eq i32 %564, 0, !dbg !30
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %563, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %563, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i247 = select i1 %.not6.i246, float %566, float %565, !dbg !30
  %567 = fcmp oge float %.01.i244, 0x4022059680000000, !dbg !30
  %s.0.i248 = select i1 %567, float 1.000000e+00, float %.03.i247, !dbg !30
  %568 = bitcast float %s.0.i248 to i32, !dbg !30
  %569 = bitcast float %156 to i32, !dbg !30
  %570 = and i32 %569, -2147483648, !dbg !30
  %571 = or i32 %570, %568, !dbg !30
  %572 = bitcast i32 %571 to float, !dbg !30
  br label %__nv_tanhf.exit261, !dbg !30

__internal_fmad.exit3.i250:                       ; preds = %__nv_tanhf.exit242
  %573 = fmul float %156, %156, !dbg !30
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i251 = icmp eq i32 %574, 0, !dbg !30
  %575 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %573, float 0xBFAAC795C0000000) #4, !dbg !30
  %576 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %573, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i252 = select i1 %.not1.i251, float %576, float %575, !dbg !30
  %577 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i253 = icmp eq i32 %577, 0, !dbg !30
  %578 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i252, float %573, float 0x3FC10B2820000000) #4, !dbg !30
  %579 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i252, float %573, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i254 = select i1 %.not2.i253, float %579, float %578, !dbg !30
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i255 = icmp eq i32 %580, 0, !dbg !30
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i254, float %573, float 0xBFD5553DA0000000) #4, !dbg !30
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i254, float %573, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i256 = select i1 %.not3.i255, float %582, float %581, !dbg !30
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i257 = icmp eq i32 %583, 0, !dbg !30
  %584 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i256, float %573, float 0.000000e+00) #4, !dbg !30
  %585 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i256, float %573, float 0.000000e+00) #4, !dbg !30
  %.04.i258 = select i1 %.not4.i257, float %585, float %584, !dbg !30
  %586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i259 = icmp eq i32 %586, 0, !dbg !30
  %587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i258, float %156, float %156) #4, !dbg !30
  %588 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i258, float %156, float %156) #4, !dbg !30
  %.02.i260 = select i1 %.not5.i259, float %588, float %587, !dbg !30
  br label %__nv_tanhf.exit261, !dbg !30

__nv_tanhf.exit261:                               ; preds = %__internal_fmad.exit1.i245, %__internal_fmad.exit3.i250
  %s.1.i249 = phi float [ %572, %__internal_fmad.exit1.i245 ], [ %.02.i260, %__internal_fmad.exit3.i250 ], !dbg !30
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i262 = icmp eq i32 %589, 0, !dbg !30
  %590 = tail call float @llvm.nvvm.fabs.ftz.f(float %157) #4, !dbg !30
  %591 = tail call float @llvm.nvvm.fabs.f(float %157) #4, !dbg !30
  %.01.i263 = select i1 %.not.i262, float %591, float %590, !dbg !30
  %592 = fcmp ult float %.01.i263, 0x3FE3333340000000, !dbg !30
  br i1 %592, label %__internal_fmad.exit3.i269, label %__internal_fmad.exit1.i264, !dbg !30

__internal_fmad.exit1.i264:                       ; preds = %__nv_tanhf.exit261
  %593 = fmul float %.01.i263, 0x4007154760000000, !dbg !30
  %594 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %593) #4, !dbg !30
  %595 = fadd float %594, 1.000000e+00, !dbg !30
  %596 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %595) #5, !dbg !30, !srcloc !31
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i265 = icmp eq i32 %597, 0, !dbg !30
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %596, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %596, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i266 = select i1 %.not6.i265, float %599, float %598, !dbg !30
  %600 = fcmp oge float %.01.i263, 0x4022059680000000, !dbg !30
  %s.0.i267 = select i1 %600, float 1.000000e+00, float %.03.i266, !dbg !30
  %601 = bitcast float %s.0.i267 to i32, !dbg !30
  %602 = bitcast float %157 to i32, !dbg !30
  %603 = and i32 %602, -2147483648, !dbg !30
  %604 = or i32 %603, %601, !dbg !30
  %605 = bitcast i32 %604 to float, !dbg !30
  br label %__nv_tanhf.exit280, !dbg !30

__internal_fmad.exit3.i269:                       ; preds = %__nv_tanhf.exit261
  %606 = fmul float %157, %157, !dbg !30
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i270 = icmp eq i32 %607, 0, !dbg !30
  %608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %606, float 0xBFAAC795C0000000) #4, !dbg !30
  %609 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %606, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i271 = select i1 %.not1.i270, float %609, float %608, !dbg !30
  %610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i272 = icmp eq i32 %610, 0, !dbg !30
  %611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i271, float %606, float 0x3FC10B2820000000) #4, !dbg !30
  %612 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i271, float %606, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i273 = select i1 %.not2.i272, float %612, float %611, !dbg !30
  %613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i274 = icmp eq i32 %613, 0, !dbg !30
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i273, float %606, float 0xBFD5553DA0000000) #4, !dbg !30
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i273, float %606, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i275 = select i1 %.not3.i274, float %615, float %614, !dbg !30
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i276 = icmp eq i32 %616, 0, !dbg !30
  %617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i275, float %606, float 0.000000e+00) #4, !dbg !30
  %618 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i275, float %606, float 0.000000e+00) #4, !dbg !30
  %.04.i277 = select i1 %.not4.i276, float %618, float %617, !dbg !30
  %619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i278 = icmp eq i32 %619, 0, !dbg !30
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i277, float %157, float %157) #4, !dbg !30
  %621 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i277, float %157, float %157) #4, !dbg !30
  %.02.i279 = select i1 %.not5.i278, float %621, float %620, !dbg !30
  br label %__nv_tanhf.exit280, !dbg !30

__nv_tanhf.exit280:                               ; preds = %__internal_fmad.exit1.i264, %__internal_fmad.exit3.i269
  %s.1.i268 = phi float [ %605, %__internal_fmad.exit1.i264 ], [ %.02.i279, %__internal_fmad.exit3.i269 ], !dbg !30
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i281 = icmp eq i32 %622, 0, !dbg !30
  %623 = tail call float @llvm.nvvm.fabs.ftz.f(float %158) #4, !dbg !30
  %624 = tail call float @llvm.nvvm.fabs.f(float %158) #4, !dbg !30
  %.01.i282 = select i1 %.not.i281, float %624, float %623, !dbg !30
  %625 = fcmp ult float %.01.i282, 0x3FE3333340000000, !dbg !30
  br i1 %625, label %__internal_fmad.exit3.i288, label %__internal_fmad.exit1.i283, !dbg !30

__internal_fmad.exit1.i283:                       ; preds = %__nv_tanhf.exit280
  %626 = fmul float %.01.i282, 0x4007154760000000, !dbg !30
  %627 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %626) #4, !dbg !30
  %628 = fadd float %627, 1.000000e+00, !dbg !30
  %629 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %628) #5, !dbg !30, !srcloc !31
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i284 = icmp eq i32 %630, 0, !dbg !30
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %629, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %629, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i285 = select i1 %.not6.i284, float %632, float %631, !dbg !30
  %633 = fcmp oge float %.01.i282, 0x4022059680000000, !dbg !30
  %s.0.i286 = select i1 %633, float 1.000000e+00, float %.03.i285, !dbg !30
  %634 = bitcast float %s.0.i286 to i32, !dbg !30
  %635 = bitcast float %158 to i32, !dbg !30
  %636 = and i32 %635, -2147483648, !dbg !30
  %637 = or i32 %636, %634, !dbg !30
  %638 = bitcast i32 %637 to float, !dbg !30
  br label %__nv_tanhf.exit299, !dbg !30

__internal_fmad.exit3.i288:                       ; preds = %__nv_tanhf.exit280
  %639 = fmul float %158, %158, !dbg !30
  %640 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i289 = icmp eq i32 %640, 0, !dbg !30
  %641 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %639, float 0xBFAAC795C0000000) #4, !dbg !30
  %642 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %639, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i290 = select i1 %.not1.i289, float %642, float %641, !dbg !30
  %643 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i291 = icmp eq i32 %643, 0, !dbg !30
  %644 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i290, float %639, float 0x3FC10B2820000000) #4, !dbg !30
  %645 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i290, float %639, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i292 = select i1 %.not2.i291, float %645, float %644, !dbg !30
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i293 = icmp eq i32 %646, 0, !dbg !30
  %647 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i292, float %639, float 0xBFD5553DA0000000) #4, !dbg !30
  %648 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i292, float %639, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i294 = select i1 %.not3.i293, float %648, float %647, !dbg !30
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i295 = icmp eq i32 %649, 0, !dbg !30
  %650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i294, float %639, float 0.000000e+00) #4, !dbg !30
  %651 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i294, float %639, float 0.000000e+00) #4, !dbg !30
  %.04.i296 = select i1 %.not4.i295, float %651, float %650, !dbg !30
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i297 = icmp eq i32 %652, 0, !dbg !30
  %653 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i296, float %158, float %158) #4, !dbg !30
  %654 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i296, float %158, float %158) #4, !dbg !30
  %.02.i298 = select i1 %.not5.i297, float %654, float %653, !dbg !30
  br label %__nv_tanhf.exit299, !dbg !30

__nv_tanhf.exit299:                               ; preds = %__internal_fmad.exit1.i283, %__internal_fmad.exit3.i288
  %s.1.i287 = phi float [ %638, %__internal_fmad.exit1.i283 ], [ %.02.i298, %__internal_fmad.exit3.i288 ], !dbg !30
  %655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i300 = icmp eq i32 %655, 0, !dbg !30
  %656 = tail call float @llvm.nvvm.fabs.ftz.f(float %159) #4, !dbg !30
  %657 = tail call float @llvm.nvvm.fabs.f(float %159) #4, !dbg !30
  %.01.i301 = select i1 %.not.i300, float %657, float %656, !dbg !30
  %658 = fcmp ult float %.01.i301, 0x3FE3333340000000, !dbg !30
  br i1 %658, label %__internal_fmad.exit3.i307, label %__internal_fmad.exit1.i302, !dbg !30

__internal_fmad.exit1.i302:                       ; preds = %__nv_tanhf.exit299
  %659 = fmul float %.01.i301, 0x4007154760000000, !dbg !30
  %660 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %659) #4, !dbg !30
  %661 = fadd float %660, 1.000000e+00, !dbg !30
  %662 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %661) #5, !dbg !30, !srcloc !31
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i303 = icmp eq i32 %663, 0, !dbg !30
  %664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %662, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %665 = tail call float @llvm.nvvm.fma.rn.f(float %662, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i304 = select i1 %.not6.i303, float %665, float %664, !dbg !30
  %666 = fcmp oge float %.01.i301, 0x4022059680000000, !dbg !30
  %s.0.i305 = select i1 %666, float 1.000000e+00, float %.03.i304, !dbg !30
  %667 = bitcast float %s.0.i305 to i32, !dbg !30
  %668 = bitcast float %159 to i32, !dbg !30
  %669 = and i32 %668, -2147483648, !dbg !30
  %670 = or i32 %669, %667, !dbg !30
  %671 = bitcast i32 %670 to float, !dbg !30
  br label %__nv_tanhf.exit318, !dbg !30

__internal_fmad.exit3.i307:                       ; preds = %__nv_tanhf.exit299
  %672 = fmul float %159, %159, !dbg !30
  %673 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i308 = icmp eq i32 %673, 0, !dbg !30
  %674 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %672, float 0xBFAAC795C0000000) #4, !dbg !30
  %675 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %672, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i309 = select i1 %.not1.i308, float %675, float %674, !dbg !30
  %676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i310 = icmp eq i32 %676, 0, !dbg !30
  %677 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i309, float %672, float 0x3FC10B2820000000) #4, !dbg !30
  %678 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i309, float %672, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i311 = select i1 %.not2.i310, float %678, float %677, !dbg !30
  %679 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i312 = icmp eq i32 %679, 0, !dbg !30
  %680 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i311, float %672, float 0xBFD5553DA0000000) #4, !dbg !30
  %681 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i311, float %672, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i313 = select i1 %.not3.i312, float %681, float %680, !dbg !30
  %682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i314 = icmp eq i32 %682, 0, !dbg !30
  %683 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i313, float %672, float 0.000000e+00) #4, !dbg !30
  %684 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i313, float %672, float 0.000000e+00) #4, !dbg !30
  %.04.i315 = select i1 %.not4.i314, float %684, float %683, !dbg !30
  %685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i316 = icmp eq i32 %685, 0, !dbg !30
  %686 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i315, float %159, float %159) #4, !dbg !30
  %687 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i315, float %159, float %159) #4, !dbg !30
  %.02.i317 = select i1 %.not5.i316, float %687, float %686, !dbg !30
  br label %__nv_tanhf.exit318, !dbg !30

__nv_tanhf.exit318:                               ; preds = %__internal_fmad.exit1.i302, %__internal_fmad.exit3.i307
  %s.1.i306 = phi float [ %671, %__internal_fmad.exit1.i302 ], [ %.02.i317, %__internal_fmad.exit3.i307 ], !dbg !30
  %688 = lshr i32 %8, 2, !dbg !17
  %689 = and i32 %688, 63, !dbg !17
  %690 = or disjoint i32 %689, %19, !dbg !18
  %691 = or disjoint i32 %690, 448, !dbg !18
  %692 = icmp slt i32 %691, 6144, !dbg !19
  %693 = shl i32 %8, 1, !dbg !12
  %694 = and i32 %693, 6, !dbg !12
  %695 = or disjoint i32 %7, %694, !dbg !13
  %696 = icmp slt i32 %695, 8, !dbg !14
  %697 = and i1 %696, %692, !dbg !23
  %698 = or disjoint i32 %690, 384, !dbg !18
  %699 = icmp slt i32 %698, 6144, !dbg !19
  %700 = and i1 %696, %699, !dbg !23
  %701 = or disjoint i32 %690, 320, !dbg !18
  %702 = icmp slt i32 %701, 6144, !dbg !19
  %703 = and i1 %696, %702, !dbg !23
  %704 = or disjoint i32 %690, 256, !dbg !18
  %705 = icmp slt i32 %704, 6144, !dbg !19
  %706 = and i1 %696, %705, !dbg !23
  %707 = or disjoint i32 %690, 192, !dbg !18
  %708 = icmp slt i32 %707, 6144, !dbg !19
  %709 = and i1 %696, %708, !dbg !23
  %710 = or disjoint i32 %690, 128, !dbg !18
  %711 = icmp slt i32 %710, 6144, !dbg !19
  %712 = and i1 %696, %711, !dbg !23
  %713 = or disjoint i32 %690, 64, !dbg !18
  %714 = icmp slt i32 %713, 6144, !dbg !19
  %715 = and i1 %696, %714, !dbg !23
  %716 = icmp slt i32 %690, 6144, !dbg !19
  %717 = and i1 %696, %716, !dbg !23
  %718 = ashr exact i32 %695, 1, !dbg !32
  %719 = fmul float %49, 5.000000e-01, !dbg !33
  %720 = fmul float %50, 5.000000e-01, !dbg !33
  %721 = fmul float %51, 5.000000e-01, !dbg !33
  %722 = fmul float %52, 5.000000e-01, !dbg !33
  %723 = fmul float %58, 5.000000e-01, !dbg !33
  %724 = fmul float %59, 5.000000e-01, !dbg !33
  %725 = fmul float %60, 5.000000e-01, !dbg !33
  %726 = fmul float %61, 5.000000e-01, !dbg !33
  %727 = fmul float %67, 5.000000e-01, !dbg !33
  %728 = fmul float %68, 5.000000e-01, !dbg !33
  %729 = fmul float %69, 5.000000e-01, !dbg !33
  %730 = fmul float %70, 5.000000e-01, !dbg !33
  %731 = fmul float %76, 5.000000e-01, !dbg !33
  %732 = fmul float %77, 5.000000e-01, !dbg !33
  %733 = fmul float %78, 5.000000e-01, !dbg !33
  %734 = fmul float %79, 5.000000e-01, !dbg !33
  %735 = fadd float %s.1.i, 1.000000e+00, !dbg !34
  %736 = fadd float %s.1.i40, 1.000000e+00, !dbg !34
  %737 = fadd float %s.1.i59, 1.000000e+00, !dbg !34
  %738 = fadd float %s.1.i78, 1.000000e+00, !dbg !34
  %739 = fadd float %s.1.i97, 1.000000e+00, !dbg !34
  %740 = fadd float %s.1.i116, 1.000000e+00, !dbg !34
  %741 = fadd float %s.1.i135, 1.000000e+00, !dbg !34
  %742 = fadd float %s.1.i154, 1.000000e+00, !dbg !34
  %743 = fadd float %s.1.i173, 1.000000e+00, !dbg !34
  %744 = fadd float %s.1.i192, 1.000000e+00, !dbg !34
  %745 = fadd float %s.1.i211, 1.000000e+00, !dbg !34
  %746 = fadd float %s.1.i230, 1.000000e+00, !dbg !34
  %747 = fadd float %s.1.i249, 1.000000e+00, !dbg !34
  %748 = fadd float %s.1.i268, 1.000000e+00, !dbg !34
  %749 = fadd float %s.1.i287, 1.000000e+00, !dbg !34
  %750 = fadd float %s.1.i306, 1.000000e+00, !dbg !34
  %751 = fmul float %719, %735, !dbg !35
  %752 = fmul float %720, %736, !dbg !35
  %753 = fmul float %721, %737, !dbg !35
  %754 = fmul float %722, %738, !dbg !35
  %755 = fmul float %723, %739, !dbg !35
  %756 = fmul float %724, %740, !dbg !35
  %757 = fmul float %725, %741, !dbg !35
  %758 = fmul float %726, %742, !dbg !35
  %759 = fmul float %727, %743, !dbg !35
  %760 = fmul float %728, %744, !dbg !35
  %761 = fmul float %729, %745, !dbg !35
  %762 = fmul float %730, %746, !dbg !35
  %763 = fmul float %731, %747, !dbg !35
  %764 = fmul float %732, %748, !dbg !35
  %765 = fmul float %733, %749, !dbg !35
  %766 = fmul float %734, %750, !dbg !35
  %767 = shl i32 %690, 1, !dbg !36
  %768 = shl i32 %713, 1, !dbg !36
  %769 = shl i32 %710, 1, !dbg !36
  %770 = shl i32 %707, 1, !dbg !36
  %771 = shl i32 %704, 1, !dbg !36
  %772 = shl i32 %701, 1, !dbg !36
  %773 = shl i32 %698, 1, !dbg !36
  %774 = shl i32 %691, 1, !dbg !36
  %775 = mul i32 %718, 12288, !dbg !37
  %776 = add i32 %767, %775, !dbg !38
  %777 = add i32 %768, %775, !dbg !38
  %778 = add i32 %769, %775, !dbg !38
  %779 = add i32 %770, %775, !dbg !38
  %780 = add i32 %771, %775, !dbg !38
  %781 = add i32 %772, %775, !dbg !38
  %782 = add i32 %773, %775, !dbg !38
  %783 = add i32 %774, %775, !dbg !38
  %784 = sext i32 %776 to i64, !dbg !39
  %785 = getelementptr float, ptr addrspace(1) %1, i64 %784, !dbg !39
  %786 = sext i32 %777 to i64, !dbg !39
  %787 = getelementptr float, ptr addrspace(1) %1, i64 %786, !dbg !39
  %788 = sext i32 %778 to i64, !dbg !39
  %789 = getelementptr float, ptr addrspace(1) %1, i64 %788, !dbg !39
  %790 = sext i32 %779 to i64, !dbg !39
  %791 = getelementptr float, ptr addrspace(1) %1, i64 %790, !dbg !39
  %792 = sext i32 %780 to i64, !dbg !39
  %793 = getelementptr float, ptr addrspace(1) %1, i64 %792, !dbg !39
  %794 = sext i32 %781 to i64, !dbg !39
  %795 = getelementptr float, ptr addrspace(1) %1, i64 %794, !dbg !39
  %796 = sext i32 %782 to i64, !dbg !39
  %797 = getelementptr float, ptr addrspace(1) %1, i64 %796, !dbg !39
  %798 = sext i32 %783 to i64, !dbg !39
  %799 = getelementptr float, ptr addrspace(1) %1, i64 %798, !dbg !39
  %800 = shl i32 %8, 5, !dbg !40
  %801 = and i32 %800, 4064, !dbg !40
  %802 = or disjoint i32 %801, %.lobit, !dbg !40
  %803 = and i32 %693, 510, !dbg !40
  %804 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %801, !dbg !40
  %805 = getelementptr float, ptr addrspace(3) %804, i32 %802, !dbg !40
  %806 = bitcast float %s.1.i to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %805, <1 x i32> %806, i1 true) #4, !dbg !40
  %807 = or disjoint i32 %802, 8, !dbg !40
  %808 = lshr i32 %807, 2, !dbg !40
  %809 = getelementptr float, ptr addrspace(3) @global_smem, i32 %808, !dbg !40
  %810 = getelementptr float, ptr addrspace(3) %809, i32 %807, !dbg !40
  %811 = bitcast float %s.1.i40 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %810, <1 x i32> %811, i1 true) #4, !dbg !40
  %812 = or disjoint i32 %802, 16, !dbg !40
  %813 = lshr i32 %812, 2, !dbg !40
  %814 = getelementptr float, ptr addrspace(3) @global_smem, i32 %813, !dbg !40
  %815 = getelementptr float, ptr addrspace(3) %814, i32 %812, !dbg !40
  %816 = bitcast float %s.1.i59 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %815, <1 x i32> %816, i1 true) #4, !dbg !40
  %817 = or disjoint i32 %802, 24, !dbg !40
  %818 = lshr i32 %817, 2, !dbg !40
  %819 = getelementptr float, ptr addrspace(3) @global_smem, i32 %818, !dbg !40
  %820 = getelementptr float, ptr addrspace(3) %819, i32 %817, !dbg !40
  %821 = bitcast float %s.1.i78 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %820, <1 x i32> %821, i1 true) #4, !dbg !40
  %822 = or disjoint i32 %802, 2, !dbg !40
  %823 = getelementptr float, ptr addrspace(3) %804, i32 %822, !dbg !40
  %824 = bitcast float %s.1.i97 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %823, <1 x i32> %824, i1 true) #4, !dbg !40
  %825 = or disjoint i32 %802, 10, !dbg !40
  %826 = lshr i32 %825, 2, !dbg !40
  %827 = getelementptr float, ptr addrspace(3) @global_smem, i32 %826, !dbg !40
  %828 = getelementptr float, ptr addrspace(3) %827, i32 %825, !dbg !40
  %829 = bitcast float %s.1.i116 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %828, <1 x i32> %829, i1 true) #4, !dbg !40
  %830 = or disjoint i32 %802, 18, !dbg !40
  %831 = lshr i32 %830, 2, !dbg !40
  %832 = getelementptr float, ptr addrspace(3) @global_smem, i32 %831, !dbg !40
  %833 = getelementptr float, ptr addrspace(3) %832, i32 %830, !dbg !40
  %834 = bitcast float %s.1.i135 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %833, <1 x i32> %834, i1 true) #4, !dbg !40
  %835 = or disjoint i32 %802, 26, !dbg !40
  %836 = lshr i32 %835, 2, !dbg !40
  %837 = getelementptr float, ptr addrspace(3) @global_smem, i32 %836, !dbg !40
  %838 = getelementptr float, ptr addrspace(3) %837, i32 %835, !dbg !40
  %839 = bitcast float %s.1.i154 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %838, <1 x i32> %839, i1 true) #4, !dbg !40
  %840 = or disjoint i32 %802, 4, !dbg !40
  %841 = getelementptr float, ptr addrspace(3) %804, i32 %840, !dbg !40
  %842 = bitcast float %s.1.i173 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %841, <1 x i32> %842, i1 true) #4, !dbg !40
  %843 = or disjoint i32 %802, 12, !dbg !40
  %844 = lshr i32 %843, 2, !dbg !40
  %845 = and i32 %844, 1018, !dbg !40
  %846 = getelementptr float, ptr addrspace(3) @global_smem, i32 %845, !dbg !40
  %847 = getelementptr float, ptr addrspace(3) %846, i32 %843, !dbg !40
  %848 = bitcast float %s.1.i192 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %847, <1 x i32> %848, i1 true) #4, !dbg !40
  %849 = or disjoint i32 %802, 20, !dbg !40
  %850 = lshr i32 %849, 2, !dbg !40
  %851 = and i32 %850, 1020, !dbg !40
  %852 = getelementptr float, ptr addrspace(3) @global_smem, i32 %851, !dbg !40
  %853 = getelementptr float, ptr addrspace(3) %852, i32 %849, !dbg !40
  %854 = bitcast float %s.1.i211 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %853, <1 x i32> %854, i1 true) #4, !dbg !40
  %855 = or disjoint i32 %802, 28, !dbg !40
  %856 = lshr i32 %855, 2, !dbg !40
  %857 = and i32 %856, 1022, !dbg !40
  %858 = getelementptr float, ptr addrspace(3) @global_smem, i32 %857, !dbg !40
  %859 = getelementptr float, ptr addrspace(3) %858, i32 %855, !dbg !40
  %860 = bitcast float %s.1.i230 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %859, <1 x i32> %860, i1 true) #4, !dbg !40
  %861 = or disjoint i32 %802, 6, !dbg !40
  %862 = getelementptr float, ptr addrspace(3) %804, i32 %861, !dbg !40
  %863 = bitcast float %s.1.i249 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %862, <1 x i32> %863, i1 true) #4, !dbg !40
  %864 = or disjoint i32 %802, 14, !dbg !40
  %865 = lshr i32 %864, 2, !dbg !40
  %866 = and i32 %865, 1018, !dbg !40
  %867 = getelementptr float, ptr addrspace(3) @global_smem, i32 %866, !dbg !40
  %868 = getelementptr float, ptr addrspace(3) %867, i32 %864, !dbg !40
  %869 = bitcast float %s.1.i268 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %868, <1 x i32> %869, i1 true) #4, !dbg !40
  %870 = or disjoint i32 %802, 22, !dbg !40
  %871 = lshr i32 %870, 2, !dbg !40
  %872 = and i32 %871, 1020, !dbg !40
  %873 = getelementptr float, ptr addrspace(3) @global_smem, i32 %872, !dbg !40
  %874 = getelementptr float, ptr addrspace(3) %873, i32 %870, !dbg !40
  %875 = bitcast float %s.1.i287 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %874, <1 x i32> %875, i1 true) #4, !dbg !40
  %876 = or disjoint i32 %802, 30, !dbg !40
  %877 = lshr i32 %876, 2, !dbg !40
  %878 = and i32 %877, 1022, !dbg !40
  %879 = getelementptr float, ptr addrspace(3) @global_smem, i32 %878, !dbg !40
  %880 = getelementptr float, ptr addrspace(3) %879, i32 %876, !dbg !40
  %881 = bitcast float %s.1.i306 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %880, <1 x i32> %881, i1 true) #4, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %882 = lshr i32 %693, 2, !dbg !40
  %883 = and i32 %882, 126, !dbg !40
  %884 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %883, !dbg !40
  %885 = getelementptr inbounds float, ptr addrspace(3) %884, i32 %803, !dbg !40
  %886 = load <2 x i32>, ptr addrspace(3) %885, align 8, !dbg !40
  %887 = or disjoint i32 %803, 512, !dbg !40
  %888 = lshr i32 %887, 2, !dbg !40
  %889 = and i32 %888, 254, !dbg !40
  %890 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %889, !dbg !40
  %891 = getelementptr inbounds float, ptr addrspace(3) %890, i32 %887, !dbg !40
  %892 = load <2 x i32>, ptr addrspace(3) %891, align 8, !dbg !40
  %893 = or disjoint i32 %803, 1024, !dbg !40
  %894 = lshr i32 %893, 2, !dbg !40
  %895 = and i32 %894, 382, !dbg !40
  %896 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %895, !dbg !40
  %897 = getelementptr inbounds float, ptr addrspace(3) %896, i32 %893, !dbg !40
  %898 = load <2 x i32>, ptr addrspace(3) %897, align 8, !dbg !40
  %899 = or disjoint i32 %803, 1536, !dbg !40
  %900 = lshr i32 %899, 2, !dbg !40
  %901 = and i32 %900, 510, !dbg !40
  %902 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %901, !dbg !40
  %903 = getelementptr inbounds float, ptr addrspace(3) %902, i32 %899, !dbg !40
  %904 = load <2 x i32>, ptr addrspace(3) %903, align 8, !dbg !40
  %905 = or disjoint i32 %803, 2048, !dbg !40
  %906 = lshr i32 %905, 2, !dbg !40
  %907 = and i32 %906, 638, !dbg !40
  %908 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %907, !dbg !40
  %909 = getelementptr inbounds float, ptr addrspace(3) %908, i32 %905, !dbg !40
  %910 = load <2 x i32>, ptr addrspace(3) %909, align 8, !dbg !40
  %911 = or disjoint i32 %803, 2560, !dbg !40
  %912 = lshr i32 %911, 2, !dbg !40
  %913 = and i32 %912, 766, !dbg !40
  %914 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %913, !dbg !40
  %915 = getelementptr inbounds float, ptr addrspace(3) %914, i32 %911, !dbg !40
  %916 = load <2 x i32>, ptr addrspace(3) %915, align 8, !dbg !40
  %917 = or disjoint i32 %803, 3072, !dbg !40
  %918 = lshr i32 %917, 2, !dbg !40
  %919 = and i32 %918, 894, !dbg !40
  %920 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %919, !dbg !40
  %921 = getelementptr inbounds float, ptr addrspace(3) %920, i32 %917, !dbg !40
  %922 = load <2 x i32>, ptr addrspace(3) %921, align 8, !dbg !40
  %923 = or disjoint i32 %803, 3584, !dbg !40
  %924 = lshr i32 %923, 2, !dbg !40
  %925 = and i32 %924, 1022, !dbg !40
  %926 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %925, !dbg !40
  %927 = getelementptr inbounds float, ptr addrspace(3) %926, i32 %923, !dbg !40
  %928 = load <2 x i32>, ptr addrspace(3) %927, align 8, !dbg !40
  %.extract = extractelement <2 x i32> %886, i64 0, !dbg !40
  %.extract19 = extractelement <2 x i32> %886, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract19, ptr addrspace(1) %785, i1 %717) #4, !dbg !40
  %.extract20 = extractelement <2 x i32> %892, i64 0, !dbg !40
  %.extract21 = extractelement <2 x i32> %892, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract20, i32 %.extract21, ptr addrspace(1) %787, i1 %715) #4, !dbg !40
  %.extract22 = extractelement <2 x i32> %898, i64 0, !dbg !40
  %.extract23 = extractelement <2 x i32> %898, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract22, i32 %.extract23, ptr addrspace(1) %789, i1 %712) #4, !dbg !40
  %.extract24 = extractelement <2 x i32> %904, i64 0, !dbg !40
  %.extract25 = extractelement <2 x i32> %904, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract24, i32 %.extract25, ptr addrspace(1) %791, i1 %709) #4, !dbg !40
  %.extract26 = extractelement <2 x i32> %910, i64 0, !dbg !40
  %.extract27 = extractelement <2 x i32> %910, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract26, i32 %.extract27, ptr addrspace(1) %793, i1 %706) #4, !dbg !40
  %.extract28 = extractelement <2 x i32> %916, i64 0, !dbg !40
  %.extract29 = extractelement <2 x i32> %916, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract28, i32 %.extract29, ptr addrspace(1) %795, i1 %703) #4, !dbg !40
  %.extract30 = extractelement <2 x i32> %922, i64 0, !dbg !40
  %.extract31 = extractelement <2 x i32> %922, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract30, i32 %.extract31, ptr addrspace(1) %797, i1 %700) #4, !dbg !40
  %.extract32 = extractelement <2 x i32> %928, i64 0, !dbg !40
  %.extract33 = extractelement <2 x i32> %928, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract32, i32 %.extract33, ptr addrspace(1) %799, i1 %697) #4, !dbg !40
  %929 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !41
  %930 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !41
  %931 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !41
  %932 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !41
  %933 = bitcast float %751 to i32, !dbg !42
  %934 = bitcast float %752 to i32, !dbg !42
  %935 = bitcast float %753 to i32, !dbg !42
  %936 = bitcast float %754 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %933, i32 %934, i32 %935, i32 %936, ptr addrspace(1) %929, i1 %40) #4, !dbg !42
  %937 = bitcast float %755 to i32, !dbg !42
  %938 = bitcast float %756 to i32, !dbg !42
  %939 = bitcast float %757 to i32, !dbg !42
  %940 = bitcast float %758 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %937, i32 %938, i32 %939, i32 %940, ptr addrspace(1) %930, i1 %41) #4, !dbg !42
  %941 = bitcast float %759 to i32, !dbg !42
  %942 = bitcast float %760 to i32, !dbg !42
  %943 = bitcast float %761 to i32, !dbg !42
  %944 = bitcast float %762 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %941, i32 %942, i32 %943, i32 %944, ptr addrspace(1) %931, i1 %42) #4, !dbg !42
  %945 = bitcast float %763 to i32, !dbg !42
  %946 = bitcast float %764 to i32, !dbg !42
  %947 = bitcast float %765 to i32, !dbg !42
  %948 = bitcast float %766 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %945, i32 %946, i32 %947, i32 %948, ptr addrspace(1) %932, i1 %43) #4, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4nkrwp6be2ogbx5ka2eic3cwlkfflhxjrq47e3utyyelfokvjwu.py", directory: "inductor_cache/4n")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_33, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_33", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 32, column: 40, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 32, column: 45, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 26, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 31, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 32, scope: !7)
!37 = !DILocation(line: 46, column: 43, scope: !7)
!38 = !DILocation(line: 46, column: 37, scope: !7)
!39 = !DILocation(line: 46, column: 25, scope: !7)
!40 = !DILocation(line: 46, column: 54, scope: !7)
!41 = !DILocation(line: 47, column: 25, scope: !7)
!42 = !DILocation(line: 47, column: 47, scope: !7)
!43 = !DILocation(line: 47, column: 4, scope: !7)
