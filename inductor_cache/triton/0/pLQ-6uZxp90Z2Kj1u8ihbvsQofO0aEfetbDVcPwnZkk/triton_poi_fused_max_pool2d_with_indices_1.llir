; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = sdiv i32 %9, 16, !dbg !14
  %11 = shl i32 %10, 6, !dbg !15
  %12 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %13 = insertelement <2 x i32> %12, i32 %10, i64 1, !dbg !16
  %14 = srem <2 x i32> %13, splat (i32 16), !dbg !16
  %15 = extractelement <2 x i32> %14, i64 1, !dbg !17
  %16 = icmp sgt i32 %15, 0, !dbg !18
  %17 = extractelement <2 x i32> %14, i64 0, !dbg !17
  %18 = shl nsw i32 %17, 1, !dbg !19
  %19 = icmp sgt <2 x i32> %14, <i32 0, i32 -1>, !dbg !20
  %20 = extractelement <2 x i1> %19, i64 0, !dbg !21
  %21 = and i1 %20, %16, !dbg !21
  %22 = add i32 %11, %18, !dbg !22
  %23 = add i32 %22, -33, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %21, i32 -8388608, i1 %21) #1, !dbg !25
  %27 = bitcast i32 %26 to float, !dbg !25
  %28 = icmp sgt i32 %17, -1, !dbg !26
  %29 = and i1 %28, %16, !dbg !27
  %30 = add i32 %22, -32, !dbg !28
  %31 = sext i32 %30 to i64, !dbg !29
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %29, i32 -8388608, i1 %29) #1, !dbg !30
  %34 = bitcast i32 %33 to float, !dbg !30
  %35 = fcmp ogt float %34, %27, !dbg !31
  %36 = fcmp uno float %34, 0.000000e+00, !dbg !35
  %37 = or i1 %35, %36, !dbg !36
  %38 = select i1 %37, float %34, float %27, !dbg !37
  %39 = add i32 %22, -31, !dbg !38
  %40 = sext i32 %39 to i64, !dbg !39
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !39
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %29, i32 -8388608, i1 %29) #1, !dbg !40
  %43 = bitcast i32 %42 to float, !dbg !40
  %44 = fcmp olt float %38, %43, !dbg !41
  %45 = fcmp uno float %43, 0.000000e+00, !dbg !43
  %46 = or i1 %45, %44, !dbg !44
  %47 = select i1 %46, float %43, float %38, !dbg !45
  %48 = extractelement <2 x i1> %19, i64 1, !dbg !46
  %49 = and i1 %20, %48, !dbg !46
  %50 = add i32 %22, -1, !dbg !47
  %51 = sext i32 %50 to i64, !dbg !48
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !48
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %49, i32 -8388608, i1 %49) #1, !dbg !49
  %54 = bitcast i32 %53 to float, !dbg !49
  %55 = fcmp olt float %47, %54, !dbg !50
  %56 = fcmp uno float %54, 0.000000e+00, !dbg !52
  %57 = or i1 %56, %55, !dbg !53
  %58 = select i1 %57, float %54, float %47, !dbg !54
  %59 = or i32 %15, %17, !dbg !17
  %60 = icmp sgt i32 %59, -1, !dbg !17
  %61 = sext i32 %22 to i64, !dbg !55
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !55
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %60, i32 -8388608, i1 %60) #1, !dbg !56
  %64 = bitcast i32 %63 to float, !dbg !56
  %65 = fcmp olt float %58, %64, !dbg !57
  %66 = fcmp uno float %64, 0.000000e+00, !dbg !59
  %67 = or i1 %66, %65, !dbg !60
  %68 = select i1 %67, float %64, float %58, !dbg !61
  %69 = or disjoint i32 %22, 1, !dbg !62
  %70 = sext i32 %69 to i64, !dbg !63
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !63
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %60, i32 -8388608, i1 %60) #1, !dbg !64
  %73 = bitcast i32 %72 to float, !dbg !64
  %74 = fcmp olt float %68, %73, !dbg !65
  %75 = fcmp uno float %73, 0.000000e+00, !dbg !67
  %76 = or i1 %75, %74, !dbg !68
  %77 = select i1 %76, float %73, float %68, !dbg !69
  %78 = add i32 %22, 31, !dbg !70
  %79 = sext i32 %78 to i64, !dbg !71
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !71
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %49, i32 -8388608, i1 %49) #1, !dbg !72
  %82 = bitcast i32 %81 to float, !dbg !72
  %83 = fcmp olt float %77, %82, !dbg !73
  %84 = fcmp uno float %82, 0.000000e+00, !dbg !75
  %85 = or i1 %84, %83, !dbg !76
  %86 = select i1 %85, float %82, float %77, !dbg !77
  %87 = add i32 %22, 32, !dbg !78
  %88 = sext i32 %87 to i64, !dbg !79
  %89 = getelementptr float, ptr addrspace(1) %0, i64 %88, !dbg !79
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %89, i1 %60, i32 -8388608, i1 %60) #1, !dbg !80
  %91 = bitcast i32 %90 to float, !dbg !80
  %92 = fcmp olt float %86, %91, !dbg !81
  %93 = fcmp uno float %91, 0.000000e+00, !dbg !83
  %94 = or i1 %93, %92, !dbg !84
  %95 = select i1 %94, float %91, float %86, !dbg !85
  %96 = add i32 %22, 33, !dbg !86
  %97 = sext i32 %96 to i64, !dbg !87
  %98 = getelementptr float, ptr addrspace(1) %0, i64 %97, !dbg !87
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %98, i1 %60, i32 -8388608, i1 %60) #1, !dbg !88
  %100 = bitcast i32 %99 to float, !dbg !88
  %101 = fcmp olt float %95, %100, !dbg !89
  %102 = fcmp uno float %100, 0.000000e+00, !dbg !91
  %103 = or i1 %102, %101, !dbg !92
  %104 = zext i1 %35 to i8, !dbg !93
  %105 = select i1 %44, i8 2, i8 %104, !dbg !94
  %106 = select i1 %55, i8 3, i8 %105, !dbg !95
  %107 = select i1 %65, i8 4, i8 %106, !dbg !96
  %108 = select i1 %74, i8 5, i8 %107, !dbg !97
  %109 = select i1 %83, i8 6, i8 %108, !dbg !98
  %110 = select i1 %92, i8 7, i8 %109, !dbg !99
  %111 = select i1 %101, i8 8, i8 %110, !dbg !100
  %112 = sext i32 %9 to i64, !dbg !101
  %113 = getelementptr float, ptr addrspace(1) %1, i64 %112, !dbg !101
  %114 = bitcast float %95 to i32, !dbg !102
  %115 = select i1 %103, i32 %99, i32 %114, !dbg !103
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %115, ptr addrspace(1) %113, i1 true) #1, !dbg !102
  %116 = getelementptr i8, ptr addrspace(1) %2, i64 %112, !dbg !104
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %111, ptr addrspace(1) %116, i1 true) #1, !dbg !105
  ret void, !dbg !106
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfbrdquw7vtwtfmjklut2fk347kpenecgihcdwp7cifowhsxw7ya.py", directory: "inductor_cache/fb")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_1", linkageName: "triton_poi_fused_max_pool2d_with_indices_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 39, column: 49, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 61, column: 20, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 34, column: 20, scope: !7)
!20 = !DILocation(line: 35, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 39, column: 39, scope: !7)
!23 = !DILocation(line: 39, column: 46, scope: !7)
!24 = !DILocation(line: 39, column: 31, scope: !7)
!25 = !DILocation(line: 39, column: 54, scope: !7)
!26 = !DILocation(line: 41, column: 21, scope: !7)
!27 = !DILocation(line: 44, column: 19, scope: !7)
!28 = !DILocation(line: 45, column: 46, scope: !7)
!29 = !DILocation(line: 45, column: 31, scope: !7)
!30 = !DILocation(line: 45, column: 54, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 46, column: 42, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 52, column: 46, scope: !7)
!39 = !DILocation(line: 52, column: 31, scope: !7)
!40 = !DILocation(line: 52, column: 54, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !42)
!42 = !DILocation(line: 53, column: 42, scope: !7)
!43 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !42)
!44 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !42)
!45 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !42)
!46 = !DILocation(line: 58, column: 20, scope: !7)
!47 = !DILocation(line: 59, column: 45, scope: !7)
!48 = !DILocation(line: 59, column: 31, scope: !7)
!49 = !DILocation(line: 59, column: 53, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !51)
!51 = !DILocation(line: 60, column: 42, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !51)
!55 = !DILocation(line: 62, column: 31, scope: !7)
!56 = !DILocation(line: 62, column: 46, scope: !7)
!57 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !58)
!58 = !DILocation(line: 63, column: 42, scope: !7)
!59 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !58)
!60 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !58)
!61 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !58)
!62 = !DILocation(line: 65, column: 42, scope: !7)
!63 = !DILocation(line: 65, column: 31, scope: !7)
!64 = !DILocation(line: 65, column: 50, scope: !7)
!65 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !66)
!66 = !DILocation(line: 66, column: 42, scope: !7)
!67 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !66)
!68 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !66)
!69 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !66)
!70 = !DILocation(line: 72, column: 43, scope: !7)
!71 = !DILocation(line: 72, column: 31, scope: !7)
!72 = !DILocation(line: 72, column: 51, scope: !7)
!73 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !74)
!74 = !DILocation(line: 73, column: 42, scope: !7)
!75 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !74)
!76 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !74)
!77 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !74)
!78 = !DILocation(line: 75, column: 43, scope: !7)
!79 = !DILocation(line: 75, column: 31, scope: !7)
!80 = !DILocation(line: 75, column: 51, scope: !7)
!81 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !82)
!82 = !DILocation(line: 76, column: 42, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !82)
!86 = !DILocation(line: 78, column: 43, scope: !7)
!87 = !DILocation(line: 78, column: 31, scope: !7)
!88 = !DILocation(line: 78, column: 51, scope: !7)
!89 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !90)
!90 = !DILocation(line: 79, column: 42, scope: !7)
!91 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !90)
!93 = !DILocation(line: 83, column: 35, scope: !7)
!94 = !DILocation(line: 86, column: 35, scope: !7)
!95 = !DILocation(line: 89, column: 35, scope: !7)
!96 = !DILocation(line: 92, column: 35, scope: !7)
!97 = !DILocation(line: 95, column: 35, scope: !7)
!98 = !DILocation(line: 98, column: 35, scope: !7)
!99 = !DILocation(line: 101, column: 35, scope: !7)
!100 = !DILocation(line: 104, column: 35, scope: !7)
!101 = !DILocation(line: 105, column: 25, scope: !7)
!102 = !DILocation(line: 105, column: 37, scope: !7)
!103 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !90)
!104 = !DILocation(line: 106, column: 25, scope: !7)
!105 = !DILocation(line: 106, column: 37, scope: !7)
!106 = !DILocation(line: 106, column: 4, scope: !7)
