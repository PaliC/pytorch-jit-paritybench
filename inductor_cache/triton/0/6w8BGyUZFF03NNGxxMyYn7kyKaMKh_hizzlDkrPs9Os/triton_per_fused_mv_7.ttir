#loc = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":37:57)
#loc22 = loc(callsite(#loc1 at #loc14))
module {
  tt.func public @triton_per_fused_mv_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0), %arg4: i32 loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c328_i32 = arith.constant 328 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_1 = arith.constant dense<328> : tensor<512xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_1 : tensor<512xi32> loc(#loc4)
    %3 = arith.muli %0, %c328_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<512xi32> loc(#loc6)
    %5 = arith.addi %1, %4 : tensor<512xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc7)
    %8 = tt.load %7, %2, %cst_0 : tensor<512x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %1 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc9)
    %11 = tt.load %10, %2, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc10)
    %12 = arith.mulf %8, %11 : tensor<512xf32> loc(#loc11)
    %13 = arith.select %2, %12, %cst_0 : tensor<512xi1>, tensor<512xf32> loc(#loc12)
    %14 = "tt.reduce"(%13) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc14)), %arg6: f32 loc(callsite(#loc1 at #loc14))):
      %19 = arith.addf %arg5, %arg6 : f32 loc(#loc25)
      tt.reduce.return %19 : f32 loc(#loc21)
    }) : (tensor<512xf32>) -> f32 loc(#loc21)
    %15 = arith.addf %14, %cst : f32 loc(#loc24)
    %16 = tt.splat %15 : f32 -> tensor<1xf32> loc(#loc24)
    %17 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc18)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc18)
    tt.store %18, %16 : tensor<1x!tt.ptr<f32>> loc(#loc19)
    tt.return loc(#loc20)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":24:28)
#loc3 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":27:26)
#loc4 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":29:21)
#loc5 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":32:39)
#loc6 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":32:35)
#loc7 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":32:30)
#loc8 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":32:44)
#loc9 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":33:30)
#loc10 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":33:35)
#loc11 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":34:18)
#loc12 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":36:33)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc17 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":37:44)
#loc18 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":38:25)
#loc19 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":38:36)
#loc20 = loc("inductor_cache/w3/cw3ujhrahohfur4dsvsll4gpt27f4im5scvksfgsrl3uk67fus5e.py":38:4)
#loc21 = loc(callsite(#loc13 at #loc14))
#loc23 = loc(callsite(#loc15 at #loc13))
#loc24 = loc(callsite(#loc16 at #loc17))
#loc25 = loc(callsite(#loc23 at #loc14))
