; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_add_div_pow_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %12 = shl i32 %11, 2, !dbg !16
  %13 = lshr i32 %7, 5, !dbg !17
  %14 = and i32 %13, 3, !dbg !17
  %15 = or disjoint i32 %12, %14, !dbg !18
  %16 = icmp slt i32 %15, 4, !dbg !19
  %17 = shl i32 %15, 4, !dbg !20
  %.frozen = freeze i32 %9, !dbg !21
  %18 = sdiv i32 %.frozen, 16, !dbg !21
  %19 = shl i32 %18, 6, !dbg !22
  %20 = mul i32 %18, 16, !dbg !23
  %.decomposed = sub i32 %.frozen, %20, !dbg !23
  %21 = add i32 %19, %.decomposed, !dbg !24
  %22 = add i32 %21, %17, !dbg !25
  %23 = sext i32 %22 to i64, !dbg !26
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !26
  %25 = and i1 %10, %16, !dbg !27
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %25) #4, !dbg !28
  %27 = sext i32 %21 to i64, !dbg !29
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !29
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #4, !dbg !30
  %30 = bitcast i32 %29 to float, !dbg !30
  %31 = add i32 %21, 16, !dbg !31
  %32 = sext i32 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !32
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %10) #4, !dbg !33
  %35 = bitcast i32 %34 to float, !dbg !33
  %36 = add i32 %21, 32, !dbg !34
  %37 = sext i32 %36 to i64, !dbg !35
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !35
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #4, !dbg !36
  %40 = bitcast i32 %39 to float, !dbg !36
  %41 = add i32 %21, 48, !dbg !37
  %42 = sext i32 %41 to i64, !dbg !38
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !38
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %10) #4, !dbg !39
  %45 = bitcast i32 %44 to float, !dbg !39
  %46 = fmul float %30, %30, !dbg !40
  %47 = fmul float %35, %35, !dbg !41
  %48 = fadd float %46, %47, !dbg !42
  %49 = fmul float %40, %40, !dbg !43
  %50 = fadd float %48, %49, !dbg !44
  %51 = fmul float %45, %45, !dbg !45
  %52 = fadd float %50, %51, !dbg !46
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not.i = icmp eq i32 %53, 0, !dbg !47
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !47
  %.not1.i = icmp eq i32 %54, 0, !dbg !47
  br i1 %.not.i, label %60, label %55, !dbg !47

55:                                               ; preds = %4
  br i1 %.not1.i, label %58, label %56, !dbg !47

56:                                               ; preds = %55
  %57 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %52) #4, !dbg !47
  br label %__nv_sqrtf.exit, !dbg !47

58:                                               ; preds = %55
  %59 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %52) #4, !dbg !47
  br label %__nv_sqrtf.exit, !dbg !47

60:                                               ; preds = %4
  br i1 %.not1.i, label %63, label %61, !dbg !47

61:                                               ; preds = %60
  %62 = tail call float @llvm.nvvm.sqrt.rn.f(float %52) #4, !dbg !47
  br label %__nv_sqrtf.exit, !dbg !47

63:                                               ; preds = %60
  %64 = tail call float @llvm.nvvm.sqrt.approx.f(float %52) #4, !dbg !47
  br label %__nv_sqrtf.exit, !dbg !47

__nv_sqrtf.exit:                                  ; preds = %56, %58, %61, %63
  %.0.i = phi float [ %57, %56 ], [ %59, %58 ], [ %62, %61 ], [ %64, %63 ], !dbg !47
  %65 = bitcast i32 %26 to float, !dbg !28
  %66 = and i32 %7, 3, !dbg !12
  %67 = or disjoint i32 %12, %66, !dbg !18
  %68 = icmp slt i32 %67, 4, !dbg !19
  %69 = lshr i32 %7, 2, !dbg !12
  %70 = and i32 %69, 31, !dbg !12
  %71 = or disjoint i32 %6, %70, !dbg !13
  %72 = icmp slt i32 %71, 64, !dbg !14
  %73 = and i1 %72, %68, !dbg !27
  %74 = fadd float %.0.i, 0x3E7AD7F2A0000000, !dbg !48
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %65, float %74) #4, !dbg !49
  %76 = shl i32 %71, 2, !dbg !50
  %77 = add i32 %67, %76, !dbg !51
  %78 = sext i32 %77 to i64, !dbg !52
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %78, !dbg !52
  %80 = shl i32 %7, 2, !dbg !53
  %81 = and i32 %80, 124, !dbg !53
  %82 = or disjoint i32 %81, %14, !dbg !53
  %83 = and i32 %7, 127, !dbg !53
  %84 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %81, !dbg !53
  %85 = getelementptr float, ptr addrspace(3) %84, i32 %82, !dbg !53
  %86 = bitcast float %75 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %85, <1 x i32> %86, i1 true) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %87 = lshr i32 %83, 2, !dbg !53
  %88 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %87, !dbg !53
  %89 = getelementptr inbounds float, ptr addrspace(3) %88, i32 %83, !dbg !53
  %90 = load i32, ptr addrspace(3) %89, align 4, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %79, i1 %73) #4, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwzqh6rahhtvmobh4cgvpbj6cm6326au672gynaohcmm55wyppsx.py", directory: "inductor_cache/wz")
!4 = !{ptr @triton_poi_fused_add_div_pow_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_pow_sum_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_pow_sum_0", linkageName: "triton_poi_fused_add_div_pow_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 33, scope: !7)
!21 = !DILocation(line: 30, column: 48, scope: !7)
!22 = !DILocation(line: 30, column: 42, scope: !7)
!23 = !DILocation(line: 30, column: 61, scope: !7)
!24 = !DILocation(line: 30, column: 38, scope: !7)
!25 = !DILocation(line: 30, column: 56, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 76, scope: !7)
!28 = !DILocation(line: 30, column: 68, scope: !7)
!29 = !DILocation(line: 31, column: 30, scope: !7)
!30 = !DILocation(line: 31, column: 60, scope: !7)
!31 = !DILocation(line: 32, column: 53, scope: !7)
!32 = !DILocation(line: 32, column: 30, scope: !7)
!33 = !DILocation(line: 32, column: 65, scope: !7)
!34 = !DILocation(line: 33, column: 53, scope: !7)
!35 = !DILocation(line: 33, column: 30, scope: !7)
!36 = !DILocation(line: 33, column: 65, scope: !7)
!37 = !DILocation(line: 34, column: 53, scope: !7)
!38 = !DILocation(line: 34, column: 30, scope: !7)
!39 = !DILocation(line: 34, column: 65, scope: !7)
!40 = !DILocation(line: 35, column: 18, scope: !7)
!41 = !DILocation(line: 36, column: 18, scope: !7)
!42 = !DILocation(line: 37, column: 18, scope: !7)
!43 = !DILocation(line: 38, column: 18, scope: !7)
!44 = !DILocation(line: 39, column: 18, scope: !7)
!45 = !DILocation(line: 40, column: 19, scope: !7)
!46 = !DILocation(line: 41, column: 19, scope: !7)
!47 = !DILocation(line: 42, column: 27, scope: !7)
!48 = !DILocation(line: 44, column: 20, scope: !7)
!49 = !DILocation(line: 45, column: 19, scope: !7)
!50 = !DILocation(line: 46, column: 32, scope: !7)
!51 = !DILocation(line: 46, column: 30, scope: !7)
!52 = !DILocation(line: 46, column: 25, scope: !7)
!53 = !DILocation(line: 46, column: 44, scope: !7)
!54 = !DILocation(line: 46, column: 4, scope: !7)
