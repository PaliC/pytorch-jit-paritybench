#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [4, 4], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0)
#loc1 = loc(unknown)
#loc40 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":49:41)
#loc94 = loc(callsite(#loc1 at #loc40))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_convolution_native_layer_norm_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<7.680000e+02> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<768> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<768> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<8x1xi32, #blocked2> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<8x1xi32, #blocked2> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<8x1xi32, #blocked2> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<8x1xi32, #blocked1> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked1> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<768> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_11 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_12 = arith.constant dense<1.000000e+00> : tensor<8x512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<9.99999997E-7> : tensor<8x1xf32, #blocked2> loc(#loc1)
    %cst_15 = arith.constant dense<7.680000e+02> : tensor<8x1xf32, #blocked2> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %4 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc4)
    %5 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<8x1xi32, #blocked1> loc(#loc4)
    %6 = tt.expand_dims %3 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %7 = tt.expand_dims %4 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1xi32, #blocked2> loc(#loc4)
    %8 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked1> loc(#loc5)
    %9 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %10 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked2> loc(#loc5)
    %11 = arith.addi %8, %5 : tensor<8x1xi32, #blocked1> loc(#loc5)
    %12 = arith.addi %9, %6 : tensor<8x1xi32, #blocked> loc(#loc5)
    %13 = arith.addi %10, %7 : tensor<8x1xi32, #blocked2> loc(#loc5)
    %14 = arith.cmpi slt, %11, %cst_6 : tensor<8x1xi32, #blocked1> loc(#loc6)
    %15 = arith.cmpi slt, %12, %cst_5 : tensor<8x1xi32, #blocked> loc(#loc6)
    %16 = arith.cmpi slt, %13, %cst_4 : tensor<8x1xi32, #blocked2> loc(#loc6)
    %17 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %18 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %19 = tt.expand_dims %17 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc7)
    %20 = tt.expand_dims %18 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc7)
    %21 = arith.remsi %13, %cst_3 : tensor<8x1xi32, #blocked2> loc(#loc8)
    %22 = arith.divsi %13, %cst_3 : tensor<8x1xi32, #blocked2> loc(#loc9)
    %23 = arith.remsi %22, %cst_3 : tensor<8x1xi32, #blocked2> loc(#loc10)
    %24 = arith.divsi %13, %cst_2 : tensor<8x1xi32, #blocked2> loc(#loc11)
    %25 = arith.muli %11, %cst_0 : tensor<8x1xi32, #blocked1> loc(#loc12)
    %26 = tt.broadcast %25 : tensor<8x1xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc13)
    %27 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc14)
    %28 = tt.broadcast %14 : tensor<8x1xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc15)
    %29 = tt.broadcast %15 : tensor<8x1xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc15)
    %30 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %31:3 = scf.for %arg9 = %c0_i32 to %c768_i32 step %c512_i32 iter_args(%arg10 = %cst_9, %arg11 = %cst_9, %arg12 = %cst_9) -> (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>)  : i32 {
      %60 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc18)
      %61 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked> loc(#loc18)
      %62 = arith.addi %60, %19 : tensor<1x512xi32, #blocked1> loc(#loc18)
      %63 = arith.addi %61, %20 : tensor<1x512xi32, #blocked> loc(#loc18)
      %64 = arith.cmpi slt, %62, %cst_1 : tensor<1x512xi32, #blocked1> loc(#loc19)
      %65 = arith.cmpi slt, %63, %cst_8 : tensor<1x512xi32, #blocked> loc(#loc19)
      %66 = tt.broadcast %62 : tensor<1x512xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc13)
      %67 = arith.addi %66, %26 : tensor<8x512xi32, #blocked1> loc(#loc13)
      %68 = tt.addptr %27, %67 : tensor<8x512x!tt.ptr<f32>, #blocked1>, tensor<8x512xi32, #blocked1> loc(#loc14)
      %69 = tt.broadcast %64 : tensor<1x512xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc15)
      %70 = tt.broadcast %65 : tensor<1x512xi1, #blocked> -> tensor<8x512xi1, #blocked> loc(#loc15)
      %71 = arith.andi %69, %28 : tensor<8x512xi1, #blocked1> loc(#loc15)
      %72 = arith.andi %70, %29 : tensor<8x512xi1, #blocked> loc(#loc15)
      %73 = tt.load %68, %71, %cst_7 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc20)
      %74 = triton_gpu.convert_layout %73 : tensor<8x512xf32, #blocked1> -> tensor<8x512xf32, #blocked> loc(#loc20)
      %75 = tt.addptr %30, %63 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc16)
      %76 = tt.load %75, %65, %cst_10 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc21)
      %77 = triton_gpu.convert_layout %76 {fastmath = #arith.fastmath<none>} : tensor<1x512xf32, #blocked> -> tensor<1x512xf32, #blocked1> loc(#loc22)
      %78 = tt.broadcast %77 : tensor<1x512xf32, #blocked1> -> tensor<8x512xf32, #blocked1> loc(#loc22)
      %79 = tt.broadcast %76 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc22)
      %80 = arith.addf %73, %78 : tensor<8x512xf32, #blocked1> loc(#loc22)
      %81 = arith.addf %74, %79 : tensor<8x512xf32, #blocked> loc(#loc22)
      %82 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc23)
      %83:3 = scf.if %82 -> (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>) {
        scf.yield %cst_9, %81, %cst_12 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc85)
      } else {
        %87 = arith.subf %81, %arg10 : tensor<8x512xf32, #blocked> loc(#loc86)
        %88 = arith.addf %arg12, %cst_12 : tensor<8x512xf32, #blocked> loc(#loc87)
        %89 = arith.divf %87, %88 : tensor<8x512xf32, #blocked> loc(#loc88)
        %90 = arith.addf %arg10, %89 : tensor<8x512xf32, #blocked> loc(#loc89)
        %91 = arith.subf %81, %90 : tensor<8x512xf32, #blocked> loc(#loc90)
        %92 = arith.mulf %87, %91 : tensor<8x512xf32, #blocked> loc(#loc91)
        %93 = arith.addf %arg11, %92 : tensor<8x512xf32, #blocked> loc(#loc92)
        scf.yield %93, %90, %88 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc92)
      } loc(#loc84)
      %84 = arith.select %72, %83#1, %arg10 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc34)
      %85 = arith.select %72, %83#0, %arg11 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc35)
      %86 = arith.select %72, %83#2, %arg12 : tensor<8x512xi1, #blocked>, tensor<8x512xf32, #blocked> loc(#loc36)
      tt.store %68, %80, %71 : tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc37)
      scf.yield %84, %85, %86 : tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked> loc(#loc38)
    } loc(#loc17)
    %32:3 = "tt.reduce"(%31#0, %31#1, %31#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc40)), %arg10: f32 loc(callsite(#loc1 at #loc40)), %arg11: f32 loc(callsite(#loc1 at #loc40)), %arg12: f32 loc(callsite(#loc1 at #loc40)), %arg13: f32 loc(callsite(#loc1 at #loc40)), %arg14: f32 loc(callsite(#loc1 at #loc40))):
      %60 = arith.subf %arg12, %arg9 : f32 loc(#loc107)
      %61 = arith.addf %arg11, %arg14 : f32 loc(#loc108)
      %62 = arith.cmpf oeq, %61, %cst_11 : f32 loc(#loc109)
      %63 = arith.divf %arg14, %61 : f32 loc(#loc110)
      %64 = arith.select %62, %cst_11, %63 : f32 loc(#loc111)
      %65 = arith.mulf %60, %64 : f32 loc(#loc112)
      %66 = arith.addf %arg9, %65 : f32 loc(#loc113)
      %67 = arith.addf %arg10, %arg13 : f32 loc(#loc114)
      %68 = arith.mulf %60, %60 : f32 loc(#loc115)
      %69 = arith.mulf %68, %arg11 : f32 loc(#loc116)
      %70 = arith.mulf %69, %64 : f32 loc(#loc117)
      %71 = arith.addf %67, %70 : f32 loc(#loc118)
      tt.reduce.return %66, %71, %61 : f32, f32, f32 loc(#loc93)
    }) : (tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>, tensor<8x512xf32, #blocked>) -> (tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc93)
    %33 = triton_gpu.convert_layout %32#0 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc53)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1xf32, #blocked2> loc(#loc53)
    %35 = tt.expand_dims %32#0 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc53)
    %36 = triton_gpu.convert_layout %32#1 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc54)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1xf32, #blocked2> loc(#loc55)
    %38 = tt.expand_dims %32#1 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc55)
    %39 = arith.muli %21, %cst_3 : tensor<8x1xi32, #blocked2> loc(#loc56)
    %40 = arith.addi %23, %39 : tensor<8x1xi32, #blocked2> loc(#loc57)
    %41 = arith.muli %24, %cst_2 : tensor<8x1xi32, #blocked2> loc(#loc58)
    %42 = arith.addi %40, %41 : tensor<8x1xi32, #blocked2> loc(#loc59)
    %43 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked2> loc(#loc60)
    %44 = tt.addptr %43, %42 : tensor<8x1x!tt.ptr<f32>, #blocked2>, tensor<8x1xi32, #blocked2> loc(#loc60)
    tt.store %44, %34, %16 : tensor<8x1x!tt.ptr<f32>, #blocked2> loc(#loc61)
    %45 = arith.divf %37, %cst_15 : tensor<8x1xf32, #blocked2> loc(#loc62)
    %46 = arith.divf %38, %cst : tensor<8x1xf32, #blocked> loc(#loc62)
    %47 = arith.addf %45, %cst_14 : tensor<8x1xf32, #blocked2> loc(#loc63)
    %48 = arith.addf %46, %cst_13 : tensor<8x1xf32, #blocked> loc(#loc63)
    %49 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked2>) -> tensor<8x1xf32, #blocked2> loc(#loc54)
    %50 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<8x1xf32, #blocked>) -> tensor<8x1xf32, #blocked> loc(#loc54)
    %51 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked2> loc(#loc64)
    %52 = tt.addptr %51, %42 : tensor<8x1x!tt.ptr<f32>, #blocked2>, tensor<8x1xi32, #blocked2> loc(#loc64)
    tt.store %52, %49, %16 : tensor<8x1x!tt.ptr<f32>, #blocked2> loc(#loc65)
    %53 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc66)
    %54 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc67)
    %55 = triton_gpu.convert_layout %35 : tensor<8x1xf32, #blocked> -> tensor<8x1xf32, #blocked1> loc(#loc68)
    %56 = tt.broadcast %55 : tensor<8x1xf32, #blocked1> -> tensor<8x512xf32, #blocked1> loc(#loc68)
    %57 = triton_gpu.convert_layout %50 : tensor<8x1xf32, #blocked> -> tensor<8x1xf32, #blocked1> loc(#loc69)
    %58 = tt.broadcast %57 : tensor<8x1xf32, #blocked1> -> tensor<8x512xf32, #blocked1> loc(#loc69)
    %59 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc70)
    scf.for %arg9 = %c0_i32 to %c768_i32 step %c512_i32  : i32 {
      %60 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc72)
      %61 = tt.splat %arg9 : i32 -> tensor<1x512xi32, #blocked> loc(#loc72)
      %62 = arith.addi %60, %19 : tensor<1x512xi32, #blocked1> loc(#loc72)
      %63 = arith.addi %61, %20 : tensor<1x512xi32, #blocked> loc(#loc72)
      %64 = arith.cmpi slt, %62, %cst_1 : tensor<1x512xi32, #blocked1> loc(#loc73)
      %65 = arith.cmpi slt, %63, %cst_8 : tensor<1x512xi32, #blocked> loc(#loc73)
      %66 = tt.broadcast %62 : tensor<1x512xi32, #blocked1> -> tensor<8x512xi32, #blocked1> loc(#loc74)
      %67 = arith.addi %66, %26 : tensor<8x512xi32, #blocked1> loc(#loc74)
      %68 = tt.addptr %27, %67 : tensor<8x512x!tt.ptr<f32>, #blocked1>, tensor<8x512xi32, #blocked1> loc(#loc75)
      %69 = tt.broadcast %64 : tensor<1x512xi1, #blocked1> -> tensor<8x512xi1, #blocked1> loc(#loc76)
      %70 = arith.andi %69, %28 : tensor<8x512xi1, #blocked1> loc(#loc76)
      %71 = tt.load %68, %70, %cst_7 evictionPolicy = evict_first : tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc77)
      %72 = tt.addptr %53, %63 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc66)
      %73 = tt.load %72, %65, %cst_10 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc78)
      %74 = tt.addptr %54, %63 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc67)
      %75 = tt.load %74, %65, %cst_10 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc79)
      %76 = arith.subf %71, %56 : tensor<8x512xf32, #blocked1> loc(#loc68)
      %77 = arith.mulf %76, %58 : tensor<8x512xf32, #blocked1> loc(#loc69)
      %78 = triton_gpu.convert_layout %77 {fastmath = #arith.fastmath<none>} : tensor<8x512xf32, #blocked1> -> tensor<8x512xf32, #blocked> loc(#loc69)
      %79 = tt.broadcast %73 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc80)
      %80 = arith.mulf %78, %79 : tensor<8x512xf32, #blocked> loc(#loc80)
      %81 = tt.broadcast %75 : tensor<1x512xf32, #blocked> -> tensor<8x512xf32, #blocked> loc(#loc81)
      %82 = arith.addf %80, %81 : tensor<8x512xf32, #blocked> loc(#loc81)
      %83 = tt.addptr %59, %67 : tensor<8x512x!tt.ptr<f32>, #blocked1>, tensor<8x512xi32, #blocked1> loc(#loc70)
      %84 = triton_gpu.convert_layout %82 : tensor<8x512xf32, #blocked> -> tensor<8x512xf32, #blocked1> loc(#loc82)
      tt.store %83, %84, %70 : tensor<8x512x!tt.ptr<f32>, #blocked1> loc(#loc82)
    } loc(#loc71)
    tt.return loc(#loc83)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":22:28)
#loc3 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":22:33)
#loc4 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":23:44)
#loc5 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":23:23)
#loc6 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":24:21)
#loc7 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":25:33)
#loc8 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":30:19)
#loc9 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":31:21)
#loc10 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":31:26)
#loc11 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":32:19)
#loc12 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":37:47)
#loc13 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":37:43)
#loc14 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":37:38)
#loc15 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":37:60)
#loc16 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":38:34)
#loc17 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":33:36)
#loc18 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":34:27)
#loc19 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":35:25)
#loc20 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":37:52)
#loc21 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":38:39)
#loc22 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":39:22)
#loc23 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":42:62)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc25 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":42:51)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc34 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":44:60)
#loc35 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":45:56)
#loc36 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":46:64)
#loc37 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":47:52)
#loc38 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":47:8)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc53 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":51:20)
#loc54 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":59:28)
#loc55 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":52:20)
#loc56 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:32)
#loc57 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:30)
#loc58 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:39)
#loc59 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:37)
#loc60 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:25)
#loc61 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":54:50)
#loc62 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":56:18)
#loc63 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":58:19)
#loc64 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":60:25)
#loc65 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":60:51)
#loc66 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":66:35)
#loc67 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":67:35)
#loc68 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":68:24)
#loc69 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":69:24)
#loc70 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":72:29)
#loc71 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":61:36)
#loc72 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":62:27)
#loc73 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":63:25)
#loc74 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":65:44)
#loc75 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":65:39)
#loc76 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":65:61)
#loc77 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":65:53)
#loc78 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":66:40)
#loc79 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":67:40)
#loc80 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":70:24)
#loc81 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":71:24)
#loc82 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":72:50)
#loc83 = loc("inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py":61:4)
#loc84 = loc(callsite(#loc24 at #loc25))
#loc85 = loc(callsite(#loc26 at #loc25))
#loc86 = loc(callsite(#loc27 at #loc25))
#loc87 = loc(callsite(#loc28 at #loc25))
#loc88 = loc(callsite(#loc29 at #loc25))
#loc89 = loc(callsite(#loc30 at #loc25))
#loc90 = loc(callsite(#loc31 at #loc25))
#loc91 = loc(callsite(#loc32 at #loc25))
#loc92 = loc(callsite(#loc33 at #loc25))
#loc93 = loc(callsite(#loc39 at #loc40))
#loc95 = loc(callsite(#loc41 at #loc39))
#loc96 = loc(callsite(#loc42 at #loc39))
#loc97 = loc(callsite(#loc43 at #loc39))
#loc98 = loc(callsite(#loc44 at #loc39))
#loc99 = loc(callsite(#loc45 at #loc39))
#loc100 = loc(callsite(#loc46 at #loc39))
#loc101 = loc(callsite(#loc47 at #loc39))
#loc102 = loc(callsite(#loc48 at #loc39))
#loc103 = loc(callsite(#loc49 at #loc39))
#loc104 = loc(callsite(#loc50 at #loc39))
#loc105 = loc(callsite(#loc51 at #loc39))
#loc106 = loc(callsite(#loc52 at #loc39))
#loc107 = loc(callsite(#loc95 at #loc40))
#loc108 = loc(callsite(#loc96 at #loc40))
#loc109 = loc(callsite(#loc97 at #loc40))
#loc110 = loc(callsite(#loc98 at #loc40))
#loc111 = loc(callsite(#loc99 at #loc40))
#loc112 = loc(callsite(#loc100 at #loc40))
#loc113 = loc(callsite(#loc101 at #loc40))
#loc114 = loc(callsite(#loc102 at #loc40))
#loc115 = loc(callsite(#loc103 at #loc40))
#loc116 = loc(callsite(#loc104 at #loc40))
#loc117 = loc(callsite(#loc105 at #loc40))
#loc118 = loc(callsite(#loc106 at #loc40))
