//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_convolution_mul_sub_42 // -- Begin function triton_poi_fused__unsafe_index_add_convolution_mul_sub_42
                                        // @triton_poi_fused__unsafe_index_add_convolution_mul_sub_42
.visible .entry triton_poi_fused__unsafe_index_add_convolution_mul_sub_42(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_8,
	.param .u32 triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<38>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<78>;
	.loc	1 19 0                          // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:19:0

// %bb.0:
	ld.param.u64 	%rd28, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_0];
	ld.param.u64 	%rd29, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_1];
$L__tmp0:
	.loc	1 21 28                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:21:33
	shl.b32 	%r17, %r1, 8;
	ld.param.u64 	%rd30, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_2];
	ld.param.u64 	%rd31, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_3];
	.loc	1 22 36                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:22:36
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 1;
	ld.param.u64 	%rd8, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_4];
	and.b32  	%r20, %r19, 254;
	ld.param.u64 	%rd32, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_5];
	.loc	1 22 23                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:22:23
	or.b32  	%r21, %r17, %r20;
	ld.param.u64 	%rd33, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_6];
	ld.param.u64 	%rd34, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_7];
	.loc	1 24 21                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:24:21
	shr.s32 	%r23, %r21, 31;
	shr.u32 	%r24, %r23, 26;
	add.s32 	%r25, %r21, %r24;
	shr.s32 	%r26, %r25, 6;
	ld.param.u64 	%rd35, [triton_poi_fused__unsafe_index_add_convolution_mul_sub_42_param_8];
	.loc	1 24 27                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:24:27
	shr.u32 	%r27, %r26, 26;
	add.s32 	%r28, %r26, %r27;
	and.b32  	%r29, %r28, -64;
	sub.s32 	%r30, %r26, %r29;
	.loc	1 25 19                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:25:19
	and.b32  	%r31, %r25, -64;
	sub.s32 	%r32, %r21, %r31;
	.loc	1 26 19                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:26:19
	bfe.s32 	%r33, %r1, 23, 1;
	shr.u32 	%r34, %r33, 20;
	add.s32 	%r35, %r21, %r34;
	shr.s32 	%r36, %r35, 12;
	.loc	1 28 30                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:28:30
	mul.wide.s32 	%rd36, %r30, 8;
	add.s64 	%rd2, %rd29, %rd36;
	mov.pred 	%p1, -1;
	.loc	1 28 35                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:28:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:29:30
	mul.wide.s32 	%rd37, %r32, 8;
	add.s64 	%rd7, %rd30, %rd37;
	.loc	1 29 35                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:29:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	mov.u64 %rd6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd5, %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 30 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:30:20
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 32 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:32:31
	add.s64 	%rd11, %rd32, %rd37;
	.loc	1 32 36                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:32:36
	// begin inline asm
	mov.u64 %rd9, 0x0;
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd9, %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 33 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:33:31
	mul.wide.s32 	%rd38, %r32, 4;
	add.s64 	%rd12, %rd33, %rd38;
	.loc	1 33 36                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:33:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 34 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:34:31
	add.s64 	%rd14, %rd34, %rd36;
	.loc	1 34 36                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:34:36
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 35 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:35:31
	mul.wide.s32 	%rd39, %r30, 4;
	add.s64 	%rd17, %rd35, %rd39;
	.loc	1 35 36                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:35:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 39 32                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:39:32
	shr.u64 	%rd40, %rd1, 59;
	and.b64  	%rd41, %rd40, 16;
	add.s64 	%rd42, %rd41, %rd1;
	.loc	1 43 51                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:43:51
	shl.b32 	%r37, %r36, 8;
	.loc	1 43 30                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:43:30
	shl.b64 	%rd43, %rd5, 2;
	add.s64 	%rd44, %rd31, %rd43;
	shr.u64 	%rd45, %rd5, 57;
	and.b64  	%rd46, %rd45, 64;
	add.s64 	%rd47, %rd44, %rd46;
	shl.b64 	%rd48, %rd42, 6;
	add.s64 	%rd49, %rd47, %rd48;
	mul.wide.s32 	%rd50, %r37, 4;
	add.s64 	%rd19, %rd49, %rd50;
	shl.b64 	%rd51, %rd6, 2;
	add.s64 	%rd52, %rd31, %rd51;
	shr.u64 	%rd53, %rd6, 57;
	and.b64  	%rd54, %rd53, 64;
	add.s64 	%rd55, %rd52, %rd54;
	add.s64 	%rd56, %rd55, %rd48;
	add.s64 	%rd20, %rd56, %rd50;
	.loc	1 43 56                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:43:56
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 48 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:48:31
	shl.b64 	%rd57, %rd9, 2;
	add.s64 	%rd58, %rd31, %rd57;
	shr.u64 	%rd59, %rd9, 57;
	and.b64  	%rd60, %rd59, 64;
	add.s64 	%rd61, %rd58, %rd60;
	add.s64 	%rd62, %rd61, %rd48;
	add.s64 	%rd21, %rd62, %rd50;
	shl.b64 	%rd63, %rd10, 2;
	add.s64 	%rd64, %rd31, %rd63;
	shr.u64 	%rd65, %rd10, 57;
	and.b64  	%rd66, %rd65, 64;
	add.s64 	%rd67, %rd64, %rd66;
	add.s64 	%rd68, %rd67, %rd48;
	add.s64 	%rd22, %rd68, %rd50;
	.loc	1 48 58                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:48:58
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 55 35                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:55:35
	shr.u64 	%rd69, %rd13, 59;
	and.b64  	%rd70, %rd69, 16;
	add.s64 	%rd71, %rd70, %rd13;
	.loc	1 56 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:56:31
	shl.b64 	%rd72, %rd71, 6;
	add.s64 	%rd73, %rd47, %rd72;
	add.s64 	%rd23, %rd73, %rd50;
	add.s64 	%rd74, %rd55, %rd72;
	add.s64 	%rd24, %rd74, %rd50;
	.loc	1 56 58                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:56:58
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 58 31                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:58:31
	add.s64 	%rd75, %rd61, %rd72;
	add.s64 	%rd25, %rd75, %rd50;
	add.s64 	%rd76, %rd67, %rd72;
	add.s64 	%rd26, %rd76, %rd50;
	.loc	1 58 59                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:58:59
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 56 58                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:56:58
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r7;
	.loc	1 57 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:57:20
	mov.b32 	%f5, %r2;
	add.f32 	%f6, %f5, %f4;
	add.f32 	%f7, %f5, %f3;
	.loc	1 58 59                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:58:59
	mov.b32 	%f8, %r13;
	mov.b32 	%f9, %r9;
	.loc	1 59 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:59:20
	add.f32 	%f10, %f5, %f9;
	add.f32 	%f11, %f5, %f8;
	.loc	1 60 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:60:20
	sub.f32 	%f12, %f11, %f7;
	sub.f32 	%f13, %f10, %f6;
	.loc	1 61 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:61:20
	mov.b32 	%f14, %r3;
	.loc	1 62 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:62:20
	fma.rn.f32 	%f15, %f13, %f14, %f6;
	fma.rn.f32 	%f16, %f12, %f14, %f7;
	.loc	1 56 58                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:56:58
	mov.b32 	%f17, %r12;
	mov.b32 	%f18, %r8;
	.loc	1 57 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:57:20
	add.f32 	%f19, %f5, %f18;
	add.f32 	%f20, %f5, %f17;
	.loc	1 58 59                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:58:59
	mov.b32 	%f21, %r14;
	mov.b32 	%f22, %r10;
	.loc	1 59 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:59:20
	add.f32 	%f23, %f5, %f22;
	add.f32 	%f24, %f5, %f21;
	.loc	1 60 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:60:20
	sub.f32 	%f25, %f24, %f20;
	sub.f32 	%f26, %f23, %f19;
	.loc	1 61 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:61:20
	mov.b32 	%f27, %r4;
	.loc	1 62 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:62:20
	fma.rn.f32 	%f28, %f26, %f27, %f19;
	fma.rn.f32 	%f29, %f25, %f27, %f20;
	.loc	1 63 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:63:20
	sub.f32 	%f30, %f16, %f15;
	sub.f32 	%f31, %f29, %f28;
	.loc	1 65 20                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:65:20
	fma.rn.f32 	%f32, %f30, %f1, %f15;
	fma.rn.f32 	%f33, %f31, %f2, %f28;
	.loc	1 66 28                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:66:28
	mul.wide.s32 	%rd77, %r21, 4;
	add.s64 	%rd27, %rd28, %rd77;
	.loc	1 66 40                         // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:66:40
	mov.b32 	%r15, %f32;
	mov.b32 	%r16, %f33;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd27 + 0 ], { %r15, %r16 };
	// end inline asm
	.loc	1 66 4                          // ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py:66:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tc/ctcoahmdzzwljjurcqarga3x56y572oxgimn5nzjbjtvrfx7trwo.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 99
.b8 111
.b8 97
.b8 104
.b8 109
.b8 100
.b8 122
.b8 122
.b8 119
.b8 108
.b8 106
.b8 106
.b8 117
.b8 114
.b8 99
.b8 113
.b8 97
.b8 114
.b8 103
.b8 97
.b8 51
.b8 120
.b8 53
.b8 54
.b8 121
.b8 53
.b8 55
.b8 50
.b8 111
.b8 120
.b8 103
.b8 105
.b8 109
.b8 110
.b8 53
.b8 110
.b8 122
.b8 106
.b8 98
.b8 106
.b8 116
.b8 118
.b8 114
.b8 102
.b8 120
.b8 55
.b8 116
.b8 114
.b8 119
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
