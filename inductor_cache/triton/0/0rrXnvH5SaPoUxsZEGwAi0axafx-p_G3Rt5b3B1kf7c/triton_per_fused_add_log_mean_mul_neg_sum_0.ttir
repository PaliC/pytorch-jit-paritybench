#loc = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":55:26)
#loc45 = loc(callsite(#loc1 at #loc36))
module {
  tt.func public @triton_per_fused_add_log_mean_mul_neg_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999968E-21> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<1x64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.muli %1, %cst_5 : tensor<1x64xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %2 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc5)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc7)
    %7 = tt.addptr %3, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_3 : tensor<1x64xi32> loc(#loc10)
    %10 = tt.addptr %3, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %12 = arith.addi %2, %cst_2 : tensor<1x64xi32> loc(#loc13)
    %13 = tt.addptr %3, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %15 = arith.subf %cst_1, %5 : tensor<1x64xf32> loc(#loc16)
    %16 = arith.addf %5, %cst_0 : tensor<1x64xf32> loc(#loc17)
    %17 = math.log %16 : tensor<1x64xf32> loc(#loc18)
    %18 = arith.mulf %15, %17 : tensor<1x64xf32> loc(#loc19)
    %19 = arith.subf %cst_1, %8 : tensor<1x64xf32> loc(#loc20)
    %20 = arith.addf %8, %cst_0 : tensor<1x64xf32> loc(#loc21)
    %21 = math.log %20 : tensor<1x64xf32> loc(#loc22)
    %22 = arith.mulf %19, %21 : tensor<1x64xf32> loc(#loc23)
    %23 = arith.addf %18, %22 : tensor<1x64xf32> loc(#loc24)
    %24 = arith.subf %cst_1, %11 : tensor<1x64xf32> loc(#loc25)
    %25 = arith.addf %11, %cst_0 : tensor<1x64xf32> loc(#loc26)
    %26 = math.log %25 : tensor<1x64xf32> loc(#loc27)
    %27 = arith.mulf %24, %26 : tensor<1x64xf32> loc(#loc28)
    %28 = arith.addf %23, %27 : tensor<1x64xf32> loc(#loc29)
    %29 = arith.subf %cst_1, %14 : tensor<1x64xf32> loc(#loc30)
    %30 = arith.addf %14, %cst_0 : tensor<1x64xf32> loc(#loc31)
    %31 = math.log %30 : tensor<1x64xf32> loc(#loc32)
    %32 = arith.mulf %29, %31 : tensor<1x64xf32> loc(#loc33)
    %33 = arith.addf %28, %32 : tensor<1x64xf32> loc(#loc34)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc36)), %arg4: f32 loc(callsite(#loc1 at #loc36))):
      %39 = arith.addf %arg3, %arg4 : f32 loc(#loc47)
      tt.reduce.return %39 : f32 loc(#loc44)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc44)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc38)
    %36 = arith.divf %35, %cst : tensor<1x1xf32> loc(#loc39)
    gpu.barrier loc(#loc40)
    %37 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc41)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    tt.store %38, %36 : tensor<1x1x!tt.ptr<f32>> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":26:26)
#loc3 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":26:34)
#loc4 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":30:32)
#loc5 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":30:30)
#loc6 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":30:37)
#loc7 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":31:34)
#loc8 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":31:30)
#loc9 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":31:41)
#loc10 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":32:35)
#loc11 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":32:31)
#loc12 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":32:42)
#loc13 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":33:35)
#loc14 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":33:31)
#loc15 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":33:42)
#loc16 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":34:12)
#loc17 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":36:18)
#loc18 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":37:23)
#loc19 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":38:18)
#loc20 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":39:12)
#loc21 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":40:18)
#loc22 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":41:23)
#loc23 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":42:19)
#loc24 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":43:19)
#loc25 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":44:13)
#loc26 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":45:20)
#loc27 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":46:24)
#loc28 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":47:20)
#loc29 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":48:20)
#loc30 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":49:13)
#loc31 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":50:20)
#loc32 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":51:24)
#loc33 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":52:20)
#loc34 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":53:20)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc38 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":55:29)
#loc39 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":57:20)
#loc40 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":58:4)
#loc41 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":59:28)
#loc42 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":59:71)
#loc43 = loc("inductor_cache/4a/c4aui7gqpelqh4re6lesqcgjibedr7mkrktj3ivh767qwpciakpj.py":59:4)
#loc44 = loc(callsite(#loc35 at #loc36))
#loc46 = loc(callsite(#loc37 at #loc35))
#loc47 = loc(callsite(#loc46 at #loc36))
