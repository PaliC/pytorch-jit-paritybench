; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 4, !dbg !15
  %14 = mul i32 %13, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = shl nsw i32 %.decomposed, 1, !dbg !17
  %16 = sdiv i32 %11, 16, !dbg !18
  %17 = shl nsw i32 %16, 3, !dbg !19
  %18 = add nsw i32 %15, %17, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %12) #3, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = shl nsw i32 %13, 1, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %12) #3, !dbg !25
  %27 = bitcast i32 %26 to float, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !27
  %31 = or disjoint i32 %15, 1, !dbg !28
  %32 = add nsw i32 %31, %17, !dbg !29
  %33 = sext i32 %32 to i64, !dbg !30
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !30
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %12) #3, !dbg !31
  %36 = bitcast i32 %35 to float, !dbg !31
  %37 = or disjoint i32 %23, 1, !dbg !32
  %38 = sext i32 %37 to i64, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !33
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %12) #3, !dbg !34
  %41 = bitcast i32 %40 to float, !dbg !34
  %42 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !35
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !36
  %44 = bitcast i32 %43 to float, !dbg !36
  %45 = getelementptr i8, ptr addrspace(1) %3, i64 4, !dbg !37
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #3, !dbg !38
  %47 = fadd float %22, %27, !dbg !39
  %48 = fadd float %47, %29, !dbg !40
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i = icmp eq i32 %49, 0, !dbg !41
  %50 = tail call float @llvm.nvvm.fabs.ftz.f(float %48) #3, !dbg !41
  %51 = tail call float @llvm.nvvm.fabs.f(float %48) #3, !dbg !41
  %.01.i = select i1 %.not.i, float %51, float %50, !dbg !41
  %52 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !41
  br i1 %52, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !41

__internal_fmad.exit1.i:                          ; preds = %6
  %53 = fmul float %.01.i, 0x4007154760000000, !dbg !41
  %54 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %53) #3, !dbg !41
  %55 = fadd float %54, 1.000000e+00, !dbg !41
  %56 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %55) #4, !dbg !41, !srcloc !42
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not6.i = icmp eq i32 %57, 0, !dbg !41
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %56, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %56, float -2.000000e+00, float 1.000000e+00) #3, !dbg !41
  %.03.i = select i1 %.not6.i, float %59, float %58, !dbg !41
  %60 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !41
  %s.0.i = select i1 %60, float 1.000000e+00, float %.03.i, !dbg !41
  %61 = bitcast float %s.0.i to i32, !dbg !41
  %62 = bitcast float %48 to i32, !dbg !41
  %63 = and i32 %62, -2147483648, !dbg !41
  %64 = or i32 %63, %61, !dbg !41
  %65 = bitcast i32 %64 to float, !dbg !41
  br label %__nv_tanhf.exit, !dbg !41

__internal_fmad.exit3.i:                          ; preds = %6
  %66 = fmul float %48, %48, !dbg !41
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not1.i = icmp eq i32 %67, 0, !dbg !41
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %66, float 0xBFAAC795C0000000) #3, !dbg !41
  %69 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %66, float 0xBFAAC795C0000000) #3, !dbg !41
  %.06.i = select i1 %.not1.i, float %69, float %68, !dbg !41
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not2.i = icmp eq i32 %70, 0, !dbg !41
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %66, float 0x3FC10B2820000000) #3, !dbg !41
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %66, float 0x3FC10B2820000000) #3, !dbg !41
  %.05.i = select i1 %.not2.i, float %72, float %71, !dbg !41
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not3.i = icmp eq i32 %73, 0, !dbg !41
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %66, float 0xBFD5553DA0000000) #3, !dbg !41
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %66, float 0xBFD5553DA0000000) #3, !dbg !41
  %.0.i = select i1 %.not3.i, float %75, float %74, !dbg !41
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not4.i = icmp eq i32 %76, 0, !dbg !41
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %66, float 0.000000e+00) #3, !dbg !41
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %66, float 0.000000e+00) #3, !dbg !41
  %.04.i = select i1 %.not4.i, float %78, float %77, !dbg !41
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not5.i = icmp eq i32 %79, 0, !dbg !41
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %48, float %48) #3, !dbg !41
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %48, float %48) #3, !dbg !41
  %.02.i = select i1 %.not5.i, float %81, float %80, !dbg !41
  br label %__nv_tanhf.exit, !dbg !41

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %65, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !41
  %82 = fadd float %36, %41, !dbg !43
  %83 = fadd float %82, %44, !dbg !44
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not.i1 = icmp eq i32 %84, 0, !dbg !45
  %85 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #3, !dbg !45
  %86 = tail call float @llvm.nvvm.fabs.f(float %83) #3, !dbg !45
  %.01.i2 = select i1 %.not.i1, float %86, float %85, !dbg !45
  %87 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !45
  br i1 %87, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !45

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %88 = fmul float %.01.i2, 0x4007154760000000, !dbg !45
  %89 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %88) #3, !dbg !45
  %90 = fadd float %89, 1.000000e+00, !dbg !45
  %91 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %90) #4, !dbg !45, !srcloc !42
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not6.i4 = icmp eq i32 %92, 0, !dbg !45
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %91, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %91, float -2.000000e+00, float 1.000000e+00) #3, !dbg !45
  %.03.i5 = select i1 %.not6.i4, float %94, float %93, !dbg !45
  %95 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !45
  %s.0.i6 = select i1 %95, float 1.000000e+00, float %.03.i5, !dbg !45
  %96 = bitcast float %s.0.i6 to i32, !dbg !45
  %97 = bitcast float %83 to i32, !dbg !45
  %98 = and i32 %97, -2147483648, !dbg !45
  %99 = or i32 %98, %96, !dbg !45
  %100 = bitcast i32 %99 to float, !dbg !45
  br label %__nv_tanhf.exit19, !dbg !45

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %101 = fmul float %83, %83, !dbg !45
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not1.i9 = icmp eq i32 %102, 0, !dbg !45
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #3, !dbg !45
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #3, !dbg !45
  %.06.i10 = select i1 %.not1.i9, float %104, float %103, !dbg !45
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not2.i11 = icmp eq i32 %105, 0, !dbg !45
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %101, float 0x3FC10B2820000000) #3, !dbg !45
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %101, float 0x3FC10B2820000000) #3, !dbg !45
  %.05.i12 = select i1 %.not2.i11, float %107, float %106, !dbg !45
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not3.i13 = icmp eq i32 %108, 0, !dbg !45
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %101, float 0xBFD5553DA0000000) #3, !dbg !45
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %101, float 0xBFD5553DA0000000) #3, !dbg !45
  %.0.i14 = select i1 %.not3.i13, float %110, float %109, !dbg !45
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not4.i15 = icmp eq i32 %111, 0, !dbg !45
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %101, float 0.000000e+00) #3, !dbg !45
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %101, float 0.000000e+00) #3, !dbg !45
  %.04.i16 = select i1 %.not4.i15, float %113, float %112, !dbg !45
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !45
  %.not5.i17 = icmp eq i32 %114, 0, !dbg !45
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %83, float %83) #3, !dbg !45
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %83, float %83) #3, !dbg !45
  %.02.i18 = select i1 %.not5.i17, float %116, float %115, !dbg !45
  br label %__nv_tanhf.exit19, !dbg !45

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %100, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !45
  %117 = bitcast i32 %30 to float, !dbg !27
  %118 = fmul float %s.1.i, %117, !dbg !46
  %119 = bitcast i32 %46 to float, !dbg !38
  %120 = fmul float %s.1.i7, %119, !dbg !47
  %121 = fadd float %118, %120, !dbg !48
  %122 = sext i32 %11 to i64, !dbg !49
  %123 = getelementptr float, ptr addrspace(1) %4, i64 %122, !dbg !49
  %124 = bitcast float %121 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %124, ptr addrspace(1) %123, i1 %12) #3, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py", directory: "inductor_cache/wf")
!4 = !{ptr @triton_poi_fused_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mv_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mv_0", linkageName: "triton_poi_fused_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 39, scope: !7)
!16 = !DILocation(line: 25, column: 39, scope: !7)
!17 = !DILocation(line: 25, column: 34, scope: !7)
!18 = !DILocation(line: 25, column: 54, scope: !7)
!19 = !DILocation(line: 25, column: 48, scope: !7)
!20 = !DILocation(line: 25, column: 45, scope: !7)
!21 = !DILocation(line: 25, column: 30, scope: !7)
!22 = !DILocation(line: 25, column: 60, scope: !7)
!23 = !DILocation(line: 26, column: 33, scope: !7)
!24 = !DILocation(line: 26, column: 30, scope: !7)
!25 = !DILocation(line: 26, column: 44, scope: !7)
!26 = !DILocation(line: 27, column: 19, scope: !7)
!27 = !DILocation(line: 29, column: 19, scope: !7)
!28 = !DILocation(line: 31, column: 35, scope: !7)
!29 = !DILocation(line: 31, column: 50, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 65, scope: !7)
!32 = !DILocation(line: 32, column: 35, scope: !7)
!33 = !DILocation(line: 32, column: 31, scope: !7)
!34 = !DILocation(line: 32, column: 49, scope: !7)
!35 = !DILocation(line: 33, column: 31, scope: !7)
!36 = !DILocation(line: 33, column: 20, scope: !7)
!37 = !DILocation(line: 35, column: 31, scope: !7)
!38 = !DILocation(line: 35, column: 20, scope: !7)
!39 = !DILocation(line: 37, column: 18, scope: !7)
!40 = !DILocation(line: 38, column: 18, scope: !7)
!41 = !DILocation(line: 39, column: 26, scope: !7)
!42 = !{i32 21046}
!43 = !DILocation(line: 41, column: 20, scope: !7)
!44 = !DILocation(line: 42, column: 20, scope: !7)
!45 = !DILocation(line: 43, column: 27, scope: !7)
!46 = !DILocation(line: 40, column: 18, scope: !7)
!47 = !DILocation(line: 44, column: 20, scope: !7)
!48 = !DILocation(line: 45, column: 19, scope: !7)
!49 = !DILocation(line: 46, column: 25, scope: !7)
!50 = !DILocation(line: 46, column: 37, scope: !7)
!51 = !DILocation(line: 46, column: 4, scope: !7)
