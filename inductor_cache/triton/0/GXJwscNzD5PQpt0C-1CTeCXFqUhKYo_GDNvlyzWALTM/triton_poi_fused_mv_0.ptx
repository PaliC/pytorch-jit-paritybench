//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mv_0   // -- Begin function triton_poi_fused_mv_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_mv_0
.visible .entry triton_poi_fused_mv_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mv_0_param_4,
	.param .u32 triton_poi_fused_mv_0_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<68>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_mv_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_mv_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:21:33
	shl.b32 	%r13, %r4, 7;
	ld.param.u64 	%rd4, [triton_poi_fused_mv_0_param_2];
	ld.param.u64 	%rd5, [triton_poi_fused_mv_0_param_3];
	.loc	1 22 36                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:22:36
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 127;
	.loc	1 22 23                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:22:23
	or.b32  	%r1, %r13, %r15;
	.loc	1 23 21                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:23:21
	setp.lt.s32 	%p1, %r1, 256;
	.loc	1 26 39                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:39
	shr.s32 	%r17, %r1, 31;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r1, %r18;
	shr.s32 	%r20, %r19, 2;
	.loc	1 25 39                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:39
	and.b32  	%r21, %r19, 2147483644;
	sub.s32 	%r22, %r1, %r21;
	.loc	1 25 34                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:34
	shl.b32 	%r23, %r22, 1;
	.loc	1 25 54                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:54
	bfe.s32 	%r24, %r4, 24, 1;
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r1, %r25;
	shr.s32 	%r27, %r26, 4;
	.loc	1 25 48                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:48
	shl.b32 	%r28, %r27, 3;
	.loc	1 25 45                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:45
	add.s32 	%r29, %r23, %r28;
	.loc	1 25 30                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:30
	mul.wide.s32 	%rd12, %r29, 4;
	add.s64 	%rd2, %rd10, %rd12;
	.loc	1 25 60                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:25:60
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r5;
	.loc	1 26 33                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:33
	shl.b32 	%r30, %r20, 1;
	.loc	1 26 30                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:30
	mul.wide.s32 	%rd13, %r30, 4;
	add.s64 	%rd3, %rd11, %rd13;
	.loc	1 26 44                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:26:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r6;
	mov.pred 	%p3, -1;
	.loc	1 27 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:27:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r7;
	.loc	1 29 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:29:19
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p3 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:31:31
	cvt.s64.s32 	%rd14, %r28;
	cvt.s64.s32 	%rd15, %r23;
	add.s64 	%rd16, %rd15, %rd14;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd10, %rd17;
	add.s64 	%rd6, %rd18, 4;
	.loc	1 31 65                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:31:65
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	.loc	1 32 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:32:31
	add.s64 	%rd7, %rd3, 4;
	.loc	1 32 49                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:32:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r10;
	.loc	1 33 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:33:31
	add.s64 	%rd8, %rd4, 4;
	.loc	1 33 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:33:20
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p3 ld.global.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r11;
	.loc	1 35 31                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:31
	add.s64 	%rd9, %rd5, 4;
	.loc	1 35 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:37:18
	add.f32 	%f17, %f14, %f15;
	.loc	1 38 18                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:38:18
	add.f32 	%f4, %f17, %f16;
	.loc	1 39 26                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:39:26
	abs.ftz.f32 	%f5, %f4;
	setp.ltu.f32 	%p9, %f5, 0f3F19999A;
	mov.f32 	%f59, 0f3F800000;
	mov.f32 	%f60, 0fC0000000;
	mov.f32 	%f61, 0fBD563CAE;
	mov.f32 	%f62, 0f3C80F082;
	mov.f32 	%f63, 0f3E085941;
	mov.f32 	%f64, 0fBEAAA9ED;
	mov.f32 	%f65, 0f00000000;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f26, %f4, %f4;
	fma.rn.ftz.f32 	%f29, %f62, %f26, %f61;
	fma.rn.ftz.f32 	%f31, %f29, %f26, %f63;
	fma.rn.ftz.f32 	%f33, %f31, %f26, %f64;
	fma.rn.ftz.f32 	%f35, %f33, %f26, %f65;
	fma.rn.ftz.f32 	%f66, %f35, %f4, %f4;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f20, %f5, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f21, %f20;
	add.f32 	%f19, %f21, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f18,%f19;
	// end inline asm
	fma.rn.ftz.f32 	%f24, %f18, %f60, %f59;
	setp.ge.f32 	%p10, %f5, 0f41102CB4;
	selp.f32 	%f25, 0f3F800000, %f24, %p10;
	mov.b32 	%r31, %f25;
	mov.b32 	%r32, %f4;
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r33, %r31;
	mov.b32 	%f66, %r34;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 26                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:0:26
	ld.param.u64 	%rd1, [triton_poi_fused_mv_0_param_4];
	.loc	1 41 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:41:20
	add.f32 	%f36, %f1, %f2;
	.loc	1 42 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:42:20
	add.f32 	%f9, %f36, %f3;
	.loc	1 43 27                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:43:27
	abs.ftz.f32 	%f10, %f9;
	setp.ltu.f32 	%p11, %f10, 0f3F19999A;
	@%p11 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f45, %f9, %f9;
	fma.rn.ftz.f32 	%f48, %f62, %f45, %f61;
	fma.rn.ftz.f32 	%f50, %f48, %f45, %f63;
	fma.rn.ftz.f32 	%f52, %f50, %f45, %f64;
	fma.rn.ftz.f32 	%f54, %f52, %f45, %f65;
	fma.rn.ftz.f32 	%f67, %f54, %f9, %f9;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f39, %f10, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f40, %f39;
	add.f32 	%f38, %f40, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f37,%f38;
	// end inline asm
	fma.rn.ftz.f32 	%f43, %f37, %f60, %f59;
	setp.ge.f32 	%p12, %f10, 0f41102CB4;
	selp.f32 	%f44, 0f3F800000, %f43, %p12;
	mov.b32 	%r35, %f44;
	mov.b32 	%r36, %f9;
	and.b32  	%r37, %r36, -2147483648;
	or.b32  	%r38, %r37, %r35;
	mov.b32 	%f67, %r38;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 29 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:29:19
	mov.b32 	%f55, %r8;
	.loc	1 35 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:35:20
	mov.b32 	%f56, %r12;
	.loc	1 44 20                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:44:20
	mul.f32 	%f57, %f67, %f56;
	.loc	1 45 19                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:45:19
	fma.rn.f32 	%f58, %f66, %f55, %f57;
	.loc	1 46 25                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:25
	mul.wide.s32 	%rd20, %r1, 4;
	add.s64 	%rd19, %rd1, %rd20;
	.loc	1 46 37                         // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:37
	mov.b32 	%r39, %f58;
	// begin inline asm
	@%p1 st.global.b32 [ %rd19 + 0 ], { %r39 };
	// end inline asm
	.loc	1 46 4                          // cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wf/cwfmrqkam4blvmylme3l4u77etrpurrtpbp2euywtz7bvwggdrvq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 102
.b8 109
.b8 114
.b8 113
.b8 107
.b8 97
.b8 109
.b8 52
.b8 98
.b8 108
.b8 118
.b8 109
.b8 121
.b8 108
.b8 109
.b8 101
.b8 51
.b8 108
.b8 52
.b8 117
.b8 55
.b8 55
.b8 101
.b8 116
.b8 114
.b8 112
.b8 117
.b8 114
.b8 114
.b8 116
.b8 112
.b8 98
.b8 112
.b8 50
.b8 101
.b8 117
.b8 121
.b8 119
.b8 116
.b8 122
.b8 55
.b8 98
.b8 118
.b8 119
.b8 103
.b8 103
.b8 100
.b8 114
.b8 118
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
