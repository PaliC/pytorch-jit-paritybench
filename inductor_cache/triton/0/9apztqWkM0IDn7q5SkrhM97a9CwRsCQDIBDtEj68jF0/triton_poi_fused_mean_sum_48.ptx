//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mean_sum_48 // -- Begin function triton_poi_fused_mean_sum_48
                                        // @triton_poi_fused_mean_sum_48
.visible .entry triton_poi_fused_mean_sum_48(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_sum_48_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_sum_48_param_1,
	.param .u32 triton_poi_fused_mean_sum_48_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<47>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_mean_sum_48_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_mean_sum_48_param_1];
$L__tmp0:
	.loc	1 21 28                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:21:33
	shl.b32 	%r26, %r1, 8;
	.loc	1 22 36                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:22:36
	mov.u32 	%r27, %tid.x;
	shl.b32 	%r28, %r27, 1;
	and.b32  	%r29, %r28, 254;
	.loc	1 22 23                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:22:23
	or.b32  	%r30, %r26, %r29;
	.loc	1 25 19                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:25:19
	shr.s32 	%r32, %r30, 31;
	shr.u32 	%r33, %r32, 21;
	add.s32 	%r34, %r30, %r33;
	.loc	1 24 19                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:24:19
	and.b32  	%r35, %r34, -2048;
	sub.s32 	%r36, %r30, %r35;
	.loc	1 27 40                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:40
	shl.b32 	%r37, %r34, 2;
	and.b32  	%r38, %r37, -8192;
	.loc	1 27 35                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:35
	add.s32 	%r39, %r38, %r36;
	.loc	1 27 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:30
	mul.wide.s32 	%rd12, %r39, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mov.pred 	%p1, -1;
	.loc	1 27 45                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 43                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:28:43
	add.s32 	%r40, %r39, 32768;
	.loc	1 28 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:28:30
	mul.wide.s32 	%rd13, %r40, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 28 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:28:53
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 42                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:29:42
	add.s32 	%r41, %r39, 2048;
	.loc	1 29 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:29:30
	mul.wide.s32 	%rd14, %r41, 4;
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 29 52                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:29:52
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 43                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:30:43
	add.s32 	%r42, %r39, 34816;
	.loc	1 30 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:30:30
	mul.wide.s32 	%rd15, %r42, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 30 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:30:53
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 42                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:31:42
	add.s32 	%r43, %r39, 4096;
	.loc	1 31 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:31:30
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 31 52                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:31:52
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 32 43                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:32:43
	add.s32 	%r44, %r39, 36864;
	.loc	1 32 30                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:32:30
	mul.wide.s32 	%rd17, %r44, 4;
	add.s64 	%rd6, %rd10, %rd17;
	.loc	1 32 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:32:53
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 33 43                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:33:43
	add.s32 	%r45, %r39, 6144;
	.loc	1 33 31                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:33:31
	mul.wide.s32 	%rd18, %r45, 4;
	add.s64 	%rd7, %rd10, %rd18;
	.loc	1 33 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:33:53
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r15 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 34 44                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:34:44
	add.s32 	%r46, %r39, 38912;
	.loc	1 34 31                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:34:31
	mul.wide.s32 	%rd19, %r46, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 34 54                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:34:54
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 27 45                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:45
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r2;
	.loc	1 28 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:28:53
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r4;
	.loc	1 35 18                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:35:18
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 27 45                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:27:45
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r3;
	.loc	1 28 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:28:53
	mov.b32 	%f9, %r9;
	mov.b32 	%f10, %r5;
	.loc	1 35 18                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:35:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 37 18                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:37:18
	add.f32 	%f13, %f5, %f6;
	add.f32 	%f14, %f11, %f12;
	.loc	1 31 52                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:31:52
	mov.b32 	%f15, %r10;
	mov.b32 	%f16, %r14;
	.loc	1 32 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:32:53
	mov.b32 	%f17, %r12;
	mov.b32 	%f18, %r16;
	.loc	1 38 18                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:38:18
	add.f32 	%f19, %f16, %f18;
	add.f32 	%f20, %f15, %f17;
	.loc	1 39 19                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:39:19
	add.f32 	%f21, %f13, %f20;
	.loc	1 31 52                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:31:52
	mov.b32 	%f22, %r11;
	mov.b32 	%f23, %r15;
	.loc	1 32 53                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:32:53
	mov.b32 	%f24, %r13;
	mov.b32 	%f25, %r17;
	.loc	1 38 18                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:38:18
	add.f32 	%f26, %f23, %f25;
	add.f32 	%f27, %f22, %f24;
	.loc	1 39 19                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:39:19
	add.f32 	%f28, %f14, %f27;
	.loc	1 41 20                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:41:20
	add.f32 	%f29, %f21, %f19;
	add.f32 	%f30, %f28, %f26;
	.loc	1 43 20                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:43:20
	mov.b32 	%r19, %f29;
	mov.b32 	%r20, 1082130432;
	// begin inline asm
	div.full.f32 %r24, %r19, %r20;
	// end inline asm
	mov.b32 	%r22, %f30;
	// begin inline asm
	div.full.f32 %r25, %r22, %r20;
	// end inline asm
	.loc	1 44 25                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:44:25
	mul.wide.s32 	%rd20, %r30, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 44 37                         // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:44:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r24, %r25 };
	// end inline asm
	.loc	1 44 4                          // c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 51
.b8 106
.b8 113
.b8 117
.b8 112
.b8 113
.b8 109
.b8 105
.b8 106
.b8 99
.b8 117
.b8 114
.b8 50
.b8 52
.b8 98
.b8 113
.b8 50
.b8 98
.b8 110
.b8 122
.b8 50
.b8 109
.b8 98
.b8 114
.b8 104
.b8 50
.b8 98
.b8 110
.b8 122
.b8 104
.b8 99
.b8 105
.b8 122
.b8 99
.b8 55
.b8 97
.b8 117
.b8 116
.b8 104
.b8 107
.b8 98
.b8 100
.b8 112
.b8 55
.b8 103
.b8 55
.b8 54
.b8 113
.b8 110
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
