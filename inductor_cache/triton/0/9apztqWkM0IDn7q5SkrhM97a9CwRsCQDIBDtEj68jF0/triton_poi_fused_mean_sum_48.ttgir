#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_mean_sum_48(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<2048> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<8192> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32768> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<34816> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<36864> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<6144> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<38912> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.muli %6, %cst_1 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.addi %5, %7 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.addi %5, %cst_2 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = arith.addi %12, %7 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = tt.addptr %9, %13 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc14)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = arith.addi %5, %cst_0 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %7 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = tt.addptr %9, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %19 = tt.load %18 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc19)
    %20 = arith.addi %5, %cst_3 : tensor<256xi32, #blocked> loc(#loc20)
    %21 = arith.addi %20, %7 : tensor<256xi32, #blocked> loc(#loc21)
    %22 = tt.addptr %9, %21 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc22)
    %23 = tt.load %22 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %24 = arith.addi %5, %cst_4 : tensor<256xi32, #blocked> loc(#loc24)
    %25 = arith.addi %24, %7 : tensor<256xi32, #blocked> loc(#loc25)
    %26 = tt.addptr %9, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc26)
    %27 = tt.load %26 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc27)
    %28 = arith.addi %5, %cst_5 : tensor<256xi32, #blocked> loc(#loc28)
    %29 = arith.addi %28, %7 : tensor<256xi32, #blocked> loc(#loc29)
    %30 = tt.addptr %9, %29 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc30)
    %31 = tt.load %30 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = arith.addi %5, %cst_6 : tensor<256xi32, #blocked> loc(#loc32)
    %33 = arith.addi %32, %7 : tensor<256xi32, #blocked> loc(#loc33)
    %34 = tt.addptr %9, %33 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc34)
    %35 = tt.load %34 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %36 = arith.addi %5, %cst_7 : tensor<256xi32, #blocked> loc(#loc36)
    %37 = arith.addi %36, %7 : tensor<256xi32, #blocked> loc(#loc37)
    %38 = tt.addptr %9, %37 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc38)
    %39 = tt.load %38 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %40 = arith.addf %11, %15 : tensor<256xf32, #blocked> loc(#loc40)
    %41 = arith.addf %19, %23 : tensor<256xf32, #blocked> loc(#loc41)
    %42 = arith.addf %40, %41 : tensor<256xf32, #blocked> loc(#loc42)
    %43 = arith.addf %27, %31 : tensor<256xf32, #blocked> loc(#loc43)
    %44 = arith.addf %42, %43 : tensor<256xf32, #blocked> loc(#loc44)
    %45 = arith.addf %35, %39 : tensor<256xf32, #blocked> loc(#loc45)
    %46 = arith.addf %44, %45 : tensor<256xf32, #blocked> loc(#loc46)
    %47 = arith.divf %46, %cst : tensor<256xf32, #blocked> loc(#loc47)
    %48 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc48)
    %49 = tt.addptr %48, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc48)
    tt.store %49, %47 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":21:28)
#loc3 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":21:33)
#loc4 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":22:36)
#loc5 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":22:23)
#loc6 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":24:19)
#loc7 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":25:19)
#loc8 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":27:40)
#loc9 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":27:35)
#loc10 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":27:30)
#loc11 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":27:45)
#loc12 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":28:38)
#loc13 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":28:43)
#loc14 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":28:30)
#loc15 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":28:53)
#loc16 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":29:37)
#loc17 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":29:42)
#loc18 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":29:30)
#loc19 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":29:52)
#loc20 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":30:38)
#loc21 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":30:43)
#loc22 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":30:30)
#loc23 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":30:53)
#loc24 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":31:37)
#loc25 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":31:42)
#loc26 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":31:30)
#loc27 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":31:52)
#loc28 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":32:38)
#loc29 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":32:43)
#loc30 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":32:30)
#loc31 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":32:53)
#loc32 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":33:38)
#loc33 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":33:43)
#loc34 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":33:31)
#loc35 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":33:53)
#loc36 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":34:39)
#loc37 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":34:44)
#loc38 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":34:31)
#loc39 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":34:54)
#loc40 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":35:18)
#loc41 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":36:18)
#loc42 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":37:18)
#loc43 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":38:18)
#loc44 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":39:19)
#loc45 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":40:20)
#loc46 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":41:20)
#loc47 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":43:20)
#loc48 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":44:25)
#loc49 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":44:37)
#loc50 = loc("inductor_cache/73/c73jqupqmijcur24bq2bnz2mbrh2bnzhcizc7authkbdp7g76qny.py":44:4)
