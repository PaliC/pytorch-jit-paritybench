; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_log_neg_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 7, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 127, !dbg !12
  %12 = or disjoint i32 %9, %11, !dbg !13
  %13 = icmp slt i32 %12, 512, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 64, !dbg !15
  %15 = mul i32 %14, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = srem i32 %14, 2, !dbg !17
  %17 = sdiv i32 %12, 128, !dbg !18
  %18 = sext i32 %12 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %13) #3, !dbg !20
  %21 = shl nsw i32 %16, 3, !dbg !21
  %22 = shl nsw i32 %17, 4, !dbg !22
  %23 = add nsw i32 %21, %22, !dbg !23
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !24
  %24 = sdiv i8 %.lhs.trunc, 8, !dbg !24
  %.sext = sext i8 %24 to i32, !dbg !24
  %25 = add nsw i32 %23, %.sext, !dbg !25
  %26 = sext i32 %25 to i64, !dbg !26
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !26
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %13) #3, !dbg !27
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %26, !dbg !28
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %13) #3, !dbg !29
  %31 = bitcast i32 %30 to float, !dbg !29
  %32 = srem i32 %12, 8, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %4, i64 %33, !dbg !31
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %13) #3, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %5, i64 %33, !dbg !33
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %13) #3, !dbg !34
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !35
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %13) #3, !dbg !36
  %40 = bitcast i32 %39 to float, !dbg !36
  %41 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %31, float 8.000000e+00) #3, !dbg !37
  %42 = fadd float %41, 0x3EE4F8B580000000, !dbg !38
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i = icmp eq i32 %43, 0, !dbg !39
  br i1 %.not.i, label %46, label %44, !dbg !39

44:                                               ; preds = %7
  %45 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %42), !dbg !39
  br label %__nv_rsqrtf.exit, !dbg !39

46:                                               ; preds = %7
  %47 = tail call float @llvm.nvvm.rsqrt.approx.f(float %42), !dbg !39
  br label %__nv_rsqrtf.exit, !dbg !39

__nv_rsqrtf.exit:                                 ; preds = %44, %46
  %.0.i = phi float [ %45, %44 ], [ %47, %46 ], !dbg !39
  %48 = fcmp olt float %40, 0x3810000000000000, !dbg !40
  %49 = fmul float %40, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %48, float %49, float %40, !dbg !40
  %i.i.0.i = select i1 %48, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %50 = bitcast float %.02.i to i32, !dbg !40
  %51 = add i32 %50, -1059760811, !dbg !40
  %52 = and i32 %51, -8388608, !dbg !40
  %53 = sub i32 %50, %52, !dbg !40
  %54 = bitcast i32 %53 to float, !dbg !40
  %55 = sitofp i32 %52 to float, !dbg !40
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i1 = icmp eq i32 %56, 0, !dbg !40
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %55, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %.08.i = select i1 %.not.i1, float %58, float %57, !dbg !40
  %59 = fadd float %54, -1.000000e+00, !dbg !40
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i = icmp eq i32 %60, 0, !dbg !40
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %59, float 0x3FC2073EC0000000) #3, !dbg !40
  %62 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %59, float 0x3FC2073EC0000000) #3, !dbg !40
  %.010.i = select i1 %.not1.i, float %62, float %61, !dbg !40
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i = icmp eq i32 %63, 0, !dbg !40
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %59, float 0xBFBF19B980000000) #3, !dbg !40
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %59, float 0xBFBF19B980000000) #3, !dbg !40
  %.011.i = select i1 %.not2.i, float %65, float %64, !dbg !40
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i = icmp eq i32 %66, 0, !dbg !40
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %59, float 0x3FC1E52AA0000000) #3, !dbg !40
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %59, float 0x3FC1E52AA0000000) #3, !dbg !40
  %.012.i = select i1 %.not3.i, float %68, float %67, !dbg !40
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i = icmp eq i32 %69, 0, !dbg !40
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %59, float 0xBFC55B1720000000) #3, !dbg !40
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %59, float 0xBFC55B1720000000) #3, !dbg !40
  %.09.i = select i1 %.not4.i, float %71, float %70, !dbg !40
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i = icmp eq i32 %72, 0, !dbg !40
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %59, float 0x3FC99DA160000000) #3, !dbg !40
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %59, float 0x3FC99DA160000000) #3, !dbg !40
  %.05.i = select i1 %.not5.i, float %74, float %73, !dbg !40
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i = icmp eq i32 %75, 0, !dbg !40
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %59, float 0xBFCFFFE440000000) #3, !dbg !40
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %59, float 0xBFCFFFE440000000) #3, !dbg !40
  %.01.i = select i1 %.not6.i, float %77, float %76, !dbg !40
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not7.i = icmp eq i32 %78, 0, !dbg !40
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %59, float 0x3FD5554F00000000) #3, !dbg !40
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %59, float 0x3FD5554F00000000) #3, !dbg !40
  %.0.i2 = select i1 %.not7.i, float %80, float %79, !dbg !40
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not8.i = icmp eq i32 %81, 0, !dbg !40
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i2, float %59, float -5.000000e-01) #3, !dbg !40
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i2, float %59, float -5.000000e-01) #3, !dbg !40
  %.07.i = select i1 %.not8.i, float %83, float %82, !dbg !40
  %84 = fmul float %59, %.07.i, !dbg !40
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not9.i = icmp eq i32 %85, 0, !dbg !40
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %84, float %59, float %59) #3, !dbg !40
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %84, float %59, float %59) #3, !dbg !40
  %.06.i = select i1 %.not9.i, float %87, float %86, !dbg !40
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not10.i = icmp eq i32 %88, 0, !dbg !40
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !40
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !40
  %.04.i = select i1 %.not10.i, float %90, float %89, !dbg !40
  %91 = icmp ugt i32 %50, 2139095039, !dbg !40
  br i1 %91, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %__nv_rsqrtf.exit
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not11.i = icmp eq i32 %92, 0, !dbg !40
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %.03.i = select i1 %.not11.i, float %94, float %93, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %__nv_rsqrtf.exit, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %__nv_rsqrtf.exit ], !dbg !40
  %95 = bitcast i32 %20 to float, !dbg !20
  %96 = bitcast i32 %28 to float, !dbg !27
  %97 = fsub float %95, %96, !dbg !41
  %98 = fmul float %97, %.0.i, !dbg !42
  %99 = bitcast i32 %35 to float, !dbg !32
  %100 = fmul float %98, %99, !dbg !43
  %101 = bitcast i32 %37 to float, !dbg !34
  %102 = fadd float %100, %101, !dbg !44
  %103 = fcmp olt float %102, 0.000000e+00, !dbg !45
  %104 = select i1 %103, float 0.000000e+00, float %102, !dbg !49
  %105 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %106 = fsub float 0.000000e+00, %r.i.0.i, !dbg !50
  %107 = select i1 %105, float 0x7FF0000000000000, float %106, !dbg !40
  %108 = fadd float %104, %107, !dbg !51
  %109 = bitcast float %108 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %109, ptr addrspace(1) %38, i1 %13) #3, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxspdzx2g6qsktjlmj5we3kx2qeqtheqt77l6jyms75o4gmtuiuy.py", directory: "inductor_cache/xs")
!4 = !{ptr @triton_poi_fused_add_log_neg_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_log_neg_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_log_neg_1", linkageName: "triton_poi_fused_add_log_neg_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 27, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 32, scope: !7)
!22 = !DILocation(line: 29, column: 40, scope: !7)
!23 = !DILocation(line: 29, column: 37, scope: !7)
!24 = !DILocation(line: 29, column: 79, scope: !7)
!25 = !DILocation(line: 29, column: 73, scope: !7)
!26 = !DILocation(line: 29, column: 30, scope: !7)
!27 = !DILocation(line: 29, column: 84, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 84, scope: !7)
!30 = !DILocation(line: 31, column: 37, scope: !7)
!31 = !DILocation(line: 31, column: 32, scope: !7)
!32 = !DILocation(line: 31, column: 42, scope: !7)
!33 = !DILocation(line: 32, column: 32, scope: !7)
!34 = !DILocation(line: 32, column: 42, scope: !7)
!35 = !DILocation(line: 33, column: 35, scope: !7)
!36 = !DILocation(line: 33, column: 40, scope: !7)
!37 = !DILocation(line: 36, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 18, scope: !7)
!39 = !DILocation(line: 39, column: 27, scope: !7)
!40 = !DILocation(line: 45, column: 24, scope: !7)
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 40, column: 18, scope: !7)
!43 = !DILocation(line: 41, column: 19, scope: !7)
!44 = !DILocation(line: 42, column: 20, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !46, inlinedAt: !48)
!46 = distinct !DILexicalBlockFile(scope: !7, file: !47, discriminator: 0)
!47 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!48 = !DILocation(line: 44, column: 42, scope: !7)
!49 = !DILocation(line: 121, column: 29, scope: !46, inlinedAt: !48)
!50 = !DILocation(line: 46, column: 13, scope: !7)
!51 = !DILocation(line: 47, column: 20, scope: !7)
!52 = !DILocation(line: 50, column: 40, scope: !7)
!53 = !DILocation(line: 50, column: 4, scope: !7)
