; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_41(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 6656, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %.frozen = freeze i32 %8, !dbg !16
  %11 = sdiv i32 %.frozen, 1664, !dbg !16
  %12 = srem i32 %10, 416, !dbg !17
  %13 = mul i32 %11, 1664, !dbg !18
  %.decomposed = sub i32 %.frozen, %13, !dbg !18
  %14 = shl nsw i32 %12, 4, !dbg !19
  %15 = mul i32 %11, 26624, !dbg !20
  %16 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !21
  %17 = insertelement <2 x i32> %16, i32 %10, i64 1, !dbg !21
  %18 = srem <2 x i32> %17, splat (i32 4), !dbg !21
  %19 = extractelement <2 x i32> %18, i64 0, !dbg !21
  %20 = extractelement <2 x i32> %18, i64 1, !dbg !22
  %21 = icmp sgt i32 %20, 0, !dbg !23
  %22 = shl nsw <2 x i32> %18, splat (i32 1), !dbg !24
  %23 = shl nsw i32 %19, 1, !dbg !24
  %24 = icmp sgt i32 %19, 0, !dbg !25
  %25 = and i1 %24, %21, !dbg !26
  %26 = add i32 %15, %23, !dbg !27
  %27 = add i32 %26, 19959, !dbg !28
  %28 = add i32 %27, %14, !dbg !29
  %29 = sext i32 %28 to i64, !dbg !30
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !30
  %31 = and i1 %9, %25, !dbg !31
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %31, i32 0, i1 %31) #1, !dbg !32
  %33 = bitcast i32 %32 to float, !dbg !32
  %34 = icmp sgt i32 %19, -1, !dbg !33
  %35 = and i1 %34, %21, !dbg !34
  %36 = add i32 %26, 19960, !dbg !35
  %37 = add i32 %36, %14, !dbg !36
  %38 = sext i32 %37 to i64, !dbg !37
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !37
  %40 = and i1 %9, %35, !dbg !38
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40) #1, !dbg !39
  %42 = bitcast i32 %41 to float, !dbg !39
  %43 = fadd float %33, %42, !dbg !40
  %44 = add i32 %26, 19961, !dbg !41
  %45 = add i32 %44, %14, !dbg !42
  %46 = sext i32 %45 to i64, !dbg !43
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !43
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %40, i32 0, i1 %40) #1, !dbg !44
  %49 = bitcast i32 %48 to float, !dbg !44
  %50 = fadd float %43, %49, !dbg !45
  %51 = icmp sgt i32 %20, -1, !dbg !46
  %52 = and i1 %24, %51, !dbg !47
  %53 = add i32 %26, 19967, !dbg !48
  %54 = add i32 %53, %14, !dbg !49
  %55 = sext i32 %54 to i64, !dbg !50
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !50
  %57 = and i1 %9, %52, !dbg !51
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57) #1, !dbg !52
  %59 = bitcast i32 %58 to float, !dbg !52
  %60 = fadd float %50, %59, !dbg !53
  %61 = or i32 %20, %19, !dbg !22
  %62 = icmp sgt i32 %61, -1, !dbg !22
  %63 = add i32 %26, 19968, !dbg !54
  %64 = add i32 %63, %14, !dbg !55
  %65 = sext i32 %64 to i64, !dbg !56
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !56
  %67 = and i1 %9, %62, !dbg !57
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %67, i32 0, i1 %67) #1, !dbg !58
  %69 = bitcast i32 %68 to float, !dbg !58
  %70 = fadd float %60, %69, !dbg !59
  %71 = add i32 %26, 19969, !dbg !60
  %72 = add i32 %71, %14, !dbg !61
  %73 = sext i32 %72 to i64, !dbg !62
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !62
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %67, i32 0, i1 %67) #1, !dbg !63
  %76 = bitcast i32 %75 to float, !dbg !63
  %77 = fadd float %70, %76, !dbg !64
  %78 = add i32 %26, 19975, !dbg !65
  %79 = add i32 %78, %14, !dbg !66
  %80 = sext i32 %79 to i64, !dbg !67
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !67
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %81, i1 %57, i32 0, i1 %57) #1, !dbg !68
  %83 = bitcast i32 %82 to float, !dbg !68
  %84 = fadd float %77, %83, !dbg !69
  %85 = add i32 %26, 19976, !dbg !70
  %86 = add i32 %85, %14, !dbg !71
  %87 = sext i32 %86 to i64, !dbg !72
  %88 = getelementptr float, ptr addrspace(1) %0, i64 %87, !dbg !72
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %67, i32 0, i1 %67) #1, !dbg !73
  %90 = bitcast i32 %89 to float, !dbg !73
  %91 = fadd float %84, %90, !dbg !74
  %92 = add i32 %26, 19977, !dbg !75
  %93 = add i32 %92, %14, !dbg !76
  %94 = sext i32 %93 to i64, !dbg !77
  %95 = getelementptr float, ptr addrspace(1) %0, i64 %94, !dbg !77
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %95, i1 %67, i32 0, i1 %67) #1, !dbg !78
  %97 = bitcast i32 %96 to float, !dbg !78
  %98 = fadd float %91, %97, !dbg !79
  %99 = mul nsw i32 %19, -2, !dbg !80
  %100 = mul nsw i32 %20, -2, !dbg !81
  %101 = add nsw <2 x i32> %22, splat (i32 2), !dbg !82
  %102 = extractelement <2 x i32> %101, i64 0, !dbg !83
  %103 = mul nsw i32 %100, %102, !dbg !84
  %104 = shl nsw i32 %19, 2, !dbg !85
  %105 = mul nsw i32 %104, %20, !dbg !86
  %reass.add = add nsw i32 %102, %99
  %106 = extractelement <2 x i32> %101, i64 1, !dbg !87
  %reass.mul = mul nsw i32 %reass.add, %106
  %107 = or disjoint i32 %99, 1, !dbg !88
  %108 = add nsw i32 %107, %100, !dbg !89
  %109 = add nsw i32 %108, %105, !dbg !90
  %110 = add nsw i32 %109, %102, !dbg !83
  %111 = add nsw i32 %110, %103, !dbg !91
  %112 = add i32 %111, %106, !dbg !87
  %113 = add i32 %112, %reass.mul, !dbg !92
  %114 = sitofp i32 %113 to float, !dbg !93
  %115 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %98, float %114) #1, !dbg !93
  %116 = mul i32 %11, 6656, !dbg !94
  %117 = add i32 %116, %.decomposed, !dbg !95
  %118 = sext i32 %117 to i64, !dbg !96
  %119 = getelementptr float, ptr addrspace(1) %1, i64 %118, !dbg !96
  %120 = bitcast float %115 to i32, !dbg !97
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %120, ptr addrspace(1) %119, i1 %9) #1, !dbg !97
  ret void, !dbg !98
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7x2uqqwb25hpso472wg6b6ejjfbilwqopcvqyapjwnvmmmonfme.py", directory: "inductor_cache/7x")
!4 = !{ptr @triton_poi_fused_avg_pool2d_41, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_41, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_41", linkageName: "triton_poi_fused_avg_pool2d_41", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 26, scope: !7)
!18 = !DILocation(line: 28, column: 19, scope: !7)
!19 = !DILocation(line: 40, column: 49, scope: !7)
!20 = !DILocation(line: 40, column: 60, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 62, column: 20, scope: !7)
!23 = !DILocation(line: 31, column: 19, scope: !7)
!24 = !DILocation(line: 35, column: 20, scope: !7)
!25 = !DILocation(line: 36, column: 19, scope: !7)
!26 = !DILocation(line: 39, column: 19, scope: !7)
!27 = !DILocation(line: 40, column: 39, scope: !7)
!28 = !DILocation(line: 40, column: 46, scope: !7)
!29 = !DILocation(line: 40, column: 54, scope: !7)
!30 = !DILocation(line: 40, column: 31, scope: !7)
!31 = !DILocation(line: 40, column: 73, scope: !7)
!32 = !DILocation(line: 40, column: 65, scope: !7)
!33 = !DILocation(line: 42, column: 21, scope: !7)
!34 = !DILocation(line: 45, column: 19, scope: !7)
!35 = !DILocation(line: 46, column: 46, scope: !7)
!36 = !DILocation(line: 46, column: 54, scope: !7)
!37 = !DILocation(line: 46, column: 31, scope: !7)
!38 = !DILocation(line: 46, column: 73, scope: !7)
!39 = !DILocation(line: 46, column: 65, scope: !7)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 46, scope: !7)
!42 = !DILocation(line: 53, column: 54, scope: !7)
!43 = !DILocation(line: 53, column: 31, scope: !7)
!44 = !DILocation(line: 53, column: 65, scope: !7)
!45 = !DILocation(line: 54, column: 20, scope: !7)
!46 = !DILocation(line: 56, column: 21, scope: !7)
!47 = !DILocation(line: 59, column: 20, scope: !7)
!48 = !DILocation(line: 60, column: 46, scope: !7)
!49 = !DILocation(line: 60, column: 54, scope: !7)
!50 = !DILocation(line: 60, column: 31, scope: !7)
!51 = !DILocation(line: 60, column: 73, scope: !7)
!52 = !DILocation(line: 60, column: 65, scope: !7)
!53 = !DILocation(line: 61, column: 20, scope: !7)
!54 = !DILocation(line: 63, column: 46, scope: !7)
!55 = !DILocation(line: 63, column: 54, scope: !7)
!56 = !DILocation(line: 63, column: 31, scope: !7)
!57 = !DILocation(line: 63, column: 73, scope: !7)
!58 = !DILocation(line: 63, column: 65, scope: !7)
!59 = !DILocation(line: 64, column: 20, scope: !7)
!60 = !DILocation(line: 66, column: 46, scope: !7)
!61 = !DILocation(line: 66, column: 54, scope: !7)
!62 = !DILocation(line: 66, column: 31, scope: !7)
!63 = !DILocation(line: 66, column: 65, scope: !7)
!64 = !DILocation(line: 67, column: 20, scope: !7)
!65 = !DILocation(line: 73, column: 46, scope: !7)
!66 = !DILocation(line: 73, column: 54, scope: !7)
!67 = !DILocation(line: 73, column: 31, scope: !7)
!68 = !DILocation(line: 73, column: 65, scope: !7)
!69 = !DILocation(line: 74, column: 20, scope: !7)
!70 = !DILocation(line: 76, column: 46, scope: !7)
!71 = !DILocation(line: 76, column: 54, scope: !7)
!72 = !DILocation(line: 76, column: 31, scope: !7)
!73 = !DILocation(line: 76, column: 65, scope: !7)
!74 = !DILocation(line: 77, column: 20, scope: !7)
!75 = !DILocation(line: 79, column: 46, scope: !7)
!76 = !DILocation(line: 79, column: 54, scope: !7)
!77 = !DILocation(line: 79, column: 31, scope: !7)
!78 = !DILocation(line: 79, column: 65, scope: !7)
!79 = !DILocation(line: 80, column: 20, scope: !7)
!80 = !DILocation(line: 81, column: 22, scope: !7)
!81 = !DILocation(line: 81, column: 34, scope: !7)
!82 = !DILocation(line: 81, column: 60, scope: !7)
!83 = !DILocation(line: 81, column: 241, scope: !7)
!84 = !DILocation(line: 81, column: 250, scope: !7)
!85 = !DILocation(line: 81, column: 316, scope: !7)
!86 = !DILocation(line: 81, column: 319, scope: !7)
!87 = !DILocation(line: 81, column: 325, scope: !7)
!88 = !DILocation(line: 81, column: 29, scope: !7)
!89 = !DILocation(line: 81, column: 40, scope: !7)
!90 = !DILocation(line: 81, column: 167, scope: !7)
!91 = !DILocation(line: 81, column: 314, scope: !7)
!92 = !DILocation(line: 81, column: 389, scope: !7)
!93 = !DILocation(line: 82, column: 20, scope: !7)
!94 = !DILocation(line: 83, column: 35, scope: !7)
!95 = !DILocation(line: 83, column: 30, scope: !7)
!96 = !DILocation(line: 83, column: 25, scope: !7)
!97 = !DILocation(line: 83, column: 47, scope: !7)
!98 = !DILocation(line: 83, column: 4, scope: !7)
