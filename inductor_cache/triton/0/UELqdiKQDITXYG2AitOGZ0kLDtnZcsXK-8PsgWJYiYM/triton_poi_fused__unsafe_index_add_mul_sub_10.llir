; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %.frozen = freeze i32 %14, !dbg !14
  %15 = sdiv i32 %.frozen, 4, !dbg !14
  %16 = srem i32 %15, 4, !dbg !15
  %17 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sdiv i32 %14, 16, !dbg !17
  %19 = sext i32 %16 to i64, !dbg !18
  %20 = getelementptr i64, ptr addrspace(1) %1, i64 %19, !dbg !18
  %21 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !19
  %22 = sext i32 %.decomposed to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %5, i64 %22, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = getelementptr i64, ptr addrspace(1) %6, i64 %19, !dbg !22
  %27 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %7, i64 %19, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !25
  %30 = bitcast i32 %29 to float, !dbg !25
  %31 = add i64 %21, 24, !dbg !26
  %32 = icmp slt i64 %21, 0, !dbg !27
  %33 = select i1 %32, i64 %31, i64 %21, !dbg !28
  %34 = mul i32 %18, 24, !dbg !29
  %35 = sext i32 %34 to i64, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %33, !dbg !31
  %37 = getelementptr float, ptr addrspace(1) %36, i64 %35, !dbg !31
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !32
  %39 = bitcast i32 %38 to float, !dbg !32
  %40 = fsub float 0.000000e+00, %39, !dbg !33
  %41 = fmul float %40, 0x3FF7154760000000, !dbg !37
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #1, !dbg !37
  %43 = fadd float %42, 1.000000e+00, !dbg !38
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %43) #1, !dbg !39
  %45 = fsub float %44, %44, !dbg !40
  %46 = fmul float %45, %25, !dbg !41
  %47 = fadd float %44, %46, !dbg !42
  %48 = add i64 %27, 24, !dbg !43
  %49 = icmp slt i64 %27, 0, !dbg !44
  %50 = select i1 %49, i64 %48, i64 %27, !dbg !45
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !46
  %52 = getelementptr float, ptr addrspace(1) %51, i64 %35, !dbg !46
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !47
  %54 = bitcast i32 %53 to float, !dbg !47
  %55 = fsub float 0.000000e+00, %54, !dbg !48
  %56 = fmul float %55, 0x3FF7154760000000, !dbg !50
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #1, !dbg !50
  %58 = fadd float %57, 1.000000e+00, !dbg !51
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %58) #1, !dbg !52
  %60 = fsub float %59, %59, !dbg !53
  %61 = fmul float %60, %25, !dbg !54
  %62 = fadd float %59, %61, !dbg !55
  %63 = fsub float %62, %47, !dbg !56
  %64 = fmul float %63, %30, !dbg !57
  %65 = fadd float %47, %64, !dbg !58
  %66 = sext i32 %14 to i64, !dbg !59
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !59
  %68 = bitcast float %65 to i32, !dbg !60
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %67, i1 true) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4yduovk56ibc3dqb3pdkyagytufib2ceaq7q6qpazcy7ne6v5co.py", directory: "inductor_cache/4y")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_10", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 31, column: 31, scope: !7)
!21 = !DILocation(line: 31, column: 36, scope: !7)
!22 = !DILocation(line: 32, column: 31, scope: !7)
!23 = !DILocation(line: 32, column: 36, scope: !7)
!24 = !DILocation(line: 33, column: 31, scope: !7)
!25 = !DILocation(line: 33, column: 36, scope: !7)
!26 = !DILocation(line: 35, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 32, scope: !7)
!29 = !DILocation(line: 42, column: 41, scope: !7)
!30 = !DILocation(line: 42, column: 38, scope: !7)
!31 = !DILocation(line: 42, column: 31, scope: !7)
!32 = !DILocation(line: 42, column: 46, scope: !7)
!33 = !DILocation(line: 47, column: 30, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!36 = !DILocation(line: 43, column: 23, scope: !7)
!37 = !DILocation(line: 47, column: 29, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 47, column: 20, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 47, column: 16, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 48, column: 20, scope: !7)
!42 = !DILocation(line: 49, column: 20, scope: !7)
!43 = !DILocation(line: 50, column: 20, scope: !7)
!44 = !DILocation(line: 51, column: 20, scope: !7)
!45 = !DILocation(line: 52, column: 35, scope: !7)
!46 = !DILocation(line: 53, column: 31, scope: !7)
!47 = !DILocation(line: 53, column: 47, scope: !7)
!48 = !DILocation(line: 47, column: 30, scope: !34, inlinedAt: !49)
!49 = !DILocation(line: 54, column: 23, scope: !7)
!50 = !DILocation(line: 47, column: 29, scope: !34, inlinedAt: !49)
!51 = !DILocation(line: 47, column: 20, scope: !34, inlinedAt: !49)
!52 = !DILocation(line: 47, column: 16, scope: !34, inlinedAt: !49)
!53 = !DILocation(line: 55, column: 20, scope: !7)
!54 = !DILocation(line: 56, column: 20, scope: !7)
!55 = !DILocation(line: 57, column: 20, scope: !7)
!56 = !DILocation(line: 58, column: 20, scope: !7)
!57 = !DILocation(line: 59, column: 20, scope: !7)
!58 = !DILocation(line: 60, column: 20, scope: !7)
!59 = !DILocation(line: 61, column: 28, scope: !7)
!60 = !DILocation(line: 61, column: 40, scope: !7)
!61 = !DILocation(line: 61, column: 4, scope: !7)
