#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_30(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":19:0)) attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<16> : tensor<1x256xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<1x256xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x256xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x256xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x256xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x256xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x256xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x256xi32, #blocked1> loc(#loc5)
    %10 = tt.get_program_id x : i32 loc(#loc6)
    %11 = arith.cmpi slt, %10, %c16_i32 : i32 loc(#loc7)
    %12 = arith.remsi %9, %cst_0 : tensor<1x256xi32, #blocked1> loc(#loc8)
    %13 = arith.muli %8, %cst : tensor<1x256xi32, #blocked> loc(#loc9)
    %14 = tt.splat %10 : i32 -> tensor<1x256xi32, #blocked> loc(#loc10)
    %15 = arith.addi %14, %13 : tensor<1x256xi32, #blocked> loc(#loc10)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %17 = tt.addptr %16, %15 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc11)
    %18 = tt.splat %11 : i1 -> tensor<1x256xi1, #blocked> loc(#loc12)
    %19 = tt.load %17, %18 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %20 = triton_gpu.convert_layout %19 : tensor<1x256xf32, #blocked> -> tensor<1x256xf32, #blocked1> loc(#loc12)
    %21 = arith.muli %10, %c2048_i32 : i32 loc(#loc13)
    %22 = tt.splat %21 : i32 -> tensor<1x256xi32, #blocked1> loc(#loc14)
    %23 = arith.addi %9, %22 : tensor<1x256xi32, #blocked1> loc(#loc14)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc15)
    %25 = tt.addptr %24, %23 : tensor<1x256x!tt.ptr<f32>, #blocked1>, tensor<1x256xi32, #blocked1> loc(#loc15)
    %26 = tt.splat %11 : i1 -> tensor<1x256xi1, #blocked1> loc(#loc16)
    %27 = tt.load %25, %26 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc17)
    %29 = tt.addptr %28, %12 : tensor<1x256x!tt.ptr<f32>, #blocked1>, tensor<1x256xi32, #blocked1> loc(#loc17)
    %30 = tt.load %29 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked1> loc(#loc18)
    %31 = arith.addf %27, %30 : tensor<1x256xf32, #blocked1> loc(#loc19)
    %32 = arith.addf %20, %31 : tensor<1x256xf32, #blocked1> loc(#loc20)
    %33 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc21)
    %34 = tt.addptr %33, %15 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc21)
    %35 = triton_gpu.convert_layout %32 : tensor<1x256xf32, #blocked1> -> tensor<1x256xf32, #blocked> loc(#loc22)
    tt.store %34, %35, %18 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc22)
    tt.return loc(#loc23)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":22:28)
#loc3 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":22:33)
#loc4 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":23:44)
#loc5 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":23:23)
#loc6 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":25:28)
#loc7 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":27:21)
#loc8 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":30:19)
#loc9 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":31:38)
#loc10 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":31:35)
#loc11 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":31:30)
#loc12 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":31:43)
#loc13 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":32:40)
#loc14 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":32:35)
#loc15 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":32:30)
#loc16 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":32:45)
#loc17 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":33:30)
#loc18 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":33:35)
#loc19 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":34:18)
#loc20 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":35:18)
#loc21 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":36:25)
#loc22 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":36:44)
#loc23 = loc("inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py":36:4)
