//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_6  // -- Begin function triton_poi_fused_cat_6
                                        // @triton_poi_fused_cat_6
.visible .entry triton_poi_fused_cat_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_6_param_10,
	.param .u32 triton_poi_fused_cat_6_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<64>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<136>;
	.loc	1 19 0                          // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:19:0

// %bb.0:
	ld.param.u64 	%rd39, [triton_poi_fused_cat_6_param_0];
	ld.param.u64 	%rd40, [triton_poi_fused_cat_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:21:33
	shl.b32 	%r48, %r1, 8;
	ld.param.u64 	%rd41, [triton_poi_fused_cat_6_param_2];
	ld.param.u64 	%rd42, [triton_poi_fused_cat_6_param_3];
	.loc	1 22 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:22:36
	mov.u32 	%r49, %tid.x;
	shl.b32 	%r50, %r49, 1;
	ld.param.u64 	%rd43, [triton_poi_fused_cat_6_param_4];
	and.b32  	%r51, %r50, 254;
	ld.param.u64 	%rd44, [triton_poi_fused_cat_6_param_5];
	.loc	1 22 23                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:22:23
	or.b32  	%r52, %r48, %r51;
	ld.param.u64 	%rd45, [triton_poi_fused_cat_6_param_6];
	.loc	1 23 21                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:23:21
	setp.lt.s32 	%p60, %r52, 768;
	ld.param.u64 	%rd46, [triton_poi_fused_cat_6_param_7];
	ld.param.u64 	%rd47, [triton_poi_fused_cat_6_param_8];
	.loc	1 24 21                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:24:21
	shr.s32 	%r54, %r52, 31;
	shr.u32 	%r55, %r54, 28;
	add.s32 	%r56, %r52, %r55;
	shr.s32 	%r57, %r56, 4;
	ld.param.u64 	%rd48, [triton_poi_fused_cat_6_param_9];
	.loc	1 24 27                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:24:27
	mul.hi.s32 	%r58, %r57, 715827883;
	shr.u32 	%r59, %r58, 31;
	shr.u32 	%r60, %r58, 1;
	add.s32 	%r61, %r60, %r59;
	mul.lo.s32 	%r62, %r61, 12;
	sub.s32 	%r63, %r57, %r62;
	ld.param.u64 	%rd49, [triton_poi_fused_cat_6_param_10];
	.loc	1 25 19                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:25:19
	mul.hi.s32 	%r64, %r52, 715827883;
	shr.u32 	%r65, %r64, 31;
	shr.s32 	%r66, %r64, 5;
	add.s32 	%r67, %r66, %r65;
	.loc	1 26 19                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:26:19
	and.b32  	%r68, %r56, -16;
	sub.s32 	%r69, %r52, %r68;
	.loc	1 27 21                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:27:21
	shr.u32 	%r70, %r54, 30;
	add.s32 	%r71, %r52, %r70;
	shr.s32 	%r72, %r71, 2;
	.loc	1 27 26                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:27:26
	shr.u32 	%r73, %r72, 30;
	add.s32 	%r74, %r72, %r73;
	and.b32  	%r75, %r74, -4;
	sub.s32 	%r76, %r72, %r75;
	.loc	1 28 19                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:28:19
	and.b32  	%r77, %r71, -4;
	sub.s32 	%r78, %r52, %r77;
	.loc	1 34 18                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:34:18
	setp.lt.s32 	%p61, %r63, 4;
	.loc	1 35 35                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:35
	mul.lo.s32 	%r79, %r67, 192;
	sub.s32 	%r80, %r52, %r79;
	.loc	1 35 48                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:48
	shl.b32 	%r81, %r67, 6;
	.loc	1 35 45                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:45
	add.s32 	%r82, %r81, %r80;
	.loc	1 35 30                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:30
	mul.wide.s32 	%rd50, %r82, 4;
	add.s64 	%rd1, %rd39, %rd50;
	.loc	1 35 60                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:60
	and.pred  	%p1, %p60, %p61;
	mov.b32 	%r4, 0;
	.loc	1 35 53                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:35:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 39 18                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:39:18
	and.b32  	%r83, %r63, -4;
	setp.eq.s32 	%p62, %r83, 4;
	.loc	1 40 40                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:40:40
	shl.b32 	%r84, %r63, 4;
	.loc	1 40 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:40:36
	add.s32 	%r85, %r81, %r69;
	.loc	1 40 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:40:31
	cvt.s64.s32 	%rd51, %r85;
	cvt.s64.s32 	%rd52, %r84;
	add.s64 	%rd53, %rd51, %rd52;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd55, %rd40, %rd54;
	add.s64 	%rd2, %rd55, -256;
	.loc	1 40 68                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:40:68
	and.pred  	%p4, %p60, %p62;
	.loc	1 40 61                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:40:61
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 41 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:41:31
	mul.wide.s32 	%rd56, %r76, 8;
	add.s64 	%rd4, %rd41, %rd56;
	.loc	1 41 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:41:36
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd4 + 0 ];
	@!%p4 mov.u64 %rd3, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd4 + 0 ];
	@!%p4 mov.u64 %rd5, 0x0;
	// end inline asm
	.loc	1 45 35                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:45:35
	shr.u64 	%rd57, %rd3, 61;
	and.b64  	%rd58, %rd57, 4;
	add.s64 	%rd59, %rd58, %rd3;
	.loc	1 46 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:46:31
	mul.wide.s32 	%rd60, %r78, 8;
	add.s64 	%rd9, %rd42, %rd60;
	.loc	1 46 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:46:36
	// begin inline asm
	mov.u64 %rd7, 0x0;
	mov.u64 %rd8, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b64 { %rd7, %rd8 }, [ %rd9 + 0 ];
	@!%p4 mov.u64 %rd7, 0x0;
	@!%p4 mov.u64 %rd8, 0x0;
	// end inline asm
	.loc	1 50 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:50:31
	shl.b64 	%rd61, %rd7, 2;
	add.s64 	%rd62, %rd43, %rd61;
	shr.u64 	%rd63, %rd7, 59;
	and.b64  	%rd64, %rd63, 16;
	add.s64 	%rd65, %rd62, %rd64;
	shl.b64 	%rd66, %rd59, 4;
	add.s64 	%rd67, %rd65, %rd66;
	mul.wide.s32 	%rd68, %r84, 4;
	add.s64 	%rd69, %rd67, %rd68;
	mul.wide.s32 	%rd70, %r81, 4;
	add.s64 	%rd71, %rd69, %rd70;
	add.s64 	%rd10, %rd71, -256;
	shl.b64 	%rd72, %rd8, 2;
	add.s64 	%rd73, %rd43, %rd72;
	shr.u64 	%rd74, %rd8, 59;
	and.b64  	%rd75, %rd74, 16;
	add.s64 	%rd76, %rd73, %rd75;
	add.s64 	%rd77, %rd76, %rd66;
	add.s64 	%rd78, %rd77, %rd68;
	add.s64 	%rd79, %rd78, %rd70;
	add.s64 	%rd11, %rd79, -256;
	.loc	1 50 74                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:50:74
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r10 }, [ %rd10 + 0 ];
	@!%p4 mov.u32 %r10, %r4;
	// end inline asm
	mov.b32 	%f3, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	@!%p4 mov.u32 %r12, %r4;
	// end inline asm
	mov.b32 	%f4, %r12;
	.loc	1 51 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:51:31
	add.s64 	%rd14, %rd44, %rd60;
	.loc	1 51 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:51:36
	// begin inline asm
	mov.u64 %rd12, 0x0;
	mov.u64 %rd13, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b64 { %rd12, %rd13 }, [ %rd14 + 0 ];
	@!%p4 mov.u64 %rd12, 0x0;
	@!%p4 mov.u64 %rd13, 0x0;
	// end inline asm
	.loc	1 55 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:55:31
	shl.b64 	%rd80, %rd12, 2;
	add.s64 	%rd81, %rd43, %rd80;
	shr.u64 	%rd82, %rd12, 59;
	and.b64  	%rd83, %rd82, 16;
	add.s64 	%rd84, %rd81, %rd83;
	add.s64 	%rd85, %rd84, %rd66;
	add.s64 	%rd86, %rd85, %rd68;
	add.s64 	%rd87, %rd86, %rd70;
	add.s64 	%rd15, %rd87, -256;
	shl.b64 	%rd88, %rd13, 2;
	add.s64 	%rd89, %rd43, %rd88;
	shr.u64 	%rd90, %rd13, 59;
	and.b64  	%rd91, %rd90, 16;
	add.s64 	%rd92, %rd89, %rd91;
	add.s64 	%rd93, %rd92, %rd66;
	add.s64 	%rd94, %rd93, %rd68;
	add.s64 	%rd95, %rd94, %rd70;
	add.s64 	%rd16, %rd95, -256;
	.loc	1 55 74                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:55:74
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd15 + 0 ];
	@!%p4 mov.u32 %r14, %r4;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r16 }, [ %rd16 + 0 ];
	@!%p4 mov.u32 %r16, %r4;
	// end inline asm
	mov.b32 	%f6, %r16;
	.loc	1 56 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:56:20
	sub.f32 	%f7, %f5, %f3;
	sub.f32 	%f8, %f6, %f4;
	.loc	1 57 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:57:31
	mul.wide.s32 	%rd96, %r78, 4;
	add.s64 	%rd17, %rd45, %rd96;
	.loc	1 57 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:57:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd17 + 0 ];
	@!%p4 mov.u32 %r18, %r4;
	@!%p4 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	.loc	1 59 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:59:20
	fma.rn.f32 	%f11, %f7, %f9, %f3;
	fma.rn.f32 	%f12, %f8, %f10, %f4;
	.loc	1 60 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:60:20
	sub.f32 	%f13, %f11, %f1;
	sub.f32 	%f14, %f12, %f2;
	.loc	1 61 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:61:31
	mul.wide.s32 	%rd97, %r76, 4;
	add.s64 	%rd18, %rd46, %rd97;
	.loc	1 61 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:61:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r22 }, [ %rd18 + 0 ];
	@!%p4 mov.u32 %r22, %r4;
	// end inline asm
	mov.b32 	%f15, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r24 }, [ %rd18 + 0 ];
	@!%p4 mov.u32 %r24, %r4;
	// end inline asm
	mov.b32 	%f16, %r24;
	.loc	1 63 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:63:20
	fma.rn.f32 	%f17, %f13, %f15, %f1;
	fma.rn.f32 	%f18, %f14, %f16, %f2;
	.loc	1 66 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:66:20
	setp.gt.s32 	%p63, %r63, 7;
	.loc	1 69 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:69:31
	add.s64 	%rd98, %rd47, %rd54;
	add.s64 	%rd20, %rd98, -512;
	.loc	1 69 69                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:69:69
	and.pred  	%p32, %p60, %p63;
	.loc	1 69 61                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:69:61
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p32 ld.global.v2.b32 { %r26, %r27 }, [ %rd20 + 0 ];
	@!%p32 mov.u32 %r26, %r4;
	@!%p32 mov.u32 %r27, %r4;
	// end inline asm
	mov.b32 	%f19, %r26;
	mov.b32 	%f20, %r27;
	.loc	1 70 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:70:36
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd4 + 0 ];
	@!%p32 mov.u64 %rd21, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p32 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd4 + 0 ];
	@!%p32 mov.u64 %rd23, 0x0;
	// end inline asm
	.loc	1 74 35                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:74:35
	shr.u64 	%rd99, %rd21, 61;
	and.b64  	%rd100, %rd99, 4;
	add.s64 	%rd101, %rd100, %rd21;
	.loc	1 75 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:75:36
	// begin inline asm
	mov.u64 %rd25, 0x0;
	mov.u64 %rd26, 0x0;
	@%p32 ld.global.L1::evict_last.v2.b64 { %rd25, %rd26 }, [ %rd9 + 0 ];
	@!%p32 mov.u64 %rd25, 0x0;
	@!%p32 mov.u64 %rd26, 0x0;
	// end inline asm
	.loc	1 79 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:79:31
	shl.b64 	%rd102, %rd25, 2;
	add.s64 	%rd103, %rd48, %rd102;
	shr.u64 	%rd104, %rd25, 59;
	and.b64  	%rd105, %rd104, 16;
	add.s64 	%rd106, %rd103, %rd105;
	shl.b64 	%rd107, %rd101, 4;
	add.s64 	%rd108, %rd106, %rd107;
	add.s64 	%rd109, %rd108, %rd68;
	add.s64 	%rd110, %rd109, %rd70;
	add.s64 	%rd28, %rd110, -512;
	shl.b64 	%rd111, %rd26, 2;
	add.s64 	%rd112, %rd48, %rd111;
	shr.u64 	%rd113, %rd26, 59;
	and.b64  	%rd114, %rd113, 16;
	add.s64 	%rd115, %rd112, %rd114;
	add.s64 	%rd116, %rd115, %rd107;
	add.s64 	%rd117, %rd116, %rd68;
	add.s64 	%rd118, %rd117, %rd70;
	add.s64 	%rd29, %rd118, -512;
	.loc	1 79 74                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:79:74
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r30 }, [ %rd28 + 0 ];
	@!%p32 mov.u32 %r30, %r4;
	// end inline asm
	mov.b32 	%f21, %r30;
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r32 }, [ %rd29 + 0 ];
	@!%p32 mov.u32 %r32, %r4;
	// end inline asm
	mov.b32 	%f22, %r32;
	.loc	1 80 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:80:36
	// begin inline asm
	mov.u64 %rd30, 0x0;
	mov.u64 %rd31, 0x0;
	@%p32 ld.global.L1::evict_last.v2.b64 { %rd30, %rd31 }, [ %rd14 + 0 ];
	@!%p32 mov.u64 %rd30, 0x0;
	@!%p32 mov.u64 %rd31, 0x0;
	// end inline asm
	.loc	1 84 31                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:84:31
	shl.b64 	%rd119, %rd30, 2;
	add.s64 	%rd120, %rd48, %rd119;
	shr.u64 	%rd121, %rd30, 59;
	and.b64  	%rd122, %rd121, 16;
	add.s64 	%rd123, %rd120, %rd122;
	add.s64 	%rd124, %rd123, %rd107;
	add.s64 	%rd125, %rd124, %rd68;
	add.s64 	%rd126, %rd125, %rd70;
	add.s64 	%rd33, %rd126, -512;
	shl.b64 	%rd127, %rd31, 2;
	add.s64 	%rd128, %rd48, %rd127;
	shr.u64 	%rd129, %rd31, 59;
	and.b64  	%rd130, %rd129, 16;
	add.s64 	%rd131, %rd128, %rd130;
	add.s64 	%rd132, %rd131, %rd107;
	add.s64 	%rd133, %rd132, %rd68;
	add.s64 	%rd134, %rd133, %rd70;
	add.s64 	%rd34, %rd134, -512;
	.loc	1 84 74                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:84:74
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r34 }, [ %rd33 + 0 ];
	@!%p32 mov.u32 %r34, %r4;
	// end inline asm
	mov.b32 	%f23, %r34;
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r36 }, [ %rd34 + 0 ];
	@!%p32 mov.u32 %r36, %r4;
	// end inline asm
	mov.b32 	%f24, %r36;
	.loc	1 85 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:85:20
	sub.f32 	%f25, %f23, %f21;
	sub.f32 	%f26, %f24, %f22;
	.loc	1 86 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:86:36
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p32 ld.global.L1::evict_last.v2.b32 { %r38, %r39 }, [ %rd17 + 0 ];
	@!%p32 mov.u32 %r38, %r4;
	@!%p32 mov.u32 %r39, %r4;
	// end inline asm
	mov.b32 	%f27, %r38;
	mov.b32 	%f28, %r39;
	.loc	1 88 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:88:20
	fma.rn.f32 	%f29, %f25, %f27, %f21;
	fma.rn.f32 	%f30, %f26, %f28, %f22;
	.loc	1 89 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:89:20
	sub.f32 	%f31, %f29, %f19;
	sub.f32 	%f32, %f30, %f20;
	.loc	1 90 36                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:90:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r42 }, [ %rd18 + 0 ];
	@!%p32 mov.u32 %r42, %r4;
	// end inline asm
	mov.b32 	%f33, %r42;
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p32 ld.global.L1::evict_last.b32 { %r44 }, [ %rd18 + 0 ];
	@!%p32 mov.u32 %r44, %r4;
	// end inline asm
	mov.b32 	%f34, %r44;
	.loc	1 92 20                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:92:20
	fma.rn.f32 	%f35, %f31, %f33, %f19;
	fma.rn.f32 	%f36, %f32, %f34, %f20;
	.loc	1 94 35                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:94:35
	selp.f32 	%f37, %f35, 0f00000000, %p63;
	selp.f32 	%f38, %f36, 0f00000000, %p63;
	.loc	1 0 0                           // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:0:0
	selp.f32 	%f39, %f17, %f37, %p62;
	selp.f32 	%f40, %f18, %f38, %p62;
	.loc	1 97 25                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:97:25
	mul.wide.s32 	%rd135, %r52, 4;
	add.s64 	%rd38, %rd49, %rd135;
	.loc	1 97 37                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:97:37
	mov.b32 	%r86, %f39;
	.loc	1 96 33                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:96:33
	selp.b32 	%r46, %r2, %r86, %p61;
	.loc	1 97 37                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:97:37
	mov.b32 	%r87, %f40;
	.loc	1 96 33                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:96:33
	selp.b32 	%r47, %r3, %r87, %p61;
	.loc	1 97 37                         // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:97:37
	// begin inline asm
	@%p60 st.global.v2.b32 [ %rd38 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 97 4                          // cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py:97:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qi/cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 105
.b8 105
.b8 102
.b8 112
.b8 120
.b8 110
.b8 116
.b8 120
.b8 98
.b8 107
.b8 106
.b8 120
.b8 51
.b8 109
.b8 111
.b8 117
.b8 115
.b8 98
.b8 52
.b8 114
.b8 111
.b8 51
.b8 50
.b8 107
.b8 101
.b8 50
.b8 53
.b8 103
.b8 113
.b8 121
.b8 116
.b8 53
.b8 104
.b8 102
.b8 121
.b8 115
.b8 51
.b8 99
.b8 109
.b8 118
.b8 109
.b8 100
.b8 109
.b8 105
.b8 100
.b8 102
.b8 105
.b8 107
.b8 52
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
