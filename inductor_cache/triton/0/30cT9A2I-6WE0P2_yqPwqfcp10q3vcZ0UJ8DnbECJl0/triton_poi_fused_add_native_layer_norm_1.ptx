//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_native_layer_norm_1 // -- Begin function triton_poi_fused_add_native_layer_norm_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_native_layer_norm_1
.visible .entry triton_poi_fused_add_native_layer_norm_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_1_param_6,
	.param .u32 triton_poi_fused_add_native_layer_norm_1_param_7,
	.param .u32 triton_poi_fused_add_native_layer_norm_1_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<65>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused_add_native_layer_norm_1_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_add_native_layer_norm_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:22:33
	shl.b32 	%r21, %r1, 6;
	ld.param.u64 	%rd12, [triton_poi_fused_add_native_layer_norm_1_param_2];
	ld.param.u64 	%rd13, [triton_poi_fused_add_native_layer_norm_1_param_3];
	.loc	1 23 44                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:23:44
	mov.u32 	%r22, %tid.x;
	shl.b32 	%r23, %r22, 1;
	ld.param.u64 	%rd14, [triton_poi_fused_add_native_layer_norm_1_param_4];
	and.b32  	%r24, %r23, 2;
	ld.param.u64 	%rd15, [triton_poi_fused_add_native_layer_norm_1_param_5];
	and.b32  	%r25, %r23, 62;
	ld.param.u64 	%rd16, [triton_poi_fused_add_native_layer_norm_1_param_6];
	bfe.u32 	%r26, %r22, 1, 6;
	.loc	1 23 23                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:23:23
	or.b32  	%r27, %r21, %r25;
	or.b32  	%r28, %r21, %r26;
	.loc	1 24 21                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:24:21
	setp.lt.s32 	%p12, %r27, 64;
	setp.lt.s32 	%p5, %r28, 64;
	.loc	1 25 28                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:25:33
	shl.b32 	%r29, %r2, 2;
	.loc	1 26 44                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:26:44
	bfe.u32 	%r30, %r22, 5, 2;
	.loc	1 26 23                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:26:23
	or.b32  	%r31, %r29, %r30;
	or.b32  	%r32, %r29, %r24;
	.loc	1 27 21                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:27:21
	setp.lt.s32 	%p13, %r31, 4;
	setp.lt.s32 	%p9, %r32, 4;
	.loc	1 30 19                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:30:19
	shr.s32 	%r34, %r27, 31;
	shr.u32 	%r35, %r34, 28;
	add.s32 	%r36, %r27, %r35;
	.loc	1 29 19                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:29:19
	and.b32  	%r37, %r36, -16;
	sub.s32 	%r38, %r27, %r37;
	.loc	1 30 19                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:30:19
	shr.s32 	%r40, %r28, 31;
	shr.u32 	%r41, %r40, 28;
	add.s32 	%r42, %r28, %r41;
	shr.s32 	%r43, %r42, 4;
	.loc	1 32 38                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:38
	shl.b32 	%r44, %r31, 4;
	.loc	1 32 35                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:35
	add.s32 	%r45, %r44, %r38;
	.loc	1 32 46                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:46
	shl.b32 	%r46, %r36, 2;
	and.b32  	%r47, %r46, -64;
	.loc	1 32 43                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:43
	add.s32 	%r48, %r45, %r47;
	.loc	1 32 30                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:30
	mul.wide.s32 	%rd17, %r48, 4;
	add.s64 	%rd1, %rd10, %rd17;
	.loc	1 32 59                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:59
	and.pred  	%p1, %p12, %p13;
	and.pred  	%p4, %p5, %p9;
	.loc	1 32 51                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:32:51
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r49, %r22, 3;
	and.b32  	%r50, %r49, 248;
	or.b32  	%r51, %r50, %r30;
	mov.u32 	%r52, global_smem;
	add.s32 	%r53, %r52, %r50;
	shl.b32 	%r54, %r51, 2;
	add.s32 	%r5, %r53, %r54;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 20;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r55, %r23, 252;
	add.s32 	%r56, %r52, %r55;
	and.b32  	%r57, %r49, 1016;
	add.s32 	%r58, %r56, %r57;
	ld.shared.f32 	%f1, [%r58];
	ld.shared.f32 	%f2, [%r58+4];
	.loc	1 33 37                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:37
	shl.b32 	%r59, %r43, 2;
	.loc	1 33 35                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:35
	add.s32 	%r60, %r59, %r32;
	.loc	1 33 30                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:30
	mul.wide.s32 	%rd18, %r60, 4;
	add.s64 	%rd2, %rd11, %rd18;
	.loc	1 33 42                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:34:30
	mul.wide.s32 	%rd19, %r28, 4;
	add.s64 	%rd3, %rd12, %rd19;
	.loc	1 34 35                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:34:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 30                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:35:30
	add.s64 	%rd5, %rd13, %rd19;
	.loc	1 35 35                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:35:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r14 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r14;
	.loc	1 36 31                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:36:31
	mul.wide.s32 	%rd20, %r32, 4;
	add.s64 	%rd7, %rd14, %rd20;
	.loc	1 36 36                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:36:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:37:31
	add.s64 	%rd8, %rd15, %rd20;
	.loc	1 37 36                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:37:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 41 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:41:18
	add.f32 	%f4, %f3, 0f3727C5AC;
	.loc	1 42 27                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:42:27
	rsqrt.approx.ftz.f32 	%f5, %f4;
	.loc	1 33 42                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:42
	mov.b32 	%f6, %r10;
	.loc	1 38 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:38:18
	add.f32 	%f7, %f2, %f6;
	.loc	1 34 35                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:34:35
	mov.b32 	%f8, %r12;
	.loc	1 39 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:39:18
	sub.f32 	%f9, %f7, %f8;
	.loc	1 33 42                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:33:42
	mov.b32 	%f10, %r9;
	.loc	1 38 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:38:18
	add.f32 	%f11, %f1, %f10;
	.loc	1 39 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:39:18
	sub.f32 	%f12, %f11, %f8;
	.loc	1 37 36                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:37:36
	mov.b32 	%f13, %r18;
	mov.b32 	%f14, %r17;
	.loc	1 36 36                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:36:36
	mov.b32 	%f15, %r16;
	mov.b32 	%f16, %r15;
	.loc	1 29 19                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:29:19
	and.b32  	%r61, %r42, 268435440;
	sub.s32 	%r62, %r28, %r61;
	.loc	1 43 18                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:43:18
	mul.f32 	%f17, %f12, %f5;
	mul.f32 	%f18, %f9, %f5;
	.loc	1 45 20                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:45:20
	fma.rn.f32 	%f19, %f17, %f16, %f14;
	fma.rn.f32 	%f20, %f18, %f15, %f13;
	.loc	1 46 40                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:46:40
	shl.b32 	%r63, %r62, 4;
	.loc	1 46 37                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:46:37
	add.s32 	%r64, %r60, %r63;
	.loc	1 46 25                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:46:25
	mul.wide.s32 	%rd21, %r64, 4;
	add.s64 	%rd9, %rd16, %rd21;
	.loc	1 46 52                         // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:46:52
	mov.b32 	%r19, %f19;
	mov.b32 	%r20, %f20;
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd9 + 0 ], { %r19, %r20 };
	// end inline asm
	.loc	1 46 4                          // c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/67/c672w7wg4wxrrwhsh5zxeoupsxwbnjg6nz4wjbixysk6zjf2ixtw.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 55
.b8 50
.b8 119
.b8 55
.b8 119
.b8 103
.b8 52
.b8 119
.b8 120
.b8 114
.b8 114
.b8 119
.b8 104
.b8 115
.b8 104
.b8 53
.b8 122
.b8 120
.b8 101
.b8 111
.b8 117
.b8 112
.b8 115
.b8 120
.b8 119
.b8 98
.b8 110
.b8 106
.b8 103
.b8 54
.b8 110
.b8 122
.b8 52
.b8 119
.b8 106
.b8 98
.b8 105
.b8 120
.b8 121
.b8 115
.b8 107
.b8 54
.b8 122
.b8 106
.b8 102
.b8 50
.b8 105
.b8 120
.b8 116
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
