; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mean_pow_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 31, !dbg !10
  %6 = lshr i32 %4, 5, !dbg !10
  %7 = shl i32 %4, 2, !dbg !10
  %8 = and i32 %7, 252, !dbg !10
  %9 = zext nneg i32 %8 to i64, !dbg !11
  %10 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !11
  %11 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %11, 0, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %11, 1, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %11, 2, !dbg !12
  %15 = extractvalue { i32, i32, i32, i32 } %11, 3, !dbg !12
  %16 = bitcast i32 %12 to float, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = bitcast i32 %15 to float, !dbg !12
  %20 = fadd float %16, %17, !dbg !13
  %21 = fadd float %20, %18, !dbg !13
  %22 = fadd float %21, %19, !dbg !13
  %23 = bitcast float %22 to i32, !dbg !18
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 16, i32 31), !dbg !18
  %25 = bitcast i32 %24 to float, !dbg !18
  %26 = fadd float %22, %25, !dbg !13
  %27 = bitcast float %26 to i32, !dbg !18
  %28 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %27, i32 8, i32 31), !dbg !18
  %29 = bitcast i32 %28 to float, !dbg !18
  %30 = fadd float %26, %29, !dbg !13
  %31 = bitcast float %30 to i32, !dbg !18
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 4, i32 31), !dbg !18
  %33 = bitcast i32 %32 to float, !dbg !18
  %34 = fadd float %30, %33, !dbg !13
  %35 = bitcast float %34 to i32, !dbg !18
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 2, i32 31), !dbg !18
  %37 = bitcast i32 %36 to float, !dbg !18
  %38 = fadd float %34, %37, !dbg !13
  %39 = bitcast float %38 to i32, !dbg !18
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 1, i32 31), !dbg !18
  %41 = bitcast i32 %40 to float, !dbg !18
  %42 = fadd float %38, %41, !dbg !13
  %43 = icmp eq i32 %5, 0, !dbg !18
  %44 = and i32 %6, 1, !dbg !18
  %45 = getelementptr float, ptr addrspace(3) @global_smem, i32 %44, !dbg !18
  %46 = bitcast float %42 to <1 x i32>, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %45, <1 x i32> %46, i1 %43) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %47 = icmp slt i32 %4, 2, !dbg !18
  %48 = getelementptr float, ptr addrspace(3) @global_smem, i32 %4, !dbg !18
  %49 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %48, i1 %47) #3, !dbg !18
  %50 = bitcast i32 %49 to float, !dbg !18
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !18
  %52 = bitcast i32 %51 to float, !dbg !18
  %53 = fadd float %50, %52, !dbg !13
  %54 = and i32 %4, 1, !dbg !18
  %55 = icmp eq i32 %54, 0, !dbg !18
  %56 = and i1 %47, %55, !dbg !18
  %57 = bitcast float %53 to <1 x i32>, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %48, <1 x i32> %57, i1 %56) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %58 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !18
  %59 = fadd float %58, 0.000000e+00, !dbg !19
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float 2.560000e+02) #3, !dbg !23
  %61 = fsub float %16, %60, !dbg !24
  %62 = fsub float %17, %60, !dbg !24
  %63 = fsub float %18, %60, !dbg !24
  %64 = fsub float %19, %60, !dbg !24
  %65 = fmul float %61, %61, !dbg !25
  %66 = fmul float %62, %62, !dbg !25
  %67 = fmul float %63, %63, !dbg !25
  %68 = fmul float %64, %64, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %69 = fadd float %65, %66, !dbg !28
  %70 = fadd float %67, %69, !dbg !28
  %71 = fadd float %68, %70, !dbg !28
  %72 = bitcast float %71 to i32, !dbg !26
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 16, i32 31), !dbg !26
  %74 = bitcast i32 %73 to float, !dbg !26
  %75 = fadd float %71, %74, !dbg !28
  %76 = bitcast float %75 to i32, !dbg !26
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 8, i32 31), !dbg !26
  %78 = bitcast i32 %77 to float, !dbg !26
  %79 = fadd float %75, %78, !dbg !28
  %80 = bitcast float %79 to i32, !dbg !26
  %81 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %80, i32 4, i32 31), !dbg !26
  %82 = bitcast i32 %81 to float, !dbg !26
  %83 = fadd float %79, %82, !dbg !28
  %84 = bitcast float %83 to i32, !dbg !26
  %85 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %84, i32 2, i32 31), !dbg !26
  %86 = bitcast i32 %85 to float, !dbg !26
  %87 = fadd float %83, %86, !dbg !28
  %88 = bitcast float %87 to i32, !dbg !26
  %89 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %88, i32 1, i32 31), !dbg !26
  %90 = bitcast i32 %89 to float, !dbg !26
  %91 = fadd float %87, %90, !dbg !28
  %92 = bitcast float %91 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %45, <1 x i32> %92, i1 %43) #3, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %93 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %48, i1 %47) #3, !dbg !26
  %94 = bitcast i32 %93 to float, !dbg !26
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !26
  %96 = bitcast i32 %95 to float, !dbg !26
  %97 = fadd float %94, %96, !dbg !28
  %98 = bitcast float %97 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %48, <1 x i32> %98, i1 %56) #3, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %99 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !26
  %100 = fadd float %99, 0.000000e+00, !dbg !29
  %urem = and i32 %4, 63, !dbg !31
  %101 = icmp eq i32 %urem, 0, !dbg !31
  %102 = bitcast float %100 to i32, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %102, ptr addrspace(1) %0, i1 %101) #3, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5rubgvz3zyqz4u4kjj3ypx5a4xzzl7affbztlplbg7w42fnef73.py", directory: "inductor_cache/5r")
!4 = !{ptr @triton_per_fused_mean_pow_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_pow_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_pow_sub_0", linkageName: "triton_per_fused_mean_pow_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 256, column: 15, scope: !14, inlinedAt: !17)
!14 = distinct !DILexicalBlockFile(scope: !16, file: !15, discriminator: 0)
!15 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!16 = distinct !DILexicalBlockFile(scope: !7, file: !15, discriminator: 0)
!17 = !DILocation(line: 33, column: 57, scope: !7)
!18 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !17)
!19 = !DILocation(line: 73, column: 15, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 33, column: 44, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 36, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !27)
!27 = !DILocation(line: 39, column: 58, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !14, inlinedAt: !27)
!29 = !DILocation(line: 73, column: 15, scope: !20, inlinedAt: !30)
!30 = !DILocation(line: 39, column: 45, scope: !7)
!31 = !DILocation(line: 40, column: 63, scope: !7)
!32 = !DILocation(line: 40, column: 4, scope: !7)
