; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_tanh_11(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 6, !dbg !12
  %10 = and i32 %9, 3, !dbg !12
  %11 = or disjoint i32 %10, 4, !dbg !12
  %12 = or disjoint i32 %10, 8, !dbg !12
  %13 = or disjoint i32 %10, 12, !dbg !12
  %14 = shl i32 %8, 2, !dbg !12
  %15 = or disjoint i32 %7, %10, !dbg !13
  %16 = or disjoint i32 %7, %11, !dbg !13
  %17 = or disjoint i32 %7, %12, !dbg !13
  %18 = or disjoint i32 %7, %13, !dbg !13
  %19 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !14
  %20 = shl i32 %19, 8, !dbg !15
  %21 = and i32 %14, 252, !dbg !16
  %22 = or disjoint i32 %20, %21, !dbg !17
  %23 = icmp slt i32 %22, 256, !dbg !18
  %24 = shl i32 %15, 8, !dbg !19
  %25 = shl i32 %16, 8, !dbg !19
  %26 = shl i32 %17, 8, !dbg !19
  %27 = shl i32 %18, 8, !dbg !19
  %28 = add i32 %22, %24, !dbg !20
  %29 = add i32 %22, %25, !dbg !20
  %30 = add i32 %22, %26, !dbg !20
  %31 = add i32 %22, %27, !dbg !20
  %32 = sext i32 %28 to i64, !dbg !21
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !21
  %34 = sext i32 %29 to i64, !dbg !21
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !21
  %36 = sext i32 %30 to i64, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !21
  %38 = sext i32 %31 to i64, !dbg !21
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !21
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 %23) #4, !dbg !22
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !22
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !22
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !22
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !22
  %45 = bitcast i32 %41 to float, !dbg !22
  %46 = bitcast i32 %42 to float, !dbg !22
  %47 = bitcast i32 %43 to float, !dbg !22
  %48 = bitcast i32 %44 to float, !dbg !22
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 %23) #4, !dbg !22
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !22
  %51 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !22
  %52 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !22
  %53 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !22
  %54 = bitcast i32 %50 to float, !dbg !22
  %55 = bitcast i32 %51 to float, !dbg !22
  %56 = bitcast i32 %52 to float, !dbg !22
  %57 = bitcast i32 %53 to float, !dbg !22
  %58 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 %23) #4, !dbg !22
  %59 = extractvalue { i32, i32, i32, i32 } %58, 0, !dbg !22
  %60 = extractvalue { i32, i32, i32, i32 } %58, 1, !dbg !22
  %61 = extractvalue { i32, i32, i32, i32 } %58, 2, !dbg !22
  %62 = extractvalue { i32, i32, i32, i32 } %58, 3, !dbg !22
  %63 = bitcast i32 %59 to float, !dbg !22
  %64 = bitcast i32 %60 to float, !dbg !22
  %65 = bitcast i32 %61 to float, !dbg !22
  %66 = bitcast i32 %62 to float, !dbg !22
  %67 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 %23) #4, !dbg !22
  %68 = extractvalue { i32, i32, i32, i32 } %67, 0, !dbg !22
  %69 = extractvalue { i32, i32, i32, i32 } %67, 1, !dbg !22
  %70 = extractvalue { i32, i32, i32, i32 } %67, 2, !dbg !22
  %71 = extractvalue { i32, i32, i32, i32 } %67, 3, !dbg !22
  %72 = bitcast i32 %68 to float, !dbg !22
  %73 = bitcast i32 %69 to float, !dbg !22
  %74 = bitcast i32 %70 to float, !dbg !22
  %75 = bitcast i32 %71 to float, !dbg !22
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !23
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !23
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !23
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !23
  %80 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %76, i1 %23) #4, !dbg !24
  %81 = extractvalue { i32, i32, i32, i32 } %80, 0, !dbg !24
  %82 = extractvalue { i32, i32, i32, i32 } %80, 1, !dbg !24
  %83 = extractvalue { i32, i32, i32, i32 } %80, 2, !dbg !24
  %84 = extractvalue { i32, i32, i32, i32 } %80, 3, !dbg !24
  %85 = bitcast i32 %81 to float, !dbg !24
  %86 = bitcast i32 %82 to float, !dbg !24
  %87 = bitcast i32 %83 to float, !dbg !24
  %88 = bitcast i32 %84 to float, !dbg !24
  %89 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %77, i1 %23) #4, !dbg !24
  %90 = extractvalue { i32, i32, i32, i32 } %89, 0, !dbg !24
  %91 = extractvalue { i32, i32, i32, i32 } %89, 1, !dbg !24
  %92 = extractvalue { i32, i32, i32, i32 } %89, 2, !dbg !24
  %93 = extractvalue { i32, i32, i32, i32 } %89, 3, !dbg !24
  %94 = bitcast i32 %90 to float, !dbg !24
  %95 = bitcast i32 %91 to float, !dbg !24
  %96 = bitcast i32 %92 to float, !dbg !24
  %97 = bitcast i32 %93 to float, !dbg !24
  %98 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %78, i1 %23) #4, !dbg !24
  %99 = extractvalue { i32, i32, i32, i32 } %98, 0, !dbg !24
  %100 = extractvalue { i32, i32, i32, i32 } %98, 1, !dbg !24
  %101 = extractvalue { i32, i32, i32, i32 } %98, 2, !dbg !24
  %102 = extractvalue { i32, i32, i32, i32 } %98, 3, !dbg !24
  %103 = bitcast i32 %99 to float, !dbg !24
  %104 = bitcast i32 %100 to float, !dbg !24
  %105 = bitcast i32 %101 to float, !dbg !24
  %106 = bitcast i32 %102 to float, !dbg !24
  %107 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %79, i1 %23) #4, !dbg !24
  %108 = extractvalue { i32, i32, i32, i32 } %107, 0, !dbg !24
  %109 = extractvalue { i32, i32, i32, i32 } %107, 1, !dbg !24
  %110 = extractvalue { i32, i32, i32, i32 } %107, 2, !dbg !24
  %111 = extractvalue { i32, i32, i32, i32 } %107, 3, !dbg !24
  %112 = bitcast i32 %108 to float, !dbg !24
  %113 = bitcast i32 %109 to float, !dbg !24
  %114 = bitcast i32 %110 to float, !dbg !24
  %115 = bitcast i32 %111 to float, !dbg !24
  %116 = fadd float %45, %85, !dbg !25
  %117 = fadd float %46, %86, !dbg !25
  %118 = fadd float %47, %87, !dbg !25
  %119 = fadd float %48, %88, !dbg !25
  %120 = fadd float %54, %94, !dbg !25
  %121 = fadd float %55, %95, !dbg !25
  %122 = fadd float %56, %96, !dbg !25
  %123 = fadd float %57, %97, !dbg !25
  %124 = fadd float %63, %103, !dbg !25
  %125 = fadd float %64, %104, !dbg !25
  %126 = fadd float %65, %105, !dbg !25
  %127 = fadd float %66, %106, !dbg !25
  %128 = fadd float %72, %112, !dbg !25
  %129 = fadd float %73, %113, !dbg !25
  %130 = fadd float %74, %114, !dbg !25
  %131 = fadd float %75, %115, !dbg !25
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i = icmp eq i32 %132, 0, !dbg !26
  %133 = tail call float @llvm.nvvm.fabs.ftz.f(float %116) #4, !dbg !26
  %134 = tail call float @llvm.nvvm.fabs.f(float %116) #4, !dbg !26
  %.01.i = select i1 %.not.i, float %134, float %133, !dbg !26
  %135 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %135, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %5
  %136 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %137 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %136) #4, !dbg !26
  %138 = fadd float %137, 1.000000e+00, !dbg !26
  %139 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %138) #5, !dbg !26, !srcloc !27
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %140, 0, !dbg !26
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i = select i1 %.not6.i, float %142, float %141, !dbg !26
  %143 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %143, float 1.000000e+00, float %.03.i, !dbg !26
  %144 = bitcast float %s.0.i to i32, !dbg !26
  %145 = bitcast float %116 to i32, !dbg !26
  %146 = and i32 %145, -2147483648, !dbg !26
  %147 = or i32 %146, %144, !dbg !26
  %148 = bitcast i32 %147 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %5
  %149 = fmul float %116, %116, !dbg !26
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %150, 0, !dbg !26
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #4, !dbg !26
  %152 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i = select i1 %.not1.i, float %152, float %151, !dbg !26
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %153, 0, !dbg !26
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %149, float 0x3FC10B2820000000) #4, !dbg !26
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %149, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i = select i1 %.not2.i, float %155, float %154, !dbg !26
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %156, 0, !dbg !26
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %149, float 0xBFD5553DA0000000) #4, !dbg !26
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %149, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i = select i1 %.not3.i, float %158, float %157, !dbg !26
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %159, 0, !dbg !26
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %149, float 0.000000e+00) #4, !dbg !26
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %149, float 0.000000e+00) #4, !dbg !26
  %.04.i = select i1 %.not4.i, float %161, float %160, !dbg !26
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %162, 0, !dbg !26
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %116, float %116) #4, !dbg !26
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %116, float %116) #4, !dbg !26
  %.02.i = select i1 %.not5.i, float %164, float %163, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %148, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i34 = icmp eq i32 %165, 0, !dbg !26
  %166 = tail call float @llvm.nvvm.fabs.ftz.f(float %117) #4, !dbg !26
  %167 = tail call float @llvm.nvvm.fabs.f(float %117) #4, !dbg !26
  %.01.i35 = select i1 %.not.i34, float %167, float %166, !dbg !26
  %168 = fcmp ult float %.01.i35, 0x3FE3333340000000, !dbg !26
  br i1 %168, label %__internal_fmad.exit3.i41, label %__internal_fmad.exit1.i36, !dbg !26

__internal_fmad.exit1.i36:                        ; preds = %__nv_tanhf.exit
  %169 = fmul float %.01.i35, 0x4007154760000000, !dbg !26
  %170 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %169) #4, !dbg !26
  %171 = fadd float %170, 1.000000e+00, !dbg !26
  %172 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %171) #5, !dbg !26, !srcloc !27
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i37 = icmp eq i32 %173, 0, !dbg !26
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %172, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %172, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i38 = select i1 %.not6.i37, float %175, float %174, !dbg !26
  %176 = fcmp oge float %.01.i35, 0x4022059680000000, !dbg !26
  %s.0.i39 = select i1 %176, float 1.000000e+00, float %.03.i38, !dbg !26
  %177 = bitcast float %s.0.i39 to i32, !dbg !26
  %178 = bitcast float %117 to i32, !dbg !26
  %179 = and i32 %178, -2147483648, !dbg !26
  %180 = or i32 %179, %177, !dbg !26
  %181 = bitcast i32 %180 to float, !dbg !26
  br label %__nv_tanhf.exit52, !dbg !26

__internal_fmad.exit3.i41:                        ; preds = %__nv_tanhf.exit
  %182 = fmul float %117, %117, !dbg !26
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i42 = icmp eq i32 %183, 0, !dbg !26
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %182, float 0xBFAAC795C0000000) #4, !dbg !26
  %185 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %182, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i43 = select i1 %.not1.i42, float %185, float %184, !dbg !26
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i44 = icmp eq i32 %186, 0, !dbg !26
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i43, float %182, float 0x3FC10B2820000000) #4, !dbg !26
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i43, float %182, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i45 = select i1 %.not2.i44, float %188, float %187, !dbg !26
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i46 = icmp eq i32 %189, 0, !dbg !26
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %182, float 0xBFD5553DA0000000) #4, !dbg !26
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %182, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i47 = select i1 %.not3.i46, float %191, float %190, !dbg !26
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i48 = icmp eq i32 %192, 0, !dbg !26
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i47, float %182, float 0.000000e+00) #4, !dbg !26
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i47, float %182, float 0.000000e+00) #4, !dbg !26
  %.04.i49 = select i1 %.not4.i48, float %194, float %193, !dbg !26
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i50 = icmp eq i32 %195, 0, !dbg !26
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i49, float %117, float %117) #4, !dbg !26
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i49, float %117, float %117) #4, !dbg !26
  %.02.i51 = select i1 %.not5.i50, float %197, float %196, !dbg !26
  br label %__nv_tanhf.exit52, !dbg !26

__nv_tanhf.exit52:                                ; preds = %__internal_fmad.exit1.i36, %__internal_fmad.exit3.i41
  %s.1.i40 = phi float [ %181, %__internal_fmad.exit1.i36 ], [ %.02.i51, %__internal_fmad.exit3.i41 ], !dbg !26
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i53 = icmp eq i32 %198, 0, !dbg !26
  %199 = tail call float @llvm.nvvm.fabs.ftz.f(float %118) #4, !dbg !26
  %200 = tail call float @llvm.nvvm.fabs.f(float %118) #4, !dbg !26
  %.01.i54 = select i1 %.not.i53, float %200, float %199, !dbg !26
  %201 = fcmp ult float %.01.i54, 0x3FE3333340000000, !dbg !26
  br i1 %201, label %__internal_fmad.exit3.i60, label %__internal_fmad.exit1.i55, !dbg !26

__internal_fmad.exit1.i55:                        ; preds = %__nv_tanhf.exit52
  %202 = fmul float %.01.i54, 0x4007154760000000, !dbg !26
  %203 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %202) #4, !dbg !26
  %204 = fadd float %203, 1.000000e+00, !dbg !26
  %205 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %204) #5, !dbg !26, !srcloc !27
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i56 = icmp eq i32 %206, 0, !dbg !26
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i57 = select i1 %.not6.i56, float %208, float %207, !dbg !26
  %209 = fcmp oge float %.01.i54, 0x4022059680000000, !dbg !26
  %s.0.i58 = select i1 %209, float 1.000000e+00, float %.03.i57, !dbg !26
  %210 = bitcast float %s.0.i58 to i32, !dbg !26
  %211 = bitcast float %118 to i32, !dbg !26
  %212 = and i32 %211, -2147483648, !dbg !26
  %213 = or i32 %212, %210, !dbg !26
  %214 = bitcast i32 %213 to float, !dbg !26
  br label %__nv_tanhf.exit71, !dbg !26

__internal_fmad.exit3.i60:                        ; preds = %__nv_tanhf.exit52
  %215 = fmul float %118, %118, !dbg !26
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i61 = icmp eq i32 %216, 0, !dbg !26
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %215, float 0xBFAAC795C0000000) #4, !dbg !26
  %218 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %215, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i62 = select i1 %.not1.i61, float %218, float %217, !dbg !26
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i63 = icmp eq i32 %219, 0, !dbg !26
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i62, float %215, float 0x3FC10B2820000000) #4, !dbg !26
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i62, float %215, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i64 = select i1 %.not2.i63, float %221, float %220, !dbg !26
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i65 = icmp eq i32 %222, 0, !dbg !26
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i64, float %215, float 0xBFD5553DA0000000) #4, !dbg !26
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i64, float %215, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i66 = select i1 %.not3.i65, float %224, float %223, !dbg !26
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i67 = icmp eq i32 %225, 0, !dbg !26
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i66, float %215, float 0.000000e+00) #4, !dbg !26
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i66, float %215, float 0.000000e+00) #4, !dbg !26
  %.04.i68 = select i1 %.not4.i67, float %227, float %226, !dbg !26
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i69 = icmp eq i32 %228, 0, !dbg !26
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %118, float %118) #4, !dbg !26
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %118, float %118) #4, !dbg !26
  %.02.i70 = select i1 %.not5.i69, float %230, float %229, !dbg !26
  br label %__nv_tanhf.exit71, !dbg !26

__nv_tanhf.exit71:                                ; preds = %__internal_fmad.exit1.i55, %__internal_fmad.exit3.i60
  %s.1.i59 = phi float [ %214, %__internal_fmad.exit1.i55 ], [ %.02.i70, %__internal_fmad.exit3.i60 ], !dbg !26
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i72 = icmp eq i32 %231, 0, !dbg !26
  %232 = tail call float @llvm.nvvm.fabs.ftz.f(float %119) #4, !dbg !26
  %233 = tail call float @llvm.nvvm.fabs.f(float %119) #4, !dbg !26
  %.01.i73 = select i1 %.not.i72, float %233, float %232, !dbg !26
  %234 = fcmp ult float %.01.i73, 0x3FE3333340000000, !dbg !26
  br i1 %234, label %__internal_fmad.exit3.i79, label %__internal_fmad.exit1.i74, !dbg !26

__internal_fmad.exit1.i74:                        ; preds = %__nv_tanhf.exit71
  %235 = fmul float %.01.i73, 0x4007154760000000, !dbg !26
  %236 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %235) #4, !dbg !26
  %237 = fadd float %236, 1.000000e+00, !dbg !26
  %238 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %237) #5, !dbg !26, !srcloc !27
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i75 = icmp eq i32 %239, 0, !dbg !26
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i76 = select i1 %.not6.i75, float %241, float %240, !dbg !26
  %242 = fcmp oge float %.01.i73, 0x4022059680000000, !dbg !26
  %s.0.i77 = select i1 %242, float 1.000000e+00, float %.03.i76, !dbg !26
  %243 = bitcast float %s.0.i77 to i32, !dbg !26
  %244 = bitcast float %119 to i32, !dbg !26
  %245 = and i32 %244, -2147483648, !dbg !26
  %246 = or i32 %245, %243, !dbg !26
  %247 = bitcast i32 %246 to float, !dbg !26
  br label %__nv_tanhf.exit90, !dbg !26

__internal_fmad.exit3.i79:                        ; preds = %__nv_tanhf.exit71
  %248 = fmul float %119, %119, !dbg !26
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i80 = icmp eq i32 %249, 0, !dbg !26
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %248, float 0xBFAAC795C0000000) #4, !dbg !26
  %251 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %248, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i81 = select i1 %.not1.i80, float %251, float %250, !dbg !26
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i82 = icmp eq i32 %252, 0, !dbg !26
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %248, float 0x3FC10B2820000000) #4, !dbg !26
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %248, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i83 = select i1 %.not2.i82, float %254, float %253, !dbg !26
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i84 = icmp eq i32 %255, 0, !dbg !26
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i83, float %248, float 0xBFD5553DA0000000) #4, !dbg !26
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i83, float %248, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i85 = select i1 %.not3.i84, float %257, float %256, !dbg !26
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i86 = icmp eq i32 %258, 0, !dbg !26
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i85, float %248, float 0.000000e+00) #4, !dbg !26
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i85, float %248, float 0.000000e+00) #4, !dbg !26
  %.04.i87 = select i1 %.not4.i86, float %260, float %259, !dbg !26
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i88 = icmp eq i32 %261, 0, !dbg !26
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i87, float %119, float %119) #4, !dbg !26
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i87, float %119, float %119) #4, !dbg !26
  %.02.i89 = select i1 %.not5.i88, float %263, float %262, !dbg !26
  br label %__nv_tanhf.exit90, !dbg !26

__nv_tanhf.exit90:                                ; preds = %__internal_fmad.exit1.i74, %__internal_fmad.exit3.i79
  %s.1.i78 = phi float [ %247, %__internal_fmad.exit1.i74 ], [ %.02.i89, %__internal_fmad.exit3.i79 ], !dbg !26
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i91 = icmp eq i32 %264, 0, !dbg !26
  %265 = tail call float @llvm.nvvm.fabs.ftz.f(float %120) #4, !dbg !26
  %266 = tail call float @llvm.nvvm.fabs.f(float %120) #4, !dbg !26
  %.01.i92 = select i1 %.not.i91, float %266, float %265, !dbg !26
  %267 = fcmp ult float %.01.i92, 0x3FE3333340000000, !dbg !26
  br i1 %267, label %__internal_fmad.exit3.i98, label %__internal_fmad.exit1.i93, !dbg !26

__internal_fmad.exit1.i93:                        ; preds = %__nv_tanhf.exit90
  %268 = fmul float %.01.i92, 0x4007154760000000, !dbg !26
  %269 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %268) #4, !dbg !26
  %270 = fadd float %269, 1.000000e+00, !dbg !26
  %271 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %270) #5, !dbg !26, !srcloc !27
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i94 = icmp eq i32 %272, 0, !dbg !26
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %271, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %271, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i95 = select i1 %.not6.i94, float %274, float %273, !dbg !26
  %275 = fcmp oge float %.01.i92, 0x4022059680000000, !dbg !26
  %s.0.i96 = select i1 %275, float 1.000000e+00, float %.03.i95, !dbg !26
  %276 = bitcast float %s.0.i96 to i32, !dbg !26
  %277 = bitcast float %120 to i32, !dbg !26
  %278 = and i32 %277, -2147483648, !dbg !26
  %279 = or i32 %278, %276, !dbg !26
  %280 = bitcast i32 %279 to float, !dbg !26
  br label %__nv_tanhf.exit109, !dbg !26

__internal_fmad.exit3.i98:                        ; preds = %__nv_tanhf.exit90
  %281 = fmul float %120, %120, !dbg !26
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i99 = icmp eq i32 %282, 0, !dbg !26
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %281, float 0xBFAAC795C0000000) #4, !dbg !26
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %281, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i100 = select i1 %.not1.i99, float %284, float %283, !dbg !26
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i101 = icmp eq i32 %285, 0, !dbg !26
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i100, float %281, float 0x3FC10B2820000000) #4, !dbg !26
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i100, float %281, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i102 = select i1 %.not2.i101, float %287, float %286, !dbg !26
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i103 = icmp eq i32 %288, 0, !dbg !26
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i102, float %281, float 0xBFD5553DA0000000) #4, !dbg !26
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i102, float %281, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i104 = select i1 %.not3.i103, float %290, float %289, !dbg !26
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i105 = icmp eq i32 %291, 0, !dbg !26
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i104, float %281, float 0.000000e+00) #4, !dbg !26
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i104, float %281, float 0.000000e+00) #4, !dbg !26
  %.04.i106 = select i1 %.not4.i105, float %293, float %292, !dbg !26
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i107 = icmp eq i32 %294, 0, !dbg !26
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i106, float %120, float %120) #4, !dbg !26
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i106, float %120, float %120) #4, !dbg !26
  %.02.i108 = select i1 %.not5.i107, float %296, float %295, !dbg !26
  br label %__nv_tanhf.exit109, !dbg !26

__nv_tanhf.exit109:                               ; preds = %__internal_fmad.exit1.i93, %__internal_fmad.exit3.i98
  %s.1.i97 = phi float [ %280, %__internal_fmad.exit1.i93 ], [ %.02.i108, %__internal_fmad.exit3.i98 ], !dbg !26
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i110 = icmp eq i32 %297, 0, !dbg !26
  %298 = tail call float @llvm.nvvm.fabs.ftz.f(float %121) #4, !dbg !26
  %299 = tail call float @llvm.nvvm.fabs.f(float %121) #4, !dbg !26
  %.01.i111 = select i1 %.not.i110, float %299, float %298, !dbg !26
  %300 = fcmp ult float %.01.i111, 0x3FE3333340000000, !dbg !26
  br i1 %300, label %__internal_fmad.exit3.i117, label %__internal_fmad.exit1.i112, !dbg !26

__internal_fmad.exit1.i112:                       ; preds = %__nv_tanhf.exit109
  %301 = fmul float %.01.i111, 0x4007154760000000, !dbg !26
  %302 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %301) #4, !dbg !26
  %303 = fadd float %302, 1.000000e+00, !dbg !26
  %304 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %303) #5, !dbg !26, !srcloc !27
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i113 = icmp eq i32 %305, 0, !dbg !26
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %304, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %304, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i114 = select i1 %.not6.i113, float %307, float %306, !dbg !26
  %308 = fcmp oge float %.01.i111, 0x4022059680000000, !dbg !26
  %s.0.i115 = select i1 %308, float 1.000000e+00, float %.03.i114, !dbg !26
  %309 = bitcast float %s.0.i115 to i32, !dbg !26
  %310 = bitcast float %121 to i32, !dbg !26
  %311 = and i32 %310, -2147483648, !dbg !26
  %312 = or i32 %311, %309, !dbg !26
  %313 = bitcast i32 %312 to float, !dbg !26
  br label %__nv_tanhf.exit128, !dbg !26

__internal_fmad.exit3.i117:                       ; preds = %__nv_tanhf.exit109
  %314 = fmul float %121, %121, !dbg !26
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i118 = icmp eq i32 %315, 0, !dbg !26
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %314, float 0xBFAAC795C0000000) #4, !dbg !26
  %317 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %314, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i119 = select i1 %.not1.i118, float %317, float %316, !dbg !26
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i120 = icmp eq i32 %318, 0, !dbg !26
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i119, float %314, float 0x3FC10B2820000000) #4, !dbg !26
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i119, float %314, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i121 = select i1 %.not2.i120, float %320, float %319, !dbg !26
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i122 = icmp eq i32 %321, 0, !dbg !26
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i121, float %314, float 0xBFD5553DA0000000) #4, !dbg !26
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i121, float %314, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i123 = select i1 %.not3.i122, float %323, float %322, !dbg !26
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i124 = icmp eq i32 %324, 0, !dbg !26
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i123, float %314, float 0.000000e+00) #4, !dbg !26
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i123, float %314, float 0.000000e+00) #4, !dbg !26
  %.04.i125 = select i1 %.not4.i124, float %326, float %325, !dbg !26
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i126 = icmp eq i32 %327, 0, !dbg !26
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i125, float %121, float %121) #4, !dbg !26
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i125, float %121, float %121) #4, !dbg !26
  %.02.i127 = select i1 %.not5.i126, float %329, float %328, !dbg !26
  br label %__nv_tanhf.exit128, !dbg !26

__nv_tanhf.exit128:                               ; preds = %__internal_fmad.exit1.i112, %__internal_fmad.exit3.i117
  %s.1.i116 = phi float [ %313, %__internal_fmad.exit1.i112 ], [ %.02.i127, %__internal_fmad.exit3.i117 ], !dbg !26
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i129 = icmp eq i32 %330, 0, !dbg !26
  %331 = tail call float @llvm.nvvm.fabs.ftz.f(float %122) #4, !dbg !26
  %332 = tail call float @llvm.nvvm.fabs.f(float %122) #4, !dbg !26
  %.01.i130 = select i1 %.not.i129, float %332, float %331, !dbg !26
  %333 = fcmp ult float %.01.i130, 0x3FE3333340000000, !dbg !26
  br i1 %333, label %__internal_fmad.exit3.i136, label %__internal_fmad.exit1.i131, !dbg !26

__internal_fmad.exit1.i131:                       ; preds = %__nv_tanhf.exit128
  %334 = fmul float %.01.i130, 0x4007154760000000, !dbg !26
  %335 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %334) #4, !dbg !26
  %336 = fadd float %335, 1.000000e+00, !dbg !26
  %337 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %336) #5, !dbg !26, !srcloc !27
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i132 = icmp eq i32 %338, 0, !dbg !26
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %337, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %337, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i133 = select i1 %.not6.i132, float %340, float %339, !dbg !26
  %341 = fcmp oge float %.01.i130, 0x4022059680000000, !dbg !26
  %s.0.i134 = select i1 %341, float 1.000000e+00, float %.03.i133, !dbg !26
  %342 = bitcast float %s.0.i134 to i32, !dbg !26
  %343 = bitcast float %122 to i32, !dbg !26
  %344 = and i32 %343, -2147483648, !dbg !26
  %345 = or i32 %344, %342, !dbg !26
  %346 = bitcast i32 %345 to float, !dbg !26
  br label %__nv_tanhf.exit147, !dbg !26

__internal_fmad.exit3.i136:                       ; preds = %__nv_tanhf.exit128
  %347 = fmul float %122, %122, !dbg !26
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i137 = icmp eq i32 %348, 0, !dbg !26
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %347, float 0xBFAAC795C0000000) #4, !dbg !26
  %350 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %347, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i138 = select i1 %.not1.i137, float %350, float %349, !dbg !26
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i139 = icmp eq i32 %351, 0, !dbg !26
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %347, float 0x3FC10B2820000000) #4, !dbg !26
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %347, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i140 = select i1 %.not2.i139, float %353, float %352, !dbg !26
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i141 = icmp eq i32 %354, 0, !dbg !26
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i140, float %347, float 0xBFD5553DA0000000) #4, !dbg !26
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i140, float %347, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i142 = select i1 %.not3.i141, float %356, float %355, !dbg !26
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i143 = icmp eq i32 %357, 0, !dbg !26
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %347, float 0.000000e+00) #4, !dbg !26
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %347, float 0.000000e+00) #4, !dbg !26
  %.04.i144 = select i1 %.not4.i143, float %359, float %358, !dbg !26
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i145 = icmp eq i32 %360, 0, !dbg !26
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i144, float %122, float %122) #4, !dbg !26
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i144, float %122, float %122) #4, !dbg !26
  %.02.i146 = select i1 %.not5.i145, float %362, float %361, !dbg !26
  br label %__nv_tanhf.exit147, !dbg !26

__nv_tanhf.exit147:                               ; preds = %__internal_fmad.exit1.i131, %__internal_fmad.exit3.i136
  %s.1.i135 = phi float [ %346, %__internal_fmad.exit1.i131 ], [ %.02.i146, %__internal_fmad.exit3.i136 ], !dbg !26
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i148 = icmp eq i32 %363, 0, !dbg !26
  %364 = tail call float @llvm.nvvm.fabs.ftz.f(float %123) #4, !dbg !26
  %365 = tail call float @llvm.nvvm.fabs.f(float %123) #4, !dbg !26
  %.01.i149 = select i1 %.not.i148, float %365, float %364, !dbg !26
  %366 = fcmp ult float %.01.i149, 0x3FE3333340000000, !dbg !26
  br i1 %366, label %__internal_fmad.exit3.i155, label %__internal_fmad.exit1.i150, !dbg !26

__internal_fmad.exit1.i150:                       ; preds = %__nv_tanhf.exit147
  %367 = fmul float %.01.i149, 0x4007154760000000, !dbg !26
  %368 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %367) #4, !dbg !26
  %369 = fadd float %368, 1.000000e+00, !dbg !26
  %370 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %369) #5, !dbg !26, !srcloc !27
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i151 = icmp eq i32 %371, 0, !dbg !26
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %370, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %370, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i152 = select i1 %.not6.i151, float %373, float %372, !dbg !26
  %374 = fcmp oge float %.01.i149, 0x4022059680000000, !dbg !26
  %s.0.i153 = select i1 %374, float 1.000000e+00, float %.03.i152, !dbg !26
  %375 = bitcast float %s.0.i153 to i32, !dbg !26
  %376 = bitcast float %123 to i32, !dbg !26
  %377 = and i32 %376, -2147483648, !dbg !26
  %378 = or i32 %377, %375, !dbg !26
  %379 = bitcast i32 %378 to float, !dbg !26
  br label %__nv_tanhf.exit166, !dbg !26

__internal_fmad.exit3.i155:                       ; preds = %__nv_tanhf.exit147
  %380 = fmul float %123, %123, !dbg !26
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i156 = icmp eq i32 %381, 0, !dbg !26
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %380, float 0xBFAAC795C0000000) #4, !dbg !26
  %383 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %380, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i157 = select i1 %.not1.i156, float %383, float %382, !dbg !26
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i158 = icmp eq i32 %384, 0, !dbg !26
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i157, float %380, float 0x3FC10B2820000000) #4, !dbg !26
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i157, float %380, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i159 = select i1 %.not2.i158, float %386, float %385, !dbg !26
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i160 = icmp eq i32 %387, 0, !dbg !26
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i159, float %380, float 0xBFD5553DA0000000) #4, !dbg !26
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i159, float %380, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i161 = select i1 %.not3.i160, float %389, float %388, !dbg !26
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i162 = icmp eq i32 %390, 0, !dbg !26
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i161, float %380, float 0.000000e+00) #4, !dbg !26
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i161, float %380, float 0.000000e+00) #4, !dbg !26
  %.04.i163 = select i1 %.not4.i162, float %392, float %391, !dbg !26
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i164 = icmp eq i32 %393, 0, !dbg !26
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i163, float %123, float %123) #4, !dbg !26
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i163, float %123, float %123) #4, !dbg !26
  %.02.i165 = select i1 %.not5.i164, float %395, float %394, !dbg !26
  br label %__nv_tanhf.exit166, !dbg !26

__nv_tanhf.exit166:                               ; preds = %__internal_fmad.exit1.i150, %__internal_fmad.exit3.i155
  %s.1.i154 = phi float [ %379, %__internal_fmad.exit1.i150 ], [ %.02.i165, %__internal_fmad.exit3.i155 ], !dbg !26
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i167 = icmp eq i32 %396, 0, !dbg !26
  %397 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #4, !dbg !26
  %398 = tail call float @llvm.nvvm.fabs.f(float %124) #4, !dbg !26
  %.01.i168 = select i1 %.not.i167, float %398, float %397, !dbg !26
  %399 = fcmp ult float %.01.i168, 0x3FE3333340000000, !dbg !26
  br i1 %399, label %__internal_fmad.exit3.i174, label %__internal_fmad.exit1.i169, !dbg !26

__internal_fmad.exit1.i169:                       ; preds = %__nv_tanhf.exit166
  %400 = fmul float %.01.i168, 0x4007154760000000, !dbg !26
  %401 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %400) #4, !dbg !26
  %402 = fadd float %401, 1.000000e+00, !dbg !26
  %403 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %402) #5, !dbg !26, !srcloc !27
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i170 = icmp eq i32 %404, 0, !dbg !26
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %403, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %403, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i171 = select i1 %.not6.i170, float %406, float %405, !dbg !26
  %407 = fcmp oge float %.01.i168, 0x4022059680000000, !dbg !26
  %s.0.i172 = select i1 %407, float 1.000000e+00, float %.03.i171, !dbg !26
  %408 = bitcast float %s.0.i172 to i32, !dbg !26
  %409 = bitcast float %124 to i32, !dbg !26
  %410 = and i32 %409, -2147483648, !dbg !26
  %411 = or i32 %410, %408, !dbg !26
  %412 = bitcast i32 %411 to float, !dbg !26
  br label %__nv_tanhf.exit185, !dbg !26

__internal_fmad.exit3.i174:                       ; preds = %__nv_tanhf.exit166
  %413 = fmul float %124, %124, !dbg !26
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i175 = icmp eq i32 %414, 0, !dbg !26
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %413, float 0xBFAAC795C0000000) #4, !dbg !26
  %416 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %413, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i176 = select i1 %.not1.i175, float %416, float %415, !dbg !26
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i177 = icmp eq i32 %417, 0, !dbg !26
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i176, float %413, float 0x3FC10B2820000000) #4, !dbg !26
  %419 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i176, float %413, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i178 = select i1 %.not2.i177, float %419, float %418, !dbg !26
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i179 = icmp eq i32 %420, 0, !dbg !26
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i178, float %413, float 0xBFD5553DA0000000) #4, !dbg !26
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i178, float %413, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i180 = select i1 %.not3.i179, float %422, float %421, !dbg !26
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i181 = icmp eq i32 %423, 0, !dbg !26
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i180, float %413, float 0.000000e+00) #4, !dbg !26
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i180, float %413, float 0.000000e+00) #4, !dbg !26
  %.04.i182 = select i1 %.not4.i181, float %425, float %424, !dbg !26
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i183 = icmp eq i32 %426, 0, !dbg !26
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i182, float %124, float %124) #4, !dbg !26
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i182, float %124, float %124) #4, !dbg !26
  %.02.i184 = select i1 %.not5.i183, float %428, float %427, !dbg !26
  br label %__nv_tanhf.exit185, !dbg !26

__nv_tanhf.exit185:                               ; preds = %__internal_fmad.exit1.i169, %__internal_fmad.exit3.i174
  %s.1.i173 = phi float [ %412, %__internal_fmad.exit1.i169 ], [ %.02.i184, %__internal_fmad.exit3.i174 ], !dbg !26
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i186 = icmp eq i32 %429, 0, !dbg !26
  %430 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #4, !dbg !26
  %431 = tail call float @llvm.nvvm.fabs.f(float %125) #4, !dbg !26
  %.01.i187 = select i1 %.not.i186, float %431, float %430, !dbg !26
  %432 = fcmp ult float %.01.i187, 0x3FE3333340000000, !dbg !26
  br i1 %432, label %__internal_fmad.exit3.i193, label %__internal_fmad.exit1.i188, !dbg !26

__internal_fmad.exit1.i188:                       ; preds = %__nv_tanhf.exit185
  %433 = fmul float %.01.i187, 0x4007154760000000, !dbg !26
  %434 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %433) #4, !dbg !26
  %435 = fadd float %434, 1.000000e+00, !dbg !26
  %436 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %435) #5, !dbg !26, !srcloc !27
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i189 = icmp eq i32 %437, 0, !dbg !26
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %436, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %436, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i190 = select i1 %.not6.i189, float %439, float %438, !dbg !26
  %440 = fcmp oge float %.01.i187, 0x4022059680000000, !dbg !26
  %s.0.i191 = select i1 %440, float 1.000000e+00, float %.03.i190, !dbg !26
  %441 = bitcast float %s.0.i191 to i32, !dbg !26
  %442 = bitcast float %125 to i32, !dbg !26
  %443 = and i32 %442, -2147483648, !dbg !26
  %444 = or i32 %443, %441, !dbg !26
  %445 = bitcast i32 %444 to float, !dbg !26
  br label %__nv_tanhf.exit204, !dbg !26

__internal_fmad.exit3.i193:                       ; preds = %__nv_tanhf.exit185
  %446 = fmul float %125, %125, !dbg !26
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i194 = icmp eq i32 %447, 0, !dbg !26
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %446, float 0xBFAAC795C0000000) #4, !dbg !26
  %449 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %446, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i195 = select i1 %.not1.i194, float %449, float %448, !dbg !26
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i196 = icmp eq i32 %450, 0, !dbg !26
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i195, float %446, float 0x3FC10B2820000000) #4, !dbg !26
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i195, float %446, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i197 = select i1 %.not2.i196, float %452, float %451, !dbg !26
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i198 = icmp eq i32 %453, 0, !dbg !26
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i197, float %446, float 0xBFD5553DA0000000) #4, !dbg !26
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i197, float %446, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i199 = select i1 %.not3.i198, float %455, float %454, !dbg !26
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i200 = icmp eq i32 %456, 0, !dbg !26
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i199, float %446, float 0.000000e+00) #4, !dbg !26
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i199, float %446, float 0.000000e+00) #4, !dbg !26
  %.04.i201 = select i1 %.not4.i200, float %458, float %457, !dbg !26
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i202 = icmp eq i32 %459, 0, !dbg !26
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i201, float %125, float %125) #4, !dbg !26
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i201, float %125, float %125) #4, !dbg !26
  %.02.i203 = select i1 %.not5.i202, float %461, float %460, !dbg !26
  br label %__nv_tanhf.exit204, !dbg !26

__nv_tanhf.exit204:                               ; preds = %__internal_fmad.exit1.i188, %__internal_fmad.exit3.i193
  %s.1.i192 = phi float [ %445, %__internal_fmad.exit1.i188 ], [ %.02.i203, %__internal_fmad.exit3.i193 ], !dbg !26
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i205 = icmp eq i32 %462, 0, !dbg !26
  %463 = tail call float @llvm.nvvm.fabs.ftz.f(float %126) #4, !dbg !26
  %464 = tail call float @llvm.nvvm.fabs.f(float %126) #4, !dbg !26
  %.01.i206 = select i1 %.not.i205, float %464, float %463, !dbg !26
  %465 = fcmp ult float %.01.i206, 0x3FE3333340000000, !dbg !26
  br i1 %465, label %__internal_fmad.exit3.i212, label %__internal_fmad.exit1.i207, !dbg !26

__internal_fmad.exit1.i207:                       ; preds = %__nv_tanhf.exit204
  %466 = fmul float %.01.i206, 0x4007154760000000, !dbg !26
  %467 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %466) #4, !dbg !26
  %468 = fadd float %467, 1.000000e+00, !dbg !26
  %469 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %468) #5, !dbg !26, !srcloc !27
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i208 = icmp eq i32 %470, 0, !dbg !26
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %469, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %469, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i209 = select i1 %.not6.i208, float %472, float %471, !dbg !26
  %473 = fcmp oge float %.01.i206, 0x4022059680000000, !dbg !26
  %s.0.i210 = select i1 %473, float 1.000000e+00, float %.03.i209, !dbg !26
  %474 = bitcast float %s.0.i210 to i32, !dbg !26
  %475 = bitcast float %126 to i32, !dbg !26
  %476 = and i32 %475, -2147483648, !dbg !26
  %477 = or i32 %476, %474, !dbg !26
  %478 = bitcast i32 %477 to float, !dbg !26
  br label %__nv_tanhf.exit223, !dbg !26

__internal_fmad.exit3.i212:                       ; preds = %__nv_tanhf.exit204
  %479 = fmul float %126, %126, !dbg !26
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i213 = icmp eq i32 %480, 0, !dbg !26
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %479, float 0xBFAAC795C0000000) #4, !dbg !26
  %482 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %479, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i214 = select i1 %.not1.i213, float %482, float %481, !dbg !26
  %483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i215 = icmp eq i32 %483, 0, !dbg !26
  %484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i214, float %479, float 0x3FC10B2820000000) #4, !dbg !26
  %485 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i214, float %479, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i216 = select i1 %.not2.i215, float %485, float %484, !dbg !26
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i217 = icmp eq i32 %486, 0, !dbg !26
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i216, float %479, float 0xBFD5553DA0000000) #4, !dbg !26
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i216, float %479, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i218 = select i1 %.not3.i217, float %488, float %487, !dbg !26
  %489 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i219 = icmp eq i32 %489, 0, !dbg !26
  %490 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i218, float %479, float 0.000000e+00) #4, !dbg !26
  %491 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i218, float %479, float 0.000000e+00) #4, !dbg !26
  %.04.i220 = select i1 %.not4.i219, float %491, float %490, !dbg !26
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i221 = icmp eq i32 %492, 0, !dbg !26
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i220, float %126, float %126) #4, !dbg !26
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i220, float %126, float %126) #4, !dbg !26
  %.02.i222 = select i1 %.not5.i221, float %494, float %493, !dbg !26
  br label %__nv_tanhf.exit223, !dbg !26

__nv_tanhf.exit223:                               ; preds = %__internal_fmad.exit1.i207, %__internal_fmad.exit3.i212
  %s.1.i211 = phi float [ %478, %__internal_fmad.exit1.i207 ], [ %.02.i222, %__internal_fmad.exit3.i212 ], !dbg !26
  %495 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i224 = icmp eq i32 %495, 0, !dbg !26
  %496 = tail call float @llvm.nvvm.fabs.ftz.f(float %127) #4, !dbg !26
  %497 = tail call float @llvm.nvvm.fabs.f(float %127) #4, !dbg !26
  %.01.i225 = select i1 %.not.i224, float %497, float %496, !dbg !26
  %498 = fcmp ult float %.01.i225, 0x3FE3333340000000, !dbg !26
  br i1 %498, label %__internal_fmad.exit3.i231, label %__internal_fmad.exit1.i226, !dbg !26

__internal_fmad.exit1.i226:                       ; preds = %__nv_tanhf.exit223
  %499 = fmul float %.01.i225, 0x4007154760000000, !dbg !26
  %500 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %499) #4, !dbg !26
  %501 = fadd float %500, 1.000000e+00, !dbg !26
  %502 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %501) #5, !dbg !26, !srcloc !27
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i227 = icmp eq i32 %503, 0, !dbg !26
  %504 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %502, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %505 = tail call float @llvm.nvvm.fma.rn.f(float %502, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i228 = select i1 %.not6.i227, float %505, float %504, !dbg !26
  %506 = fcmp oge float %.01.i225, 0x4022059680000000, !dbg !26
  %s.0.i229 = select i1 %506, float 1.000000e+00, float %.03.i228, !dbg !26
  %507 = bitcast float %s.0.i229 to i32, !dbg !26
  %508 = bitcast float %127 to i32, !dbg !26
  %509 = and i32 %508, -2147483648, !dbg !26
  %510 = or i32 %509, %507, !dbg !26
  %511 = bitcast i32 %510 to float, !dbg !26
  br label %__nv_tanhf.exit242, !dbg !26

__internal_fmad.exit3.i231:                       ; preds = %__nv_tanhf.exit223
  %512 = fmul float %127, %127, !dbg !26
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i232 = icmp eq i32 %513, 0, !dbg !26
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %512, float 0xBFAAC795C0000000) #4, !dbg !26
  %515 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %512, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i233 = select i1 %.not1.i232, float %515, float %514, !dbg !26
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i234 = icmp eq i32 %516, 0, !dbg !26
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i233, float %512, float 0x3FC10B2820000000) #4, !dbg !26
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i233, float %512, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i235 = select i1 %.not2.i234, float %518, float %517, !dbg !26
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i236 = icmp eq i32 %519, 0, !dbg !26
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i235, float %512, float 0xBFD5553DA0000000) #4, !dbg !26
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i235, float %512, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i237 = select i1 %.not3.i236, float %521, float %520, !dbg !26
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i238 = icmp eq i32 %522, 0, !dbg !26
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i237, float %512, float 0.000000e+00) #4, !dbg !26
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i237, float %512, float 0.000000e+00) #4, !dbg !26
  %.04.i239 = select i1 %.not4.i238, float %524, float %523, !dbg !26
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i240 = icmp eq i32 %525, 0, !dbg !26
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i239, float %127, float %127) #4, !dbg !26
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i239, float %127, float %127) #4, !dbg !26
  %.02.i241 = select i1 %.not5.i240, float %527, float %526, !dbg !26
  br label %__nv_tanhf.exit242, !dbg !26

__nv_tanhf.exit242:                               ; preds = %__internal_fmad.exit1.i226, %__internal_fmad.exit3.i231
  %s.1.i230 = phi float [ %511, %__internal_fmad.exit1.i226 ], [ %.02.i241, %__internal_fmad.exit3.i231 ], !dbg !26
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i243 = icmp eq i32 %528, 0, !dbg !26
  %529 = tail call float @llvm.nvvm.fabs.ftz.f(float %128) #4, !dbg !26
  %530 = tail call float @llvm.nvvm.fabs.f(float %128) #4, !dbg !26
  %.01.i244 = select i1 %.not.i243, float %530, float %529, !dbg !26
  %531 = fcmp ult float %.01.i244, 0x3FE3333340000000, !dbg !26
  br i1 %531, label %__internal_fmad.exit3.i250, label %__internal_fmad.exit1.i245, !dbg !26

__internal_fmad.exit1.i245:                       ; preds = %__nv_tanhf.exit242
  %532 = fmul float %.01.i244, 0x4007154760000000, !dbg !26
  %533 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %532) #4, !dbg !26
  %534 = fadd float %533, 1.000000e+00, !dbg !26
  %535 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %534) #5, !dbg !26, !srcloc !27
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i246 = icmp eq i32 %536, 0, !dbg !26
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %535, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i247 = select i1 %.not6.i246, float %538, float %537, !dbg !26
  %539 = fcmp oge float %.01.i244, 0x4022059680000000, !dbg !26
  %s.0.i248 = select i1 %539, float 1.000000e+00, float %.03.i247, !dbg !26
  %540 = bitcast float %s.0.i248 to i32, !dbg !26
  %541 = bitcast float %128 to i32, !dbg !26
  %542 = and i32 %541, -2147483648, !dbg !26
  %543 = or i32 %542, %540, !dbg !26
  %544 = bitcast i32 %543 to float, !dbg !26
  br label %__nv_tanhf.exit261, !dbg !26

__internal_fmad.exit3.i250:                       ; preds = %__nv_tanhf.exit242
  %545 = fmul float %128, %128, !dbg !26
  %546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i251 = icmp eq i32 %546, 0, !dbg !26
  %547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %545, float 0xBFAAC795C0000000) #4, !dbg !26
  %548 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %545, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i252 = select i1 %.not1.i251, float %548, float %547, !dbg !26
  %549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i253 = icmp eq i32 %549, 0, !dbg !26
  %550 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i252, float %545, float 0x3FC10B2820000000) #4, !dbg !26
  %551 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i252, float %545, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i254 = select i1 %.not2.i253, float %551, float %550, !dbg !26
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i255 = icmp eq i32 %552, 0, !dbg !26
  %553 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i254, float %545, float 0xBFD5553DA0000000) #4, !dbg !26
  %554 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i254, float %545, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i256 = select i1 %.not3.i255, float %554, float %553, !dbg !26
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i257 = icmp eq i32 %555, 0, !dbg !26
  %556 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i256, float %545, float 0.000000e+00) #4, !dbg !26
  %557 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i256, float %545, float 0.000000e+00) #4, !dbg !26
  %.04.i258 = select i1 %.not4.i257, float %557, float %556, !dbg !26
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i259 = icmp eq i32 %558, 0, !dbg !26
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i258, float %128, float %128) #4, !dbg !26
  %560 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i258, float %128, float %128) #4, !dbg !26
  %.02.i260 = select i1 %.not5.i259, float %560, float %559, !dbg !26
  br label %__nv_tanhf.exit261, !dbg !26

__nv_tanhf.exit261:                               ; preds = %__internal_fmad.exit1.i245, %__internal_fmad.exit3.i250
  %s.1.i249 = phi float [ %544, %__internal_fmad.exit1.i245 ], [ %.02.i260, %__internal_fmad.exit3.i250 ], !dbg !26
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i262 = icmp eq i32 %561, 0, !dbg !26
  %562 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #4, !dbg !26
  %563 = tail call float @llvm.nvvm.fabs.f(float %129) #4, !dbg !26
  %.01.i263 = select i1 %.not.i262, float %563, float %562, !dbg !26
  %564 = fcmp ult float %.01.i263, 0x3FE3333340000000, !dbg !26
  br i1 %564, label %__internal_fmad.exit3.i269, label %__internal_fmad.exit1.i264, !dbg !26

__internal_fmad.exit1.i264:                       ; preds = %__nv_tanhf.exit261
  %565 = fmul float %.01.i263, 0x4007154760000000, !dbg !26
  %566 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %565) #4, !dbg !26
  %567 = fadd float %566, 1.000000e+00, !dbg !26
  %568 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %567) #5, !dbg !26, !srcloc !27
  %569 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i265 = icmp eq i32 %569, 0, !dbg !26
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %568, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %571 = tail call float @llvm.nvvm.fma.rn.f(float %568, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i266 = select i1 %.not6.i265, float %571, float %570, !dbg !26
  %572 = fcmp oge float %.01.i263, 0x4022059680000000, !dbg !26
  %s.0.i267 = select i1 %572, float 1.000000e+00, float %.03.i266, !dbg !26
  %573 = bitcast float %s.0.i267 to i32, !dbg !26
  %574 = bitcast float %129 to i32, !dbg !26
  %575 = and i32 %574, -2147483648, !dbg !26
  %576 = or i32 %575, %573, !dbg !26
  %577 = bitcast i32 %576 to float, !dbg !26
  br label %__nv_tanhf.exit280, !dbg !26

__internal_fmad.exit3.i269:                       ; preds = %__nv_tanhf.exit261
  %578 = fmul float %129, %129, !dbg !26
  %579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i270 = icmp eq i32 %579, 0, !dbg !26
  %580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %578, float 0xBFAAC795C0000000) #4, !dbg !26
  %581 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %578, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i271 = select i1 %.not1.i270, float %581, float %580, !dbg !26
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i272 = icmp eq i32 %582, 0, !dbg !26
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i271, float %578, float 0x3FC10B2820000000) #4, !dbg !26
  %584 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i271, float %578, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i273 = select i1 %.not2.i272, float %584, float %583, !dbg !26
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i274 = icmp eq i32 %585, 0, !dbg !26
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i273, float %578, float 0xBFD5553DA0000000) #4, !dbg !26
  %587 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i273, float %578, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i275 = select i1 %.not3.i274, float %587, float %586, !dbg !26
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i276 = icmp eq i32 %588, 0, !dbg !26
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i275, float %578, float 0.000000e+00) #4, !dbg !26
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i275, float %578, float 0.000000e+00) #4, !dbg !26
  %.04.i277 = select i1 %.not4.i276, float %590, float %589, !dbg !26
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i278 = icmp eq i32 %591, 0, !dbg !26
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i277, float %129, float %129) #4, !dbg !26
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i277, float %129, float %129) #4, !dbg !26
  %.02.i279 = select i1 %.not5.i278, float %593, float %592, !dbg !26
  br label %__nv_tanhf.exit280, !dbg !26

__nv_tanhf.exit280:                               ; preds = %__internal_fmad.exit1.i264, %__internal_fmad.exit3.i269
  %s.1.i268 = phi float [ %577, %__internal_fmad.exit1.i264 ], [ %.02.i279, %__internal_fmad.exit3.i269 ], !dbg !26
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i281 = icmp eq i32 %594, 0, !dbg !26
  %595 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #4, !dbg !26
  %596 = tail call float @llvm.nvvm.fabs.f(float %130) #4, !dbg !26
  %.01.i282 = select i1 %.not.i281, float %596, float %595, !dbg !26
  %597 = fcmp ult float %.01.i282, 0x3FE3333340000000, !dbg !26
  br i1 %597, label %__internal_fmad.exit3.i288, label %__internal_fmad.exit1.i283, !dbg !26

__internal_fmad.exit1.i283:                       ; preds = %__nv_tanhf.exit280
  %598 = fmul float %.01.i282, 0x4007154760000000, !dbg !26
  %599 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %598) #4, !dbg !26
  %600 = fadd float %599, 1.000000e+00, !dbg !26
  %601 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %600) #5, !dbg !26, !srcloc !27
  %602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i284 = icmp eq i32 %602, 0, !dbg !26
  %603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %601, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %604 = tail call float @llvm.nvvm.fma.rn.f(float %601, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i285 = select i1 %.not6.i284, float %604, float %603, !dbg !26
  %605 = fcmp oge float %.01.i282, 0x4022059680000000, !dbg !26
  %s.0.i286 = select i1 %605, float 1.000000e+00, float %.03.i285, !dbg !26
  %606 = bitcast float %s.0.i286 to i32, !dbg !26
  %607 = bitcast float %130 to i32, !dbg !26
  %608 = and i32 %607, -2147483648, !dbg !26
  %609 = or i32 %608, %606, !dbg !26
  %610 = bitcast i32 %609 to float, !dbg !26
  br label %__nv_tanhf.exit299, !dbg !26

__internal_fmad.exit3.i288:                       ; preds = %__nv_tanhf.exit280
  %611 = fmul float %130, %130, !dbg !26
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i289 = icmp eq i32 %612, 0, !dbg !26
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %611, float 0xBFAAC795C0000000) #4, !dbg !26
  %614 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %611, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i290 = select i1 %.not1.i289, float %614, float %613, !dbg !26
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i291 = icmp eq i32 %615, 0, !dbg !26
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i290, float %611, float 0x3FC10B2820000000) #4, !dbg !26
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i290, float %611, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i292 = select i1 %.not2.i291, float %617, float %616, !dbg !26
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i293 = icmp eq i32 %618, 0, !dbg !26
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i292, float %611, float 0xBFD5553DA0000000) #4, !dbg !26
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i292, float %611, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i294 = select i1 %.not3.i293, float %620, float %619, !dbg !26
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i295 = icmp eq i32 %621, 0, !dbg !26
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i294, float %611, float 0.000000e+00) #4, !dbg !26
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i294, float %611, float 0.000000e+00) #4, !dbg !26
  %.04.i296 = select i1 %.not4.i295, float %623, float %622, !dbg !26
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i297 = icmp eq i32 %624, 0, !dbg !26
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i296, float %130, float %130) #4, !dbg !26
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i296, float %130, float %130) #4, !dbg !26
  %.02.i298 = select i1 %.not5.i297, float %626, float %625, !dbg !26
  br label %__nv_tanhf.exit299, !dbg !26

__nv_tanhf.exit299:                               ; preds = %__internal_fmad.exit1.i283, %__internal_fmad.exit3.i288
  %s.1.i287 = phi float [ %610, %__internal_fmad.exit1.i283 ], [ %.02.i298, %__internal_fmad.exit3.i288 ], !dbg !26
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i300 = icmp eq i32 %627, 0, !dbg !26
  %628 = tail call float @llvm.nvvm.fabs.ftz.f(float %131) #4, !dbg !26
  %629 = tail call float @llvm.nvvm.fabs.f(float %131) #4, !dbg !26
  %.01.i301 = select i1 %.not.i300, float %629, float %628, !dbg !26
  %630 = fcmp ult float %.01.i301, 0x3FE3333340000000, !dbg !26
  br i1 %630, label %__internal_fmad.exit3.i307, label %__internal_fmad.exit1.i302, !dbg !26

__internal_fmad.exit1.i302:                       ; preds = %__nv_tanhf.exit299
  %631 = fmul float %.01.i301, 0x4007154760000000, !dbg !26
  %632 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %631) #4, !dbg !26
  %633 = fadd float %632, 1.000000e+00, !dbg !26
  %634 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %633) #5, !dbg !26, !srcloc !27
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i303 = icmp eq i32 %635, 0, !dbg !26
  %636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %634, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %637 = tail call float @llvm.nvvm.fma.rn.f(float %634, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i304 = select i1 %.not6.i303, float %637, float %636, !dbg !26
  %638 = fcmp oge float %.01.i301, 0x4022059680000000, !dbg !26
  %s.0.i305 = select i1 %638, float 1.000000e+00, float %.03.i304, !dbg !26
  %639 = bitcast float %s.0.i305 to i32, !dbg !26
  %640 = bitcast float %131 to i32, !dbg !26
  %641 = and i32 %640, -2147483648, !dbg !26
  %642 = or i32 %641, %639, !dbg !26
  %643 = bitcast i32 %642 to float, !dbg !26
  br label %__nv_tanhf.exit318, !dbg !26

__internal_fmad.exit3.i307:                       ; preds = %__nv_tanhf.exit299
  %644 = fmul float %131, %131, !dbg !26
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i308 = icmp eq i32 %645, 0, !dbg !26
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %644, float 0xBFAAC795C0000000) #4, !dbg !26
  %647 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %644, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i309 = select i1 %.not1.i308, float %647, float %646, !dbg !26
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i310 = icmp eq i32 %648, 0, !dbg !26
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i309, float %644, float 0x3FC10B2820000000) #4, !dbg !26
  %650 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i309, float %644, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i311 = select i1 %.not2.i310, float %650, float %649, !dbg !26
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i312 = icmp eq i32 %651, 0, !dbg !26
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i311, float %644, float 0xBFD5553DA0000000) #4, !dbg !26
  %653 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i311, float %644, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i313 = select i1 %.not3.i312, float %653, float %652, !dbg !26
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i314 = icmp eq i32 %654, 0, !dbg !26
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i313, float %644, float 0.000000e+00) #4, !dbg !26
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i313, float %644, float 0.000000e+00) #4, !dbg !26
  %.04.i315 = select i1 %.not4.i314, float %656, float %655, !dbg !26
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i316 = icmp eq i32 %657, 0, !dbg !26
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i315, float %131, float %131) #4, !dbg !26
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i315, float %131, float %131) #4, !dbg !26
  %.02.i317 = select i1 %.not5.i316, float %659, float %658, !dbg !26
  br label %__nv_tanhf.exit318, !dbg !26

__nv_tanhf.exit318:                               ; preds = %__internal_fmad.exit1.i302, %__internal_fmad.exit3.i307
  %s.1.i306 = phi float [ %643, %__internal_fmad.exit1.i302 ], [ %.02.i317, %__internal_fmad.exit3.i307 ], !dbg !26
  %660 = and i32 %14, 12, !dbg !12
  %661 = or disjoint i32 %7, %660, !dbg !13
  %.frozen = freeze i32 %661, !dbg !28
  %662 = sdiv i32 %.frozen, 256, !dbg !28
  %663 = mul i32 %662, 256, !dbg !29
  %.decomposed = sub i32 %.frozen, %663, !dbg !29
  %664 = lshr i32 %8, 2, !dbg !16
  %665 = and i32 %664, 63, !dbg !16
  %666 = or disjoint i32 %665, %20, !dbg !17
  %667 = or disjoint i32 %666, 192, !dbg !17
  %668 = icmp slt i32 %667, 256, !dbg !18
  %669 = or disjoint i32 %666, 128, !dbg !17
  %670 = icmp slt i32 %669, 256, !dbg !18
  %671 = or disjoint i32 %666, 64, !dbg !17
  %672 = icmp slt i32 %671, 256, !dbg !18
  %673 = icmp slt i32 %666, 256, !dbg !18
  %674 = shl i32 %666, 8, !dbg !30
  %675 = shl i32 %671, 8, !dbg !30
  %676 = shl i32 %669, 8, !dbg !30
  %677 = shl i32 %667, 8, !dbg !30
  %678 = shl i32 %662, 16, !dbg !31
  %679 = add i32 %678, %.decomposed, !dbg !32
  %680 = add i32 %679, %674, !dbg !33
  %681 = add i32 %679, %675, !dbg !33
  %682 = add i32 %679, %676, !dbg !33
  %683 = add i32 %679, %677, !dbg !33
  %684 = sext i32 %680 to i64, !dbg !34
  %685 = getelementptr float, ptr addrspace(1) %2, i64 %684, !dbg !34
  %686 = sext i32 %681 to i64, !dbg !34
  %687 = getelementptr float, ptr addrspace(1) %2, i64 %686, !dbg !34
  %688 = sext i32 %682 to i64, !dbg !34
  %689 = getelementptr float, ptr addrspace(1) %2, i64 %688, !dbg !34
  %690 = sext i32 %683 to i64, !dbg !34
  %691 = getelementptr float, ptr addrspace(1) %2, i64 %690, !dbg !34
  %692 = shl i32 %8, 6, !dbg !35
  %693 = and i32 %692, 4032, !dbg !35
  %694 = or disjoint i32 %693, %10, !dbg !35
  %695 = and i32 %14, 1020, !dbg !35
  %696 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %693, !dbg !35
  %697 = getelementptr float, ptr addrspace(3) %696, i32 %694, !dbg !35
  %698 = bitcast float %s.1.i to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %697, <1 x i32> %698, i1 true) #4, !dbg !35
  %699 = or disjoint i32 %694, 16, !dbg !35
  %700 = lshr i32 %699, 2, !dbg !35
  %701 = getelementptr float, ptr addrspace(3) @global_smem, i32 %700, !dbg !35
  %702 = getelementptr float, ptr addrspace(3) %701, i32 %699, !dbg !35
  %703 = bitcast float %s.1.i40 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %702, <1 x i32> %703, i1 true) #4, !dbg !35
  %704 = or disjoint i32 %694, 32, !dbg !35
  %705 = lshr i32 %704, 2, !dbg !35
  %706 = getelementptr float, ptr addrspace(3) @global_smem, i32 %705, !dbg !35
  %707 = getelementptr float, ptr addrspace(3) %706, i32 %704, !dbg !35
  %708 = bitcast float %s.1.i59 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %707, <1 x i32> %708, i1 true) #4, !dbg !35
  %709 = or disjoint i32 %694, 48, !dbg !35
  %710 = lshr i32 %709, 2, !dbg !35
  %711 = getelementptr float, ptr addrspace(3) @global_smem, i32 %710, !dbg !35
  %712 = getelementptr float, ptr addrspace(3) %711, i32 %709, !dbg !35
  %713 = bitcast float %s.1.i78 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %712, <1 x i32> %713, i1 true) #4, !dbg !35
  %714 = or disjoint i32 %694, 4, !dbg !35
  %715 = getelementptr float, ptr addrspace(3) %696, i32 %714, !dbg !35
  %716 = bitcast float %s.1.i97 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %715, <1 x i32> %716, i1 true) #4, !dbg !35
  %717 = or disjoint i32 %694, 20, !dbg !35
  %718 = lshr i32 %717, 2, !dbg !35
  %719 = and i32 %718, 1012, !dbg !35
  %720 = getelementptr float, ptr addrspace(3) @global_smem, i32 %719, !dbg !35
  %721 = getelementptr float, ptr addrspace(3) %720, i32 %717, !dbg !35
  %722 = bitcast float %s.1.i116 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %721, <1 x i32> %722, i1 true) #4, !dbg !35
  %723 = or disjoint i32 %694, 36, !dbg !35
  %724 = lshr i32 %723, 2, !dbg !35
  %725 = and i32 %724, 1016, !dbg !35
  %726 = getelementptr float, ptr addrspace(3) @global_smem, i32 %725, !dbg !35
  %727 = getelementptr float, ptr addrspace(3) %726, i32 %723, !dbg !35
  %728 = bitcast float %s.1.i135 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %727, <1 x i32> %728, i1 true) #4, !dbg !35
  %729 = or disjoint i32 %694, 52, !dbg !35
  %730 = lshr i32 %729, 2, !dbg !35
  %731 = and i32 %730, 1020, !dbg !35
  %732 = getelementptr float, ptr addrspace(3) @global_smem, i32 %731, !dbg !35
  %733 = getelementptr float, ptr addrspace(3) %732, i32 %729, !dbg !35
  %734 = bitcast float %s.1.i154 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %733, <1 x i32> %734, i1 true) #4, !dbg !35
  %735 = or disjoint i32 %694, 8, !dbg !35
  %736 = getelementptr float, ptr addrspace(3) %696, i32 %735, !dbg !35
  %737 = bitcast float %s.1.i173 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %736, <1 x i32> %737, i1 true) #4, !dbg !35
  %738 = or disjoint i32 %694, 24, !dbg !35
  %739 = lshr i32 %738, 2, !dbg !35
  %740 = and i32 %739, 1012, !dbg !35
  %741 = getelementptr float, ptr addrspace(3) @global_smem, i32 %740, !dbg !35
  %742 = getelementptr float, ptr addrspace(3) %741, i32 %738, !dbg !35
  %743 = bitcast float %s.1.i192 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %742, <1 x i32> %743, i1 true) #4, !dbg !35
  %744 = or disjoint i32 %694, 40, !dbg !35
  %745 = lshr i32 %744, 2, !dbg !35
  %746 = and i32 %745, 1016, !dbg !35
  %747 = getelementptr float, ptr addrspace(3) @global_smem, i32 %746, !dbg !35
  %748 = getelementptr float, ptr addrspace(3) %747, i32 %744, !dbg !35
  %749 = bitcast float %s.1.i211 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %748, <1 x i32> %749, i1 true) #4, !dbg !35
  %750 = or disjoint i32 %694, 56, !dbg !35
  %751 = lshr i32 %750, 2, !dbg !35
  %752 = and i32 %751, 1020, !dbg !35
  %753 = getelementptr float, ptr addrspace(3) @global_smem, i32 %752, !dbg !35
  %754 = getelementptr float, ptr addrspace(3) %753, i32 %750, !dbg !35
  %755 = bitcast float %s.1.i230 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %754, <1 x i32> %755, i1 true) #4, !dbg !35
  %756 = or disjoint i32 %694, 12, !dbg !35
  %757 = getelementptr float, ptr addrspace(3) %696, i32 %756, !dbg !35
  %758 = bitcast float %s.1.i249 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %757, <1 x i32> %758, i1 true) #4, !dbg !35
  %759 = or disjoint i32 %694, 28, !dbg !35
  %760 = lshr i32 %759, 2, !dbg !35
  %761 = and i32 %760, 1012, !dbg !35
  %762 = getelementptr float, ptr addrspace(3) @global_smem, i32 %761, !dbg !35
  %763 = getelementptr float, ptr addrspace(3) %762, i32 %759, !dbg !35
  %764 = bitcast float %s.1.i268 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %763, <1 x i32> %764, i1 true) #4, !dbg !35
  %765 = or disjoint i32 %694, 44, !dbg !35
  %766 = lshr i32 %765, 2, !dbg !35
  %767 = and i32 %766, 1016, !dbg !35
  %768 = getelementptr float, ptr addrspace(3) @global_smem, i32 %767, !dbg !35
  %769 = getelementptr float, ptr addrspace(3) %768, i32 %765, !dbg !35
  %770 = bitcast float %s.1.i287 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %769, <1 x i32> %770, i1 true) #4, !dbg !35
  %771 = or disjoint i32 %694, 60, !dbg !35
  %772 = lshr i32 %771, 2, !dbg !35
  %773 = and i32 %772, 1020, !dbg !35
  %774 = getelementptr float, ptr addrspace(3) @global_smem, i32 %773, !dbg !35
  %775 = getelementptr float, ptr addrspace(3) %774, i32 %771, !dbg !35
  %776 = bitcast float %s.1.i306 to <1 x i32>, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %775, <1 x i32> %776, i1 true) #4, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %777 = and i32 %8, 252, !dbg !35
  %778 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %777, !dbg !35
  %779 = getelementptr inbounds float, ptr addrspace(3) %778, i32 %695, !dbg !35
  %780 = or disjoint i32 %695, 1024, !dbg !35
  %781 = lshr exact i32 %780, 2, !dbg !35
  %782 = and i32 %781, 508, !dbg !35
  %783 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %782, !dbg !35
  %784 = getelementptr inbounds float, ptr addrspace(3) %783, i32 %780, !dbg !35
  %785 = load <4 x i32>, ptr addrspace(3) %784, align 16, !dbg !35
  %786 = or disjoint i32 %695, 2048, !dbg !35
  %787 = lshr exact i32 %786, 2, !dbg !35
  %788 = and i32 %787, 764, !dbg !35
  %789 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %788, !dbg !35
  %790 = getelementptr inbounds float, ptr addrspace(3) %789, i32 %786, !dbg !35
  %791 = load <4 x i32>, ptr addrspace(3) %790, align 16, !dbg !35
  %792 = or disjoint i32 %695, 3072, !dbg !35
  %793 = lshr exact i32 %792, 2, !dbg !35
  %794 = and i32 %793, 1020, !dbg !35
  %795 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %794, !dbg !35
  %796 = getelementptr inbounds float, ptr addrspace(3) %795, i32 %792, !dbg !35
  %797 = load <4 x i32>, ptr addrspace(3) %796, align 16, !dbg !35
  %.extract = load i32, ptr addrspace(3) %779, align 16, !dbg !35
  %798 = getelementptr inbounds i8, ptr addrspace(3) %779, i32 4, !dbg !35
  %.extract19 = load i32, ptr addrspace(3) %798, align 4, !dbg !35
  %799 = getelementptr inbounds i8, ptr addrspace(3) %779, i32 8, !dbg !35
  %.extract20 = load i32, ptr addrspace(3) %799, align 8, !dbg !35
  %800 = getelementptr inbounds i8, ptr addrspace(3) %779, i32 12, !dbg !35
  %.extract21 = load i32, ptr addrspace(3) %800, align 4, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract19, i32 %.extract20, i32 %.extract21, ptr addrspace(1) %685, i1 %673) #4, !dbg !35
  %.extract22 = extractelement <4 x i32> %785, i64 0, !dbg !35
  %.extract23 = extractelement <4 x i32> %785, i64 1, !dbg !35
  %.extract24 = extractelement <4 x i32> %785, i64 2, !dbg !35
  %.extract25 = extractelement <4 x i32> %785, i64 3, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract22, i32 %.extract23, i32 %.extract24, i32 %.extract25, ptr addrspace(1) %687, i1 %672) #4, !dbg !35
  %.extract26 = extractelement <4 x i32> %791, i64 0, !dbg !35
  %.extract27 = extractelement <4 x i32> %791, i64 1, !dbg !35
  %.extract28 = extractelement <4 x i32> %791, i64 2, !dbg !35
  %.extract29 = extractelement <4 x i32> %791, i64 3, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract26, i32 %.extract27, i32 %.extract28, i32 %.extract29, ptr addrspace(1) %689, i1 %670) #4, !dbg !35
  %.extract30 = extractelement <4 x i32> %797, i64 0, !dbg !35
  %.extract31 = extractelement <4 x i32> %797, i64 1, !dbg !35
  %.extract32 = extractelement <4 x i32> %797, i64 2, !dbg !35
  %.extract33 = extractelement <4 x i32> %797, i64 3, !dbg !35
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract30, i32 %.extract31, i32 %.extract32, i32 %.extract33, ptr addrspace(1) %691, i1 %668) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjmohcbh3pmnvnieuzwpvfxobejlboducmwcx2ihhhek5ffoddgm.py", directory: "inductor_cache/jm")
!4 = !{ptr @triton_poi_fused_add_tanh_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_tanh_11, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_tanh_11", linkageName: "triton_poi_fused_add_tanh_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 28, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 26, column: 44, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 44, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 35, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 31, column: 19, scope: !7)
!29 = !DILocation(line: 30, column: 19, scope: !7)
!30 = !DILocation(line: 36, column: 34, scope: !7)
!31 = !DILocation(line: 36, column: 45, scope: !7)
!32 = !DILocation(line: 36, column: 30, scope: !7)
!33 = !DILocation(line: 36, column: 39, scope: !7)
!34 = !DILocation(line: 36, column: 25, scope: !7)
!35 = !DILocation(line: 36, column: 56, scope: !7)
!36 = !DILocation(line: 36, column: 4, scope: !7)
