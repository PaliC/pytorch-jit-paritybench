; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_22(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 512, !dbg !14
  %10 = shl i32 %8, 4, !dbg !15
  %11 = sext i32 %10 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #1, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = or disjoint i32 %10, 1, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #1, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = or disjoint i32 %10, 2, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %9) #1, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = or disjoint i32 %10, 3, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %9) #1, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = or disjoint i32 %10, 4, !dbg !27
  %31 = sext i32 %30 to i64, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %9) #1, !dbg !29
  %34 = bitcast i32 %33 to float, !dbg !29
  %35 = or disjoint i32 %10, 5, !dbg !30
  %36 = sext i32 %35 to i64, !dbg !31
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !31
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %9) #1, !dbg !32
  %39 = bitcast i32 %38 to float, !dbg !32
  %40 = or disjoint i32 %10, 6, !dbg !33
  %41 = sext i32 %40 to i64, !dbg !34
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !34
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %9) #1, !dbg !35
  %44 = bitcast i32 %43 to float, !dbg !35
  %45 = or disjoint i32 %10, 7, !dbg !36
  %46 = sext i32 %45 to i64, !dbg !37
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !37
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %9) #1, !dbg !38
  %49 = bitcast i32 %48 to float, !dbg !38
  %50 = or disjoint i32 %10, 8, !dbg !39
  %51 = sext i32 %50 to i64, !dbg !40
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !40
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %9) #1, !dbg !41
  %54 = bitcast i32 %53 to float, !dbg !41
  %55 = or disjoint i32 %10, 9, !dbg !42
  %56 = sext i32 %55 to i64, !dbg !43
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !43
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %9) #1, !dbg !44
  %59 = bitcast i32 %58 to float, !dbg !44
  %60 = or disjoint i32 %10, 10, !dbg !45
  %61 = sext i32 %60 to i64, !dbg !46
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !46
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %9) #1, !dbg !47
  %64 = bitcast i32 %63 to float, !dbg !47
  %65 = or disjoint i32 %10, 11, !dbg !48
  %66 = sext i32 %65 to i64, !dbg !49
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !49
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %9) #1, !dbg !50
  %69 = bitcast i32 %68 to float, !dbg !50
  %70 = or disjoint i32 %10, 12, !dbg !51
  %71 = sext i32 %70 to i64, !dbg !52
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !52
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %9) #1, !dbg !53
  %74 = bitcast i32 %73 to float, !dbg !53
  %75 = or disjoint i32 %10, 13, !dbg !54
  %76 = sext i32 %75 to i64, !dbg !55
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !55
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 %9) #1, !dbg !56
  %79 = bitcast i32 %78 to float, !dbg !56
  %80 = or disjoint i32 %10, 14, !dbg !57
  %81 = sext i32 %80 to i64, !dbg !58
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !58
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 %9) #1, !dbg !59
  %84 = bitcast i32 %83 to float, !dbg !59
  %85 = or disjoint i32 %10, 15, !dbg !60
  %86 = sext i32 %85 to i64, !dbg !61
  %87 = getelementptr float, ptr addrspace(1) %0, i64 %86, !dbg !61
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %87, i1 %9) #1, !dbg !62
  %89 = bitcast i32 %88 to float, !dbg !62
  %90 = fadd float %14, %19, !dbg !63
  %91 = fadd float %90, %24, !dbg !64
  %92 = fadd float %91, %29, !dbg !65
  %93 = fadd float %92, %34, !dbg !66
  %94 = fadd float %93, %39, !dbg !67
  %95 = fadd float %94, %44, !dbg !68
  %96 = fadd float %95, %49, !dbg !69
  %97 = fadd float %96, %54, !dbg !70
  %98 = fadd float %97, %59, !dbg !71
  %99 = fadd float %98, %64, !dbg !72
  %100 = fadd float %99, %69, !dbg !73
  %101 = fadd float %100, %74, !dbg !74
  %102 = fadd float %101, %79, !dbg !75
  %103 = fadd float %102, %84, !dbg !76
  %104 = fadd float %103, %89, !dbg !77
  %105 = fmul float %104, 6.250000e-02, !dbg !78
  %106 = sext i32 %8 to i64, !dbg !79
  %107 = getelementptr float, ptr addrspace(1) %1, i64 %106, !dbg !79
  %108 = bitcast float %105 to i32, !dbg !80
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %108, ptr addrspace(1) %107, i1 %9) #1, !dbg !80
  ret void, !dbg !81
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cd4csubea6bb3kzxur72gf6f7ek4yx2nfb4n74kvwsyd5yiwve6q.py", directory: "inductor_cache/d4")
!4 = !{ptr @triton_poi_fused_avg_pool2d_22, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_22, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_22", linkageName: "triton_poi_fused_avg_pool2d_22", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 38, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 42, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 29, column: 34, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 42, scope: !7)
!30 = !DILocation(line: 30, column: 34, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 42, scope: !7)
!33 = !DILocation(line: 31, column: 35, scope: !7)
!34 = !DILocation(line: 31, column: 31, scope: !7)
!35 = !DILocation(line: 31, column: 43, scope: !7)
!36 = !DILocation(line: 32, column: 35, scope: !7)
!37 = !DILocation(line: 32, column: 31, scope: !7)
!38 = !DILocation(line: 32, column: 43, scope: !7)
!39 = !DILocation(line: 33, column: 35, scope: !7)
!40 = !DILocation(line: 33, column: 31, scope: !7)
!41 = !DILocation(line: 33, column: 43, scope: !7)
!42 = !DILocation(line: 34, column: 35, scope: !7)
!43 = !DILocation(line: 34, column: 31, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 35, column: 36, scope: !7)
!46 = !DILocation(line: 35, column: 31, scope: !7)
!47 = !DILocation(line: 35, column: 44, scope: !7)
!48 = !DILocation(line: 36, column: 36, scope: !7)
!49 = !DILocation(line: 36, column: 31, scope: !7)
!50 = !DILocation(line: 36, column: 44, scope: !7)
!51 = !DILocation(line: 37, column: 36, scope: !7)
!52 = !DILocation(line: 37, column: 31, scope: !7)
!53 = !DILocation(line: 37, column: 44, scope: !7)
!54 = !DILocation(line: 38, column: 36, scope: !7)
!55 = !DILocation(line: 38, column: 31, scope: !7)
!56 = !DILocation(line: 38, column: 44, scope: !7)
!57 = !DILocation(line: 39, column: 36, scope: !7)
!58 = !DILocation(line: 39, column: 31, scope: !7)
!59 = !DILocation(line: 39, column: 44, scope: !7)
!60 = !DILocation(line: 40, column: 36, scope: !7)
!61 = !DILocation(line: 40, column: 31, scope: !7)
!62 = !DILocation(line: 40, column: 44, scope: !7)
!63 = !DILocation(line: 41, column: 18, scope: !7)
!64 = !DILocation(line: 42, column: 18, scope: !7)
!65 = !DILocation(line: 43, column: 18, scope: !7)
!66 = !DILocation(line: 44, column: 18, scope: !7)
!67 = !DILocation(line: 45, column: 19, scope: !7)
!68 = !DILocation(line: 46, column: 20, scope: !7)
!69 = !DILocation(line: 47, column: 20, scope: !7)
!70 = !DILocation(line: 48, column: 20, scope: !7)
!71 = !DILocation(line: 49, column: 20, scope: !7)
!72 = !DILocation(line: 50, column: 20, scope: !7)
!73 = !DILocation(line: 51, column: 20, scope: !7)
!74 = !DILocation(line: 52, column: 20, scope: !7)
!75 = !DILocation(line: 53, column: 20, scope: !7)
!76 = !DILocation(line: 54, column: 20, scope: !7)
!77 = !DILocation(line: 55, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 20, scope: !7)
!79 = !DILocation(line: 58, column: 25, scope: !7)
!80 = !DILocation(line: 58, column: 37, scope: !7)
!81 = !DILocation(line: 58, column: 4, scope: !7)
