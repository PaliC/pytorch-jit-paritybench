; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 15, !dbg !10
  %7 = zext nneg i32 %6 to i64, !dbg !11
  %8 = getelementptr float, ptr addrspace(1) %0, i64 %7, !dbg !11
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #2, !dbg !12
  %10 = bitcast i32 %9 to float, !dbg !12
  %11 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %9, i32 8, i32 31), !dbg !13
  %12 = bitcast i32 %11 to float, !dbg !13
  %13 = fcmp ogt float %10, %12, !dbg !17
  %14 = fcmp uno float %10, 0.000000e+00, !dbg !19
  %15 = or i1 %14, %13, !dbg !20
  %16 = select i1 %15, float %10, float %12, !dbg !21
  %17 = bitcast float %16 to i32, !dbg !13
  %18 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %17, i32 4, i32 31), !dbg !13
  %19 = bitcast i32 %18 to float, !dbg !13
  %20 = fcmp ogt float %16, %19, !dbg !17
  %21 = fcmp uno float %16, 0.000000e+00, !dbg !19
  %22 = or i1 %20, %21, !dbg !20
  %23 = select i1 %22, float %16, float %19, !dbg !21
  %24 = bitcast float %23 to i32, !dbg !13
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 2, i32 31), !dbg !13
  %26 = bitcast i32 %25 to float, !dbg !13
  %27 = fcmp ogt float %23, %26, !dbg !17
  %28 = fcmp uno float %23, 0.000000e+00, !dbg !19
  %29 = or i1 %27, %28, !dbg !20
  %30 = select i1 %29, float %23, float %26, !dbg !21
  %31 = bitcast float %30 to i32, !dbg !13
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 1, i32 31), !dbg !13
  %33 = bitcast i32 %32 to float, !dbg !13
  %34 = fcmp ogt float %30, %33, !dbg !17
  %35 = fcmp uno float %30, 0.000000e+00, !dbg !19
  %36 = or i1 %34, %35, !dbg !20
  %37 = select i1 %36, float %30, float %33, !dbg !21
  %38 = fsub float %10, %37, !dbg !22
  %39 = fmul float %38, 0x3FF7154760000000, !dbg !23
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #2, !dbg !23
  %41 = bitcast float %40 to i32, !dbg !24
  %42 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 8, i32 31), !dbg !24
  %43 = bitcast i32 %42 to float, !dbg !24
  %44 = fadd float %40, %43, !dbg !28
  %45 = bitcast float %44 to i32, !dbg !24
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 4, i32 31), !dbg !24
  %47 = bitcast i32 %46 to float, !dbg !24
  %48 = fadd float %44, %47, !dbg !28
  %49 = bitcast float %48 to i32, !dbg !24
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 2, i32 31), !dbg !24
  %51 = bitcast i32 %50 to float, !dbg !24
  %52 = fadd float %48, %51, !dbg !28
  %53 = bitcast float %52 to i32, !dbg !24
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 1, i32 31), !dbg !24
  %55 = bitcast i32 %54 to float, !dbg !24
  %56 = fadd float %52, %55, !dbg !28
  %57 = and i32 %5, 63, !dbg !30
  %58 = icmp eq i32 %57, 0, !dbg !30
  %59 = bitcast float %37 to i32, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %59, ptr addrspace(1) %1, i1 %58) #2, !dbg !30
  %60 = bitcast float %56 to i32, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %60, ptr addrspace(1) %2, i1 %58) #2, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cauvuubsuvx2e6zvbne6tmocsf37ph6k4mlcendltiezt4al77jk.py", directory: "inductor_cache/au")
!4 = !{ptr @triton_per_fused__softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_1", linkageName: "triton_per_fused__softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 131, column: 29, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !7, file: !15, discriminator: 0)
!15 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!16 = !DILocation(line: 32, column: 37, scope: !7)
!17 = !DILocation(line: 118, column: 15, scope: !18, inlinedAt: !16)
!18 = distinct !DILexicalBlockFile(scope: !14, file: !15, discriminator: 0)
!19 = !DILocation(line: 120, column: 21, scope: !18, inlinedAt: !16)
!20 = !DILocation(line: 120, column: 16, scope: !18, inlinedAt: !16)
!21 = !DILocation(line: 121, column: 29, scope: !18, inlinedAt: !16)
!22 = !DILocation(line: 33, column: 18, scope: !7)
!23 = !DILocation(line: 34, column: 23, scope: !7)
!24 = !DILocation(line: 267, column: 36, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = !DILocation(line: 36, column: 24, scope: !7)
!28 = !DILocation(line: 256, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 37, column: 67, scope: !7)
!31 = !DILocation(line: 38, column: 67, scope: !7)
!32 = !DILocation(line: 38, column: 4, scope: !7)
