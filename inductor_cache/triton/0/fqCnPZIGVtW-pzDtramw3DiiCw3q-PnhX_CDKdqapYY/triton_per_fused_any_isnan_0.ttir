#loc = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":19:0)
#loc1 = loc(unknown)
#loc8 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":33:36)
#loc15 = loc(callsite(#loc1 at #loc8))
module {
  tt.func public @triton_per_fused_any_isnan_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":19:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.extern_elementwise %4 {libname = "", libpath = "", pure = true, symbol = "__nv_isnanf"} : (tensor<1x16xf32>) -> tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi ne, %5, %cst : tensor<1x16xi32> loc(#loc6)
    %7 = "tt.reduce"(%6) <{axis = 1 : i32}> ({
    ^bb0(%arg3: i1 loc(callsite(#loc1 at #loc8)), %arg4: i1 loc(callsite(#loc1 at #loc8))):
      %13 = arith.ori %arg3, %arg4 : i1 loc(#loc17)
      tt.reduce.return %13 : i1 loc(#loc14)
    }) : (tensor<1x16xi1>) -> tensor<1xi1> loc(#loc14)
    %8 = tt.expand_dims %7 {axis = 1 : i32} : tensor<1xi1> -> tensor<1x1xi1> loc(#loc10)
    %9 = tt.addptr %arg1, %c0_i32 : !tt.ptr<i1>, i32 loc(#loc11)
    %10 = tt.bitcast %9 : !tt.ptr<i1> -> !tt.ptr<i8> loc(#loc12)
    %11 = tt.splat %10 : !tt.ptr<i8> -> tensor<1x1x!tt.ptr<i8>> loc(#loc12)
    %12 = arith.extui %8 : tensor<1x1xi1> to tensor<1x1xi8> loc(#loc12)
    tt.store %11, %12 : tensor<1x1x!tt.ptr<i8>> loc(#loc12)
    tt.return loc(#loc13)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":26:26)
#loc3 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":26:34)
#loc4 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":30:30)
#loc5 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":30:35)
#loc6 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":31:27)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc10 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":33:39)
#loc11 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":34:25)
#loc12 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":34:67)
#loc13 = loc("inductor_cache/p4/cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py":34:4)
#loc14 = loc(callsite(#loc7 at #loc8))
#loc16 = loc(callsite(#loc9 at #loc7))
#loc17 = loc(callsite(#loc16 at #loc8))
