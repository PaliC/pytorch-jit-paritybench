; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_any_isnan_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 15, !dbg !10
  %6 = zext nneg i32 %5 to i64, !dbg !11
  %7 = getelementptr float, ptr addrspace(1) %0, i64 %6, !dbg !11
  %8 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %7, i1 true) #3, !dbg !12
  %9 = bitcast i32 %8 to float, !dbg !12
  %10 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !13
  %.not.i = icmp eq i32 %10, 0, !dbg !13
  %11 = tail call float @llvm.nvvm.fabs.ftz.f(float %9) #3, !dbg !13
  %12 = tail call float @llvm.nvvm.fabs.f(float %9) #3, !dbg !13
  %.0.i = select i1 %.not.i, float %12, float %11, !dbg !13
  %13 = fcmp uno float %.0.i, 0.000000e+00, !dbg !13
  %14 = zext i1 %13 to i32, !dbg !13
  %15 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %14, i32 8, i32 31), !dbg !14
  %16 = trunc i32 %15 to i1, !dbg !14
  %17 = or i1 %13, %16, !dbg !18
  %18 = zext i1 %17 to i32, !dbg !14
  %19 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %18, i32 4, i32 31), !dbg !14
  %20 = trunc i32 %19 to i1, !dbg !14
  %21 = or i1 %17, %20, !dbg !18
  %22 = zext i1 %21 to i32, !dbg !14
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 2, i32 31), !dbg !14
  %24 = trunc i32 %23 to i1, !dbg !14
  %25 = or i1 %21, %24, !dbg !18
  %26 = zext i1 %25 to i32, !dbg !14
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 1, i32 31), !dbg !14
  %28 = trunc i32 %27 to i1, !dbg !14
  %29 = or i1 %25, %28, !dbg !18
  %30 = zext i1 %29 to i8, !dbg !20
  %31 = and i32 %4, 63, !dbg !20
  %32 = icmp eq i32 %31, 0, !dbg !20
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %30, ptr addrspace(1) %1, i1 %32) #3, !dbg !20
  ret void, !dbg !21
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cp42haj2qndkshkpb6ez5msjhlvj3vjv2mx5hhprprshr2kspijt.py", directory: "inductor_cache/p4")
!4 = !{ptr @triton_per_fused_any_isnan_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_any_isnan_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_any_isnan_0", linkageName: "triton_per_fused_any_isnan_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 30, scope: !7)
!12 = !DILocation(line: 30, column: 35, scope: !7)
!13 = !DILocation(line: 31, column: 27, scope: !7)
!14 = !DILocation(line: 232, column: 29, scope: !15, inlinedAt: !17)
!15 = distinct !DILexicalBlockFile(scope: !7, file: !16, discriminator: 0)
!16 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!17 = !DILocation(line: 33, column: 36, scope: !7)
!18 = !DILocation(line: 227, column: 15, scope: !19, inlinedAt: !17)
!19 = distinct !DILexicalBlockFile(scope: !15, file: !16, discriminator: 0)
!20 = !DILocation(line: 34, column: 67, scope: !7)
!21 = !DILocation(line: 34, column: 4, scope: !7)
