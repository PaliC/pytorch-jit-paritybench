//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_convolution_41 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_convolution_41
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_convolution_41
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_convolution_41(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_13,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_14,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_15
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<82>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:22:33
	shl.b32 	%r41, %r1, 2;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_3];
	.loc	1 23 44                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:23:44
	mov.u32 	%r42, %tid.x;
	and.b32  	%r43, %r42, 1;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_4];
	shl.b32 	%r44, %r43, 1;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_5];
	.loc	1 23 23                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:23:23
	or.b32  	%r45, %r41, %r44;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_6];
	.loc	1 24 21                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:24:21
	setp.lt.s32 	%p2, %r45, 128;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_7];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_8];
	.loc	1 25 28                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:25:33
	shl.b32 	%r46, %r2, 6;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_9];
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_10];
	.loc	1 26 44                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:26:44
	bfe.u32 	%r47, %r42, 1, 6;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_11];
	.loc	1 26 23                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:26:23
	or.b32  	%r48, %r46, %r47;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_12];
	.loc	1 27 21                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:27:21
	setp.lt.s32 	%p17, %r48, 64;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_41_param_13];
	.loc	1 30 19                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:30:19
	shr.s32 	%r50, %r45, 31;
	shr.u32 	%r51, %r50, 27;
	add.s32 	%r52, %r45, %r51;
	.loc	1 29 19                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:29:19
	and.b32  	%r53, %r52, -32;
	sub.s32 	%r54, %r45, %r53;
	.loc	1 32 38                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:38
	shl.b32 	%r55, %r48, 5;
	.loc	1 32 35                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:35
	add.s32 	%r56, %r55, %r54;
	.loc	1 32 48                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:48
	shl.b32 	%r57, %r52, 6;
	and.b32  	%r58, %r57, -2048;
	.loc	1 32 43                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:43
	add.s32 	%r59, %r56, %r58;
	.loc	1 32 30                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:30
	mul.wide.s32 	%rd29, %r59, 4;
	add.s64 	%rd1, %rd15, %rd29;
	.loc	1 32 61                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:61
	and.pred  	%p1, %p2, %p17;
	.loc	1 32 53                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:33:30
	mul.wide.s32 	%rd30, %r54, 4;
	add.s64 	%rd2, %rd16, %rd30;
	.loc	1 33 35                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:34:30
	add.s64 	%rd3, %rd17, %rd30;
	.loc	1 34 35                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	.loc	1 35 31                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:35:31
	add.s64 	%rd4, %rd18, %rd30;
	.loc	1 35 36                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:36:31
	add.s64 	%rd5, %rd19, %rd30;
	.loc	1 36 36                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:36:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:39:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 40 26                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:40:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 32 53                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:53
	mov.b32 	%f7, %r4;
	.loc	1 33 35                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:33:35
	mov.b32 	%f8, %r6;
	.loc	1 37 18                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:37:18
	sub.f32 	%f9, %f7, %f8;
	.loc	1 32 53                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:53
	mov.b32 	%f10, %r3;
	.loc	1 33 35                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:33:35
	mov.b32 	%f11, %r5;
	.loc	1 37 18                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:37:18
	sub.f32 	%f12, %f10, %f11;
	.loc	1 36 36                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:36:36
	mov.b32 	%f13, %r12;
	mov.b32 	%f14, %r11;
	.loc	1 35 36                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:35:36
	mov.b32 	%f15, %r10;
	mov.b32 	%f16, %r9;
	.loc	1 26 44                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:26:44
	shl.b32 	%r60, %r42, 1;
	and.b32  	%r61, %r60, 62;
	.loc	1 26 23                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:26:23
	or.b32  	%r62, %r46, %r61;
	.loc	1 27 21                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:27:21
	setp.lt.s32 	%p18, %r62, 64;
	.loc	1 23 44                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:23:44
	bfe.u32 	%r63, %r42, 5, 2;
	.loc	1 23 23                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:23:23
	or.b32  	%r64, %r41, %r63;
	.loc	1 24 21                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:24:21
	setp.lt.s32 	%p19, %r64, 128;
	.loc	1 32 61                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:32:61
	and.pred  	%p8, %p19, %p18;
	.loc	1 42 18                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:42:18
	mov.b32 	%r15, %f5;
	mov.b32 	%r14, 1065353216;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f17, %r13;
	mov.b32 	%r18, %f6;
	// begin inline asm
	div.full.f32 %r16, %r14, %r18;
	// end inline asm
	mov.b32 	%f18, %r16;
	.loc	1 45 19                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:45:19
	mul.f32 	%f19, %f12, %f17;
	mul.f32 	%f20, %f9, %f18;
	.loc	1 47 20                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:47:20
	fma.rn.f32 	%f21, %f19, %f16, %f14;
	fma.rn.f32 	%f22, %f20, %f15, %f13;
	.loc	1 48 33                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:48:33
	shl.b32 	%r65, %r64, 6;
	.loc	1 48 30                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:48:30
	add.s32 	%r66, %r62, %r65;
	.loc	1 48 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:48:25
	mul.wide.s32 	%rd31, %r66, 4;
	add.s64 	%rd6, %rd20, %rd31;
	.loc	1 48 45                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:48:45
	shl.b32 	%r67, %r43, 7;
	or.b32  	%r68, %r67, %r47;
	shl.b32 	%r69, %r43, 3;
	mov.u32 	%r70, global_smem;
	add.s32 	%r71, %r70, %r69;
	shl.b32 	%r72, %r68, 2;
	add.s32 	%r19, %r71, %r72;
	mov.b32 	%r20, %f21;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	shr.u32 	%r73, %r67, 4;
	add.s32 	%r74, %r70, %r73;
	add.s32 	%r75, %r74, %r72;
	add.s32 	%r21, %r75, 260;
	mov.b32 	%r22, %f22;
	// begin inline asm
	@%p6 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r76, %r42, 3;
	and.b32  	%r77, %r76, 12;
	add.s32 	%r78, %r70, %r77;
	shl.b32 	%r79, %r42, 3;
	and.b32  	%r80, %r79, 1016;
	add.s32 	%r81, %r78, %r80;
	ld.shared.u32 	%r23, [%r81];
	ld.shared.u32 	%r24, [%r81+4];
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd6 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 49 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:49:25
	add.s64 	%rd7, %rd21, %rd29;
	.loc	1 49 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:49:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 50 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:50:25
	add.s64 	%rd8, %rd22, %rd29;
	.loc	1 50 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:50:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd8 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 51 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:51:25
	add.s64 	%rd9, %rd23, %rd29;
	.loc	1 51 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:51:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 52 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:52:25
	add.s64 	%rd10, %rd24, %rd29;
	.loc	1 52 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:52:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 53 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:53:25
	add.s64 	%rd11, %rd25, %rd29;
	.loc	1 53 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:53:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 54 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:54:25
	add.s64 	%rd12, %rd26, %rd29;
	.loc	1 54 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:54:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd12 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 55 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:55:25
	add.s64 	%rd13, %rd27, %rd29;
	.loc	1 55 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:55:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 56 25                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:56:25
	add.s64 	%rd14, %rd28, %rd29;
	.loc	1 56 55                         // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:56:55
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd14 + 0 ], { %r20, %r22 };
	// end inline asm
	.loc	1 56 4                          // cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py:56:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vk/cvkzgni6zqqakimhxdfsudt6xklgkm6r27vcpnyq5cud54n27wdn.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 107
.b8 122
.b8 103
.b8 110
.b8 105
.b8 54
.b8 122
.b8 113
.b8 113
.b8 97
.b8 107
.b8 105
.b8 109
.b8 104
.b8 120
.b8 100
.b8 102
.b8 115
.b8 117
.b8 100
.b8 116
.b8 54
.b8 120
.b8 107
.b8 108
.b8 103
.b8 107
.b8 109
.b8 54
.b8 114
.b8 50
.b8 55
.b8 118
.b8 99
.b8 112
.b8 110
.b8 121
.b8 113
.b8 53
.b8 99
.b8 117
.b8 100
.b8 53
.b8 52
.b8 110
.b8 50
.b8 55
.b8 119
.b8 100
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
