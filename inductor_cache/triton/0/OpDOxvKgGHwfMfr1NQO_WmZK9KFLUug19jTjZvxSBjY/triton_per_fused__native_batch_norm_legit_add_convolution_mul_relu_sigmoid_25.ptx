//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b32 	%r<113>;
	.reg .f32 	%f<80>;
	.reg .b64 	%rd<45>;
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0];
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1];
$L__tmp0:
	.loc	1 23 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:23:33
	shl.b32 	%r70, %r1, 3;
	ld.param.u64 	%rd32, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2];
	ld.param.u64 	%rd33, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3];
	.loc	1 24 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:24:44
	mov.u32 	%r71, %tid.x;
	ld.param.u64 	%rd34, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4];
	bfe.u32 	%r72, %r71, 4, 3;
	ld.param.u64 	%rd35, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5];
	and.b32  	%r73, %r71, 7;
	ld.param.u64 	%rd36, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6];
	.loc	1 24 23                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:24:23
	or.b32  	%r74, %r70, %r72;
	ld.param.u64 	%rd37, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7];
	or.b32  	%r75, %r70, %r73;
	ld.param.u64 	%rd38, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8];
	.loc	1 25 21                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:25:21
	setp.lt.s32 	%p1, %r74, 2048;
	ld.param.u64 	%rd39, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9];
	setp.lt.s32 	%p5, %r75, 2048;
	.loc	1 26 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:26:34
	shl.b32 	%r76, %r71, 2;
	and.b32  	%r77, %r76, 60;
	.loc	1 30 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:30:19
	bfe.s32 	%r78, %r1, 28, 1;
	shr.u32 	%r79, %r78, 23;
	add.s32 	%r80, %r74, %r79;
	and.b32  	%r81, %r80, -512;
	sub.s32 	%r82, %r74, %r81;
	add.s32 	%r83, %r75, %r79;
	and.b32  	%r84, %r83, -512;
	sub.s32 	%r85, %r75, %r84;
	.loc	1 32 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:34
	mul.wide.s32 	%rd40, %r74, 4;
	add.s64 	%rd1, %rd30, %rd40;
	mul.wide.s32 	%rd41, %r75, 4;
	add.s64 	%rd5, %rd30, %rd41;
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:30
	mul.wide.s32 	%rd42, %r82, 4;
	add.s64 	%rd6, %rd32, %rd42;
	mul.wide.s32 	%rd43, %r85, 4;
	add.s64 	%rd10, %rd32, %rd43;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 42                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:42
	shl.b32 	%r86, %r74, 6;
	.loc	1 34 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:39
	or.b32  	%r87, %r86, %r77;
	.loc	1 34 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:34
	mul.wide.s32 	%rd44, %r87, 4;
	add.s64 	%rd11, %rd31, %rd44;
	mov.b32 	%r16, 0;
	.loc	1 34 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:47
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd11 + 0 ];
	@!%p1 mov.u32 %r12, %r16;
	@!%p1 mov.u32 %r13, %r16;
	@!%p1 mov.u32 %r14, %r16;
	@!%p1 mov.u32 %r15, %r16;
	// end inline asm
	.loc	1 35 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:30
	add.s64 	%rd12, %rd33, %rd42;
	.loc	1 35 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:35
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:31
	add.s64 	%rd16, %rd34, %rd44;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p1 ld.global.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd16 + 0 ];
	@!%p1 mov.u32 %r24, %r16;
	@!%p1 mov.u32 %r25, %r16;
	@!%p1 mov.u32 %r26, %r16;
	@!%p1 mov.u32 %r27, %r16;
	// end inline asm
	.loc	1 37 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:31
	add.s64 	%rd17, %rd35, %rd40;
	.loc	1 37 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:36
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r34 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:31
	add.s64 	%rd21, %rd36, %rd40;
	.loc	1 38 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:36
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r36 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f5, %f3, %f4;
	.loc	1 48 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:48:20
	shl.b32 	%r88, %r72, 2;
	mov.u32 	%r89, global_smem;
	add.s32 	%r40, %r89, %r88;
	shl.b32 	%r90, %r73, 2;
	add.s32 	%r91, %r89, %r90;
	.loc	1 34 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:47
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r14;
	mov.b32 	%f9, %r15;
	.loc	1 40 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:40:18
	mov.b32 	%f10, %r23;
	add.f32 	%f11, %f10, %f9;
	add.f32 	%f12, %f10, %f8;
	add.f32 	%f13, %f10, %f7;
	add.f32 	%f14, %f10, %f6;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f14, %f13;
	add.f32 	%f16, %f12, %f15;
	add.f32 	%f17, %f11, %f16;
	selp.f32 	%f18, %f17, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f18;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f19, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f20;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f21, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f22;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f23, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f24;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f25, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
$L__tmp2:
	.loc	1 48 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:48:20
	mov.b32 	%r41, %f26;
	mov.pred 	%p33, -1;
	// begin inline asm
	@%p33 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r43, [%r91];
	mov.b32 	%r44, 1115684864;
	// begin inline asm
	div.full.f32 %r69, %r43, %r44;
	// end inline asm
	// begin inline asm
	div.full.f32 %r45, %r41, %r44;
	// end inline asm
	mov.b32 	%f27, %r45;
	.loc	1 49 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:49:19
	sub.f32 	%f28, %f11, %f27;
	sub.f32 	%f29, %f12, %f27;
	sub.f32 	%f30, %f13, %f27;
	sub.f32 	%f31, %f14, %f27;
	.loc	1 50 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:50:20
	mul.f32 	%f32, %f31, %f31;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f33, %f30, %f30, %f32;
	fma.rn.f32 	%f34, %f29, %f29, %f33;
	fma.rn.f32 	%f35, %f28, %f28, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f36;
	shfl.sync.bfly.b32	%r101, %r100, 8, 31, -1;
	mov.b32 	%f37, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f38;
	shfl.sync.bfly.b32	%r103, %r102, 4, 31, -1;
	mov.b32 	%f39, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f40;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f41, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f42;
	shfl.sync.bfly.b32	%r107, %r106, 1, 31, -1;
	mov.b32 	%f43, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
$L__tmp4:
	.loc	1 63 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:63:28
	bar.sync 	0;
	mov.b32 	%r49, %f44;
	// begin inline asm
	@%p33 st.shared.b32 [ %r40 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	mov.f32 	%f45, 0f00000000;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f46, %f45, %f5;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f47, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r52, %f47;
	mov.b32 	%r51, 1065353216;
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f48, %r50;
$L__tmp6:
	.loc	1 60 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:60:20
	ld.shared.u32 	%r54, [%r91];
	// begin inline asm
	div.full.f32 %r53, %r54, %r44;
	// end inline asm
	mov.b32 	%f49, %r53;
	// begin inline asm
	div.full.f32 %r56, %r49, %r44;
	// end inline asm
	mov.b32 	%f50, %r56;
	.loc	1 62 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:62:20
	add.f32 	%f51, %f49, 0f3727C5AC;
	add.f32 	%f52, %f50, 0f3727C5AC;
	.loc	1 63 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:63:28
	rsqrt.approx.ftz.f32 	%f53, %f51;
	rsqrt.approx.ftz.f32 	%f54, %f52;
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	mov.b32 	%f55, %r6;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	mov.b32 	%f56, %r11;
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f57, %f55, %f56;
	.loc	1 64 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:64:20
	mul.f32 	%f58, %f28, %f54;
	mul.f32 	%f59, %f29, %f54;
	mul.f32 	%f60, %f30, %f54;
	mul.f32 	%f61, %f31, %f54;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	mov.b32 	%f62, %r27;
	mov.b32 	%f63, %r26;
	mov.b32 	%f64, %r25;
	mov.b32 	%f65, %r24;
	.loc	1 54 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:54:20
	mov.b32 	%f66, %r35;
	sub.f32 	%f67, %f65, %f66;
	sub.f32 	%f68, %f64, %f66;
	sub.f32 	%f69, %f63, %f66;
	sub.f32 	%f70, %f62, %f66;
	.loc	1 55 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:55:20
	mov.b32 	%f71, %r39;
	mul.f32 	%f72, %f70, %f71;
	mul.f32 	%f73, %f69, %f71;
	mul.f32 	%f74, %f68, %f71;
	mul.f32 	%f75, %f67, %f71;
	.loc	1 65 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:65:20
	fma.rn.f32 	%f76, %f75, %f48, %f61;
	fma.rn.f32 	%f77, %f74, %f48, %f60;
	fma.rn.f32 	%f78, %f73, %f48, %f59;
	fma.rn.f32 	%f79, %f72, %f48, %f58;
$L__tmp7:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p40, %f79, 0f00000000;
	setp.lt.f32 	%p41, %f78, 0f00000000;
	setp.lt.f32 	%p42, %f77, 0f00000000;
	setp.lt.f32 	%p43, %f76, 0f00000000;
$L__tmp8:
	.loc	1 68 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:68:4
	bar.sync 	0;
	.loc	1 69 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:69:39
	and.b32  	%r108, %r71, 120;
	setp.eq.s32 	%p44, %r108, 0;
	mov.b32 	%r59, %f57;
	and.pred  	%p35, %p44, %p5;
	// begin inline asm
	@%p35 st.global.b32 [ %rd5 + 0 ], { %r59 };
	// end inline asm
	.loc	1 70 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:70:47
	mov.b32 	%r60, %f14;
	mov.b32 	%r61, %f13;
	mov.b32 	%r62, %f12;
	mov.b32 	%r63, %f11;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	.loc	1 71 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:25
	add.s64 	%rd27, %rd38, %rd44;
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	mov.b32 	%r109, %f79;
	mov.b32 	%r110, %f78;
	mov.b32 	%r111, %f77;
	mov.b32 	%r112, %f76;
$L__tmp9:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r64, 0, %r112, %p43;
	selp.b32 	%r65, 0, %r111, %p42;
	selp.b32 	%r66, 0, %r110, %p41;
	selp.b32 	%r67, 0, %r109, %p40;
$L__tmp10:
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd27 + 0 ], { %r64, %r65, %r66, %r67 };
	// end inline asm
	.loc	1 72 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:25
	add.s64 	%rd28, %rd39, %rd41;
	.loc	1 72 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:37
	mov.b32 	%r68, %f53;
	// begin inline asm
	@%p35 st.global.b32 [ %rd28 + 0 ], { %r68 };
	// end inline asm
	.loc	1 73 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:25
	add.s64 	%rd29, %rd37, %rd41;
	.loc	1 73 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:37
	// begin inline asm
	@%p35 st.global.b32 [ %rd29 + 0 ], { %r69 };
	// end inline asm
	.loc	1 73 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 294                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 52
.b8 100
.b8 51
.b8 103
.b8 101
.b8 114
.b8 104
.b8 104
.b8 51
.b8 101
.b8 120
.b8 112
.b8 101
.b8 106
.b8 103
.b8 101
.b8 120
.b8 110
.b8 114
.b8 119
.b8 50
.b8 51
.b8 97
.b8 50
.b8 51
.b8 101
.b8 100
.b8 119
.b8 99
.b8 108
.b8 119
.b8 99
.b8 113
.b8 52
.b8 110
.b8 117
.b8 117
.b8 101
.b8 119
.b8 50
.b8 99
.b8 121
.b8 117
.b8 54
.b8 52
.b8 54
.b8 105
.b8 105
.b8 120
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
