#loc = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":19:0)
#loc1 = loc(unknown)
#loc26 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":38:24)
#loc39 = loc(callsite(#loc1 at #loc26))
module {
  tt.func public @triton_per_fused_mean_mul_sigmoid_34(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<128x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<128x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<16896> : tensor<128x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1056> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<1056> : tensor<128x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4224> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_4 : tensor<128x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_4 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_3 : tensor<1x16xi32> loc(#loc12)
    %12 = tt.broadcast %9 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x16xi32> -> tensor<128x16xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<128x16xi32> loc(#loc13)
    %15 = arith.muli %10, %cst_2 : tensor<128x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<128x1xi32> -> tensor<128x16xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<128x16xi32> loc(#loc15)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x16x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<128x16x!tt.ptr<f32>>, tensor<128x16xi32> loc(#loc16)
    %20 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x16xi1> loc(#loc17)
    %21 = tt.load %19, %20, %cst_1 : tensor<128x16x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.subf %cst_1, %21 : tensor<128x16xf32> loc(#loc34)
    %23 = math.exp %22 : tensor<128x16xf32> loc(#loc35)
    %24 = arith.addf %23, %cst : tensor<128x16xf32> loc(#loc36)
    %25 = arith.divf %cst, %24 : tensor<128x16xf32> loc(#loc37)
    %26 = arith.mulf %21, %25 : tensor<128x16xf32> loc(#loc23)
    %27 = arith.select %20, %26, %cst_1 : tensor<128x16xi1>, tensor<128x16xf32> loc(#loc24)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc26)), %arg5: f32 loc(callsite(#loc1 at #loc26))):
      %33 = arith.addf %arg4, %arg5 : f32 loc(#loc41)
      tt.reduce.return %33 : f32 loc(#loc38)
    }) : (tensor<128x16xf32>) -> tensor<128xf32> loc(#loc38)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc28)
    %30 = arith.divf %29, %cst_0 : tensor<128x1xf32> loc(#loc29)
    gpu.barrier loc(#loc30)
    %31 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc31)
    %32 = tt.addptr %31, %5 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc31)
    tt.store %32, %30, %6 : tensor<128x1x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":23:28)
#loc3 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":23:33)
#loc4 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":24:36)
#loc5 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":24:44)
#loc6 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":24:23)
#loc7 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":25:21)
#loc8 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":26:26)
#loc9 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":26:34)
#loc10 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":30:19)
#loc11 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":31:19)
#loc12 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:40)
#loc13 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:35)
#loc14 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:51)
#loc15 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:45)
#loc16 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:30)
#loc17 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":33:56)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc19 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":34:22)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc23 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":35:18)
#loc24 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":37:33)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":38:27)
#loc29 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":40:18)
#loc30 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":41:4)
#loc31 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":42:28)
#loc32 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":42:39)
#loc33 = loc("inductor_cache/u2/cu26edmvu2myd5fjn5zabheno3j35ksem665wd3kanw4gaxkwcrq.py":42:4)
#loc34 = loc(callsite(#loc18 at #loc19))
#loc35 = loc(callsite(#loc20 at #loc19))
#loc36 = loc(callsite(#loc21 at #loc19))
#loc37 = loc(callsite(#loc22 at #loc19))
#loc38 = loc(callsite(#loc25 at #loc26))
#loc40 = loc(callsite(#loc27 at #loc25))
#loc41 = loc(callsite(#loc40 at #loc26))
