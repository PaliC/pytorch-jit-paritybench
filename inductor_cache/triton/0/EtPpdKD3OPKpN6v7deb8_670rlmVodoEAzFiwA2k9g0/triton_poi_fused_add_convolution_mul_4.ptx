//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mul_4 // -- Begin function triton_poi_fused_add_convolution_mul_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_mul_4
.visible .entry triton_poi_fused_add_convolution_mul_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_5,
	.param .u32 triton_poi_fused_add_convolution_mul_4_param_6,
	.param .u32 triton_poi_fused_add_convolution_mul_4_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_convolution_mul_4_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_mul_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:22:33
	shl.b32 	%r23, %r1, 4;
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_mul_4_param_2];
	.loc	1 23 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:23:44
	mov.u32 	%r24, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_mul_4_param_3];
	ld.param.u64 	%rd12, [triton_poi_fused_add_convolution_mul_4_param_4];
	bfe.u32 	%r26, %r24, 3, 4;
	ld.param.u64 	%rd13, [triton_poi_fused_add_convolution_mul_4_param_5];
	shl.b32 	%r27, %r24, 1;
	and.b32  	%r28, %r27, 14;
	.loc	1 23 23                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:23:23
	or.b32  	%r29, %r23, %r26;
	or.b32  	%r30, %r23, %r28;
	.loc	1 25 28                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:25:33
	shl.b32 	%r31, %r2, 4;
	.loc	1 26 23                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:26:23
	or.b32  	%r32, %r31, %r28;
	or.b32  	%r33, %r31, %r26;
	.loc	1 27 21                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:27:21
	setp.lt.s32 	%p1, %r32, 16;
	setp.lt.s32 	%p4, %r33, 16;
	.loc	1 31 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:31:19
	bfe.s32 	%r34, %r1, 27, 1;
	shr.u32 	%r35, %r34, 23;
	add.s32 	%r36, %r30, %r35;
	shr.s32 	%r37, %r36, 9;
	.loc	1 30 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:30:19
	and.b32  	%r38, %r36, -512;
	sub.s32 	%r39, %r30, %r38;
	.loc	1 32 38                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:38
	shl.b32 	%r40, %r29, 4;
	.loc	1 32 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:35
	add.s32 	%r41, %r32, %r40;
	.loc	1 32 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:30
	mul.wide.s32 	%rd14, %r41, 4;
	add.s64 	%rd1, %rd8, %rd14;
	.loc	1 32 43                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r42, %r24, 5;
	and.b32  	%r43, %r42, 224;
	or.b32  	%r44, %r43, %r26;
	and.b32  	%r45, %r27, 254;
	shr.u32 	%r46, %r43, 1;
	mov.u32 	%r47, global_smem;
	add.s32 	%r48, %r47, %r46;
	shl.b32 	%r49, %r44, 2;
	add.s32 	%r5, %r48, %r49;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	or.b32  	%r50, %r43, 16;
	shr.u32 	%r51, %r50, 4;
	shl.b32 	%r52, %r51, 3;
	add.s32 	%r53, %r47, %r52;
	add.s32 	%r54, %r53, %r49;
	add.s32 	%r7, %r54, 64;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r55, %r27, 4, 4;
	and.b32  	%r56, %r24, 127;
	add.s32 	%r57, %r55, %r56;
	shl.b32 	%r58, %r57, 3;
	add.s32 	%r59, %r47, %r58;
	ld.shared.v2.f32 	{%f1, %f2}, [%r59];
	.loc	1 33 39                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:39
	shl.b32 	%r60, %r33, 9;
	.loc	1 33 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:35
	add.s32 	%r61, %r60, %r39;
	.loc	1 33 49                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:49
	shl.b32 	%r62, %r37, 13;
	.loc	1 33 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:44
	add.s32 	%r63, %r61, %r62;
	.loc	1 33 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:30
	mul.wide.s32 	%rd15, %r63, 4;
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 33 54                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:54
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 34 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:34:30
	add.s64 	%rd3, %rd10, %rd15;
	.loc	1 34 54                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:34:54
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r12;
	.loc	1 35 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:35:30
	mul.wide.s32 	%rd16, %r39, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 35 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:35:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r14;
	.loc	1 36 36                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:36
	shl.b32 	%r64, %r37, 2;
	.loc	1 36 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:30
	mul.wide.s32 	%rd17, %r64, 4;
	add.s64 	%rd18, %rd12, %rd17;
	add.s64 	%rd5, %rd18, 12;
	.loc	1 36 41                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:41
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r16 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r16;
	.loc	1 37 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:37:18
	add.f32 	%f11, %f5, %f7;
	add.f32 	%f12, %f6, %f8;
	.loc	1 39 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:39:18
	fma.rn.f32 	%f13, %f11, %f9, %f3;
	fma.rn.f32 	%f14, %f12, %f10, %f4;
	.loc	1 40 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:40:18
	add.f32 	%f15, %f1, %f13;
	add.f32 	%f16, %f2, %f14;
	.loc	1 41 25                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:25
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 41 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:44
	bar.sync 	0;
	shr.u32 	%r65, %r43, 2;
	add.s32 	%r66, %r47, %r65;
	add.s32 	%r17, %r66, %r49;
	mov.b32 	%r18, %f15;
	// begin inline asm
	@%p2 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	shl.b32 	%r67, %r51, 2;
	sub.s32 	%r68, %r54, %r67;
	add.s32 	%r19, %r68, 64;
	mov.b32 	%r20, %f16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r69, %r55, 2;
	add.s32 	%r70, %r47, %r69;
	shl.b32 	%r71, %r45, 2;
	add.s32 	%r72, %r70, %r71;
	ld.shared.u32 	%r21, [%r72];
	ld.shared.u32 	%r22, [%r72+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r21, %r22 };
	// end inline asm
	.loc	1 41 4                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ev/cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 118
.b8 98
.b8 99
.b8 118
.b8 98
.b8 111
.b8 50
.b8 112
.b8 121
.b8 103
.b8 112
.b8 104
.b8 111
.b8 122
.b8 121
.b8 113
.b8 99
.b8 50
.b8 109
.b8 51
.b8 120
.b8 104
.b8 117
.b8 97
.b8 55
.b8 98
.b8 122
.b8 119
.b8 51
.b8 118
.b8 119
.b8 114
.b8 115
.b8 108
.b8 122
.b8 121
.b8 97
.b8 115
.b8 52
.b8 50
.b8 50
.b8 119
.b8 117
.b8 53
.b8 110
.b8 103
.b8 111
.b8 104
.b8 50
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
