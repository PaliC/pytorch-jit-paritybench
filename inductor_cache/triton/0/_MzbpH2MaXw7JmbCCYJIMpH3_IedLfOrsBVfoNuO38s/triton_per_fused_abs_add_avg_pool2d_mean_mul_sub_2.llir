; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_abs_add_avg_pool2d_mean_mul_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = shl i32 %6, 2, !dbg !11
  %8 = and i32 %7, 60, !dbg !11
  %9 = zext nneg i32 %8 to i64, !dbg !12
  %10 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !12
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #3, !dbg !13
  %12 = or disjoint i32 %8, 1, !dbg !14
  %13 = zext nneg i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #3, !dbg !16
  %16 = or disjoint i32 %8, 2, !dbg !17
  %17 = zext nneg i32 %16 to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !18
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !19
  %20 = or disjoint i32 %8, 3, !dbg !20
  %21 = zext nneg i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !21
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #3, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %9, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !25
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !26
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !27
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !28
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %21, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !30
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #3, !dbg !31
  %33 = bitcast i32 %32 to float, !dbg !31
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !32
  %35 = bitcast i32 %34 to float, !dbg !32
  %36 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !13
  %37 = insertelement <2 x i32> %36, i32 %25, i64 1, !dbg !13
  %38 = bitcast <2 x i32> %37 to <2 x float>, !dbg !13
  %39 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !16
  %40 = insertelement <2 x i32> %39, i32 %27, i64 1, !dbg !16
  %41 = bitcast <2 x i32> %40 to <2 x float>, !dbg !16
  %42 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !19
  %43 = insertelement <2 x i32> %42, i32 %29, i64 1, !dbg !19
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !19
  %45 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !22
  %46 = insertelement <2 x i32> %45, i32 %31, i64 1, !dbg !22
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !22
  %48 = fadd <2 x float> %38, %41, !dbg !33
  %49 = fadd <2 x float> %48, %44, !dbg !34
  %50 = fadd <2 x float> %49, %47, !dbg !35
  %51 = fmul <2 x float> %50, splat (float 2.500000e-01), !dbg !36
  %shift = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %52 = fsub <2 x float> %51, %shift, !dbg !37
  %53 = extractelement <2 x float> %52, i64 0, !dbg !37
  %54 = tail call float @llvm.fabs.f32(float %53), !dbg !38
  %55 = bitcast float %54 to i32, !dbg !39
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 8, i32 31), !dbg !39
  %57 = bitcast i32 %56 to float, !dbg !39
  %58 = fadd float %54, %57, !dbg !43
  %59 = bitcast float %58 to i32, !dbg !39
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 4, i32 31), !dbg !39
  %61 = bitcast i32 %60 to float, !dbg !39
  %62 = fadd float %58, %61, !dbg !43
  %63 = bitcast float %62 to i32, !dbg !39
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 2, i32 31), !dbg !39
  %65 = bitcast i32 %64 to float, !dbg !39
  %66 = fadd float %62, %65, !dbg !43
  %67 = bitcast float %66 to i32, !dbg !39
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 1, i32 31), !dbg !39
  %69 = bitcast i32 %68 to float, !dbg !39
  %70 = fadd float %66, %69, !dbg !43
  %71 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %33, float 2.560000e+02) #3, !dbg !45
  %72 = fadd float %71, 0.000000e+00, !dbg !46
  %73 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float 6.400000e+01) #3, !dbg !47
  %74 = fmul float %73, 5.000000e-01, !dbg !48
  %75 = fadd float %72, %74, !dbg !49
  %76 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %70, float 1.600000e+01) #3, !dbg !50
  %77 = fmul float %76, 2.500000e-01, !dbg !51
  %78 = fadd float %75, %77, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %79 = and i32 %6, 63, !dbg !54
  %80 = icmp eq i32 %79, 0, !dbg !54
  %81 = bitcast float %78 to i32, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %0, i1 %80) #3, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chc6egha5dru37kbrxwi2357xfe2ezr47qi66eammieqjctw4oln.py", directory: "inductor_cache/hc")
!4 = !{ptr @triton_per_fused_abs_add_avg_pool2d_mean_mul_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_add_avg_pool2d_mean_mul_sub_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_add_avg_pool2d_mean_mul_sub_2", linkageName: "triton_per_fused_abs_add_avg_pool2d_mean_mul_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 32, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 37, scope: !7)
!14 = !DILocation(line: 31, column: 34, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 41, scope: !7)
!17 = !DILocation(line: 32, column: 34, scope: !7)
!18 = !DILocation(line: 32, column: 30, scope: !7)
!19 = !DILocation(line: 32, column: 41, scope: !7)
!20 = !DILocation(line: 33, column: 34, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 37, scope: !7)
!25 = !DILocation(line: 35, column: 31, scope: !7)
!26 = !DILocation(line: 35, column: 42, scope: !7)
!27 = !DILocation(line: 36, column: 31, scope: !7)
!28 = !DILocation(line: 36, column: 42, scope: !7)
!29 = !DILocation(line: 37, column: 31, scope: !7)
!30 = !DILocation(line: 37, column: 42, scope: !7)
!31 = !DILocation(line: 38, column: 20, scope: !7)
!32 = !DILocation(line: 40, column: 20, scope: !7)
!33 = !DILocation(line: 42, column: 18, scope: !7)
!34 = !DILocation(line: 43, column: 18, scope: !7)
!35 = !DILocation(line: 44, column: 18, scope: !7)
!36 = !DILocation(line: 46, column: 18, scope: !7)
!37 = !DILocation(line: 51, column: 19, scope: !7)
!38 = !DILocation(line: 52, column: 24, scope: !7)
!39 = !DILocation(line: 267, column: 36, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!42 = !DILocation(line: 54, column: 26, scope: !7)
!43 = !DILocation(line: 256, column: 15, scope: !44, inlinedAt: !42)
!44 = distinct !DILexicalBlockFile(scope: !40, file: !41, discriminator: 0)
!45 = !DILocation(line: 56, column: 20, scope: !7)
!46 = !DILocation(line: 60, column: 20, scope: !7)
!47 = !DILocation(line: 62, column: 20, scope: !7)
!48 = !DILocation(line: 64, column: 20, scope: !7)
!49 = !DILocation(line: 65, column: 20, scope: !7)
!50 = !DILocation(line: 67, column: 20, scope: !7)
!51 = !DILocation(line: 68, column: 20, scope: !7)
!52 = !DILocation(line: 69, column: 20, scope: !7)
!53 = !DILocation(line: 70, column: 4, scope: !7)
!54 = !DILocation(line: 71, column: 71, scope: !7)
!55 = !DILocation(line: 71, column: 4, scope: !7)
