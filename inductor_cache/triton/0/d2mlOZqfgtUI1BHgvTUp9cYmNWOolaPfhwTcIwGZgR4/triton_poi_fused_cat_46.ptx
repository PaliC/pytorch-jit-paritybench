//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_46 // -- Begin function triton_poi_fused_cat_46
                                        // @triton_poi_fused_cat_46
.visible .entry triton_poi_fused_cat_46(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_46_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_46_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_46_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_46_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_46_param_4,
	.param .u32 triton_poi_fused_cat_46_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_cat_46_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_cat_46_param_1];
$L__tmp0:
	.loc	1 21 28                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:21:33
	shl.b32 	%r22, %r1, 9;
	ld.param.u64 	%rd8, [triton_poi_fused_cat_46_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_46_param_3];
	.loc	1 22 36                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 2;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_46_param_4];
	and.b32  	%r25, %r24, 508;
	.loc	1 22 23                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:22:23
	or.b32  	%r26, %r22, %r25;
	.loc	1 26 19                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:26:19
	mul.hi.s32 	%r28, %r26, 715827883;
	shr.u32 	%r29, %r28, 31;
	shr.s32 	%r30, %r28, 11;
	add.s32 	%r31, %r30, %r29;
	.loc	1 25 19                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:25:19
	mul.lo.s32 	%r32, %r31, 12288;
	sub.s32 	%r33, %r26, %r32;
	.loc	1 27 30                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:27:30
	mul.wide.s32 	%rd11, %r26, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 27 35                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:28:30
	mad.lo.s32 	%r34, %r31, 258048, %r33;
	.loc	1 28 25                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:28:25
	mul.wide.s32 	%rd12, %r34, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 28 48                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:28:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r6, %r7, %r8, %r9 };
	// end inline asm
	.loc	1 29 30                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:29:30
	add.s32 	%r35, %r34, %r32;
	.loc	1 29 25                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:29:25
	mul.wide.s32 	%rd13, %r35, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 29 48                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:29:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r6, %r7, %r8, %r9 };
	// end inline asm
	.loc	1 30 30                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:30:30
	add.s32 	%r36, %r35, %r32;
	.loc	1 30 25                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:30:25
	mul.wide.s32 	%rd14, %r36, 4;
	add.s64 	%rd4, %rd9, %rd14;
	.loc	1 30 48                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:30:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd4 + 0 ], { %r6, %r7, %r8, %r9 };
	// end inline asm
	.loc	1 31 30                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:31:30
	add.s32 	%r37, %r36, %r32;
	.loc	1 31 25                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:31:25
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 31 48                         // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:31:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r6, %r7, %r8, %r9 };
	// end inline asm
	.loc	1 31 4                          // c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py:31:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/64/c64adtmfzfjeucdknxas7a2g3brg375ksm2m73fdg7wtwl6fh6cd.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 52
.b8 97
.b8 100
.b8 116
.b8 109
.b8 102
.b8 122
.b8 102
.b8 106
.b8 101
.b8 117
.b8 99
.b8 100
.b8 107
.b8 110
.b8 120
.b8 97
.b8 115
.b8 55
.b8 97
.b8 50
.b8 103
.b8 51
.b8 98
.b8 114
.b8 103
.b8 51
.b8 55
.b8 53
.b8 107
.b8 115
.b8 109
.b8 50
.b8 109
.b8 55
.b8 51
.b8 102
.b8 100
.b8 103
.b8 55
.b8 119
.b8 116
.b8 119
.b8 108
.b8 54
.b8 102
.b8 104
.b8 54
.b8 99
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
