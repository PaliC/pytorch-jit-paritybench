; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_38(ptr addrspace(1) nocapture readnone %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 10, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 2, !dbg !12
  %12 = and i32 %11, 508, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = or disjoint i32 %13, 512, !dbg !13
  %15 = srem i32 %13, 8, !dbg !14
  %16 = sdiv i32 %13, 64, !dbg !15
  %17 = sdiv i32 %14, 64, !dbg !15
  %18 = sext i32 %16 to i64, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !16
  %20 = sext i32 %17 to i64, !dbg !16
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !16
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %23 = bitcast i32 %22 to float, !dbg !17
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %25 = bitcast i32 %24 to float, !dbg !17
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %27 = bitcast i32 %26 to float, !dbg !17
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %29 = bitcast i32 %28 to float, !dbg !17
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !17
  %31 = bitcast i32 %30 to float, !dbg !17
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !17
  %33 = bitcast i32 %32 to float, !dbg !17
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !17
  %35 = bitcast i32 %34 to float, !dbg !17
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !17
  %37 = bitcast i32 %36 to float, !dbg !17
  %38 = sext i32 %15 to i64, !dbg !18
  %39 = getelementptr float, ptr addrspace(1) %4, i64 %38, !dbg !18
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 true) #1, !dbg !19
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !19
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !19
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !19
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !19
  %45 = bitcast i32 %41 to float, !dbg !19
  %46 = bitcast i32 %42 to float, !dbg !19
  %47 = bitcast i32 %43 to float, !dbg !19
  %48 = bitcast i32 %44 to float, !dbg !19
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %39, i1 true) #1, !dbg !19
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !19
  %51 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !19
  %52 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !19
  %53 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !19
  %54 = bitcast i32 %50 to float, !dbg !19
  %55 = bitcast i32 %51 to float, !dbg !19
  %56 = bitcast i32 %52 to float, !dbg !19
  %57 = bitcast i32 %53 to float, !dbg !19
  %58 = fsub float %23, %23, !dbg !20
  %59 = fsub float %25, %25, !dbg !20
  %60 = fsub float %27, %27, !dbg !20
  %61 = fsub float %29, %29, !dbg !20
  %62 = fsub float %31, %31, !dbg !20
  %63 = fsub float %33, %33, !dbg !20
  %64 = fsub float %35, %35, !dbg !20
  %65 = fsub float %37, %37, !dbg !20
  %66 = fmul float %58, %45, !dbg !21
  %67 = fmul float %59, %46, !dbg !21
  %68 = fmul float %60, %47, !dbg !21
  %69 = fmul float %61, %48, !dbg !21
  %70 = fmul float %62, %54, !dbg !21
  %71 = fmul float %63, %55, !dbg !21
  %72 = fmul float %64, %56, !dbg !21
  %73 = fmul float %65, %57, !dbg !21
  %74 = fadd float %66, %23, !dbg !22
  %75 = fadd float %67, %25, !dbg !22
  %76 = fadd float %68, %27, !dbg !22
  %77 = fadd float %69, %29, !dbg !22
  %78 = fadd float %70, %31, !dbg !22
  %79 = fadd float %71, %33, !dbg !22
  %80 = fadd float %72, %35, !dbg !22
  %81 = fadd float %73, %37, !dbg !22
  %82 = sext i32 %13 to i64, !dbg !23
  %83 = getelementptr float, ptr addrspace(1) %5, i64 %82, !dbg !23
  %84 = sext i32 %14 to i64, !dbg !23
  %85 = getelementptr float, ptr addrspace(1) %5, i64 %84, !dbg !23
  %86 = bitcast float %74 to i32, !dbg !24
  %87 = bitcast float %75 to i32, !dbg !24
  %88 = bitcast float %76 to i32, !dbg !24
  %89 = bitcast float %77 to i32, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %86, i32 %87, i32 %88, i32 %89, ptr addrspace(1) %83, i1 true) #1, !dbg !24
  %90 = bitcast float %78 to i32, !dbg !24
  %91 = bitcast float %79 to i32, !dbg !24
  %92 = bitcast float %80 to i32, !dbg !24
  %93 = bitcast float %81 to i32, !dbg !24
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %90, i32 %91, i32 %92, i32 %93, ptr addrspace(1) %85, i1 true) #1, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxdoaxgoaxfuhi7v35czqu7kkkwb25p6argdlbfzf3tlwe3vphh5.py", directory: "inductor_cache/xd")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_38, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_38, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_38", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_38", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 30, column: 30, scope: !7)
!17 = !DILocation(line: 30, column: 35, scope: !7)
!18 = !DILocation(line: 32, column: 31, scope: !7)
!19 = !DILocation(line: 32, column: 36, scope: !7)
!20 = !DILocation(line: 43, column: 19, scope: !7)
!21 = !DILocation(line: 44, column: 20, scope: !7)
!22 = !DILocation(line: 45, column: 19, scope: !7)
!23 = !DILocation(line: 46, column: 25, scope: !7)
!24 = !DILocation(line: 46, column: 37, scope: !7)
!25 = !DILocation(line: 46, column: 4, scope: !7)
