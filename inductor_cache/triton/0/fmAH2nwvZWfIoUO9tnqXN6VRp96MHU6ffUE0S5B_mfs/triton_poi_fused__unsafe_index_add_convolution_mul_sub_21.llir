; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_convolution_mul_sub_21(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) nocapture readnone %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, ptr addrspace(1) %14, i32 %15) local_unnamed_addr !dbg !7 {
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %18 = shl i32 %17, 7, !dbg !11
  %19 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %20 = and i32 %19, 127, !dbg !12
  %21 = or disjoint i32 %18, %20, !dbg !13
  %22 = icmp slt i32 %21, 1024, !dbg !14
  %23 = srem i32 %21, 256, !dbg !15
  %24 = sext i32 %21 to i64, !dbg !16
  %25 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !16
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %22) #1, !dbg !17
  %27 = bitcast i32 %26 to float, !dbg !17
  %28 = sext i32 %23 to i64, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %6, i64 %28, !dbg !18
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %22) #1, !dbg !19
  %31 = bitcast i32 %30 to float, !dbg !19
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #1, !dbg !20
  %33 = bitcast i32 %32 to float, !dbg !20
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #1, !dbg !21
  %35 = bitcast i32 %34 to float, !dbg !21
  %36 = getelementptr float, ptr addrspace(1) %10, i64 %24, !dbg !22
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %22) #1, !dbg !23
  %38 = bitcast i32 %37 to float, !dbg !23
  %39 = getelementptr float, ptr addrspace(1) %11, i64 %28, !dbg !24
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %22) #1, !dbg !25
  %41 = bitcast i32 %40 to float, !dbg !25
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %22) #1, !dbg !27
  %44 = bitcast i32 %43 to float, !dbg !27
  %45 = getelementptr float, ptr addrspace(1) %12, i64 %28, !dbg !28
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %22) #1, !dbg !29
  %47 = bitcast i32 %46 to float, !dbg !29
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !30
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %22) #1, !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = getelementptr float, ptr addrspace(1) %13, i64 %28, !dbg !32
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %22) #1, !dbg !33
  %53 = bitcast i32 %52 to float, !dbg !33
  %54 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !34
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %22) #1, !dbg !35
  %56 = bitcast i32 %55 to float, !dbg !35
  %57 = getelementptr float, ptr addrspace(1) %14, i64 %28, !dbg !36
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %22) #1, !dbg !37
  %59 = bitcast i32 %58 to float, !dbg !37
  %60 = fadd float %27, %31, !dbg !38
  %61 = fsub float %60, %60, !dbg !39
  %62 = fmul float %61, %33, !dbg !40
  %63 = fadd float %60, %62, !dbg !41
  %64 = fsub float %63, %63, !dbg !42
  %65 = fmul float %64, %35, !dbg !43
  %66 = fadd float %63, %65, !dbg !44
  %67 = fadd float %38, %41, !dbg !45
  %68 = fadd float %67, %66, !dbg !46
  %69 = fsub float %68, %68, !dbg !47
  %70 = fmul float %69, %33, !dbg !48
  %71 = fadd float %68, %70, !dbg !49
  %72 = fsub float %71, %71, !dbg !50
  %73 = fmul float %72, %35, !dbg !51
  %74 = fadd float %71, %73, !dbg !52
  %75 = fadd float %44, %47, !dbg !53
  %76 = fadd float %75, %74, !dbg !54
  %77 = fsub float %76, %76, !dbg !55
  %78 = fmul float %77, %33, !dbg !56
  %79 = fadd float %76, %78, !dbg !57
  %80 = fsub float %79, %79, !dbg !58
  %81 = fmul float %80, %35, !dbg !59
  %82 = fadd float %79, %81, !dbg !60
  %83 = fadd float %50, %53, !dbg !61
  %84 = fadd float %83, %82, !dbg !62
  %85 = fsub float %84, %84, !dbg !63
  %86 = fmul float %85, %33, !dbg !64
  %87 = fadd float %84, %86, !dbg !65
  %88 = fsub float %87, %87, !dbg !66
  %89 = fmul float %88, %35, !dbg !67
  %90 = fadd float %87, %89, !dbg !68
  %91 = fadd float %56, %59, !dbg !69
  %92 = fadd float %91, %90, !dbg !70
  %93 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !71
  %94 = bitcast float %68 to i32, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %94, ptr addrspace(1) %93, i1 %22) #1, !dbg !72
  %95 = bitcast float %76 to i32, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %95, ptr addrspace(1) %42, i1 %22) #1, !dbg !73
  %96 = bitcast float %84 to i32, !dbg !74
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %48, i1 %22) #1, !dbg !74
  %97 = bitcast float %92 to i32, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %54, i1 %22) #1, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmk7bqaqoiiszqn6rqwu42wmtbt53ehn4jvimbiey4lfcqzl3mfl.py", directory: "inductor_cache/mk")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_mul_sub_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_mul_sub_21, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_convolution_mul_sub_21", linkageName: "triton_poi_fused__unsafe_index_add_convolution_mul_sub_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 30, scope: !7)
!17 = !DILocation(line: 28, column: 35, scope: !7)
!18 = !DILocation(line: 29, column: 30, scope: !7)
!19 = !DILocation(line: 29, column: 35, scope: !7)
!20 = !DILocation(line: 32, column: 20, scope: !7)
!21 = !DILocation(line: 34, column: 20, scope: !7)
!22 = !DILocation(line: 36, column: 31, scope: !7)
!23 = !DILocation(line: 36, column: 36, scope: !7)
!24 = !DILocation(line: 37, column: 31, scope: !7)
!25 = !DILocation(line: 37, column: 36, scope: !7)
!26 = !DILocation(line: 38, column: 35, scope: !7)
!27 = !DILocation(line: 38, column: 40, scope: !7)
!28 = !DILocation(line: 39, column: 31, scope: !7)
!29 = !DILocation(line: 39, column: 36, scope: !7)
!30 = !DILocation(line: 40, column: 35, scope: !7)
!31 = !DILocation(line: 40, column: 40, scope: !7)
!32 = !DILocation(line: 41, column: 31, scope: !7)
!33 = !DILocation(line: 41, column: 36, scope: !7)
!34 = !DILocation(line: 42, column: 35, scope: !7)
!35 = !DILocation(line: 42, column: 40, scope: !7)
!36 = !DILocation(line: 43, column: 32, scope: !7)
!37 = !DILocation(line: 43, column: 37, scope: !7)
!38 = !DILocation(line: 48, column: 18, scope: !7)
!39 = !DILocation(line: 52, column: 19, scope: !7)
!40 = !DILocation(line: 53, column: 20, scope: !7)
!41 = !DILocation(line: 54, column: 19, scope: !7)
!42 = !DILocation(line: 55, column: 20, scope: !7)
!43 = !DILocation(line: 56, column: 20, scope: !7)
!44 = !DILocation(line: 57, column: 20, scope: !7)
!45 = !DILocation(line: 58, column: 20, scope: !7)
!46 = !DILocation(line: 59, column: 20, scope: !7)
!47 = !DILocation(line: 60, column: 20, scope: !7)
!48 = !DILocation(line: 61, column: 20, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 63, column: 20, scope: !7)
!51 = !DILocation(line: 64, column: 20, scope: !7)
!52 = !DILocation(line: 65, column: 20, scope: !7)
!53 = !DILocation(line: 66, column: 20, scope: !7)
!54 = !DILocation(line: 67, column: 20, scope: !7)
!55 = !DILocation(line: 68, column: 20, scope: !7)
!56 = !DILocation(line: 69, column: 20, scope: !7)
!57 = !DILocation(line: 70, column: 20, scope: !7)
!58 = !DILocation(line: 71, column: 20, scope: !7)
!59 = !DILocation(line: 72, column: 20, scope: !7)
!60 = !DILocation(line: 73, column: 20, scope: !7)
!61 = !DILocation(line: 74, column: 20, scope: !7)
!62 = !DILocation(line: 75, column: 20, scope: !7)
!63 = !DILocation(line: 76, column: 20, scope: !7)
!64 = !DILocation(line: 77, column: 20, scope: !7)
!65 = !DILocation(line: 78, column: 20, scope: !7)
!66 = !DILocation(line: 79, column: 20, scope: !7)
!67 = !DILocation(line: 80, column: 20, scope: !7)
!68 = !DILocation(line: 81, column: 20, scope: !7)
!69 = !DILocation(line: 82, column: 20, scope: !7)
!70 = !DILocation(line: 83, column: 20, scope: !7)
!71 = !DILocation(line: 84, column: 28, scope: !7)
!72 = !DILocation(line: 84, column: 40, scope: !7)
!73 = !DILocation(line: 85, column: 40, scope: !7)
!74 = !DILocation(line: 86, column: 40, scope: !7)
!75 = !DILocation(line: 87, column: 40, scope: !7)
!76 = !DILocation(line: 87, column: 4, scope: !7)
