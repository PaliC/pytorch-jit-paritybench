; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_div_mul_sigmoid_softplus_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = fmul float %16, 0x3FF7154760000000, !dbg !18
  %18 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %17) #2, !dbg !18
  %19 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not.i = icmp eq i32 %19, 0, !dbg !19
  %20 = tail call float @llvm.nvvm.add.rz.ftz.f(float %18, float 1.000000e+00) #2, !dbg !19
  %21 = tail call float @llvm.nvvm.add.rz.f(float %18, float 1.000000e+00) #2, !dbg !19
  %.01.i = select i1 %.not.i, float %21, float %20, !dbg !19
  %22 = bitcast float %.01.i to i32, !dbg !19
  %23 = add i32 %22, -1061158912, !dbg !19
  %24 = and i32 %23, -8388608, !dbg !19
  %25 = bitcast float %18 to i32, !dbg !19
  %26 = sub i32 %25, %24, !dbg !19
  %27 = bitcast i32 %26 to float, !dbg !19
  %28 = sub i32 1082130432, %24, !dbg !19
  %29 = bitcast i32 %28 to float, !dbg !19
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not14.i = icmp eq i32 %30, 0, !dbg !19
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %29, float -1.000000e+00) #2, !dbg !19
  %32 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %29, float -1.000000e+00) #2, !dbg !19
  %.09.i = select i1 %.not14.i, float %32, float %31, !dbg !19
  %33 = fadd float %.09.i, %27, !dbg !19
  %34 = sitofp i32 %24 to float, !dbg !19
  %35 = fmul float %34, 0x3E80000000000000, !dbg !19
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not15.i = icmp eq i32 %36, 0, !dbg !19
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %33, float 0x3FBB000240000000) #2, !dbg !19
  %38 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %33, float 0x3FBB000240000000) #2, !dbg !19
  %.012.i = select i1 %.not15.i, float %38, float %37, !dbg !19
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not16.i = icmp eq i32 %39, 0, !dbg !19
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %33, float 0xBFC0EF1C00000000) #2, !dbg !19
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %33, float 0xBFC0EF1C00000000) #2, !dbg !19
  %.010.i = select i1 %.not16.i, float %41, float %40, !dbg !19
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not17.i = icmp eq i32 %42, 0, !dbg !19
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %33, float 0x3FC28C8EA0000000) #2, !dbg !19
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %33, float 0x3FC28C8EA0000000) #2, !dbg !19
  %.06.i = select i1 %.not17.i, float %44, float %43, !dbg !19
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not18.i = icmp eq i32 %45, 0, !dbg !19
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %33, float 0xBFC54D1BA0000000) #2, !dbg !19
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %33, float 0xBFC54D1BA0000000) #2, !dbg !19
  %.02.i = select i1 %.not18.i, float %47, float %46, !dbg !19
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not19.i = icmp eq i32 %48, 0, !dbg !19
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %33, float 0x3FC995F3C0000000) #2, !dbg !19
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %33, float 0x3FC995F3C0000000) #2, !dbg !19
  %.0.i = select i1 %.not19.i, float %50, float %49, !dbg !19
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not20.i = icmp eq i32 %51, 0, !dbg !19
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %33, float 0xBFD0000840000000) #2, !dbg !19
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %33, float 0xBFD0000840000000) #2, !dbg !19
  %.011.i = select i1 %.not20.i, float %53, float %52, !dbg !19
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not21.i = icmp eq i32 %54, 0, !dbg !19
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %33, float 0x3FD5555CC0000000) #2, !dbg !19
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %33, float 0x3FD5555CC0000000) #2, !dbg !19
  %.08.i = select i1 %.not21.i, float %56, float %55, !dbg !19
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not22.i = icmp eq i32 %57, 0, !dbg !19
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %33, float -5.000000e-01) #2, !dbg !19
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %33, float -5.000000e-01) #2, !dbg !19
  %.07.i = select i1 %.not22.i, float %59, float %58, !dbg !19
  %60 = fmul float %33, %.07.i, !dbg !19
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not23.i = icmp eq i32 %61, 0, !dbg !19
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %60, float %33, float %33) #2, !dbg !19
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %60, float %33, float %33) #2, !dbg !19
  %.05.i = select i1 %.not23.i, float %63, float %62, !dbg !19
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not24.i = icmp eq i32 %64, 0, !dbg !19
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !19
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !19
  %.04.i = select i1 %.not24.i, float %66, float %65, !dbg !19
  %67 = icmp ugt i32 %25, 2139095039, !dbg !19
  br i1 %67, label %68, label %__nv_log1pf.exit, !dbg !19

68:                                               ; preds = %4
  %69 = icmp sgt i32 %25, -1082130432, !dbg !19
  br i1 %69, label %__nv_fmaf_rn.exit.i, label %73, !dbg !19

__nv_fmaf_rn.exit.i:                              ; preds = %68
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not25.i = icmp eq i32 %70, 0, !dbg !19
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %18, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !19
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %18, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !19
  %.03.i = select i1 %.not25.i, float %72, float %71, !dbg !19
  br label %73, !dbg !19

73:                                               ; preds = %__nv_fmaf_rn.exit.i, %68
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %68 ], !dbg !19
  %74 = fcmp oeq float %18, 0.000000e+00, !dbg !19
  %r.1.i = select i1 %74, float -0.000000e+00, float %r.0.i, !dbg !19
  br label %__nv_log1pf.exit, !dbg !19

__nv_log1pf.exit:                                 ; preds = %4, %73
  %r.2.i = phi float [ %r.1.i, %73 ], [ %.04.i, %4 ], !dbg !19
  %75 = fcmp ogt float %16, 2.000000e+01, !dbg !20
  %76 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %77 = bitcast i32 %76 to float, !dbg !16
  %78 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %79 = bitcast i32 %78 to float, !dbg !16
  %80 = select i1 %75, float %16, float %r.2.i, !dbg !21
  %81 = fmul float %80, %79, !dbg !22
  %82 = fmul float %80, %77, !dbg !22
  %83 = fsub float 0.000000e+00, %81, !dbg !23
  %84 = fsub float 0.000000e+00, %82, !dbg !23
  %85 = fmul float %83, 0x3FF7154760000000, !dbg !27
  %86 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %85) #2, !dbg !27
  %87 = fmul float %84, 0x3FF7154760000000, !dbg !27
  %88 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %87) #2, !dbg !27
  %89 = fadd float %86, 1.000000e+00, !dbg !28
  %90 = fadd float %88, 1.000000e+00, !dbg !28
  %91 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %89) #2, !dbg !29
  %92 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %90) #2, !dbg !29
  %93 = fmul float %91, %79, !dbg !30
  %94 = fmul float %92, %77, !dbg !30
  %95 = fmul float %93, 0x3FED1745E0000000, !dbg !31
  %96 = fmul float %94, 0x3FED1745E0000000, !dbg !31
  %97 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !32
  %98 = bitcast float %95 to i32, !dbg !33
  %99 = bitcast float %96 to i32, !dbg !33
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %98, i32 %99, ptr addrspace(1) %97, i1 %11) #2, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cloibf7ebtg7c24h6egr7ydm2cgelnqkjtmr5a24fezbsygk6l7i.py", directory: "inductor_cache/lo")
!4 = !{ptr @triton_poi_fused_div_mul_sigmoid_softplus_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_div_mul_sigmoid_softplus_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_div_mul_sigmoid_softplus_0", linkageName: "triton_poi_fused_div_mul_sigmoid_softplus_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 23, scope: !7)
!19 = !DILocation(line: 31, column: 27, scope: !7)
!20 = !DILocation(line: 29, column: 18, scope: !7)
!21 = !DILocation(line: 32, column: 32, scope: !7)
!22 = !DILocation(line: 33, column: 18, scope: !7)
!23 = !DILocation(line: 47, column: 30, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!26 = !DILocation(line: 34, column: 22, scope: !7)
!27 = !DILocation(line: 47, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 47, column: 20, scope: !24, inlinedAt: !26)
!29 = !DILocation(line: 47, column: 16, scope: !24, inlinedAt: !26)
!30 = !DILocation(line: 35, column: 19, scope: !7)
!31 = !DILocation(line: 37, column: 20, scope: !7)
!32 = !DILocation(line: 38, column: 25, scope: !7)
!33 = !DILocation(line: 38, column: 37, scope: !7)
!34 = !DILocation(line: 38, column: 4, scope: !7)
