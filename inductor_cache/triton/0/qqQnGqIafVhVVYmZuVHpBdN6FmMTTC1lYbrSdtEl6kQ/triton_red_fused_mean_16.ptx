//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_16 // -- Begin function triton_red_fused_mean_16
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_16
.visible .entry triton_red_fused_mean_16(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_16_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_16_param_1,
	.param .u32 triton_red_fused_mean_16_param_2,
	.param .u32 triton_red_fused_mean_16_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<136>;
	.reg .b32 	%r<281>;
	.reg .f32 	%f<127>;
	.reg .b64 	%rd<53>;
	.loc	1 19 0                          // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_red_fused_mean_16_param_1];
	ld.param.u64 	%rd1, [triton_red_fused_mean_16_param_0];
$L__tmp0:
	.loc	1 22 28                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:22:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:22:33
	shl.b32 	%r1, %r6, 6;
	.loc	1 23 44                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r7, %r2, 2;
	and.b32  	%r3, %r7, 60;
	.loc	1 23 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:23:23
	or.b32  	%r8, %r1, %r3;
	.loc	1 24 21                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:24:21
	setp.lt.s32 	%p1, %r8, 512;
	.loc	1 25 33                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:25:33
	bfe.u32 	%r4, %r2, 4, 3;
	.loc	1 27 19                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:27:19
	bfe.s32 	%r9, %r6, 25, 1;
	shr.u32 	%r10, %r9, 26;
	add.s32 	%r11, %r8, %r10;
	shr.s32 	%r12, %r11, 6;
	mad.lo.s32 	%r5, %r12, 6080, %r8;
	mov.pred 	%p62, -1;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	shl.b32 	%r218, %r4, 6;
	add.s32 	%r219, %r5, %r218;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd39, %r219, 4;
	add.s64 	%rd27, %rd1, %rd39;
	mov.b32 	%r126, 0;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd27 + 0 ];
	@!%p62 mov.u32 %r122, %r126;
	@!%p62 mov.u32 %r123, %r126;
	@!%p62 mov.u32 %r124, %r126;
	@!%p62 mov.u32 %r125, %r126;
	// end inline asm
	mov.b32 	%f13, %r125;
	mov.b32 	%f14, %r124;
	mov.b32 	%f15, %r123;
	mov.b32 	%f16, %r122;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f17, %f16, 0f00000000;
	add.f32 	%f18, %f15, 0f00000000;
	add.f32 	%f19, %f14, 0f00000000;
	add.f32 	%f20, %f13, 0f00000000;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r220, %r219, 512;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd40, %r220, 4;
	add.s64 	%rd28, %rd1, %rd40;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r130, 0x0;
	mov.u32 %r131, 0x0;
	mov.u32 %r132, 0x0;
	mov.u32 %r133, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r130, %r131, %r132, %r133 }, [ %rd28 + 0 ];
	@!%p62 mov.u32 %r130, %r126;
	@!%p62 mov.u32 %r131, %r126;
	@!%p62 mov.u32 %r132, %r126;
	@!%p62 mov.u32 %r133, %r126;
	// end inline asm
	mov.b32 	%f21, %r130;
	mov.b32 	%f22, %r131;
	mov.b32 	%f23, %r132;
	mov.b32 	%f24, %r133;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f25, %f20, %f24;
	add.f32 	%f26, %f19, %f23;
	add.f32 	%f27, %f18, %f22;
	add.f32 	%f28, %f17, %f21;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r221, %r219, 1024;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd41, %r221, 4;
	add.s64 	%rd29, %rd1, %rd41;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r138, 0x0;
	mov.u32 %r139, 0x0;
	mov.u32 %r140, 0x0;
	mov.u32 %r141, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r138, %r139, %r140, %r141 }, [ %rd29 + 0 ];
	@!%p62 mov.u32 %r138, %r126;
	@!%p62 mov.u32 %r139, %r126;
	@!%p62 mov.u32 %r140, %r126;
	@!%p62 mov.u32 %r141, %r126;
	// end inline asm
	mov.b32 	%f29, %r141;
	mov.b32 	%f30, %r140;
	mov.b32 	%f31, %r139;
	mov.b32 	%f32, %r138;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f33, %f28, %f32;
	add.f32 	%f34, %f27, %f31;
	add.f32 	%f35, %f26, %f30;
	add.f32 	%f36, %f25, %f29;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r222, %r219, 1536;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd42, %r222, 4;
	add.s64 	%rd30, %rd1, %rd42;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd30 + 0 ];
	@!%p62 mov.u32 %r146, %r126;
	@!%p62 mov.u32 %r147, %r126;
	@!%p62 mov.u32 %r148, %r126;
	@!%p62 mov.u32 %r149, %r126;
	// end inline asm
	mov.b32 	%f37, %r146;
	mov.b32 	%f38, %r147;
	mov.b32 	%f39, %r148;
	mov.b32 	%f40, %r149;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f41, %f36, %f40;
	add.f32 	%f42, %f35, %f39;
	add.f32 	%f43, %f34, %f38;
	add.f32 	%f44, %f33, %f37;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r223, %r219, 2048;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd43, %r223, 4;
	add.s64 	%rd31, %rd1, %rd43;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd31 + 0 ];
	@!%p62 mov.u32 %r154, %r126;
	@!%p62 mov.u32 %r155, %r126;
	@!%p62 mov.u32 %r156, %r126;
	@!%p62 mov.u32 %r157, %r126;
	// end inline asm
	mov.b32 	%f45, %r157;
	mov.b32 	%f46, %r156;
	mov.b32 	%f47, %r155;
	mov.b32 	%f48, %r154;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f49, %f44, %f48;
	add.f32 	%f50, %f43, %f47;
	add.f32 	%f51, %f42, %f46;
	add.f32 	%f52, %f41, %f45;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r224, %r219, 2560;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd44, %r224, 4;
	add.s64 	%rd32, %rd1, %rd44;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r162, 0x0;
	mov.u32 %r163, 0x0;
	mov.u32 %r164, 0x0;
	mov.u32 %r165, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r162, %r163, %r164, %r165 }, [ %rd32 + 0 ];
	@!%p62 mov.u32 %r162, %r126;
	@!%p62 mov.u32 %r163, %r126;
	@!%p62 mov.u32 %r164, %r126;
	@!%p62 mov.u32 %r165, %r126;
	// end inline asm
	mov.b32 	%f53, %r162;
	mov.b32 	%f54, %r163;
	mov.b32 	%f55, %r164;
	mov.b32 	%f56, %r165;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f57, %f52, %f56;
	add.f32 	%f58, %f51, %f55;
	add.f32 	%f59, %f50, %f54;
	add.f32 	%f60, %f49, %f53;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r225, %r219, 3072;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd45, %r225, 4;
	add.s64 	%rd33, %rd1, %rd45;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	mov.u32 %r173, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r170, %r171, %r172, %r173 }, [ %rd33 + 0 ];
	@!%p62 mov.u32 %r170, %r126;
	@!%p62 mov.u32 %r171, %r126;
	@!%p62 mov.u32 %r172, %r126;
	@!%p62 mov.u32 %r173, %r126;
	// end inline asm
	mov.b32 	%f61, %r173;
	mov.b32 	%f62, %r172;
	mov.b32 	%f63, %r171;
	mov.b32 	%f64, %r170;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f65, %f60, %f64;
	add.f32 	%f66, %f59, %f63;
	add.f32 	%f67, %f58, %f62;
	add.f32 	%f68, %f57, %f61;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r226, %r219, 3584;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd46, %r226, 4;
	add.s64 	%rd34, %rd1, %rd46;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r178, 0x0;
	mov.u32 %r179, 0x0;
	mov.u32 %r180, 0x0;
	mov.u32 %r181, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r178, %r179, %r180, %r181 }, [ %rd34 + 0 ];
	@!%p62 mov.u32 %r178, %r126;
	@!%p62 mov.u32 %r179, %r126;
	@!%p62 mov.u32 %r180, %r126;
	@!%p62 mov.u32 %r181, %r126;
	// end inline asm
	mov.b32 	%f69, %r178;
	mov.b32 	%f70, %r179;
	mov.b32 	%f71, %r180;
	mov.b32 	%f72, %r181;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f73, %f68, %f72;
	add.f32 	%f74, %f67, %f71;
	add.f32 	%f75, %f66, %f70;
	add.f32 	%f76, %f65, %f69;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r227, %r219, 4096;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd47, %r227, 4;
	add.s64 	%rd35, %rd1, %rd47;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r186, 0x0;
	mov.u32 %r187, 0x0;
	mov.u32 %r188, 0x0;
	mov.u32 %r189, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r186, %r187, %r188, %r189 }, [ %rd35 + 0 ];
	@!%p62 mov.u32 %r186, %r126;
	@!%p62 mov.u32 %r187, %r126;
	@!%p62 mov.u32 %r188, %r126;
	@!%p62 mov.u32 %r189, %r126;
	// end inline asm
	mov.b32 	%f77, %r189;
	mov.b32 	%f78, %r188;
	mov.b32 	%f79, %r187;
	mov.b32 	%f80, %r186;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f81, %f76, %f80;
	add.f32 	%f82, %f75, %f79;
	add.f32 	%f83, %f74, %f78;
	add.f32 	%f84, %f73, %f77;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r228, %r219, 4608;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd48, %r228, 4;
	add.s64 	%rd36, %rd1, %rd48;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r194, 0x0;
	mov.u32 %r195, 0x0;
	mov.u32 %r196, 0x0;
	mov.u32 %r197, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r194, %r195, %r196, %r197 }, [ %rd36 + 0 ];
	@!%p62 mov.u32 %r194, %r126;
	@!%p62 mov.u32 %r195, %r126;
	@!%p62 mov.u32 %r196, %r126;
	@!%p62 mov.u32 %r197, %r126;
	// end inline asm
	mov.b32 	%f85, %r194;
	mov.b32 	%f86, %r195;
	mov.b32 	%f87, %r196;
	mov.b32 	%f88, %r197;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f89, %f84, %f88;
	add.f32 	%f90, %f83, %f87;
	add.f32 	%f91, %f82, %f86;
	add.f32 	%f92, %f81, %f85;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r229, %r219, 5120;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd49, %r229, 4;
	add.s64 	%rd37, %rd1, %rd49;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r202, 0x0;
	mov.u32 %r203, 0x0;
	mov.u32 %r204, 0x0;
	mov.u32 %r205, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r202, %r203, %r204, %r205 }, [ %rd37 + 0 ];
	@!%p62 mov.u32 %r202, %r126;
	@!%p62 mov.u32 %r203, %r126;
	@!%p62 mov.u32 %r204, %r126;
	@!%p62 mov.u32 %r205, %r126;
	// end inline asm
	mov.b32 	%f93, %r205;
	mov.b32 	%f94, %r204;
	mov.b32 	%f95, %r203;
	mov.b32 	%f96, %r202;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f97, %f92, %f96;
	add.f32 	%f98, %f91, %f95;
	add.f32 	%f99, %f90, %f94;
	add.f32 	%f100, %f89, %f93;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r230, %r219, 5632;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd50, %r230, 4;
	add.s64 	%rd38, %rd1, %rd50;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r210, 0x0;
	mov.u32 %r211, 0x0;
	mov.u32 %r212, 0x0;
	mov.u32 %r213, 0x0;
	@%p62 ld.global.L1::evict_first.v4.b32 { %r210, %r211, %r212, %r213 }, [ %rd38 + 0 ];
	@!%p62 mov.u32 %r210, %r126;
	@!%p62 mov.u32 %r211, %r126;
	@!%p62 mov.u32 %r212, %r126;
	@!%p62 mov.u32 %r213, %r126;
	// end inline asm
	mov.b32 	%f101, %r210;
	mov.b32 	%f102, %r211;
	mov.b32 	%f103, %r212;
	mov.b32 	%f104, %r213;
	.loc	1 36 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:36:23
	add.f32 	%f126, %f100, %f104;
	add.f32 	%f125, %f99, %f103;
	add.f32 	%f124, %f98, %f102;
	add.f32 	%f123, %f97, %f101;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %.split.preheader
	.loc	1 34 42                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:42
	shl.b32 	%r109, %r4, 6;
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r110, %r5, %r109;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd15, %r110, 4;
	add.s64 	%rd3, %rd1, %rd15;
	mov.b32 	%r17, 0;
	mov.pred 	%p2, 0;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd3 + 0 ];
	@!%p2 mov.u32 %r13, %r17;
	@!%p2 mov.u32 %r14, %r17;
	@!%p2 mov.u32 %r15, %r17;
	@!%p2 mov.u32 %r16, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r111, %r110, 512;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd16, %r111, 4;
	add.s64 	%rd4, %rd1, %rd16;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd4 + 0 ];
	@!%p2 mov.u32 %r21, %r17;
	@!%p2 mov.u32 %r22, %r17;
	@!%p2 mov.u32 %r23, %r17;
	@!%p2 mov.u32 %r24, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r112, %r110, 1024;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd17, %r112, 4;
	add.s64 	%rd5, %rd1, %rd17;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd5 + 0 ];
	@!%p2 mov.u32 %r29, %r17;
	@!%p2 mov.u32 %r30, %r17;
	@!%p2 mov.u32 %r31, %r17;
	@!%p2 mov.u32 %r32, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r113, %r110, 1536;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd18, %r113, 4;
	add.s64 	%rd6, %rd1, %rd18;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r37, %r38, %r39, %r40 }, [ %rd6 + 0 ];
	@!%p2 mov.u32 %r37, %r17;
	@!%p2 mov.u32 %r38, %r17;
	@!%p2 mov.u32 %r39, %r17;
	@!%p2 mov.u32 %r40, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r114, %r110, 2048;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd19, %r114, 4;
	add.s64 	%rd7, %rd1, %rd19;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r45, %r46, %r47, %r48 }, [ %rd7 + 0 ];
	@!%p2 mov.u32 %r45, %r17;
	@!%p2 mov.u32 %r46, %r17;
	@!%p2 mov.u32 %r47, %r17;
	@!%p2 mov.u32 %r48, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r115, %r110, 2560;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd20, %r115, 4;
	add.s64 	%rd8, %rd1, %rd20;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r53, %r54, %r55, %r56 }, [ %rd8 + 0 ];
	@!%p2 mov.u32 %r53, %r17;
	@!%p2 mov.u32 %r54, %r17;
	@!%p2 mov.u32 %r55, %r17;
	@!%p2 mov.u32 %r56, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r116, %r110, 3072;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd21, %r116, 4;
	add.s64 	%rd9, %rd1, %rd21;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r61, %r62, %r63, %r64 }, [ %rd9 + 0 ];
	@!%p2 mov.u32 %r61, %r17;
	@!%p2 mov.u32 %r62, %r17;
	@!%p2 mov.u32 %r63, %r17;
	@!%p2 mov.u32 %r64, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r117, %r110, 3584;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd22, %r117, 4;
	add.s64 	%rd10, %rd1, %rd22;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r69, %r70, %r71, %r72 }, [ %rd10 + 0 ];
	@!%p2 mov.u32 %r69, %r17;
	@!%p2 mov.u32 %r70, %r17;
	@!%p2 mov.u32 %r71, %r17;
	@!%p2 mov.u32 %r72, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r118, %r110, 4096;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd23, %r118, 4;
	add.s64 	%rd11, %rd1, %rd23;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	@!%p2 mov.u32 %r77, %r17;
	@!%p2 mov.u32 %r78, %r17;
	@!%p2 mov.u32 %r79, %r17;
	@!%p2 mov.u32 %r80, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r119, %r110, 4608;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd24, %r119, 4;
	add.s64 	%rd12, %rd1, %rd24;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r85, %r86, %r87, %r88 }, [ %rd12 + 0 ];
	@!%p2 mov.u32 %r85, %r17;
	@!%p2 mov.u32 %r86, %r17;
	@!%p2 mov.u32 %r87, %r17;
	@!%p2 mov.u32 %r88, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r120, %r110, 5120;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd25, %r120, 4;
	add.s64 	%rd13, %rd1, %rd25;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r93, 0x0;
	mov.u32 %r94, 0x0;
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r93, %r94, %r95, %r96 }, [ %rd13 + 0 ];
	@!%p2 mov.u32 %r93, %r17;
	@!%p2 mov.u32 %r94, %r17;
	@!%p2 mov.u32 %r95, %r17;
	@!%p2 mov.u32 %r96, %r17;
	// end inline asm
	.loc	1 34 47                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:47
	add.s32 	%r121, %r110, 5632;
	.loc	1 34 34                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:34
	mul.wide.s32 	%rd26, %r121, 4;
	add.s64 	%rd14, %rd1, %rd26;
	.loc	1 34 57                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:34:57
	// begin inline asm
	mov.u32 %r101, 0x0;
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r101, %r102, %r103, %r104 }, [ %rd14 + 0 ];
	@!%p2 mov.u32 %r101, %r17;
	@!%p2 mov.u32 %r102, %r17;
	@!%p2 mov.u32 %r103, %r17;
	@!%p2 mov.u32 %r104, %r17;
	// end inline asm
	mov.f32 	%f123, 0f00000000;
	mov.f32 	%f124, %f123;
	mov.f32 	%f125, %f123;
	mov.f32 	%f126, %f123;
$L__BB0_3:                              // %.split2.us
	.loc	1 23 44                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:23:44
	and.b32  	%r253, %r2, 63;
	.loc	1 23 23                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:23:23
	or.b32  	%r254, %r1, %r253;
	.loc	1 24 21                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:24:21
	setp.lt.s32 	%p132, %r254, 512;
	.loc	1 23 44                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:23:44
	and.b32  	%r255, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r256, %f123;
	shfl.sync.bfly.b32	%r257, %r256, 16, 31, -1;
	mov.b32 	%f105, %r257;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f123, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r258, %f124;
	shfl.sync.bfly.b32	%r259, %r258, 16, 31, -1;
	mov.b32 	%f107, %r259;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f124, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r260, %f125;
	shfl.sync.bfly.b32	%r261, %r260, 16, 31, -1;
	mov.b32 	%f109, %r261;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f125, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r262, %f126;
	shfl.sync.bfly.b32	%r263, %r262, 16, 31, -1;
	mov.b32 	%f111, %r263;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f126, %f111;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p122, %r255, 0;
	shr.u32 	%r264, %r2, 3;
	and.b32  	%r265, %r264, 12;
	shl.b32 	%r266, %r3, 4;
	or.b32  	%r267, %r266, %r265;
	mov.u32 	%r268, global_smem;
	add.s32 	%r231, %r268, %r267;
	mov.b32 	%r232, %f106;
	// begin inline asm
	@%p122 st.shared.b32 [ %r231 + 0 ], %r232;
	// end inline asm
	add.s32 	%r233, %r231, 16;
	mov.b32 	%r234, %f108;
	// begin inline asm
	@%p122 st.shared.b32 [ %r233 + 0 ], %r234;
	// end inline asm
	add.s32 	%r235, %r231, 32;
	mov.b32 	%r236, %f110;
	// begin inline asm
	@%p122 st.shared.b32 [ %r235 + 0 ], %r236;
	// end inline asm
	add.s32 	%r237, %r231, 48;
	mov.b32 	%r238, %f112;
	// begin inline asm
	@%p122 st.shared.b32 [ %r237 + 0 ], %r238;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p126, %r2, 256;
	add.s32 	%r240, %r268, %r7;
	// begin inline asm
	@%p126 ld.shared.b32 %r239, [ %r240 + 0 ];
	// end inline asm
	mov.b32 	%f113, %r239;
	shfl.sync.bfly.b32	%r270, %r239, 2, 31, -1;
	mov.b32 	%f114, %r270;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f115, %f113, %f114;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r271, %f115;
	shfl.sync.bfly.b32	%r272, %r271, 1, 31, -1;
	mov.b32 	%f116, %r272;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r273, %r2, 3;
	setp.eq.s32 	%p133, %r273, 0;
	and.pred  	%p127, %p126, %p133;
	mov.b32 	%r242, %f117;
	// begin inline asm
	@%p127 st.shared.b32 [ %r240 + 0 ], %r242;
	// end inline asm
	add.s32 	%r244, %r240, 512;
	// begin inline asm
	@%p126 ld.shared.b32 %r243, [ %r244 + 0 ];
	// end inline asm
	mov.b32 	%f118, %r243;
	shfl.sync.bfly.b32	%r274, %r243, 2, 31, -1;
	mov.b32 	%f119, %r274;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r275, %f120;
	shfl.sync.bfly.b32	%r276, %r275, 1, 31, -1;
	mov.b32 	%f121, %r276;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r246, %f122;
	// begin inline asm
	@%p127 st.shared.b32 [ %r244 + 0 ], %r246;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r277, %r268, %r266;
	ld.shared.u32 	%r248, [%r277];
	ld.shared.u32 	%r249, [%r277+16];
	ld.shared.u32 	%r250, [%r277+32];
	ld.shared.u32 	%r251, [%r277+48];
$L__tmp2:
	.loc	1 38 28                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:38:28
	bar.sync 	0;
	mad.lo.s32 	%r247, %r3, -12, %r277;
	// begin inline asm
	@%p62 st.shared.v4.b32 [ %r247 + 0 ], { %r248, %r249, %r250, %r251 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r278, %r253, 2;
	add.s32 	%r279, %r268, %r278;
	ld.shared.u32 	%r252, [%r279];
	.loc	1 39 25                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:39:25
	mul.wide.s32 	%rd52, %r254, 4;
	add.s64 	%rd51, %rd2, %rd52;
	.loc	1 39 36                         // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:39:36
	and.b32  	%r280, %r2, 64;
	setp.eq.s32 	%p134, %r280, 0;
	and.pred  	%p131, %p134, %p132;
	// begin inline asm
	@%p131 st.global.b32 [ %rd51 + 0 ], { %r252 };
	// end inline asm
	.loc	1 39 4                          // crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ri/crix5odxfywvmh2syrbzfv2bxszqym6tztzssz4vnjoxx34hieuy.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 105
.b8 120
.b8 53
.b8 111
.b8 100
.b8 120
.b8 102
.b8 121
.b8 119
.b8 118
.b8 109
.b8 104
.b8 50
.b8 115
.b8 121
.b8 114
.b8 98
.b8 122
.b8 102
.b8 118
.b8 50
.b8 98
.b8 120
.b8 115
.b8 122
.b8 113
.b8 121
.b8 109
.b8 54
.b8 116
.b8 122
.b8 116
.b8 122
.b8 115
.b8 115
.b8 122
.b8 52
.b8 118
.b8 110
.b8 106
.b8 111
.b8 120
.b8 120
.b8 51
.b8 52
.b8 104
.b8 105
.b8 101
.b8 117
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
