//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_17 // -- Begin function triton_poi_fused_convolution_17
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_17
.visible .entry triton_poi_fused_convolution_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_17_param_2,
	.param .u32 triton_poi_fused_convolution_17_param_3,
	.param .u32 triton_poi_fused_convolution_17_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<284>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:19:0

// %bb.0:
	ld.param.u64 	%rd22, [triton_poi_fused_convolution_17_param_0];
	ld.param.u64 	%rd23, [triton_poi_fused_convolution_17_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:22:33
	shl.b32 	%r70, %r1, 8;
	ld.param.u64 	%rd24, [triton_poi_fused_convolution_17_param_2];
	.loc	1 23 44                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:23:44
	mov.u32 	%r71, %tid.x;
	shl.b32 	%r73, %r71, 2;
	and.b32  	%r74, %r73, 252;
	bfe.u32 	%r75, %r71, 4, 4;
	or.b32  	%r76, %r75, 16;
	or.b32  	%r77, %r75, 32;
	or.b32  	%r78, %r75, 48;
	or.b32  	%r79, %r75, 64;
	or.b32  	%r80, %r75, 80;
	or.b32  	%r81, %r75, 96;
	or.b32  	%r82, %r75, 112;
	or.b32  	%r83, %r75, 128;
	or.b32  	%r84, %r75, 144;
	or.b32  	%r85, %r75, 160;
	or.b32  	%r86, %r75, 176;
	or.b32  	%r87, %r75, 192;
	or.b32  	%r88, %r75, 208;
	or.b32  	%r89, %r75, 224;
	or.b32  	%r90, %r75, 240;
	and.b32  	%r91, %r71, 15;
	and.b32  	%r92, %r71, 255;
	.loc	1 23 23                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:23:23
	or.b32  	%r93, %r70, %r74;
	or.b32  	%r94, %r70, %r75;
	or.b32  	%r95, %r70, %r76;
	or.b32  	%r96, %r70, %r77;
	or.b32  	%r97, %r70, %r78;
	or.b32  	%r98, %r70, %r79;
	or.b32  	%r99, %r70, %r80;
	or.b32  	%r100, %r70, %r81;
	or.b32  	%r101, %r70, %r82;
	or.b32  	%r102, %r70, %r83;
	or.b32  	%r103, %r70, %r84;
	or.b32  	%r104, %r70, %r85;
	or.b32  	%r105, %r70, %r86;
	or.b32  	%r106, %r70, %r87;
	or.b32  	%r107, %r70, %r88;
	or.b32  	%r108, %r70, %r89;
	or.b32  	%r109, %r70, %r90;
	or.b32  	%r110, %r70, %r92;
	.loc	1 25 28                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:25:33
	shl.b32 	%r111, %r2, 4;
	.loc	1 26 44                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:26:44
	bfe.u32 	%r112, %r71, 6, 2;
	.loc	1 26 23                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:26:23
	or.b32  	%r113, %r111, %r112;
	or.b32  	%r114, %r113, 4;
	or.b32  	%r115, %r113, 8;
	or.b32  	%r116, %r113, 12;
	or.b32  	%r117, %r111, %r91;
	.loc	1 27 21                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:27:21
	setp.lt.s32 	%p1, %r113, 225;
	setp.lt.s32 	%p2, %r114, 225;
	setp.lt.s32 	%p3, %r115, 225;
	setp.lt.s32 	%p4, %r116, 225;
	setp.lt.s32 	%p23, %r117, 225;
	.loc	1 30 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:30:19
	bfe.s32 	%r118, %r1, 23, 1;
	.loc	1 29 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:29:19
	shr.u32 	%r119, %r118, 24;
	.loc	1 30 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:30:19
	add.s32 	%r120, %r93, %r119;
	shr.s32 	%r121, %r120, 8;
	.loc	1 29 19                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:29:19
	and.b32  	%r122, %r120, -256;
	sub.s32 	%r123, %r93, %r122;
	add.s32 	%r124, %r110, %r119;
	and.b32  	%r125, %r124, -256;
	sub.s32 	%r126, %r110, %r125;
	.loc	1 32 39                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:39
	shl.b32 	%r127, %r113, 8;
	shl.b32 	%r128, %r114, 8;
	shl.b32 	%r129, %r115, 8;
	shl.b32 	%r130, %r116, 8;
	.loc	1 32 35                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:35
	mad.lo.s32 	%r131, %r121, 57600, %r123;
	.loc	1 32 44                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:44
	add.s32 	%r132, %r131, %r127;
	add.s32 	%r133, %r131, %r128;
	add.s32 	%r134, %r131, %r129;
	add.s32 	%r135, %r131, %r130;
	.loc	1 32 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:30
	mul.wide.s32 	%rd25, %r132, 4;
	add.s64 	%rd1, %rd22, %rd25;
	mul.wide.s32 	%rd26, %r133, 4;
	add.s64 	%rd2, %rd22, %rd26;
	mul.wide.s32 	%rd27, %r134, 4;
	add.s64 	%rd3, %rd22, %rd27;
	mul.wide.s32 	%rd28, %r135, 4;
	add.s64 	%rd4, %rd22, %rd28;
	.loc	1 32 55                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:32:55
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r136, %r71, 6;
	and.b32  	%r137, %r136, 4032;
	or.b32  	%r138, %r137, %r112;
	shr.u32 	%r139, %r137, 2;
	mov.u32 	%r140, global_smem;
	add.s32 	%r141, %r140, %r139;
	shl.b32 	%r142, %r138, 2;
	add.s32 	%r19, %r141, %r142;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r143, %r137, 16;
	shr.u32 	%r144, %r143, 2;
	add.s32 	%r145, %r140, %r144;
	add.s32 	%r146, %r145, %r142;
	add.s32 	%r21, %r146, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r147, %r137, 32;
	shr.u32 	%r148, %r147, 2;
	add.s32 	%r149, %r140, %r148;
	add.s32 	%r150, %r149, %r142;
	add.s32 	%r23, %r150, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r151, %r137, 48;
	shr.u32 	%r152, %r151, 2;
	add.s32 	%r153, %r140, %r152;
	add.s32 	%r154, %r153, %r142;
	add.s32 	%r25, %r154, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r146, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r150, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r154, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r146, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r150, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r154, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r146, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r150, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r154, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r155, %r71, 2;
	and.b32  	%r156, %r155, 60;
	add.s32 	%r157, %r140, %r156;
	shl.b32 	%r158, %r92, 2;
	add.s32 	%r159, %r157, %r158;
	ld.shared.f32 	%f1, [%r159];
	or.b32  	%r160, %r92, 256;
	shr.u32 	%r161, %r160, 2;
	and.b32  	%r162, %r161, 124;
	add.s32 	%r163, %r140, %r162;
	add.s32 	%r164, %r163, %r158;
	ld.shared.f32 	%f2, [%r164+1024];
	or.b32  	%r165, %r92, 512;
	shr.u32 	%r166, %r165, 2;
	and.b32  	%r167, %r166, 188;
	add.s32 	%r168, %r140, %r167;
	add.s32 	%r169, %r168, %r158;
	ld.shared.f32 	%f3, [%r169+2048];
	or.b32  	%r170, %r92, 768;
	shr.u32 	%r171, %r170, 2;
	and.b32  	%r172, %r171, 252;
	add.s32 	%r173, %r140, %r172;
	add.s32 	%r174, %r173, %r158;
	ld.shared.f32 	%f4, [%r174+3072];
	or.b32  	%r175, %r92, 1024;
	shr.u32 	%r176, %r175, 2;
	and.b32  	%r177, %r176, 316;
	add.s32 	%r178, %r140, %r177;
	add.s32 	%r179, %r178, %r158;
	ld.shared.f32 	%f5, [%r179+4096];
	or.b32  	%r180, %r92, 1280;
	shr.u32 	%r181, %r180, 2;
	and.b32  	%r182, %r181, 380;
	add.s32 	%r183, %r140, %r182;
	add.s32 	%r184, %r183, %r158;
	ld.shared.f32 	%f6, [%r184+5120];
	or.b32  	%r185, %r92, 1536;
	shr.u32 	%r186, %r185, 2;
	and.b32  	%r187, %r186, 444;
	add.s32 	%r188, %r140, %r187;
	add.s32 	%r189, %r188, %r158;
	ld.shared.f32 	%f7, [%r189+6144];
	or.b32  	%r190, %r92, 1792;
	shr.u32 	%r191, %r190, 2;
	and.b32  	%r192, %r191, 508;
	add.s32 	%r193, %r140, %r192;
	add.s32 	%r194, %r193, %r158;
	ld.shared.f32 	%f8, [%r194+7168];
	or.b32  	%r195, %r92, 2048;
	shr.u32 	%r196, %r195, 2;
	and.b32  	%r197, %r196, 572;
	add.s32 	%r198, %r140, %r197;
	add.s32 	%r199, %r198, %r158;
	ld.shared.f32 	%f9, [%r199+8192];
	or.b32  	%r200, %r92, 2304;
	shr.u32 	%r201, %r200, 2;
	and.b32  	%r202, %r201, 636;
	add.s32 	%r203, %r140, %r202;
	add.s32 	%r204, %r203, %r158;
	ld.shared.f32 	%f10, [%r204+9216];
	or.b32  	%r205, %r92, 2560;
	shr.u32 	%r206, %r205, 2;
	and.b32  	%r207, %r206, 700;
	add.s32 	%r208, %r140, %r207;
	add.s32 	%r209, %r208, %r158;
	ld.shared.f32 	%f11, [%r209+10240];
	or.b32  	%r210, %r92, 2816;
	shr.u32 	%r211, %r210, 2;
	and.b32  	%r212, %r211, 764;
	add.s32 	%r213, %r140, %r212;
	add.s32 	%r214, %r213, %r158;
	ld.shared.f32 	%f12, [%r214+11264];
	or.b32  	%r215, %r92, 3072;
	shr.u32 	%r216, %r215, 2;
	and.b32  	%r217, %r216, 828;
	add.s32 	%r218, %r140, %r217;
	add.s32 	%r219, %r218, %r158;
	ld.shared.f32 	%f13, [%r219+12288];
	or.b32  	%r220, %r92, 3328;
	shr.u32 	%r221, %r220, 2;
	and.b32  	%r222, %r221, 892;
	add.s32 	%r223, %r140, %r222;
	add.s32 	%r224, %r223, %r158;
	ld.shared.f32 	%f14, [%r224+13312];
	or.b32  	%r225, %r92, 3584;
	shr.u32 	%r226, %r225, 2;
	and.b32  	%r227, %r226, 956;
	add.s32 	%r228, %r140, %r227;
	add.s32 	%r229, %r228, %r158;
	ld.shared.f32 	%f15, [%r229+14336];
	or.b32  	%r230, %r92, 3840;
	shr.u32 	%r231, %r230, 2;
	and.b32  	%r232, %r231, 1020;
	add.s32 	%r233, %r140, %r232;
	add.s32 	%r234, %r233, %r158;
	ld.shared.f32 	%f16, [%r234+15360];
	.loc	1 33 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:33:30
	mul.wide.s32 	%rd29, %r126, 4;
	add.s64 	%rd5, %rd23, %rd29;
	.loc	1 33 35                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:33:35
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r53 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:34:18
	bar.sync 	0;
	shl.b32 	%r235, %r92, 3;
	add.s32 	%r52, %r140, %r235;
	// begin inline asm
	@%p5 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r236, %r75, 3;
	add.s32 	%r237, %r140, %r236;
	ld.shared.f32 	%f17, [%r237];
	shl.b32 	%r238, %r76, 3;
	add.s32 	%r239, %r140, %r238;
	ld.shared.f32 	%f18, [%r239];
	shl.b32 	%r240, %r77, 3;
	add.s32 	%r241, %r140, %r240;
	ld.shared.f32 	%f19, [%r241];
	shl.b32 	%r242, %r78, 3;
	add.s32 	%r243, %r140, %r242;
	ld.shared.f32 	%f20, [%r243];
	shl.b32 	%r244, %r79, 3;
	add.s32 	%r245, %r140, %r244;
	ld.shared.f32 	%f21, [%r245];
	shl.b32 	%r246, %r80, 3;
	add.s32 	%r247, %r140, %r246;
	ld.shared.f32 	%f22, [%r247];
	shl.b32 	%r248, %r81, 3;
	add.s32 	%r249, %r140, %r248;
	ld.shared.f32 	%f23, [%r249];
	shl.b32 	%r250, %r82, 3;
	add.s32 	%r251, %r140, %r250;
	ld.shared.f32 	%f24, [%r251];
	shl.b32 	%r252, %r83, 3;
	add.s32 	%r253, %r140, %r252;
	ld.shared.f32 	%f25, [%r253];
	shl.b32 	%r254, %r84, 3;
	add.s32 	%r255, %r140, %r254;
	ld.shared.f32 	%f26, [%r255];
	shl.b32 	%r256, %r85, 3;
	add.s32 	%r257, %r140, %r256;
	ld.shared.f32 	%f27, [%r257];
	shl.b32 	%r258, %r86, 3;
	add.s32 	%r259, %r140, %r258;
	ld.shared.f32 	%f28, [%r259];
	shl.b32 	%r260, %r87, 3;
	add.s32 	%r261, %r140, %r260;
	ld.shared.f32 	%f29, [%r261];
	shl.b32 	%r262, %r88, 3;
	add.s32 	%r263, %r140, %r262;
	ld.shared.f32 	%f30, [%r263];
	shl.b32 	%r264, %r89, 3;
	add.s32 	%r265, %r140, %r264;
	ld.shared.f32 	%f31, [%r265];
	shl.b32 	%r266, %r90, 3;
	add.s32 	%r267, %r140, %r266;
	ld.shared.f32 	%f32, [%r267];
	add.f32 	%f33, %f1, %f17;
	add.f32 	%f34, %f2, %f18;
	add.f32 	%f35, %f3, %f19;
	add.f32 	%f36, %f4, %f20;
	add.f32 	%f37, %f5, %f21;
	add.f32 	%f38, %f6, %f22;
	add.f32 	%f39, %f7, %f23;
	add.f32 	%f40, %f8, %f24;
	add.f32 	%f41, %f9, %f25;
	add.f32 	%f42, %f10, %f26;
	add.f32 	%f43, %f11, %f27;
	add.f32 	%f44, %f12, %f28;
	add.f32 	%f45, %f13, %f29;
	add.f32 	%f46, %f14, %f30;
	add.f32 	%f47, %f15, %f31;
	add.f32 	%f48, %f16, %f32;
	.loc	1 35 30                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:30
	mad.lo.s32 	%r268, %r94, 225, %r117;
	mad.lo.s32 	%r269, %r95, 225, %r117;
	mad.lo.s32 	%r270, %r96, 225, %r117;
	mad.lo.s32 	%r271, %r97, 225, %r117;
	mad.lo.s32 	%r272, %r98, 225, %r117;
	mad.lo.s32 	%r273, %r99, 225, %r117;
	mad.lo.s32 	%r274, %r100, 225, %r117;
	mad.lo.s32 	%r275, %r101, 225, %r117;
	mad.lo.s32 	%r276, %r102, 225, %r117;
	mad.lo.s32 	%r277, %r103, 225, %r117;
	mad.lo.s32 	%r278, %r104, 225, %r117;
	mad.lo.s32 	%r279, %r105, 225, %r117;
	mad.lo.s32 	%r280, %r106, 225, %r117;
	mad.lo.s32 	%r281, %r107, 225, %r117;
	mad.lo.s32 	%r282, %r108, 225, %r117;
	mad.lo.s32 	%r283, %r109, 225, %r117;
	.loc	1 35 25                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:25
	mul.wide.s32 	%rd30, %r268, 4;
	add.s64 	%rd6, %rd24, %rd30;
	mul.wide.s32 	%rd31, %r269, 4;
	add.s64 	%rd7, %rd24, %rd31;
	mul.wide.s32 	%rd32, %r270, 4;
	add.s64 	%rd8, %rd24, %rd32;
	mul.wide.s32 	%rd33, %r271, 4;
	add.s64 	%rd9, %rd24, %rd33;
	mul.wide.s32 	%rd34, %r272, 4;
	add.s64 	%rd10, %rd24, %rd34;
	mul.wide.s32 	%rd35, %r273, 4;
	add.s64 	%rd11, %rd24, %rd35;
	mul.wide.s32 	%rd36, %r274, 4;
	add.s64 	%rd12, %rd24, %rd36;
	mul.wide.s32 	%rd37, %r275, 4;
	add.s64 	%rd13, %rd24, %rd37;
	mul.wide.s32 	%rd38, %r276, 4;
	add.s64 	%rd14, %rd24, %rd38;
	mul.wide.s32 	%rd39, %r277, 4;
	add.s64 	%rd15, %rd24, %rd39;
	mul.wide.s32 	%rd40, %r278, 4;
	add.s64 	%rd16, %rd24, %rd40;
	mul.wide.s32 	%rd41, %r279, 4;
	add.s64 	%rd17, %rd24, %rd41;
	mul.wide.s32 	%rd42, %r280, 4;
	add.s64 	%rd18, %rd24, %rd42;
	mul.wide.s32 	%rd43, %r281, 4;
	add.s64 	%rd19, %rd24, %rd43;
	mul.wide.s32 	%rd44, %r282, 4;
	add.s64 	%rd20, %rd24, %rd44;
	mul.wide.s32 	%rd45, %r283, 4;
	add.s64 	%rd21, %rd24, %rd45;
	.loc	1 35 45                         // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:45
	mov.b32 	%r54, %f33;
	// begin inline asm
	@%p23 st.global.b32 [ %rd6 + 0 ], { %r54 };
	// end inline asm
	mov.b32 	%r55, %f34;
	// begin inline asm
	@%p23 st.global.b32 [ %rd7 + 0 ], { %r55 };
	// end inline asm
	mov.b32 	%r56, %f35;
	// begin inline asm
	@%p23 st.global.b32 [ %rd8 + 0 ], { %r56 };
	// end inline asm
	mov.b32 	%r57, %f36;
	// begin inline asm
	@%p23 st.global.b32 [ %rd9 + 0 ], { %r57 };
	// end inline asm
	mov.b32 	%r58, %f37;
	// begin inline asm
	@%p23 st.global.b32 [ %rd10 + 0 ], { %r58 };
	// end inline asm
	mov.b32 	%r59, %f38;
	// begin inline asm
	@%p23 st.global.b32 [ %rd11 + 0 ], { %r59 };
	// end inline asm
	mov.b32 	%r60, %f39;
	// begin inline asm
	@%p23 st.global.b32 [ %rd12 + 0 ], { %r60 };
	// end inline asm
	mov.b32 	%r61, %f40;
	// begin inline asm
	@%p23 st.global.b32 [ %rd13 + 0 ], { %r61 };
	// end inline asm
	mov.b32 	%r62, %f41;
	// begin inline asm
	@%p23 st.global.b32 [ %rd14 + 0 ], { %r62 };
	// end inline asm
	mov.b32 	%r63, %f42;
	// begin inline asm
	@%p23 st.global.b32 [ %rd15 + 0 ], { %r63 };
	// end inline asm
	mov.b32 	%r64, %f43;
	// begin inline asm
	@%p23 st.global.b32 [ %rd16 + 0 ], { %r64 };
	// end inline asm
	mov.b32 	%r65, %f44;
	// begin inline asm
	@%p23 st.global.b32 [ %rd17 + 0 ], { %r65 };
	// end inline asm
	mov.b32 	%r66, %f45;
	// begin inline asm
	@%p23 st.global.b32 [ %rd18 + 0 ], { %r66 };
	// end inline asm
	mov.b32 	%r67, %f46;
	// begin inline asm
	@%p23 st.global.b32 [ %rd19 + 0 ], { %r67 };
	// end inline asm
	mov.b32 	%r68, %f47;
	// begin inline asm
	@%p23 st.global.b32 [ %rd20 + 0 ], { %r68 };
	// end inline asm
	mov.b32 	%r69, %f48;
	// begin inline asm
	@%p23 st.global.b32 [ %rd21 + 0 ], { %r69 };
	// end inline asm
	.loc	1 35 4                          // cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fm/cfmhlmc52zyib5iy2h7jceimss3u6ptx7tbrr26x3xtts5aapym7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 109
.b8 104
.b8 108
.b8 109
.b8 99
.b8 53
.b8 50
.b8 122
.b8 121
.b8 105
.b8 98
.b8 53
.b8 105
.b8 121
.b8 50
.b8 104
.b8 55
.b8 106
.b8 99
.b8 101
.b8 105
.b8 109
.b8 115
.b8 115
.b8 51
.b8 117
.b8 54
.b8 112
.b8 116
.b8 120
.b8 55
.b8 116
.b8 98
.b8 114
.b8 114
.b8 50
.b8 54
.b8 120
.b8 51
.b8 120
.b8 116
.b8 116
.b8 115
.b8 53
.b8 97
.b8 97
.b8 112
.b8 121
.b8 109
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
