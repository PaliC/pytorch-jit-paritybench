; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mean_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !10
  %5 = bitcast i32 %4 to float, !dbg !10
  %6 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !11
  %7 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %6, i1 true) #1, !dbg !12
  %8 = bitcast i32 %7 to float, !dbg !12
  %9 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !13
  %10 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #1, !dbg !14
  %11 = bitcast i32 %10 to float, !dbg !14
  %12 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #1, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !17
  %16 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !19
  %18 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !21
  %20 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !22
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !23
  %22 = getelementptr i8, ptr addrspace(1) %1, i64 16, !dbg !24
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !25
  %24 = getelementptr i8, ptr addrspace(1) %1, i64 20, !dbg !26
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !27
  %26 = getelementptr i8, ptr addrspace(1) %1, i64 24, !dbg !28
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !29
  %28 = getelementptr i8, ptr addrspace(1) %1, i64 28, !dbg !30
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !31
  %30 = getelementptr i8, ptr addrspace(1) %1, i64 32, !dbg !32
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !33
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 36, !dbg !34
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !35
  %34 = getelementptr i8, ptr addrspace(1) %1, i64 40, !dbg !36
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !37
  %36 = getelementptr i8, ptr addrspace(1) %1, i64 44, !dbg !38
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !39
  %38 = getelementptr i8, ptr addrspace(1) %1, i64 48, !dbg !40
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !41
  %40 = getelementptr i8, ptr addrspace(1) %1, i64 52, !dbg !42
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !43
  %42 = getelementptr i8, ptr addrspace(1) %1, i64 56, !dbg !44
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #1, !dbg !45
  %44 = getelementptr i8, ptr addrspace(1) %1, i64 60, !dbg !46
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !47
  %46 = fadd float %5, %8, !dbg !48
  %47 = fadd float %46, %11, !dbg !49
  %48 = fadd float %47, %14, !dbg !50
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %48, float 4.000000e+00) #1, !dbg !51
  %50 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !17
  %51 = insertelement <2 x i32> %50, i32 %23, i64 1, !dbg !17
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !17
  %53 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !19
  %54 = insertelement <2 x i32> %53, i32 %25, i64 1, !dbg !19
  %55 = bitcast <2 x i32> %54 to <2 x float>, !dbg !19
  %56 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !21
  %57 = insertelement <2 x i32> %56, i32 %27, i64 1, !dbg !21
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !21
  %59 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !23
  %60 = insertelement <2 x i32> %59, i32 %29, i64 1, !dbg !23
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !23
  %62 = fadd <2 x float> %52, %55, !dbg !52
  %63 = fadd <2 x float> %62, %58, !dbg !53
  %64 = fadd <2 x float> %63, %61, !dbg !54
  %shift = shufflevector <2 x float> %64, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !55
  %65 = fadd <2 x float> %64, %shift, !dbg !55
  %66 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !33
  %67 = insertelement <2 x i32> %66, i32 %39, i64 1, !dbg !33
  %68 = bitcast <2 x i32> %67 to <2 x float>, !dbg !33
  %69 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !35
  %70 = insertelement <2 x i32> %69, i32 %41, i64 1, !dbg !35
  %71 = bitcast <2 x i32> %70 to <2 x float>, !dbg !35
  %72 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !37
  %73 = insertelement <2 x i32> %72, i32 %43, i64 1, !dbg !37
  %74 = bitcast <2 x i32> %73 to <2 x float>, !dbg !37
  %75 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !39
  %76 = insertelement <2 x i32> %75, i32 %45, i64 1, !dbg !39
  %77 = bitcast <2 x i32> %76 to <2 x float>, !dbg !39
  %78 = fadd <2 x float> %68, %71, !dbg !56
  %79 = fadd <2 x float> %78, %74, !dbg !57
  %80 = fadd <2 x float> %79, %77, !dbg !58
  %81 = fadd <2 x float> %65, %80, !dbg !59
  %shift1 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !60
  %82 = fadd <2 x float> %81, %shift1, !dbg !60
  %83 = extractelement <2 x float> %82, i64 0, !dbg !60
  %84 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %83, float 4.000000e+00) #1, !dbg !61
  %85 = fsub float %49, %84, !dbg !62
  %86 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !63
  %87 = and i32 %86, 31, !dbg !63
  %88 = icmp eq i32 %87, 0, !dbg !63
  %89 = bitcast float %85 to i32, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %89, ptr addrspace(1) %2, i1 %88) #1, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cacrjngc6kaga7u3slqcuv32xjda6neql5ibfspirq64yz6dusaf.py", directory: "inductor_cache/ac")
!4 = !{ptr @triton_poi_fused_mean_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_sub_sum_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_sub_sum_2", linkageName: "triton_poi_fused_mean_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 30, scope: !7)
!12 = !DILocation(line: 26, column: 19, scope: !7)
!13 = !DILocation(line: 28, column: 30, scope: !7)
!14 = !DILocation(line: 28, column: 19, scope: !7)
!15 = !DILocation(line: 30, column: 30, scope: !7)
!16 = !DILocation(line: 30, column: 19, scope: !7)
!17 = !DILocation(line: 32, column: 20, scope: !7)
!18 = !DILocation(line: 34, column: 31, scope: !7)
!19 = !DILocation(line: 34, column: 20, scope: !7)
!20 = !DILocation(line: 36, column: 31, scope: !7)
!21 = !DILocation(line: 36, column: 20, scope: !7)
!22 = !DILocation(line: 38, column: 31, scope: !7)
!23 = !DILocation(line: 38, column: 20, scope: !7)
!24 = !DILocation(line: 40, column: 31, scope: !7)
!25 = !DILocation(line: 40, column: 20, scope: !7)
!26 = !DILocation(line: 42, column: 31, scope: !7)
!27 = !DILocation(line: 42, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 31, scope: !7)
!29 = !DILocation(line: 44, column: 20, scope: !7)
!30 = !DILocation(line: 46, column: 31, scope: !7)
!31 = !DILocation(line: 46, column: 20, scope: !7)
!32 = !DILocation(line: 48, column: 31, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 50, column: 31, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 52, column: 31, scope: !7)
!37 = !DILocation(line: 52, column: 20, scope: !7)
!38 = !DILocation(line: 54, column: 31, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 56, column: 31, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 58, column: 31, scope: !7)
!43 = !DILocation(line: 58, column: 20, scope: !7)
!44 = !DILocation(line: 60, column: 31, scope: !7)
!45 = !DILocation(line: 60, column: 20, scope: !7)
!46 = !DILocation(line: 62, column: 31, scope: !7)
!47 = !DILocation(line: 62, column: 20, scope: !7)
!48 = !DILocation(line: 64, column: 18, scope: !7)
!49 = !DILocation(line: 65, column: 18, scope: !7)
!50 = !DILocation(line: 66, column: 19, scope: !7)
!51 = !DILocation(line: 68, column: 20, scope: !7)
!52 = !DILocation(line: 69, column: 20, scope: !7)
!53 = !DILocation(line: 70, column: 20, scope: !7)
!54 = !DILocation(line: 71, column: 20, scope: !7)
!55 = !DILocation(line: 75, column: 20, scope: !7)
!56 = !DILocation(line: 76, column: 20, scope: !7)
!57 = !DILocation(line: 77, column: 20, scope: !7)
!58 = !DILocation(line: 78, column: 20, scope: !7)
!59 = !DILocation(line: 79, column: 20, scope: !7)
!60 = !DILocation(line: 83, column: 20, scope: !7)
!61 = !DILocation(line: 84, column: 20, scope: !7)
!62 = !DILocation(line: 85, column: 20, scope: !7)
!63 = !DILocation(line: 86, column: 65, scope: !7)
!64 = !DILocation(line: 86, column: 4, scope: !7)
