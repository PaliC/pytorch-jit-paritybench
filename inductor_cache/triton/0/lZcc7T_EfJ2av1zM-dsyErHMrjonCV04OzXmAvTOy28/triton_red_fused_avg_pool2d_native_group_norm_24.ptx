//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_avg_pool2d_native_group_norm_24 // -- Begin function triton_red_fused_avg_pool2d_native_group_norm_24
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_avg_pool2d_native_group_norm_24
.visible .entry triton_red_fused_avg_pool2d_native_group_norm_24(
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_24_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_24_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_24_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_24_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_avg_pool2d_native_group_norm_24_param_4,
	.param .u32 triton_red_fused_avg_pool2d_native_group_norm_24_param_5,
	.param .u32 triton_red_fused_avg_pool2d_native_group_norm_24_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<67>;
	.reg .b64 	%rd<42>;
	.loc	1 19 0                          // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd12, [triton_red_fused_avg_pool2d_native_group_norm_24_param_4];
	ld.param.u64 	%rd11, [triton_red_fused_avg_pool2d_native_group_norm_24_param_3];
	ld.param.u64 	%rd10, [triton_red_fused_avg_pool2d_native_group_norm_24_param_2];
	ld.param.u64 	%rd9, [triton_red_fused_avg_pool2d_native_group_norm_24_param_0];
	ld.param.u64 	%rd19, [triton_red_fused_avg_pool2d_native_group_norm_24_param_1];
$L__tmp0:
	.loc	1 22 28                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:22:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:22:33
	shl.b32 	%r21, %r9, 6;
	.loc	1 23 44                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 3;
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r22, %r1, 2, 6;
	.loc	1 23 23                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:23:23
	or.b32  	%r4, %r21, %r3;
	or.b32  	%r5, %r21, %r22;
	.loc	1 24 21                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:24:21
	setp.lt.s32 	%p1, %r4, 128;
	setp.lt.s32 	%p10, %r5, 128;
	.loc	1 36 53                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:53
	shl.b32 	%r23, %r4, 9;
	.loc	1 52 38                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:52:38
	shl.b32 	%r24, %r5, 7;
	shr.u32 	%r25, %r1, 5;
	and.b32  	%r26, %r25, 6;
	.loc	1 30 36                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:30:36
	or.b32  	%r27, %r26, %r23;
	or.b32  	%r28, %r24, %r2;
	shl.b32 	%r29, %r1, 2;
	and.b32  	%r30, %r29, 252;
	bfe.u32 	%r6, %r1, 6, 2;
	or.b32  	%r31, %r30, %r6;
	and.b32  	%r32, %r1, 255;
	mov.u32 	%r33, global_smem;
	add.s32 	%r34, %r33, %r30;
	shl.b32 	%r35, %r31, 2;
	add.s32 	%r58, %r34, %r35;
	and.b32  	%r36, %r1, 252;
	add.s32 	%r37, %r33, %r36;
	shl.b32 	%r38, %r32, 2;
	add.s32 	%r8, %r37, %r38;
	.loc	1 36 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:34
	mul.wide.s32 	%rd20, %r27, 4;
	add.s64 	%rd13, %rd9, %rd20;
	mov.b32 	%r11, 0;
	.loc	1 36 58                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:58
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd13 + 0 ];
	@!%p1 mov.u32 %r10, %r11;
	// end inline asm
	.loc	1 37 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:37:34
	add.s64 	%rd14, %rd13, 4;
	.loc	1 37 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:37:62
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd14 + 0 ];
	@!%p1 mov.u32 %r12, %r11;
	// end inline asm
	.loc	1 38 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:38:34
	add.s64 	%rd15, %rd13, 32;
	.loc	1 38 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:38:62
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd15 + 0 ];
	@!%p1 mov.u32 %r14, %r11;
	// end inline asm
	.loc	1 39 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:39:34
	add.s64 	%rd16, %rd13, 36;
	.loc	1 39 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:39:62
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd16 + 0 ];
	@!%p1 mov.u32 %r16, %r11;
	// end inline asm
	.loc	1 36 58                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:58
	mov.b32 	%f10, %r10;
	.loc	1 37 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:37:62
	mov.b32 	%f11, %r12;
	.loc	1 40 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:40:22
	add.f32 	%f12, %f10, %f11;
	.loc	1 38 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:38:62
	mov.b32 	%f13, %r14;
	.loc	1 41 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:41:22
	add.f32 	%f14, %f12, %f13;
	.loc	1 39 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:39:62
	mov.b32 	%f15, %r16;
	.loc	1 42 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:42:22
	add.f32 	%f16, %f14, %f15;
	.loc	1 44 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:44:22
	mul.f32 	%f17, %f16, 0f3E800000;
	.loc	1 52 29                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:52:29
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd17, %rd19, %rd21;
	.loc	1 52 49                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:52:49
	bar.sync 	0;
	mov.b32 	%r19, %f17;
	mov.pred 	%p22, -1;
	// begin inline asm
	@%p22 st.shared.b32 [ %r58 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r20, [%r8];
	// begin inline asm
	@%p10 st.global.b32 [ %rd17 + 0 ], { %r20 };
	// end inline asm
	.loc	1 51 66                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:51:66
	selp.f32 	%f64, 0f3F800000, 0f00000000, %p1;
	.loc	1 49 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:49:62
	selp.f32 	%f66, %f17, 0f00000000, %p1;
	.loc	1 30 36                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:30:36
	shl.b32 	%r39, %r9, 13;
	shl.b32 	%r40, %r22, 7;
	or.b32  	%r41, %r39, %r40;
	or.b32  	%r42, %r41, %r2;
	mul.wide.s32 	%rd22, %r42, 4;
	add.s64 	%rd23, %rd22, %rd19;
	add.s64 	%rd40, %rd23, 16;
	shl.b32 	%r43, %r9, 15;
	shl.b32 	%r44, %r3, 9;
	or.b32  	%r45, %r43, %r44;
	or.b32  	%r46, %r45, %r26;
	cvt.u64.u32 	%rd24, %r46;
	shl.b64 	%rd25, %rd24, 32;
	or.b64  	%rd39, %rd25, 68719476736;
	mov.f32 	%f65, 0f00000000;
	mov.u64 	%rd41, 0;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:34
	shr.s64 	%rd31, %rd39, 30;
	add.s64 	%rd26, %rd9, %rd31;
	.loc	1 36 58                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:36:58
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r47 }, [ %rd26 + 0 ];
	@!%p1 mov.u32 %r47, %r11;
	// end inline asm
	mov.b32 	%f18, %r47;
	.loc	1 37 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:37:34
	or.b64  	%rd32, %rd31, 4;
	add.s64 	%rd27, %rd9, %rd32;
	.loc	1 37 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:37:62
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r49 }, [ %rd27 + 0 ];
	@!%p1 mov.u32 %r49, %r11;
	// end inline asm
	mov.b32 	%f19, %r49;
	.loc	1 38 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:38:34
	or.b64  	%rd33, %rd31, 32;
	add.s64 	%rd28, %rd9, %rd33;
	.loc	1 38 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:38:62
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r51 }, [ %rd28 + 0 ];
	@!%p1 mov.u32 %r51, %r11;
	// end inline asm
	mov.b32 	%f20, %r51;
	.loc	1 39 34                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:39:34
	or.b64  	%rd34, %rd31, 36;
	add.s64 	%rd29, %rd9, %rd34;
	.loc	1 39 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:39:62
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r53 }, [ %rd29 + 0 ];
	@!%p1 mov.u32 %r53, %r11;
	// end inline asm
	mov.b32 	%f21, %r53;
	.loc	1 40 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:40:22
	add.f32 	%f22, %f18, %f19;
	.loc	1 41 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:41:22
	add.f32 	%f23, %f22, %f20;
	.loc	1 42 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:42:22
	add.f32 	%f24, %f23, %f21;
	.loc	1 44 22                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:44:22
	mul.f32 	%f25, %f24, 0f3E800000;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	neg.f32 	%f26, %f66;
	fma.rn.f32 	%f27, %f24, 0f3E800000, %f26;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f28, %f64, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r56, %f27;
	mov.b32 	%r57, %f28;
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f29, %r55;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f30, %f66, %f29;
	.loc	2 186 39                        // triton_helpers.py:186:39
	neg.f32 	%f31, %f30;
	fma.rn.f32 	%f32, %f24, 0f3E800000, %f31;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f33, %f27, %f32, %f65;
$L__tmp2:
	.loc	1 49 62                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:49:62
	selp.f32 	%f66, %f30, %f66, %p1;
	.loc	1 50 58                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:50:58
	selp.f32 	%f65, %f33, %f65, %p1;
	.loc	1 51 66                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:51:66
	selp.f32 	%f64, %f28, %f64, %p1;
	.loc	1 52 49                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:52:49
	bar.sync 	0;
	mov.b32 	%r59, %f25;
	// begin inline asm
	@%p22 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r60, [%r8];
	// begin inline asm
	@%p10 st.global.b32 [ %rd40 + 0 ], { %r60 };
	// end inline asm
	.loc	1 30 36                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:30:36
	add.s64 	%rd41, %rd41, 4;
	add.s64 	%rd40, %rd40, 16;
	add.s64 	%rd39, %rd39, 68719476736;
	setp.lt.u64 	%p21, %rd41, 124;
	@%p21 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	shl.b32 	%r91, %r6, 2;
	shl.b32 	%r92, %r3, 4;
	or.b32  	%r93, %r92, %r91;
	add.s32 	%r61, %r33, %r93;
	mov.b32 	%r62, %f66;
	// begin inline asm
	@%p22 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r95, %r33, 1024;
	add.s32 	%r63, %r95, %r93;
	mov.b32 	%r64, %f65;
	// begin inline asm
	@%p22 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r96, %r33, 2048;
	add.s32 	%r65, %r96, %r93;
	mov.b32 	%r66, %f64;
	// begin inline asm
	@%p22 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p25, %r1, 256;
	add.s32 	%r68, %r33, %r29;
	// begin inline asm
	@%p25 ld.shared.b32 %r67, [ %r68 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r67;
	add.s32 	%r70, %r95, %r29;
	// begin inline asm
	@%p25 ld.shared.b32 %r69, [ %r70 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r69;
	add.s32 	%r72, %r96, %r29;
	// begin inline asm
	@%p25 ld.shared.b32 %r71, [ %r72 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r71;
	shfl.sync.bfly.b32	%r98, %r67, 2, 31, -1;
	mov.b32 	%f37, %r98;
	shfl.sync.bfly.b32	%r99, %r69, 2, 31, -1;
	mov.b32 	%f38, %r99;
	shfl.sync.bfly.b32	%r74, %r71, 2, 31, -1;
	mov.b32 	%f39, %r74;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f40, %f37, %f34;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f41, %f36, %f39;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p35, %f41, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r75, %f41;
	// begin inline asm
	div.full.f32 %r73, %r74, %r75;
	// end inline asm
	mov.b32 	%f42, %r73;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f43, 0f00000000, %f42, %p35;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f44, %f40, %f43, %f34;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f45, %f35, %f38;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f46, %f40, %f40;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f47, %f46, %f36;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f48, %f47, %f43, %f45;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r100, %f44;
	shfl.sync.bfly.b32	%r101, %r100, 1, 31, -1;
	mov.b32 	%f49, %r101;
	mov.b32 	%r102, %f48;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f50, %r103;
	shfl.sync.bfly.b32	%r77, %r75, 1, 31, -1;
	mov.b32 	%f51, %r77;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f52, %f49, %f44;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f53, %f41, %f51;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p36, %f53, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r78, %f53;
	// begin inline asm
	div.full.f32 %r76, %r77, %r78;
	// end inline asm
	mov.b32 	%f54, %r76;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f55, 0f00000000, %f54, %p36;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f56, %f52, %f55, %f44;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f57, %f48, %f50;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f58, %f52, %f52;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f59, %f41, %f58;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f60, %f55, %f59, %f57;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p37, %r2, 0;
	and.pred  	%p28, %p25, %p37;
	mov.b32 	%r80, %f56;
	// begin inline asm
	@%p28 st.shared.b32 [ %r68 + 0 ], %r80;
	// end inline asm
	mov.b32 	%r82, %f60;
	// begin inline asm
	@%p28 st.shared.b32 [ %r70 + 0 ], %r82;
	// end inline asm
	// begin inline asm
	@%p28 st.shared.b32 [ %r72 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r104, %r33, %r92;
	ld.shared.u32 	%r85, [%r104];
	add.s32 	%r105, %r95, %r92;
$L__tmp4:
	.loc	1 59 25                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:59:25
	mul.wide.s32 	%rd38, %r4, 4;
	add.s64 	%rd35, %rd10, %rd38;
	.loc	1 59 37                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:59:37
	setp.eq.s32 	%p38, %r6, 0;
	and.pred  	%p31, %p38, %p1;
	.loc	1 60 37                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:60:37
	ld.shared.u32 	%r86, [%r105];
	.loc	1 59 37                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:59:37
	// begin inline asm
	@%p31 st.global.b32 [ %rd35 + 0 ], { %r85 };
	// end inline asm
	.loc	1 60 25                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:60:25
	add.s64 	%rd36, %rd11, %rd38;
	.loc	1 60 37                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:60:37
	// begin inline asm
	@%p31 st.global.b32 [ %rd36 + 0 ], { %r86 };
	// end inline asm
	mov.b32 	%r89, 1124073472;
	.loc	1 62 20                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:62:20
	// begin inline asm
	div.full.f32 %r87, %r86, %r89;
	// end inline asm
	mov.b32 	%f61, %r87;
	.loc	1 64 20                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:64:20
	add.f32 	%f62, %f61, 0f3727C5AC;
	.loc	1 65 28                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:65:28
	rsqrt.approx.ftz.f32 	%f63, %f62;
	.loc	1 66 25                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:66:25
	add.s64 	%rd37, %rd12, %rd38;
	.loc	1 66 37                         // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:66:37
	mov.b32 	%r90, %f63;
	// begin inline asm
	@%p31 st.global.b32 [ %rd37 + 0 ], { %r90 };
	// end inline asm
	.loc	1 66 4                          // c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5w/c5wz7ctqcquzljbcks5u73pwutuwwyrsyvfne7nlac53bvasgdos.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 119
.b8 122
.b8 55
.b8 99
.b8 116
.b8 113
.b8 99
.b8 113
.b8 117
.b8 122
.b8 108
.b8 106
.b8 98
.b8 99
.b8 107
.b8 115
.b8 53
.b8 117
.b8 55
.b8 51
.b8 112
.b8 119
.b8 117
.b8 116
.b8 117
.b8 119
.b8 119
.b8 121
.b8 114
.b8 115
.b8 121
.b8 118
.b8 102
.b8 110
.b8 101
.b8 55
.b8 110
.b8 108
.b8 97
.b8 99
.b8 53
.b8 51
.b8 98
.b8 118
.b8 97
.b8 115
.b8 103
.b8 100
.b8 111
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 118
.b8 103
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 54                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
