//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_2 // -- Begin function triton_poi_fused_clone_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_2
.visible .entry triton_poi_fused_clone_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_2_param_3,
	.param .u32 triton_poi_fused_clone_2_param_4,
	.param .u32 triton_poi_fused_clone_2_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<96>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_clone_2_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_clone_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:22:33
	shl.b32 	%r19, %r1, 7;
	ld.param.u64 	%rd9, [triton_poi_fused_clone_2_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_clone_2_param_3];
	.loc	1 23 44                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:23:44
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	shl.b32 	%r22, %r20, 1;
	and.b32  	%r23, %r22, 126;
	.loc	1 23 23                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:23:23
	or.b32  	%r24, %r19, %r21;
	or.b32  	%r25, %r19, %r23;
	.loc	1 24 21                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:24:21
	setp.lt.s32 	%p11, %r24, 512;
	setp.lt.s32 	%p12, %r25, 512;
	.loc	1 25 28                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:25:33
	shl.b32 	%r26, %r2, 1;
	.loc	1 26 44                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:26:44
	bfe.u32 	%r27, %r20, 6, 1;
	.loc	1 26 23                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:26:23
	or.b32  	%r28, %r26, %r27;
	.loc	1 27 21                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:27:21
	setp.lt.s32 	%p13, %r26, 2;
	setp.lt.s32 	%p14, %r28, 2;
	.loc	1 29 21                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:29:21
	bfe.s32 	%r29, %r1, 24, 1;
	.loc	1 31 19                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:31:19
	shr.u32 	%r30, %r29, 30;
	.loc	1 29 21                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:29:21
	add.s32 	%r31, %r24, %r30;
	shr.s32 	%r32, %r31, 2;
	shr.u32 	%r33, %r29, 27;
	add.s32 	%r34, %r24, %r33;
	shr.s32 	%r35, %r34, 5;
	.loc	1 29 26                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:29:26
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 30;
	add.s32 	%r38, %r35, %r37;
	and.b32  	%r39, %r38, -4;
	sub.s32 	%r40, %r35, %r39;
	shr.u32 	%r41, %r31, 31;
	add.s32 	%r42, %r32, %r41;
	and.b32  	%r43, %r42, 536870910;
	sub.s32 	%r44, %r32, %r43;
	.loc	1 31 19                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:31:19
	add.s32 	%r45, %r25, %r30;
	and.b32  	%r46, %r45, -4;
	sub.s32 	%r47, %r25, %r46;
	.loc	1 32 19                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:32:19
	shr.u32 	%r48, %r29, 25;
	add.s32 	%r49, %r25, %r48;
	.loc	1 35 37                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:37
	shl.b32 	%r50, %r2, 3;
	.loc	1 35 44                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:44
	shl.b32 	%r51, %r44, 3;
	.loc	1 35 35                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:35
	add.s32 	%r52, %r51, %r40;
	.loc	1 35 42                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:42
	add.s32 	%r53, %r52, %r50;
	add.s32 	%r54, %r53, 4;
	.loc	1 35 30                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:30
	mul.wide.s32 	%rd11, %r53, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r54, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 35 57                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:57
	and.pred  	%p1, %p13, %p11;
	and.pred  	%p5, %p12, %p14;
	.loc	1 35 49                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:35:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	and.b32  	%r55, %r22, 254;
	shl.b32 	%r56, %r21, 2;
	mov.u32 	%r57, global_smem;
	add.s32 	%r5, %r57, %r56;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 520;
	// begin inline asm
	@%p3 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r58, %r20, 3;
	and.b32  	%r59, %r58, 8;
	add.s32 	%r60, %r57, %r59;
	shl.b32 	%r61, %r55, 2;
	add.s32 	%r62, %r60, %r61;
	ld.shared.v2.f32 	{%f1, %f2}, [%r62];
	.loc	1 33 21                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:33:21
	shr.u32 	%r63, %r29, 29;
	add.s32 	%r64, %r25, %r63;
	shr.s32 	%r65, %r64, 3;
	shr.s32 	%r66, %r45, 2;
	.loc	1 33 26                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:33:26
	shr.u32 	%r67, %r45, 31;
	add.s32 	%r68, %r66, %r67;
	and.b32  	%r69, %r68, 33554430;
	sub.s32 	%r70, %r66, %r69;
	shr.s32 	%r71, %r64, 31;
	shr.u32 	%r72, %r71, 28;
	add.s32 	%r73, %r65, %r72;
	and.b32  	%r74, %r73, 1073741808;
	sub.s32 	%r75, %r65, %r74;
	.loc	1 36 45                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:36:45
	shl.b32 	%r76, %r75, 2;
	shl.b32 	%r77, %r70, 7;
	shl.b32 	%r78, %r28, 6;
	shl.b32 	%r79, %r49, 1;
	and.b32  	%r80, %r79, -256;
	.loc	1 36 59                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:36:59
	add.s32 	%r81, %r80, %r77;
	add.s32 	%r82, %r78, %r76;
	add.s32 	%r83, %r82, %r81;
	.loc	1 36 35                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:36:35
	add.s32 	%r84, %r83, %r47;
	.loc	1 36 30                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:36:30
	mul.wide.s32 	%rd13, %r84, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 36 68                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:36:68
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 37 30                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:37:30
	add.s64 	%rd4, %rd9, %rd11;
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 37 49                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:37:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r12;
	.loc	1 38 18                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:38:18
	mul.f32 	%f7, %f1, %f3;
	mul.f32 	%f8, %f2, %f4;
	bar.sync 	0;
	shl.b32 	%r85, %r20, 2;
	and.b32  	%r86, %r85, 252;
	or.b32  	%r87, %r86, %r27;
	shl.b32 	%r88, %r87, 2;
	mov.b32 	%r14, %f7;
	shl.b32 	%r89, %r86, 1;
	add.s32 	%r90, %r57, %r89;
	add.s32 	%r13, %r90, %r88;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r13, 12;
	mov.b32 	%r16, %f8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r91, %r55, 1;
	add.s32 	%r92, %r57, %r91;
	add.s32 	%r93, %r92, %r61;
	ld.shared.f32 	%f9, [%r93];
	ld.shared.f32 	%f10, [%r93+4];
	.loc	1 39 18                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:39:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 40 30                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:40:30
	add.s32 	%r94, %r24, %r2;
	shl.b32 	%r95, %r94, 1;
	.loc	1 40 25                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:40:25
	mul.wide.s32 	%rd14, %r95, 4;
	add.s64 	%rd6, %rd10, %rd14;
	.loc	1 40 43                         // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:40:43
	mov.b32 	%r17, %f11;
	mov.b32 	%r18, %f12;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r17, %r18 };
	// end inline asm
	.loc	1 40 4                          // cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ij/cijdg7re2quz2cpdittznwettu753tqjetzofu7evhnnhyzxkdp4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 106
.b8 100
.b8 103
.b8 55
.b8 114
.b8 101
.b8 50
.b8 113
.b8 117
.b8 122
.b8 50
.b8 99
.b8 112
.b8 100
.b8 105
.b8 116
.b8 116
.b8 122
.b8 110
.b8 119
.b8 101
.b8 116
.b8 116
.b8 117
.b8 55
.b8 53
.b8 51
.b8 116
.b8 113
.b8 106
.b8 101
.b8 116
.b8 122
.b8 111
.b8 102
.b8 117
.b8 55
.b8 101
.b8 118
.b8 104
.b8 110
.b8 110
.b8 104
.b8 121
.b8 122
.b8 120
.b8 107
.b8 100
.b8 112
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
