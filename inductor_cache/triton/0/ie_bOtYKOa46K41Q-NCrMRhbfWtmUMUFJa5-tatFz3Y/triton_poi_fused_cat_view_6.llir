; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_view_6(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %.fr = freeze i32 %4, !dbg !11
  %5 = shl i32 %.fr, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = or disjoint i32 %9, 512, !dbg !13
  %14 = or disjoint i32 %9, 513, !dbg !13
  %15 = or disjoint i32 %9, 514, !dbg !13
  %16 = or disjoint i32 %9, 515, !dbg !13
  %17 = srem i32 %9, 576, !dbg !14
  %18 = srem i32 %10, 576, !dbg !14
  %19 = srem i32 %11, 576, !dbg !14
  %20 = srem i32 %12, 576, !dbg !14
  %21 = srem i32 %13, 576, !dbg !14
  %22 = srem i32 %14, 576, !dbg !14
  %23 = srem i32 %15, 576, !dbg !14
  %24 = srem i32 %16, 576, !dbg !14
  %25 = icmp slt i32 %17, 192, !dbg !15
  %26 = icmp slt i32 %21, 192, !dbg !15
  %.lhs.trunc = trunc nsw i32 %17 to i16, !dbg !16
  %27 = sdiv i16 %.lhs.trunc, 3, !dbg !16
  %.lhs.trunc17 = trunc nsw i32 %18 to i16, !dbg !16
  %28 = sdiv i16 %.lhs.trunc17, 3, !dbg !16
  %.lhs.trunc19 = trunc nsw i32 %19 to i16, !dbg !16
  %29 = sdiv i16 %.lhs.trunc19, 3, !dbg !16
  %.lhs.trunc21 = trunc nsw i32 %20 to i16, !dbg !16
  %30 = sdiv i16 %.lhs.trunc21, 3, !dbg !16
  %.lhs.trunc23 = trunc nsw i32 %21 to i16, !dbg !16
  %.lhs.trunc23.frozen = freeze i16 %.lhs.trunc23, !dbg !16
  %31 = sdiv i16 %.lhs.trunc23.frozen, 3, !dbg !16
  %.lhs.trunc25 = trunc nsw i32 %22 to i16, !dbg !16
  %.lhs.trunc25.frozen = freeze i16 %.lhs.trunc25, !dbg !16
  %32 = sdiv i16 %.lhs.trunc25.frozen, 3, !dbg !16
  %.lhs.trunc27 = trunc nsw i32 %23 to i16, !dbg !16
  %.lhs.trunc27.frozen = freeze i16 %.lhs.trunc27, !dbg !16
  %33 = sdiv i16 %.lhs.trunc27.frozen, 3, !dbg !16
  %.lhs.trunc29 = trunc nsw i32 %24 to i16, !dbg !16
  %.lhs.trunc29.frozen = freeze i16 %.lhs.trunc29, !dbg !16
  %34 = sdiv i16 %.lhs.trunc29.frozen, 3, !dbg !16
  %35 = srem i16 %27, 64, !dbg !17
  %36 = srem i16 %31, 64, !dbg !17
  %37 = srem i16 %32, 64, !dbg !17
  %38 = srem i16 %33, 64, !dbg !17
  %39 = srem i16 %34, 64, !dbg !17
  %narrow = mul nsw i16 %35, 9, !dbg !18
  %40 = sext i16 %narrow to i32, !dbg !18
  %narrow164 = mul nsw i16 %36, 9, !dbg !18
  %41 = sext i16 %narrow164 to i32, !dbg !18
  %narrow165 = mul nsw i16 %37, 9, !dbg !18
  %42 = sext i16 %narrow165 to i32, !dbg !18
  %narrow166 = mul nsw i16 %38, 9, !dbg !18
  %43 = sext i16 %narrow166 to i32, !dbg !18
  %narrow167 = mul nsw i16 %39, 9, !dbg !18
  %44 = sext i16 %narrow167 to i32, !dbg !18
  %45 = sub nsw i32 %9, %17, !dbg !19
  %46 = sub nsw i32 %13, %21, !dbg !19
  %47 = mul i16 %27, 3, !dbg !20
  %.decomposed = sub i16 %.lhs.trunc, %47, !dbg !20
  %.sext48 = sext i16 %.decomposed to i32, !dbg !20
  %48 = insertelement <2 x i16> poison, i16 %28, i64 0, !dbg !17
  %49 = insertelement <2 x i16> %48, i16 %.lhs.trunc17, i64 1, !dbg !17
  %50 = srem <2 x i16> %49, <i16 64, i16 3>, !dbg !17
  %51 = extractelement <2 x i16> %50, i64 0, !dbg !18
  %narrow161 = mul nsw i16 %51, 9, !dbg !18
  %52 = insertelement <2 x i16> poison, i16 %29, i64 0, !dbg !17
  %53 = insertelement <2 x i16> %52, i16 %.lhs.trunc19, i64 1, !dbg !17
  %54 = srem <2 x i16> %53, <i16 64, i16 3>, !dbg !17
  %55 = extractelement <2 x i16> %54, i64 0, !dbg !18
  %narrow162 = mul nsw i16 %55, 9, !dbg !18
  %56 = insertelement <2 x i16> poison, i16 %30, i64 0, !dbg !17
  %57 = insertelement <2 x i16> %56, i16 %.lhs.trunc21, i64 1, !dbg !17
  %58 = srem <2 x i16> %57, <i16 64, i16 3>, !dbg !17
  %59 = extractelement <2 x i16> %58, i64 0, !dbg !18
  %narrow163 = mul nsw i16 %59, 9, !dbg !18
  %60 = mul i16 %31, 3, !dbg !20
  %.decomposed209 = sub i16 %.lhs.trunc23.frozen, %60, !dbg !20
  %.sext56 = sext i16 %.decomposed209 to i32, !dbg !20
  %61 = mul i16 %32, 3, !dbg !20
  %.decomposed210 = sub i16 %.lhs.trunc25.frozen, %61, !dbg !20
  %.sext58 = sext i16 %.decomposed210 to i32, !dbg !20
  %62 = mul i16 %33, 3, !dbg !20
  %.decomposed211 = sub i16 %.lhs.trunc27.frozen, %62, !dbg !20
  %.sext60 = sext i16 %.decomposed211 to i32, !dbg !20
  %63 = mul i16 %34, 3, !dbg !20
  %.decomposed212 = sub i16 %.lhs.trunc29.frozen, %63, !dbg !20
  %.sext62 = sext i16 %.decomposed212 to i32, !dbg !20
  %64 = add i32 %45, %.sext48, !dbg !21
  %65 = add i32 %64, %40, !dbg !22
  %66 = extractelement <2 x i16> %50, i64 1, !dbg !21
  %narrow200 = add nsw i16 %narrow161, %66, !dbg !21
  %67 = sext i16 %narrow200 to i32, !dbg !21
  %68 = add i32 %45, %67, !dbg !22
  %69 = extractelement <2 x i16> %54, i64 1, !dbg !21
  %narrow201 = add nsw i16 %narrow162, %69, !dbg !21
  %70 = sext i16 %narrow201 to i32, !dbg !21
  %71 = add i32 %45, %70, !dbg !22
  %72 = extractelement <2 x i16> %58, i64 1, !dbg !21
  %narrow202 = add nsw i16 %narrow163, %72, !dbg !21
  %73 = sext i16 %narrow202 to i32, !dbg !21
  %74 = add i32 %45, %73, !dbg !22
  %75 = add i32 %46, %.sext56, !dbg !21
  %76 = add i32 %75, %41, !dbg !22
  %77 = add i32 %46, %.sext58, !dbg !21
  %78 = add i32 %77, %42, !dbg !22
  %79 = add i32 %46, %.sext60, !dbg !21
  %80 = add i32 %79, %43, !dbg !22
  %81 = add i32 %46, %.sext62, !dbg !21
  %82 = add i32 %81, %44, !dbg !22
  %83 = sext i32 %65 to i64, !dbg !23
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !23
  %85 = sext i32 %68 to i64, !dbg !23
  %86 = getelementptr float, ptr addrspace(1) %1, i64 %85, !dbg !23
  %87 = sext i32 %71 to i64, !dbg !23
  %88 = getelementptr float, ptr addrspace(1) %1, i64 %87, !dbg !23
  %89 = sext i32 %74 to i64, !dbg !23
  %90 = getelementptr float, ptr addrspace(1) %1, i64 %89, !dbg !23
  %91 = sext i32 %76 to i64, !dbg !23
  %92 = getelementptr float, ptr addrspace(1) %1, i64 %91, !dbg !23
  %93 = sext i32 %78 to i64, !dbg !23
  %94 = getelementptr float, ptr addrspace(1) %1, i64 %93, !dbg !23
  %95 = sext i32 %80 to i64, !dbg !23
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %95, !dbg !23
  %97 = sext i32 %82 to i64, !dbg !23
  %98 = getelementptr float, ptr addrspace(1) %1, i64 %97, !dbg !23
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %86, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %90, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %92, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %96, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %98, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %107 = add nsw i32 %17, -192, !dbg !25
  %108 = icmp ult i32 %107, 192, !dbg !25
  %109 = add nsw i32 %21, -192, !dbg !25
  %110 = icmp ult i32 %109, 192, !dbg !25
  %.lhs.trunc63 = trunc nsw i32 %107 to i16, !dbg !26
  %.lhs.trunc63.frozen = freeze i16 %.lhs.trunc63, !dbg !26
  %111 = sdiv i16 %.lhs.trunc63.frozen, 3, !dbg !26
  %112 = trunc nsw i32 %18 to i16, !dbg !26
  %.lhs.trunc65 = add nsw i16 %112, -192, !dbg !26
  %.lhs.trunc65.frozen = freeze i16 %.lhs.trunc65, !dbg !26
  %113 = sdiv i16 %.lhs.trunc65.frozen, 3, !dbg !26
  %114 = trunc nsw i32 %19 to i16, !dbg !26
  %.lhs.trunc67 = add nsw i16 %114, -192, !dbg !26
  %.lhs.trunc67.frozen = freeze i16 %.lhs.trunc67, !dbg !26
  %115 = sdiv i16 %.lhs.trunc67.frozen, 3, !dbg !26
  %116 = trunc nsw i32 %20 to i16, !dbg !26
  %.lhs.trunc69 = add nsw i16 %116, -192, !dbg !26
  %.lhs.trunc69.frozen = freeze i16 %.lhs.trunc69, !dbg !26
  %117 = sdiv i16 %.lhs.trunc69.frozen, 3, !dbg !26
  %.lhs.trunc71 = trunc nsw i32 %109 to i16, !dbg !26
  %.lhs.trunc71.frozen = freeze i16 %.lhs.trunc71, !dbg !26
  %118 = sdiv i16 %.lhs.trunc71.frozen, 3, !dbg !26
  %119 = trunc nsw i32 %22 to i16, !dbg !26
  %.lhs.trunc73 = add nsw i16 %119, -192, !dbg !26
  %.lhs.trunc73.frozen = freeze i16 %.lhs.trunc73, !dbg !26
  %120 = sdiv i16 %.lhs.trunc73.frozen, 3, !dbg !26
  %121 = trunc nsw i32 %23 to i16, !dbg !26
  %.lhs.trunc75 = add nsw i16 %121, -192, !dbg !26
  %.lhs.trunc75.frozen = freeze i16 %.lhs.trunc75, !dbg !26
  %122 = sdiv i16 %.lhs.trunc75.frozen, 3, !dbg !26
  %123 = trunc nsw i32 %24 to i16, !dbg !26
  %.lhs.trunc77 = add nsw i16 %123, -192, !dbg !26
  %.lhs.trunc77.frozen = freeze i16 %.lhs.trunc77, !dbg !26
  %124 = sdiv i16 %.lhs.trunc77.frozen, 3, !dbg !26
  %125 = srem i16 %111, 64, !dbg !27
  %126 = srem i16 %113, 64, !dbg !27
  %127 = srem i16 %115, 64, !dbg !27
  %128 = srem i16 %117, 64, !dbg !27
  %129 = srem i16 %118, 64, !dbg !27
  %130 = srem i16 %120, 64, !dbg !27
  %131 = srem i16 %122, 64, !dbg !27
  %132 = srem i16 %124, 64, !dbg !27
  %narrow168 = mul nsw i16 %125, 9, !dbg !28
  %narrow169 = mul nsw i16 %126, 9, !dbg !28
  %narrow170 = mul nsw i16 %127, 9, !dbg !28
  %narrow171 = mul nsw i16 %128, 9, !dbg !28
  %narrow172 = mul nsw i16 %129, 9, !dbg !28
  %narrow173 = mul nsw i16 %130, 9, !dbg !28
  %narrow174 = mul nsw i16 %131, 9, !dbg !28
  %narrow175 = mul nsw i16 %132, 9, !dbg !28
  %narrow176 = add nsw i16 %narrow168, 3, !dbg !29
  %133 = sext i16 %narrow176 to i32, !dbg !29
  %narrow177 = add nsw i16 %narrow169, 3, !dbg !29
  %narrow178 = add nsw i16 %narrow170, 3, !dbg !29
  %narrow179 = add nsw i16 %narrow171, 3, !dbg !29
  %narrow180 = add nsw i16 %narrow172, 3, !dbg !29
  %134 = sext i16 %narrow180 to i32, !dbg !29
  %narrow181 = add nsw i16 %narrow173, 3, !dbg !29
  %135 = sext i16 %narrow181 to i32, !dbg !29
  %narrow182 = add nsw i16 %narrow174, 3, !dbg !29
  %136 = sext i16 %narrow182 to i32, !dbg !29
  %narrow183 = add nsw i16 %narrow175, 3, !dbg !29
  %137 = sext i16 %narrow183 to i32, !dbg !29
  %138 = mul i16 %111, 3, !dbg !30
  %.decomposed213 = sub i16 %.lhs.trunc63.frozen, %138, !dbg !30
  %.sext96 = sext i16 %.decomposed213 to i32, !dbg !30
  %139 = mul i16 %113, 3, !dbg !30
  %.decomposed214 = sub i16 %.lhs.trunc65.frozen, %139, !dbg !30
  %140 = mul i16 %115, 3, !dbg !30
  %.decomposed215 = sub i16 %.lhs.trunc67.frozen, %140, !dbg !30
  %141 = mul i16 %117, 3, !dbg !30
  %.decomposed216 = sub i16 %.lhs.trunc69.frozen, %141, !dbg !30
  %142 = mul i16 %118, 3, !dbg !30
  %.decomposed217 = sub i16 %.lhs.trunc71.frozen, %142, !dbg !30
  %.sext104 = sext i16 %.decomposed217 to i32, !dbg !30
  %143 = mul i16 %120, 3, !dbg !30
  %.decomposed218 = sub i16 %.lhs.trunc73.frozen, %143, !dbg !30
  %.sext106 = sext i16 %.decomposed218 to i32, !dbg !30
  %144 = mul i16 %122, 3, !dbg !30
  %.decomposed219 = sub i16 %.lhs.trunc75.frozen, %144, !dbg !30
  %.sext108 = sext i16 %.decomposed219 to i32, !dbg !30
  %145 = mul i16 %124, 3, !dbg !30
  %.decomposed220 = sub i16 %.lhs.trunc77.frozen, %145, !dbg !30
  %.sext110 = sext i16 %.decomposed220 to i32, !dbg !30
  %146 = add i32 %45, %.sext96, !dbg !31
  %147 = add i32 %146, %133, !dbg !32
  %narrow203 = add nsw i16 %narrow177, %.decomposed214, !dbg !31
  %148 = sext i16 %narrow203 to i32, !dbg !31
  %149 = add i32 %45, %148, !dbg !32
  %narrow204 = add nsw i16 %narrow178, %.decomposed215, !dbg !31
  %150 = sext i16 %narrow204 to i32, !dbg !31
  %151 = add i32 %45, %150, !dbg !32
  %narrow205 = add nsw i16 %narrow179, %.decomposed216, !dbg !31
  %152 = sext i16 %narrow205 to i32, !dbg !31
  %153 = add i32 %45, %152, !dbg !32
  %154 = add i32 %46, %.sext104, !dbg !31
  %155 = add i32 %154, %134, !dbg !32
  %156 = add i32 %46, %.sext106, !dbg !31
  %157 = add i32 %156, %135, !dbg !32
  %158 = add i32 %46, %.sext108, !dbg !31
  %159 = add i32 %158, %136, !dbg !32
  %160 = add i32 %46, %.sext110, !dbg !31
  %161 = add i32 %160, %137, !dbg !32
  %162 = sext i32 %147 to i64, !dbg !33
  %163 = getelementptr float, ptr addrspace(1) %1, i64 %162, !dbg !33
  %164 = sext i32 %149 to i64, !dbg !33
  %165 = getelementptr float, ptr addrspace(1) %1, i64 %164, !dbg !33
  %166 = sext i32 %151 to i64, !dbg !33
  %167 = getelementptr float, ptr addrspace(1) %1, i64 %166, !dbg !33
  %168 = sext i32 %153 to i64, !dbg !33
  %169 = getelementptr float, ptr addrspace(1) %1, i64 %168, !dbg !33
  %170 = sext i32 %155 to i64, !dbg !33
  %171 = getelementptr float, ptr addrspace(1) %1, i64 %170, !dbg !33
  %172 = sext i32 %157 to i64, !dbg !33
  %173 = getelementptr float, ptr addrspace(1) %1, i64 %172, !dbg !33
  %174 = sext i32 %159 to i64, !dbg !33
  %175 = getelementptr float, ptr addrspace(1) %1, i64 %174, !dbg !33
  %176 = sext i32 %161 to i64, !dbg !33
  %177 = getelementptr float, ptr addrspace(1) %1, i64 %176, !dbg !33
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %163, i1 %108, i32 0, i1 %108) #1, !dbg !34
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %165, i1 %108, i32 0, i1 %108) #1, !dbg !34
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %167, i1 %108, i32 0, i1 %108) #1, !dbg !34
  %181 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %169, i1 %108, i32 0, i1 %108) #1, !dbg !34
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 %110, i32 0, i1 %110) #1, !dbg !34
  %183 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %173, i1 %110, i32 0, i1 %110) #1, !dbg !34
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %175, i1 %110, i32 0, i1 %110) #1, !dbg !34
  %185 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %177, i1 %110, i32 0, i1 %110) #1, !dbg !34
  %186 = icmp sgt i32 %17, 383, !dbg !35
  %187 = icmp sgt i32 %21, 383, !dbg !35
  %188 = trunc nsw i32 %17 to i16, !dbg !36
  %.lhs.trunc111 = add nsw i16 %188, -384, !dbg !36
  %.lhs.trunc111.frozen = freeze i16 %.lhs.trunc111, !dbg !36
  %189 = sdiv i16 %.lhs.trunc111.frozen, 3, !dbg !36
  %190 = trunc nsw i32 %18 to i16, !dbg !36
  %.lhs.trunc113 = add nsw i16 %190, -384, !dbg !36
  %.lhs.trunc113.frozen = freeze i16 %.lhs.trunc113, !dbg !36
  %191 = sdiv i16 %.lhs.trunc113.frozen, 3, !dbg !36
  %192 = trunc nsw i32 %19 to i16, !dbg !36
  %.lhs.trunc115 = add nsw i16 %192, -384, !dbg !36
  %.lhs.trunc115.frozen = freeze i16 %.lhs.trunc115, !dbg !36
  %193 = sdiv i16 %.lhs.trunc115.frozen, 3, !dbg !36
  %194 = trunc nsw i32 %20 to i16, !dbg !36
  %.lhs.trunc117 = add nsw i16 %194, -384, !dbg !36
  %.lhs.trunc117.frozen = freeze i16 %.lhs.trunc117, !dbg !36
  %195 = sdiv i16 %.lhs.trunc117.frozen, 3, !dbg !36
  %196 = trunc nsw i32 %21 to i16, !dbg !36
  %.lhs.trunc119 = add nsw i16 %196, -384, !dbg !36
  %.lhs.trunc119.frozen = freeze i16 %.lhs.trunc119, !dbg !36
  %197 = sdiv i16 %.lhs.trunc119.frozen, 3, !dbg !36
  %198 = trunc nsw i32 %22 to i16, !dbg !36
  %.lhs.trunc121 = add nsw i16 %198, -384, !dbg !36
  %.lhs.trunc121.frozen = freeze i16 %.lhs.trunc121, !dbg !36
  %199 = sdiv i16 %.lhs.trunc121.frozen, 3, !dbg !36
  %200 = trunc nsw i32 %23 to i16, !dbg !36
  %.lhs.trunc123 = add nsw i16 %200, -384, !dbg !36
  %.lhs.trunc123.frozen = freeze i16 %.lhs.trunc123, !dbg !36
  %201 = sdiv i16 %.lhs.trunc123.frozen, 3, !dbg !36
  %202 = trunc nsw i32 %24 to i16, !dbg !36
  %.lhs.trunc125 = add nsw i16 %202, -384, !dbg !36
  %.lhs.trunc125.frozen = freeze i16 %.lhs.trunc125, !dbg !36
  %203 = sdiv i16 %.lhs.trunc125.frozen, 3, !dbg !36
  %204 = srem i16 %189, 64, !dbg !37
  %205 = srem i16 %191, 64, !dbg !37
  %206 = srem i16 %193, 64, !dbg !37
  %207 = srem i16 %195, 64, !dbg !37
  %208 = srem i16 %197, 64, !dbg !37
  %209 = srem i16 %199, 64, !dbg !37
  %210 = srem i16 %201, 64, !dbg !37
  %211 = srem i16 %203, 64, !dbg !37
  %narrow184 = mul nsw i16 %204, 9, !dbg !38
  %narrow185 = mul nsw i16 %205, 9, !dbg !38
  %narrow186 = mul nsw i16 %206, 9, !dbg !38
  %narrow187 = mul nsw i16 %207, 9, !dbg !38
  %narrow188 = mul nsw i16 %208, 9, !dbg !38
  %narrow189 = mul nsw i16 %209, 9, !dbg !38
  %narrow190 = mul nsw i16 %210, 9, !dbg !38
  %narrow191 = mul nsw i16 %211, 9, !dbg !38
  %narrow192 = add nsw i16 %narrow184, 6, !dbg !39
  %212 = sext i16 %narrow192 to i32, !dbg !39
  %narrow193 = add nsw i16 %narrow185, 6, !dbg !39
  %narrow194 = add nsw i16 %narrow186, 6, !dbg !39
  %narrow195 = add nsw i16 %narrow187, 6, !dbg !39
  %narrow196 = add nsw i16 %narrow188, 6, !dbg !39
  %213 = sext i16 %narrow196 to i32, !dbg !39
  %narrow197 = add nsw i16 %narrow189, 6, !dbg !39
  %214 = sext i16 %narrow197 to i32, !dbg !39
  %narrow198 = add nsw i16 %narrow190, 6, !dbg !39
  %215 = sext i16 %narrow198 to i32, !dbg !39
  %narrow199 = add nsw i16 %narrow191, 6, !dbg !39
  %216 = sext i16 %narrow199 to i32, !dbg !39
  %217 = mul i16 %189, 3, !dbg !40
  %.decomposed221 = sub i16 %.lhs.trunc111.frozen, %217, !dbg !40
  %.sext144 = sext i16 %.decomposed221 to i32, !dbg !40
  %218 = mul i16 %191, 3, !dbg !40
  %.decomposed222 = sub i16 %.lhs.trunc113.frozen, %218, !dbg !40
  %219 = mul i16 %193, 3, !dbg !40
  %.decomposed223 = sub i16 %.lhs.trunc115.frozen, %219, !dbg !40
  %220 = mul i16 %195, 3, !dbg !40
  %.decomposed224 = sub i16 %.lhs.trunc117.frozen, %220, !dbg !40
  %221 = mul i16 %197, 3, !dbg !40
  %.decomposed225 = sub i16 %.lhs.trunc119.frozen, %221, !dbg !40
  %.sext152 = sext i16 %.decomposed225 to i32, !dbg !40
  %222 = mul i16 %199, 3, !dbg !40
  %.decomposed226 = sub i16 %.lhs.trunc121.frozen, %222, !dbg !40
  %.sext154 = sext i16 %.decomposed226 to i32, !dbg !40
  %223 = mul i16 %201, 3, !dbg !40
  %.decomposed227 = sub i16 %.lhs.trunc123.frozen, %223, !dbg !40
  %.sext156 = sext i16 %.decomposed227 to i32, !dbg !40
  %224 = mul i16 %203, 3, !dbg !40
  %.decomposed228 = sub i16 %.lhs.trunc125.frozen, %224, !dbg !40
  %.sext158 = sext i16 %.decomposed228 to i32, !dbg !40
  %225 = add i32 %45, %.sext144, !dbg !41
  %226 = add i32 %225, %212, !dbg !42
  %narrow206 = add nsw i16 %narrow193, %.decomposed222, !dbg !41
  %227 = sext i16 %narrow206 to i32, !dbg !41
  %228 = add i32 %45, %227, !dbg !42
  %narrow207 = add nsw i16 %narrow194, %.decomposed223, !dbg !41
  %229 = sext i16 %narrow207 to i32, !dbg !41
  %230 = add i32 %45, %229, !dbg !42
  %narrow208 = add nsw i16 %narrow195, %.decomposed224, !dbg !41
  %231 = sext i16 %narrow208 to i32, !dbg !41
  %232 = add i32 %45, %231, !dbg !42
  %233 = add i32 %46, %.sext152, !dbg !41
  %234 = add i32 %233, %213, !dbg !42
  %235 = add i32 %46, %.sext154, !dbg !41
  %236 = add i32 %235, %214, !dbg !42
  %237 = add i32 %46, %.sext156, !dbg !41
  %238 = add i32 %237, %215, !dbg !42
  %239 = add i32 %46, %.sext158, !dbg !41
  %240 = add i32 %239, %216, !dbg !42
  %241 = sext i32 %226 to i64, !dbg !43
  %242 = getelementptr float, ptr addrspace(1) %1, i64 %241, !dbg !43
  %243 = sext i32 %228 to i64, !dbg !43
  %244 = getelementptr float, ptr addrspace(1) %1, i64 %243, !dbg !43
  %245 = sext i32 %230 to i64, !dbg !43
  %246 = getelementptr float, ptr addrspace(1) %1, i64 %245, !dbg !43
  %247 = sext i32 %232 to i64, !dbg !43
  %248 = getelementptr float, ptr addrspace(1) %1, i64 %247, !dbg !43
  %249 = sext i32 %234 to i64, !dbg !43
  %250 = getelementptr float, ptr addrspace(1) %1, i64 %249, !dbg !43
  %251 = sext i32 %236 to i64, !dbg !43
  %252 = getelementptr float, ptr addrspace(1) %1, i64 %251, !dbg !43
  %253 = sext i32 %238 to i64, !dbg !43
  %254 = getelementptr float, ptr addrspace(1) %1, i64 %253, !dbg !43
  %255 = sext i32 %240 to i64, !dbg !43
  %256 = getelementptr float, ptr addrspace(1) %1, i64 %255, !dbg !43
  %257 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %242, i1 %186, i32 0, i1 %186) #1, !dbg !44
  %258 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %244, i1 %186, i32 0, i1 %186) #1, !dbg !44
  %259 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %246, i1 %186, i32 0, i1 %186) #1, !dbg !44
  %260 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %248, i1 %186, i32 0, i1 %186) #1, !dbg !44
  %261 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %250, i1 %187, i32 0, i1 %187) #1, !dbg !44
  %262 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %252, i1 %187, i32 0, i1 %187) #1, !dbg !44
  %263 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %254, i1 %187, i32 0, i1 %187) #1, !dbg !44
  %264 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %256, i1 %187, i32 0, i1 %187) #1, !dbg !44
  %.v = select i1 %108, i32 %178, i32 %257, !dbg !45
  %.v2 = select i1 %108, i32 %179, i32 %258, !dbg !45
  %.v3 = select i1 %108, i32 %180, i32 %259, !dbg !45
  %.v4 = select i1 %108, i32 %181, i32 %260, !dbg !45
  %.v5 = select i1 %110, i32 %182, i32 %261, !dbg !45
  %.v6 = select i1 %110, i32 %183, i32 %262, !dbg !45
  %.v7 = select i1 %110, i32 %184, i32 %263, !dbg !45
  %.v8 = select i1 %110, i32 %185, i32 %264, !dbg !45
  %.v9 = select i1 %25, i32 %99, i32 %.v, !dbg !46
  %.v10 = select i1 %25, i32 %100, i32 %.v2, !dbg !46
  %.v11 = select i1 %25, i32 %101, i32 %.v3, !dbg !46
  %.v12 = select i1 %25, i32 %102, i32 %.v4, !dbg !46
  %.v13 = select i1 %26, i32 %103, i32 %.v5, !dbg !46
  %.v14 = select i1 %26, i32 %104, i32 %.v6, !dbg !46
  %.v15 = select i1 %26, i32 %105, i32 %.v7, !dbg !46
  %.v16 = select i1 %26, i32 %106, i32 %.v8, !dbg !46
  %265 = sext i32 %9 to i64, !dbg !47
  %266 = getelementptr float, ptr addrspace(1) %0, i64 %265, !dbg !47
  %267 = sext i32 %13 to i64, !dbg !47
  %268 = getelementptr float, ptr addrspace(1) %0, i64 %267, !dbg !47
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v9, i32 %.v10, i32 %.v11, i32 %.v12, ptr addrspace(1) %266, i1 true) #1, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v13, i32 %.v14, i32 %.v15, i32 %.v16, ptr addrspace(1) %268, i1 true) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmynypjnkxcqofrdiomu6a5idolgkmb2p3xtsxo7v4onpnzn3mk5.py", directory: "inductor_cache/my")
!4 = !{ptr @triton_poi_fused_cat_view_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_view_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_view_6", linkageName: "triton_poi_fused_cat_view_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 31, column: 18, scope: !7)
!16 = !DILocation(line: 32, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 48, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 59, scope: !7)
!20 = !DILocation(line: 32, column: 73, scope: !7)
!21 = !DILocation(line: 32, column: 55, scope: !7)
!22 = !DILocation(line: 32, column: 66, scope: !7)
!23 = !DILocation(line: 32, column: 30, scope: !7)
!24 = !DILocation(line: 32, column: 79, scope: !7)
!25 = !DILocation(line: 36, column: 18, scope: !7)
!26 = !DILocation(line: 37, column: 57, scope: !7)
!27 = !DILocation(line: 37, column: 62, scope: !7)
!28 = !DILocation(line: 37, column: 39, scope: !7)
!29 = !DILocation(line: 37, column: 35, scope: !7)
!30 = !DILocation(line: 37, column: 96, scope: !7)
!31 = !DILocation(line: 37, column: 69, scope: !7)
!32 = !DILocation(line: 37, column: 80, scope: !7)
!33 = !DILocation(line: 37, column: 31, scope: !7)
!34 = !DILocation(line: 37, column: 102, scope: !7)
!35 = !DILocation(line: 38, column: 20, scope: !7)
!36 = !DILocation(line: 41, column: 57, scope: !7)
!37 = !DILocation(line: 41, column: 62, scope: !7)
!38 = !DILocation(line: 41, column: 39, scope: !7)
!39 = !DILocation(line: 41, column: 35, scope: !7)
!40 = !DILocation(line: 41, column: 96, scope: !7)
!41 = !DILocation(line: 41, column: 69, scope: !7)
!42 = !DILocation(line: 41, column: 80, scope: !7)
!43 = !DILocation(line: 41, column: 31, scope: !7)
!44 = !DILocation(line: 41, column: 102, scope: !7)
!45 = !DILocation(line: 42, column: 34, scope: !7)
!46 = !DILocation(line: 43, column: 33, scope: !7)
!47 = !DILocation(line: 44, column: 28, scope: !7)
!48 = !DILocation(line: 44, column: 40, scope: !7)
!49 = !DILocation(line: 44, column: 4, scope: !7)
