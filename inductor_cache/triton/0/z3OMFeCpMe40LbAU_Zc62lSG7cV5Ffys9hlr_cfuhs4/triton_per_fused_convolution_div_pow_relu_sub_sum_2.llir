; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_convolution_div_pow_relu_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 3844, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = lshr i32 %8, 5, !dbg !12
  %11 = and i32 %8, 63, !dbg !12
  %12 = shl i32 %6, 6, !dbg !13
  %13 = or disjoint i32 %12, %11, !dbg !14
  %14 = sext i32 %13 to i64, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !15
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %7, i32 0, i1 %7) #3, !dbg !16
  %17 = bitcast i32 %16 to float, !dbg !16
  %18 = zext nneg i32 %11 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #3, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = fadd float %17, %21, !dbg !19
  %23 = fcmp olt float %22, 0.000000e+00, !dbg !20
  %24 = select i1 %23, float 0.000000e+00, float %22, !dbg !24
  %25 = fmul float %24, %24, !dbg !25
  %26 = select i1 %7, float %25, float 0.000000e+00, !dbg !26
  %27 = bitcast float %26 to i32, !dbg !27
  %28 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %27, i32 16, i32 31), !dbg !27
  %29 = bitcast i32 %28 to float, !dbg !27
  %30 = fadd float %26, %29, !dbg !31
  %31 = bitcast float %30 to i32, !dbg !27
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 8, i32 31), !dbg !27
  %33 = bitcast i32 %32 to float, !dbg !27
  %34 = fadd float %30, %33, !dbg !31
  %35 = bitcast float %34 to i32, !dbg !27
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 4, i32 31), !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = fadd float %34, %37, !dbg !31
  %39 = bitcast float %38 to i32, !dbg !27
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 2, i32 31), !dbg !27
  %41 = bitcast i32 %40 to float, !dbg !27
  %42 = fadd float %38, %41, !dbg !31
  %43 = bitcast float %42 to i32, !dbg !27
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 1, i32 31), !dbg !27
  %45 = bitcast i32 %44 to float, !dbg !27
  %46 = fadd float %42, %45, !dbg !31
  %47 = icmp eq i32 %9, 0, !dbg !27
  %48 = and i32 %10, 1, !dbg !27
  %49 = zext nneg i32 %48 to i64, !dbg !27
  %50 = getelementptr float, ptr addrspace(3) @global_smem, i64 %49, !dbg !27
  %51 = bitcast float %46 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %50, <1 x i32> %51, i1 %47) #3, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %52 = icmp slt i32 %8, 2, !dbg !27
  %53 = sext i32 %8 to i64, !dbg !27
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !27
  %55 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %54, i1 %52) #3, !dbg !27
  %56 = bitcast i32 %55 to float, !dbg !27
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 1, i32 31), !dbg !27
  %58 = bitcast i32 %57 to float, !dbg !27
  %59 = fadd float %56, %58, !dbg !31
  %60 = and i32 %8, 1, !dbg !27
  %61 = icmp eq i32 %60, 0, !dbg !27
  %62 = and i1 %52, %61, !dbg !27
  %63 = bitcast float %59 to <1 x i32>, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %54, <1 x i32> %63, i1 %62) #3, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %64 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %65 = bitcast float %24 to i32, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %15, i1 %7) #3, !dbg !33
  %66 = sext i32 %6 to i64, !dbg !34
  %67 = getelementptr float, ptr addrspace(1) %2, i64 %66, !dbg !34
  %68 = icmp eq i32 %11, 0, !dbg !35
  %69 = and i1 %68, %7, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %64, ptr addrspace(1) %67, i1 %69) #3, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmf3swobsopdcnklob2ma56kj4e33rgkupjiib56pav4ow4fjamk.py", directory: "inductor_cache/mf")
!4 = !{ptr @triton_per_fused_convolution_div_pow_relu_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_convolution_div_pow_relu_sub_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_convolution_div_pow_relu_sub_sum_2", linkageName: "triton_per_fused_convolution_div_pow_relu_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 32, column: 30, scope: !7)
!18 = !DILocation(line: 32, column: 35, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 35, column: 40, scope: !7)
!24 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !23)
!25 = !DILocation(line: 36, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 33, scope: !7)
!27 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!30 = !DILocation(line: 39, column: 24, scope: !7)
!31 = !DILocation(line: 256, column: 15, scope: !32, inlinedAt: !30)
!32 = distinct !DILexicalBlockFile(scope: !28, file: !29, discriminator: 0)
!33 = !DILocation(line: 40, column: 47, scope: !7)
!34 = !DILocation(line: 41, column: 25, scope: !7)
!35 = !DILocation(line: 41, column: 36, scope: !7)
!36 = !DILocation(line: 41, column: 4, scope: !7)
