; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 9216, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 6, !dbg !15
  %14 = mul i32 %13, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 6, !dbg !16
  %16 = srem i32 %13, 6, !dbg !17
  %17 = sdiv i32 %10, 36, !dbg !18
  %18 = shl nsw i32 %.decomposed, 1, !dbg !19
  %19 = shl nsw i32 %15, 1, !dbg !19
  %20 = mul nsw i32 %16, 26, !dbg !20
  %21 = mul i32 %17, 169, !dbg !21
  %22 = add i32 %20, %21, !dbg !22
  %23 = add i32 %22, %18, !dbg !23
  %24 = add i32 %22, %19, !dbg !23
  %25 = sext i32 %23 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = sext i32 %24 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !25
  %31 = add i32 %22, 1, !dbg !26
  %32 = add i32 %31, %18, !dbg !27
  %33 = add i32 %31, %19, !dbg !27
  %34 = sext i32 %32 to i64, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !28
  %36 = sext i32 %33 to i64, !dbg !28
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %12) #1, !dbg !29
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %12) #1, !dbg !29
  %40 = add i32 %22, 13, !dbg !30
  %41 = add i32 %40, %18, !dbg !31
  %42 = add i32 %40, %19, !dbg !31
  %43 = sext i32 %41 to i64, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !32
  %45 = sext i32 %42 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #1, !dbg !33
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %12) #1, !dbg !33
  %49 = add i32 %22, 14, !dbg !34
  %50 = add i32 %49, %18, !dbg !35
  %51 = add i32 %49, %19, !dbg !35
  %52 = sext i32 %50 to i64, !dbg !36
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !36
  %54 = sext i32 %51 to i64, !dbg !36
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !36
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %12) #1, !dbg !37
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %12) #1, !dbg !37
  %58 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !25
  %59 = insertelement <2 x i32> %58, i32 %30, i64 1, !dbg !25
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !25
  %61 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !29
  %62 = insertelement <2 x i32> %61, i32 %39, i64 1, !dbg !29
  %63 = bitcast <2 x i32> %62 to <2 x float>, !dbg !29
  %64 = insertelement <2 x i32> poison, i32 %47, i64 0, !dbg !33
  %65 = insertelement <2 x i32> %64, i32 %48, i64 1, !dbg !33
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !33
  %67 = insertelement <2 x i32> poison, i32 %56, i64 0, !dbg !37
  %68 = insertelement <2 x i32> %67, i32 %57, i64 1, !dbg !37
  %69 = bitcast <2 x i32> %68 to <2 x float>, !dbg !37
  %70 = fcmp ogt <2 x float> %63, %60, !dbg !38
  %71 = zext <2 x i1> %70 to <2 x i8>, !dbg !39
  %72 = fcmp uno <2 x float> %63, zeroinitializer, !dbg !40
  %73 = or <2 x i1> %70, %72, !dbg !44
  %.v = select <2 x i1> %73, <2 x i32> %62, <2 x i32> %59, !dbg !45
  %74 = bitcast <2 x i32> %.v to <2 x float>, !dbg !45
  %75 = fcmp olt <2 x float> %74, %66, !dbg !46
  %76 = select <2 x i1> %75, <2 x i8> splat (i8 2), <2 x i8> %71, !dbg !47
  %77 = fcmp uno <2 x float> %66, zeroinitializer, !dbg !48
  %78 = or <2 x i1> %77, %75, !dbg !50
  %.v1 = select <2 x i1> %78, <2 x i32> %65, <2 x i32> %.v, !dbg !51
  %79 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !51
  %80 = fcmp olt <2 x float> %79, %69, !dbg !52
  %81 = select <2 x i1> %80, <2 x i8> splat (i8 3), <2 x i8> %76, !dbg !53
  %82 = bitcast i32 %56 to float, !dbg !54
  %83 = fcmp uno float %82, 0.000000e+00, !dbg !54
  %84 = bitcast i32 %57 to float, !dbg !54
  %85 = fcmp uno float %84, 0.000000e+00, !dbg !54
  %86 = extractelement <2 x i1> %80, i64 0, !dbg !56
  %87 = or i1 %83, %86, !dbg !56
  %88 = extractelement <2 x i1> %80, i64 1, !dbg !56
  %89 = or i1 %85, %88, !dbg !56
  %90 = extractelement <2 x float> %79, i64 0, !dbg !57
  %91 = select i1 %87, float %82, float %90, !dbg !57
  %92 = extractelement <2 x float> %79, i64 1, !dbg !57
  %93 = select i1 %89, float %84, float %92, !dbg !57
  %94 = fcmp olt float %91, 0.000000e+00, !dbg !58
  %95 = fcmp olt float %93, 0.000000e+00, !dbg !58
  %96 = select i1 %94, float 0.000000e+00, float %91, !dbg !60
  %97 = select i1 %95, float 0.000000e+00, float %93, !dbg !60
  %98 = sext i32 %10 to i64, !dbg !61
  %99 = getelementptr i8, ptr addrspace(1) %1, i64 %98, !dbg !61
  %100 = bitcast <2 x i8> %81 to i16, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %100, ptr addrspace(1) %99, i1 %12) #1, !dbg !62
  %101 = getelementptr float, ptr addrspace(1) %2, i64 %98, !dbg !63
  %102 = bitcast float %96 to i32, !dbg !64
  %103 = bitcast float %97 to i32, !dbg !64
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %102, i32 %103, ptr addrspace(1) %101, i1 %12) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyqpgmjwvvpjcsmj2x4yqobx2x2nuxjyqntmsffv4vqhkz5vhe3n.py", directory: "inductor_cache/yq")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_relu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_relu_3", linkageName: "triton_poi_fused_max_pool2d_with_indices_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 32, scope: !7)
!20 = !DILocation(line: 28, column: 40, scope: !7)
!21 = !DILocation(line: 28, column: 49, scope: !7)
!22 = !DILocation(line: 28, column: 37, scope: !7)
!23 = !DILocation(line: 28, column: 45, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 54, scope: !7)
!26 = !DILocation(line: 29, column: 41, scope: !7)
!27 = !DILocation(line: 29, column: 49, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 58, scope: !7)
!30 = !DILocation(line: 30, column: 42, scope: !7)
!31 = !DILocation(line: 30, column: 50, scope: !7)
!32 = !DILocation(line: 30, column: 30, scope: !7)
!33 = !DILocation(line: 30, column: 59, scope: !7)
!34 = !DILocation(line: 31, column: 43, scope: !7)
!35 = !DILocation(line: 31, column: 51, scope: !7)
!36 = !DILocation(line: 31, column: 31, scope: !7)
!37 = !DILocation(line: 31, column: 60, scope: !7)
!38 = !DILocation(line: 32, column: 18, scope: !7)
!39 = !DILocation(line: 35, column: 32, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !7, file: !42, discriminator: 0)
!42 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!43 = !DILocation(line: 36, column: 40, scope: !7)
!44 = !DILocation(line: 120, column: 16, scope: !41, inlinedAt: !43)
!45 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !43)
!46 = !DILocation(line: 37, column: 18, scope: !7)
!47 = !DILocation(line: 39, column: 33, scope: !7)
!48 = !DILocation(line: 120, column: 21, scope: !41, inlinedAt: !49)
!49 = !DILocation(line: 40, column: 41, scope: !7)
!50 = !DILocation(line: 120, column: 16, scope: !41, inlinedAt: !49)
!51 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !49)
!52 = !DILocation(line: 41, column: 20, scope: !7)
!53 = !DILocation(line: 43, column: 35, scope: !7)
!54 = !DILocation(line: 120, column: 21, scope: !41, inlinedAt: !55)
!55 = !DILocation(line: 44, column: 42, scope: !7)
!56 = !DILocation(line: 120, column: 16, scope: !41, inlinedAt: !55)
!57 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !55)
!58 = !DILocation(line: 118, column: 15, scope: !41, inlinedAt: !59)
!59 = !DILocation(line: 46, column: 42, scope: !7)
!60 = !DILocation(line: 121, column: 29, scope: !41, inlinedAt: !59)
!61 = !DILocation(line: 47, column: 25, scope: !7)
!62 = !DILocation(line: 47, column: 37, scope: !7)
!63 = !DILocation(line: 48, column: 25, scope: !7)
!64 = !DILocation(line: 48, column: 37, scope: !7)
!65 = !DILocation(line: 48, column: 4, scope: !7)
