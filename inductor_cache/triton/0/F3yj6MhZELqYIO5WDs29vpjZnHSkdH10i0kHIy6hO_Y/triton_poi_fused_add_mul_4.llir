; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = srem i32 %13, 4, !dbg !15
  %16 = sdiv i32 %13, 64, !dbg !16
  %17 = sext i32 %13 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %14) #3, !dbg !18
  %20 = sext i32 %15 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %14) #3, !dbg !20
  %23 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !21
  %24 = shufflevector <2 x i32> %23, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !21
  %25 = sdiv <2 x i32> %24, <i32 16, i32 4>, !dbg !21
  %26 = srem <2 x i32> %25, splat (i32 4), !dbg !22
  %27 = shl nsw <2 x i32> %26, <i32 2, i32 4>, !dbg !23
  %28 = extractelement <2 x i32> %27, i64 0, !dbg !24
  %29 = add nsw i32 %28, %16, !dbg !24
  %30 = extractelement <2 x i32> %27, i64 1, !dbg !25
  %31 = add nsw i32 %29, %30, !dbg !25
  %32 = sext i32 %31 to i64, !dbg !26
  %33 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %14) #3, !dbg !27
  %35 = bitcast i32 %34 to float, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !28
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %14) #3, !dbg !29
  %38 = extractelement <2 x i32> %25, i64 1, !dbg !30
  %39 = sext i32 %38 to i64, !dbg !30
  %40 = getelementptr float, ptr addrspace(1) %4, i64 %39, !dbg !30
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #3, !dbg !31
  %42 = bitcast i32 %41 to float, !dbg !31
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #3, !dbg !32
  %44 = bitcast i32 %43 to float, !dbg !32
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i = icmp eq i32 %45, 0, !dbg !33
  %46 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !33
  %47 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !33
  %.01.i = select i1 %.not.i, float %47, float %46, !dbg !33
  %48 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !33
  br i1 %48, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !33

__internal_fmad.exit1.i:                          ; preds = %8
  %49 = fmul float %.01.i, 0x4007154760000000, !dbg !33
  %50 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %49) #3, !dbg !33
  %51 = fadd float %50, 1.000000e+00, !dbg !33
  %52 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %51) #4, !dbg !33, !srcloc !34
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not6.i = icmp eq i32 %53, 0, !dbg !33
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float -2.000000e+00, float 1.000000e+00) #3, !dbg !33
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %52, float -2.000000e+00, float 1.000000e+00) #3, !dbg !33
  %.03.i = select i1 %.not6.i, float %55, float %54, !dbg !33
  %56 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !33
  %s.0.i = select i1 %56, float 1.000000e+00, float %.03.i, !dbg !33
  %57 = bitcast float %s.0.i to i32, !dbg !33
  %58 = and i32 %34, -2147483648, !dbg !33
  %59 = or i32 %58, %57, !dbg !33
  %60 = bitcast i32 %59 to float, !dbg !33
  br label %__nv_tanhf.exit, !dbg !33

__internal_fmad.exit3.i:                          ; preds = %8
  %61 = fmul float %35, %35, !dbg !33
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not1.i = icmp eq i32 %62, 0, !dbg !33
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %61, float 0xBFAAC795C0000000) #3, !dbg !33
  %64 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %61, float 0xBFAAC795C0000000) #3, !dbg !33
  %.06.i = select i1 %.not1.i, float %64, float %63, !dbg !33
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not2.i = icmp eq i32 %65, 0, !dbg !33
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %61, float 0x3FC10B2820000000) #3, !dbg !33
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %61, float 0x3FC10B2820000000) #3, !dbg !33
  %.05.i = select i1 %.not2.i, float %67, float %66, !dbg !33
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not3.i = icmp eq i32 %68, 0, !dbg !33
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %61, float 0xBFD5553DA0000000) #3, !dbg !33
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %61, float 0xBFD5553DA0000000) #3, !dbg !33
  %.0.i = select i1 %.not3.i, float %70, float %69, !dbg !33
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not4.i = icmp eq i32 %71, 0, !dbg !33
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %61, float 0.000000e+00) #3, !dbg !33
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %61, float 0.000000e+00) #3, !dbg !33
  %.04.i = select i1 %.not4.i, float %73, float %72, !dbg !33
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not5.i = icmp eq i32 %74, 0, !dbg !33
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %35, float %35) #3, !dbg !33
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %35, float %35) #3, !dbg !33
  %.02.i = select i1 %.not5.i, float %76, float %75, !dbg !33
  br label %__nv_tanhf.exit, !dbg !33

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %60, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !33
  %77 = fadd float %42, %44, !dbg !35
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i1 = icmp eq i32 %78, 0, !dbg !36
  %79 = tail call float @llvm.nvvm.fabs.ftz.f(float %77) #3, !dbg !36
  %80 = tail call float @llvm.nvvm.fabs.f(float %77) #3, !dbg !36
  %.01.i2 = select i1 %.not.i1, float %80, float %79, !dbg !36
  %81 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !36
  br i1 %81, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !36

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %82 = fmul float %.01.i2, 0x4007154760000000, !dbg !36
  %83 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %82) #3, !dbg !36
  %84 = fadd float %83, 1.000000e+00, !dbg !36
  %85 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %84) #4, !dbg !36, !srcloc !34
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i4 = icmp eq i32 %86, 0, !dbg !36
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %85, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %85, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i5 = select i1 %.not6.i4, float %88, float %87, !dbg !36
  %89 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !36
  %s.0.i6 = select i1 %89, float 1.000000e+00, float %.03.i5, !dbg !36
  %90 = bitcast float %s.0.i6 to i32, !dbg !36
  %91 = bitcast float %77 to i32, !dbg !36
  %92 = and i32 %91, -2147483648, !dbg !36
  %93 = or i32 %92, %90, !dbg !36
  %94 = bitcast i32 %93 to float, !dbg !36
  br label %__nv_tanhf.exit19, !dbg !36

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %95 = fmul float %77, %77, !dbg !36
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i9 = icmp eq i32 %96, 0, !dbg !36
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %95, float 0xBFAAC795C0000000) #3, !dbg !36
  %98 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %95, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i10 = select i1 %.not1.i9, float %98, float %97, !dbg !36
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i11 = icmp eq i32 %99, 0, !dbg !36
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %95, float 0x3FC10B2820000000) #3, !dbg !36
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %95, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i12 = select i1 %.not2.i11, float %101, float %100, !dbg !36
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i13 = icmp eq i32 %102, 0, !dbg !36
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %95, float 0xBFD5553DA0000000) #3, !dbg !36
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %95, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i14 = select i1 %.not3.i13, float %104, float %103, !dbg !36
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i15 = icmp eq i32 %105, 0, !dbg !36
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %95, float 0.000000e+00) #3, !dbg !36
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %95, float 0.000000e+00) #3, !dbg !36
  %.04.i16 = select i1 %.not4.i15, float %107, float %106, !dbg !36
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i17 = icmp eq i32 %108, 0, !dbg !36
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %77, float %77) #3, !dbg !36
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %77, float %77) #3, !dbg !36
  %.02.i18 = select i1 %.not5.i17, float %110, float %109, !dbg !36
  br label %__nv_tanhf.exit19, !dbg !36

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %94, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !36
  %111 = bitcast i32 %22 to float, !dbg !20
  %112 = fmul float %s.1.i, %111, !dbg !37
  %113 = bitcast i32 %19 to float, !dbg !18
  %114 = fadd float %112, %113, !dbg !38
  %115 = bitcast i32 %37 to float, !dbg !29
  %116 = fmul float %s.1.i7, %115, !dbg !39
  %117 = fadd float %114, %116, !dbg !40
  %118 = getelementptr float, ptr addrspace(1) %6, i64 %17, !dbg !41
  %119 = bitcast float %117 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %118, i1 %14) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ch4jtceqwsfonq3dj4hjcdqgy7xi32pfk3rakfrffrpxxiblsed4.py", directory: "inductor_cache/h4")
!4 = !{ptr @triton_poi_fused_add_mul_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_4", linkageName: "triton_poi_fused_add_mul_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 19, scope: !7)
!17 = !DILocation(line: 30, column: 30, scope: !7)
!18 = !DILocation(line: 30, column: 35, scope: !7)
!19 = !DILocation(line: 31, column: 30, scope: !7)
!20 = !DILocation(line: 31, column: 35, scope: !7)
!21 = !DILocation(line: 27, column: 21, scope: !7)
!22 = !DILocation(line: 27, column: 27, scope: !7)
!23 = !DILocation(line: 32, column: 37, scope: !7)
!24 = !DILocation(line: 32, column: 35, scope: !7)
!25 = !DILocation(line: 32, column: 42, scope: !7)
!26 = !DILocation(line: 32, column: 30, scope: !7)
!27 = !DILocation(line: 32, column: 50, scope: !7)
!28 = !DILocation(line: 33, column: 30, scope: !7)
!29 = !DILocation(line: 33, column: 35, scope: !7)
!30 = !DILocation(line: 34, column: 30, scope: !7)
!31 = !DILocation(line: 34, column: 35, scope: !7)
!32 = !DILocation(line: 35, column: 19, scope: !7)
!33 = !DILocation(line: 37, column: 26, scope: !7)
!34 = !{i32 21046}
!35 = !DILocation(line: 40, column: 19, scope: !7)
!36 = !DILocation(line: 41, column: 27, scope: !7)
!37 = !DILocation(line: 38, column: 18, scope: !7)
!38 = !DILocation(line: 39, column: 18, scope: !7)
!39 = !DILocation(line: 42, column: 19, scope: !7)
!40 = !DILocation(line: 43, column: 19, scope: !7)
!41 = !DILocation(line: 44, column: 25, scope: !7)
!42 = !DILocation(line: 44, column: 37, scope: !7)
!43 = !DILocation(line: 44, column: 4, scope: !7)
