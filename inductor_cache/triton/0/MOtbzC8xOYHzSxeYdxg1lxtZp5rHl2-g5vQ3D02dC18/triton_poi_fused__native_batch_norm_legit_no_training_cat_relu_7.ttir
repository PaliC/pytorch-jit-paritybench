#loc = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-03> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<528> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<-48> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_6 = arith.constant dense<48> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<48> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_10 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_9 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc9)
    %9 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc16)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc17)
    %21 = arith.extsi %5 : tensor<256xi32> to tensor<256xi64> loc(#loc18)
    %22 = arith.cmpi slt, %21, %cst_7 : tensor<256xi64> loc(#loc18)
    %23 = arith.muli %6, %cst_6 : tensor<256xi32> loc(#loc19)
    %24 = arith.addi %23, %5 : tensor<256xi32> loc(#loc20)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc21)
    %26 = tt.addptr %25, %24 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %27 = tt.load %26, %22, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc23)
    %29 = tt.addptr %28, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %30 = tt.load %29, %22, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.addf %27, %30 : tensor<256xf32> loc(#loc25)
    %32 = arith.cmpi sge, %21, %cst_7 : tensor<256xi64> loc(#loc26)
    %33 = arith.muli %7, %cst_4 : tensor<256xi32> loc(#loc27)
    %34 = arith.muli %8, %cst_8 : tensor<256xi32> loc(#loc28)
    %35 = arith.addi %33, %34 : tensor<256xi32> loc(#loc29)
    %36 = arith.addi %5, %cst_3 : tensor<256xi32> loc(#loc30)
    %37 = arith.addi %35, %36 : tensor<256xi32> loc(#loc31)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc32)
    %39 = tt.addptr %38, %37 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc32)
    %40 = tt.load %39, %32, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc33)
    %41 = arith.addi %33, %cst_9 : tensor<256xi32> loc(#loc34)
    %42 = arith.addi %41, %34 : tensor<256xi32> loc(#loc35)
    %43 = arith.addi %42, %36 : tensor<256xi32> loc(#loc36)
    %44 = tt.addptr %38, %43 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc37)
    %45 = tt.load %44, %32, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc38)
    %46 = arith.cmpf ogt, %45, %40 : tensor<256xf32> loc(#loc72)
    %47 = arith.cmpf une, %45, %45 : tensor<256xf32> loc(#loc73)
    %48 = arith.ori %46, %47 : tensor<256xi1> loc(#loc74)
    %49 = arith.select %48, %45, %40 : tensor<256xi1>, tensor<256xf32> loc(#loc75)
    %50 = arith.addi %33, %cst_2 : tensor<256xi32> loc(#loc44)
    %51 = arith.addi %50, %34 : tensor<256xi32> loc(#loc45)
    %52 = arith.addi %51, %36 : tensor<256xi32> loc(#loc46)
    %53 = tt.addptr %38, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc47)
    %54 = tt.load %53, %32, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %55 = arith.cmpf ogt, %54, %49 : tensor<256xf32> loc(#loc76)
    %56 = arith.cmpf une, %54, %54 : tensor<256xf32> loc(#loc77)
    %57 = arith.ori %55, %56 : tensor<256xi1> loc(#loc78)
    %58 = arith.select %57, %54, %49 : tensor<256xi1>, tensor<256xf32> loc(#loc79)
    %59 = arith.addi %33, %cst_1 : tensor<256xi32> loc(#loc50)
    %60 = arith.addi %59, %34 : tensor<256xi32> loc(#loc51)
    %61 = arith.addi %60, %36 : tensor<256xi32> loc(#loc52)
    %62 = tt.addptr %38, %61 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc53)
    %63 = tt.load %62, %32, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc54)
    %64 = arith.cmpf ogt, %63, %58 : tensor<256xf32> loc(#loc80)
    %65 = arith.cmpf une, %63, %63 : tensor<256xf32> loc(#loc81)
    %66 = arith.ori %64, %65 : tensor<256xi1> loc(#loc82)
    %67 = arith.select %66, %63, %58 : tensor<256xi1>, tensor<256xf32> loc(#loc83)
    %68 = arith.select %32, %67, %cst_5 : tensor<256xi1>, tensor<256xf32> loc(#loc56)
    %69 = arith.select %22, %31, %68 : tensor<256xi1>, tensor<256xf32> loc(#loc84)
    %70 = arith.subf %69, %11 : tensor<256xf32> loc(#loc59)
    %71 = arith.addf %14, %cst_0 : tensor<256xf32> loc(#loc60)
    %72 = tt.extern_elementwise %71 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc61)
    %73 = arith.divf %cst, %72 : tensor<256xf32> loc(#loc62)
    %74 = arith.mulf %70, %73 : tensor<256xf32> loc(#loc63)
    %75 = arith.mulf %74, %17 : tensor<256xf32> loc(#loc64)
    %76 = arith.addf %75, %20 : tensor<256xf32> loc(#loc65)
    %77 = arith.cmpf ogt, %cst_5, %76 : tensor<256xf32> loc(#loc85)
    %78 = arith.select %77, %cst_5, %76 : tensor<256xi1>, tensor<256xf32> loc(#loc86)
    %79 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc67)
    %80 = tt.addptr %79, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc67)
    tt.store %80, %69 : tensor<256x!tt.ptr<f32>> loc(#loc68)
    %81 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc69)
    %82 = tt.addptr %81, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc69)
    tt.store %82, %78 : tensor<256x!tt.ptr<f32>> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":21:28)
#loc3 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":21:33)
#loc4 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":22:36)
#loc5 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":22:23)
#loc6 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":24:19)
#loc7 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":25:19)
#loc8 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":26:27)
#loc9 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":27:19)
#loc10 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":29:31)
#loc11 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":29:36)
#loc12 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":30:31)
#loc13 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":30:36)
#loc14 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":31:31)
#loc15 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":31:36)
#loc16 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":32:31)
#loc17 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":32:36)
#loc18 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":37:18)
#loc19 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":38:33)
#loc20 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":38:39)
#loc21 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":38:30)
#loc22 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":38:45)
#loc23 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":39:30)
#loc24 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":39:35)
#loc25 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":40:18)
#loc26 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":43:20)
#loc27 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:34)
#loc28 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:44)
#loc29 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:39)
#loc30 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:58)
#loc31 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:50)
#loc32 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:31)
#loc33 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":46:64)
#loc34 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":47:36)
#loc35 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":47:44)
#loc36 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":47:55)
#loc37 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":47:31)
#loc38 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":47:69)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc40 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":48:42)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":49:37)
#loc45 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":49:45)
#loc46 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":49:56)
#loc47 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":49:31)
#loc48 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":49:70)
#loc49 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":50:42)
#loc50 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":51:37)
#loc51 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":51:45)
#loc52 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":51:56)
#loc53 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":51:31)
#loc54 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":51:70)
#loc55 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":52:42)
#loc56 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":54:35)
#loc57 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":55:33)
#loc58 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":42:32)
#loc59 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":56:20)
#loc60 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":58:20)
#loc61 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":59:27)
#loc62 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":61:20)
#loc63 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":64:20)
#loc64 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":65:20)
#loc65 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":66:20)
#loc66 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":68:42)
#loc67 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":69:25)
#loc68 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":69:37)
#loc69 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":70:25)
#loc70 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":70:37)
#loc71 = loc("inductor_cache/pl/cplxognptz45qd2pkyv454e2xzwyo6egnmgckeurj2qqjly7rgc5.py":70:4)
#loc72 = loc(callsite(#loc39 at #loc40))
#loc73 = loc(callsite(#loc41 at #loc40))
#loc74 = loc(callsite(#loc42 at #loc40))
#loc75 = loc(callsite(#loc43 at #loc40))
#loc76 = loc(callsite(#loc39 at #loc49))
#loc77 = loc(callsite(#loc41 at #loc49))
#loc78 = loc(callsite(#loc42 at #loc49))
#loc79 = loc(callsite(#loc43 at #loc49))
#loc80 = loc(callsite(#loc39 at #loc55))
#loc81 = loc(callsite(#loc41 at #loc55))
#loc82 = loc(callsite(#loc42 at #loc55))
#loc83 = loc(callsite(#loc43 at #loc55))
#loc84 = loc(fused[#loc57, #loc58])
#loc85 = loc(callsite(#loc39 at #loc66))
#loc86 = loc(callsite(#loc43 at #loc66))
