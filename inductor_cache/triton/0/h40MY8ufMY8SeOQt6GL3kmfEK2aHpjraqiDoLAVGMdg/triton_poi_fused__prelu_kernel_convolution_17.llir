; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__prelu_kernel_convolution_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = srem i32 %11, 64, !dbg !14
  %13 = sext i32 %11 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !16
  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !16
  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !16
  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !16
  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !16
  %20 = sext i32 %12 to i64, !dbg !17
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !17
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !18
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !18
  %24 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !18
  %25 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !18
  %26 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !18
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !19
  %28 = bitcast i32 %27 to float, !dbg !19
  %29 = insertelement <4 x i32> poison, i32 %19, i64 0, !dbg !16
  %30 = insertelement <4 x i32> %29, i32 %18, i64 1, !dbg !16
  %31 = insertelement <4 x i32> %30, i32 %17, i64 2, !dbg !16
  %32 = insertelement <4 x i32> %31, i32 %16, i64 3, !dbg !16
  %33 = bitcast <4 x i32> %32 to <4 x float>, !dbg !16
  %34 = insertelement <4 x i32> poison, i32 %26, i64 0, !dbg !18
  %35 = insertelement <4 x i32> %34, i32 %25, i64 1, !dbg !18
  %36 = insertelement <4 x i32> %35, i32 %24, i64 2, !dbg !18
  %37 = insertelement <4 x i32> %36, i32 %23, i64 3, !dbg !18
  %38 = bitcast <4 x i32> %37 to <4 x float>, !dbg !18
  %39 = fadd <4 x float> %33, %38, !dbg !20
  %40 = fcmp ogt <4 x float> %39, zeroinitializer, !dbg !21
  %41 = extractelement <4 x float> %39, i64 3, !dbg !22
  %42 = fmul float %41, %28, !dbg !23
  %43 = extractelement <4 x float> %39, i64 2, !dbg !22
  %44 = fmul float %43, %28, !dbg !23
  %45 = extractelement <4 x float> %39, i64 1, !dbg !22
  %46 = fmul float %45, %28, !dbg !23
  %47 = extractelement <4 x float> %39, i64 0, !dbg !22
  %48 = fmul float %47, %28, !dbg !23
  %49 = extractelement <4 x i1> %40, i64 3, !dbg !24
  %50 = select i1 %49, float %41, float %42, !dbg !24
  %51 = extractelement <4 x i1> %40, i64 2, !dbg !24
  %52 = select i1 %51, float %43, float %44, !dbg !24
  %53 = extractelement <4 x i1> %40, i64 1, !dbg !24
  %54 = select i1 %53, float %45, float %46, !dbg !24
  %55 = extractelement <4 x i1> %40, i64 0, !dbg !24
  %56 = select i1 %55, float %47, float %48, !dbg !24
  %57 = bitcast float %41 to i32, !dbg !22
  %58 = bitcast float %43 to i32, !dbg !22
  %59 = bitcast float %45 to i32, !dbg !22
  %60 = bitcast float %47 to i32, !dbg !22
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %57, i32 %58, i32 %59, i32 %60, ptr addrspace(1) %14, i1 true) #1, !dbg !22
  %61 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !25
  %62 = bitcast float %50 to i32, !dbg !26
  %63 = bitcast float %52 to i32, !dbg !26
  %64 = bitcast float %54 to i32, !dbg !26
  %65 = bitcast float %56 to i32, !dbg !26
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %62, i32 %63, i32 %64, i32 %65, ptr addrspace(1) %61, i1 true) #1, !dbg !26
  ret void, !dbg !27
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmepiyprnc2kix47silqzbr42qgbvczi2ukiyneuda25jiyrm5ns.py", directory: "inductor_cache/me")
!4 = !{ptr @triton_poi_fused__prelu_kernel_convolution_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__prelu_kernel_convolution_17, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__prelu_kernel_convolution_17", linkageName: "triton_poi_fused__prelu_kernel_convolution_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 18, scope: !7)
!21 = !DILocation(line: 32, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 39, scope: !7)
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 32, scope: !7)
!25 = !DILocation(line: 36, column: 25, scope: !7)
!26 = !DILocation(line: 36, column: 36, scope: !7)
!27 = !DILocation(line: 36, column: 4, scope: !7)
