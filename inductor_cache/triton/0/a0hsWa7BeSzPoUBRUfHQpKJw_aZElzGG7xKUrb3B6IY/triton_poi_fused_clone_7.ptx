//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_7 // -- Begin function triton_poi_fused_clone_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_7
.visible .entry triton_poi_fused_clone_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_7_param_1,
	.param .u32 triton_poi_fused_clone_7_param_2,
	.param .u32 triton_poi_fused_clone_7_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_clone_7_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_clone_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:22:33
	shl.b32 	%r19, %r1, 5;
	.loc	1 23 44                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:23:44
	mov.u32 	%r20, %tid.x;
	bfe.u32 	%r21, %r20, 2, 5;
	and.b32  	%r22, %r20, 31;
	.loc	1 23 23                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:23:23
	or.b32  	%r23, %r19, %r21;
	or.b32  	%r24, %r19, %r22;
	.loc	1 24 21                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:24:21
	setp.lt.s32 	%p10, %r23, 17;
	setp.lt.s32 	%p11, %r24, 17;
	.loc	1 25 28                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:25:33
	shl.b32 	%r25, %r2, 4;
	.loc	1 26 44                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:26:44
	shl.b32 	%r26, %r20, 2;
	and.b32  	%r27, %r26, 12;
	bfe.u32 	%r28, %r20, 5, 2;
	.loc	1 26 23                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:26:23
	or.b32  	%r29, %r25, %r27;
	or.b32  	%r30, %r25, %r28;
	or.b32  	%r31, %r30, 4;
	or.b32  	%r32, %r30, 8;
	or.b32  	%r33, %r30, 12;
	.loc	1 27 21                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:27:21
	setp.lt.s32 	%p12, %r29, 16;
	setp.lt.s32 	%p13, %r30, 16;
	setp.lt.s32 	%p14, %r31, 16;
	setp.lt.s32 	%p15, %r32, 16;
	setp.lt.s32 	%p16, %r33, 16;
	.loc	1 30 38                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:30:38
	mad.lo.s32 	%r34, %r30, 17, %r24;
	.loc	1 30 35                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:30:35
	add.s32 	%r35, %r34, 68;
	add.s32 	%r36, %r34, 136;
	add.s32 	%r37, %r34, 204;
	.loc	1 30 30                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:30:30
	mul.wide.s32 	%rd8, %r34, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r35, 4;
	add.s64 	%rd2, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r36, 4;
	add.s64 	%rd3, %rd6, %rd10;
	mul.wide.s32 	%rd11, %r37, 4;
	add.s64 	%rd4, %rd6, %rd11;
	.loc	1 30 51                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:30:51
	and.pred  	%p9, %p10, %p12;
	and.pred  	%p1, %p11, %p13;
	and.pred  	%p2, %p14, %p11;
	and.pred  	%p3, %p15, %p11;
	and.pred  	%p4, %p16, %p11;
	.loc	1 30 43                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:30:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 33                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:31:33
	shl.b32 	%r38, %r23, 4;
	.loc	1 31 30                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:31:30
	add.s32 	%r39, %r29, %r38;
	.loc	1 31 25                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:31:25
	mul.wide.s32 	%rd12, %r39, 4;
	add.s64 	%rd5, %rd7, %rd12;
	.loc	1 31 44                         // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:31:44
	shl.b32 	%r40, %r20, 4;
	and.b32  	%r41, %r40, 496;
	or.b32  	%r42, %r41, %r28;
	and.b32  	%r43, %r26, 508;
	bfe.u32 	%r44, %r40, 4, 5;
	add.s32 	%r45, %r44, %r42;
	shl.b32 	%r46, %r45, 2;
	mov.u32 	%r47, global_smem;
	add.s32 	%r7, %r47, %r46;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	add.s32 	%r9, %r7, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	add.s32 	%r11, %r7, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r7, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r48, %r26, 4, 5;
	add.s32 	%r49, %r48, %r43;
	shl.b32 	%r50, %r49, 2;
	add.s32 	%r51, %r47, %r50;
	ld.shared.u32 	%r15, [%r51];
	ld.shared.u32 	%r16, [%r51+4];
	ld.shared.u32 	%r17, [%r51+8];
	ld.shared.u32 	%r18, [%r51+12];
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd5 + 0 ], { %r15, %r16, %r17, %r18 };
	// end inline asm
	.loc	1 31 4                          // cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py:31:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dw/cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 119
.b8 97
.b8 104
.b8 103
.b8 54
.b8 53
.b8 121
.b8 120
.b8 52
.b8 120
.b8 53
.b8 53
.b8 107
.b8 118
.b8 100
.b8 119
.b8 52
.b8 115
.b8 103
.b8 112
.b8 122
.b8 110
.b8 105
.b8 99
.b8 107
.b8 118
.b8 118
.b8 103
.b8 114
.b8 52
.b8 105
.b8 101
.b8 100
.b8 100
.b8 111
.b8 104
.b8 103
.b8 104
.b8 52
.b8 99
.b8 101
.b8 54
.b8 105
.b8 115
.b8 119
.b8 117
.b8 99
.b8 99
.b8 100
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
