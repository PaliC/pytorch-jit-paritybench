; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_7(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 2, !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = and i32 %7, 31, !dbg !12
  %11 = or disjoint i32 %6, %9, !dbg !13
  %12 = or disjoint i32 %6, %10, !dbg !13
  %13 = icmp slt i32 %11, 17, !dbg !14
  %14 = icmp slt i32 %12, 17, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %16 = shl i32 %15, 4, !dbg !16
  %17 = shl i32 %7, 2, !dbg !17
  %18 = and i32 %17, 12, !dbg !17
  %19 = lshr i32 %7, 5, !dbg !17
  %20 = and i32 %19, 3, !dbg !17
  %21 = or disjoint i32 %16, %18, !dbg !18
  %22 = or disjoint i32 %16, %20, !dbg !18
  %23 = or disjoint i32 %22, 4, !dbg !18
  %24 = or disjoint i32 %22, 8, !dbg !18
  %25 = or disjoint i32 %22, 12, !dbg !18
  %26 = icmp slt i32 %21, 16, !dbg !19
  %27 = icmp slt i32 %22, 16, !dbg !19
  %28 = icmp slt i32 %23, 16, !dbg !19
  %29 = icmp slt i32 %24, 16, !dbg !19
  %30 = icmp slt i32 %25, 16, !dbg !19
  %31 = mul i32 %22, 17, !dbg !20
  %32 = mul i32 %23, 17, !dbg !20
  %33 = mul i32 %24, 17, !dbg !20
  %34 = mul i32 %25, 17, !dbg !20
  %35 = add i32 %31, %12, !dbg !21
  %36 = add i32 %12, %32, !dbg !21
  %37 = add i32 %12, %33, !dbg !21
  %38 = add i32 %12, %34, !dbg !21
  %39 = sext i32 %35 to i64, !dbg !22
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !22
  %41 = sext i32 %36 to i64, !dbg !22
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !22
  %43 = sext i32 %37 to i64, !dbg !22
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !22
  %45 = sext i32 %38 to i64, !dbg !22
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !22
  %47 = and i1 %13, %26, !dbg !23
  %48 = and i1 %14, %27, !dbg !23
  %49 = and i1 %28, %14, !dbg !23
  %50 = and i1 %29, %14, !dbg !23
  %51 = and i1 %30, %14, !dbg !23
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %48) #2, !dbg !24
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %49) #2, !dbg !24
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %50) #2, !dbg !24
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %51) #2, !dbg !24
  %56 = shl i32 %11, 4, !dbg !25
  %57 = add i32 %21, %56, !dbg !26
  %58 = sext i32 %57 to i64, !dbg !27
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !27
  %60 = shl i32 %7, 4, !dbg !28
  %61 = and i32 %60, 496, !dbg !28
  %62 = or disjoint i32 %61, %20, !dbg !28
  %63 = and i32 %17, 508, !dbg !28
  %64 = lshr exact i32 %61, 4, !dbg !28
  %65 = add nuw nsw i32 %64, %62, !dbg !28
  %66 = zext nneg i32 %65 to i64, !dbg !28
  %67 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %66, !dbg !28
  %68 = insertelement <1 x i32> poison, i32 %52, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %67, <1 x i32> %68, i1 true) #2, !dbg !28
  %69 = or disjoint i32 %62, 4, !dbg !28
  %70 = add nuw nsw i32 %69, %64, !dbg !28
  %71 = zext nneg i32 %70 to i64, !dbg !28
  %72 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %71, !dbg !28
  %73 = insertelement <1 x i32> poison, i32 %53, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %72, <1 x i32> %73, i1 true) #2, !dbg !28
  %74 = or disjoint i32 %62, 8, !dbg !28
  %75 = add nuw nsw i32 %74, %64, !dbg !28
  %76 = zext nneg i32 %75 to i64, !dbg !28
  %77 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %76, !dbg !28
  %78 = insertelement <1 x i32> poison, i32 %54, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %77, <1 x i32> %78, i1 true) #2, !dbg !28
  %79 = or disjoint i32 %62, 12, !dbg !28
  %80 = add nuw nsw i32 %79, %64, !dbg !28
  %81 = zext nneg i32 %80 to i64, !dbg !28
  %82 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %81, !dbg !28
  %83 = insertelement <1 x i32> poison, i32 %55, i64 0, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %82, <1 x i32> %83, i1 true) #2, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %84 = lshr i32 %63, 4, !dbg !28
  %85 = add nuw nsw i32 %84, %63, !dbg !28
  %86 = zext nneg i32 %85 to i64, !dbg !28
  %87 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %86, !dbg !28
  %88 = load i32, ptr addrspace(3) %87, align 4, !dbg !28
  %89 = or disjoint i32 %63, 1, !dbg !28
  %90 = add nuw nsw i32 %89, %84, !dbg !28
  %91 = zext nneg i32 %90 to i64, !dbg !28
  %92 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %91, !dbg !28
  %93 = load i32, ptr addrspace(3) %92, align 4, !dbg !28
  %94 = or disjoint i32 %63, 2, !dbg !28
  %95 = add nuw nsw i32 %94, %84, !dbg !28
  %96 = zext nneg i32 %95 to i64, !dbg !28
  %97 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %96, !dbg !28
  %98 = load i32, ptr addrspace(3) %97, align 4, !dbg !28
  %99 = or disjoint i32 %63, 3, !dbg !28
  %100 = add nuw nsw i32 %99, %84, !dbg !28
  %101 = zext nneg i32 %100 to i64, !dbg !28
  %102 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %101, !dbg !28
  %103 = load i32, ptr addrspace(3) %102, align 4, !dbg !28
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %88, i32 %93, i32 %98, i32 %103, ptr addrspace(1) %59, i1 %47) #2, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdwahg65yx4x55kvdw4sgpznickvvgr4ieddohgh4ce6iswuccdu.py", directory: "inductor_cache/dw")
!4 = !{ptr @triton_poi_fused_clone_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_7", linkageName: "triton_poi_fused_clone_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 38, scope: !7)
!21 = !DILocation(line: 30, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 51, scope: !7)
!24 = !DILocation(line: 30, column: 43, scope: !7)
!25 = !DILocation(line: 31, column: 33, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 25, scope: !7)
!28 = !DILocation(line: 31, column: 44, scope: !7)
!29 = !DILocation(line: 31, column: 4, scope: !7)
