#loc = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0)
#loc1 = loc(unknown)
#loc138 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":116:27)
#loc179 = loc(callsite(#loc1 at #loc138))
module {
  tt.func public @triton_red_fused_max_pool2d_with_indices_mean_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0), %arg3: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2.560000e+02> : tensor<2x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<2x256xi8> loc(#loc1)
    %cst_1 = arith.constant dense<7> : tensor<2x256xi8> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<2x256xi8> loc(#loc1)
    %cst_3 = arith.constant dense<5> : tensor<2x256xi8> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<2x256xi8> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<2x256xi8> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<2x256xi8> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<2x256xi8> loc(#loc1)
    %cst_8 = arith.constant dense<1> : tensor<2x256xi8> loc(#loc1)
    %cst_9 = arith.constant dense<33> : tensor<1x256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<32> : tensor<1x256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<31> : tensor<1x256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<-31> : tensor<1x256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<1> : tensor<1x256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<-32> : tensor<1x256xi32> loc(#loc1)
    %cst_15 = arith.constant dense<0xFF800000> : tensor<2x256xf32> loc(#loc1)
    %cst_16 = arith.constant dense<1024> : tensor<2x1xi32> loc(#loc1)
    %cst_17 = arith.constant dense<64> : tensor<1x256xi32> loc(#loc1)
    %cst_18 = arith.constant dense<-33> : tensor<1x256xi32> loc(#loc1)
    %cst_19 = arith.constant dense<32> : tensor<1x256xi64> loc(#loc1)
    %cst_20 = arith.constant dense<0> : tensor<1x256xi64> loc(#loc1)
    %cst_21 = arith.constant dense<-1> : tensor<1x256xi32> loc(#loc1)
    %cst_22 = arith.constant dense<2> : tensor<1x256xi32> loc(#loc1)
    %cst_23 = arith.constant dense<16> : tensor<1x256xi32> loc(#loc1)
    %cst_24 = arith.constant dense<256> : tensor<1x256xi32> loc(#loc1)
    %cst_25 = arith.constant dense<0.000000e+00> : tensor<2x256xf32> loc(#loc1)
    %cst_26 = arith.constant dense<256> : tensor<2x1xi32> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c2_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<2xi32> -> tensor<2x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<2x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<2x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_26 : tensor<2x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_24 : tensor<1x256xi32> loc(#loc10)
    %10 = arith.divsi %8, %cst_23 : tensor<1x256xi32> loc(#loc11)
    %11 = arith.remsi %8, %cst_23 : tensor<1x256xi32> loc(#loc12)
    %12 = arith.muli %10, %cst_22 : tensor<1x256xi32> loc(#loc13)
    %13 = arith.addi %12, %cst_21 : tensor<1x256xi32> loc(#loc14)
    %14 = arith.extsi %13 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc15)
    %15 = arith.cmpi sge, %14, %cst_20 : tensor<1x256xi64> loc(#loc15)
    %16 = arith.cmpi slt, %14, %cst_19 : tensor<1x256xi64> loc(#loc16)
    %17 = arith.andi %15, %16 : tensor<1x256xi1> loc(#loc17)
    %18 = arith.muli %11, %cst_22 : tensor<1x256xi32> loc(#loc18)
    %19 = arith.addi %18, %cst_21 : tensor<1x256xi32> loc(#loc19)
    %20 = arith.extsi %19 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc20)
    %21 = arith.cmpi sge, %20, %cst_20 : tensor<1x256xi64> loc(#loc20)
    %22 = arith.cmpi slt, %20, %cst_19 : tensor<1x256xi64> loc(#loc21)
    %23 = arith.andi %21, %22 : tensor<1x256xi1> loc(#loc22)
    %24 = arith.andi %17, %23 : tensor<1x256xi1> loc(#loc23)
    %25 = arith.addi %18, %cst_18 : tensor<1x256xi32> loc(#loc24)
    %26 = arith.muli %10, %cst_17 : tensor<1x256xi32> loc(#loc25)
    %27 = arith.addi %25, %26 : tensor<1x256xi32> loc(#loc26)
    %28 = arith.muli %5, %cst_16 : tensor<2x1xi32> loc(#loc27)
    %29 = tt.broadcast %27 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc28)
    %30 = tt.broadcast %28 : tensor<2x1xi32> -> tensor<2x256xi32> loc(#loc28)
    %31 = arith.addi %29, %30 : tensor<2x256xi32> loc(#loc28)
    %32 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x256x!tt.ptr<f32>> loc(#loc29)
    %33 = tt.addptr %32, %31 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc29)
    %34 = arith.andi %9, %24 : tensor<1x256xi1> loc(#loc30)
    %35 = tt.broadcast %34 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc31)
    %36 = tt.broadcast %6 : tensor<2x1xi1> -> tensor<2x256xi1> loc(#loc31)
    %37 = arith.andi %35, %36 : tensor<2x256xi1> loc(#loc31)
    %38 = tt.load %33, %37, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc32)
    %39 = arith.extsi %18 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc33)
    %40 = arith.cmpi sge, %39, %cst_20 : tensor<1x256xi64> loc(#loc33)
    %41 = arith.cmpi slt, %39, %cst_19 : tensor<1x256xi64> loc(#loc34)
    %42 = arith.andi %40, %41 : tensor<1x256xi1> loc(#loc35)
    %43 = arith.andi %17, %42 : tensor<1x256xi1> loc(#loc36)
    %44 = arith.addi %18, %cst_14 : tensor<1x256xi32> loc(#loc37)
    %45 = arith.addi %44, %26 : tensor<1x256xi32> loc(#loc38)
    %46 = tt.broadcast %45 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc39)
    %47 = arith.addi %46, %30 : tensor<2x256xi32> loc(#loc39)
    %48 = tt.addptr %32, %47 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc40)
    %49 = arith.andi %9, %43 : tensor<1x256xi1> loc(#loc41)
    %50 = tt.broadcast %49 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc42)
    %51 = arith.andi %50, %36 : tensor<2x256xi1> loc(#loc42)
    %52 = tt.load %48, %51, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc43)
    %53 = arith.cmpf ogt, %52, %38 : tensor<2x256xf32> loc(#loc146)
    %54 = arith.cmpf une, %52, %52 : tensor<2x256xf32> loc(#loc147)
    %55 = arith.ori %53, %54 : tensor<2x256xi1> loc(#loc148)
    %56 = arith.select %55, %52, %38 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc149)
    %57 = arith.addi %18, %cst_13 : tensor<1x256xi32> loc(#loc49)
    %58 = arith.extsi %57 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc50)
    %59 = arith.cmpi sge, %58, %cst_20 : tensor<1x256xi64> loc(#loc50)
    %60 = arith.cmpi slt, %58, %cst_19 : tensor<1x256xi64> loc(#loc51)
    %61 = arith.andi %59, %60 : tensor<1x256xi1> loc(#loc52)
    %62 = arith.andi %17, %61 : tensor<1x256xi1> loc(#loc53)
    %63 = arith.addi %18, %cst_12 : tensor<1x256xi32> loc(#loc54)
    %64 = arith.addi %63, %26 : tensor<1x256xi32> loc(#loc55)
    %65 = tt.broadcast %64 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc56)
    %66 = arith.addi %65, %30 : tensor<2x256xi32> loc(#loc56)
    %67 = tt.addptr %32, %66 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc57)
    %68 = arith.andi %9, %62 : tensor<1x256xi1> loc(#loc58)
    %69 = tt.broadcast %68 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc59)
    %70 = arith.andi %69, %36 : tensor<2x256xi1> loc(#loc59)
    %71 = tt.load %67, %70, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc60)
    %72 = arith.cmpf ogt, %71, %56 : tensor<2x256xf32> loc(#loc150)
    %73 = arith.cmpf une, %71, %71 : tensor<2x256xf32> loc(#loc151)
    %74 = arith.ori %72, %73 : tensor<2x256xi1> loc(#loc152)
    %75 = arith.select %74, %71, %56 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc153)
    %76 = arith.extsi %12 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc62)
    %77 = arith.cmpi sge, %76, %cst_20 : tensor<1x256xi64> loc(#loc62)
    %78 = arith.cmpi slt, %76, %cst_19 : tensor<1x256xi64> loc(#loc63)
    %79 = arith.andi %77, %78 : tensor<1x256xi1> loc(#loc64)
    %80 = arith.andi %79, %23 : tensor<1x256xi1> loc(#loc65)
    %81 = arith.addi %19, %26 : tensor<1x256xi32> loc(#loc66)
    %82 = tt.broadcast %81 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc67)
    %83 = arith.addi %82, %30 : tensor<2x256xi32> loc(#loc67)
    %84 = tt.addptr %32, %83 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc68)
    %85 = arith.andi %9, %80 : tensor<1x256xi1> loc(#loc69)
    %86 = tt.broadcast %85 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc70)
    %87 = arith.andi %86, %36 : tensor<2x256xi1> loc(#loc70)
    %88 = tt.load %84, %87, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc71)
    %89 = arith.cmpf ogt, %88, %75 : tensor<2x256xf32> loc(#loc154)
    %90 = arith.cmpf une, %88, %88 : tensor<2x256xf32> loc(#loc155)
    %91 = arith.ori %89, %90 : tensor<2x256xi1> loc(#loc156)
    %92 = arith.select %91, %88, %75 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc157)
    %93 = arith.andi %79, %42 : tensor<1x256xi1> loc(#loc73)
    %94 = arith.addi %18, %26 : tensor<1x256xi32> loc(#loc74)
    %95 = tt.broadcast %94 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc75)
    %96 = arith.addi %95, %30 : tensor<2x256xi32> loc(#loc75)
    %97 = tt.addptr %32, %96 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc76)
    %98 = arith.andi %9, %93 : tensor<1x256xi1> loc(#loc77)
    %99 = tt.broadcast %98 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc78)
    %100 = arith.andi %99, %36 : tensor<2x256xi1> loc(#loc78)
    %101 = tt.load %97, %100, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc79)
    %102 = arith.cmpf ogt, %101, %92 : tensor<2x256xf32> loc(#loc158)
    %103 = arith.cmpf une, %101, %101 : tensor<2x256xf32> loc(#loc159)
    %104 = arith.ori %102, %103 : tensor<2x256xi1> loc(#loc160)
    %105 = arith.select %104, %101, %92 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc161)
    %106 = arith.andi %79, %61 : tensor<1x256xi1> loc(#loc81)
    %107 = arith.addi %57, %26 : tensor<1x256xi32> loc(#loc82)
    %108 = tt.broadcast %107 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc83)
    %109 = arith.addi %108, %30 : tensor<2x256xi32> loc(#loc83)
    %110 = tt.addptr %32, %109 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc84)
    %111 = arith.andi %9, %106 : tensor<1x256xi1> loc(#loc85)
    %112 = tt.broadcast %111 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc86)
    %113 = arith.andi %112, %36 : tensor<2x256xi1> loc(#loc86)
    %114 = tt.load %110, %113, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc87)
    %115 = arith.cmpf ogt, %114, %105 : tensor<2x256xf32> loc(#loc162)
    %116 = arith.cmpf une, %114, %114 : tensor<2x256xf32> loc(#loc163)
    %117 = arith.ori %115, %116 : tensor<2x256xi1> loc(#loc164)
    %118 = arith.select %117, %114, %105 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc165)
    %119 = arith.addi %12, %cst_13 : tensor<1x256xi32> loc(#loc89)
    %120 = arith.extsi %119 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc90)
    %121 = arith.cmpi sge, %120, %cst_20 : tensor<1x256xi64> loc(#loc90)
    %122 = arith.cmpi slt, %120, %cst_19 : tensor<1x256xi64> loc(#loc91)
    %123 = arith.andi %121, %122 : tensor<1x256xi1> loc(#loc92)
    %124 = arith.andi %123, %23 : tensor<1x256xi1> loc(#loc93)
    %125 = arith.addi %18, %cst_11 : tensor<1x256xi32> loc(#loc94)
    %126 = arith.addi %125, %26 : tensor<1x256xi32> loc(#loc95)
    %127 = tt.broadcast %126 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc96)
    %128 = arith.addi %127, %30 : tensor<2x256xi32> loc(#loc96)
    %129 = tt.addptr %32, %128 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc97)
    %130 = arith.andi %9, %124 : tensor<1x256xi1> loc(#loc98)
    %131 = tt.broadcast %130 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc99)
    %132 = arith.andi %131, %36 : tensor<2x256xi1> loc(#loc99)
    %133 = tt.load %129, %132, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc100)
    %134 = arith.cmpf ogt, %133, %118 : tensor<2x256xf32> loc(#loc166)
    %135 = arith.cmpf une, %133, %133 : tensor<2x256xf32> loc(#loc167)
    %136 = arith.ori %134, %135 : tensor<2x256xi1> loc(#loc168)
    %137 = arith.select %136, %133, %118 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc169)
    %138 = arith.andi %123, %42 : tensor<1x256xi1> loc(#loc102)
    %139 = arith.addi %18, %cst_10 : tensor<1x256xi32> loc(#loc103)
    %140 = arith.addi %139, %26 : tensor<1x256xi32> loc(#loc104)
    %141 = tt.broadcast %140 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc105)
    %142 = arith.addi %141, %30 : tensor<2x256xi32> loc(#loc105)
    %143 = tt.addptr %32, %142 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc106)
    %144 = arith.andi %9, %138 : tensor<1x256xi1> loc(#loc107)
    %145 = tt.broadcast %144 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc108)
    %146 = arith.andi %145, %36 : tensor<2x256xi1> loc(#loc108)
    %147 = tt.load %143, %146, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc109)
    %148 = arith.cmpf ogt, %147, %137 : tensor<2x256xf32> loc(#loc170)
    %149 = arith.cmpf une, %147, %147 : tensor<2x256xf32> loc(#loc171)
    %150 = arith.ori %148, %149 : tensor<2x256xi1> loc(#loc172)
    %151 = arith.select %150, %147, %137 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc173)
    %152 = arith.andi %123, %61 : tensor<1x256xi1> loc(#loc111)
    %153 = arith.addi %18, %cst_9 : tensor<1x256xi32> loc(#loc112)
    %154 = arith.addi %153, %26 : tensor<1x256xi32> loc(#loc113)
    %155 = tt.broadcast %154 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc114)
    %156 = arith.addi %155, %30 : tensor<2x256xi32> loc(#loc114)
    %157 = tt.addptr %32, %156 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc115)
    %158 = arith.andi %9, %152 : tensor<1x256xi1> loc(#loc116)
    %159 = tt.broadcast %158 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc117)
    %160 = arith.andi %159, %36 : tensor<2x256xi1> loc(#loc117)
    %161 = tt.load %157, %160, %cst_15 evictionPolicy = evict_last : tensor<2x256x!tt.ptr<f32>> loc(#loc118)
    %162 = arith.cmpf ogt, %161, %151 : tensor<2x256xf32> loc(#loc174)
    %163 = arith.cmpf une, %161, %161 : tensor<2x256xf32> loc(#loc175)
    %164 = arith.ori %162, %163 : tensor<2x256xi1> loc(#loc176)
    %165 = arith.select %164, %161, %151 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc177)
    %166 = arith.select %53, %cst_8, %cst_7 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc120)
    %167 = arith.select %72, %cst_6, %166 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc121)
    %168 = arith.select %89, %cst_5, %167 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc122)
    %169 = arith.select %102, %cst_4, %168 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc123)
    %170 = arith.select %115, %cst_3, %169 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc124)
    %171 = arith.select %134, %cst_2, %170 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc125)
    %172 = arith.select %148, %cst_1, %171 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc126)
    %173 = arith.select %162, %cst_0, %172 : tensor<2x256xi1>, tensor<2x256xi8> loc(#loc127)
    %174 = arith.addf %165, %cst_25 : tensor<2x256xf32> loc(#loc128)
    %175 = tt.broadcast %9 : tensor<1x256xi1> -> tensor<2x256xi1> loc(#loc129)
    %176 = arith.andi %175, %36 : tensor<2x256xi1> loc(#loc129)
    %177 = arith.select %176, %174, %cst_25 : tensor<2x256xi1>, tensor<2x256xf32> loc(#loc130)
    %178 = arith.muli %5, %cst_26 : tensor<2x1xi32> loc(#loc131)
    %179 = tt.broadcast %8 : tensor<1x256xi32> -> tensor<2x256xi32> loc(#loc132)
    %180 = tt.broadcast %178 : tensor<2x1xi32> -> tensor<2x256xi32> loc(#loc132)
    %181 = arith.addi %179, %180 : tensor<2x256xi32> loc(#loc132)
    %182 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2x256x!tt.ptr<f32>> loc(#loc133)
    %183 = tt.addptr %182, %181 : tensor<2x256x!tt.ptr<f32>>, tensor<2x256xi32> loc(#loc133)
    tt.store %183, %165, %176 : tensor<2x256x!tt.ptr<f32>> loc(#loc134)
    %184 = tt.splat %arg3 : !tt.ptr<i8> -> tensor<2x256x!tt.ptr<i8>> loc(#loc135)
    %185 = tt.addptr %184, %181 : tensor<2x256x!tt.ptr<i8>>, tensor<2x256xi32> loc(#loc135)
    tt.store %185, %173, %176 : tensor<2x256x!tt.ptr<i8>> loc(#loc136)
    %186 = "tt.reduce"(%177) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc138)), %arg7: f32 loc(callsite(#loc1 at #loc138))):
      %191 = arith.addf %arg6, %arg7 : f32 loc(#loc181)
      tt.reduce.return %191 : f32 loc(#loc178)
    }) : (tensor<2x256xf32>) -> tensor<2xf32> loc(#loc178)
    %187 = tt.expand_dims %186 {axis = 1 : i32} : tensor<2xf32> -> tensor<2x1xf32> loc(#loc140)
    %188 = arith.divf %187, %cst : tensor<2x1xf32> loc(#loc141)
    gpu.barrier loc(#loc142)
    %189 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2x1x!tt.ptr<f32>> loc(#loc143)
    %190 = tt.addptr %189, %5 : tensor<2x1x!tt.ptr<f32>>, tensor<2x1xi32> loc(#loc143)
    tt.store %190, %188, %6 : tensor<2x1x!tt.ptr<f32>> loc(#loc144)
    tt.return loc(#loc145)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":22:28)
#loc3 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":22:33)
#loc4 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":23:36)
#loc5 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":23:44)
#loc6 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":23:23)
#loc7 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":24:21)
#loc8 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":25:25)
#loc9 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":25:33)
#loc10 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":30:25)
#loc11 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":31:23)
#loc12 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":32:23)
#loc13 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":34:24)
#loc14 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":34:22)
#loc15 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":36:23)
#loc16 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":38:22)
#loc17 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":39:22)
#loc18 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":40:24)
#loc19 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":40:22)
#loc20 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":41:23)
#loc21 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":42:22)
#loc22 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":43:22)
#loc23 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":44:23)
#loc24 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:43)
#loc25 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:53)
#loc26 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:50)
#loc27 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:63)
#loc28 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:58)
#loc29 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:35)
#loc30 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:76)
#loc31 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:84)
#loc32 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":45:68)
#loc33 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":47:25)
#loc34 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":48:24)
#loc35 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":49:24)
#loc36 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":50:23)
#loc37 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:43)
#loc38 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:50)
#loc39 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:58)
#loc40 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:35)
#loc41 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:76)
#loc42 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:84)
#loc43 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":51:68)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc45 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":52:46)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc49 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":53:20)
#loc50 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":54:25)
#loc51 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":55:24)
#loc52 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":56:24)
#loc53 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":57:23)
#loc54 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:43)
#loc55 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:50)
#loc56 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:58)
#loc57 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:35)
#loc58 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:76)
#loc59 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:84)
#loc60 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":58:68)
#loc61 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":59:46)
#loc62 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":61:25)
#loc63 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":62:24)
#loc64 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":63:24)
#loc65 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":64:24)
#loc66 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:49)
#loc67 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:57)
#loc68 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:35)
#loc69 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:75)
#loc70 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:83)
#loc71 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":65:67)
#loc72 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":66:46)
#loc73 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":67:24)
#loc74 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:42)
#loc75 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:50)
#loc76 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:35)
#loc77 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:68)
#loc78 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:76)
#loc79 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":68:60)
#loc80 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":69:46)
#loc81 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":70:24)
#loc82 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:46)
#loc83 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:54)
#loc84 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:35)
#loc85 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:72)
#loc86 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:80)
#loc87 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":71:64)
#loc88 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":72:46)
#loc89 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":73:20)
#loc90 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":74:25)
#loc91 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":75:24)
#loc92 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":76:24)
#loc93 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":77:24)
#loc94 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:40)
#loc95 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:47)
#loc96 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:55)
#loc97 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:35)
#loc98 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:73)
#loc99 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:81)
#loc100 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":78:65)
#loc101 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":79:46)
#loc102 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":80:24)
#loc103 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:40)
#loc104 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:47)
#loc105 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:55)
#loc106 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:35)
#loc107 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:73)
#loc108 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:81)
#loc109 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":81:65)
#loc110 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":82:46)
#loc111 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":83:24)
#loc112 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:40)
#loc113 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:47)
#loc114 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:55)
#loc115 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:35)
#loc116 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:73)
#loc117 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:81)
#loc118 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":84:65)
#loc119 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":85:46)
#loc120 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":89:39)
#loc121 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":92:39)
#loc122 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":95:39)
#loc123 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":98:39)
#loc124 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":101:39)
#loc125 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":104:39)
#loc126 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":107:39)
#loc127 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":110:39)
#loc128 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":112:25)
#loc129 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":113:34)
#loc130 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":113:48)
#loc131 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":114:38)
#loc132 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":114:34)
#loc133 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":114:29)
#loc134 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":114:50)
#loc135 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":115:29)
#loc136 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":115:50)
#loc137 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc139 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc140 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":116:30)
#loc141 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":118:20)
#loc142 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":119:4)
#loc143 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":120:28)
#loc144 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":120:40)
#loc145 = loc("inductor_cache/br/cbr67f4fimcgukvib6px57jn5xmt22fdwokdlr3pfvw36l2fbsgi.py":120:4)
#loc146 = loc(callsite(#loc44 at #loc45))
#loc147 = loc(callsite(#loc46 at #loc45))
#loc148 = loc(callsite(#loc47 at #loc45))
#loc149 = loc(callsite(#loc48 at #loc45))
#loc150 = loc(callsite(#loc44 at #loc61))
#loc151 = loc(callsite(#loc46 at #loc61))
#loc152 = loc(callsite(#loc47 at #loc61))
#loc153 = loc(callsite(#loc48 at #loc61))
#loc154 = loc(callsite(#loc44 at #loc72))
#loc155 = loc(callsite(#loc46 at #loc72))
#loc156 = loc(callsite(#loc47 at #loc72))
#loc157 = loc(callsite(#loc48 at #loc72))
#loc158 = loc(callsite(#loc44 at #loc80))
#loc159 = loc(callsite(#loc46 at #loc80))
#loc160 = loc(callsite(#loc47 at #loc80))
#loc161 = loc(callsite(#loc48 at #loc80))
#loc162 = loc(callsite(#loc44 at #loc88))
#loc163 = loc(callsite(#loc46 at #loc88))
#loc164 = loc(callsite(#loc47 at #loc88))
#loc165 = loc(callsite(#loc48 at #loc88))
#loc166 = loc(callsite(#loc44 at #loc101))
#loc167 = loc(callsite(#loc46 at #loc101))
#loc168 = loc(callsite(#loc47 at #loc101))
#loc169 = loc(callsite(#loc48 at #loc101))
#loc170 = loc(callsite(#loc44 at #loc110))
#loc171 = loc(callsite(#loc46 at #loc110))
#loc172 = loc(callsite(#loc47 at #loc110))
#loc173 = loc(callsite(#loc48 at #loc110))
#loc174 = loc(callsite(#loc44 at #loc119))
#loc175 = loc(callsite(#loc46 at #loc119))
#loc176 = loc(callsite(#loc47 at #loc119))
#loc177 = loc(callsite(#loc48 at #loc119))
#loc178 = loc(callsite(#loc137 at #loc138))
#loc180 = loc(callsite(#loc139 at #loc137))
#loc181 = loc(callsite(#loc180 at #loc138))
