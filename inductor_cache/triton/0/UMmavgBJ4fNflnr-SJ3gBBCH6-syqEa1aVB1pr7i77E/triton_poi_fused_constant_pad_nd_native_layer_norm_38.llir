; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_native_layer_norm_38(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 150528, !dbg !14
  %13 = sdiv i32 %11, 37632, !dbg !15
  %14 = srem i32 %11, 5376, !dbg !16
  %15 = srem i32 %11, 768, !dbg !17
  %16 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !18
  %17 = shufflevector <2 x i32> %16, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !18
  %18 = sdiv <2 x i32> %17, <i32 5376, i32 768>, !dbg !18
  %19 = srem <2 x i32> %18, splat (i32 7), !dbg !19
  %20 = icmp slt <2 x i32> %19, splat (i32 2), !dbg !20
  %shift = shufflevector <2 x i1> %20, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !21
  %21 = and <2 x i1> %20, %shift, !dbg !21
  %22 = extractelement <2 x i1> %21, i64 0, !dbg !21
  %23 = extractelement <2 x i32> %19, i64 0, !dbg !22
  %24 = mul nsw i32 %23, 1536, !dbg !22
  %25 = mul nsw i32 %13, 3072, !dbg !23
  %26 = add nsw i32 %25, %14, !dbg !24
  %27 = add nsw i32 %26, %24, !dbg !25
  %28 = sext i32 %27 to i64, !dbg !26
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !26
  %30 = and i1 %12, %22, !dbg !27
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %29, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !28
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !28
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !28
  %34 = bitcast i32 %32 to float, !dbg !28
  %35 = bitcast i32 %33 to float, !dbg !28
  %36 = sext i32 %15 to i64, !dbg !29
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !29
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %37, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !30
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !30
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !30
  %41 = bitcast i32 %39 to float, !dbg !30
  %42 = bitcast i32 %40 to float, !dbg !30
  %43 = fmul float %34, %41, !dbg !31
  %44 = fmul float %35, %42, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !32
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %45, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !33
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !33
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !33
  %49 = bitcast i32 %47 to float, !dbg !33
  %50 = bitcast i32 %48 to float, !dbg !33
  %51 = fadd float %43, %49, !dbg !34
  %52 = fadd float %44, %50, !dbg !34
  %53 = sext i32 %11 to i64, !dbg !35
  %54 = getelementptr float, ptr addrspace(1) %3, i64 %53, !dbg !35
  %55 = bitcast float %51 to i32, !dbg !36
  %56 = select i1 %22, i32 %55, i32 0, !dbg !37
  %57 = bitcast float %52 to i32, !dbg !36
  %58 = select i1 %22, i32 %57, i32 0, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %56, i32 %58, ptr addrspace(1) %54, i1 %12) #1, !dbg !36
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyjhsow4uxh7qqbpvnuuab6s3t2cphz2mfisclrjed2hvm3mkhs7.py", directory: "inductor_cache/yj")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_native_layer_norm_38, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_native_layer_norm_38, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_native_layer_norm_38", linkageName: "triton_poi_fused_constant_pad_nd_native_layer_norm_38", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 24, column: 21, scope: !7)
!19 = !DILocation(line: 24, column: 29, scope: !7)
!20 = !DILocation(line: 32, column: 18, scope: !7)
!21 = !DILocation(line: 35, column: 18, scope: !7)
!22 = !DILocation(line: 36, column: 40, scope: !7)
!23 = !DILocation(line: 36, column: 50, scope: !7)
!24 = !DILocation(line: 36, column: 35, scope: !7)
!25 = !DILocation(line: 36, column: 45, scope: !7)
!26 = !DILocation(line: 36, column: 30, scope: !7)
!27 = !DILocation(line: 36, column: 62, scope: !7)
!28 = !DILocation(line: 36, column: 55, scope: !7)
!29 = !DILocation(line: 37, column: 30, scope: !7)
!30 = !DILocation(line: 37, column: 35, scope: !7)
!31 = !DILocation(line: 38, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 30, scope: !7)
!33 = !DILocation(line: 39, column: 35, scope: !7)
!34 = !DILocation(line: 40, column: 19, scope: !7)
!35 = !DILocation(line: 43, column: 25, scope: !7)
!36 = !DILocation(line: 43, column: 37, scope: !7)
!37 = !DILocation(line: 42, column: 34, scope: !7)
!38 = !DILocation(line: 43, column: 4, scope: !7)
