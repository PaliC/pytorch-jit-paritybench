//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_relu_26 // -- Begin function triton_per_fused_add_mean_relu_26
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mean_relu_26
.visible .entry triton_per_fused_add_mean_relu_26(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_relu_26_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_relu_26_param_1,
	.param .u32 triton_per_fused_add_mean_relu_26_param_2,
	.param .u32 triton_per_fused_add_mean_relu_26_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<90>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_add_mean_relu_26_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_add_mean_relu_26_param_1];
$L__tmp0:
	.loc	1 23 28                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:23:33
	shl.b32 	%r43, %r1, 7;
	.loc	1 24 44                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:24:44
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 2;
	and.b32  	%r46, %r45, 124;
	and.b32  	%r47, %r44, 127;
	.loc	1 24 23                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:24:23
	or.b32  	%r48, %r43, %r46;
	or.b32  	%r49, %r43, %r47;
	.loc	1 25 21                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:25:21
	setp.lt.s32 	%p1, %r48, 1536;
	setp.lt.s32 	%p20, %r49, 1536;
	.loc	1 26 34                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:26:34
	bfe.u32 	%r50, %r44, 5, 3;
	.loc	1 31 19                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:31:19
	mul.hi.s32 	%r52, %r48, 715827883;
	shr.u32 	%r53, %r52, 31;
	shr.s32 	%r54, %r52, 6;
	add.s32 	%r55, %r54, %r53;
	.loc	1 30 19                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:30:19
	mul.lo.s32 	%r56, %r55, 384;
	sub.s32 	%r57, %r48, %r56;
	.loc	1 33 35                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:33:35
	mad.lo.s32 	%r58, %r50, 384, %r57;
	.loc	1 33 44                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:33:44
	mad.lo.s32 	%r59, %r55, 3072, %r58;
	.loc	1 33 30                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:33:30
	mul.wide.s32 	%rd5, %r59, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r6, 0;
	.loc	1 33 54                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r60, %r50, 2;
	shl.b32 	%r61, %r46, 5;
	or.b32  	%r62, %r61, %r60;
	mov.u32 	%r63, global_smem;
	add.s32 	%r10, %r63, %r62;
$L__tmp2:
	.loc	1 35 33                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:35:33
	selp.b32 	%r11, %r2, 0, %p1;
	mov.pred 	%p6, -1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 32;
$L__tmp4:
	.loc	1 35 33                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:35:33
	selp.b32 	%r13, %r3, 0, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 64;
$L__tmp6:
	.loc	1 35 33                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:35:33
	selp.b32 	%r15, %r4, 0, %p1;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 96;
$L__tmp8:
	.loc	1 35 33                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:35:33
	selp.b32 	%r17, %r5, 0, %p1;
$L__tmp9:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r44, 1024;
	add.s32 	%r19, %r63, %r45;
	// begin inline asm
	@%p10 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r18;
	shfl.sync.bfly.b32	%r64, %r18, 4, 31, -1;
	mov.b32 	%f2, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f3;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f4, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f3, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f5;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f6, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f7, %f5, %f6;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r69, %r44, 7;
	setp.eq.s32 	%p21, %r69, 0;
	and.pred  	%p11, %p10, %p21;
	mov.b32 	%r21, %f7;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	add.s32 	%r23, %r19, 1024;
	// begin inline asm
	@%p10 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r22;
	shfl.sync.bfly.b32	%r70, %r22, 4, 31, -1;
	mov.b32 	%f9, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f10;
	shfl.sync.bfly.b32	%r72, %r71, 2, 31, -1;
	mov.b32 	%f11, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f12;
	shfl.sync.bfly.b32	%r74, %r73, 1, 31, -1;
	mov.b32 	%f13, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f14;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	add.s32 	%r27, %r19, 2048;
	// begin inline asm
	@%p10 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r26;
	shfl.sync.bfly.b32	%r75, %r26, 4, 31, -1;
	mov.b32 	%f16, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f17;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f18, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f19;
	shfl.sync.bfly.b32	%r79, %r78, 1, 31, -1;
	mov.b32 	%f20, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f21;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	add.s32 	%r31, %r19, 3072;
	// begin inline asm
	@%p10 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r30;
	shfl.sync.bfly.b32	%r80, %r30, 4, 31, -1;
	mov.b32 	%f23, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f24;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f25, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f26;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f27, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f28;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r85, %r63, %r61;
	ld.shared.u32 	%r35, [%r85];
	ld.shared.u32 	%r36, [%r85+32];
	ld.shared.u32 	%r37, [%r85+64];
	ld.shared.u32 	%r38, [%r85+96];
$L__tmp10:
	.loc	3 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	shl.b32 	%r86, %r46, 2;
	add.s32 	%r34, %r63, %r86;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r87, %r47, 2;
	add.s32 	%r88, %r63, %r87;
$L__tmp11:
	.loc	1 38 18                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:38:18
	ld.shared.u32 	%r40, [%r88];
	mov.b32 	%r41, 1149239296;
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	mov.b32 	%f29, %r39;
$L__tmp12:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p22, %f29, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f30, 0f00000000, %f29, %p22;
$L__tmp13:
	.loc	1 41 4                          // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:41:4
	bar.sync 	0;
	.loc	1 42 28                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:42:28
	mul.wide.s32 	%rd6, %r49, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 42 39                         // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:42:39
	and.b32  	%r89, %r44, 128;
	setp.eq.s32 	%p23, %r89, 0;
	mov.b32 	%r42, %f30;
	and.pred  	%p19, %p23, %p20;
	// begin inline asm
	@%p19 st.global.b32 [ %rd2 + 0 ], { %r42 };
	// end inline asm
	.loc	1 42 4                          // cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py:42:4
	ret;
$L__tmp14:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w7/cw7rws4beixuukodqitfwfml6tpwa7b6lz4mslsie5jfv5dhlimi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 202                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 55
.b8 114
.b8 119
.b8 115
.b8 52
.b8 98
.b8 101
.b8 105
.b8 120
.b8 117
.b8 117
.b8 107
.b8 111
.b8 100
.b8 113
.b8 105
.b8 116
.b8 102
.b8 119
.b8 102
.b8 109
.b8 108
.b8 54
.b8 116
.b8 112
.b8 119
.b8 97
.b8 55
.b8 98
.b8 54
.b8 108
.b8 122
.b8 52
.b8 109
.b8 115
.b8 108
.b8 115
.b8 105
.b8 101
.b8 53
.b8 106
.b8 102
.b8 118
.b8 53
.b8 100
.b8 104
.b8 108
.b8 105
.b8 109
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x24 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x87:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9c:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
