; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_2(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = icmp slt i32 %4, 64, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = shl i32 %4, 4, !dbg !13
  %9 = or disjoint i32 %8, %7, !dbg !14
  %10 = sext i32 %9 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %11, i1 %5, i32 0, i1 %5) #2, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = select i1 %5, float %13, float 0xFFF0000000000000, !dbg !17
  %15 = bitcast float %14 to i32, !dbg !18
  %16 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %15, i32 8, i32 31), !dbg !18
  %17 = bitcast i32 %16 to float, !dbg !18
  %18 = fcmp ogt float %14, %17, !dbg !22
  %19 = fcmp uno float %14, 0.000000e+00, !dbg !24
  %20 = or i1 %18, %19, !dbg !25
  %21 = select i1 %20, float %14, float %17, !dbg !26
  %22 = bitcast float %21 to i32, !dbg !18
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 4, i32 31), !dbg !18
  %24 = bitcast i32 %23 to float, !dbg !18
  %25 = fcmp ogt float %21, %24, !dbg !22
  %26 = fcmp uno float %21, 0.000000e+00, !dbg !24
  %27 = or i1 %25, %26, !dbg !25
  %28 = select i1 %27, float %21, float %24, !dbg !26
  %29 = bitcast float %28 to i32, !dbg !18
  %30 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 2, i32 31), !dbg !18
  %31 = bitcast i32 %30 to float, !dbg !18
  %32 = fcmp ogt float %28, %31, !dbg !22
  %33 = fcmp uno float %28, 0.000000e+00, !dbg !24
  %34 = or i1 %32, %33, !dbg !25
  %35 = select i1 %34, float %28, float %31, !dbg !26
  %36 = bitcast float %35 to i32, !dbg !18
  %37 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %36, i32 1, i32 31), !dbg !18
  %38 = bitcast i32 %37 to float, !dbg !18
  %39 = fcmp ogt float %35, %38, !dbg !22
  %40 = fcmp uno float %35, 0.000000e+00, !dbg !24
  %41 = or i1 %39, %40, !dbg !25
  %42 = select i1 %41, float %35, float %38, !dbg !26
  %43 = fsub float %13, %42, !dbg !27
  %44 = fmul float %43, 5.000000e-01, !dbg !28
  %45 = fmul float %44, 0x3FF7154760000000, !dbg !29
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #2, !dbg !29
  %47 = select i1 %5, float %46, float 0.000000e+00, !dbg !30
  %48 = bitcast float %47 to i32, !dbg !31
  %49 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %48, i32 8, i32 31), !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = fadd float %47, %50, !dbg !35
  %52 = bitcast float %51 to i32, !dbg !31
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 4, i32 31), !dbg !31
  %54 = bitcast i32 %53 to float, !dbg !31
  %55 = fadd float %51, %54, !dbg !35
  %56 = bitcast float %55 to i32, !dbg !31
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %56, i32 2, i32 31), !dbg !31
  %58 = bitcast i32 %57 to float, !dbg !31
  %59 = fadd float %55, %58, !dbg !35
  %60 = bitcast float %59 to i32, !dbg !31
  %61 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %60, i32 1, i32 31), !dbg !31
  %62 = bitcast i32 %61 to float, !dbg !31
  %63 = fadd float %59, %62, !dbg !35
  %64 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %46, float %63) #2, !dbg !37
  %65 = and i32 %6, 48, !dbg !38
  %66 = icmp eq i32 %65, 0, !dbg !38
  %67 = bitcast float %64 to i32, !dbg !38
  %68 = and i1 %66, %5, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %11, i1 %68) #2, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpi2mxjqoy52yuiug5ksvd6fmrle5gd3l36qyxba3bxy7kzwufn3.py", directory: "inductor_cache/pi")
!4 = !{ptr @triton_per_fused__softmax_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_2", linkageName: "triton_per_fused__softmax_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 35, column: 33, scope: !7)
!18 = !DILocation(line: 131, column: 29, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!21 = !DILocation(line: 36, column: 37, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !21)
!23 = distinct !DILexicalBlockFile(scope: !19, file: !20, discriminator: 0)
!24 = !DILocation(line: 120, column: 21, scope: !23, inlinedAt: !21)
!25 = !DILocation(line: 120, column: 16, scope: !23, inlinedAt: !21)
!26 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !21)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 24, scope: !7)
!30 = !DILocation(line: 42, column: 35, scope: !7)
!31 = !DILocation(line: 267, column: 36, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!34 = !DILocation(line: 43, column: 26, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !34)
!36 = distinct !DILexicalBlockFile(scope: !32, file: !33, discriminator: 0)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 45, column: 48, scope: !7)
!39 = !DILocation(line: 45, column: 4, scope: !7)
