#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":38:57)
#loc24 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":45:59)
#loc37 = loc(callsite(#loc1 at #loc17))
#loc41 = loc(callsite(#loc1 at #loc24))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_native_group_norm_38(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<2048> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc3)
    %2 = arith.remsi %1, %cst_3 : tensor<256xi32, #blocked> loc(#loc4)
    %3 = arith.divsi %1, %cst_3 : tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.remsi %0, %c32_i32 : i32 loc(#loc6)
    %5 = arith.divsi %0, %c32_i32 : i32 loc(#loc7)
    %6 = arith.muli %4, %c64_i32 : i32 loc(#loc8)
    %7 = tt.splat %6 : i32 -> tensor<256xi32, #blocked> loc(#loc9)
    %8 = arith.addi %2, %7 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.muli %3, %cst_2 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.addi %8, %9 : tensor<256xi32, #blocked> loc(#loc11)
    %11 = arith.muli %5, %c8192_i32 : i32 loc(#loc12)
    %12 = tt.splat %11 : i32 -> tensor<256xi32, #blocked> loc(#loc13)
    %13 = arith.addi %10, %12 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = tt.addptr %14, %13 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc14)
    %16 = tt.load %15 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = "tt.reduce"(%16) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc17)), %arg7: f32 loc(callsite(#loc1 at #loc17))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc43)
      tt.reduce.return %37 : f32 loc(#loc36)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc36)
    %18 = arith.addf %17, %cst_1 : f32 loc(#loc39)
    %19 = arith.divf %18, %cst_0 : f32 loc(#loc21)
    %20 = tt.splat %19 : f32 -> tensor<1xf32, #blocked1> loc(#loc21)
    %21 = tt.splat %19 : f32 -> tensor<256xf32, #blocked> loc(#loc22)
    %22 = arith.subf %16, %21 : tensor<256xf32, #blocked> loc(#loc22)
    %23 = arith.mulf %22, %22 : tensor<256xf32, #blocked> loc(#loc23)
    %24 = "tt.reduce"(%23) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc24)), %arg7: f32 loc(callsite(#loc1 at #loc24))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc44)
      tt.reduce.return %37 : f32 loc(#loc40)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc40)
    %25 = arith.addf %24, %cst_1 : f32 loc(#loc42)
    %26 = tt.splat %25 : f32 -> tensor<1xf32, #blocked1> loc(#loc42)
    %27 = arith.divf %25, %cst_0 : f32 loc(#loc26)
    %28 = arith.addf %27, %cst : f32 loc(#loc27)
    %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc28)
    %30 = tt.splat %29 : f32 -> tensor<1xf32, #blocked1> loc(#loc28)
    %31 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc29)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc29)
    tt.store %32, %30 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc30)
    %33 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc31)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc31)
    tt.store %34, %20 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc32)
    %35 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc33)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc33)
    tt.store %36, %26 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":24:28)
#loc3 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":27:26)
#loc4 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":30:19)
#loc5 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":31:19)
#loc6 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":32:19)
#loc7 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":33:19)
#loc8 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:38)
#loc9 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:35)
#loc10 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:48)
#loc11 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:43)
#loc12 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:58)
#loc13 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:53)
#loc14 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:30)
#loc15 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":35:63)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc20 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":38:44)
#loc21 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":41:18)
#loc22 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":42:18)
#loc23 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":43:19)
#loc25 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":45:45)
#loc26 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":47:20)
#loc27 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":49:20)
#loc28 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":50:28)
#loc29 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":51:25)
#loc30 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":51:37)
#loc31 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":52:25)
#loc32 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":52:36)
#loc33 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":53:25)
#loc34 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":53:37)
#loc35 = loc("inductor_cache/fu/cfuunbwigiajkwy5m23groxjomdmtf6gq42hdkoxrvcvrasbpcce.py":53:4)
#loc36 = loc(callsite(#loc16 at #loc17))
#loc38 = loc(callsite(#loc18 at #loc16))
#loc39 = loc(callsite(#loc19 at #loc20))
#loc40 = loc(callsite(#loc16 at #loc24))
#loc42 = loc(callsite(#loc19 at #loc25))
#loc43 = loc(callsite(#loc38 at #loc17))
#loc44 = loc(callsite(#loc38 at #loc24))
