; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 256, !dbg !14
  %11 = mul i32 %10, 256, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = icmp slt i32 %.decomposed, 128, !dbg !16
  %.lhs.trunc = trunc nsw i32 %.decomposed to i16, !dbg !17
  %13 = sdiv i16 %.lhs.trunc, 2, !dbg !18
  %14 = mul i16 %13, 2, !dbg !17
  %.decomposed204 = sub i16 %.lhs.trunc, %14, !dbg !17
  %15 = icmp slt i16 %.decomposed204, 1, !dbg !19
  %16 = and i1 %12, %15, !dbg !20
  %.lhs.trunc166 = trunc nsw i16 %13 to i8, !dbg !21
  %17 = srem i8 %.lhs.trunc166, 64, !dbg !21
  %.sext167 = sext i8 %17 to i32, !dbg !21
  %18 = shl nsw i32 %.sext167, 1, !dbg !22
  %19 = shl nsw i32 %10, 7, !dbg !23
  %20 = add nsw i32 %18, %19, !dbg !24
  %21 = sext i32 %20 to i64, !dbg !25
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !25
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %16, i32 0, i1 %16) #4, !dbg !26
  %24 = bitcast i32 %23 to float, !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %25 = fmul float %24, 0x3FE45F3060000000, !dbg !27
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %26, 0, !dbg !27
  %27 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %25) #4, !dbg !27
  %28 = tail call i32 @llvm.nvvm.f2i.rn(float %25) #4, !dbg !27
  %.01.i = select i1 %.not.i, i32 %28, i32 %27, !dbg !27
  %29 = sitofp i32 %.01.i to float, !dbg !27
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i = icmp eq i32 %30, 0, !dbg !27
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBFF921FB40000000, float %24) #4, !dbg !27
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBFF921FB40000000, float %24) #4, !dbg !27
  %.02.i = select i1 %.not15.i, float %32, float %31, !dbg !27
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i = icmp eq i32 %33, 0, !dbg !27
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %.03.i = select i1 %.not16.i, float %35, float %34, !dbg !27
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i = icmp eq i32 %36, 0, !dbg !27
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %29, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %29, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %.04.i = select i1 %.not17.i, float %38, float %37, !dbg !27
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i = icmp eq i32 %39, 0, !dbg !27
  %40 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #4, !dbg !27
  %41 = tail call float @llvm.nvvm.fabs.f(float %24) #4, !dbg !27
  %.06.i = select i1 %.not18.i, float %41, float %40, !dbg !27
  %42 = fcmp ult float %.06.i, 1.056150e+05, !dbg !27
  br i1 %42, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !27

__nv_isinff.exit.i.i.i:                           ; preds = %4
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i = icmp eq i32 %43, 0, !dbg !27
  %.07.i = select i1 %.not19.i, float %41, float %40, !dbg !27
  %44 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !27
  br i1 %44, label %__nv_fmul_rn.exit.i.i.i, label %48, !dbg !27

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i = icmp eq i32 %45, 0, !dbg !27
  %46 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %24, float 0.000000e+00) #4, !dbg !27
  %47 = tail call float @llvm.nvvm.mul.rn.f(float %24, float 0.000000e+00) #4, !dbg !27
  %.08.i = select i1 %.not27.i, float %47, float %46, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

48:                                               ; preds = %__nv_isinff.exit.i.i.i
  %49 = lshr i32 %23, 23, !dbg !27
  %50 = and i32 %49, 224, !dbg !27
  %51 = add nsw i32 %50, -128, !dbg !27
  %52 = shl i32 %23, 8, !dbg !27
  %53 = or i32 %52, -2147483648, !dbg !27
  %54 = lshr exact i32 %51, 5, !dbg !27
  br label %55, !dbg !27

55:                                               ; preds = %48, %55
  %indvars.iv = phi i64 [ 0, %48 ], [ %indvars.iv.next, %55 ]
  %hi.i.i.i.0.i168 = phi i32 [ 0, %48 ], [ %60, %55 ]
  %56 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !27
  %57 = load i32, ptr addrspace(1) %56, align 4, !dbg !27
  %58 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %57, i32 %53, i32 %hi.i.i.i.0.i168) #5, !dbg !27, !srcloc !28
  %59 = extractvalue { i32, i32 } %58, 0, !dbg !27
  %60 = extractvalue { i32, i32 } %58, 1, !dbg !27
  %61 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !27
  store i32 %59, ptr %61, align 4, !dbg !27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !27
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !27
  br i1 %exitcond.not, label %62, label %55, !dbg !27, !llvm.loop !29

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !27
  store i32 %60, ptr %63, align 4, !dbg !27
  %64 = and i32 %49, 31, !dbg !27
  %65 = sub nsw i32 6, %54, !dbg !27
  %66 = sext i32 %65 to i64, !dbg !27
  %67 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %66, !dbg !27
  %68 = load i32, ptr %67, align 4, !dbg !27
  %69 = sub nsw i32 5, %54, !dbg !27
  %70 = sext i32 %69 to i64, !dbg !27
  %71 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %70, !dbg !27
  %72 = load i32, ptr %71, align 4, !dbg !27
  %.not20.i = icmp eq i32 %64, 0, !dbg !27
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %73, !dbg !27

73:                                               ; preds = %62
  %74 = sub nsw i32 4, %54, !dbg !27
  %75 = sub nuw nsw i32 32, %64, !dbg !27
  %76 = shl i32 %68, %64, !dbg !27
  %77 = lshr i32 %72, %75, !dbg !27
  %78 = add i32 %77, %76, !dbg !27
  %79 = shl i32 %72, %64, !dbg !27
  %80 = sext i32 %74 to i64, !dbg !27
  %81 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %80, !dbg !27
  %82 = load i32, ptr %81, align 4, !dbg !27
  %83 = lshr i32 %82, %75, !dbg !27
  %84 = add i32 %83, %79, !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %73, %62
  %hi.i.i.i.1.i = phi i32 [ %78, %73 ], [ %68, %62 ], !dbg !27
  %lo.i.i.i.0.i = phi i32 [ %84, %73 ], [ %72, %62 ], !dbg !27
  %85 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !27
  %86 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !27
  %87 = shl i32 %lo.i.i.i.0.i, 2, !dbg !27
  %88 = lshr i32 %86, 31, !dbg !27
  %89 = add nuw nsw i32 %88, %85, !dbg !27
  %90 = sub nsw i32 0, %89, !dbg !27
  %.not2123.i = icmp slt i32 %23, 0, !dbg !27
  %spec.select.i = select i1 %.not2123.i, i32 %90, i32 %89, !dbg !27
  %91 = xor i32 %86, %23, !dbg !27
  %.lobit.i = ashr i32 %86, 31, !dbg !27
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %86, !dbg !27
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %87, !dbg !27
  %92 = zext i32 %hi.i.i.i.2.i to i64, !dbg !27
  %93 = shl nuw i64 %92, 32, !dbg !27
  %94 = zext i32 %lo.i.i.i.1.i to i64, !dbg !27
  %95 = or disjoint i64 %93, %94, !dbg !27
  %96 = sitofp i64 %95 to double, !dbg !27
  %97 = fmul double %96, 0x3BF921FB54442D19, !dbg !27
  %98 = fptrunc double %97 to float, !dbg !27
  %99 = fneg float %98, !dbg !27
  %.not2526.i = icmp slt i32 %91, 0, !dbg !27
  %r.i.i.i.0.i = select i1 %.not2526.i, float %99, float %98, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %4
  %i.i.1.i = phi i32 [ %.01.i, %4 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %t.i.i.1.i = phi float [ %.04.i, %4 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i = icmp eq i32 %100, 0, !dbg !27
  %101 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %102 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %.011.i = select i1 %.not28.i, float %102, float %101, !dbg !27
  %103 = and i32 %i.i.1.i, 1, !dbg !27
  %.not29.i = icmp eq i32 %103, 0, !dbg !27
  %104 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !27
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i = icmp eq i32 %105, 0, !dbg !27
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %104, float 0.000000e+00) #4, !dbg !27
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %104, float 0.000000e+00) #4, !dbg !27
  %.012.i = select i1 %.not30.i, float %107, float %106, !dbg !27
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !27

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i = icmp eq i32 %108, 0, !dbg !27
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %110 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i = select i1 %.not31.i, float %110, float %109, !dbg !27
  br label %__internal_fmad.exit2.i.i.i, !dbg !27

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %111 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %112 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %113 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i = icmp eq i32 %114, 0, !dbg !27
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float %.011.i, float %112) #4, !dbg !27
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float %.011.i, float %112) #4, !dbg !27
  %.010.i = select i1 %.not32.i, float %116, float %115, !dbg !27
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i = icmp eq i32 %117, 0, !dbg !27
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %111) #4, !dbg !27
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %111) #4, !dbg !27
  %.09.i = select i1 %.not33.i, float %119, float %118, !dbg !27
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i = icmp eq i32 %120, 0, !dbg !27
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %104) #4, !dbg !27
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %104) #4, !dbg !27
  %.05.i = select i1 %.not34.i, float %122, float %121, !dbg !27
  %123 = and i32 %i.i.1.i, 2, !dbg !27
  %.not35.i = icmp eq i32 %123, 0, !dbg !27
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !27

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i = icmp eq i32 %124, 0, !dbg !27
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i = select i1 %.not36.i, float %126, float %125, !dbg !27
  br label %__nv_sinf.exit, !dbg !27

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %127 = icmp sgt i16 %.decomposed204, 0, !dbg !31
  %128 = and i1 %12, %127, !dbg !32
  %129 = or disjoint i32 %19, 1, !dbg !33
  %130 = add nsw i32 %129, %18, !dbg !34
  %131 = sext i32 %130 to i64, !dbg !35
  %132 = getelementptr float, ptr addrspace(1) %0, i64 %131, !dbg !35
  %133 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %132, i1 %128, i32 0, i1 %128) #4, !dbg !36
  %134 = bitcast i32 %133 to float, !dbg !36
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !37
  %135 = fmul float %134, 0x3FE45F3060000000, !dbg !37
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not.i57 = icmp eq i32 %136, 0, !dbg !37
  %137 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %135) #4, !dbg !37
  %138 = tail call i32 @llvm.nvvm.f2i.rn(float %135) #4, !dbg !37
  %.01.i58 = select i1 %.not.i57, i32 %138, i32 %137, !dbg !37
  %139 = sitofp i32 %.01.i58 to float, !dbg !37
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not15.i59 = icmp eq i32 %140, 0, !dbg !37
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBFF921FB40000000, float %134) #4, !dbg !37
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBFF921FB40000000, float %134) #4, !dbg !37
  %.02.i60 = select i1 %.not15.i59, float %142, float %141, !dbg !37
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not16.i61 = icmp eq i32 %143, 0, !dbg !37
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !37
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !37
  %.03.i62 = select i1 %.not16.i61, float %145, float %144, !dbg !37
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not17.i63 = icmp eq i32 %146, 0, !dbg !37
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !37
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !37
  %.04.i64 = select i1 %.not17.i63, float %148, float %147, !dbg !37
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not18.i65 = icmp eq i32 %149, 0, !dbg !37
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %134) #4, !dbg !37
  %151 = tail call float @llvm.nvvm.fabs.f(float %134) #4, !dbg !37
  %.06.i66 = select i1 %.not18.i65, float %151, float %150, !dbg !37
  %152 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !37
  br i1 %152, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !37

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not19.i68 = icmp eq i32 %153, 0, !dbg !37
  %.07.i69 = select i1 %.not19.i68, float %151, float %150, !dbg !37
  %154 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !37
  br i1 %154, label %__nv_fmul_rn.exit.i.i.i106, label %158, !dbg !37

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not27.i107 = icmp eq i32 %155, 0, !dbg !37
  %156 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %134, float 0.000000e+00) #4, !dbg !37
  %157 = tail call float @llvm.nvvm.mul.rn.f(float %134, float 0.000000e+00) #4, !dbg !37
  %.08.i108 = select i1 %.not27.i107, float %157, float %156, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !37

158:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %159 = lshr i32 %133, 23, !dbg !37
  %160 = and i32 %159, 224, !dbg !37
  %161 = add nsw i32 %160, -128, !dbg !37
  %162 = shl i32 %133, 8, !dbg !37
  %163 = or i32 %162, -2147483648, !dbg !37
  %164 = lshr exact i32 %161, 5, !dbg !37
  br label %165, !dbg !37

165:                                              ; preds = %158, %165
  %indvars.iv183 = phi i64 [ 0, %158 ], [ %indvars.iv.next184, %165 ]
  %hi.i.i.i.0.i70170 = phi i32 [ 0, %158 ], [ %170, %165 ]
  %166 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv183, !dbg !37
  %167 = load i32, ptr addrspace(1) %166, align 4, !dbg !37
  %168 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %167, i32 %163, i32 %hi.i.i.i.0.i70170) #5, !dbg !37, !srcloc !28
  %169 = extractvalue { i32, i32 } %168, 0, !dbg !37
  %170 = extractvalue { i32, i32 } %168, 1, !dbg !37
  %171 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv183, !dbg !37
  store i32 %169, ptr %171, align 4, !dbg !37
  %indvars.iv.next184 = add nuw nsw i64 %indvars.iv183, 1, !dbg !37
  %exitcond185.not = icmp eq i64 %indvars.iv.next184, 6, !dbg !37
  br i1 %exitcond185.not, label %172, label %165, !dbg !37, !llvm.loop !38

172:                                              ; preds = %165
  %173 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !37
  store i32 %170, ptr %173, align 4, !dbg !37
  %174 = and i32 %159, 31, !dbg !37
  %175 = sub nsw i32 6, %164, !dbg !37
  %176 = sext i32 %175 to i64, !dbg !37
  %177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %176, !dbg !37
  %178 = load i32, ptr %177, align 4, !dbg !37
  %179 = sub nsw i32 5, %164, !dbg !37
  %180 = sext i32 %179 to i64, !dbg !37
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %180, !dbg !37
  %182 = load i32, ptr %181, align 4, !dbg !37
  %.not20.i72 = icmp eq i32 %174, 0, !dbg !37
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %183, !dbg !37

183:                                              ; preds = %172
  %184 = sub nsw i32 4, %164, !dbg !37
  %185 = sub nuw nsw i32 32, %174, !dbg !37
  %186 = shl i32 %178, %174, !dbg !37
  %187 = lshr i32 %182, %185, !dbg !37
  %188 = add i32 %187, %186, !dbg !37
  %189 = shl i32 %182, %174, !dbg !37
  %190 = sext i32 %184 to i64, !dbg !37
  %191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %190, !dbg !37
  %192 = load i32, ptr %191, align 4, !dbg !37
  %193 = lshr i32 %192, %185, !dbg !37
  %194 = add i32 %193, %189, !dbg !37
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !37

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %183, %172
  %hi.i.i.i.1.i74 = phi i32 [ %188, %183 ], [ %178, %172 ], !dbg !37
  %lo.i.i.i.0.i75 = phi i32 [ %194, %183 ], [ %182, %172 ], !dbg !37
  %195 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !37
  %196 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !37
  %197 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !37
  %198 = lshr i32 %196, 31, !dbg !37
  %199 = add nuw nsw i32 %198, %195, !dbg !37
  %200 = sub nsw i32 0, %199, !dbg !37
  %.not2123.i76 = icmp slt i32 %133, 0, !dbg !37
  %spec.select.i77 = select i1 %.not2123.i76, i32 %200, i32 %199, !dbg !37
  %201 = xor i32 %196, %133, !dbg !37
  %.lobit.i78 = ashr i32 %196, 31, !dbg !37
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %196, !dbg !37
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %197, !dbg !37
  %202 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !37
  %203 = shl nuw i64 %202, 32, !dbg !37
  %204 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !37
  %205 = or disjoint i64 %203, %204, !dbg !37
  %206 = sitofp i64 %205 to double, !dbg !37
  %207 = fmul double %206, 0x3BF921FB54442D19, !dbg !37
  %208 = fptrunc double %207 to float, !dbg !37
  %209 = fneg float %208, !dbg !37
  %.not2526.i82 = icmp slt i32 %201, 0, !dbg !37
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %209, float %208, !dbg !37
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !37

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !37
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !37
  %210 = add i32 %i.i.1.i85, 1, !dbg !37
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not28.i87 = icmp eq i32 %211, 0, !dbg !37
  %212 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !37
  %213 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !37
  %.011.i88 = select i1 %.not28.i87, float %213, float %212, !dbg !37
  %214 = and i32 %i.i.1.i85, 1, !dbg !37
  %.not29.not.i = icmp eq i32 %214, 0, !dbg !37
  %215 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !37
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not30.i89 = icmp eq i32 %216, 0, !dbg !37
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %215, float 0.000000e+00) #4, !dbg !37
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %215, float 0.000000e+00) #4, !dbg !37
  %.012.i90 = select i1 %.not30.i89, float %218, float %217, !dbg !37
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !37

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not31.i104 = icmp eq i32 %219, 0, !dbg !37
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !37
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !37
  %.013.i105 = select i1 %.not31.i104, float %221, float %220, !dbg !37
  br label %__internal_fmad.exit2.i.i.i91, !dbg !37

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %222 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !37
  %223 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !37
  %224 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !37
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not32.i92 = icmp eq i32 %225, 0, !dbg !37
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %224, float %.011.i88, float %223) #4, !dbg !37
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %224, float %.011.i88, float %223) #4, !dbg !37
  %.010.i93 = select i1 %.not32.i92, float %227, float %226, !dbg !37
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not33.i94 = icmp eq i32 %228, 0, !dbg !37
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %222) #4, !dbg !37
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %222) #4, !dbg !37
  %.09.i95 = select i1 %.not33.i94, float %230, float %229, !dbg !37
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not34.i96 = icmp eq i32 %231, 0, !dbg !37
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %215) #4, !dbg !37
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %215) #4, !dbg !37
  %.05.i97 = select i1 %.not34.i96, float %233, float %232, !dbg !37
  %234 = and i32 %210, 2, !dbg !37
  %.not35.i98 = icmp eq i32 %234, 0, !dbg !37
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !37

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not36.i100 = icmp eq i32 %235, 0, !dbg !37
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !37
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !37
  %.0.i101 = select i1 %.not36.i100, float %237, float %236, !dbg !37
  br label %__nv_cosf.exit, !dbg !37

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !37
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !37
  %238 = icmp sgt i32 %.decomposed, 127, !dbg !39
  %239 = add nsw i32 %.decomposed, -128, !dbg !40
  %240 = sdiv i32 %239, 2, !dbg !41
  %241 = mul i32 %240, 2, !dbg !42
  %.decomposed205 = sub i32 %239, %241, !dbg !42
  %242 = icmp slt i32 %.decomposed205, 1, !dbg !43
  %243 = and i1 %238, %242, !dbg !44
  %244 = srem i32 %240, 64, !dbg !45
  %245 = shl nsw i32 %244, 1, !dbg !46
  %246 = add nsw i32 %245, %19, !dbg !47
  %247 = sext i32 %246 to i64, !dbg !48
  %248 = getelementptr float, ptr addrspace(1) %1, i64 %247, !dbg !48
  %249 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %248, i1 %243, i32 0, i1 %243) #4, !dbg !49
  %250 = bitcast i32 %249 to float, !dbg !49
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !50
  %251 = fmul float %250, 0x3FE45F3060000000, !dbg !50
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not.i2 = icmp eq i32 %252, 0, !dbg !50
  %253 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %251) #4, !dbg !50
  %254 = tail call i32 @llvm.nvvm.f2i.rn(float %251) #4, !dbg !50
  %.01.i3 = select i1 %.not.i2, i32 %254, i32 %253, !dbg !50
  %255 = sitofp i32 %.01.i3 to float, !dbg !50
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not15.i4 = icmp eq i32 %256, 0, !dbg !50
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBFF921FB40000000, float %250) #4, !dbg !50
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBFF921FB40000000, float %250) #4, !dbg !50
  %.02.i5 = select i1 %.not15.i4, float %258, float %257, !dbg !50
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not16.i6 = icmp eq i32 %259, 0, !dbg !50
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !50
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !50
  %.03.i7 = select i1 %.not16.i6, float %261, float %260, !dbg !50
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not17.i8 = icmp eq i32 %262, 0, !dbg !50
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !50
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !50
  %.04.i9 = select i1 %.not17.i8, float %264, float %263, !dbg !50
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not18.i10 = icmp eq i32 %265, 0, !dbg !50
  %266 = tail call float @llvm.nvvm.fabs.ftz.f(float %250) #4, !dbg !50
  %267 = tail call float @llvm.nvvm.fabs.f(float %250) #4, !dbg !50
  %.06.i11 = select i1 %.not18.i10, float %267, float %266, !dbg !50
  %268 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !50
  br i1 %268, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !50

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_cosf.exit
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not19.i13 = icmp eq i32 %269, 0, !dbg !50
  %.07.i14 = select i1 %.not19.i13, float %267, float %266, !dbg !50
  %270 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !50
  br i1 %270, label %__nv_fmul_rn.exit.i.i.i52, label %274, !dbg !50

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not27.i53 = icmp eq i32 %271, 0, !dbg !50
  %272 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %250, float 0.000000e+00) #4, !dbg !50
  %273 = tail call float @llvm.nvvm.mul.rn.f(float %250, float 0.000000e+00) #4, !dbg !50
  %.08.i54 = select i1 %.not27.i53, float %273, float %272, !dbg !50
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !50

274:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %275 = lshr i32 %249, 23, !dbg !50
  %276 = and i32 %275, 224, !dbg !50
  %277 = add nsw i32 %276, -128, !dbg !50
  %278 = shl i32 %249, 8, !dbg !50
  %279 = or i32 %278, -2147483648, !dbg !50
  %280 = lshr exact i32 %277, 5, !dbg !50
  br label %281, !dbg !50

281:                                              ; preds = %274, %281
  %indvars.iv186 = phi i64 [ 0, %274 ], [ %indvars.iv.next187, %281 ]
  %hi.i.i.i.0.i15172 = phi i32 [ 0, %274 ], [ %286, %281 ]
  %282 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv186, !dbg !50
  %283 = load i32, ptr addrspace(1) %282, align 4, !dbg !50
  %284 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %283, i32 %279, i32 %hi.i.i.i.0.i15172) #5, !dbg !50, !srcloc !28
  %285 = extractvalue { i32, i32 } %284, 0, !dbg !50
  %286 = extractvalue { i32, i32 } %284, 1, !dbg !50
  %287 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv186, !dbg !50
  store i32 %285, ptr %287, align 4, !dbg !50
  %indvars.iv.next187 = add nuw nsw i64 %indvars.iv186, 1, !dbg !50
  %exitcond188.not = icmp eq i64 %indvars.iv.next187, 6, !dbg !50
  br i1 %exitcond188.not, label %288, label %281, !dbg !50, !llvm.loop !51

288:                                              ; preds = %281
  %289 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !50
  store i32 %286, ptr %289, align 4, !dbg !50
  %290 = and i32 %275, 31, !dbg !50
  %291 = sub nsw i32 6, %280, !dbg !50
  %292 = sext i32 %291 to i64, !dbg !50
  %293 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %292, !dbg !50
  %294 = load i32, ptr %293, align 4, !dbg !50
  %295 = sub nsw i32 5, %280, !dbg !50
  %296 = sext i32 %295 to i64, !dbg !50
  %297 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %296, !dbg !50
  %298 = load i32, ptr %297, align 4, !dbg !50
  %.not20.i17 = icmp eq i32 %290, 0, !dbg !50
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %299, !dbg !50

299:                                              ; preds = %288
  %300 = sub nsw i32 4, %280, !dbg !50
  %301 = sub nuw nsw i32 32, %290, !dbg !50
  %302 = shl i32 %294, %290, !dbg !50
  %303 = lshr i32 %298, %301, !dbg !50
  %304 = add i32 %303, %302, !dbg !50
  %305 = shl i32 %298, %290, !dbg !50
  %306 = sext i32 %300 to i64, !dbg !50
  %307 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %306, !dbg !50
  %308 = load i32, ptr %307, align 4, !dbg !50
  %309 = lshr i32 %308, %301, !dbg !50
  %310 = add i32 %309, %305, !dbg !50
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !50

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %299, %288
  %hi.i.i.i.1.i19 = phi i32 [ %304, %299 ], [ %294, %288 ], !dbg !50
  %lo.i.i.i.0.i20 = phi i32 [ %310, %299 ], [ %298, %288 ], !dbg !50
  %311 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !50
  %312 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !50
  %313 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !50
  %314 = lshr i32 %312, 31, !dbg !50
  %315 = add nuw nsw i32 %314, %311, !dbg !50
  %316 = sub nsw i32 0, %315, !dbg !50
  %.not2123.i21 = icmp slt i32 %249, 0, !dbg !50
  %spec.select.i22 = select i1 %.not2123.i21, i32 %316, i32 %315, !dbg !50
  %317 = xor i32 %312, %249, !dbg !50
  %.lobit.i23 = ashr i32 %312, 31, !dbg !50
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %312, !dbg !50
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %313, !dbg !50
  %318 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !50
  %319 = shl nuw i64 %318, 32, !dbg !50
  %320 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !50
  %321 = or disjoint i64 %319, %320, !dbg !50
  %322 = sitofp i64 %321 to double, !dbg !50
  %323 = fmul double %322, 0x3BF921FB54442D19, !dbg !50
  %324 = fptrunc double %323 to float, !dbg !50
  %325 = fneg float %324, !dbg !50
  %.not2526.i27 = icmp slt i32 %317, 0, !dbg !50
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %325, float %324, !dbg !50
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !50

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_cosf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !50
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_cosf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !50
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not28.i32 = icmp eq i32 %326, 0, !dbg !50
  %327 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !50
  %328 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !50
  %.011.i33 = select i1 %.not28.i32, float %328, float %327, !dbg !50
  %329 = and i32 %i.i.1.i30, 1, !dbg !50
  %.not29.i34 = icmp eq i32 %329, 0, !dbg !50
  %330 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !50
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not30.i35 = icmp eq i32 %331, 0, !dbg !50
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %330, float 0.000000e+00) #4, !dbg !50
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %330, float 0.000000e+00) #4, !dbg !50
  %.012.i36 = select i1 %.not30.i35, float %333, float %332, !dbg !50
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !50

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not31.i38 = icmp eq i32 %334, 0, !dbg !50
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !50
  %336 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !50
  %.013.i39 = select i1 %.not31.i38, float %336, float %335, !dbg !50
  br label %__internal_fmad.exit2.i.i.i40, !dbg !50

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %337 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !50
  %338 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !50
  %339 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !50
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not32.i41 = icmp eq i32 %340, 0, !dbg !50
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %339, float %.011.i33, float %338) #4, !dbg !50
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %339, float %.011.i33, float %338) #4, !dbg !50
  %.010.i42 = select i1 %.not32.i41, float %342, float %341, !dbg !50
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not33.i43 = icmp eq i32 %343, 0, !dbg !50
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %337) #4, !dbg !50
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %337) #4, !dbg !50
  %.09.i44 = select i1 %.not33.i43, float %345, float %344, !dbg !50
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not34.i45 = icmp eq i32 %346, 0, !dbg !50
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %330) #4, !dbg !50
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %330) #4, !dbg !50
  %.05.i46 = select i1 %.not34.i45, float %348, float %347, !dbg !50
  %349 = and i32 %i.i.1.i30, 2, !dbg !50
  %.not35.i47 = icmp eq i32 %349, 0, !dbg !50
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !50

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !50
  %.not36.i49 = icmp eq i32 %350, 0, !dbg !50
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !50
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !50
  %.0.i50 = select i1 %.not36.i49, float %352, float %351, !dbg !50
  br label %__nv_sinf.exit55, !dbg !50

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !50
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !50
  %353 = icmp sgt i32 %.decomposed205, 0, !dbg !52
  %354 = and i1 %238, %353, !dbg !53
  %355 = add nsw i32 %129, %245, !dbg !54
  %356 = sext i32 %355 to i64, !dbg !55
  %357 = getelementptr float, ptr addrspace(1) %1, i64 %356, !dbg !55
  %358 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %357, i1 %354, i32 0, i1 %354) #4, !dbg !56
  %359 = bitcast i32 %358 to float, !dbg !56
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !57
  %360 = fmul float %359, 0x3FE45F3060000000, !dbg !57
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not.i110 = icmp eq i32 %361, 0, !dbg !57
  %362 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %360) #4, !dbg !57
  %363 = tail call i32 @llvm.nvvm.f2i.rn(float %360) #4, !dbg !57
  %.01.i111 = select i1 %.not.i110, i32 %363, i32 %362, !dbg !57
  %364 = sitofp i32 %.01.i111 to float, !dbg !57
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not15.i112 = icmp eq i32 %365, 0, !dbg !57
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float 0xBFF921FB40000000, float %359) #4, !dbg !57
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %364, float 0xBFF921FB40000000, float %359) #4, !dbg !57
  %.02.i113 = select i1 %.not15.i112, float %367, float %366, !dbg !57
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not16.i114 = icmp eq i32 %368, 0, !dbg !57
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !57
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %364, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !57
  %.03.i115 = select i1 %.not16.i114, float %370, float %369, !dbg !57
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not17.i116 = icmp eq i32 %371, 0, !dbg !57
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !57
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %364, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !57
  %.04.i117 = select i1 %.not17.i116, float %373, float %372, !dbg !57
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not18.i118 = icmp eq i32 %374, 0, !dbg !57
  %375 = tail call float @llvm.nvvm.fabs.ftz.f(float %359) #4, !dbg !57
  %376 = tail call float @llvm.nvvm.fabs.f(float %359) #4, !dbg !57
  %.06.i119 = select i1 %.not18.i118, float %376, float %375, !dbg !57
  %377 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !57
  br i1 %377, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !57

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_sinf.exit55
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not19.i121 = icmp eq i32 %378, 0, !dbg !57
  %.07.i122 = select i1 %.not19.i121, float %376, float %375, !dbg !57
  %379 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !57
  br i1 %379, label %__nv_fmul_rn.exit.i.i.i160, label %383, !dbg !57

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not27.i161 = icmp eq i32 %380, 0, !dbg !57
  %381 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %359, float 0.000000e+00) #4, !dbg !57
  %382 = tail call float @llvm.nvvm.mul.rn.f(float %359, float 0.000000e+00) #4, !dbg !57
  %.08.i162 = select i1 %.not27.i161, float %382, float %381, !dbg !57
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !57

383:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %384 = lshr i32 %358, 23, !dbg !57
  %385 = and i32 %384, 224, !dbg !57
  %386 = add nsw i32 %385, -128, !dbg !57
  %387 = shl i32 %358, 8, !dbg !57
  %388 = or i32 %387, -2147483648, !dbg !57
  %389 = lshr exact i32 %386, 5, !dbg !57
  br label %390, !dbg !57

390:                                              ; preds = %383, %390
  %indvars.iv189 = phi i64 [ 0, %383 ], [ %indvars.iv.next190, %390 ]
  %hi.i.i.i.0.i123174 = phi i32 [ 0, %383 ], [ %395, %390 ]
  %391 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv189, !dbg !57
  %392 = load i32, ptr addrspace(1) %391, align 4, !dbg !57
  %393 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %392, i32 %388, i32 %hi.i.i.i.0.i123174) #5, !dbg !57, !srcloc !28
  %394 = extractvalue { i32, i32 } %393, 0, !dbg !57
  %395 = extractvalue { i32, i32 } %393, 1, !dbg !57
  %396 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv189, !dbg !57
  store i32 %394, ptr %396, align 4, !dbg !57
  %indvars.iv.next190 = add nuw nsw i64 %indvars.iv189, 1, !dbg !57
  %exitcond191.not = icmp eq i64 %indvars.iv.next190, 6, !dbg !57
  br i1 %exitcond191.not, label %397, label %390, !dbg !57, !llvm.loop !58

397:                                              ; preds = %390
  %398 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !57
  store i32 %395, ptr %398, align 4, !dbg !57
  %399 = and i32 %384, 31, !dbg !57
  %400 = sub nsw i32 6, %389, !dbg !57
  %401 = sext i32 %400 to i64, !dbg !57
  %402 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %401, !dbg !57
  %403 = load i32, ptr %402, align 4, !dbg !57
  %404 = sub nsw i32 5, %389, !dbg !57
  %405 = sext i32 %404 to i64, !dbg !57
  %406 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %405, !dbg !57
  %407 = load i32, ptr %406, align 4, !dbg !57
  %.not20.i125 = icmp eq i32 %399, 0, !dbg !57
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %408, !dbg !57

408:                                              ; preds = %397
  %409 = sub nsw i32 4, %389, !dbg !57
  %410 = sub nuw nsw i32 32, %399, !dbg !57
  %411 = shl i32 %403, %399, !dbg !57
  %412 = lshr i32 %407, %410, !dbg !57
  %413 = add i32 %412, %411, !dbg !57
  %414 = shl i32 %407, %399, !dbg !57
  %415 = sext i32 %409 to i64, !dbg !57
  %416 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %415, !dbg !57
  %417 = load i32, ptr %416, align 4, !dbg !57
  %418 = lshr i32 %417, %410, !dbg !57
  %419 = add i32 %418, %414, !dbg !57
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !57

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %408, %397
  %hi.i.i.i.1.i127 = phi i32 [ %413, %408 ], [ %403, %397 ], !dbg !57
  %lo.i.i.i.0.i128 = phi i32 [ %419, %408 ], [ %407, %397 ], !dbg !57
  %420 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !57
  %421 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !57
  %422 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !57
  %423 = lshr i32 %421, 31, !dbg !57
  %424 = add nuw nsw i32 %423, %420, !dbg !57
  %425 = sub nsw i32 0, %424, !dbg !57
  %.not2123.i129 = icmp slt i32 %358, 0, !dbg !57
  %spec.select.i130 = select i1 %.not2123.i129, i32 %425, i32 %424, !dbg !57
  %426 = xor i32 %421, %358, !dbg !57
  %.lobit.i131 = ashr i32 %421, 31, !dbg !57
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %421, !dbg !57
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %422, !dbg !57
  %427 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !57
  %428 = shl nuw i64 %427, 32, !dbg !57
  %429 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !57
  %430 = or disjoint i64 %428, %429, !dbg !57
  %431 = sitofp i64 %430 to double, !dbg !57
  %432 = fmul double %431, 0x3BF921FB54442D19, !dbg !57
  %433 = fptrunc double %432 to float, !dbg !57
  %434 = fneg float %433, !dbg !57
  %.not2526.i135 = icmp slt i32 %426, 0, !dbg !57
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %434, float %433, !dbg !57
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !57

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_sinf.exit55
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !57
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_sinf.exit55 ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !57
  %435 = add i32 %i.i.1.i138, 1, !dbg !57
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not28.i140 = icmp eq i32 %436, 0, !dbg !57
  %437 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !57
  %438 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !57
  %.011.i141 = select i1 %.not28.i140, float %438, float %437, !dbg !57
  %439 = and i32 %i.i.1.i138, 1, !dbg !57
  %.not29.not.i142 = icmp eq i32 %439, 0, !dbg !57
  %440 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !57
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not30.i143 = icmp eq i32 %441, 0, !dbg !57
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %440, float 0.000000e+00) #4, !dbg !57
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %440, float 0.000000e+00) #4, !dbg !57
  %.012.i144 = select i1 %.not30.i143, float %443, float %442, !dbg !57
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !57

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not31.i158 = icmp eq i32 %444, 0, !dbg !57
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !57
  %446 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !57
  %.013.i159 = select i1 %.not31.i158, float %446, float %445, !dbg !57
  br label %__internal_fmad.exit2.i.i.i145, !dbg !57

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %447 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !57
  %448 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !57
  %449 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !57
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not32.i146 = icmp eq i32 %450, 0, !dbg !57
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %449, float %.011.i141, float %448) #4, !dbg !57
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %449, float %.011.i141, float %448) #4, !dbg !57
  %.010.i147 = select i1 %.not32.i146, float %452, float %451, !dbg !57
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not33.i148 = icmp eq i32 %453, 0, !dbg !57
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %447) #4, !dbg !57
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %447) #4, !dbg !57
  %.09.i149 = select i1 %.not33.i148, float %455, float %454, !dbg !57
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not34.i150 = icmp eq i32 %456, 0, !dbg !57
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %440) #4, !dbg !57
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %440) #4, !dbg !57
  %.05.i151 = select i1 %.not34.i150, float %458, float %457, !dbg !57
  %459 = and i32 %435, 2, !dbg !57
  %.not35.i152 = icmp eq i32 %459, 0, !dbg !57
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !57

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !57
  %.not36.i154 = icmp eq i32 %460, 0, !dbg !57
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !57
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !57
  %.0.i155 = select i1 %.not36.i154, float %462, float %461, !dbg !57
  br label %__nv_cosf.exit163, !dbg !57

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !57
  %463 = select i1 %243, float %z.i.i.0.i51, float 0.000000e+00, !dbg !59
  %464 = select i1 %16, float %z.i.i.0.i, float 0.000000e+00, !dbg !60
  %465 = select i1 %128, float %z.i.i.0.i102, float 0.000000e+00, !dbg !61
  %466 = select i1 %15, float %464, float %465, !dbg !62
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !57
  %467 = select i1 %354, float %z.i.i.0.i156, float 0.000000e+00, !dbg !63
  %468 = select i1 %242, float %463, float %467, !dbg !64
  %469 = select i1 %12, float %466, float %468, !dbg !65
  %470 = sext i32 %9 to i64, !dbg !66
  %471 = getelementptr float, ptr addrspace(1) %2, i64 %470, !dbg !66
  %472 = bitcast float %469 to i32, !dbg !67
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %472, ptr addrspace(1) %471, i1 true) #4, !dbg !67
  ret void, !dbg !68
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czzdvfukju55ss2xjqq3pkvb2w3ugcsmbqgelsfmol64c26umzuu.py", directory: "inductor_cache/zz")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 38, column: 44, scope: !7)
!19 = !DILocation(line: 36, column: 18, scope: !7)
!20 = !DILocation(line: 37, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 49, scope: !7)
!22 = !DILocation(line: 38, column: 35, scope: !7)
!23 = !DILocation(line: 38, column: 60, scope: !7)
!24 = !DILocation(line: 38, column: 56, scope: !7)
!25 = !DILocation(line: 38, column: 31, scope: !7)
!26 = !DILocation(line: 38, column: 65, scope: !7)
!27 = !DILocation(line: 39, column: 24, scope: !7)
!28 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.count", i32 1}
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 45, column: 20, scope: !7)
!33 = !DILocation(line: 46, column: 35, scope: !7)
!34 = !DILocation(line: 46, column: 60, scope: !7)
!35 = !DILocation(line: 46, column: 31, scope: !7)
!36 = !DILocation(line: 46, column: 69, scope: !7)
!37 = !DILocation(line: 47, column: 24, scope: !7)
!38 = distinct !{!38, !30}
!39 = !DILocation(line: 53, column: 20, scope: !7)
!40 = !DILocation(line: 56, column: 23, scope: !7)
!41 = !DILocation(line: 62, column: 53, scope: !7)
!42 = !DILocation(line: 56, column: 29, scope: !7)
!43 = !DILocation(line: 60, column: 20, scope: !7)
!44 = !DILocation(line: 61, column: 20, scope: !7)
!45 = !DILocation(line: 62, column: 58, scope: !7)
!46 = !DILocation(line: 62, column: 35, scope: !7)
!47 = !DILocation(line: 62, column: 65, scope: !7)
!48 = !DILocation(line: 62, column: 31, scope: !7)
!49 = !DILocation(line: 62, column: 74, scope: !7)
!50 = !DILocation(line: 63, column: 24, scope: !7)
!51 = distinct !{!51, !30}
!52 = !DILocation(line: 66, column: 21, scope: !7)
!53 = !DILocation(line: 69, column: 20, scope: !7)
!54 = !DILocation(line: 70, column: 69, scope: !7)
!55 = !DILocation(line: 70, column: 31, scope: !7)
!56 = !DILocation(line: 70, column: 78, scope: !7)
!57 = !DILocation(line: 71, column: 24, scope: !7)
!58 = distinct !{!58, !30}
!59 = !DILocation(line: 65, column: 35, scope: !7)
!60 = !DILocation(line: 41, column: 35, scope: !7)
!61 = !DILocation(line: 49, column: 35, scope: !7)
!62 = !DILocation(line: 50, column: 34, scope: !7)
!63 = !DILocation(line: 73, column: 35, scope: !7)
!64 = !DILocation(line: 74, column: 35, scope: !7)
!65 = !DILocation(line: 0, scope: !7)
!66 = !DILocation(line: 78, column: 25, scope: !7)
!67 = !DILocation(line: 78, column: 37, scope: !7)
!68 = !DILocation(line: 78, column: 4, scope: !7)
