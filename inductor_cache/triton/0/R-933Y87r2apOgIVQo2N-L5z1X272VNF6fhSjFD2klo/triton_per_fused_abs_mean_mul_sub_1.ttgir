#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":19:0)
#loc1 = loc(unknown)
#loc8 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":33:24)
#loc17 = loc(callsite(#loc1 at #loc8))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_abs_mean_mul_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":19:0), %arg2: i32 loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<36> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<2.949120e+05> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc2)
    %2 = arith.cmpi slt, %1, %cst : tensor<1x64xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.addptr %3, %1 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc4)
    %5 = tt.load %4, %2, %cst_0 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc5)
    %6 = arith.select %2, %5, %cst_0 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc6)
    %7 = "tt.reduce"(%6) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc8)), %arg4: f32 loc(callsite(#loc1 at #loc8))):
      %13 = arith.addf %arg3, %arg4 : f32 loc(#loc19)
      tt.reduce.return %13 : f32 loc(#loc16)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc16)
    %8 = triton_gpu.convert_layout %7 {fastmath = #arith.fastmath<none>} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc10)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc11)
    %10 = arith.divf %9, %cst_1 : tensor<1x1xf32, #blocked1> loc(#loc10)
    gpu.barrier loc(#loc12)
    %11 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %12 = tt.splat %11 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc14)
    tt.store %12, %10 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc14)
    tt.return loc(#loc15)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":26:34)
#loc3 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":28:21)
#loc4 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":30:30)
#loc5 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":30:35)
#loc6 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":32:33)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc10 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":35:18)
#loc11 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":33:27)
#loc12 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":38:4)
#loc13 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":39:28)
#loc14 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":39:70)
#loc15 = loc("inductor_cache/uc/cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py":39:4)
#loc16 = loc(callsite(#loc7 at #loc8))
#loc18 = loc(callsite(#loc9 at #loc7))
#loc19 = loc(callsite(#loc18 at #loc8))
