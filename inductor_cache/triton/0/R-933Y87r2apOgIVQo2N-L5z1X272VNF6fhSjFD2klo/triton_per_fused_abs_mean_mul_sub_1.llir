; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_abs_mean_mul_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 31, !dbg !10
  %6 = lshr i32 %4, 5, !dbg !10
  %7 = and i32 %4, 63, !dbg !10
  %8 = icmp samesign ult i32 %7, 36, !dbg !11
  %9 = zext nneg i32 %7 to i64, !dbg !12
  %10 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !12
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %10, i1 %8, i32 0, i1 %8) #3, !dbg !13
  %12 = bitcast i32 %11 to float, !dbg !13
  %13 = select i1 %8, float %12, float 0.000000e+00, !dbg !14
  %14 = bitcast float %13 to i32, !dbg !15
  %15 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %14, i32 16, i32 31), !dbg !15
  %16 = bitcast i32 %15 to float, !dbg !15
  %17 = fadd float %13, %16, !dbg !19
  %18 = bitcast float %17 to i32, !dbg !15
  %19 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %18, i32 8, i32 31), !dbg !15
  %20 = bitcast i32 %19 to float, !dbg !15
  %21 = fadd float %17, %20, !dbg !19
  %22 = bitcast float %21 to i32, !dbg !15
  %23 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %22, i32 4, i32 31), !dbg !15
  %24 = bitcast i32 %23 to float, !dbg !15
  %25 = fadd float %21, %24, !dbg !19
  %26 = bitcast float %25 to i32, !dbg !15
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 2, i32 31), !dbg !15
  %28 = bitcast i32 %27 to float, !dbg !15
  %29 = fadd float %25, %28, !dbg !19
  %30 = bitcast float %29 to i32, !dbg !15
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 1, i32 31), !dbg !15
  %32 = bitcast i32 %31 to float, !dbg !15
  %33 = fadd float %29, %32, !dbg !19
  %34 = icmp eq i32 %5, 0, !dbg !15
  %35 = and i32 %6, 1, !dbg !15
  %36 = zext nneg i32 %35 to i64, !dbg !15
  %37 = getelementptr float, ptr addrspace(3) @global_smem, i64 %36, !dbg !15
  %38 = bitcast float %33 to <1 x i32>, !dbg !15
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %37, <1 x i32> %38, i1 %34) #3, !dbg !15
  tail call void @llvm.nvvm.barrier0(), !dbg !15
  %39 = icmp slt i32 %4, 2, !dbg !15
  %40 = sext i32 %4 to i64, !dbg !15
  %41 = getelementptr float, ptr addrspace(3) @global_smem, i64 %40, !dbg !15
  %42 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %41, i1 %39) #3, !dbg !15
  %43 = bitcast i32 %42 to float, !dbg !15
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 1, i32 31), !dbg !15
  %45 = bitcast i32 %44 to float, !dbg !15
  %46 = fadd float %43, %45, !dbg !19
  %47 = and i32 %4, 1, !dbg !15
  %48 = icmp eq i32 %47, 0, !dbg !15
  %49 = and i1 %39, %48, !dbg !15
  %50 = bitcast float %46 to <1 x i32>, !dbg !15
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %41, <1 x i32> %50, i1 %49) #3, !dbg !15
  tail call void @llvm.nvvm.barrier0(), !dbg !15
  %51 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !15
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %51, float 2.949120e+05) #3, !dbg !21
  tail call void @llvm.nvvm.barrier0(), !dbg !22
  %53 = icmp eq i32 %7, 0, !dbg !23
  %54 = bitcast float %52 to i32, !dbg !23
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %0, i1 %53) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cucn32d4c7kkwqvvd6i3qol2lr5qh5e33bvtsgy376u46tm6cbn3.py", directory: "inductor_cache/uc")
!4 = !{ptr @triton_per_fused_abs_mean_mul_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_mean_mul_sub_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_mean_mul_sub_1", linkageName: "triton_per_fused_abs_mean_mul_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 28, column: 21, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 35, scope: !7)
!14 = !DILocation(line: 32, column: 33, scope: !7)
!15 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 33, column: 24, scope: !7)
!19 = !DILocation(line: 256, column: 15, scope: !20, inlinedAt: !18)
!20 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!21 = !DILocation(line: 35, column: 18, scope: !7)
!22 = !DILocation(line: 38, column: 4, scope: !7)
!23 = !DILocation(line: 39, column: 70, scope: !7)
!24 = !DILocation(line: 39, column: 4, scope: !7)
