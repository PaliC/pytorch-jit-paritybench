#loc = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":37:24)
#loc31 = loc(callsite(#loc1 at #loc20))
module {
  tt.func public @triton_per_fused_div_pow_relu_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":19:0), %arg1: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999997E-7> : tensor<32x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<32x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<32x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.muli %5, %cst_1 : tensor<32x1xi32> loc(#loc10)
    %10 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc11)
    %12 = arith.addi %10, %11 : tensor<32x16xi32> loc(#loc11)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %12 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc12)
    %15 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc13)
    %16 = tt.load %14, %15, %cst_0 : tensor<32x16x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.cmpf ogt, %cst_0, %16 : tensor<32x16xf32> loc(#loc28)
    %18 = arith.select %17, %cst_0, %16 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc29)
    %19 = arith.mulf %18, %18 : tensor<32x16xf32> loc(#loc17)
    %20 = arith.select %15, %19, %cst_0 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc18)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc20)), %arg4: f32 loc(callsite(#loc1 at #loc20))):
      %27 = arith.addf %arg3, %arg4 : f32 loc(#loc33)
      tt.reduce.return %27 : f32 loc(#loc30)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc30)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc22)
    %23 = arith.addf %22, %cst : tensor<32x1xf32> loc(#loc23)
    %24 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<32x1xf32>) -> tensor<32x1xf32> loc(#loc24)
    %25 = tt.broadcast %24 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc25)
    %26 = arith.divf %18, %25 : tensor<32x16xf32> loc(#loc25)
    tt.store %14, %26, %15 : tensor<32x16x!tt.ptr<f32>> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":23:28)
#loc3 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":23:33)
#loc4 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":24:36)
#loc5 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":24:44)
#loc6 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":24:23)
#loc7 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":25:21)
#loc8 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":26:26)
#loc9 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":26:34)
#loc10 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":31:42)
#loc11 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":31:39)
#loc12 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":31:34)
#loc13 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":31:47)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc15 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":33:40)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc17 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":34:18)
#loc18 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":36:33)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":37:27)
#loc23 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":39:18)
#loc24 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":40:27)
#loc25 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":41:19)
#loc26 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":42:48)
#loc27 = loc("inductor_cache/i6/ci6oet6ywan743mym2xzvwsk3zmxjh3vyrirrwmrtaf7mw2ulk3f.py":42:4)
#loc28 = loc(callsite(#loc14 at #loc15))
#loc29 = loc(callsite(#loc16 at #loc15))
#loc30 = loc(callsite(#loc19 at #loc20))
#loc32 = loc(callsite(#loc21 at #loc19))
#loc33 = loc(callsite(#loc32 at #loc20))
