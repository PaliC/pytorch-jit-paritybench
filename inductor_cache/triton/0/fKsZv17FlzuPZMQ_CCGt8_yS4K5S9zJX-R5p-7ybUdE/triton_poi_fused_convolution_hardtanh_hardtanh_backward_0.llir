; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_hardtanh_hardtanh_backward_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 62, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 64, !dbg !14
  %13 = sext i32 %11 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %12) #1, !dbg !16
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = bitcast i32 %17 to float, !dbg !16
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !17
  %21 = bitcast i32 %20 to float, !dbg !17
  %22 = fadd float %18, %21, !dbg !18
  %23 = fadd float %19, %21, !dbg !18
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !19
  %25 = getelementptr i1, ptr addrspace(1) %3, i64 %13, !dbg !20
  %26 = insertelement <2 x float> <float poison, float 6.000000e+00>, float %22, i64 0, !dbg !21
  %27 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %23, i64 1, !dbg !21
  %28 = fcmp ole <2 x float> %26, %27, !dbg !21
  %.inv = fcmp ole float %22, 0.000000e+00, !dbg !21
  %29 = select i1 %.inv, float 0.000000e+00, float %22, !dbg !21
  %.inv1 = fcmp ole float %23, 0.000000e+00, !dbg !21
  %30 = insertelement <2 x float> %26, float 0.000000e+00, i64 1, !dbg !25
  %31 = insertelement <2 x float> %27, float 6.000000e+00, i64 0, !dbg !25
  %32 = fcmp oge <2 x float> %30, %31, !dbg !25
  %33 = select i1 %.inv1, float 0.000000e+00, float %23, !dbg !21
  %34 = fcmp olt float %29, 6.000000e+00, !dbg !26
  %35 = fcmp olt float %33, 6.000000e+00, !dbg !26
  %36 = fcmp uno float %29, 0.000000e+00, !dbg !28
  %37 = fcmp uno float %33, 0.000000e+00, !dbg !28
  %38 = or i1 %34, %36, !dbg !29
  %39 = or i1 %35, %37, !dbg !29
  %40 = or <2 x i1> %32, %28, !dbg !30
  %41 = bitcast float %29 to i32, !dbg !31
  %42 = select i1 %38, i32 %41, i32 1086324736, !dbg !32
  %43 = bitcast float %33 to i32, !dbg !31
  %44 = select i1 %39, i32 %43, i32 1086324736, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %42, i32 %44, ptr addrspace(1) %24, i1 %12) #1, !dbg !31
  %45 = zext <2 x i1> %40 to <2 x i8>, !dbg !33
  %46 = bitcast <2 x i8> %45 to i16, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %46, ptr addrspace(1) %25, i1 %12) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl66w3qsrgo6phyud4zhhetrz4usk2imbrwo2yxfh5zemsux3qbj.py", directory: "inductor_cache/l6")
!4 = !{ptr @triton_poi_fused_convolution_hardtanh_hardtanh_backward_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_hardtanh_hardtanh_backward_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_hardtanh_hardtanh_backward_0", linkageName: "triton_poi_fused_convolution_hardtanh_hardtanh_backward_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 18, scope: !7)
!19 = !DILocation(line: 36, column: 25, scope: !7)
!20 = !DILocation(line: 37, column: 25, scope: !7)
!21 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 30, column: 40, scope: !7)
!25 = !DILocation(line: 34, column: 19, scope: !7)
!26 = !DILocation(line: 110, column: 15, scope: !22, inlinedAt: !27)
!27 = !DILocation(line: 32, column: 40, scope: !7)
!28 = !DILocation(line: 112, column: 21, scope: !22, inlinedAt: !27)
!29 = !DILocation(line: 112, column: 16, scope: !22, inlinedAt: !27)
!30 = !DILocation(line: 35, column: 19, scope: !7)
!31 = !DILocation(line: 36, column: 36, scope: !7)
!32 = !DILocation(line: 113, column: 29, scope: !22, inlinedAt: !27)
!33 = !DILocation(line: 37, column: 37, scope: !7)
!34 = !DILocation(line: 37, column: 4, scope: !7)
