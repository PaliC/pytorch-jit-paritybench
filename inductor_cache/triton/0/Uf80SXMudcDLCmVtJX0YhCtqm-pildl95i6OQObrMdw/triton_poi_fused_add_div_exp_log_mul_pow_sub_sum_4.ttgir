#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_div_exp_log_mul_pow_sub_sum_4(%arg0: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0), %arg1: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0), %arg2: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0), %arg3: !tt.ptr<f64> {tt.divisibility = 16 : i32} loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0), %arg4: i32 loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<5.000000e-01> : tensor<4xf64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-3.6757541328186907> : tensor<4xf64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<4xi32, #blocked> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<4xi32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<4xi32, #blocked> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f64>, i32 loc(#loc7)
    %7 = tt.load %6 : !tt.ptr<f64> loc(#loc8)
    %8 = tt.splat %7 : f64 -> tensor<4xf64, #blocked> loc(#loc9)
    %9 = arith.muli %4, %cst_4 : tensor<4xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg2 : !tt.ptr<f64> -> tensor<4x!tt.ptr<f64>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc12)
    %13 = tt.splat %arg3 : !tt.ptr<f64> -> tensor<4x!tt.ptr<f64>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %9 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc14)
    %16 = tt.addptr %arg1, %c1_i32 : !tt.ptr<f64>, i32 loc(#loc15)
    %17 = tt.load %16 : !tt.ptr<f64> loc(#loc16)
    %18 = tt.splat %17 : f64 -> tensor<4xf64, #blocked> loc(#loc17)
    %19 = arith.addi %9, %cst_3 : tensor<4xi32, #blocked> loc(#loc18)
    %20 = tt.addptr %10, %19 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc19)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc20)
    %22 = tt.addptr %13, %19 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc21)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc22)
    %24 = tt.addptr %arg1, %c2_i32 : !tt.ptr<f64>, i32 loc(#loc23)
    %25 = tt.load %24 : !tt.ptr<f64> loc(#loc24)
    %26 = tt.splat %25 : f64 -> tensor<4xf64, #blocked> loc(#loc25)
    %27 = arith.addi %9, %cst_2 : tensor<4xi32, #blocked> loc(#loc26)
    %28 = tt.addptr %10, %27 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc27)
    %29 = tt.load %28, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc28)
    %30 = tt.addptr %13, %27 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc29)
    %31 = tt.load %30, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc30)
    %32 = tt.addptr %arg1, %c3_i32 : !tt.ptr<f64>, i32 loc(#loc31)
    %33 = tt.load %32 : !tt.ptr<f64> loc(#loc32)
    %34 = tt.splat %33 : f64 -> tensor<4xf64, #blocked> loc(#loc33)
    %35 = arith.addi %9, %cst_1 : tensor<4xi32, #blocked> loc(#loc34)
    %36 = tt.addptr %10, %35 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc35)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc36)
    %38 = tt.addptr %13, %35 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc37)
    %39 = tt.load %38, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc38)
    %40 = tt.splat %arg0 : !tt.ptr<f64> -> tensor<4x!tt.ptr<f64>, #blocked> loc(#loc39)
    %41 = tt.addptr %40, %4 : tensor<4x!tt.ptr<f64>, #blocked>, tensor<4xi32, #blocked> loc(#loc39)
    %42 = tt.load %41, %5 : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc40)
    %43 = arith.subf %8, %12 : tensor<4xf64, #blocked> loc(#loc41)
    %44 = tt.extern_elementwise %15 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (tensor<4xf64, #blocked>) -> tensor<4xf64, #blocked> loc(#loc42)
    %45 = arith.divf %43, %44 : tensor<4xf64, #blocked> loc(#loc43)
    %46 = arith.mulf %45, %45 : tensor<4xf64, #blocked> loc(#loc44)
    %47 = arith.subf %18, %21 : tensor<4xf64, #blocked> loc(#loc45)
    %48 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (tensor<4xf64, #blocked>) -> tensor<4xf64, #blocked> loc(#loc46)
    %49 = arith.divf %47, %48 : tensor<4xf64, #blocked> loc(#loc47)
    %50 = arith.mulf %49, %49 : tensor<4xf64, #blocked> loc(#loc48)
    %51 = arith.addf %46, %50 : tensor<4xf64, #blocked> loc(#loc49)
    %52 = arith.subf %26, %29 : tensor<4xf64, #blocked> loc(#loc50)
    %53 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (tensor<4xf64, #blocked>) -> tensor<4xf64, #blocked> loc(#loc51)
    %54 = arith.divf %52, %53 : tensor<4xf64, #blocked> loc(#loc52)
    %55 = arith.mulf %54, %54 : tensor<4xf64, #blocked> loc(#loc53)
    %56 = arith.addf %51, %55 : tensor<4xf64, #blocked> loc(#loc54)
    %57 = arith.subf %34, %37 : tensor<4xf64, #blocked> loc(#loc55)
    %58 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_exp"} : (tensor<4xf64, #blocked>) -> tensor<4xf64, #blocked> loc(#loc56)
    %59 = arith.divf %57, %58 : tensor<4xf64, #blocked> loc(#loc57)
    %60 = arith.mulf %59, %59 : tensor<4xf64, #blocked> loc(#loc58)
    %61 = arith.addf %56, %60 : tensor<4xf64, #blocked> loc(#loc59)
    %62 = tt.extern_elementwise %42 {libname = "", libpath = "", pure = true, symbol = "__nv_log"} : (tensor<4xf64, #blocked>) -> tensor<4xf64, #blocked> loc(#loc60)
    %63 = arith.addf %62, %cst_0 : tensor<4xf64, #blocked> loc(#loc61)
    %64 = arith.mulf %61, %cst : tensor<4xf64, #blocked> loc(#loc62)
    %65 = arith.subf %63, %64 : tensor<4xf64, #blocked> loc(#loc63)
    %66 = arith.addf %15, %23 : tensor<4xf64, #blocked> loc(#loc64)
    %67 = arith.addf %66, %31 : tensor<4xf64, #blocked> loc(#loc65)
    %68 = arith.addf %67, %39 : tensor<4xf64, #blocked> loc(#loc66)
    %69 = arith.subf %65, %68 : tensor<4xf64, #blocked> loc(#loc67)
    tt.store %41, %69, %5 : tensor<4x!tt.ptr<f64>, #blocked> loc(#loc68)
    tt.return loc(#loc69)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":21:28)
#loc3 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":21:33)
#loc4 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":22:36)
#loc5 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":22:23)
#loc6 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":23:21)
#loc7 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":25:30)
#loc8 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":25:19)
#loc9 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":26:33)
#loc10 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":27:32)
#loc11 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":27:30)
#loc12 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":27:37)
#loc13 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":28:30)
#loc14 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":28:37)
#loc15 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":29:30)
#loc16 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":29:19)
#loc17 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":30:33)
#loc18 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":31:35)
#loc19 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":31:31)
#loc20 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":31:42)
#loc21 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":32:31)
#loc22 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":32:42)
#loc23 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":33:31)
#loc24 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":33:20)
#loc25 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":34:35)
#loc26 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":35:35)
#loc27 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":35:31)
#loc28 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":35:42)
#loc29 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":36:31)
#loc30 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":36:42)
#loc31 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":37:31)
#loc32 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":37:20)
#loc33 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":38:35)
#loc34 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":39:35)
#loc35 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":39:31)
#loc36 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":39:42)
#loc37 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":40:31)
#loc38 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":40:42)
#loc39 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":41:35)
#loc40 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":41:40)
#loc41 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":42:18)
#loc42 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":43:25)
#loc43 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":44:18)
#loc44 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":45:18)
#loc45 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":46:19)
#loc46 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":47:26)
#loc47 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":48:20)
#loc48 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":49:20)
#loc49 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":50:19)
#loc50 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":51:20)
#loc51 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":52:26)
#loc52 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":53:20)
#loc53 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":54:20)
#loc54 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":55:20)
#loc55 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":56:20)
#loc56 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":57:26)
#loc57 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":58:20)
#loc58 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":59:20)
#loc59 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":60:20)
#loc60 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":61:26)
#loc61 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":63:20)
#loc62 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":65:20)
#loc63 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":66:20)
#loc64 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":67:19)
#loc65 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":68:20)
#loc66 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":69:20)
#loc67 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":70:20)
#loc68 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":71:40)
#loc69 = loc("inductor_cache/c3/cc3yyvlgkktq7qldehpkprvyvsoyh7aayv7sw2yzfmay5cjlp5lz.py":71:4)
