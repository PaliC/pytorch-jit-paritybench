#loc = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":49:26)
#loc37 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @triton_per_fused_div_linalg_vector_norm_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":19:0), %arg1: i32 loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999993E-9> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<6.250000e-02> : tensor<1x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<1x16xi32> loc(#loc7)
    %6 = arith.addi %3, %5 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %10 = tt.load %8, %9, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %11 = arith.mulf %10, %cst_1 : tensor<1x16xf32> loc(#loc10)
    %12 = arith.cmpf olt, %cst_2, %11 : tensor<1x16xf32> loc(#loc11)
    %13 = arith.extui %12 : tensor<1x16xi1> to tensor<1x16xi8> loc(#loc12)
    %14 = arith.cmpf olt, %11, %cst_2 : tensor<1x16xf32> loc(#loc13)
    %15 = arith.extui %14 : tensor<1x16xi1> to tensor<1x16xi8> loc(#loc14)
    %16 = arith.subi %13, %15 : tensor<1x16xi8> loc(#loc15)
    %17 = arith.sitofp %16 : tensor<1x16xi8> to tensor<1x16xf32> loc(#loc16)
    %18 = math.absf %11 : tensor<1x16xf32> loc(#loc17)
    %19 = arith.addf %18, %cst_0 : tensor<1x16xf32> loc(#loc18)
    %20 = tt.extern_elementwise %19 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x16xf32>) -> tensor<1x16xf32> loc(#loc19)
    %21 = arith.mulf %17, %20 : tensor<1x16xf32> loc(#loc20)
    %22 = arith.mulf %21, %21 : tensor<1x16xf32> loc(#loc21)
    %23 = arith.select %9, %22, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc22)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc24)), %arg4: f32 loc(callsite(#loc1 at #loc24))):
      %33 = arith.addf %arg3, %arg4 : f32 loc(#loc43)
      tt.reduce.return %33 : f32 loc(#loc36)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc36)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc27)
    %27 = arith.cmpf ogt, %26, %cst : tensor<1x1xf32> loc(#loc39)
    %28 = arith.cmpf une, %26, %26 : tensor<1x1xf32> loc(#loc40)
    %29 = arith.ori %27, %28 : tensor<1x1xi1> loc(#loc41)
    %30 = arith.select %29, %26, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc42)
    %31 = tt.broadcast %30 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc33)
    %32 = arith.divf %21, %31 : tensor<1x16xf32> loc(#loc33)
    tt.store %8, %32, %9 : tensor<1x16x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":23:28)
#loc3 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":25:21)
#loc4 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":26:26)
#loc5 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":26:34)
#loc6 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":31:42)
#loc7 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":31:39)
#loc8 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":31:34)
#loc9 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":31:47)
#loc10 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":33:18)
#loc11 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":35:18)
#loc12 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":36:19)
#loc13 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":37:18)
#loc14 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":38:19)
#loc15 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":39:18)
#loc16 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":40:19)
#loc17 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":41:24)
#loc18 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":43:20)
#loc19 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":44:27)
#loc20 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":45:19)
#loc21 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":46:20)
#loc22 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":48:35)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":49:29)
#loc27 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":50:27)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc29 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":52:42)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":53:20)
#loc34 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":54:48)
#loc35 = loc("inductor_cache/el/celv3xg7ou7ykxnufxx3vv3tpj6w6kaoirt7k7ccemdhmglqzvwc.py":54:4)
#loc36 = loc(callsite(#loc23 at #loc24))
#loc38 = loc(callsite(#loc25 at #loc23))
#loc39 = loc(callsite(#loc28 at #loc29))
#loc40 = loc(callsite(#loc30 at #loc29))
#loc41 = loc(callsite(#loc31 at #loc29))
#loc42 = loc(callsite(#loc32 at #loc29))
#loc43 = loc(callsite(#loc38 at #loc24))
