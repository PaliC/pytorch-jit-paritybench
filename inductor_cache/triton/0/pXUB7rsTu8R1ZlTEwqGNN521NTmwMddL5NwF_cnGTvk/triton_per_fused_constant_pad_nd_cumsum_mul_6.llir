; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_constant_pad_nd_cumsum_mul_6(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = icmp slt i32 %5, 64, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = and i32 %7, 15, !dbg !12
  %10 = icmp samesign ult i32 %9, 9, !dbg !13
  %.frozen = freeze i32 %5, !dbg !14
  %11 = sdiv i32 %.frozen, 16, !dbg !14
  %12 = mul i32 %11, 16, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %.not = icmp eq i32 %9, 0, !dbg !16
  %13 = shl nuw nsw i32 %9, 4, !dbg !17
  %14 = shl i32 %11, 7, !dbg !18
  %15 = add nsw i32 %.decomposed, %13, !dbg !19
  %16 = add nsw i32 %15, -16, !dbg !20
  %17 = add i32 %16, %14, !dbg !21
  %18 = sext i32 %17 to i64, !dbg !22
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !22
  %20 = add nsw i32 %9, -1, !dbg !23
  %21 = icmp ult i32 %20, 8, !dbg !23
  %22 = and i1 %21, %6, !dbg !24
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %22, i32 0, i1 %22) #2, !dbg !25
  %24 = bitcast i32 %23 to float, !dbg !25
  %25 = fmul float %24, 0x4023FF7CE0000000, !dbg !26
  %26 = select i1 %.not, float 0x3F50624DE0000000, float %25, !dbg !27
  %27 = bitcast float %26 to i32, !dbg !28
  %28 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %27, i32 1, i32 0), !dbg !28
  %29 = bitcast i32 %28 to float, !dbg !28
  %.not1 = icmp eq i32 %8, 0, !dbg !28
  %30 = fadd float %26, %29, !dbg !29
  %31 = select i1 %.not1, float %26, float %30, !dbg !28
  %32 = bitcast float %31 to i32, !dbg !28
  %33 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %32, i32 2, i32 0), !dbg !28
  %34 = bitcast i32 %33 to float, !dbg !28
  %35 = icmp samesign ugt i32 %8, 1, !dbg !28
  %36 = fadd float %31, %34, !dbg !29
  %37 = select i1 %35, float %36, float %31, !dbg !28
  %38 = bitcast float %37 to i32, !dbg !28
  %39 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %38, i32 4, i32 0), !dbg !28
  %40 = bitcast i32 %39 to float, !dbg !28
  %41 = icmp samesign ugt i32 %8, 3, !dbg !28
  %42 = fadd float %37, %40, !dbg !29
  %43 = select i1 %41, float %42, float %37, !dbg !28
  %44 = bitcast float %43 to i32, !dbg !28
  %45 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %44, i32 8, i32 0), !dbg !28
  %46 = bitcast i32 %45 to float, !dbg !28
  %47 = icmp samesign ugt i32 %8, 7, !dbg !28
  %48 = fadd float %43, %46, !dbg !29
  %49 = select i1 %47, float %48, float %43, !dbg !28
  %50 = mul i32 %11, 144, !dbg !31
  %51 = add i32 %15, %50, !dbg !32
  %52 = sext i32 %51 to i64, !dbg !33
  %53 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !33
  %54 = and i32 %7, 48, !dbg !34
  %55 = icmp eq i32 %54, 0, !dbg !34
  %56 = bitcast float %49 to i32, !dbg !34
  %57 = and i1 %10, %55, !dbg !34
  %58 = and i1 %57, %6, !dbg !34
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %56, ptr addrspace(1) %53, i1 %58) #2, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvlthdmafnrbw4kokce4mum2ujabnipp5riqjsqbbkuunwr5pm3x.py", directory: "inductor_cache/vl")
!4 = !{ptr @triton_per_fused_constant_pad_nd_cumsum_mul_6, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_constant_pad_nd_cumsum_mul_6, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_constant_pad_nd_cumsum_mul_6", linkageName: "triton_per_fused_constant_pad_nd_cumsum_mul_6", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 28, column: 28, scope: !7)
!11 = !DILocation(line: 30, column: 21, scope: !7)
!12 = !DILocation(line: 31, column: 34, scope: !7)
!13 = !DILocation(line: 33, column: 21, scope: !7)
!14 = !DILocation(line: 36, column: 19, scope: !7)
!15 = !DILocation(line: 35, column: 19, scope: !7)
!16 = !DILocation(line: 39, column: 19, scope: !7)
!17 = !DILocation(line: 40, column: 46, scope: !7)
!18 = !DILocation(line: 40, column: 55, scope: !7)
!19 = !DILocation(line: 40, column: 38, scope: !7)
!20 = !DILocation(line: 40, column: 43, scope: !7)
!21 = !DILocation(line: 40, column: 51, scope: !7)
!22 = !DILocation(line: 40, column: 30, scope: !7)
!23 = !DILocation(line: 40, column: 68, scope: !7)
!24 = !DILocation(line: 40, column: 75, scope: !7)
!25 = !DILocation(line: 40, column: 60, scope: !7)
!26 = !DILocation(line: 42, column: 18, scope: !7)
!27 = !DILocation(line: 44, column: 32, scope: !7)
!28 = !DILocation(line: 47, column: 45, scope: !7)
!29 = !DILocation(line: 13, column: 20, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!31 = !DILocation(line: 48, column: 42, scope: !7)
!32 = !DILocation(line: 48, column: 38, scope: !7)
!33 = !DILocation(line: 48, column: 25, scope: !7)
!34 = !DILocation(line: 48, column: 54, scope: !7)
!35 = !DILocation(line: 48, column: 4, scope: !7)
