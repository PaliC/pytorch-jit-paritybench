#loc = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0)
#loc1 = loc(unknown)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc19 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":47:71)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:50)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:51)
#loc80 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":56:26)
#loc104 = loc(callsite(#loc1 at #loc29))
#loc110 = loc(callsite(#loc1 at #loc34))
#loc121 = loc(callsite(#loc1 at #loc44))
#loc127 = loc(callsite(#loc1 at #loc49))
#loc144 = loc(callsite(#loc1 at #loc80))
#loc156 = loc(callsite(#loc104 at #loc24))
#loc162 = loc(callsite(#loc110 at #loc24))
#loc174 = loc(callsite(#loc121 at #loc24))
#loc181 = loc(callsite(#loc127 at #loc24))
#loc204 = loc(callsite(#loc156 at #loc18))
#loc210 = loc(callsite(#loc162 at #loc18))
#loc222 = loc(callsite(#loc174 at #loc18))
#loc229 = loc(callsite(#loc181 at #loc18))
#loc247 = loc(callsite(#loc204 at #loc19))
#loc250 = loc(callsite(#loc210 at #loc19))
#loc253 = loc(callsite(#loc222 at #loc19))
#loc256 = loc(callsite(#loc229 at #loc19))
module {
  tt.func public @triton_per_fused_cumsum_index_mul_rsub_sort_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":24:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0> : tensor<1x64xi16> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<1x2x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<1x64xi64> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1x64xi64> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x64xi64> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_7 = arith.constant dense<2.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.divsi %1, %cst_9 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.muli %2, %cst_8 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.remsi %1, %cst_9 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %3, %4 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %11 = tt.load %10 : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.mulf %11, %cst_7 : tensor<1x64xf32> loc(#loc12)
    %13 = arith.subf %12, %cst_6 : tensor<1x64xf32> loc(#loc13)
    %14 = arith.mulf %8, %13 : tensor<1x64xf32> loc(#loc14)
    %15 = arith.subf %cst_6, %14 : tensor<1x64xf32> loc(#loc15)
    %16 = arith.trunci %1 : tensor<1x64xi32> to tensor<1x64xi16> loc(#loc16)
    %17 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc147)
    %18 = tt.expand_dims %17 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc148)
    %19 = tt.expand_dims %18 {axis = 2 : i32} : tensor<1x2xi32> -> tensor<1x2x1xi32> loc(#loc148)
    %20 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<16x2x2xi32> loc(#loc149)
    %21 = tt.reshape %20 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc150)
    %22 = tt.reshape %15 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %23 = tt.bitcast %22 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %24 = arith.subi %cst_1, %19 : tensor<1x2x1xi32> loc(#loc201)
    %25 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<32x2x1xi32> loc(#loc202)
    %26 = arith.muli %23, %25 : tensor<32x2x1xi32> loc(#loc202)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %29 = tt.broadcast %28 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %30 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<32x2x1xi32> loc(#loc208)
    %31 = arith.muli %23, %30 : tensor<32x2x1xi32> loc(#loc208)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %34 = tt.broadcast %33 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %35 = tt.reshape %29 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %36 = tt.reshape %34 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %37 = tt.bitcast %35 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %38 = tt.bitcast %36 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %39 = tt.reshape %16 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %40 = arith.trunci %24 : tensor<1x2x1xi32> to tensor<1x2x1xi16> loc(#loc219)
    %41 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<32x2x1xi16> loc(#loc220)
    %42 = arith.muli %39, %41 : tensor<32x2x1xi16> loc(#loc220)
    %43 = "tt.reduce"(%42) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %44 = tt.expand_dims %43 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %45 = tt.broadcast %44 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %46 = arith.trunci %19 : tensor<1x2x1xi32> to tensor<1x2x1xi16> loc(#loc226)
    %47 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<32x2x1xi16> loc(#loc227)
    %48 = arith.muli %39, %47 : tensor<32x2x1xi16> loc(#loc227)
    %49 = "tt.reduce"(%48) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %50 = tt.expand_dims %49 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %51 = tt.broadcast %50 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %52 = tt.reshape %45 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %53 = tt.reshape %51 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %54 = tt.bitcast %15 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %55 = arith.cmpf olt, %37, %38 : tensor<1x64xf32> loc(#loc236)
    %56 = arith.extui %55 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %57 = arith.xori %56, %21 : tensor<1x64xi32> loc(#loc237)
    %58 = arith.cmpi ne, %57, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %59 = arith.xori %35, %36 : tensor<1x64xi32> loc(#loc239)
    %60 = arith.select %58, %59, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %61 = arith.xori %54, %60 : tensor<1x64xi32> loc(#loc241)
    %62 = arith.xori %52, %53 : tensor<1x64xi16> loc(#loc242)
    %63 = arith.select %58, %62, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %64 = arith.xori %16, %63 : tensor<1x64xi16> loc(#loc244)
    %65 = tt.bitcast %61 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %66 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<8x2x4xi32> loc(#loc149)
    %67 = tt.reshape %66 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc150)
    %68 = tt.reshape %65 : tensor<1x64xf32> -> tensor<16x2x2xf32> loc(#loc199)
    %69 = tt.bitcast %68 : tensor<16x2x2xf32> -> tensor<16x2x2xi32> loc(#loc200)
    %70 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<16x2x2xi32> loc(#loc202)
    %71 = arith.muli %69, %70 : tensor<16x2x2xi32> loc(#loc202)
    %72 = "tt.reduce"(%71) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc246)
    %73 = tt.expand_dims %72 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc206)
    %74 = tt.broadcast %73 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc207)
    %75 = arith.muli %69, %20 : tensor<16x2x2xi32> loc(#loc208)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc249)
    %77 = tt.expand_dims %76 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc212)
    %78 = tt.broadcast %77 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc213)
    %79 = tt.reshape %74 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc214)
    %80 = tt.reshape %78 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc215)
    %81 = tt.bitcast %79 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %82 = tt.bitcast %80 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %83 = tt.reshape %64 : tensor<1x64xi16> -> tensor<16x2x2xi16> loc(#loc218)
    %84 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<16x2x2xi16> loc(#loc220)
    %85 = arith.muli %83, %84 : tensor<16x2x2xi16> loc(#loc220)
    %86 = "tt.reduce"(%85) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc252)
    %87 = tt.expand_dims %86 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc224)
    %88 = tt.broadcast %87 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc225)
    %89 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<16x2x2xi16> loc(#loc227)
    %90 = arith.muli %83, %89 : tensor<16x2x2xi16> loc(#loc227)
    %91 = "tt.reduce"(%90) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc255)
    %92 = tt.expand_dims %91 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc231)
    %93 = tt.broadcast %92 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc232)
    %94 = tt.reshape %88 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc233)
    %95 = tt.reshape %93 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc234)
    %96 = tt.bitcast %65 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %97 = arith.cmpf olt, %81, %82 : tensor<1x64xf32> loc(#loc236)
    %98 = arith.extui %97 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %99 = arith.xori %98, %67 : tensor<1x64xi32> loc(#loc237)
    %100 = arith.cmpi ne, %99, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %101 = arith.xori %79, %80 : tensor<1x64xi32> loc(#loc239)
    %102 = arith.select %100, %101, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %103 = arith.xori %96, %102 : tensor<1x64xi32> loc(#loc241)
    %104 = arith.xori %94, %95 : tensor<1x64xi16> loc(#loc242)
    %105 = arith.select %100, %104, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %106 = arith.xori %64, %105 : tensor<1x64xi16> loc(#loc244)
    %107 = tt.bitcast %103 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %108 = tt.reshape %107 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %109 = tt.bitcast %108 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %110 = arith.muli %109, %25 : tensor<32x2x1xi32> loc(#loc202)
    %111 = "tt.reduce"(%110) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %112 = tt.expand_dims %111 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %113 = tt.broadcast %112 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %114 = arith.muli %109, %30 : tensor<32x2x1xi32> loc(#loc208)
    %115 = "tt.reduce"(%114) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %116 = tt.expand_dims %115 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %117 = tt.broadcast %116 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %118 = tt.reshape %113 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %119 = tt.reshape %117 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %120 = tt.bitcast %118 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %121 = tt.bitcast %119 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %122 = tt.reshape %106 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %123 = arith.muli %122, %41 : tensor<32x2x1xi16> loc(#loc220)
    %124 = "tt.reduce"(%123) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %125 = tt.expand_dims %124 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %126 = tt.broadcast %125 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %127 = arith.muli %122, %47 : tensor<32x2x1xi16> loc(#loc227)
    %128 = "tt.reduce"(%127) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %129 = tt.expand_dims %128 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %130 = tt.broadcast %129 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %131 = tt.reshape %126 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %132 = tt.reshape %130 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %133 = tt.bitcast %107 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %134 = arith.cmpf olt, %120, %121 : tensor<1x64xf32> loc(#loc236)
    %135 = arith.extui %134 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %136 = arith.xori %135, %67 : tensor<1x64xi32> loc(#loc237)
    %137 = arith.cmpi ne, %136, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %138 = arith.xori %118, %119 : tensor<1x64xi32> loc(#loc239)
    %139 = arith.select %137, %138, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %140 = arith.xori %133, %139 : tensor<1x64xi32> loc(#loc241)
    %141 = arith.xori %131, %132 : tensor<1x64xi16> loc(#loc242)
    %142 = arith.select %137, %141, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %143 = arith.xori %106, %142 : tensor<1x64xi16> loc(#loc244)
    %144 = tt.bitcast %140 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %145 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<4x2x8xi32> loc(#loc149)
    %146 = tt.reshape %145 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc150)
    %147 = tt.reshape %144 : tensor<1x64xf32> -> tensor<8x2x4xf32> loc(#loc199)
    %148 = tt.bitcast %147 : tensor<8x2x4xf32> -> tensor<8x2x4xi32> loc(#loc200)
    %149 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<8x2x4xi32> loc(#loc202)
    %150 = arith.muli %148, %149 : tensor<8x2x4xi32> loc(#loc202)
    %151 = "tt.reduce"(%150) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc246)
    %152 = tt.expand_dims %151 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc206)
    %153 = tt.broadcast %152 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc207)
    %154 = arith.muli %148, %66 : tensor<8x2x4xi32> loc(#loc208)
    %155 = "tt.reduce"(%154) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc249)
    %156 = tt.expand_dims %155 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc212)
    %157 = tt.broadcast %156 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc213)
    %158 = tt.reshape %153 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc214)
    %159 = tt.reshape %157 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc215)
    %160 = tt.bitcast %158 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %161 = tt.bitcast %159 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %162 = tt.reshape %143 : tensor<1x64xi16> -> tensor<8x2x4xi16> loc(#loc218)
    %163 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<8x2x4xi16> loc(#loc220)
    %164 = arith.muli %162, %163 : tensor<8x2x4xi16> loc(#loc220)
    %165 = "tt.reduce"(%164) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc252)
    %166 = tt.expand_dims %165 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc224)
    %167 = tt.broadcast %166 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc225)
    %168 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<8x2x4xi16> loc(#loc227)
    %169 = arith.muli %162, %168 : tensor<8x2x4xi16> loc(#loc227)
    %170 = "tt.reduce"(%169) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc255)
    %171 = tt.expand_dims %170 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc231)
    %172 = tt.broadcast %171 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc232)
    %173 = tt.reshape %167 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc233)
    %174 = tt.reshape %172 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc234)
    %175 = tt.bitcast %144 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %176 = arith.cmpf olt, %160, %161 : tensor<1x64xf32> loc(#loc236)
    %177 = arith.extui %176 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %178 = arith.xori %177, %146 : tensor<1x64xi32> loc(#loc237)
    %179 = arith.cmpi ne, %178, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %180 = arith.xori %158, %159 : tensor<1x64xi32> loc(#loc239)
    %181 = arith.select %179, %180, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %182 = arith.xori %175, %181 : tensor<1x64xi32> loc(#loc241)
    %183 = arith.xori %173, %174 : tensor<1x64xi16> loc(#loc242)
    %184 = arith.select %179, %183, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %185 = arith.xori %143, %184 : tensor<1x64xi16> loc(#loc244)
    %186 = tt.bitcast %182 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %187 = tt.reshape %186 : tensor<1x64xf32> -> tensor<16x2x2xf32> loc(#loc199)
    %188 = tt.bitcast %187 : tensor<16x2x2xf32> -> tensor<16x2x2xi32> loc(#loc200)
    %189 = arith.muli %188, %70 : tensor<16x2x2xi32> loc(#loc202)
    %190 = "tt.reduce"(%189) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc246)
    %191 = tt.expand_dims %190 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc206)
    %192 = tt.broadcast %191 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc207)
    %193 = arith.muli %188, %20 : tensor<16x2x2xi32> loc(#loc208)
    %194 = "tt.reduce"(%193) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc249)
    %195 = tt.expand_dims %194 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc212)
    %196 = tt.broadcast %195 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc213)
    %197 = tt.reshape %192 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc214)
    %198 = tt.reshape %196 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc215)
    %199 = tt.bitcast %197 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %200 = tt.bitcast %198 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %201 = tt.reshape %185 : tensor<1x64xi16> -> tensor<16x2x2xi16> loc(#loc218)
    %202 = arith.muli %201, %84 : tensor<16x2x2xi16> loc(#loc220)
    %203 = "tt.reduce"(%202) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc252)
    %204 = tt.expand_dims %203 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc224)
    %205 = tt.broadcast %204 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc225)
    %206 = arith.muli %201, %89 : tensor<16x2x2xi16> loc(#loc227)
    %207 = "tt.reduce"(%206) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc255)
    %208 = tt.expand_dims %207 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc231)
    %209 = tt.broadcast %208 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc232)
    %210 = tt.reshape %205 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc233)
    %211 = tt.reshape %209 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc234)
    %212 = tt.bitcast %186 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %213 = arith.cmpf olt, %199, %200 : tensor<1x64xf32> loc(#loc236)
    %214 = arith.extui %213 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %215 = arith.xori %214, %146 : tensor<1x64xi32> loc(#loc237)
    %216 = arith.cmpi ne, %215, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %217 = arith.xori %197, %198 : tensor<1x64xi32> loc(#loc239)
    %218 = arith.select %216, %217, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %219 = arith.xori %212, %218 : tensor<1x64xi32> loc(#loc241)
    %220 = arith.xori %210, %211 : tensor<1x64xi16> loc(#loc242)
    %221 = arith.select %216, %220, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %222 = arith.xori %185, %221 : tensor<1x64xi16> loc(#loc244)
    %223 = tt.bitcast %219 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %224 = tt.reshape %223 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %225 = tt.bitcast %224 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %226 = arith.muli %225, %25 : tensor<32x2x1xi32> loc(#loc202)
    %227 = "tt.reduce"(%226) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %228 = tt.expand_dims %227 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %229 = tt.broadcast %228 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %230 = arith.muli %225, %30 : tensor<32x2x1xi32> loc(#loc208)
    %231 = "tt.reduce"(%230) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %232 = tt.expand_dims %231 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %233 = tt.broadcast %232 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %234 = tt.reshape %229 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %235 = tt.reshape %233 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %236 = tt.bitcast %234 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %237 = tt.bitcast %235 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %238 = tt.reshape %222 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %239 = arith.muli %238, %41 : tensor<32x2x1xi16> loc(#loc220)
    %240 = "tt.reduce"(%239) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %241 = tt.expand_dims %240 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %242 = tt.broadcast %241 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %243 = arith.muli %238, %47 : tensor<32x2x1xi16> loc(#loc227)
    %244 = "tt.reduce"(%243) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %245 = tt.expand_dims %244 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %246 = tt.broadcast %245 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %247 = tt.reshape %242 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %248 = tt.reshape %246 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %249 = tt.bitcast %223 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %250 = arith.cmpf olt, %236, %237 : tensor<1x64xf32> loc(#loc236)
    %251 = arith.extui %250 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %252 = arith.xori %251, %146 : tensor<1x64xi32> loc(#loc237)
    %253 = arith.cmpi ne, %252, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %254 = arith.xori %234, %235 : tensor<1x64xi32> loc(#loc239)
    %255 = arith.select %253, %254, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %256 = arith.xori %249, %255 : tensor<1x64xi32> loc(#loc241)
    %257 = arith.xori %247, %248 : tensor<1x64xi16> loc(#loc242)
    %258 = arith.select %253, %257, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %259 = arith.xori %222, %258 : tensor<1x64xi16> loc(#loc244)
    %260 = tt.bitcast %256 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %261 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<2x2x16xi32> loc(#loc149)
    %262 = tt.reshape %261 : tensor<2x2x16xi32> -> tensor<1x64xi32> loc(#loc150)
    %263 = tt.reshape %260 : tensor<1x64xf32> -> tensor<4x2x8xf32> loc(#loc199)
    %264 = tt.bitcast %263 : tensor<4x2x8xf32> -> tensor<4x2x8xi32> loc(#loc200)
    %265 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<4x2x8xi32> loc(#loc202)
    %266 = arith.muli %264, %265 : tensor<4x2x8xi32> loc(#loc202)
    %267 = "tt.reduce"(%266) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc246)
    %268 = tt.expand_dims %267 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc206)
    %269 = tt.broadcast %268 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc207)
    %270 = arith.muli %264, %145 : tensor<4x2x8xi32> loc(#loc208)
    %271 = "tt.reduce"(%270) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc249)
    %272 = tt.expand_dims %271 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc212)
    %273 = tt.broadcast %272 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc213)
    %274 = tt.reshape %269 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc214)
    %275 = tt.reshape %273 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc215)
    %276 = tt.bitcast %274 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %277 = tt.bitcast %275 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %278 = tt.reshape %259 : tensor<1x64xi16> -> tensor<4x2x8xi16> loc(#loc218)
    %279 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<4x2x8xi16> loc(#loc220)
    %280 = arith.muli %278, %279 : tensor<4x2x8xi16> loc(#loc220)
    %281 = "tt.reduce"(%280) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc252)
    %282 = tt.expand_dims %281 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc224)
    %283 = tt.broadcast %282 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc225)
    %284 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<4x2x8xi16> loc(#loc227)
    %285 = arith.muli %278, %284 : tensor<4x2x8xi16> loc(#loc227)
    %286 = "tt.reduce"(%285) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc255)
    %287 = tt.expand_dims %286 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc231)
    %288 = tt.broadcast %287 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc232)
    %289 = tt.reshape %283 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc233)
    %290 = tt.reshape %288 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc234)
    %291 = tt.bitcast %260 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %292 = arith.cmpf olt, %276, %277 : tensor<1x64xf32> loc(#loc236)
    %293 = arith.extui %292 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %294 = arith.xori %293, %262 : tensor<1x64xi32> loc(#loc237)
    %295 = arith.cmpi ne, %294, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %296 = arith.xori %274, %275 : tensor<1x64xi32> loc(#loc239)
    %297 = arith.select %295, %296, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %298 = arith.xori %291, %297 : tensor<1x64xi32> loc(#loc241)
    %299 = arith.xori %289, %290 : tensor<1x64xi16> loc(#loc242)
    %300 = arith.select %295, %299, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %301 = arith.xori %259, %300 : tensor<1x64xi16> loc(#loc244)
    %302 = tt.bitcast %298 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %303 = tt.reshape %302 : tensor<1x64xf32> -> tensor<8x2x4xf32> loc(#loc199)
    %304 = tt.bitcast %303 : tensor<8x2x4xf32> -> tensor<8x2x4xi32> loc(#loc200)
    %305 = arith.muli %304, %149 : tensor<8x2x4xi32> loc(#loc202)
    %306 = "tt.reduce"(%305) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc246)
    %307 = tt.expand_dims %306 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc206)
    %308 = tt.broadcast %307 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc207)
    %309 = arith.muli %304, %66 : tensor<8x2x4xi32> loc(#loc208)
    %310 = "tt.reduce"(%309) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc249)
    %311 = tt.expand_dims %310 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc212)
    %312 = tt.broadcast %311 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc213)
    %313 = tt.reshape %308 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc214)
    %314 = tt.reshape %312 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc215)
    %315 = tt.bitcast %313 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %316 = tt.bitcast %314 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %317 = tt.reshape %301 : tensor<1x64xi16> -> tensor<8x2x4xi16> loc(#loc218)
    %318 = arith.muli %317, %163 : tensor<8x2x4xi16> loc(#loc220)
    %319 = "tt.reduce"(%318) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc252)
    %320 = tt.expand_dims %319 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc224)
    %321 = tt.broadcast %320 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc225)
    %322 = arith.muli %317, %168 : tensor<8x2x4xi16> loc(#loc227)
    %323 = "tt.reduce"(%322) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc255)
    %324 = tt.expand_dims %323 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc231)
    %325 = tt.broadcast %324 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc232)
    %326 = tt.reshape %321 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc233)
    %327 = tt.reshape %325 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc234)
    %328 = tt.bitcast %302 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %329 = arith.cmpf olt, %315, %316 : tensor<1x64xf32> loc(#loc236)
    %330 = arith.extui %329 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %331 = arith.xori %330, %262 : tensor<1x64xi32> loc(#loc237)
    %332 = arith.cmpi ne, %331, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %333 = arith.xori %313, %314 : tensor<1x64xi32> loc(#loc239)
    %334 = arith.select %332, %333, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %335 = arith.xori %328, %334 : tensor<1x64xi32> loc(#loc241)
    %336 = arith.xori %326, %327 : tensor<1x64xi16> loc(#loc242)
    %337 = arith.select %332, %336, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %338 = arith.xori %301, %337 : tensor<1x64xi16> loc(#loc244)
    %339 = tt.bitcast %335 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %340 = tt.reshape %339 : tensor<1x64xf32> -> tensor<16x2x2xf32> loc(#loc199)
    %341 = tt.bitcast %340 : tensor<16x2x2xf32> -> tensor<16x2x2xi32> loc(#loc200)
    %342 = arith.muli %341, %70 : tensor<16x2x2xi32> loc(#loc202)
    %343 = "tt.reduce"(%342) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc246)
    %344 = tt.expand_dims %343 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc206)
    %345 = tt.broadcast %344 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc207)
    %346 = arith.muli %341, %20 : tensor<16x2x2xi32> loc(#loc208)
    %347 = "tt.reduce"(%346) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc249)
    %348 = tt.expand_dims %347 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc212)
    %349 = tt.broadcast %348 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc213)
    %350 = tt.reshape %345 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc214)
    %351 = tt.reshape %349 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc215)
    %352 = tt.bitcast %350 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %353 = tt.bitcast %351 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %354 = tt.reshape %338 : tensor<1x64xi16> -> tensor<16x2x2xi16> loc(#loc218)
    %355 = arith.muli %354, %84 : tensor<16x2x2xi16> loc(#loc220)
    %356 = "tt.reduce"(%355) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc252)
    %357 = tt.expand_dims %356 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc224)
    %358 = tt.broadcast %357 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc225)
    %359 = arith.muli %354, %89 : tensor<16x2x2xi16> loc(#loc227)
    %360 = "tt.reduce"(%359) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc255)
    %361 = tt.expand_dims %360 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc231)
    %362 = tt.broadcast %361 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc232)
    %363 = tt.reshape %358 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc233)
    %364 = tt.reshape %362 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc234)
    %365 = tt.bitcast %339 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %366 = arith.cmpf olt, %352, %353 : tensor<1x64xf32> loc(#loc236)
    %367 = arith.extui %366 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %368 = arith.xori %367, %262 : tensor<1x64xi32> loc(#loc237)
    %369 = arith.cmpi ne, %368, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %370 = arith.xori %350, %351 : tensor<1x64xi32> loc(#loc239)
    %371 = arith.select %369, %370, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %372 = arith.xori %365, %371 : tensor<1x64xi32> loc(#loc241)
    %373 = arith.xori %363, %364 : tensor<1x64xi16> loc(#loc242)
    %374 = arith.select %369, %373, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %375 = arith.xori %338, %374 : tensor<1x64xi16> loc(#loc244)
    %376 = tt.bitcast %372 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %377 = tt.reshape %376 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %378 = tt.bitcast %377 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %379 = arith.muli %378, %25 : tensor<32x2x1xi32> loc(#loc202)
    %380 = "tt.reduce"(%379) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %381 = tt.expand_dims %380 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %382 = tt.broadcast %381 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %383 = arith.muli %378, %30 : tensor<32x2x1xi32> loc(#loc208)
    %384 = "tt.reduce"(%383) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %385 = tt.expand_dims %384 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %386 = tt.broadcast %385 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %387 = tt.reshape %382 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %388 = tt.reshape %386 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %389 = tt.bitcast %387 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %390 = tt.bitcast %388 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %391 = tt.reshape %375 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %392 = arith.muli %391, %41 : tensor<32x2x1xi16> loc(#loc220)
    %393 = "tt.reduce"(%392) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %394 = tt.expand_dims %393 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %395 = tt.broadcast %394 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %396 = arith.muli %391, %47 : tensor<32x2x1xi16> loc(#loc227)
    %397 = "tt.reduce"(%396) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %398 = tt.expand_dims %397 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %399 = tt.broadcast %398 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %400 = tt.reshape %395 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %401 = tt.reshape %399 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %402 = tt.bitcast %376 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %403 = arith.cmpf olt, %389, %390 : tensor<1x64xf32> loc(#loc236)
    %404 = arith.extui %403 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %405 = arith.xori %404, %262 : tensor<1x64xi32> loc(#loc237)
    %406 = arith.cmpi ne, %405, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %407 = arith.xori %387, %388 : tensor<1x64xi32> loc(#loc239)
    %408 = arith.select %406, %407, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %409 = arith.xori %402, %408 : tensor<1x64xi32> loc(#loc241)
    %410 = arith.xori %400, %401 : tensor<1x64xi16> loc(#loc242)
    %411 = arith.select %406, %410, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %412 = arith.xori %375, %411 : tensor<1x64xi16> loc(#loc244)
    %413 = tt.bitcast %409 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %414 = tt.broadcast %19 : tensor<1x2x1xi32> -> tensor<1x2x32xi32> loc(#loc149)
    %415 = tt.reshape %414 : tensor<1x2x32xi32> -> tensor<1x64xi32> loc(#loc150)
    %416 = tt.reshape %413 : tensor<1x64xf32> -> tensor<2x2x16xf32> loc(#loc199)
    %417 = tt.bitcast %416 : tensor<2x2x16xf32> -> tensor<2x2x16xi32> loc(#loc200)
    %418 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<2x2x16xi32> loc(#loc202)
    %419 = arith.muli %417, %418 : tensor<2x2x16xi32> loc(#loc202)
    %420 = "tt.reduce"(%419) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<2x2x16xi32>) -> tensor<2x16xi32> loc(#loc246)
    %421 = tt.expand_dims %420 {axis = 1 : i32} : tensor<2x16xi32> -> tensor<2x1x16xi32> loc(#loc206)
    %422 = tt.broadcast %421 : tensor<2x1x16xi32> -> tensor<2x2x16xi32> loc(#loc207)
    %423 = arith.muli %417, %261 : tensor<2x2x16xi32> loc(#loc208)
    %424 = "tt.reduce"(%423) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<2x2x16xi32>) -> tensor<2x16xi32> loc(#loc249)
    %425 = tt.expand_dims %424 {axis = 1 : i32} : tensor<2x16xi32> -> tensor<2x1x16xi32> loc(#loc212)
    %426 = tt.broadcast %425 : tensor<2x1x16xi32> -> tensor<2x2x16xi32> loc(#loc213)
    %427 = tt.reshape %422 : tensor<2x2x16xi32> -> tensor<1x64xi32> loc(#loc214)
    %428 = tt.reshape %426 : tensor<2x2x16xi32> -> tensor<1x64xi32> loc(#loc215)
    %429 = tt.bitcast %427 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %430 = tt.bitcast %428 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %431 = tt.reshape %412 : tensor<1x64xi16> -> tensor<2x2x16xi16> loc(#loc218)
    %432 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<2x2x16xi16> loc(#loc220)
    %433 = arith.muli %431, %432 : tensor<2x2x16xi16> loc(#loc220)
    %434 = "tt.reduce"(%433) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<2x2x16xi16>) -> tensor<2x16xi16> loc(#loc252)
    %435 = tt.expand_dims %434 {axis = 1 : i32} : tensor<2x16xi16> -> tensor<2x1x16xi16> loc(#loc224)
    %436 = tt.broadcast %435 : tensor<2x1x16xi16> -> tensor<2x2x16xi16> loc(#loc225)
    %437 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<2x2x16xi16> loc(#loc227)
    %438 = arith.muli %431, %437 : tensor<2x2x16xi16> loc(#loc227)
    %439 = "tt.reduce"(%438) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<2x2x16xi16>) -> tensor<2x16xi16> loc(#loc255)
    %440 = tt.expand_dims %439 {axis = 1 : i32} : tensor<2x16xi16> -> tensor<2x1x16xi16> loc(#loc231)
    %441 = tt.broadcast %440 : tensor<2x1x16xi16> -> tensor<2x2x16xi16> loc(#loc232)
    %442 = tt.reshape %436 : tensor<2x2x16xi16> -> tensor<1x64xi16> loc(#loc233)
    %443 = tt.reshape %441 : tensor<2x2x16xi16> -> tensor<1x64xi16> loc(#loc234)
    %444 = tt.bitcast %413 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %445 = arith.cmpf olt, %429, %430 : tensor<1x64xf32> loc(#loc236)
    %446 = arith.extui %445 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %447 = arith.xori %446, %415 : tensor<1x64xi32> loc(#loc237)
    %448 = arith.cmpi ne, %447, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %449 = arith.xori %427, %428 : tensor<1x64xi32> loc(#loc239)
    %450 = arith.select %448, %449, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %451 = arith.xori %444, %450 : tensor<1x64xi32> loc(#loc241)
    %452 = arith.xori %442, %443 : tensor<1x64xi16> loc(#loc242)
    %453 = arith.select %448, %452, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %454 = arith.xori %412, %453 : tensor<1x64xi16> loc(#loc244)
    %455 = tt.bitcast %451 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %456 = tt.reshape %455 : tensor<1x64xf32> -> tensor<4x2x8xf32> loc(#loc199)
    %457 = tt.bitcast %456 : tensor<4x2x8xf32> -> tensor<4x2x8xi32> loc(#loc200)
    %458 = arith.muli %457, %265 : tensor<4x2x8xi32> loc(#loc202)
    %459 = "tt.reduce"(%458) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc246)
    %460 = tt.expand_dims %459 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc206)
    %461 = tt.broadcast %460 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc207)
    %462 = arith.muli %457, %145 : tensor<4x2x8xi32> loc(#loc208)
    %463 = "tt.reduce"(%462) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc249)
    %464 = tt.expand_dims %463 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc212)
    %465 = tt.broadcast %464 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc213)
    %466 = tt.reshape %461 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc214)
    %467 = tt.reshape %465 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc215)
    %468 = tt.bitcast %466 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %469 = tt.bitcast %467 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %470 = tt.reshape %454 : tensor<1x64xi16> -> tensor<4x2x8xi16> loc(#loc218)
    %471 = arith.muli %470, %279 : tensor<4x2x8xi16> loc(#loc220)
    %472 = "tt.reduce"(%471) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc252)
    %473 = tt.expand_dims %472 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc224)
    %474 = tt.broadcast %473 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc225)
    %475 = arith.muli %470, %284 : tensor<4x2x8xi16> loc(#loc227)
    %476 = "tt.reduce"(%475) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc255)
    %477 = tt.expand_dims %476 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc231)
    %478 = tt.broadcast %477 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc232)
    %479 = tt.reshape %474 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc233)
    %480 = tt.reshape %478 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc234)
    %481 = tt.bitcast %455 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %482 = arith.cmpf olt, %468, %469 : tensor<1x64xf32> loc(#loc236)
    %483 = arith.extui %482 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %484 = arith.xori %483, %415 : tensor<1x64xi32> loc(#loc237)
    %485 = arith.cmpi ne, %484, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %486 = arith.xori %466, %467 : tensor<1x64xi32> loc(#loc239)
    %487 = arith.select %485, %486, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %488 = arith.xori %481, %487 : tensor<1x64xi32> loc(#loc241)
    %489 = arith.xori %479, %480 : tensor<1x64xi16> loc(#loc242)
    %490 = arith.select %485, %489, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %491 = arith.xori %454, %490 : tensor<1x64xi16> loc(#loc244)
    %492 = tt.bitcast %488 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %493 = tt.reshape %492 : tensor<1x64xf32> -> tensor<8x2x4xf32> loc(#loc199)
    %494 = tt.bitcast %493 : tensor<8x2x4xf32> -> tensor<8x2x4xi32> loc(#loc200)
    %495 = arith.muli %494, %149 : tensor<8x2x4xi32> loc(#loc202)
    %496 = "tt.reduce"(%495) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc246)
    %497 = tt.expand_dims %496 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc206)
    %498 = tt.broadcast %497 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc207)
    %499 = arith.muli %494, %66 : tensor<8x2x4xi32> loc(#loc208)
    %500 = "tt.reduce"(%499) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc249)
    %501 = tt.expand_dims %500 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc212)
    %502 = tt.broadcast %501 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc213)
    %503 = tt.reshape %498 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc214)
    %504 = tt.reshape %502 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc215)
    %505 = tt.bitcast %503 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %506 = tt.bitcast %504 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %507 = tt.reshape %491 : tensor<1x64xi16> -> tensor<8x2x4xi16> loc(#loc218)
    %508 = arith.muli %507, %163 : tensor<8x2x4xi16> loc(#loc220)
    %509 = "tt.reduce"(%508) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc252)
    %510 = tt.expand_dims %509 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc224)
    %511 = tt.broadcast %510 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc225)
    %512 = arith.muli %507, %168 : tensor<8x2x4xi16> loc(#loc227)
    %513 = "tt.reduce"(%512) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc255)
    %514 = tt.expand_dims %513 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc231)
    %515 = tt.broadcast %514 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc232)
    %516 = tt.reshape %511 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc233)
    %517 = tt.reshape %515 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc234)
    %518 = tt.bitcast %492 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %519 = arith.cmpf olt, %505, %506 : tensor<1x64xf32> loc(#loc236)
    %520 = arith.extui %519 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %521 = arith.xori %520, %415 : tensor<1x64xi32> loc(#loc237)
    %522 = arith.cmpi ne, %521, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %523 = arith.xori %503, %504 : tensor<1x64xi32> loc(#loc239)
    %524 = arith.select %522, %523, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %525 = arith.xori %518, %524 : tensor<1x64xi32> loc(#loc241)
    %526 = arith.xori %516, %517 : tensor<1x64xi16> loc(#loc242)
    %527 = arith.select %522, %526, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %528 = arith.xori %491, %527 : tensor<1x64xi16> loc(#loc244)
    %529 = tt.bitcast %525 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %530 = tt.reshape %529 : tensor<1x64xf32> -> tensor<16x2x2xf32> loc(#loc199)
    %531 = tt.bitcast %530 : tensor<16x2x2xf32> -> tensor<16x2x2xi32> loc(#loc200)
    %532 = arith.muli %531, %70 : tensor<16x2x2xi32> loc(#loc202)
    %533 = "tt.reduce"(%532) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc246)
    %534 = tt.expand_dims %533 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc206)
    %535 = tt.broadcast %534 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc207)
    %536 = arith.muli %531, %20 : tensor<16x2x2xi32> loc(#loc208)
    %537 = "tt.reduce"(%536) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc249)
    %538 = tt.expand_dims %537 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc212)
    %539 = tt.broadcast %538 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc213)
    %540 = tt.reshape %535 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc214)
    %541 = tt.reshape %539 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc215)
    %542 = tt.bitcast %540 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %543 = tt.bitcast %541 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %544 = tt.reshape %528 : tensor<1x64xi16> -> tensor<16x2x2xi16> loc(#loc218)
    %545 = arith.muli %544, %84 : tensor<16x2x2xi16> loc(#loc220)
    %546 = "tt.reduce"(%545) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc252)
    %547 = tt.expand_dims %546 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc224)
    %548 = tt.broadcast %547 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc225)
    %549 = arith.muli %544, %89 : tensor<16x2x2xi16> loc(#loc227)
    %550 = "tt.reduce"(%549) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc255)
    %551 = tt.expand_dims %550 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc231)
    %552 = tt.broadcast %551 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc232)
    %553 = tt.reshape %548 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc233)
    %554 = tt.reshape %552 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc234)
    %555 = tt.bitcast %529 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %556 = arith.cmpf olt, %542, %543 : tensor<1x64xf32> loc(#loc236)
    %557 = arith.extui %556 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %558 = arith.xori %557, %415 : tensor<1x64xi32> loc(#loc237)
    %559 = arith.cmpi ne, %558, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %560 = arith.xori %540, %541 : tensor<1x64xi32> loc(#loc239)
    %561 = arith.select %559, %560, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %562 = arith.xori %555, %561 : tensor<1x64xi32> loc(#loc241)
    %563 = arith.xori %553, %554 : tensor<1x64xi16> loc(#loc242)
    %564 = arith.select %559, %563, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %565 = arith.xori %528, %564 : tensor<1x64xi16> loc(#loc244)
    %566 = tt.bitcast %562 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %567 = tt.reshape %566 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %568 = tt.bitcast %567 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %569 = arith.muli %568, %25 : tensor<32x2x1xi32> loc(#loc202)
    %570 = "tt.reduce"(%569) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %571 = tt.expand_dims %570 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %572 = tt.broadcast %571 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %573 = arith.muli %568, %30 : tensor<32x2x1xi32> loc(#loc208)
    %574 = "tt.reduce"(%573) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %575 = tt.expand_dims %574 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %576 = tt.broadcast %575 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %577 = tt.reshape %572 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %578 = tt.reshape %576 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %579 = tt.bitcast %577 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %580 = tt.bitcast %578 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %581 = tt.reshape %565 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %582 = arith.muli %581, %41 : tensor<32x2x1xi16> loc(#loc220)
    %583 = "tt.reduce"(%582) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %584 = tt.expand_dims %583 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %585 = tt.broadcast %584 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %586 = arith.muli %581, %47 : tensor<32x2x1xi16> loc(#loc227)
    %587 = "tt.reduce"(%586) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %588 = tt.expand_dims %587 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %589 = tt.broadcast %588 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %590 = tt.reshape %585 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %591 = tt.reshape %589 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %592 = tt.bitcast %566 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %593 = arith.cmpf olt, %579, %580 : tensor<1x64xf32> loc(#loc236)
    %594 = arith.extui %593 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc237)
    %595 = arith.xori %594, %415 : tensor<1x64xi32> loc(#loc237)
    %596 = arith.cmpi ne, %595, %cst_0 : tensor<1x64xi32> loc(#loc238)
    %597 = arith.xori %577, %578 : tensor<1x64xi32> loc(#loc239)
    %598 = arith.select %596, %597, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %599 = arith.xori %592, %598 : tensor<1x64xi32> loc(#loc241)
    %600 = arith.xori %590, %591 : tensor<1x64xi16> loc(#loc242)
    %601 = arith.select %596, %600, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %602 = arith.xori %565, %601 : tensor<1x64xi16> loc(#loc244)
    %603 = tt.bitcast %599 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %604 = tt.reshape %603 : tensor<1x64xf32> -> tensor<1x2x32xf32> loc(#loc199)
    %605 = tt.bitcast %604 : tensor<1x2x32xf32> -> tensor<1x2x32xi32> loc(#loc200)
    %606 = tt.broadcast %24 : tensor<1x2x1xi32> -> tensor<1x2x32xi32> loc(#loc202)
    %607 = arith.muli %605, %606 : tensor<1x2x32xi32> loc(#loc202)
    %608 = "tt.reduce"(%607) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<1x2x32xi32>) -> tensor<1x32xi32> loc(#loc246)
    %609 = tt.expand_dims %608 {axis = 1 : i32} : tensor<1x32xi32> -> tensor<1x1x32xi32> loc(#loc206)
    %610 = tt.broadcast %609 : tensor<1x1x32xi32> -> tensor<1x2x32xi32> loc(#loc207)
    %611 = arith.muli %605, %414 : tensor<1x2x32xi32> loc(#loc208)
    %612 = "tt.reduce"(%611) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<1x2x32xi32>) -> tensor<1x32xi32> loc(#loc249)
    %613 = tt.expand_dims %612 {axis = 1 : i32} : tensor<1x32xi32> -> tensor<1x1x32xi32> loc(#loc212)
    %614 = tt.broadcast %613 : tensor<1x1x32xi32> -> tensor<1x2x32xi32> loc(#loc213)
    %615 = tt.reshape %610 : tensor<1x2x32xi32> -> tensor<1x64xi32> loc(#loc214)
    %616 = tt.reshape %614 : tensor<1x2x32xi32> -> tensor<1x64xi32> loc(#loc215)
    %617 = tt.bitcast %615 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %618 = tt.bitcast %616 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %619 = tt.reshape %602 : tensor<1x64xi16> -> tensor<1x2x32xi16> loc(#loc218)
    %620 = tt.broadcast %40 : tensor<1x2x1xi16> -> tensor<1x2x32xi16> loc(#loc220)
    %621 = arith.muli %619, %620 : tensor<1x2x32xi16> loc(#loc220)
    %622 = "tt.reduce"(%621) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<1x2x32xi16>) -> tensor<1x32xi16> loc(#loc252)
    %623 = tt.expand_dims %622 {axis = 1 : i32} : tensor<1x32xi16> -> tensor<1x1x32xi16> loc(#loc224)
    %624 = tt.broadcast %623 : tensor<1x1x32xi16> -> tensor<1x2x32xi16> loc(#loc225)
    %625 = tt.broadcast %46 : tensor<1x2x1xi16> -> tensor<1x2x32xi16> loc(#loc227)
    %626 = arith.muli %619, %625 : tensor<1x2x32xi16> loc(#loc227)
    %627 = "tt.reduce"(%626) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<1x2x32xi16>) -> tensor<1x32xi16> loc(#loc255)
    %628 = tt.expand_dims %627 {axis = 1 : i32} : tensor<1x32xi16> -> tensor<1x1x32xi16> loc(#loc231)
    %629 = tt.broadcast %628 : tensor<1x1x32xi16> -> tensor<1x2x32xi16> loc(#loc232)
    %630 = tt.reshape %624 : tensor<1x2x32xi16> -> tensor<1x64xi16> loc(#loc233)
    %631 = tt.reshape %629 : tensor<1x2x32xi16> -> tensor<1x64xi16> loc(#loc234)
    %632 = tt.bitcast %603 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %633 = arith.cmpf olt, %617, %618 : tensor<1x64xf32> loc(#loc236)
    %634 = arith.xori %615, %616 : tensor<1x64xi32> loc(#loc239)
    %635 = arith.select %633, %634, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %636 = arith.xori %632, %635 : tensor<1x64xi32> loc(#loc241)
    %637 = arith.xori %630, %631 : tensor<1x64xi16> loc(#loc242)
    %638 = arith.select %633, %637, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %639 = arith.xori %602, %638 : tensor<1x64xi16> loc(#loc244)
    %640 = tt.bitcast %636 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %641 = tt.reshape %640 : tensor<1x64xf32> -> tensor<2x2x16xf32> loc(#loc199)
    %642 = tt.bitcast %641 : tensor<2x2x16xf32> -> tensor<2x2x16xi32> loc(#loc200)
    %643 = arith.muli %642, %418 : tensor<2x2x16xi32> loc(#loc202)
    %644 = "tt.reduce"(%643) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<2x2x16xi32>) -> tensor<2x16xi32> loc(#loc246)
    %645 = tt.expand_dims %644 {axis = 1 : i32} : tensor<2x16xi32> -> tensor<2x1x16xi32> loc(#loc206)
    %646 = tt.broadcast %645 : tensor<2x1x16xi32> -> tensor<2x2x16xi32> loc(#loc207)
    %647 = arith.muli %642, %261 : tensor<2x2x16xi32> loc(#loc208)
    %648 = "tt.reduce"(%647) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<2x2x16xi32>) -> tensor<2x16xi32> loc(#loc249)
    %649 = tt.expand_dims %648 {axis = 1 : i32} : tensor<2x16xi32> -> tensor<2x1x16xi32> loc(#loc212)
    %650 = tt.broadcast %649 : tensor<2x1x16xi32> -> tensor<2x2x16xi32> loc(#loc213)
    %651 = tt.reshape %646 : tensor<2x2x16xi32> -> tensor<1x64xi32> loc(#loc214)
    %652 = tt.reshape %650 : tensor<2x2x16xi32> -> tensor<1x64xi32> loc(#loc215)
    %653 = tt.bitcast %651 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %654 = tt.bitcast %652 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %655 = tt.reshape %639 : tensor<1x64xi16> -> tensor<2x2x16xi16> loc(#loc218)
    %656 = arith.muli %655, %432 : tensor<2x2x16xi16> loc(#loc220)
    %657 = "tt.reduce"(%656) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<2x2x16xi16>) -> tensor<2x16xi16> loc(#loc252)
    %658 = tt.expand_dims %657 {axis = 1 : i32} : tensor<2x16xi16> -> tensor<2x1x16xi16> loc(#loc224)
    %659 = tt.broadcast %658 : tensor<2x1x16xi16> -> tensor<2x2x16xi16> loc(#loc225)
    %660 = arith.muli %655, %437 : tensor<2x2x16xi16> loc(#loc227)
    %661 = "tt.reduce"(%660) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<2x2x16xi16>) -> tensor<2x16xi16> loc(#loc255)
    %662 = tt.expand_dims %661 {axis = 1 : i32} : tensor<2x16xi16> -> tensor<2x1x16xi16> loc(#loc231)
    %663 = tt.broadcast %662 : tensor<2x1x16xi16> -> tensor<2x2x16xi16> loc(#loc232)
    %664 = tt.reshape %659 : tensor<2x2x16xi16> -> tensor<1x64xi16> loc(#loc233)
    %665 = tt.reshape %663 : tensor<2x2x16xi16> -> tensor<1x64xi16> loc(#loc234)
    %666 = tt.bitcast %640 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %667 = arith.cmpf olt, %653, %654 : tensor<1x64xf32> loc(#loc236)
    %668 = arith.xori %651, %652 : tensor<1x64xi32> loc(#loc239)
    %669 = arith.select %667, %668, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %670 = arith.xori %666, %669 : tensor<1x64xi32> loc(#loc241)
    %671 = arith.xori %664, %665 : tensor<1x64xi16> loc(#loc242)
    %672 = arith.select %667, %671, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %673 = arith.xori %639, %672 : tensor<1x64xi16> loc(#loc244)
    %674 = tt.bitcast %670 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %675 = tt.reshape %674 : tensor<1x64xf32> -> tensor<4x2x8xf32> loc(#loc199)
    %676 = tt.bitcast %675 : tensor<4x2x8xf32> -> tensor<4x2x8xi32> loc(#loc200)
    %677 = arith.muli %676, %265 : tensor<4x2x8xi32> loc(#loc202)
    %678 = "tt.reduce"(%677) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc246)
    %679 = tt.expand_dims %678 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc206)
    %680 = tt.broadcast %679 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc207)
    %681 = arith.muli %676, %145 : tensor<4x2x8xi32> loc(#loc208)
    %682 = "tt.reduce"(%681) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<4x2x8xi32>) -> tensor<4x8xi32> loc(#loc249)
    %683 = tt.expand_dims %682 {axis = 1 : i32} : tensor<4x8xi32> -> tensor<4x1x8xi32> loc(#loc212)
    %684 = tt.broadcast %683 : tensor<4x1x8xi32> -> tensor<4x2x8xi32> loc(#loc213)
    %685 = tt.reshape %680 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc214)
    %686 = tt.reshape %684 : tensor<4x2x8xi32> -> tensor<1x64xi32> loc(#loc215)
    %687 = tt.bitcast %685 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %688 = tt.bitcast %686 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %689 = tt.reshape %673 : tensor<1x64xi16> -> tensor<4x2x8xi16> loc(#loc218)
    %690 = arith.muli %689, %279 : tensor<4x2x8xi16> loc(#loc220)
    %691 = "tt.reduce"(%690) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc252)
    %692 = tt.expand_dims %691 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc224)
    %693 = tt.broadcast %692 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc225)
    %694 = arith.muli %689, %284 : tensor<4x2x8xi16> loc(#loc227)
    %695 = "tt.reduce"(%694) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<4x2x8xi16>) -> tensor<4x8xi16> loc(#loc255)
    %696 = tt.expand_dims %695 {axis = 1 : i32} : tensor<4x8xi16> -> tensor<4x1x8xi16> loc(#loc231)
    %697 = tt.broadcast %696 : tensor<4x1x8xi16> -> tensor<4x2x8xi16> loc(#loc232)
    %698 = tt.reshape %693 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc233)
    %699 = tt.reshape %697 : tensor<4x2x8xi16> -> tensor<1x64xi16> loc(#loc234)
    %700 = tt.bitcast %674 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %701 = arith.cmpf olt, %687, %688 : tensor<1x64xf32> loc(#loc236)
    %702 = arith.xori %685, %686 : tensor<1x64xi32> loc(#loc239)
    %703 = arith.select %701, %702, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %704 = arith.xori %700, %703 : tensor<1x64xi32> loc(#loc241)
    %705 = arith.xori %698, %699 : tensor<1x64xi16> loc(#loc242)
    %706 = arith.select %701, %705, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %707 = arith.xori %673, %706 : tensor<1x64xi16> loc(#loc244)
    %708 = tt.bitcast %704 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %709 = tt.reshape %708 : tensor<1x64xf32> -> tensor<8x2x4xf32> loc(#loc199)
    %710 = tt.bitcast %709 : tensor<8x2x4xf32> -> tensor<8x2x4xi32> loc(#loc200)
    %711 = arith.muli %710, %149 : tensor<8x2x4xi32> loc(#loc202)
    %712 = "tt.reduce"(%711) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc246)
    %713 = tt.expand_dims %712 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc206)
    %714 = tt.broadcast %713 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc207)
    %715 = arith.muli %710, %66 : tensor<8x2x4xi32> loc(#loc208)
    %716 = "tt.reduce"(%715) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<8x2x4xi32>) -> tensor<8x4xi32> loc(#loc249)
    %717 = tt.expand_dims %716 {axis = 1 : i32} : tensor<8x4xi32> -> tensor<8x1x4xi32> loc(#loc212)
    %718 = tt.broadcast %717 : tensor<8x1x4xi32> -> tensor<8x2x4xi32> loc(#loc213)
    %719 = tt.reshape %714 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc214)
    %720 = tt.reshape %718 : tensor<8x2x4xi32> -> tensor<1x64xi32> loc(#loc215)
    %721 = tt.bitcast %719 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %722 = tt.bitcast %720 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %723 = tt.reshape %707 : tensor<1x64xi16> -> tensor<8x2x4xi16> loc(#loc218)
    %724 = arith.muli %723, %163 : tensor<8x2x4xi16> loc(#loc220)
    %725 = "tt.reduce"(%724) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc252)
    %726 = tt.expand_dims %725 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc224)
    %727 = tt.broadcast %726 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc225)
    %728 = arith.muli %723, %168 : tensor<8x2x4xi16> loc(#loc227)
    %729 = "tt.reduce"(%728) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<8x2x4xi16>) -> tensor<8x4xi16> loc(#loc255)
    %730 = tt.expand_dims %729 {axis = 1 : i32} : tensor<8x4xi16> -> tensor<8x1x4xi16> loc(#loc231)
    %731 = tt.broadcast %730 : tensor<8x1x4xi16> -> tensor<8x2x4xi16> loc(#loc232)
    %732 = tt.reshape %727 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc233)
    %733 = tt.reshape %731 : tensor<8x2x4xi16> -> tensor<1x64xi16> loc(#loc234)
    %734 = tt.bitcast %708 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %735 = arith.cmpf olt, %721, %722 : tensor<1x64xf32> loc(#loc236)
    %736 = arith.xori %719, %720 : tensor<1x64xi32> loc(#loc239)
    %737 = arith.select %735, %736, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %738 = arith.xori %734, %737 : tensor<1x64xi32> loc(#loc241)
    %739 = arith.xori %732, %733 : tensor<1x64xi16> loc(#loc242)
    %740 = arith.select %735, %739, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %741 = arith.xori %707, %740 : tensor<1x64xi16> loc(#loc244)
    %742 = tt.bitcast %738 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %743 = tt.reshape %742 : tensor<1x64xf32> -> tensor<16x2x2xf32> loc(#loc199)
    %744 = tt.bitcast %743 : tensor<16x2x2xf32> -> tensor<16x2x2xi32> loc(#loc200)
    %745 = arith.muli %744, %70 : tensor<16x2x2xi32> loc(#loc202)
    %746 = "tt.reduce"(%745) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc246)
    %747 = tt.expand_dims %746 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc206)
    %748 = tt.broadcast %747 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc207)
    %749 = arith.muli %744, %20 : tensor<16x2x2xi32> loc(#loc208)
    %750 = "tt.reduce"(%749) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<16x2x2xi32>) -> tensor<16x2xi32> loc(#loc249)
    %751 = tt.expand_dims %750 {axis = 1 : i32} : tensor<16x2xi32> -> tensor<16x1x2xi32> loc(#loc212)
    %752 = tt.broadcast %751 : tensor<16x1x2xi32> -> tensor<16x2x2xi32> loc(#loc213)
    %753 = tt.reshape %748 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc214)
    %754 = tt.reshape %752 : tensor<16x2x2xi32> -> tensor<1x64xi32> loc(#loc215)
    %755 = tt.bitcast %753 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %756 = tt.bitcast %754 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %757 = tt.reshape %741 : tensor<1x64xi16> -> tensor<16x2x2xi16> loc(#loc218)
    %758 = arith.muli %757, %84 : tensor<16x2x2xi16> loc(#loc220)
    %759 = "tt.reduce"(%758) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc252)
    %760 = tt.expand_dims %759 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc224)
    %761 = tt.broadcast %760 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc225)
    %762 = arith.muli %757, %89 : tensor<16x2x2xi16> loc(#loc227)
    %763 = "tt.reduce"(%762) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<16x2x2xi16>) -> tensor<16x2xi16> loc(#loc255)
    %764 = tt.expand_dims %763 {axis = 1 : i32} : tensor<16x2xi16> -> tensor<16x1x2xi16> loc(#loc231)
    %765 = tt.broadcast %764 : tensor<16x1x2xi16> -> tensor<16x2x2xi16> loc(#loc232)
    %766 = tt.reshape %761 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc233)
    %767 = tt.reshape %765 : tensor<16x2x2xi16> -> tensor<1x64xi16> loc(#loc234)
    %768 = tt.bitcast %742 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %769 = arith.cmpf olt, %755, %756 : tensor<1x64xf32> loc(#loc236)
    %770 = arith.xori %753, %754 : tensor<1x64xi32> loc(#loc239)
    %771 = arith.select %769, %770, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %772 = arith.xori %768, %771 : tensor<1x64xi32> loc(#loc241)
    %773 = arith.xori %766, %767 : tensor<1x64xi16> loc(#loc242)
    %774 = arith.select %769, %773, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %775 = arith.xori %741, %774 : tensor<1x64xi16> loc(#loc244)
    %776 = tt.bitcast %772 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %777 = tt.reshape %776 : tensor<1x64xf32> -> tensor<32x2x1xf32> loc(#loc199)
    %778 = tt.bitcast %777 : tensor<32x2x1xf32> -> tensor<32x2x1xi32> loc(#loc200)
    %779 = arith.muli %778, %25 : tensor<32x2x1xi32> loc(#loc202)
    %780 = "tt.reduce"(%779) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc204 at #loc19)), %arg8: i32 loc(callsite(#loc204 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc258)
      tt.reduce.return %838 : i32 loc(#loc246)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc246)
    %781 = tt.expand_dims %780 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc206)
    %782 = tt.broadcast %781 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc207)
    %783 = arith.muli %778, %30 : tensor<32x2x1xi32> loc(#loc208)
    %784 = "tt.reduce"(%783) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc210 at #loc19)), %arg8: i32 loc(callsite(#loc210 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i32 loc(#loc259)
      tt.reduce.return %838 : i32 loc(#loc249)
    }) : (tensor<32x2x1xi32>) -> tensor<32x1xi32> loc(#loc249)
    %785 = tt.expand_dims %784 {axis = 1 : i32} : tensor<32x1xi32> -> tensor<32x1x1xi32> loc(#loc212)
    %786 = tt.broadcast %785 : tensor<32x1x1xi32> -> tensor<32x2x1xi32> loc(#loc213)
    %787 = tt.reshape %782 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc214)
    %788 = tt.reshape %786 : tensor<32x2x1xi32> -> tensor<1x64xi32> loc(#loc215)
    %789 = tt.bitcast %787 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc216)
    %790 = tt.bitcast %788 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc217)
    %791 = tt.reshape %775 : tensor<1x64xi16> -> tensor<32x2x1xi16> loc(#loc218)
    %792 = arith.muli %791, %41 : tensor<32x2x1xi16> loc(#loc220)
    %793 = "tt.reduce"(%792) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc222 at #loc19)), %arg8: i16 loc(callsite(#loc222 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc260)
      tt.reduce.return %838 : i16 loc(#loc252)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc252)
    %794 = tt.expand_dims %793 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc224)
    %795 = tt.broadcast %794 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc225)
    %796 = arith.muli %791, %47 : tensor<32x2x1xi16> loc(#loc227)
    %797 = "tt.reduce"(%796) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i16 loc(callsite(#loc229 at #loc19)), %arg8: i16 loc(callsite(#loc229 at #loc19))):
      %838 = arith.addi %arg7, %arg8 : i16 loc(#loc261)
      tt.reduce.return %838 : i16 loc(#loc255)
    }) : (tensor<32x2x1xi16>) -> tensor<32x1xi16> loc(#loc255)
    %798 = tt.expand_dims %797 {axis = 1 : i32} : tensor<32x1xi16> -> tensor<32x1x1xi16> loc(#loc231)
    %799 = tt.broadcast %798 : tensor<32x1x1xi16> -> tensor<32x2x1xi16> loc(#loc232)
    %800 = tt.reshape %795 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc233)
    %801 = tt.reshape %799 : tensor<32x2x1xi16> -> tensor<1x64xi16> loc(#loc234)
    %802 = tt.bitcast %776 : tensor<1x64xf32> -> tensor<1x64xi32> loc(#loc235)
    %803 = arith.cmpf olt, %789, %790 : tensor<1x64xf32> loc(#loc236)
    %804 = arith.xori %787, %788 : tensor<1x64xi32> loc(#loc239)
    %805 = arith.select %803, %804, %cst_0 : tensor<1x64xi1>, tensor<1x64xi32> loc(#loc240)
    %806 = arith.xori %802, %805 : tensor<1x64xi32> loc(#loc241)
    %807 = arith.xori %800, %801 : tensor<1x64xi16> loc(#loc242)
    %808 = arith.select %803, %807, %cst : tensor<1x64xi1>, tensor<1x64xi16> loc(#loc243)
    %809 = arith.xori %775, %808 : tensor<1x64xi16> loc(#loc244)
    %810 = tt.bitcast %806 : tensor<1x64xi32> -> tensor<1x64xf32> loc(#loc245)
    %811 = arith.extsi %809 : tensor<1x64xi16> to tensor<1x64xi64> loc(#loc65)
    %812 = arith.addi %811, %cst_3 : tensor<1x64xi64> loc(#loc66)
    %813 = arith.cmpi slt, %811, %cst_2 : tensor<1x64xi64> loc(#loc67)
    %814 = arith.select %813, %812, %811 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc68)
    %815 = arith.cmpi sge, %814, %cst_2 : tensor<1x64xi64> loc(#loc69)
    %816 = arith.cmpi slt, %814, %cst_3 : tensor<1x64xi64> loc(#loc70)
    %817 = arith.andi %815, %816 : tensor<1x64xi1> loc(#loc71)
    tt.assert %817, "index out of bounds: 0 <= tmp18 < 64" : tensor<1x64xi1> loc(#loc72)
    %818 = arith.divsi %814, %cst_5 : tensor<1x64xi64> loc(#loc73)
    %819 = arith.remsi %818, %cst_4 : tensor<1x64xi64> loc(#loc74)
    %820 = arith.muli %819, %cst_3 : tensor<1x64xi64> loc(#loc75)
    %821 = arith.remsi %814, %cst_5 : tensor<1x64xi64> loc(#loc76)
    %822 = arith.addi %820, %821 : tensor<1x64xi64> loc(#loc77)
    %823 = tt.addptr %9, %822 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi64> loc(#loc78)
    %824 = tt.load %823 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc79)
    %825 = "tt.reduce"(%824) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc80)), %arg8: f32 loc(callsite(#loc1 at #loc80))):
      %838 = arith.addf %arg7, %arg8 : f32 loc(#loc198)
      tt.reduce.return %838 : f32 loc(#loc143)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc143)
    %826 = tt.expand_dims %825 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc81)
    %827 = "tt.scan"(%824) <{axis = 1 : i32, reverse = false}> ({
    ^bb0(%arg7: f32 loc(unknown), %arg8: f32 loc(unknown)):
      %838 = arith.addf %arg7, %arg8 : f32 loc(#loc145)
      tt.scan.return %838 : f32 loc(#loc82)
    }) : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc82)
    %828 = arith.subf %cst_6, %824 : tensor<1x64xf32> loc(#loc84)
    %829 = "tt.scan"(%828) <{axis = 1 : i32, reverse = false}> ({
    ^bb0(%arg7: f32 loc(unknown), %arg8: f32 loc(unknown)):
      %838 = arith.addf %arg7, %arg8 : f32 loc(#loc146)
      tt.scan.return %838 : f32 loc(#loc85)
    }) : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc85)
    %830 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc86)
    %831 = tt.addptr %830, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc86)
    tt.store %831, %810 : tensor<1x64x!tt.ptr<f32>> loc(#loc87)
    %832 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc88)
    %833 = tt.addptr %832, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc88)
    tt.store %833, %827 : tensor<1x64x!tt.ptr<f32>> loc(#loc89)
    %834 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc90)
    %835 = tt.addptr %834, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc90)
    tt.store %835, %829 : tensor<1x64x!tt.ptr<f32>> loc(#loc91)
    %836 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc92)
    %837 = tt.splat %836 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc92)
    tt.store %837, %826 : tensor<1x1x!tt.ptr<f32>> loc(#loc93)
    tt.return loc(#loc94)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":31:26)
#loc3 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":31:34)
#loc4 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:40)
#loc5 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:34)
#loc6 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:53)
#loc7 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:48)
#loc8 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:30)
#loc9 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":35:60)
#loc10 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":36:30)
#loc11 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":36:60)
#loc12 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":38:18)
#loc13 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":40:18)
#loc14 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":41:18)
#loc15 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":42:18)
#loc16 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":44:19)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:41)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":514:29)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:23)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:53)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:66)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:37)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:23)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:54)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:67)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":521:36)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":522:38)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":536:22)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:48)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:59)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:22)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc65 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":48:21)
#loc66 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":50:20)
#loc67 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":51:20)
#loc68 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":52:35)
#loc69 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":53:27)
#loc70 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":53:45)
#loc71 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":53:37)
#loc72 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":53:50)
#loc73 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:46)
#loc74 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:52)
#loc75 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:36)
#loc76 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:68)
#loc77 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:60)
#loc78 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:31)
#loc79 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":54:75)
#loc81 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":56:29)
#loc82 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":59:46)
#loc83 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":13:20)
#loc84 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":60:19)
#loc85 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":63:46)
#loc86 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":64:25)
#loc87 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":64:72)
#loc88 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":65:25)
#loc89 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":65:72)
#loc90 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":66:25)
#loc91 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":66:72)
#loc92 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":67:25)
#loc93 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":67:68)
#loc94 = loc("inductor_cache/rb/crb4eoqwd3wlz3jvgg6aezka343bwo7qr7oml6e4p6gbppyiamw6.py":67:4)
#loc95 = loc(callsite(#loc17 at #loc18))
#loc96 = loc(callsite(#loc20 at #loc18))
#loc97 = loc(callsite(#loc21 at #loc18))
#loc98 = loc(callsite(#loc22 at #loc18))
#loc99 = loc(callsite(#loc23 at #loc24))
#loc100 = loc(callsite(#loc25 at #loc24))
#loc101 = loc(callsite(#loc26 at #loc24))
#loc102 = loc(callsite(#loc27 at #loc24))
#loc103 = loc(callsite(#loc28 at #loc29))
#loc105 = loc(callsite(#loc30 at #loc28))
#loc106 = loc(callsite(#loc31 at #loc24))
#loc107 = loc(callsite(#loc32 at #loc24))
#loc108 = loc(callsite(#loc33 at #loc24))
#loc109 = loc(callsite(#loc28 at #loc34))
#loc111 = loc(callsite(#loc35 at #loc24))
#loc112 = loc(callsite(#loc36 at #loc24))
#loc113 = loc(callsite(#loc37 at #loc24))
#loc114 = loc(callsite(#loc38 at #loc24))
#loc115 = loc(callsite(#loc39 at #loc24))
#loc116 = loc(callsite(#loc40 at #loc24))
#loc117 = loc(callsite(#loc41 at #loc24))
#loc118 = loc(callsite(#loc42 at #loc24))
#loc119 = loc(callsite(#loc43 at #loc24))
#loc120 = loc(callsite(#loc28 at #loc44))
#loc122 = loc(callsite(#loc45 at #loc24))
#loc123 = loc(callsite(#loc46 at #loc24))
#loc124 = loc(callsite(#loc47 at #loc24))
#loc125 = loc(callsite(#loc48 at #loc24))
#loc126 = loc(callsite(#loc28 at #loc49))
#loc128 = loc(callsite(#loc50 at #loc24))
#loc129 = loc(callsite(#loc51 at #loc24))
#loc130 = loc(callsite(#loc52 at #loc24))
#loc131 = loc(callsite(#loc53 at #loc24))
#loc132 = loc(callsite(#loc54 at #loc24))
#loc133 = loc(callsite(#loc55 at #loc24))
#loc134 = loc(callsite(#loc56 at #loc24))
#loc135 = loc(callsite(#loc57 at #loc24))
#loc136 = loc(callsite(#loc58 at #loc24))
#loc137 = loc(callsite(#loc59 at #loc24))
#loc138 = loc(callsite(#loc60 at #loc24))
#loc139 = loc(callsite(#loc61 at #loc24))
#loc140 = loc(callsite(#loc62 at #loc24))
#loc141 = loc(callsite(#loc63 at #loc24))
#loc142 = loc(callsite(#loc64 at #loc24))
#loc143 = loc(callsite(#loc28 at #loc80))
#loc145 = loc(callsite(#loc83 at #loc82))
#loc146 = loc(callsite(#loc83 at #loc85))
#loc147 = loc(callsite(#loc95 at #loc19))
#loc148 = loc(callsite(#loc96 at #loc19))
#loc149 = loc(callsite(#loc97 at #loc19))
#loc150 = loc(callsite(#loc98 at #loc19))
#loc151 = loc(callsite(#loc99 at #loc18))
#loc152 = loc(callsite(#loc100 at #loc18))
#loc153 = loc(callsite(#loc101 at #loc18))
#loc154 = loc(callsite(#loc102 at #loc18))
#loc155 = loc(callsite(#loc103 at #loc24))
#loc157 = loc(callsite(#loc105 at #loc29))
#loc158 = loc(callsite(#loc106 at #loc18))
#loc159 = loc(callsite(#loc107 at #loc18))
#loc160 = loc(callsite(#loc108 at #loc18))
#loc161 = loc(callsite(#loc109 at #loc24))
#loc163 = loc(callsite(#loc105 at #loc34))
#loc164 = loc(callsite(#loc111 at #loc18))
#loc165 = loc(callsite(#loc112 at #loc18))
#loc166 = loc(callsite(#loc113 at #loc18))
#loc167 = loc(callsite(#loc114 at #loc18))
#loc168 = loc(callsite(#loc115 at #loc18))
#loc169 = loc(callsite(#loc116 at #loc18))
#loc170 = loc(callsite(#loc117 at #loc18))
#loc171 = loc(callsite(#loc118 at #loc18))
#loc172 = loc(callsite(#loc119 at #loc18))
#loc173 = loc(callsite(#loc120 at #loc24))
#loc175 = loc(callsite(#loc105 at #loc44))
#loc176 = loc(callsite(#loc122 at #loc18))
#loc177 = loc(callsite(#loc123 at #loc18))
#loc178 = loc(callsite(#loc124 at #loc18))
#loc179 = loc(callsite(#loc125 at #loc18))
#loc180 = loc(callsite(#loc126 at #loc24))
#loc182 = loc(callsite(#loc105 at #loc49))
#loc183 = loc(callsite(#loc128 at #loc18))
#loc184 = loc(callsite(#loc129 at #loc18))
#loc185 = loc(callsite(#loc130 at #loc18))
#loc186 = loc(callsite(#loc131 at #loc18))
#loc187 = loc(callsite(#loc132 at #loc18))
#loc188 = loc(callsite(#loc133 at #loc18))
#loc189 = loc(callsite(#loc134 at #loc18))
#loc190 = loc(callsite(#loc135 at #loc18))
#loc191 = loc(callsite(#loc136 at #loc18))
#loc192 = loc(callsite(#loc137 at #loc18))
#loc193 = loc(callsite(#loc138 at #loc18))
#loc194 = loc(callsite(#loc139 at #loc18))
#loc195 = loc(callsite(#loc140 at #loc18))
#loc196 = loc(callsite(#loc141 at #loc18))
#loc197 = loc(callsite(#loc142 at #loc18))
#loc198 = loc(callsite(#loc105 at #loc80))
#loc199 = loc(callsite(#loc151 at #loc19))
#loc200 = loc(callsite(#loc152 at #loc19))
#loc201 = loc(callsite(#loc153 at #loc19))
#loc202 = loc(callsite(#loc154 at #loc19))
#loc203 = loc(callsite(#loc155 at #loc18))
#loc205 = loc(callsite(#loc157 at #loc24))
#loc206 = loc(callsite(#loc158 at #loc19))
#loc207 = loc(callsite(#loc159 at #loc19))
#loc208 = loc(callsite(#loc160 at #loc19))
#loc209 = loc(callsite(#loc161 at #loc18))
#loc211 = loc(callsite(#loc163 at #loc24))
#loc212 = loc(callsite(#loc164 at #loc19))
#loc213 = loc(callsite(#loc165 at #loc19))
#loc214 = loc(callsite(#loc166 at #loc19))
#loc215 = loc(callsite(#loc167 at #loc19))
#loc216 = loc(callsite(#loc168 at #loc19))
#loc217 = loc(callsite(#loc169 at #loc19))
#loc218 = loc(callsite(#loc170 at #loc19))
#loc219 = loc(callsite(#loc171 at #loc19))
#loc220 = loc(callsite(#loc172 at #loc19))
#loc221 = loc(callsite(#loc173 at #loc18))
#loc223 = loc(callsite(#loc175 at #loc24))
#loc224 = loc(callsite(#loc176 at #loc19))
#loc225 = loc(callsite(#loc177 at #loc19))
#loc226 = loc(callsite(#loc178 at #loc19))
#loc227 = loc(callsite(#loc179 at #loc19))
#loc228 = loc(callsite(#loc180 at #loc18))
#loc230 = loc(callsite(#loc182 at #loc24))
#loc231 = loc(callsite(#loc183 at #loc19))
#loc232 = loc(callsite(#loc184 at #loc19))
#loc233 = loc(callsite(#loc185 at #loc19))
#loc234 = loc(callsite(#loc186 at #loc19))
#loc235 = loc(callsite(#loc187 at #loc19))
#loc236 = loc(callsite(#loc188 at #loc19))
#loc237 = loc(callsite(#loc189 at #loc19))
#loc238 = loc(callsite(#loc190 at #loc19))
#loc239 = loc(callsite(#loc191 at #loc19))
#loc240 = loc(callsite(#loc192 at #loc19))
#loc241 = loc(callsite(#loc193 at #loc19))
#loc242 = loc(callsite(#loc194 at #loc19))
#loc243 = loc(callsite(#loc195 at #loc19))
#loc244 = loc(callsite(#loc196 at #loc19))
#loc245 = loc(callsite(#loc197 at #loc19))
#loc246 = loc(callsite(#loc203 at #loc19))
#loc248 = loc(callsite(#loc205 at #loc18))
#loc249 = loc(callsite(#loc209 at #loc19))
#loc251 = loc(callsite(#loc211 at #loc18))
#loc252 = loc(callsite(#loc221 at #loc19))
#loc254 = loc(callsite(#loc223 at #loc18))
#loc255 = loc(callsite(#loc228 at #loc19))
#loc257 = loc(callsite(#loc230 at #loc18))
#loc258 = loc(callsite(#loc248 at #loc19))
#loc259 = loc(callsite(#loc251 at #loc19))
#loc260 = loc(callsite(#loc254 at #loc19))
#loc261 = loc(callsite(#loc257 at #loc19))
