#loc = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":46:26)
#loc36 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":54:26)
#loc50 = loc(callsite(#loc1 at #loc29))
#loc53 = loc(callsite(#loc1 at #loc36))
module {
  tt.func public @triton_per_fused_add_div_mean_sqrt_sub_var_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0), %arg4: i32 loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":19:0)) attributes {noinline = false} {
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<2.000000e-05> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<6.300000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<4.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x64xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x64xi32> loc(#loc7)
    %8 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_4 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %12 = arith.muli %0, %c4_i32 : i32 loc(#loc10)
    %13 = tt.addptr %arg3, %12 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = arith.addi %12, %c1_i32 : i32 loc(#loc13)
    %17 = tt.addptr %arg3, %16 : !tt.ptr<f32>, i32 loc(#loc14)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.load %18, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %20 = arith.addi %12, %c2_i32 : i32 loc(#loc16)
    %21 = tt.addptr %arg3, %20 : !tt.ptr<f32>, i32 loc(#loc17)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.load %22, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.addi %12, %c3_i32 : i32 loc(#loc19)
    %25 = tt.addptr %arg3, %24 : !tt.ptr<f32>, i32 loc(#loc20)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.load %26, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc21)
    %28 = arith.addf %15, %19 : tensor<1x1xf32> loc(#loc22)
    %29 = arith.addf %28, %23 : tensor<1x1xf32> loc(#loc23)
    %30 = arith.addf %29, %27 : tensor<1x1xf32> loc(#loc24)
    %31 = arith.divf %30, %cst_3 : tensor<1x1xf32> loc(#loc25)
    %32 = tt.broadcast %31 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc26)
    %33 = arith.subf %11, %32 : tensor<1x64xf32> loc(#loc26)
    %34 = arith.select %10, %33, %cst_4 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc27)
    %35 = "tt.reduce"(%34) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc29)), %arg7: f32 loc(callsite(#loc1 at #loc29))):
      %54 = arith.addf %arg6, %arg7 : f32 loc(#loc54)
      tt.reduce.return %54 : f32 loc(#loc49)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc49)
    %36 = tt.expand_dims %35 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc31)
    %37 = arith.divf %36, %cst : tensor<1x1xf32> loc(#loc32)
    %38 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc33)
    %39 = arith.subf %33, %38 : tensor<1x64xf32> loc(#loc33)
    %40 = arith.mulf %39, %39 : tensor<1x64xf32> loc(#loc34)
    %41 = arith.select %10, %40, %cst_4 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc35)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc36)), %arg7: f32 loc(callsite(#loc1 at #loc36))):
      %54 = arith.addf %arg6, %arg7 : f32 loc(#loc55)
      tt.reduce.return %54 : f32 loc(#loc52)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc52)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc37)
    %44 = arith.divf %43, %cst_2 : tensor<1x1xf32> loc(#loc38)
    %45 = arith.addf %44, %cst_1 : tensor<1x1xf32> loc(#loc39)
    %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc40)
    %47 = arith.addf %46, %cst_0 : tensor<1x1xf32> loc(#loc41)
    %48 = tt.broadcast %47 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc42)
    %49 = arith.divf %33, %48 : tensor<1x64xf32> loc(#loc42)
    gpu.barrier loc(#loc43)
    %50 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc44)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.store %51, %46, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    %52 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc46)
    %53 = tt.addptr %52, %7 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc46)
    tt.store %53, %49, %10 : tensor<1x64x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":23:28)
#loc3 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":25:21)
#loc4 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":26:26)
#loc5 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":26:34)
#loc6 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":31:38)
#loc7 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":31:35)
#loc8 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":31:30)
#loc9 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":31:43)
#loc10 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":32:32)
#loc11 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":32:30)
#loc12 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":32:37)
#loc13 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":33:34)
#loc14 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":33:30)
#loc15 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":33:41)
#loc16 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":34:34)
#loc17 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":34:30)
#loc18 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":34:41)
#loc19 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":35:34)
#loc20 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":35:30)
#loc21 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":35:41)
#loc22 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":36:18)
#loc23 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":37:18)
#loc24 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":38:18)
#loc25 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":40:18)
#loc26 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":41:19)
#loc27 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":45:35)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc31 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":46:29)
#loc32 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":49:20)
#loc33 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":50:20)
#loc34 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":51:20)
#loc35 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":53:35)
#loc37 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":54:29)
#loc38 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":56:20)
#loc39 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":58:20)
#loc40 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":59:27)
#loc41 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":61:20)
#loc42 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":62:20)
#loc43 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":63:4)
#loc44 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":64:28)
#loc45 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":64:40)
#loc46 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":65:28)
#loc47 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":65:48)
#loc48 = loc("inductor_cache/wh/cwhx33k4mr53njazzx5pfkbvmhjkzpvi23koerlzg7flgxgkiplf.py":65:4)
#loc49 = loc(callsite(#loc28 at #loc29))
#loc51 = loc(callsite(#loc30 at #loc28))
#loc52 = loc(callsite(#loc28 at #loc36))
#loc54 = loc(callsite(#loc51 at #loc29))
#loc55 = loc(callsite(#loc51 at #loc36))
