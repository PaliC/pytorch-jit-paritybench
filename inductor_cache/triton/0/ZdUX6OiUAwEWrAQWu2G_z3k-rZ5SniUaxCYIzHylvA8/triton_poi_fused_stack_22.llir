; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_stack_22(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 4, !dbg !14
  %17 = srem i32 %16, 4, !dbg !15
  %18 = mul i32 %16, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 16, !dbg !17
  %20 = srem i32 %19, 512, !dbg !18
  %21 = icmp slt i32 %17, 2, !dbg !19
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !20
  %22 = sdiv i8 %.lhs.trunc, 2, !dbg !21
  %23 = mul i8 %22, 2, !dbg !20
  %.decomposed3 = sub i8 %.lhs.trunc, %23, !dbg !20
  %.sext = sext i8 %.decomposed3 to i32, !dbg !20
  %24 = shl nsw i32 %.sext, 1, !dbg !22
  %25 = add nsw i32 %24, %17, !dbg !23
  %26 = icmp slt i32 %25, 2, !dbg !24
  %27 = and i1 %21, %26, !dbg !25
  %28 = shl nsw i32 %25, 1, !dbg !26
  %29 = shl nsw i32 %19, 2, !dbg !27
  %.sext2 = sext i8 %22 to i32, !dbg !21
  %30 = add nsw i32 %29, %.sext2, !dbg !28
  %31 = add nsw i32 %30, %28, !dbg !29
  %32 = sext i32 %31 to i64, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !30
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %27, i32 0, i1 %27) #1, !dbg !31
  %35 = bitcast i32 %34 to float, !dbg !31
  %36 = sext i32 %20 to i64, !dbg !32
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !32
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %27, i32 0, i1 %27) #1, !dbg !33
  %39 = bitcast i32 %38 to float, !dbg !33
  %40 = fadd float %35, %39, !dbg !34
  %41 = select i1 %27, float %40, float 0.000000e+00, !dbg !35
  %42 = icmp sgt i32 %25, 1, !dbg !36
  %43 = and i1 %21, %42, !dbg !37
  %44 = add nsw i32 %24, -2, !dbg !38
  %45 = add nsw i32 %44, %17, !dbg !39
  %46 = shl nsw i32 %45, 1, !dbg !40
  %47 = add nsw i32 %30, %46, !dbg !41
  %48 = sext i32 %47 to i64, !dbg !42
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !42
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %43, i32 0, i1 %43) #1, !dbg !43
  %51 = bitcast i32 %50 to float, !dbg !43
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %36, !dbg !44
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %43, i32 0, i1 %43) #1, !dbg !45
  %54 = bitcast i32 %53 to float, !dbg !45
  %55 = fadd float %51, %54, !dbg !46
  %56 = select i1 %43, float %55, float 0.000000e+00, !dbg !47
  %57 = select i1 %26, float %41, float %56, !dbg !48
  %58 = icmp sgt i32 %17, 1, !dbg !49
  %59 = add nsw i32 %17, -2, !dbg !50
  %60 = add nsw i32 %24, %59, !dbg !51
  %61 = icmp slt i32 %60, 2, !dbg !52
  %62 = and i1 %58, %61, !dbg !53
  %63 = shl nsw i32 %60, 1, !dbg !54
  %64 = add nsw i32 %30, %63, !dbg !55
  %65 = sext i32 %64 to i64, !dbg !56
  %66 = getelementptr float, ptr addrspace(1) %4, i64 %65, !dbg !56
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %62, i32 0, i1 %62) #1, !dbg !57
  %68 = bitcast i32 %67 to float, !dbg !57
  %69 = getelementptr float, ptr addrspace(1) %5, i64 %36, !dbg !58
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %62, i32 0, i1 %62) #1, !dbg !59
  %71 = bitcast i32 %70 to float, !dbg !59
  %72 = fadd float %68, %71, !dbg !60
  %73 = select i1 %62, float %72, float 0.000000e+00, !dbg !61
  %74 = icmp sgt i32 %60, 1, !dbg !62
  %75 = and i1 %58, %74, !dbg !63
  %76 = add nsw i32 %44, %59, !dbg !64
  %77 = shl nsw i32 %76, 1, !dbg !65
  %78 = add nsw i32 %30, %77, !dbg !66
  %79 = sext i32 %78 to i64, !dbg !67
  %80 = getelementptr float, ptr addrspace(1) %6, i64 %79, !dbg !67
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %75, i32 0, i1 %75) #1, !dbg !68
  %82 = bitcast i32 %81 to float, !dbg !68
  %83 = getelementptr float, ptr addrspace(1) %7, i64 %36, !dbg !69
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %83, i1 %75, i32 0, i1 %75) #1, !dbg !70
  %85 = bitcast i32 %84 to float, !dbg !70
  %86 = fadd float %82, %85, !dbg !71
  %87 = select i1 %75, float %86, float 0.000000e+00, !dbg !72
  %88 = select i1 %61, float %73, float %87, !dbg !73
  %89 = select i1 %21, float %57, float %88, !dbg !74
  %90 = sext i32 %15 to i64, !dbg !75
  %91 = getelementptr float, ptr addrspace(1) %8, i64 %90, !dbg !75
  %92 = bitcast float %89 to i32, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %92, ptr addrspace(1) %91, i1 true) #1, !dbg !76
  ret void, !dbg !77
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3bpzitjverlsivrd2gtqaqwtjnafomxv4eppgmtiznre44334ju.py", directory: "inductor_cache/3b")
!4 = !{ptr @triton_poi_fused_stack_22, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_22, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_22", linkageName: "triton_poi_fused_stack_22", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 27, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 40, column: 71, scope: !7)
!22 = !DILocation(line: 34, column: 15, scope: !7)
!23 = !DILocation(line: 34, column: 27, scope: !7)
!24 = !DILocation(line: 38, column: 18, scope: !7)
!25 = !DILocation(line: 39, column: 19, scope: !7)
!26 = !DILocation(line: 40, column: 34, scope: !7)
!27 = !DILocation(line: 40, column: 59, scope: !7)
!28 = !DILocation(line: 40, column: 57, scope: !7)
!29 = !DILocation(line: 40, column: 65, scope: !7)
!30 = !DILocation(line: 40, column: 31, scope: !7)
!31 = !DILocation(line: 40, column: 76, scope: !7)
!32 = !DILocation(line: 41, column: 31, scope: !7)
!33 = !DILocation(line: 41, column: 36, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 35, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 41, scope: !7)
!39 = !DILocation(line: 49, column: 57, scope: !7)
!40 = !DILocation(line: 49, column: 34, scope: !7)
!41 = !DILocation(line: 49, column: 72, scope: !7)
!42 = !DILocation(line: 49, column: 31, scope: !7)
!43 = !DILocation(line: 49, column: 83, scope: !7)
!44 = !DILocation(line: 50, column: 31, scope: !7)
!45 = !DILocation(line: 50, column: 36, scope: !7)
!46 = !DILocation(line: 51, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 35, scope: !7)
!48 = !DILocation(line: 54, column: 34, scope: !7)
!49 = !DILocation(line: 57, column: 20, scope: !7)
!50 = !DILocation(line: 60, column: 35, scope: !7)
!51 = !DILocation(line: 60, column: 28, scope: !7)
!52 = !DILocation(line: 64, column: 20, scope: !7)
!53 = !DILocation(line: 65, column: 20, scope: !7)
!54 = !DILocation(line: 66, column: 34, scope: !7)
!55 = !DILocation(line: 66, column: 72, scope: !7)
!56 = !DILocation(line: 66, column: 31, scope: !7)
!57 = !DILocation(line: 66, column: 83, scope: !7)
!58 = !DILocation(line: 67, column: 31, scope: !7)
!59 = !DILocation(line: 67, column: 36, scope: !7)
!60 = !DILocation(line: 68, column: 20, scope: !7)
!61 = !DILocation(line: 70, column: 35, scope: !7)
!62 = !DILocation(line: 71, column: 21, scope: !7)
!63 = !DILocation(line: 74, column: 20, scope: !7)
!64 = !DILocation(line: 75, column: 57, scope: !7)
!65 = !DILocation(line: 75, column: 34, scope: !7)
!66 = !DILocation(line: 75, column: 79, scope: !7)
!67 = !DILocation(line: 75, column: 31, scope: !7)
!68 = !DILocation(line: 75, column: 90, scope: !7)
!69 = !DILocation(line: 76, column: 31, scope: !7)
!70 = !DILocation(line: 76, column: 36, scope: !7)
!71 = !DILocation(line: 77, column: 20, scope: !7)
!72 = !DILocation(line: 79, column: 35, scope: !7)
!73 = !DILocation(line: 80, column: 35, scope: !7)
!74 = !DILocation(line: 0, scope: !7)
!75 = !DILocation(line: 84, column: 25, scope: !7)
!76 = !DILocation(line: 84, column: 37, scope: !7)
!77 = !DILocation(line: 84, column: 4, scope: !7)
