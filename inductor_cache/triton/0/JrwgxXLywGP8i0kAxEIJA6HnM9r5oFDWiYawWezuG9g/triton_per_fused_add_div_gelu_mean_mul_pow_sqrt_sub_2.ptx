//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2 // -- Begin function triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2
.visible .entry triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_6,
	.param .u32 triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<92>;
	.reg .f32 	%f<264>;
	.reg .b64 	%rd<18>;
$L__func_begin0:

// %bb.0:                               // %__nv_sqrtf.exit
	.loc	1 23 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:23:33
	shl.b32 	%r1, %r5, 5;
	.loc	1 24 44                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:44
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd8, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_3];
	ld.param.u64 	%rd9, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_4];
	bfe.u32 	%r50, %r2, 2, 5;
	ld.param.u64 	%rd10, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_5];
	and.b32  	%r3, %r2, 31;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r4, %r1, %r50;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p1, %r4, 1024;
	.loc	1 26 34                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:26:34
	shl.b32 	%r51, %r2, 2;
	and.b32  	%r52, %r51, 12;
	.loc	1 31 38                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:38
	shl.b32 	%r53, %r4, 4;
	.loc	1 31 35                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:35
	or.b32  	%r54, %r53, %r52;
	.loc	1 31 30                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:30
	mul.wide.s32 	%rd11, %r54, 4;
	add.s64 	%rd5, %rd8, %rd11;
	mov.b32 	%r10, 0;
	.loc	1 31 43                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:31:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r6, %r10;
	@!%p1 mov.u32 %r7, %r10;
	@!%p1 mov.u32 %r8, %r10;
	@!%p1 mov.u32 %r9, %r10;
	// end inline asm
	mov.b32 	%f70, %r6;
	mov.b32 	%f71, %r7;
	mov.b32 	%f72, %r8;
	mov.b32 	%f73, %r9;
	.loc	1 32 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:31
	mul.wide.u32 	%rd12, %r52, 4;
	add.s64 	%rd6, %rd9, %rd12;
	mov.pred 	%p6, -1;
	.loc	1 32 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:32:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f74, %r14;
	mov.b32 	%f75, %r15;
	.loc	1 33 31                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:31
	add.s64 	%rd7, %rd10, %rd12;
	.loc	1 33 36                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:33:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f78, %r18;
	mov.b32 	%f79, %r19;
$L__tmp0:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f70, %f71;
	add.f32 	%f83, %f82, %f72;
	add.f32 	%f84, %f83, %f73;
	selp.f32 	%f85, %f84, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f85;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f86, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f87;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f88, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
$L__tmp1:
	.loc	1 38 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:38:18
	shl.b32 	%r59, %r50, 2;
	mov.u32 	%r60, global_smem;
	add.s32 	%r22, %r60, %r59;
	mov.b32 	%r23, %f89;
	// begin inline asm
	@%p6 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r61, %r3, 2;
	add.s32 	%r62, %r60, %r61;
	ld.shared.u32 	%r25, [%r62];
	mov.b32 	%r29, 1098907648;
	// begin inline asm
	div.full.f32 %r27, %r23, %r29;
	// end inline asm
	mov.b32 	%f90, %r27;
	.loc	1 39 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:39:18
	sub.f32 	%f91, %f70, %f90;
	sub.f32 	%f92, %f71, %f90;
	sub.f32 	%f93, %f72, %f90;
	sub.f32 	%f94, %f73, %f90;
	.loc	1 40 18                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:40:18
	mul.f32 	%f95, %f92, %f92;
$L__tmp2:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f96, %f91, %f91, %f95;
	fma.rn.f32 	%f97, %f93, %f93, %f96;
	fma.rn.f32 	%f98, %f94, %f94, %f97;
	selp.f32 	%f99, %f98, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f99;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f100, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f101;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f102, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
$L__tmp3:
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	bar.sync 	0;
	mov.b32 	%r31, %f103;
	// begin inline asm
	@%p6 st.shared.b32 [ %r22 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	.loc	1 44 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:44:20
	// begin inline asm
	div.full.f32 %r35, %r31, %r29;
	// end inline asm
	mov.b32 	%f105, %r35;
	.loc	1 46 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:46:20
	add.f32 	%f107, %f105, 0f358637BD;
	.loc	1 47 27                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:47:27
	sqrt.approx.ftz.f32 	%f108, %f107;
	.loc	1 48 19                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:48:19
	mov.b32 	%r40, %f108;
	mov.b32 	%r39, %f91;
	// begin inline asm
	div.full.f32 %r38, %r39, %r40;
	// end inline asm
	mov.b32 	%f109, %r38;
	mov.b32 	%r42, %f92;
	// begin inline asm
	div.full.f32 %r41, %r42, %r40;
	// end inline asm
	mov.b32 	%f110, %r41;
	mov.b32 	%r45, %f93;
	// begin inline asm
	div.full.f32 %r44, %r45, %r40;
	// end inline asm
	.loc	1 50 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:50:20
	fma.rn.f32 	%f3, %f109, %f74, %f78;
	fma.rn.f32 	%f4, %f110, %f75, %f79;
	.loc	1 54 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:54:20
	mul.f32 	%f7, %f3, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f11, %f7;
	setp.ge.f32 	%p10, %f11, 0f3F8060FE;
	mov.f32 	%f234, 0f3789CA3C;
	mov.f32 	%f233, 0fB9F560B9;
	mov.f32 	%f232, 0f3BAC840B;
	mov.f32 	%f231, 0fBD0C8162;
	mov.f32 	%f230, 0f3E1CF906;
	mov.f32 	%f229, 0f3F6A937E;
	mov.f32 	%f228, 0f3F20D842;
	mov.f32 	%f235, %f11;
	@%p10 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	mov.f32 	%f234, 0f38B1E96A;
	mov.f32 	%f233, 0fBA574D20;
	mov.f32 	%f232, 0f3BAAD5EA;
	mov.f32 	%f231, 0fBCDC1BE7;
	mov.f32 	%f230, 0f3DE718AF;
	mov.f32 	%f229, 0fBEC093AC;
	mov.f32 	%f228, 0f3E0375D3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	mul.f32 	%f235, %f7, %f7;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%r48, %f94;
	mov.b32 	%f76, %r16;
	mov.b32 	%f80, %r20;
	mov.b32 	%f111, %r44;
	mul.f32 	%f8, %f4, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p11, %f11, 0f3F8060FE;
	fma.rn.ftz.f32 	%f120, %f234, %f235, %f233;
	fma.rn.ftz.f32 	%f121, %f120, %f235, %f232;
	fma.rn.ftz.f32 	%f122, %f121, %f235, %f231;
	fma.rn.ftz.f32 	%f123, %f122, %f235, %f230;
	fma.rn.ftz.f32 	%f124, %f123, %f235, %f229;
	fma.rn.ftz.f32 	%f125, %f124, %f235, %f228;
	neg.f32 	%f126, %f235;
	selp.f32 	%f127, %f126, %f7, %p10;
	fma.rn.ftz.f32 	%f236, %f125, %f127, %f127;
	mov.f32 	%f227, 0f3F800000;
	@%p11 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f128, %f236;
	sub.f32 	%f130, %f227, %f128;
	mov.b32 	%r67, %f130;
	mov.b32 	%r68, %f7;
	and.b32  	%r69, %r68, -2147483648;
	or.b32  	%r70, %r69, %r67;
	mov.b32 	%f236, %r70;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r47, %r48, %r40;
	// end inline asm
	fma.rn.f32 	%f5, %f111, %f76, %f80;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f24, %f8;
	setp.ge.f32 	%p13, %f24, 0f3F8060FE;
	mov.f32 	%f243, 0f3789CA3C;
	mov.f32 	%f242, 0fB9F560B9;
	mov.f32 	%f241, 0f3BAC840B;
	mov.f32 	%f240, 0fBD0C8162;
	mov.f32 	%f239, 0f3E1CF906;
	mov.f32 	%f238, 0f3F6A937E;
	mov.f32 	%f237, 0f3F20D842;
	mov.f32 	%f244, %f24;
	@%p13 bra 	$L__BB0_6;
// %bb.5:
	mul.f32 	%f244, %f8, %f8;
	mov.f32 	%f243, 0f38B1E96A;
	mov.f32 	%f242, 0fBA574D20;
	mov.f32 	%f241, 0f3BAAD5EA;
	mov.f32 	%f240, 0fBCDC1BE7;
	mov.f32 	%f239, 0f3DE718AF;
	mov.f32 	%f238, 0fBEC093AC;
	mov.f32 	%f237, 0f3E0375D3;
$L__BB0_6:                              // %__internal_fmad.exit.i29
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	ld.shared.u32 	%r33, [%r62];
	mov.b32 	%f77, %r17;
	mov.b32 	%f81, %r21;
	mov.b32 	%f112, %r47;
	mul.f32 	%f9, %f5, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p14, %f24, 0f3F8060FE;
	fma.rn.ftz.f32 	%f145, %f243, %f244, %f242;
	fma.rn.ftz.f32 	%f146, %f145, %f244, %f241;
	fma.rn.ftz.f32 	%f147, %f146, %f244, %f240;
	fma.rn.ftz.f32 	%f148, %f147, %f244, %f239;
	fma.rn.ftz.f32 	%f149, %f148, %f244, %f238;
	fma.rn.ftz.f32 	%f150, %f149, %f244, %f237;
	neg.f32 	%f151, %f244;
	selp.f32 	%f152, %f151, %f8, %p13;
	fma.rn.ftz.f32 	%f245, %f150, %f152, %f152;
	@%p14 bra 	$L__BB0_8;
// %bb.7:
	ex2.approx.ftz.f32 	%f153, %f245;
	sub.f32 	%f155, %f227, %f153;
	mov.b32 	%r71, %f155;
	mov.b32 	%r72, %f8;
	and.b32  	%r73, %r72, -2147483648;
	or.b32  	%r74, %r73, %r71;
	mov.b32 	%f245, %r74;
$L__BB0_8:                              // %__nv_erff.exit48
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r32, %r33, %r29;
	// end inline asm
	fma.rn.f32 	%f6, %f112, %f77, %f81;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f37, %f9;
	setp.ge.f32 	%p16, %f37, 0f3F8060FE;
	mov.f32 	%f252, 0f3789CA3C;
	mov.f32 	%f251, 0fB9F560B9;
	mov.f32 	%f250, 0f3BAC840B;
	mov.f32 	%f249, 0fBD0C8162;
	mov.f32 	%f248, 0f3E1CF906;
	mov.f32 	%f247, 0f3F6A937E;
	mov.f32 	%f246, 0f3F20D842;
	mov.f32 	%f253, %f37;
	@%p16 bra 	$L__BB0_10;
// %bb.9:
	mul.f32 	%f253, %f9, %f9;
	mov.f32 	%f252, 0f38B1E96A;
	mov.f32 	%f251, 0fBA574D20;
	mov.f32 	%f250, 0f3BAAD5EA;
	mov.f32 	%f249, 0fBCDC1BE7;
	mov.f32 	%f248, 0f3DE718AF;
	mov.f32 	%f247, 0fBEC093AC;
	mov.f32 	%f246, 0f3E0375D3;
$L__BB0_10:                             // %__internal_fmad.exit.i51
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	mov.b32 	%f104, %r32;
	mul.f32 	%f10, %f6, 0f3F3504F3;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p17, %f37, 0f3F8060FE;
	fma.rn.ftz.f32 	%f170, %f252, %f253, %f251;
	fma.rn.ftz.f32 	%f171, %f170, %f253, %f250;
	fma.rn.ftz.f32 	%f172, %f171, %f253, %f249;
	fma.rn.ftz.f32 	%f173, %f172, %f253, %f248;
	fma.rn.ftz.f32 	%f174, %f173, %f253, %f247;
	fma.rn.ftz.f32 	%f175, %f174, %f253, %f246;
	neg.f32 	%f176, %f253;
	selp.f32 	%f177, %f176, %f9, %p16;
	fma.rn.ftz.f32 	%f254, %f175, %f177, %f177;
	@%p17 bra 	$L__BB0_12;
// %bb.11:
	ex2.approx.ftz.f32 	%f178, %f254;
	sub.f32 	%f180, %f227, %f178;
	mov.b32 	%r75, %f180;
	mov.b32 	%r76, %f9;
	and.b32  	%r77, %r76, -2147483648;
	or.b32  	%r78, %r77, %r75;
	mov.b32 	%f254, %r78;
$L__BB0_12:                             // %__nv_erff.exit70
	.loc	1 0 0                           // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:0
	// begin inline asm
	div.full.f32 %r91, %r25, %r29;
	// end inline asm
	add.f32 	%f106, %f104, 0f358637BD;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	abs.ftz.f32 	%f50, %f10;
	setp.ge.f32 	%p19, %f50, 0f3F8060FE;
	mov.f32 	%f261, 0f3789CA3C;
	mov.f32 	%f260, 0fB9F560B9;
	mov.f32 	%f259, 0f3BAC840B;
	mov.f32 	%f258, 0fBD0C8162;
	mov.f32 	%f257, 0f3E1CF906;
	mov.f32 	%f256, 0f3F6A937E;
	mov.f32 	%f255, 0f3F20D842;
	mov.f32 	%f262, %f50;
	@%p19 bra 	$L__BB0_14;
// %bb.13:
	mul.f32 	%f262, %f10, %f10;
	mov.f32 	%f261, 0f38B1E96A;
	mov.f32 	%f260, 0fBA574D20;
	mov.f32 	%f259, 0f3BAAD5EA;
	mov.f32 	%f258, 0fBCDC1BE7;
	mov.f32 	%f257, 0f3DE718AF;
	mov.f32 	%f256, 0fBEC093AC;
	mov.f32 	%f255, 0f3E0375D3;
$L__BB0_14:                             // %__internal_fmad.exit.i73
	.loc	1 0 26                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:0:26
	ld.param.u64 	%rd4, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_2];
	ld.param.u64 	%rd3, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_1];
	ld.param.u64 	%rd2, [triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2_param_0];
	cvt.s64.s32 	%rd1, %r54;
	mov.b32 	%f1, %r91;
	sqrt.approx.ftz.f32 	%f2, %f106;
	.loc	1 55 26                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:55:26
	setp.ltu.f32 	%p20, %f50, 0f3F8060FE;
	fma.rn.ftz.f32 	%f195, %f261, %f262, %f260;
	fma.rn.ftz.f32 	%f196, %f195, %f262, %f259;
	fma.rn.ftz.f32 	%f197, %f196, %f262, %f258;
	fma.rn.ftz.f32 	%f198, %f197, %f262, %f257;
	fma.rn.ftz.f32 	%f199, %f198, %f262, %f256;
	fma.rn.ftz.f32 	%f200, %f199, %f262, %f255;
	neg.f32 	%f201, %f262;
	selp.f32 	%f202, %f201, %f10, %p19;
	fma.rn.ftz.f32 	%f263, %f200, %f202, %f202;
	@%p20 bra 	$L__BB0_16;
// %bb.15:
	ex2.approx.ftz.f32 	%f203, %f263;
	sub.f32 	%f205, %f227, %f203;
	mov.b32 	%r79, %f205;
	mov.b32 	%r80, %f10;
	and.b32  	%r81, %r80, -2147483648;
	or.b32  	%r82, %r81, %r79;
	mov.b32 	%f263, %r82;
$L__BB0_16:                             // %__nv_erff.exit92
	.loc	1 52 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:52:20
	mul.f32 	%f206, %f6, 0f3F000000;
	mul.f32 	%f207, %f5, 0f3F000000;
	mul.f32 	%f208, %f4, 0f3F000000;
	mul.f32 	%f209, %f3, 0f3F000000;
	.loc	1 24 23                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:24:23
	or.b32  	%r89, %r1, %r3;
	.loc	1 25 21                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:25:21
	setp.lt.s32 	%p25, %r89, 1024;
	.loc	1 57 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:57:20
	add.f32 	%f210, %f236, 0f3F800000;
	add.f32 	%f211, %f245, 0f3F800000;
	add.f32 	%f212, %f254, 0f3F800000;
	add.f32 	%f213, %f263, 0f3F800000;
	.loc	1 58 20                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:58:20
	mul.f32 	%f214, %f209, %f210;
	mul.f32 	%f215, %f208, %f211;
	mul.f32 	%f216, %f207, %f212;
	mul.f32 	%f217, %f206, %f213;
	.loc	1 59 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:28
	mul.wide.s32 	%rd16, %r89, 4;
	add.s64 	%rd13, %rd2, %rd16;
	.loc	1 60 39                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:60:39
	and.b32  	%r90, %r2, 96;
	setp.eq.s32 	%p26, %r90, 0;
	and.pred  	%p22, %p26, %p25;
	// begin inline asm
	@%p22 st.global.b32 [ %rd13 + 0 ], { %r91 };
	// end inline asm
	.loc	1 61 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:61:4
	bar.sync 	0;
	.loc	1 62 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:28
	add.s64 	%rd14, %rd3, %rd16;
	.loc	1 62 40                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:62:40
	mov.b32 	%r84, %f2;
	// begin inline asm
	@%p22 st.global.b32 [ %rd14 + 0 ], { %r84 };
	// end inline asm
	.loc	1 63 28                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:28
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd15, %rd4, %rd17;
	.loc	1 63 48                         // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:48
	mov.b32 	%r85, %f214;
	mov.b32 	%r86, %f215;
	mov.b32 	%r87, %f216;
	mov.b32 	%r88, %f217;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r85, %r86, %r87, %r88 };
	// end inline asm
	.loc	1 63 4                          // c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py:63:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7t/c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 116
.b8 101
.b8 102
.b8 53
.b8 52
.b8 122
.b8 50
.b8 53
.b8 117
.b8 117
.b8 109
.b8 105
.b8 104
.b8 104
.b8 110
.b8 99
.b8 101
.b8 112
.b8 109
.b8 50
.b8 99
.b8 121
.b8 120
.b8 114
.b8 110
.b8 102
.b8 104
.b8 54
.b8 106
.b8 99
.b8 103
.b8 114
.b8 97
.b8 120
.b8 107
.b8 109
.b8 120
.b8 110
.b8 53
.b8 52
.b8 100
.b8 108
.b8 121
.b8 100
.b8 120
.b8 114
.b8 113
.b8 103
.b8 109
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
