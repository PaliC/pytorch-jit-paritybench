; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %10 = shl i32 %9, 5, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = lshr i32 %11, 2, !dbg !12
  %13 = and i32 %12, 31, !dbg !12
  %14 = and i32 %11, 31, !dbg !12
  %15 = or disjoint i32 %10, %13, !dbg !13
  %16 = icmp slt i32 %15, 1024, !dbg !14
  %17 = shl i32 %11, 2, !dbg !15
  %18 = and i32 %17, 12, !dbg !15
  %19 = shl i32 %15, 4, !dbg !16
  %20 = or disjoint i32 %19, %18, !dbg !17
  %21 = sext i32 %20 to i64, !dbg !18
  %22 = getelementptr float, ptr addrspace(1) %3, i64 %21, !dbg !18
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %22, i1 %16, i32 0, i1 %16, i32 0, i1 %16, i32 0, i1 %16, i32 0, i1 %16) #5, !dbg !19
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !19
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !19
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !19
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !19
  %28 = bitcast i32 %24 to float, !dbg !19
  %29 = bitcast i32 %25 to float, !dbg !19
  %30 = bitcast i32 %26 to float, !dbg !19
  %31 = bitcast i32 %27 to float, !dbg !19
  %32 = zext nneg i32 %18 to i64, !dbg !20
  %33 = getelementptr float, ptr addrspace(1) %4, i64 %32, !dbg !20
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 true) #5, !dbg !21
  %35 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !21
  %36 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !21
  %37 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !21
  %38 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !21
  %39 = bitcast i32 %35 to float, !dbg !21
  %40 = bitcast i32 %36 to float, !dbg !21
  %41 = bitcast i32 %37 to float, !dbg !21
  %42 = bitcast i32 %38 to float, !dbg !21
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %32, !dbg !22
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %43, i1 true) #5, !dbg !23
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !23
  %46 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !23
  %47 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !23
  %48 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !23
  %49 = bitcast i32 %45 to float, !dbg !23
  %50 = bitcast i32 %46 to float, !dbg !23
  %51 = bitcast i32 %47 to float, !dbg !23
  %52 = bitcast i32 %48 to float, !dbg !23
  %53 = fadd float %28, %29, !dbg !24
  %54 = fadd float %53, %30, !dbg !24
  %55 = fadd float %54, %31, !dbg !24
  %56 = select i1 %16, float %55, float 0.000000e+00, !dbg !24
  %57 = bitcast float %56 to i32, !dbg !29
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 2, i32 31), !dbg !29
  %59 = bitcast i32 %58 to float, !dbg !29
  %60 = fadd float %56, %59, !dbg !24
  %61 = bitcast float %60 to i32, !dbg !29
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 1, i32 31), !dbg !29
  %63 = bitcast i32 %62 to float, !dbg !29
  %64 = fadd float %60, %63, !dbg !24
  %65 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !30
  %66 = bitcast float %64 to <1 x i32>, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %66, i1 true) #5, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %67 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !30
  %68 = load float, ptr addrspace(3) %67, align 4, !dbg !30
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %68, float 1.600000e+01) #5, !dbg !30
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %64, float 1.600000e+01) #5, !dbg !30
  %71 = fsub float %28, %70, !dbg !31
  %72 = fsub float %29, %70, !dbg !31
  %73 = fsub float %30, %70, !dbg !31
  %74 = fsub float %31, %70, !dbg !31
  %75 = fmul float %71, %71, !dbg !32
  %76 = fmul float %72, %72, !dbg !32
  %77 = fmul float %73, %73, !dbg !32
  %78 = fmul float %74, %74, !dbg !32
  %79 = fadd float %75, %76, !dbg !33
  %80 = fadd float %77, %79, !dbg !33
  %81 = fadd float %78, %80, !dbg !33
  %82 = select i1 %16, float %81, float 0.000000e+00, !dbg !33
  %83 = bitcast float %82 to i32, !dbg !35
  %84 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %83, i32 2, i32 31), !dbg !35
  %85 = bitcast i32 %84 to float, !dbg !35
  %86 = fadd float %82, %85, !dbg !33
  %87 = bitcast float %86 to i32, !dbg !35
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 1, i32 31), !dbg !35
  %89 = bitcast i32 %88 to float, !dbg !35
  %90 = fadd float %86, %89, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %91 = bitcast float %90 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %91, i1 true) #5, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %92 = load float, ptr addrspace(3) %67, align 4, !dbg !36
  %93 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %92, float 1.600000e+01) #5, !dbg !37
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %90, float 1.600000e+01) #5, !dbg !37
  %95 = fadd float %93, 0x3EB0C6F7A0000000, !dbg !38
  %96 = fadd float %94, 0x3EB0C6F7A0000000, !dbg !38
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i = icmp eq i32 %97, 0, !dbg !36
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %.not1.i = icmp eq i32 %98, 0, !dbg !36
  br i1 %.not.i, label %104, label %99, !dbg !36

99:                                               ; preds = %8
  br i1 %.not1.i, label %102, label %100, !dbg !36

100:                                              ; preds = %99
  %101 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %95) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

102:                                              ; preds = %99
  %103 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %95) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

104:                                              ; preds = %8
  br i1 %.not1.i, label %107, label %105, !dbg !36

105:                                              ; preds = %104
  %106 = tail call float @llvm.nvvm.sqrt.rn.f(float %95) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

107:                                              ; preds = %104
  %108 = tail call float @llvm.nvvm.sqrt.approx.f(float %95) #5, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

__nv_sqrtf.exit:                                  ; preds = %100, %102, %105, %107
  %.0.i = phi float [ %101, %100 ], [ %103, %102 ], [ %106, %105 ], [ %108, %107 ], !dbg !36
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i18 = icmp eq i32 %115, 0, !dbg !36
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #5, !dbg !36
  %.not1.i21 = icmp eq i32 %116, 0, !dbg !36
  br i1 %.not.i18, label %122, label %117, !dbg !36

117:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i21, label %120, label %118, !dbg !36

118:                                              ; preds = %117
  %119 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %96) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

120:                                              ; preds = %117
  %121 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %96) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

122:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i21, label %125, label %123, !dbg !36

123:                                              ; preds = %122
  %124 = tail call float @llvm.nvvm.sqrt.rn.f(float %96) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

125:                                              ; preds = %122
  %126 = tail call float @llvm.nvvm.sqrt.approx.f(float %96) #5, !dbg !36
  br label %__nv_sqrtf.exit22, !dbg !36

__nv_sqrtf.exit22:                                ; preds = %118, %120, %123, %125
  %.0.i20 = phi float [ %119, %118 ], [ %121, %120 ], [ %124, %123 ], [ %126, %125 ], !dbg !36
  %127 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %71, float %.0.i20) #5, !dbg !39
  %128 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float %.0.i20) #5, !dbg !39
  %129 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %73, float %.0.i20) #5, !dbg !39
  %130 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %74, float %.0.i20) #5, !dbg !39
  %131 = fmul float %127, %39, !dbg !40
  %132 = fmul float %128, %40, !dbg !40
  %133 = fmul float %129, %41, !dbg !40
  %134 = fmul float %130, %42, !dbg !40
  %135 = fadd float %131, %49, !dbg !41
  %136 = fadd float %132, %50, !dbg !41
  %137 = fadd float %133, %51, !dbg !41
  %138 = fadd float %134, %52, !dbg !41
  %139 = fmul float %135, 0x3FE6A09E60000000, !dbg !42
  %140 = fmul float %136, 0x3FE6A09E60000000, !dbg !42
  %141 = fmul float %137, 0x3FE6A09E60000000, !dbg !42
  %142 = fmul float %138, 0x3FE6A09E60000000, !dbg !42
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i23 = icmp eq i32 %143, 0, !dbg !43
  %144 = tail call float @llvm.nvvm.fabs.ftz.f(float %139) #5, !dbg !43
  %145 = tail call float @llvm.nvvm.fabs.f(float %139) #5, !dbg !43
  %.0.i24 = select i1 %.not.i23, float %145, float %144, !dbg !43
  %146 = fcmp oge float %.0.i24, 0x3FF00C1FC0000000, !dbg !43
  br i1 %146, label %__nv_fabsf.exit1.i, label %148, !dbg !43

__nv_fabsf.exit1.i:                               ; preds = %__nv_sqrtf.exit22
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i26 = icmp eq i32 %147, 0, !dbg !43
  %.01.i = select i1 %.not1.i26, float %145, float %144, !dbg !43
  br label %__internal_fmad.exit.i, !dbg !43

148:                                              ; preds = %__nv_sqrtf.exit22
  %149 = fmul float %139, %139, !dbg !43
  br label %__internal_fmad.exit.i, !dbg !43

__internal_fmad.exit.i:                           ; preds = %148, %__nv_fabsf.exit1.i
  %150 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %148 ], !dbg !43
  %151 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %148 ], !dbg !43
  %152 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %148 ], !dbg !43
  %153 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %148 ], !dbg !43
  %154 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %148 ], !dbg !43
  %155 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %148 ], !dbg !43
  %156 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %148 ], !dbg !43
  %157 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %149, %148 ], !dbg !43
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i25 = icmp eq i32 %158, 0, !dbg !43
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %156, float %157, float %155) #5, !dbg !43
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %156, float %157, float %155) #5, !dbg !43
  %.02.i = select i1 %.not2.i25, float %160, float %159, !dbg !43
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i = icmp eq i32 %161, 0, !dbg !43
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %157, float %154) #5, !dbg !43
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %157, float %154) #5, !dbg !43
  %.03.i = select i1 %.not3.i, float %163, float %162, !dbg !43
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i = icmp eq i32 %164, 0, !dbg !43
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %157, float %153) #5, !dbg !43
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %157, float %153) #5, !dbg !43
  %.04.i = select i1 %.not4.i, float %166, float %165, !dbg !43
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i = icmp eq i32 %167, 0, !dbg !43
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %157, float %152) #5, !dbg !43
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %157, float %152) #5, !dbg !43
  %.05.i = select i1 %.not5.i, float %169, float %168, !dbg !43
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i = icmp eq i32 %170, 0, !dbg !43
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %157, float %151) #5, !dbg !43
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %157, float %151) #5, !dbg !43
  %.06.i = select i1 %.not6.i, float %172, float %171, !dbg !43
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i = icmp eq i32 %173, 0, !dbg !43
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %157, float %150) #5, !dbg !43
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %157, float %150) #5, !dbg !43
  %.07.i = select i1 %.not7.i, float %175, float %174, !dbg !43
  %176 = fneg float %157, !dbg !43
  %177 = select i1 %146, float %176, float %139, !dbg !43
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i = icmp eq i32 %178, 0, !dbg !43
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %177, float %177) #5, !dbg !43
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %177, float %177) #5, !dbg !43
  %.08.i = select i1 %.not8.i, float %180, float %179, !dbg !43
  br i1 %146, label %181, label %__nv_erff.exit, !dbg !43

181:                                              ; preds = %__internal_fmad.exit.i
  %182 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #5, !dbg !43
  %183 = fsub float 1.000000e+00, %182, !dbg !43
  %184 = bitcast float %183 to i32, !dbg !43
  %185 = bitcast float %139 to i32, !dbg !43
  %186 = and i32 %185, -2147483648, !dbg !43
  %187 = or i32 %186, %184, !dbg !43
  %188 = bitcast i32 %187 to float, !dbg !43
  br label %__nv_erff.exit, !dbg !43

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %181
  %r.0.i = phi float [ %188, %181 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !43
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i27 = icmp eq i32 %189, 0, !dbg !43
  %190 = tail call float @llvm.nvvm.fabs.ftz.f(float %140) #5, !dbg !43
  %191 = tail call float @llvm.nvvm.fabs.f(float %140) #5, !dbg !43
  %.0.i28 = select i1 %.not.i27, float %191, float %190, !dbg !43
  %192 = fcmp oge float %.0.i28, 0x3FF00C1FC0000000, !dbg !43
  br i1 %192, label %__nv_fabsf.exit1.i45, label %194, !dbg !43

__nv_fabsf.exit1.i45:                             ; preds = %__nv_erff.exit
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i46 = icmp eq i32 %193, 0, !dbg !43
  %.01.i47 = select i1 %.not1.i46, float %191, float %190, !dbg !43
  br label %__internal_fmad.exit.i29, !dbg !43

194:                                              ; preds = %__nv_erff.exit
  %195 = fmul float %140, %140, !dbg !43
  br label %__internal_fmad.exit.i29, !dbg !43

__internal_fmad.exit.i29:                         ; preds = %194, %__nv_fabsf.exit1.i45
  %196 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i45 ], [ 0x3FC06EBA60000000, %194 ], !dbg !43
  %197 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i45 ], [ 0xBFD8127580000000, %194 ], !dbg !43
  %198 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i45 ], [ 0x3FBCE315E0000000, %194 ], !dbg !43
  %199 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i45 ], [ 0xBF9B837CE0000000, %194 ], !dbg !43
  %200 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i45 ], [ 0x3F755ABD40000000, %194 ], !dbg !43
  %201 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i45 ], [ 0xBF4AE9A400000000, %194 ], !dbg !43
  %202 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i45 ], [ 0x3F163D2D40000000, %194 ], !dbg !43
  %203 = phi float [ %.01.i47, %__nv_fabsf.exit1.i45 ], [ %195, %194 ], !dbg !43
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i30 = icmp eq i32 %204, 0, !dbg !43
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %202, float %203, float %201) #5, !dbg !43
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %202, float %203, float %201) #5, !dbg !43
  %.02.i31 = select i1 %.not2.i30, float %206, float %205, !dbg !43
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i32 = icmp eq i32 %207, 0, !dbg !43
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float %203, float %200) #5, !dbg !43
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float %203, float %200) #5, !dbg !43
  %.03.i33 = select i1 %.not3.i32, float %209, float %208, !dbg !43
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i34 = icmp eq i32 %210, 0, !dbg !43
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i33, float %203, float %199) #5, !dbg !43
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i33, float %203, float %199) #5, !dbg !43
  %.04.i35 = select i1 %.not4.i34, float %212, float %211, !dbg !43
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i36 = icmp eq i32 %213, 0, !dbg !43
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %203, float %198) #5, !dbg !43
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %203, float %198) #5, !dbg !43
  %.05.i37 = select i1 %.not5.i36, float %215, float %214, !dbg !43
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i38 = icmp eq i32 %216, 0, !dbg !43
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i37, float %203, float %197) #5, !dbg !43
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i37, float %203, float %197) #5, !dbg !43
  %.06.i39 = select i1 %.not6.i38, float %218, float %217, !dbg !43
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i40 = icmp eq i32 %219, 0, !dbg !43
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i39, float %203, float %196) #5, !dbg !43
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i39, float %203, float %196) #5, !dbg !43
  %.07.i41 = select i1 %.not7.i40, float %221, float %220, !dbg !43
  %222 = fneg float %203, !dbg !43
  %223 = select i1 %192, float %222, float %140, !dbg !43
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i42 = icmp eq i32 %224, 0, !dbg !43
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i41, float %223, float %223) #5, !dbg !43
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i41, float %223, float %223) #5, !dbg !43
  %.08.i43 = select i1 %.not8.i42, float %226, float %225, !dbg !43
  br i1 %192, label %227, label %__nv_erff.exit48, !dbg !43

227:                                              ; preds = %__internal_fmad.exit.i29
  %228 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i43) #5, !dbg !43
  %229 = fsub float 1.000000e+00, %228, !dbg !43
  %230 = bitcast float %229 to i32, !dbg !43
  %231 = bitcast float %140 to i32, !dbg !43
  %232 = and i32 %231, -2147483648, !dbg !43
  %233 = or i32 %232, %230, !dbg !43
  %234 = bitcast i32 %233 to float, !dbg !43
  br label %__nv_erff.exit48, !dbg !43

__nv_erff.exit48:                                 ; preds = %__internal_fmad.exit.i29, %227
  %r.0.i44 = phi float [ %234, %227 ], [ %.08.i43, %__internal_fmad.exit.i29 ], !dbg !43
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i49 = icmp eq i32 %235, 0, !dbg !43
  %236 = tail call float @llvm.nvvm.fabs.ftz.f(float %141) #5, !dbg !43
  %237 = tail call float @llvm.nvvm.fabs.f(float %141) #5, !dbg !43
  %.0.i50 = select i1 %.not.i49, float %237, float %236, !dbg !43
  %238 = fcmp oge float %.0.i50, 0x3FF00C1FC0000000, !dbg !43
  br i1 %238, label %__nv_fabsf.exit1.i67, label %240, !dbg !43

__nv_fabsf.exit1.i67:                             ; preds = %__nv_erff.exit48
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i68 = icmp eq i32 %239, 0, !dbg !43
  %.01.i69 = select i1 %.not1.i68, float %237, float %236, !dbg !43
  br label %__internal_fmad.exit.i51, !dbg !43

240:                                              ; preds = %__nv_erff.exit48
  %241 = fmul float %141, %141, !dbg !43
  br label %__internal_fmad.exit.i51, !dbg !43

__internal_fmad.exit.i51:                         ; preds = %240, %__nv_fabsf.exit1.i67
  %242 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i67 ], [ 0x3FC06EBA60000000, %240 ], !dbg !43
  %243 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i67 ], [ 0xBFD8127580000000, %240 ], !dbg !43
  %244 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i67 ], [ 0x3FBCE315E0000000, %240 ], !dbg !43
  %245 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i67 ], [ 0xBF9B837CE0000000, %240 ], !dbg !43
  %246 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i67 ], [ 0x3F755ABD40000000, %240 ], !dbg !43
  %247 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i67 ], [ 0xBF4AE9A400000000, %240 ], !dbg !43
  %248 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i67 ], [ 0x3F163D2D40000000, %240 ], !dbg !43
  %249 = phi float [ %.01.i69, %__nv_fabsf.exit1.i67 ], [ %241, %240 ], !dbg !43
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i52 = icmp eq i32 %250, 0, !dbg !43
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %248, float %249, float %247) #5, !dbg !43
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %248, float %249, float %247) #5, !dbg !43
  %.02.i53 = select i1 %.not2.i52, float %252, float %251, !dbg !43
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i54 = icmp eq i32 %253, 0, !dbg !43
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i53, float %249, float %246) #5, !dbg !43
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i53, float %249, float %246) #5, !dbg !43
  %.03.i55 = select i1 %.not3.i54, float %255, float %254, !dbg !43
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i56 = icmp eq i32 %256, 0, !dbg !43
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i55, float %249, float %245) #5, !dbg !43
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i55, float %249, float %245) #5, !dbg !43
  %.04.i57 = select i1 %.not4.i56, float %258, float %257, !dbg !43
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i58 = icmp eq i32 %259, 0, !dbg !43
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i57, float %249, float %244) #5, !dbg !43
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i57, float %249, float %244) #5, !dbg !43
  %.05.i59 = select i1 %.not5.i58, float %261, float %260, !dbg !43
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i60 = icmp eq i32 %262, 0, !dbg !43
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i59, float %249, float %243) #5, !dbg !43
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i59, float %249, float %243) #5, !dbg !43
  %.06.i61 = select i1 %.not6.i60, float %264, float %263, !dbg !43
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i62 = icmp eq i32 %265, 0, !dbg !43
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i61, float %249, float %242) #5, !dbg !43
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i61, float %249, float %242) #5, !dbg !43
  %.07.i63 = select i1 %.not7.i62, float %267, float %266, !dbg !43
  %268 = fneg float %249, !dbg !43
  %269 = select i1 %238, float %268, float %141, !dbg !43
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i64 = icmp eq i32 %270, 0, !dbg !43
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i63, float %269, float %269) #5, !dbg !43
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i63, float %269, float %269) #5, !dbg !43
  %.08.i65 = select i1 %.not8.i64, float %272, float %271, !dbg !43
  br i1 %238, label %273, label %__nv_erff.exit70, !dbg !43

273:                                              ; preds = %__internal_fmad.exit.i51
  %274 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i65) #5, !dbg !43
  %275 = fsub float 1.000000e+00, %274, !dbg !43
  %276 = bitcast float %275 to i32, !dbg !43
  %277 = bitcast float %141 to i32, !dbg !43
  %278 = and i32 %277, -2147483648, !dbg !43
  %279 = or i32 %278, %276, !dbg !43
  %280 = bitcast i32 %279 to float, !dbg !43
  br label %__nv_erff.exit70, !dbg !43

__nv_erff.exit70:                                 ; preds = %__internal_fmad.exit.i51, %273
  %r.0.i66 = phi float [ %280, %273 ], [ %.08.i65, %__internal_fmad.exit.i51 ], !dbg !43
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i71 = icmp eq i32 %281, 0, !dbg !43
  %282 = tail call float @llvm.nvvm.fabs.ftz.f(float %142) #5, !dbg !43
  %283 = tail call float @llvm.nvvm.fabs.f(float %142) #5, !dbg !43
  %.0.i72 = select i1 %.not.i71, float %283, float %282, !dbg !43
  %284 = fcmp oge float %.0.i72, 0x3FF00C1FC0000000, !dbg !43
  br i1 %284, label %__nv_fabsf.exit1.i89, label %286, !dbg !43

__nv_fabsf.exit1.i89:                             ; preds = %__nv_erff.exit70
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not1.i90 = icmp eq i32 %285, 0, !dbg !43
  %.01.i91 = select i1 %.not1.i90, float %283, float %282, !dbg !43
  br label %__internal_fmad.exit.i73, !dbg !43

286:                                              ; preds = %__nv_erff.exit70
  %287 = fmul float %142, %142, !dbg !43
  br label %__internal_fmad.exit.i73, !dbg !43

__internal_fmad.exit.i73:                         ; preds = %286, %__nv_fabsf.exit1.i89
  %288 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i89 ], [ 0x3FC06EBA60000000, %286 ], !dbg !43
  %289 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i89 ], [ 0xBFD8127580000000, %286 ], !dbg !43
  %290 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i89 ], [ 0x3FBCE315E0000000, %286 ], !dbg !43
  %291 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i89 ], [ 0xBF9B837CE0000000, %286 ], !dbg !43
  %292 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i89 ], [ 0x3F755ABD40000000, %286 ], !dbg !43
  %293 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i89 ], [ 0xBF4AE9A400000000, %286 ], !dbg !43
  %294 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i89 ], [ 0x3F163D2D40000000, %286 ], !dbg !43
  %295 = phi float [ %.01.i91, %__nv_fabsf.exit1.i89 ], [ %287, %286 ], !dbg !43
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not2.i74 = icmp eq i32 %296, 0, !dbg !43
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %294, float %295, float %293) #5, !dbg !43
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %294, float %295, float %293) #5, !dbg !43
  %.02.i75 = select i1 %.not2.i74, float %298, float %297, !dbg !43
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not3.i76 = icmp eq i32 %299, 0, !dbg !43
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i75, float %295, float %292) #5, !dbg !43
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i75, float %295, float %292) #5, !dbg !43
  %.03.i77 = select i1 %.not3.i76, float %301, float %300, !dbg !43
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not4.i78 = icmp eq i32 %302, 0, !dbg !43
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i77, float %295, float %291) #5, !dbg !43
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i77, float %295, float %291) #5, !dbg !43
  %.04.i79 = select i1 %.not4.i78, float %304, float %303, !dbg !43
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not5.i80 = icmp eq i32 %305, 0, !dbg !43
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i79, float %295, float %290) #5, !dbg !43
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i79, float %295, float %290) #5, !dbg !43
  %.05.i81 = select i1 %.not5.i80, float %307, float %306, !dbg !43
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not6.i82 = icmp eq i32 %308, 0, !dbg !43
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i81, float %295, float %289) #5, !dbg !43
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i81, float %295, float %289) #5, !dbg !43
  %.06.i83 = select i1 %.not6.i82, float %310, float %309, !dbg !43
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not7.i84 = icmp eq i32 %311, 0, !dbg !43
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i83, float %295, float %288) #5, !dbg !43
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i83, float %295, float %288) #5, !dbg !43
  %.07.i85 = select i1 %.not7.i84, float %313, float %312, !dbg !43
  %314 = fneg float %295, !dbg !43
  %315 = select i1 %284, float %314, float %142, !dbg !43
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not8.i86 = icmp eq i32 %316, 0, !dbg !43
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i85, float %315, float %315) #5, !dbg !43
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i85, float %315, float %315) #5, !dbg !43
  %.08.i87 = select i1 %.not8.i86, float %318, float %317, !dbg !43
  br i1 %284, label %319, label %__nv_erff.exit92, !dbg !43

319:                                              ; preds = %__internal_fmad.exit.i73
  %320 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i87) #5, !dbg !43
  %321 = fsub float 1.000000e+00, %320, !dbg !43
  %322 = bitcast float %321 to i32, !dbg !43
  %323 = bitcast float %142 to i32, !dbg !43
  %324 = and i32 %323, -2147483648, !dbg !43
  %325 = or i32 %324, %322, !dbg !43
  %326 = bitcast i32 %325 to float, !dbg !43
  br label %__nv_erff.exit92, !dbg !43

__nv_erff.exit92:                                 ; preds = %__internal_fmad.exit.i73, %319
  %r.0.i88 = phi float [ %326, %319 ], [ %.08.i87, %__internal_fmad.exit.i73 ], !dbg !43
  %327 = fmul float %138, 5.000000e-01, !dbg !44
  %328 = fmul float %137, 5.000000e-01, !dbg !44
  %329 = fmul float %136, 5.000000e-01, !dbg !44
  %330 = fmul float %135, 5.000000e-01, !dbg !44
  %331 = or disjoint i32 %10, %14, !dbg !13
  %332 = icmp slt i32 %331, 1024, !dbg !14
  %333 = fadd float %r.0.i, 1.000000e+00, !dbg !45
  %334 = fadd float %r.0.i44, 1.000000e+00, !dbg !45
  %335 = fadd float %r.0.i66, 1.000000e+00, !dbg !45
  %336 = fadd float %r.0.i88, 1.000000e+00, !dbg !45
  %337 = fmul float %330, %333, !dbg !46
  %338 = fmul float %329, %334, !dbg !46
  %339 = fmul float %328, %335, !dbg !46
  %340 = fmul float %327, %336, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !47
  %341 = sext i32 %331 to i64, !dbg !48
  %342 = getelementptr float, ptr addrspace(1) %0, i64 %341, !dbg !48
  %343 = and i32 %11, 96, !dbg !49
  %344 = icmp eq i32 %343, 0, !dbg !49
  %345 = bitcast float %69 to i32, !dbg !49
  %346 = and i1 %344, %332, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %345, ptr addrspace(1) %342, i1 %346) #5, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %347 = getelementptr float, ptr addrspace(1) %1, i64 %341, !dbg !51
  %348 = bitcast float %.0.i to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %348, ptr addrspace(1) %347, i1 %346) #5, !dbg !52
  %349 = getelementptr float, ptr addrspace(1) %2, i64 %21, !dbg !53
  %350 = bitcast float %337 to i32, !dbg !54
  %351 = bitcast float %338 to i32, !dbg !54
  %352 = bitcast float %339 to i32, !dbg !54
  %353 = bitcast float %340 to i32, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %350, i32 %351, i32 %352, i32 %353, ptr addrspace(1) %349, i1 %16) #5, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7tef54z25uumihhncepm2cyxrnfh6jcgraxkmxn54dlydxrqgmb.py", directory: "inductor_cache/7t")
!4 = !{ptr @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2", linkageName: "triton_per_fused_add_div_gelu_mean_mul_pow_sqrt_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 38, scope: !7)
!17 = !DILocation(line: 31, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 43, scope: !7)
!20 = !DILocation(line: 32, column: 31, scope: !7)
!21 = !DILocation(line: 32, column: 36, scope: !7)
!22 = !DILocation(line: 33, column: 31, scope: !7)
!23 = !DILocation(line: 33, column: 36, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !28)
!25 = distinct !DILexicalBlockFile(scope: !27, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!28 = !DILocation(line: 36, column: 24, scope: !7)
!29 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !28)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 18, scope: !7)
!32 = !DILocation(line: 40, column: 18, scope: !7)
!33 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !34)
!34 = !DILocation(line: 43, column: 26, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !27, inlinedAt: !34)
!36 = !DILocation(line: 47, column: 27, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 46, column: 20, scope: !7)
!39 = !DILocation(line: 48, column: 19, scope: !7)
!40 = !DILocation(line: 49, column: 20, scope: !7)
!41 = !DILocation(line: 50, column: 20, scope: !7)
!42 = !DILocation(line: 54, column: 20, scope: !7)
!43 = !DILocation(line: 55, column: 26, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 57, column: 20, scope: !7)
!46 = !DILocation(line: 58, column: 20, scope: !7)
!47 = !DILocation(line: 59, column: 4, scope: !7)
!48 = !DILocation(line: 60, column: 28, scope: !7)
!49 = !DILocation(line: 60, column: 39, scope: !7)
!50 = !DILocation(line: 61, column: 4, scope: !7)
!51 = !DILocation(line: 62, column: 28, scope: !7)
!52 = !DILocation(line: 62, column: 40, scope: !7)
!53 = !DILocation(line: 63, column: 28, scope: !7)
!54 = !DILocation(line: 63, column: 48, scope: !7)
!55 = !DILocation(line: 63, column: 4, scope: !7)
