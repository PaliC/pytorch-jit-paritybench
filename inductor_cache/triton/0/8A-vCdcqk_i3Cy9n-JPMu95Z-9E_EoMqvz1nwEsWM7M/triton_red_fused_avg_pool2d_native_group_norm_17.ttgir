#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#loc = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":54:44)
#loc68 = loc(callsite(#loc1 at #loc42))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_avg_pool2d_native_group_norm_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2.500000e-01> : tensor<1x512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<5.120000e+02> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<512> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<1x512xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<32> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<17> : tensor<1x512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<1.000000e+00> : tensor<1x512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x512xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<512xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x512xi32, #blocked1> loc(#loc4)
    %6 = arith.cmpi slt, %4, %cst_4 : tensor<1x512xi32, #blocked> loc(#loc5)
    %7 = arith.cmpi slt, %5, %cst_5 : tensor<1x512xi32, #blocked1> loc(#loc5)
    %8 = arith.remsi %4, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc6)
    %9 = arith.divsi %4, %cst_6 : tensor<1x512xi32, #blocked> loc(#loc7)
    %10 = arith.muli %8, %cst_7 : tensor<1x512xi32, #blocked> loc(#loc8)
    %11 = arith.muli %9, %cst_8 : tensor<1x512xi32, #blocked> loc(#loc9)
    %12 = arith.addi %10, %11 : tensor<1x512xi32, #blocked> loc(#loc10)
    %13 = arith.muli %0, %c2048_i32 : i32 loc(#loc11)
    %14 = tt.splat %13 : i32 -> tensor<1x512xi32, #blocked> loc(#loc12)
    %15 = arith.addi %12, %14 : tensor<1x512xi32, #blocked> loc(#loc12)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %17 = tt.addptr %16, %15 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc13)
    %18 = tt.splat %1 : i1 -> tensor<1x512xi1, #blocked> loc(#loc14)
    %19 = tt.splat %1 : i1 -> tensor<1x512xi1, #blocked1> loc(#loc14)
    %20 = arith.andi %6, %18 : tensor<1x512xi1, #blocked> loc(#loc14)
    %21 = arith.andi %7, %19 : tensor<1x512xi1, #blocked1> loc(#loc14)
    %22 = tt.load %17, %20, %cst evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %23 = arith.addi %10, %cst_9 : tensor<1x512xi32, #blocked> loc(#loc16)
    %24 = arith.addi %23, %11 : tensor<1x512xi32, #blocked> loc(#loc17)
    %25 = arith.addi %24, %14 : tensor<1x512xi32, #blocked> loc(#loc18)
    %26 = tt.addptr %16, %25 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc19)
    %27 = tt.load %26, %20, %cst evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %28 = arith.addi %10, %cst_10 : tensor<1x512xi32, #blocked> loc(#loc21)
    %29 = arith.addi %28, %11 : tensor<1x512xi32, #blocked> loc(#loc22)
    %30 = arith.addi %29, %14 : tensor<1x512xi32, #blocked> loc(#loc23)
    %31 = tt.addptr %16, %30 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc24)
    %32 = tt.load %31, %20, %cst evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %33 = arith.addi %10, %cst_11 : tensor<1x512xi32, #blocked> loc(#loc26)
    %34 = arith.addi %33, %11 : tensor<1x512xi32, #blocked> loc(#loc27)
    %35 = arith.addi %34, %14 : tensor<1x512xi32, #blocked> loc(#loc28)
    %36 = tt.addptr %16, %35 : tensor<1x512x!tt.ptr<f32>, #blocked>, tensor<1x512xi32, #blocked> loc(#loc29)
    %37 = tt.load %36, %20, %cst evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>, #blocked> loc(#loc30)
    %38 = arith.addf %27, %22 : tensor<1x512xf32, #blocked> loc(#loc31)
    %39 = arith.addf %32, %38 : tensor<1x512xf32, #blocked> loc(#loc32)
    %40 = arith.addf %37, %39 : tensor<1x512xf32, #blocked> loc(#loc33)
    %41 = arith.mulf %40, %cst_0 : tensor<1x512xf32, #blocked> loc(#loc34)
    %42 = arith.select %20, %41, %cst : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc35)
    %43 = arith.select %20, %cst_12, %cst : tensor<1x512xi1, #blocked>, tensor<1x512xf32, #blocked> loc(#loc36)
    %44 = arith.muli %0, %c512_i32 : i32 loc(#loc37)
    %45 = tt.splat %44 : i32 -> tensor<1x512xi32, #blocked1> loc(#loc38)
    %46 = arith.addi %5, %45 : tensor<1x512xi32, #blocked1> loc(#loc38)
    %47 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc39)
    %48 = tt.addptr %47, %46 : tensor<1x512x!tt.ptr<f32>, #blocked1>, tensor<1x512xi32, #blocked1> loc(#loc39)
    %49 = triton_gpu.convert_layout %41 : tensor<1x512xf32, #blocked> -> tensor<1x512xf32, #blocked1> loc(#loc40)
    tt.store %48, %49, %21 : tensor<1x512x!tt.ptr<f32>, #blocked1> loc(#loc40)
    %50:3 = "tt.reduce"(%42, %cst, %43) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc42)), %arg8: f32 loc(callsite(#loc1 at #loc42)), %arg9: f32 loc(callsite(#loc1 at #loc42)), %arg10: f32 loc(callsite(#loc1 at #loc42)), %arg11: f32 loc(callsite(#loc1 at #loc42)), %arg12: f32 loc(callsite(#loc1 at #loc42))):
      %63 = arith.subf %arg10, %arg7 : f32 loc(#loc81)
      %64 = arith.addf %arg9, %arg12 : f32 loc(#loc82)
      %65 = arith.cmpf oeq, %64, %cst_3 : f32 loc(#loc83)
      %66 = arith.divf %arg12, %64 : f32 loc(#loc84)
      %67 = arith.select %65, %cst_3, %66 : f32 loc(#loc85)
      %68 = arith.mulf %63, %67 : f32 loc(#loc86)
      %69 = arith.addf %arg7, %68 : f32 loc(#loc87)
      %70 = arith.addf %arg8, %arg11 : f32 loc(#loc88)
      %71 = arith.mulf %63, %63 : f32 loc(#loc89)
      %72 = arith.mulf %71, %arg9 : f32 loc(#loc90)
      %73 = arith.mulf %72, %67 : f32 loc(#loc91)
      %74 = arith.addf %70, %73 : f32 loc(#loc92)
      tt.reduce.return %69, %74, %64 : f32, f32, f32 loc(#loc67)
    }) : (tensor<1x512xf32, #blocked>, tensor<1x512xf32, #blocked>, tensor<1x512xf32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc67)
    %51 = tt.expand_dims %50#0 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc55)
    %52 = tt.expand_dims %50#1 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc56)
    %53 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc57)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc58)
    %55 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc58)
    tt.store %54, %51, %55 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc58)
    %56 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc59)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc60)
    tt.store %57, %52, %55 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc60)
    %58 = arith.divf %52, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc61)
    %59 = arith.addf %58, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc62)
    %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc63)
    %61 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc64)
    %62 = tt.splat %61 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc65)
    tt.store %62, %60, %55 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc65)
    tt.return loc(#loc66)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":22:28)
#loc3 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":24:21)
#loc4 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":25:33)
#loc5 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":32:25)
#loc6 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":33:23)
#loc7 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":34:23)
#loc8 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:36)
#loc9 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:44)
#loc10 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:41)
#loc11 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:54)
#loc12 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:49)
#loc13 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:34)
#loc14 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:67)
#loc15 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":36:59)
#loc16 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":37:38)
#loc17 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":37:45)
#loc18 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":37:53)
#loc19 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":37:34)
#loc20 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":37:63)
#loc21 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":38:39)
#loc22 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":38:46)
#loc23 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":38:54)
#loc24 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":38:34)
#loc25 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":38:64)
#loc26 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":39:39)
#loc27 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":39:46)
#loc28 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":39:54)
#loc29 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":39:34)
#loc30 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":39:64)
#loc31 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":40:22)
#loc32 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":41:22)
#loc33 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":42:22)
#loc34 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":44:22)
#loc35 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":49:62)
#loc36 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":51:66)
#loc37 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":52:38)
#loc38 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":52:34)
#loc39 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":52:29)
#loc40 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":52:49)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc55 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":56:22)
#loc56 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":57:22)
#loc57 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":59:25)
#loc58 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":59:37)
#loc59 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":60:25)
#loc60 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":60:37)
#loc61 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":62:20)
#loc62 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":64:20)
#loc63 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":65:28)
#loc64 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":66:25)
#loc65 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":66:37)
#loc66 = loc("inductor_cache/m3/cm3tzt4o3gabxzg5ywte3rebsnjyrnhzep4xwf2ajb2aqnsqepab.py":66:4)
#loc67 = loc(callsite(#loc41 at #loc42))
#loc69 = loc(callsite(#loc43 at #loc41))
#loc70 = loc(callsite(#loc44 at #loc41))
#loc71 = loc(callsite(#loc45 at #loc41))
#loc72 = loc(callsite(#loc46 at #loc41))
#loc73 = loc(callsite(#loc47 at #loc41))
#loc74 = loc(callsite(#loc48 at #loc41))
#loc75 = loc(callsite(#loc49 at #loc41))
#loc76 = loc(callsite(#loc50 at #loc41))
#loc77 = loc(callsite(#loc51 at #loc41))
#loc78 = loc(callsite(#loc52 at #loc41))
#loc79 = loc(callsite(#loc53 at #loc41))
#loc80 = loc(callsite(#loc54 at #loc41))
#loc81 = loc(callsite(#loc69 at #loc42))
#loc82 = loc(callsite(#loc70 at #loc42))
#loc83 = loc(callsite(#loc71 at #loc42))
#loc84 = loc(callsite(#loc72 at #loc42))
#loc85 = loc(callsite(#loc73 at #loc42))
#loc86 = loc(callsite(#loc74 at #loc42))
#loc87 = loc(callsite(#loc75 at #loc42))
#loc88 = loc(callsite(#loc76 at #loc42))
#loc89 = loc(callsite(#loc77 at #loc42))
#loc90 = loc(callsite(#loc78 at #loc42))
#loc91 = loc(callsite(#loc79 at #loc42))
#loc92 = loc(callsite(#loc80 at #loc42))
