; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 7, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 127, !dbg !12
  %12 = or disjoint i32 %9, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 4, !dbg !15
  %15 = srem i32 %14, 4, !dbg !16
  %16 = mul i32 %14, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = sdiv i32 %12, 16, !dbg !18
  %18 = srem i32 %17, 4, !dbg !19
  %19 = sdiv i32 %12, 64, !dbg !20
  %20 = sext i32 %15 to i64, !dbg !21
  %21 = getelementptr i64, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %21, i1 %13) #1, !dbg !22
  %23 = sext i32 %.decomposed to i64, !dbg !23
  %24 = getelementptr i64, ptr addrspace(1) %1, i64 %23, !dbg !23
  %25 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %24, i1 %13) #1, !dbg !24
  %26 = getelementptr i64, ptr addrspace(1) %3, i64 %23, !dbg !25
  %27 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %26, i1 %13) #1, !dbg !26
  %28 = getelementptr float, ptr addrspace(1) %4, i64 %23, !dbg !27
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %13) #1, !dbg !28
  %30 = bitcast i32 %29 to float, !dbg !28
  %31 = add i64 %22, 6, !dbg !29
  %32 = icmp slt i64 %22, 0, !dbg !30
  %33 = select i1 %32, i64 %31, i64 %22, !dbg !31
  %34 = icmp slt i64 %25, 0, !dbg !32
  %35 = shl i64 %25, 2, !dbg !33
  %36 = add i64 %35, 24, !dbg !33
  %37 = select i1 %34, i64 %36, i64 %35, !dbg !33
  %38 = sext i32 %18 to i64, !dbg !34
  %39 = mul i64 %33, 24, !dbg !35
  %40 = mul i32 %19, 144, !dbg !36
  %41 = sext i32 %40 to i64, !dbg !37
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !38
  %43 = getelementptr float, ptr addrspace(1) %42, i64 %38, !dbg !38
  %44 = getelementptr float, ptr addrspace(1) %43, i64 %39, !dbg !38
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %41, !dbg !38
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %13) #1, !dbg !39
  %47 = bitcast i32 %46 to float, !dbg !39
  %48 = icmp slt i64 %27, 0, !dbg !40
  %49 = shl i64 %27, 2, !dbg !41
  %50 = add i64 %49, 24, !dbg !41
  %51 = select i1 %48, i64 %50, i64 %49, !dbg !41
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !42
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %38, !dbg !42
  %54 = getelementptr float, ptr addrspace(1) %53, i64 %39, !dbg !42
  %55 = getelementptr float, ptr addrspace(1) %54, i64 %41, !dbg !42
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %13) #1, !dbg !43
  %57 = bitcast i32 %56 to float, !dbg !43
  %58 = fsub float %57, %47, !dbg !44
  %59 = fmul float %58, %30, !dbg !45
  %60 = fadd float %59, %47, !dbg !46
  %61 = sext i32 %12 to i64, !dbg !47
  %62 = getelementptr float, ptr addrspace(1) %5, i64 %61, !dbg !47
  %63 = bitcast float %60 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %62, i1 %13) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbc5nduagfre352iwj7yd4cuqjtn6za5sobc6w3bnkckyxe3fxti.py", directory: "inductor_cache/bc")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_19", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 21, scope: !7)
!19 = !DILocation(line: 26, column: 27, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 32, scope: !7)
!32 = !DILocation(line: 38, column: 18, scope: !7)
!33 = !DILocation(line: 40, column: 37, scope: !7)
!34 = !DILocation(line: 40, column: 35, scope: !7)
!35 = !DILocation(line: 40, column: 47, scope: !7)
!36 = !DILocation(line: 40, column: 58, scope: !7)
!37 = !DILocation(line: 40, column: 54, scope: !7)
!38 = !DILocation(line: 40, column: 30, scope: !7)
!39 = !DILocation(line: 40, column: 63, scope: !7)
!40 = !DILocation(line: 42, column: 20, scope: !7)
!41 = !DILocation(line: 44, column: 38, scope: !7)
!42 = !DILocation(line: 44, column: 31, scope: !7)
!43 = !DILocation(line: 44, column: 65, scope: !7)
!44 = !DILocation(line: 45, column: 20, scope: !7)
!45 = !DILocation(line: 46, column: 20, scope: !7)
!46 = !DILocation(line: 47, column: 19, scope: !7)
!47 = !DILocation(line: 48, column: 25, scope: !7)
!48 = !DILocation(line: 48, column: 37, scope: !7)
!49 = !DILocation(line: 48, column: 4, scope: !7)
