#loc = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3840> : tensor<1024xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1428864> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<1024xi8> loc(#loc1)
    %cst_2 = arith.constant dense<7> : tensor<1024xi8> loc(#loc1)
    %cst_3 = arith.constant dense<6> : tensor<1024xi8> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<1024xi8> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<1024xi8> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<1024xi8> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<1024xi8> loc(#loc1)
    %cst_8 = arith.constant dense<0> : tensor<1024xi8> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<1024xi8> loc(#loc1)
    %cst_10 = arith.constant dense<250> : tensor<1024xi32> loc(#loc1)
    %cst_11 = arith.constant dense<249> : tensor<1024xi32> loc(#loc1)
    %cst_12 = arith.constant dense<126> : tensor<1024xi32> loc(#loc1)
    %cst_13 = arith.constant dense<125> : tensor<1024xi32> loc(#loc1)
    %cst_14 = arith.constant dense<124> : tensor<1024xi32> loc(#loc1)
    %cst_15 = arith.constant dense<1> : tensor<1024xi32> loc(#loc1)
    %cst_16 = arith.constant dense<15376> : tensor<1024xi32> loc(#loc1)
    %cst_17 = arith.constant dense<248> : tensor<1024xi32> loc(#loc1)
    %cst_18 = arith.constant dense<2> : tensor<1024xi32> loc(#loc1)
    %cst_19 = arith.constant dense<714432> : tensor<1024xi32> loc(#loc1)
    %cst_20 = arith.constant dense<3721> : tensor<1024xi32> loc(#loc1)
    %cst_21 = arith.constant dense<61> : tensor<1024xi32> loc(#loc1)
    %cst_22 = arith.constant dense<2857728> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_22 : tensor<1024xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_21 : tensor<1024xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_21 : tensor<1024xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_21 : tensor<1024xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_20 : tensor<1024xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_19 : tensor<1024xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_19 : tensor<1024xi32> loc(#loc12)
    %12 = arith.remsi %4, %cst_20 : tensor<1024xi32> loc(#loc13)
    %13 = arith.muli %6, %cst_18 : tensor<1024xi32> loc(#loc14)
    %14 = arith.muli %8, %cst_17 : tensor<1024xi32> loc(#loc15)
    %15 = arith.addi %13, %14 : tensor<1024xi32> loc(#loc16)
    %16 = arith.muli %9, %cst_16 : tensor<1024xi32> loc(#loc17)
    %17 = arith.addi %15, %16 : tensor<1024xi32> loc(#loc18)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc19)
    %19 = tt.addptr %18, %17 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc19)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %13, %cst_15 : tensor<1024xi32> loc(#loc21)
    %22 = arith.addi %21, %14 : tensor<1024xi32> loc(#loc22)
    %23 = arith.addi %22, %16 : tensor<1024xi32> loc(#loc23)
    %24 = tt.addptr %18, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc24)
    %25 = tt.load %24, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc25)
    %26 = arith.addi %13, %cst_18 : tensor<1024xi32> loc(#loc26)
    %27 = arith.addi %26, %14 : tensor<1024xi32> loc(#loc27)
    %28 = arith.addi %27, %16 : tensor<1024xi32> loc(#loc28)
    %29 = tt.addptr %18, %28 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc29)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc30)
    %31 = arith.addi %13, %cst_14 : tensor<1024xi32> loc(#loc31)
    %32 = arith.addi %31, %14 : tensor<1024xi32> loc(#loc32)
    %33 = arith.addi %32, %16 : tensor<1024xi32> loc(#loc33)
    %34 = tt.addptr %18, %33 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc34)
    %35 = tt.load %34, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc35)
    %36 = arith.addi %13, %cst_13 : tensor<1024xi32> loc(#loc36)
    %37 = arith.addi %36, %14 : tensor<1024xi32> loc(#loc37)
    %38 = arith.addi %37, %16 : tensor<1024xi32> loc(#loc38)
    %39 = tt.addptr %18, %38 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc39)
    %40 = tt.load %39, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc40)
    %41 = arith.addi %13, %cst_12 : tensor<1024xi32> loc(#loc41)
    %42 = arith.addi %41, %14 : tensor<1024xi32> loc(#loc42)
    %43 = arith.addi %42, %16 : tensor<1024xi32> loc(#loc43)
    %44 = tt.addptr %18, %43 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc44)
    %45 = tt.load %44, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc45)
    %46 = arith.addi %13, %cst_17 : tensor<1024xi32> loc(#loc46)
    %47 = arith.addi %46, %14 : tensor<1024xi32> loc(#loc47)
    %48 = arith.addi %47, %16 : tensor<1024xi32> loc(#loc48)
    %49 = tt.addptr %18, %48 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc49)
    %50 = tt.load %49, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc50)
    %51 = arith.addi %13, %cst_11 : tensor<1024xi32> loc(#loc51)
    %52 = arith.addi %51, %14 : tensor<1024xi32> loc(#loc52)
    %53 = arith.addi %52, %16 : tensor<1024xi32> loc(#loc53)
    %54 = tt.addptr %18, %53 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc54)
    %55 = tt.load %54, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc55)
    %56 = arith.addi %13, %cst_10 : tensor<1024xi32> loc(#loc56)
    %57 = arith.addi %56, %14 : tensor<1024xi32> loc(#loc57)
    %58 = arith.addi %57, %16 : tensor<1024xi32> loc(#loc58)
    %59 = tt.addptr %18, %58 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc59)
    %60 = tt.load %59, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc60)
    %61 = arith.cmpf ogt, %25, %20 : tensor<1024xf32> loc(#loc90)
    %62 = arith.cmpf une, %25, %25 : tensor<1024xf32> loc(#loc91)
    %63 = arith.ori %61, %62 : tensor<1024xi1> loc(#loc92)
    %64 = arith.select %63, %25, %20 : tensor<1024xi1>, tensor<1024xf32> loc(#loc93)
    %65 = arith.cmpf ogt, %30, %64 : tensor<1024xf32> loc(#loc94)
    %66 = arith.cmpf une, %30, %30 : tensor<1024xf32> loc(#loc95)
    %67 = arith.ori %65, %66 : tensor<1024xi1> loc(#loc96)
    %68 = arith.select %67, %30, %64 : tensor<1024xi1>, tensor<1024xf32> loc(#loc97)
    %69 = arith.cmpf ogt, %35, %68 : tensor<1024xf32> loc(#loc98)
    %70 = arith.cmpf une, %35, %35 : tensor<1024xf32> loc(#loc99)
    %71 = arith.ori %69, %70 : tensor<1024xi1> loc(#loc100)
    %72 = arith.select %71, %35, %68 : tensor<1024xi1>, tensor<1024xf32> loc(#loc101)
    %73 = arith.cmpf ogt, %40, %72 : tensor<1024xf32> loc(#loc102)
    %74 = arith.cmpf une, %40, %40 : tensor<1024xf32> loc(#loc103)
    %75 = arith.ori %73, %74 : tensor<1024xi1> loc(#loc104)
    %76 = arith.select %75, %40, %72 : tensor<1024xi1>, tensor<1024xf32> loc(#loc105)
    %77 = arith.cmpf ogt, %45, %76 : tensor<1024xf32> loc(#loc106)
    %78 = arith.cmpf une, %45, %45 : tensor<1024xf32> loc(#loc107)
    %79 = arith.ori %77, %78 : tensor<1024xi1> loc(#loc108)
    %80 = arith.select %79, %45, %76 : tensor<1024xi1>, tensor<1024xf32> loc(#loc109)
    %81 = arith.cmpf ogt, %50, %80 : tensor<1024xf32> loc(#loc110)
    %82 = arith.cmpf une, %50, %50 : tensor<1024xf32> loc(#loc111)
    %83 = arith.ori %81, %82 : tensor<1024xi1> loc(#loc112)
    %84 = arith.select %83, %50, %80 : tensor<1024xi1>, tensor<1024xf32> loc(#loc113)
    %85 = arith.cmpf ogt, %55, %84 : tensor<1024xf32> loc(#loc114)
    %86 = arith.cmpf une, %55, %55 : tensor<1024xf32> loc(#loc115)
    %87 = arith.ori %85, %86 : tensor<1024xi1> loc(#loc116)
    %88 = arith.select %87, %55, %84 : tensor<1024xi1>, tensor<1024xf32> loc(#loc117)
    %89 = arith.cmpf ogt, %60, %88 : tensor<1024xf32> loc(#loc118)
    %90 = arith.cmpf une, %60, %60 : tensor<1024xf32> loc(#loc119)
    %91 = arith.ori %89, %90 : tensor<1024xi1> loc(#loc120)
    %92 = arith.select %91, %60, %88 : tensor<1024xi1>, tensor<1024xf32> loc(#loc121)
    %93 = arith.select %61, %cst_9, %cst_8 : tensor<1024xi1>, tensor<1024xi8> loc(#loc73)
    %94 = arith.select %65, %cst_7, %93 : tensor<1024xi1>, tensor<1024xi8> loc(#loc74)
    %95 = arith.select %69, %cst_6, %94 : tensor<1024xi1>, tensor<1024xi8> loc(#loc75)
    %96 = arith.select %73, %cst_5, %95 : tensor<1024xi1>, tensor<1024xi8> loc(#loc76)
    %97 = arith.select %77, %cst_4, %96 : tensor<1024xi1>, tensor<1024xi8> loc(#loc77)
    %98 = arith.select %81, %cst_3, %97 : tensor<1024xi1>, tensor<1024xi8> loc(#loc78)
    %99 = arith.select %85, %cst_2, %98 : tensor<1024xi1>, tensor<1024xi8> loc(#loc79)
    %100 = arith.select %89, %cst_1, %99 : tensor<1024xi1>, tensor<1024xi8> loc(#loc80)
    %101 = arith.muli %10, %cst_0 : tensor<1024xi32> loc(#loc81)
    %102 = arith.addi %11, %101 : tensor<1024xi32> loc(#loc82)
    %103 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc83)
    %104 = tt.addptr %103, %102 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc83)
    tt.store %104, %92, %5 : tensor<1024x!tt.ptr<f32>> loc(#loc84)
    %105 = arith.muli %9, %cst : tensor<1024xi32> loc(#loc85)
    %106 = arith.addi %12, %105 : tensor<1024xi32> loc(#loc86)
    %107 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>> loc(#loc87)
    %108 = tt.addptr %107, %106 : tensor<1024x!tt.ptr<i8>>, tensor<1024xi32> loc(#loc87)
    tt.store %108, %100, %5 : tensor<1024x!tt.ptr<i8>> loc(#loc88)
    tt.return loc(#loc89)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":21:28)
#loc3 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":21:33)
#loc4 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":22:36)
#loc5 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":22:23)
#loc6 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":23:21)
#loc7 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":24:19)
#loc8 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":25:21)
#loc9 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":25:27)
#loc10 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":26:19)
#loc11 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":27:19)
#loc12 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":28:19)
#loc13 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":29:19)
#loc14 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:32)
#loc15 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:41)
#loc16 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:37)
#loc17 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:52)
#loc18 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:46)
#loc19 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:30)
#loc20 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":30:57)
#loc21 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":31:34)
#loc22 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":31:41)
#loc23 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":31:50)
#loc24 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":31:30)
#loc25 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":31:61)
#loc26 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":32:34)
#loc27 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":32:41)
#loc28 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":32:50)
#loc29 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":32:30)
#loc30 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":32:61)
#loc31 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":33:36)
#loc32 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":33:43)
#loc33 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":33:52)
#loc34 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":33:30)
#loc35 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":33:63)
#loc36 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":34:36)
#loc37 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":34:43)
#loc38 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":34:52)
#loc39 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":34:30)
#loc40 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":34:63)
#loc41 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":35:36)
#loc42 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":35:43)
#loc43 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":35:52)
#loc44 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":35:30)
#loc45 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":35:63)
#loc46 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":36:37)
#loc47 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":36:44)
#loc48 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":36:53)
#loc49 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":36:31)
#loc50 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":36:64)
#loc51 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":37:37)
#loc52 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":37:44)
#loc53 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":37:53)
#loc54 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":37:31)
#loc55 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":37:64)
#loc56 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":38:37)
#loc57 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":38:44)
#loc58 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":38:53)
#loc59 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":38:31)
#loc60 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":38:64)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc62 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":39:40)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc66 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":40:40)
#loc67 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":41:40)
#loc68 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":42:40)
#loc69 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":43:41)
#loc70 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":44:42)
#loc71 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":45:42)
#loc72 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":46:42)
#loc73 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":50:35)
#loc74 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":53:35)
#loc75 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":56:35)
#loc76 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":59:35)
#loc77 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":62:35)
#loc78 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":65:35)
#loc79 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":68:35)
#loc80 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":71:35)
#loc81 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":72:38)
#loc82 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":72:30)
#loc83 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":72:25)
#loc84 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":72:50)
#loc85 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":73:35)
#loc86 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":73:30)
#loc87 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":73:25)
#loc88 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":73:47)
#loc89 = loc("inductor_cache/x2/cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py":73:4)
#loc90 = loc(callsite(#loc61 at #loc62))
#loc91 = loc(callsite(#loc63 at #loc62))
#loc92 = loc(callsite(#loc64 at #loc62))
#loc93 = loc(callsite(#loc65 at #loc62))
#loc94 = loc(callsite(#loc61 at #loc66))
#loc95 = loc(callsite(#loc63 at #loc66))
#loc96 = loc(callsite(#loc64 at #loc66))
#loc97 = loc(callsite(#loc65 at #loc66))
#loc98 = loc(callsite(#loc61 at #loc67))
#loc99 = loc(callsite(#loc63 at #loc67))
#loc100 = loc(callsite(#loc64 at #loc67))
#loc101 = loc(callsite(#loc65 at #loc67))
#loc102 = loc(callsite(#loc61 at #loc68))
#loc103 = loc(callsite(#loc63 at #loc68))
#loc104 = loc(callsite(#loc64 at #loc68))
#loc105 = loc(callsite(#loc65 at #loc68))
#loc106 = loc(callsite(#loc61 at #loc69))
#loc107 = loc(callsite(#loc63 at #loc69))
#loc108 = loc(callsite(#loc64 at #loc69))
#loc109 = loc(callsite(#loc65 at #loc69))
#loc110 = loc(callsite(#loc61 at #loc70))
#loc111 = loc(callsite(#loc63 at #loc70))
#loc112 = loc(callsite(#loc64 at #loc70))
#loc113 = loc(callsite(#loc65 at #loc70))
#loc114 = loc(callsite(#loc61 at #loc71))
#loc115 = loc(callsite(#loc63 at #loc71))
#loc116 = loc(callsite(#loc64 at #loc71))
#loc117 = loc(callsite(#loc65 at #loc71))
#loc118 = loc(callsite(#loc61 at #loc72))
#loc119 = loc(callsite(#loc63 at #loc72))
#loc120 = loc(callsite(#loc64 at #loc72))
#loc121 = loc(callsite(#loc65 at #loc72))
