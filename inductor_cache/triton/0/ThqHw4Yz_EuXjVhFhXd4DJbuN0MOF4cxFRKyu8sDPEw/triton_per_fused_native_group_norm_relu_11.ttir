#loc = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":38:57)
#loc21 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":45:59)
#loc40 = loc(callsite(#loc1 at #loc14))
#loc44 = loc(callsite(#loc1 at #loc21))
module {
  tt.func public @triton_per_fused_native_group_norm_relu_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %0, %c32_i32 : i32 loc(#loc4)
    %3 = arith.muli %0, %c256_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<256xi32> loc(#loc6)
    %5 = arith.addi %1, %4 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg1, %2 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.addptr %arg2, %2 : !tt.ptr<f32>, i32 loc(#loc11)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc12)
    %15 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc14)), %arg9: f32 loc(callsite(#loc1 at #loc14))):
      %42 = arith.addf %arg8, %arg9 : f32 loc(#loc48)
      tt.reduce.return %42 : f32 loc(#loc39)
    }) : (tensor<256xf32>) -> f32 loc(#loc39)
    %16 = arith.addf %15, %cst_1 : f32 loc(#loc42)
    %17 = arith.divf %16, %cst_0 : f32 loc(#loc18)
    %18 = tt.splat %17 : f32 -> tensor<1xf32> loc(#loc18)
    %19 = tt.splat %17 : f32 -> tensor<256xf32> loc(#loc19)
    %20 = arith.subf %8, %19 : tensor<256xf32> loc(#loc19)
    %21 = arith.mulf %20, %20 : tensor<256xf32> loc(#loc20)
    %22 = "tt.reduce"(%21) <{axis = 0 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc21)), %arg9: f32 loc(callsite(#loc1 at #loc21))):
      %42 = arith.addf %arg8, %arg9 : f32 loc(#loc49)
      tt.reduce.return %42 : f32 loc(#loc43)
    }) : (tensor<256xf32>) -> f32 loc(#loc43)
    %23 = arith.addf %22, %cst_1 : f32 loc(#loc45)
    %24 = arith.divf %23, %cst_0 : f32 loc(#loc23)
    %25 = arith.addf %24, %cst : f32 loc(#loc24)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc25)
    %27 = tt.splat %26 : f32 -> tensor<1xf32> loc(#loc25)
    %28 = tt.splat %26 : f32 -> tensor<256xf32> loc(#loc26)
    %29 = arith.mulf %20, %28 : tensor<256xf32> loc(#loc26)
    %30 = tt.broadcast %11 : tensor<1xf32> -> tensor<256xf32> loc(#loc27)
    %31 = arith.mulf %29, %30 : tensor<256xf32> loc(#loc27)
    %32 = tt.broadcast %14 : tensor<1xf32> -> tensor<256xf32> loc(#loc28)
    %33 = arith.addf %31, %32 : tensor<256xf32> loc(#loc28)
    %34 = arith.cmpf ogt, %cst_2, %33 : tensor<256xf32> loc(#loc46)
    %35 = arith.select %34, %cst_2, %33 : tensor<256xi1>, tensor<256xf32> loc(#loc47)
    %36 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc32)
    %37 = tt.addptr %36, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc32)
    tt.store %37, %35 : tensor<256x!tt.ptr<f32>> loc(#loc33)
    %38 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc34)
    tt.store %39, %27 : tensor<1x!tt.ptr<f32>> loc(#loc35)
    %40 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc36)
    tt.store %41, %18 : tensor<1x!tt.ptr<f32>> loc(#loc37)
    tt.return loc(#loc38)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":24:28)
#loc3 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":27:26)
#loc4 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":32:19)
#loc5 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":33:39)
#loc6 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":33:35)
#loc7 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":33:30)
#loc8 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":33:44)
#loc9 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":34:31)
#loc10 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":34:36)
#loc11 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":35:31)
#loc12 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":35:36)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc17 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":38:44)
#loc18 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":41:18)
#loc19 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":42:18)
#loc20 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":43:19)
#loc22 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":45:45)
#loc23 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":48:20)
#loc24 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":50:20)
#loc25 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":51:28)
#loc26 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":52:20)
#loc27 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":53:20)
#loc28 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":54:20)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc30 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":56:42)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":57:25)
#loc33 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":57:46)
#loc34 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":58:25)
#loc35 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":58:37)
#loc36 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":59:25)
#loc37 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":59:36)
#loc38 = loc("inductor_cache/o2/co2l7jhoqwuj63tjikgh5ieghairbac4tta5mmrig7bbh6c7hvxc.py":59:4)
#loc39 = loc(callsite(#loc13 at #loc14))
#loc41 = loc(callsite(#loc15 at #loc13))
#loc42 = loc(callsite(#loc16 at #loc17))
#loc43 = loc(callsite(#loc13 at #loc21))
#loc45 = loc(callsite(#loc16 at #loc22))
#loc46 = loc(callsite(#loc29 at #loc30))
#loc47 = loc(callsite(#loc31 at #loc30))
#loc48 = loc(callsite(#loc41 at #loc14))
#loc49 = loc(callsite(#loc41 at #loc21))
