#loc = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0)
#loc1 = loc(unknown)
#loc26 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":41:37)
#loc37 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":48:26)
#loc49 = loc(callsite(#loc1 at #loc26))
#loc55 = loc(callsite(#loc1 at #loc37))
module {
  tt.func public @triton_per_fused__softmax_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0), %arg4: i32 loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1312> : tensor<32x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<5.000000e-01> : tensor<32x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<32x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<144> : tensor<32x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<9> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<576> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_5 : tensor<1x16xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_4 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_3 : tensor<32x1xi32> loc(#loc12)
    %12 = arith.remsi %5, %cst_3 : tensor<32x1xi32> loc(#loc13)
    %13 = arith.muli %5, %cst_4 : tensor<32x1xi32> loc(#loc14)
    %14 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<32x16xi32> loc(#loc15)
    %15 = tt.broadcast %13 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc15)
    %16 = arith.addi %14, %15 : tensor<32x16xi32> loc(#loc15)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %16 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc16)
    %19 = tt.broadcast %9 : tensor<1x16xi1> -> tensor<32x16xi1> loc(#loc17)
    %20 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x16xi1> loc(#loc17)
    %21 = arith.andi %19, %20 : tensor<32x16xi1> loc(#loc17)
    %22 = tt.load %18, %21, %cst_2 : tensor<32x16x!tt.ptr<f32>> loc(#loc18)
    %23 = arith.muli %10, %cst_4 : tensor<32x1xi32> loc(#loc19)
    %24 = tt.broadcast %23 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc20)
    %25 = arith.addi %14, %24 : tensor<32x16xi32> loc(#loc20)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.addptr %26, %25 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc21)
    %28 = tt.load %27, %21, %cst_2 evictionPolicy = evict_last : tensor<32x16x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.addf %22, %28 : tensor<32x16xf32> loc(#loc23)
    %30 = arith.select %21, %29, %cst_1 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc24)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc26)), %arg6: f32 loc(callsite(#loc1 at #loc26))):
      %50 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc57)
      %51 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc58)
      %52 = arith.ori %50, %51 : i1 loc(#loc59)
      %53 = arith.select %52, %arg5, %arg6 : f32 loc(#loc60)
      tt.reduce.return %53 : f32 loc(#loc48)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc48)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc31)
    %33 = tt.broadcast %32 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc32)
    %34 = arith.subf %29, %33 : tensor<32x16xf32> loc(#loc32)
    %35 = arith.mulf %34, %cst_0 : tensor<32x16xf32> loc(#loc33)
    %36 = math.exp %35 : tensor<32x16xf32> loc(#loc34)
    %37 = arith.select %21, %36, %cst_2 : tensor<32x16xi1>, tensor<32x16xf32> loc(#loc35)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc37)), %arg6: f32 loc(callsite(#loc1 at #loc37))):
      %50 = arith.addf %arg5, %arg6 : f32 loc(#loc61)
      tt.reduce.return %50 : f32 loc(#loc54)
    }) : (tensor<32x16xf32>) -> tensor<32xf32> loc(#loc54)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc39)
    %40 = tt.broadcast %39 : tensor<32x1xf32> -> tensor<32x16xf32> loc(#loc40)
    %41 = arith.divf %36, %40 : tensor<32x16xf32> loc(#loc40)
    %42 = arith.muli %12, %cst_4 : tensor<32x1xi32> loc(#loc41)
    %43 = tt.broadcast %42 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc42)
    %44 = arith.addi %14, %43 : tensor<32x16xi32> loc(#loc42)
    %45 = arith.muli %11, %cst : tensor<32x1xi32> loc(#loc43)
    %46 = tt.broadcast %45 : tensor<32x1xi32> -> tensor<32x16xi32> loc(#loc44)
    %47 = arith.addi %44, %46 : tensor<32x16xi32> loc(#loc44)
    %48 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x16x!tt.ptr<f32>> loc(#loc45)
    %49 = tt.addptr %48, %47 : tensor<32x16x!tt.ptr<f32>>, tensor<32x16xi32> loc(#loc45)
    tt.store %49, %41, %21 : tensor<32x16x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":23:28)
#loc3 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":23:33)
#loc4 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":24:36)
#loc5 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":24:44)
#loc6 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":24:23)
#loc7 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":25:21)
#loc8 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":26:26)
#loc9 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":26:34)
#loc10 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":28:21)
#loc11 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":31:19)
#loc12 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":32:19)
#loc13 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":33:19)
#loc14 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":34:37)
#loc15 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":34:35)
#loc16 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":34:30)
#loc17 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":34:50)
#loc18 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":34:42)
#loc19 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":35:37)
#loc20 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":35:35)
#loc21 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":35:30)
#loc22 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":35:42)
#loc23 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":36:18)
#loc24 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":40:41)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc31 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":41:40)
#loc32 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":42:18)
#loc33 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":44:19)
#loc34 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":45:24)
#loc35 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":47:43)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc39 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":48:29)
#loc40 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":49:20)
#loc41 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:32)
#loc42 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:30)
#loc43 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:42)
#loc44 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:37)
#loc45 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:25)
#loc46 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:54)
#loc47 = loc("inductor_cache/m2/cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py":50:4)
#loc48 = loc(callsite(#loc25 at #loc26))
#loc50 = loc(callsite(#loc27 at #loc25))
#loc51 = loc(callsite(#loc28 at #loc25))
#loc52 = loc(callsite(#loc29 at #loc25))
#loc53 = loc(callsite(#loc30 at #loc25))
#loc54 = loc(callsite(#loc36 at #loc37))
#loc56 = loc(callsite(#loc38 at #loc36))
#loc57 = loc(callsite(#loc50 at #loc26))
#loc58 = loc(callsite(#loc51 at #loc26))
#loc59 = loc(callsite(#loc52 at #loc26))
#loc60 = loc(callsite(#loc53 at #loc26))
#loc61 = loc(callsite(#loc56 at #loc37))
