//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_2 // -- Begin function triton_poi_fused_add_convolution_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_2
.visible .entry triton_poi_fused_add_convolution_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_2_param_3,
	.param .u32 triton_poi_fused_add_convolution_2_param_4,
	.param .u32 triton_poi_fused_add_convolution_2_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<161>;
	.reg .f32 	%f<85>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_2_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:22:33
	shl.b32 	%r87, %r1, 4;
	ld.param.u64 	%rd16, [triton_poi_fused_add_convolution_2_param_2];
	.loc	1 23 44                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:23:44
	mov.u32 	%r88, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused_add_convolution_2_param_3];
	shl.b32 	%r90, %r88, 2;
	and.b32  	%r91, %r90, 12;
	bfe.u32 	%r92, %r88, 6, 2;
	.loc	1 23 23                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:23:23
	or.b32  	%r93, %r87, %r91;
	or.b32  	%r94, %r87, %r92;
	.loc	1 25 28                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:25:33
	shl.b32 	%r95, %r2, 8;
	.loc	1 26 44                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:26:44
	bfe.u32 	%r96, %r88, 2, 6;
	and.b32  	%r97, %r90, 252;
	.loc	1 26 23                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:26:23
	or.b32  	%r98, %r95, %r96;
	or.b32  	%r99, %r95, %r97;
	.loc	1 30 19                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:30:19
	bfe.s32 	%r100, %r1, 27, 1;
	shr.u32 	%r101, %r100, 23;
	add.s32 	%r102, %r93, %r101;
	.loc	1 29 19                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:29:19
	and.b32  	%r103, %r102, -512;
	sub.s32 	%r104, %r93, %r103;
	.loc	1 26 23                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:26:23
	shl.b32 	%r105, %r98, 9;
	.loc	1 32 52                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:32:52
	shl.b32 	%r106, %r102, 12;
	and.b32  	%r107, %r106, -2097152;
	.loc	1 32 35                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:32:35
	add.s32 	%r108, %r107, %r104;
	.loc	1 32 44                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:32:44
	add.s32 	%r109, %r108, %r105;
	add.s32 	%r110, %r109, 32768;
	add.s32 	%r111, %r109, 65536;
	add.s32 	%r112, %r109, 98304;
	.loc	1 32 30                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:32:30
	mul.wide.s32 	%rd18, %r109, 4;
	add.s64 	%rd1, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r110, 4;
	add.s64 	%rd2, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r111, 4;
	add.s64 	%rd3, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r112, 4;
	add.s64 	%rd4, %rd14, %rd21;
	mov.pred 	%p1, -1;
	.loc	1 32 57                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:32:57
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 33 30                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:33:30
	mul.wide.s32 	%rd22, %r104, 4;
	add.s64 	%rd5, %rd15, %rd22;
	.loc	1 33 35                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	.loc	1 23 23                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:23:23
	shl.b32 	%r113, %r94, 12;
	.loc	1 34 35                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:34:35
	add.s32 	%r114, %r99, %r113;
	add.s32 	%r115, %r114, 16384;
	add.s32 	%r116, %r114, 32768;
	add.s32 	%r117, %r114, 49152;
	.loc	1 34 30                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:34:30
	mul.wide.s32 	%rd23, %r114, 4;
	add.s64 	%rd6, %rd16, %rd23;
	mul.wide.s32 	%rd24, %r115, 4;
	add.s64 	%rd7, %rd16, %rd24;
	mul.wide.s32 	%rd25, %r116, 4;
	add.s64 	%rd8, %rd16, %rd25;
	mul.wide.s32 	%rd26, %r117, 4;
	add.s64 	%rd9, %rd16, %rd26;
	.loc	1 34 45                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:34:45
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r28;
	mov.b32 	%f27, %r29;
	mov.b32 	%f28, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	mov.b32 	%f30, %r32;
	mov.b32 	%f31, %r33;
	mov.b32 	%f32, %r34;
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r35;
	mov.b32 	%f34, %r36;
	mov.b32 	%f35, %r37;
	mov.b32 	%f36, %r38;
	.loc	1 35 18                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:35:18
	add.f32 	%f37, %f1, %f17;
	add.f32 	%f38, %f2, %f18;
	add.f32 	%f39, %f3, %f19;
	add.f32 	%f40, %f4, %f20;
	add.f32 	%f41, %f5, %f17;
	add.f32 	%f42, %f6, %f18;
	add.f32 	%f43, %f7, %f19;
	add.f32 	%f44, %f8, %f20;
	add.f32 	%f45, %f9, %f17;
	add.f32 	%f46, %f10, %f18;
	add.f32 	%f47, %f11, %f19;
	add.f32 	%f48, %f12, %f20;
	add.f32 	%f49, %f13, %f17;
	add.f32 	%f50, %f14, %f18;
	add.f32 	%f51, %f15, %f19;
	add.f32 	%f52, %f16, %f20;
	shl.b32 	%r118, %r88, 10;
	and.b32  	%r119, %r118, 3072;
	or.b32  	%r120, %r119, %r96;
	and.b32  	%r121, %r90, 1020;
	shr.u32 	%r122, %r119, 6;
	mov.u32 	%r123, global_smem;
	add.s32 	%r124, %r123, %r122;
	shl.b32 	%r125, %r120, 2;
	add.s32 	%r39, %r124, %r125;
	mov.b32 	%r40, %f37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r126, %r119, 256;
	shr.u32 	%r127, %r126, 6;
	add.s32 	%r128, %r123, %r127;
	add.s32 	%r129, %r128, %r125;
	add.s32 	%r41, %r129, 1024;
	mov.b32 	%r42, %f38;
	// begin inline asm
	@%p1 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r130, %r119, 512;
	shr.u32 	%r131, %r130, 6;
	add.s32 	%r132, %r123, %r131;
	add.s32 	%r133, %r132, %r125;
	add.s32 	%r43, %r133, 2048;
	mov.b32 	%r44, %f39;
	// begin inline asm
	@%p1 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	or.b32  	%r134, %r119, 768;
	shr.u32 	%r135, %r134, 6;
	add.s32 	%r136, %r123, %r135;
	add.s32 	%r137, %r136, %r125;
	add.s32 	%r45, %r137, 3072;
	mov.b32 	%r46, %f40;
	// begin inline asm
	@%p1 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r39, 256;
	mov.b32 	%r48, %f41;
	// begin inline asm
	@%p1 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r129, 1280;
	mov.b32 	%r50, %f42;
	// begin inline asm
	@%p1 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r133, 2304;
	mov.b32 	%r52, %f43;
	// begin inline asm
	@%p1 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r137, 3328;
	mov.b32 	%r54, %f44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r39, 512;
	mov.b32 	%r56, %f45;
	// begin inline asm
	@%p1 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r129, 1536;
	mov.b32 	%r58, %f46;
	// begin inline asm
	@%p1 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r133, 2560;
	mov.b32 	%r60, %f47;
	// begin inline asm
	@%p1 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r137, 3584;
	mov.b32 	%r62, %f48;
	// begin inline asm
	@%p1 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r39, 768;
	mov.b32 	%r64, %f49;
	// begin inline asm
	@%p1 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r129, 1792;
	mov.b32 	%r66, %f50;
	// begin inline asm
	@%p1 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r133, 2816;
	mov.b32 	%r68, %f51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r137, 3840;
	mov.b32 	%r70, %f52;
	// begin inline asm
	@%p1 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r138, %r90, 8, 2;
	or.b32  	%r139, %r138, %r121;
	shl.b32 	%r140, %r139, 2;
	add.s32 	%r141, %r123, %r140;
	ld.shared.f32 	%f53, [%r141];
	shl.b32 	%r142, %r138, 2;
	add.s32 	%r143, %r123, %r142;
	shl.b32 	%r144, %r121, 2;
	add.s32 	%r145, %r143, %r144;
	ld.shared.f32 	%f54, [%r145+4];
	ld.shared.f32 	%f55, [%r145+8];
	ld.shared.f32 	%f56, [%r145+12];
	or.b32  	%r146, %r121, 1024;
	shr.u32 	%r147, %r146, 6;
	and.b32  	%r148, %r147, 28;
	add.s32 	%r149, %r123, %r148;
	add.s32 	%r150, %r149, %r144;
	ld.shared.f32 	%f57, [%r150+4096];
	ld.shared.f32 	%f58, [%r150+4100];
	ld.shared.f32 	%f59, [%r150+4104];
	ld.shared.f32 	%f60, [%r150+4108];
	or.b32  	%r151, %r121, 2048;
	shr.u32 	%r152, %r151, 6;
	and.b32  	%r153, %r152, 44;
	add.s32 	%r154, %r123, %r153;
	add.s32 	%r155, %r154, %r144;
	ld.shared.f32 	%f61, [%r155+8192];
	ld.shared.f32 	%f62, [%r155+8196];
	ld.shared.f32 	%f63, [%r155+8200];
	ld.shared.f32 	%f64, [%r155+8204];
	or.b32  	%r156, %r121, 3072;
	shr.u32 	%r157, %r156, 6;
	and.b32  	%r158, %r157, 60;
	add.s32 	%r159, %r123, %r158;
	add.s32 	%r160, %r159, %r144;
	ld.shared.f32 	%f65, [%r160+12288];
	ld.shared.f32 	%f66, [%r160+12292];
	ld.shared.f32 	%f67, [%r160+12296];
	ld.shared.f32 	%f68, [%r160+12300];
	.loc	1 36 18                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:36:18
	add.f32 	%f69, %f53, %f21;
	add.f32 	%f70, %f54, %f22;
	add.f32 	%f71, %f55, %f23;
	add.f32 	%f72, %f56, %f24;
	add.f32 	%f73, %f57, %f25;
	add.f32 	%f74, %f58, %f26;
	add.f32 	%f75, %f59, %f27;
	add.f32 	%f76, %f60, %f28;
	add.f32 	%f77, %f61, %f29;
	add.f32 	%f78, %f62, %f30;
	add.f32 	%f79, %f63, %f31;
	add.f32 	%f80, %f64, %f32;
	add.f32 	%f81, %f65, %f33;
	add.f32 	%f82, %f66, %f34;
	add.f32 	%f83, %f67, %f35;
	add.f32 	%f84, %f68, %f36;
	.loc	1 37 25                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:37:25
	add.s64 	%rd10, %rd17, %rd23;
	add.s64 	%rd11, %rd17, %rd24;
	add.s64 	%rd12, %rd17, %rd25;
	add.s64 	%rd13, %rd17, %rd26;
	.loc	1 37 46                         // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:37:46
	mov.b32 	%r71, %f69;
	mov.b32 	%r72, %f70;
	mov.b32 	%r73, %f71;
	mov.b32 	%r74, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	mov.b32 	%r75, %f73;
	mov.b32 	%r76, %f74;
	mov.b32 	%r77, %f75;
	mov.b32 	%r78, %f76;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	mov.b32 	%r79, %f77;
	mov.b32 	%r80, %f78;
	mov.b32 	%r81, %f79;
	mov.b32 	%r82, %f80;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	mov.b32 	%r83, %f81;
	mov.b32 	%r84, %f82;
	mov.b32 	%r85, %f83;
	mov.b32 	%r86, %f84;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 37 4                          // cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w6/cw66egrmy76dpfnrjncwmpffi46z6mn7kvkm46yhpqxniazs7j7w.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 54
.b8 54
.b8 101
.b8 103
.b8 114
.b8 109
.b8 121
.b8 55
.b8 54
.b8 100
.b8 112
.b8 102
.b8 110
.b8 114
.b8 106
.b8 110
.b8 99
.b8 119
.b8 109
.b8 112
.b8 102
.b8 102
.b8 105
.b8 52
.b8 54
.b8 122
.b8 54
.b8 109
.b8 110
.b8 55
.b8 107
.b8 118
.b8 107
.b8 109
.b8 52
.b8 54
.b8 121
.b8 104
.b8 112
.b8 113
.b8 120
.b8 110
.b8 105
.b8 97
.b8 122
.b8 115
.b8 55
.b8 106
.b8 55
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
