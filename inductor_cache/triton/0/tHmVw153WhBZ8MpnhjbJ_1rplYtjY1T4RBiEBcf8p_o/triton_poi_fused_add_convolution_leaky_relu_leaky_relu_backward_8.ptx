//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8 // -- Begin function triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8
.visible .entry triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_4,
	.param .u32 triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<73>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:19:0

// %bb.0:
	ld.param.u64 	%rd24, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_0];
	ld.param.u64 	%rd25, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:21:33
	shl.b32 	%r54, %r1, 10;
	ld.param.u64 	%rd26, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_2];
	ld.param.u64 	%rd27, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_3];
	.loc	1 22 36                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:22:36
	mov.u32 	%r55, %tid.x;
	shl.b32 	%r56, %r55, 3;
	ld.param.u64 	%rd28, [triton_poi_fused_add_convolution_leaky_relu_leaky_relu_backward_8_param_4];
	and.b32  	%r57, %r56, 1016;
	shl.b32 	%r58, %r55, 2;
	and.b32  	%r59, %r58, 508;
	.loc	1 22 23                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:22:23
	or.b32  	%r60, %r54, %r57;
	or.b32  	%r61, %r54, %r59;
	.loc	1 25 21                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:25:21
	bfe.s32 	%r62, %r1, 21, 1;
	shr.u32 	%r63, %r62, 24;
	add.s32 	%r64, %r60, %r63;
	shr.s32 	%r65, %r64, 8;
	.loc	1 25 28                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:25:28
	shr.u32 	%r66, %r65, 25;
	add.s32 	%r67, %r65, %r66;
	and.b32  	%r68, %r67, -128;
	sub.s32 	%r69, %r65, %r68;
	.loc	1 26 30                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:26:30
	cvt.s64.s32 	%rd29, %r60;
	mul.wide.s32 	%rd30, %r60, 4;
	add.s64 	%rd1, %rd25, %rd30;
	add.s64 	%rd2, %rd1, 16;
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:27:30
	mul.wide.s32 	%rd31, %r69, 4;
	add.s64 	%rd3, %rd26, %rd31;
	.loc	1 27 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 28 34                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:28:34
	add.s64 	%rd11, %rd24, %rd30;
	add.s64 	%rd12, %rd11, 16;
	mul.wide.s32 	%rd32, %r61, 4;
	add.s64 	%rd21, %rd24, %rd32;
	cvt.s64.s32 	%rd33, %r54;
	cvt.u64.u32 	%rd34, %r59;
	or.b64  	%rd35, %rd33, %rd34;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd37, %rd24, %rd36;
	add.s64 	%rd22, %rd37, 2048;
	.loc	1 28 39                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:28:39
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r18;
	mov.b32 	%f2, %r19;
	mov.b32 	%f3, %r20;
	mov.b32 	%f4, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r22;
	mov.b32 	%f6, %r23;
	mov.b32 	%f7, %r24;
	mov.b32 	%f8, %r25;
	.loc	1 29 30                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:29:30
	add.s64 	%rd13, %rd27, %rd31;
	.loc	1 29 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:29:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r27;
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r28;
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r31;
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r32;
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r33;
	.loc	1 36 19                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:36:19
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
	.loc	1 39 40                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:39:40
	shl.b32 	%r70, %r57, 2;
	mov.u32 	%r71, global_smem;
	add.s32 	%r34, %r71, %r70;
	add.s32 	%r39, %r34, 16;
	shl.b32 	%r72, %r59, 2;
	add.s32 	%r73, %r71, %r72;
	.loc	1 40 25                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:40:25
	add.s64 	%rd23, %rd28, %rd29;
	.loc	1 26 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:26:35
	mov.b32 	%f25, %r2;
	mov.b32 	%f26, %r3;
	mov.b32 	%f27, %r4;
	mov.b32 	%f28, %r5;
	.loc	1 27 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:27:35
	mov.b32 	%f29, %r10;
	mov.b32 	%f30, %r11;
	mov.b32 	%f31, %r12;
	mov.b32 	%f32, %r13;
	.loc	1 30 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:30:18
	add.f32 	%f33, %f28, %f32;
	add.f32 	%f34, %f27, %f31;
	add.f32 	%f35, %f26, %f30;
	add.f32 	%f36, %f25, %f29;
	.loc	1 32 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:32:18
	setp.gt.f32 	%p26, %f36, 0f00000000;
	setp.gt.f32 	%p27, %f35, 0f00000000;
	setp.gt.f32 	%p28, %f34, 0f00000000;
	setp.gt.f32 	%p29, %f33, 0f00000000;
	.loc	1 34 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:34:18
	mul.f32 	%f37, %f36, 0f3C23D70A;
	mul.f32 	%f38, %f35, 0f3C23D70A;
	mul.f32 	%f39, %f34, 0f3C23D70A;
	mul.f32 	%f40, %f33, 0f3C23D70A;
	.loc	1 35 32                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:35:32
	selp.f32 	%f41, %f33, %f40, %p29;
	selp.f32 	%f42, %f34, %f39, %p28;
	selp.f32 	%f43, %f35, %f38, %p27;
	selp.f32 	%f44, %f36, %f37, %p26;
	.loc	1 37 19                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:37:19
	add.f32 	%f45, %f44, %f17;
	add.f32 	%f46, %f43, %f18;
	add.f32 	%f47, %f42, %f19;
	add.f32 	%f48, %f41, %f20;
	.loc	1 38 19                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:38:19
	setp.gt.f32 	%p30, %f41, 0f00000000;
	setp.gt.f32 	%p31, %f42, 0f00000000;
	setp.gt.f32 	%p32, %f43, 0f00000000;
	setp.gt.f32 	%p33, %f44, 0f00000000;
	.loc	1 39 40                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:39:40
	mov.b32 	%r35, %f45;
	mov.b32 	%r36, %f46;
	mov.b32 	%r37, %f47;
	mov.b32 	%r38, %f48;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	.loc	1 26 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:26:35
	mov.b32 	%f49, %r6;
	mov.b32 	%f50, %r7;
	mov.b32 	%f51, %r8;
	mov.b32 	%f52, %r9;
	.loc	1 27 35                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:27:35
	mov.b32 	%f53, %r14;
	mov.b32 	%f54, %r15;
	mov.b32 	%f55, %r16;
	mov.b32 	%f56, %r17;
	.loc	1 30 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:30:18
	add.f32 	%f57, %f52, %f56;
	add.f32 	%f58, %f51, %f55;
	add.f32 	%f59, %f50, %f54;
	add.f32 	%f60, %f49, %f53;
	.loc	1 32 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:32:18
	setp.gt.f32 	%p34, %f60, 0f00000000;
	setp.gt.f32 	%p35, %f59, 0f00000000;
	setp.gt.f32 	%p36, %f58, 0f00000000;
	setp.gt.f32 	%p37, %f57, 0f00000000;
	.loc	1 34 18                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:34:18
	mul.f32 	%f61, %f60, 0f3C23D70A;
	mul.f32 	%f62, %f59, 0f3C23D70A;
	mul.f32 	%f63, %f58, 0f3C23D70A;
	mul.f32 	%f64, %f57, 0f3C23D70A;
	.loc	1 35 32                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:35:32
	selp.f32 	%f65, %f57, %f64, %p37;
	selp.f32 	%f66, %f58, %f63, %p36;
	selp.f32 	%f67, %f59, %f62, %p35;
	selp.f32 	%f68, %f60, %f61, %p34;
	.loc	1 37 19                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:37:19
	add.f32 	%f69, %f68, %f21;
	add.f32 	%f70, %f67, %f22;
	add.f32 	%f71, %f66, %f23;
	add.f32 	%f72, %f65, %f24;
	.loc	1 38 19                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:38:19
	setp.gt.f32 	%p38, %f65, 0f00000000;
	setp.gt.f32 	%p39, %f66, 0f00000000;
	setp.gt.f32 	%p40, %f67, 0f00000000;
	setp.gt.f32 	%p41, %f68, 0f00000000;
	.loc	1 39 40                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:39:40
	mov.b32 	%r40, %f69;
	mov.b32 	%r41, %f70;
	mov.b32 	%r42, %f71;
	mov.b32 	%r43, %f72;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r39 + 0 ], { %r40, %r41, %r42, %r43 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r48, %r49, %r50, %r51}, [%r73+2048];
	ld.shared.v4.u32 	{%r44, %r45, %r46, %r47}, [%r73];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd21 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd22 + 0 ], { %r48, %r49, %r50, %r51 };
	// end inline asm
	.loc	1 40 37                         // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:40:37
	selp.u32 	%r74, 1, 0, %p33;
	selp.u32 	%r75, 1, 0, %p32;
	prmt.b32 	%r76, %r74, %r75, 0x3340U;
	selp.u32 	%r77, 1, 0, %p31;
	selp.u32 	%r78, 1, 0, %p30;
	prmt.b32 	%r79, %r77, %r78, 0x3340U;
	prmt.b32 	%r80, %r76, %r79, 0x5410U;
	selp.u32 	%r81, 1, 0, %p41;
	selp.u32 	%r82, 1, 0, %p40;
	prmt.b32 	%r83, %r81, %r82, 0x3340U;
	selp.u32 	%r84, 1, 0, %p39;
	selp.u32 	%r85, 1, 0, %p38;
	prmt.b32 	%r86, %r84, %r85, 0x3340U;
	prmt.b32 	%r87, %r83, %r86, 0x5410U;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd23 + 0 ], { %r80, %r87 };
	// end inline asm
	.loc	1 40 4                          // cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py:40:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bi/cbiiccbrnlcwabqna26q7fgmhueokaarnm4kzspsgyvgvece5drg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 105
.b8 105
.b8 99
.b8 99
.b8 98
.b8 114
.b8 110
.b8 108
.b8 99
.b8 119
.b8 97
.b8 98
.b8 113
.b8 110
.b8 97
.b8 50
.b8 54
.b8 113
.b8 55
.b8 102
.b8 103
.b8 109
.b8 104
.b8 117
.b8 101
.b8 111
.b8 107
.b8 97
.b8 97
.b8 114
.b8 110
.b8 109
.b8 52
.b8 107
.b8 122
.b8 115
.b8 112
.b8 115
.b8 103
.b8 121
.b8 118
.b8 103
.b8 118
.b8 101
.b8 99
.b8 101
.b8 53
.b8 100
.b8 114
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
