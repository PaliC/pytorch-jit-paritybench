; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_max_pool2d_with_indices_mul_sub_15(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %.frozen = freeze i32 %14, !dbg !14
  %15 = sdiv i32 %.frozen, 16, !dbg !14
  %16 = srem i32 %15, 16, !dbg !15
  %17 = mul i32 %15, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sdiv i32 %14, 256, !dbg !17
  %19 = srem i32 %18, 16, !dbg !18
  %20 = sdiv i32 %14, 4096, !dbg !19
  %21 = sext i32 %16 to i64, !dbg !20
  %22 = getelementptr i64, ptr addrspace(1) %2, i64 %21, !dbg !20
  %23 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !21
  %24 = sext i32 %.decomposed to i64, !dbg !22
  %25 = getelementptr i64, ptr addrspace(1) %3, i64 %24, !dbg !22
  %26 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !23
  %27 = getelementptr i64, ptr addrspace(1) %5, i64 %21, !dbg !24
  %28 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !25
  %29 = getelementptr i64, ptr addrspace(1) %6, i64 %24, !dbg !26
  %30 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %7, i64 %24, !dbg !28
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !29
  %33 = bitcast i32 %32 to float, !dbg !29
  %34 = lshr i64 %23, 59, !dbg !30
  %35 = and i64 %34, 16, !dbg !30
  %36 = add i64 %35, %23, !dbg !30
  %37 = lshr i64 %26, 59, !dbg !31
  %38 = and i64 %37, 16, !dbg !31
  %39 = add i64 %38, %26, !dbg !31
  %40 = sext i32 %19 to i64, !dbg !32
  %41 = shl i64 %36, 10, !dbg !33
  %42 = shl i32 %20, 14, !dbg !34
  %43 = sext i32 %42 to i64, !dbg !35
  %.idx = shl i64 %39, 7, !dbg !36
  %44 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx, !dbg !36
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %40, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %45, i64 %41, !dbg !36
  %47 = getelementptr float, ptr addrspace(1) %46, i64 %43, !dbg !36
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !37
  %49 = add nsw i32 %19, 16, !dbg !38
  %50 = zext nneg i32 %49 to i64, !dbg !39
  %51 = getelementptr float, ptr addrspace(1) %44, i64 %50, !dbg !40
  %52 = getelementptr float, ptr addrspace(1) %51, i64 %41, !dbg !40
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %43, !dbg !40
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #1, !dbg !41
  %55 = add nsw i32 %19, 512, !dbg !42
  %56 = zext nneg i32 %55 to i64, !dbg !43
  %57 = getelementptr float, ptr addrspace(1) %44, i64 %56, !dbg !44
  %58 = getelementptr float, ptr addrspace(1) %57, i64 %41, !dbg !44
  %59 = getelementptr float, ptr addrspace(1) %58, i64 %43, !dbg !44
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #1, !dbg !45
  %61 = add nsw i32 %19, 528, !dbg !46
  %62 = zext nneg i32 %61 to i64, !dbg !47
  %63 = getelementptr float, ptr addrspace(1) %44, i64 %62, !dbg !48
  %64 = getelementptr float, ptr addrspace(1) %63, i64 %41, !dbg !48
  %65 = getelementptr float, ptr addrspace(1) %64, i64 %43, !dbg !48
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 true) #1, !dbg !49
  %67 = lshr i64 %28, 59, !dbg !50
  %68 = and i64 %67, 16, !dbg !50
  %69 = add i64 %68, %28, !dbg !50
  %70 = shl i64 %69, 10, !dbg !51
  %71 = getelementptr float, ptr addrspace(1) %45, i64 %70, !dbg !52
  %72 = getelementptr float, ptr addrspace(1) %71, i64 %43, !dbg !52
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 true) #1, !dbg !53
  %74 = getelementptr float, ptr addrspace(1) %51, i64 %70, !dbg !54
  %75 = getelementptr float, ptr addrspace(1) %74, i64 %43, !dbg !54
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #1, !dbg !55
  %77 = getelementptr float, ptr addrspace(1) %57, i64 %70, !dbg !56
  %78 = getelementptr float, ptr addrspace(1) %77, i64 %43, !dbg !56
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 true) #1, !dbg !57
  %80 = getelementptr float, ptr addrspace(1) %63, i64 %70, !dbg !58
  %81 = getelementptr float, ptr addrspace(1) %80, i64 %43, !dbg !58
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 true) #1, !dbg !59
  %83 = lshr i64 %30, 59, !dbg !60
  %84 = and i64 %83, 16, !dbg !60
  %85 = add i64 %84, %30, !dbg !60
  %.idx1 = shl i64 %85, 7, !dbg !61
  %86 = getelementptr i8, ptr addrspace(1) %4, i64 %.idx1, !dbg !61
  %87 = getelementptr float, ptr addrspace(1) %86, i64 %40, !dbg !61
  %88 = getelementptr float, ptr addrspace(1) %87, i64 %70, !dbg !61
  %89 = getelementptr float, ptr addrspace(1) %88, i64 %43, !dbg !61
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 true) #1, !dbg !62
  %91 = getelementptr float, ptr addrspace(1) %86, i64 %50, !dbg !63
  %92 = getelementptr float, ptr addrspace(1) %91, i64 %70, !dbg !63
  %93 = getelementptr float, ptr addrspace(1) %92, i64 %43, !dbg !63
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 true) #1, !dbg !64
  %95 = getelementptr float, ptr addrspace(1) %86, i64 %56, !dbg !65
  %96 = getelementptr float, ptr addrspace(1) %95, i64 %70, !dbg !65
  %97 = getelementptr float, ptr addrspace(1) %96, i64 %43, !dbg !65
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %97, i1 true) #1, !dbg !66
  %99 = getelementptr float, ptr addrspace(1) %86, i64 %62, !dbg !67
  %100 = getelementptr float, ptr addrspace(1) %99, i64 %70, !dbg !67
  %101 = getelementptr float, ptr addrspace(1) %100, i64 %43, !dbg !67
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %101, i1 true) #1, !dbg !68
  %103 = insertelement <2 x i32> poison, i32 %90, i64 0, !dbg !62
  %104 = insertelement <2 x i32> %103, i32 %73, i64 1, !dbg !62
  %105 = bitcast <2 x i32> %104 to <2 x float>, !dbg !62
  %106 = insertelement <2 x i32> poison, i32 %94, i64 0, !dbg !64
  %107 = insertelement <2 x i32> %106, i32 %76, i64 1, !dbg !64
  %108 = bitcast <2 x i32> %107 to <2 x float>, !dbg !64
  %109 = fcmp ogt <2 x float> %108, %105, !dbg !69
  %110 = fcmp uno <2 x float> %108, zeroinitializer, !dbg !73
  %111 = or <2 x i1> %109, %110, !dbg !74
  %.v = select <2 x i1> %111, <2 x i32> %107, <2 x i32> %104, !dbg !75
  %112 = bitcast <2 x i32> %.v to <2 x float>, !dbg !75
  %113 = insertelement <2 x i32> poison, i32 %98, i64 0, !dbg !66
  %114 = insertelement <2 x i32> %113, i32 %79, i64 1, !dbg !66
  %115 = bitcast <2 x i32> %114 to <2 x float>, !dbg !66
  %116 = fcmp olt <2 x float> %112, %115, !dbg !76
  %117 = fcmp uno <2 x float> %115, zeroinitializer, !dbg !78
  %118 = or <2 x i1> %117, %116, !dbg !79
  %.v2 = select <2 x i1> %118, <2 x i32> %114, <2 x i32> %.v, !dbg !80
  %119 = bitcast <2 x i32> %.v2 to <2 x float>, !dbg !80
  %120 = insertelement <2 x i32> poison, i32 %102, i64 0, !dbg !68
  %121 = insertelement <2 x i32> %120, i32 %82, i64 1, !dbg !68
  %122 = bitcast <2 x i32> %121 to <2 x float>, !dbg !68
  %123 = fcmp olt <2 x float> %119, %122, !dbg !81
  %124 = fcmp uno <2 x float> %122, zeroinitializer, !dbg !83
  %125 = or <2 x i1> %124, %123, !dbg !84
  %.v3 = select <2 x i1> %125, <2 x i32> %121, <2 x i32> %.v2, !dbg !85
  %126 = bitcast <2 x i32> %.v3 to <2 x float>, !dbg !85
  %127 = extractelement <2 x float> %126, i64 0, !dbg !86
  %128 = extractelement <2 x float> %126, i64 1, !dbg !87
  %129 = fsub float %127, %128, !dbg !86
  %130 = fmul float %129, %33, !dbg !88
  %131 = fadd float %128, %130, !dbg !87
  %132 = getelementptr float, ptr addrspace(1) %87, i64 %41, !dbg !89
  %133 = getelementptr float, ptr addrspace(1) %132, i64 %43, !dbg !89
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %133, i1 true) #1, !dbg !90
  %135 = getelementptr float, ptr addrspace(1) %91, i64 %41, !dbg !91
  %136 = getelementptr float, ptr addrspace(1) %135, i64 %43, !dbg !91
  %137 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %136, i1 true) #1, !dbg !92
  %138 = getelementptr float, ptr addrspace(1) %95, i64 %41, !dbg !93
  %139 = getelementptr float, ptr addrspace(1) %138, i64 %43, !dbg !93
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %139, i1 true) #1, !dbg !94
  %141 = getelementptr float, ptr addrspace(1) %99, i64 %41, !dbg !95
  %142 = getelementptr float, ptr addrspace(1) %141, i64 %43, !dbg !95
  %143 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %142, i1 true) #1, !dbg !96
  %144 = insertelement <2 x i32> poison, i32 %134, i64 0, !dbg !90
  %145 = insertelement <2 x i32> %144, i32 %48, i64 1, !dbg !90
  %146 = bitcast <2 x i32> %145 to <2 x float>, !dbg !90
  %147 = insertelement <2 x i32> poison, i32 %137, i64 0, !dbg !92
  %148 = insertelement <2 x i32> %147, i32 %54, i64 1, !dbg !92
  %149 = bitcast <2 x i32> %148 to <2 x float>, !dbg !92
  %150 = fcmp ogt <2 x float> %149, %146, !dbg !97
  %151 = fcmp uno <2 x float> %149, zeroinitializer, !dbg !99
  %152 = or <2 x i1> %150, %151, !dbg !100
  %.v4 = select <2 x i1> %152, <2 x i32> %148, <2 x i32> %145, !dbg !101
  %153 = bitcast <2 x i32> %.v4 to <2 x float>, !dbg !101
  %154 = insertelement <2 x i32> poison, i32 %140, i64 0, !dbg !94
  %155 = insertelement <2 x i32> %154, i32 %60, i64 1, !dbg !94
  %156 = bitcast <2 x i32> %155 to <2 x float>, !dbg !94
  %157 = fcmp olt <2 x float> %153, %156, !dbg !102
  %158 = fcmp uno <2 x float> %156, zeroinitializer, !dbg !104
  %159 = or <2 x i1> %158, %157, !dbg !105
  %.v5 = select <2 x i1> %159, <2 x i32> %155, <2 x i32> %.v4, !dbg !106
  %160 = bitcast <2 x i32> %.v5 to <2 x float>, !dbg !106
  %161 = insertelement <2 x i32> poison, i32 %143, i64 0, !dbg !96
  %162 = insertelement <2 x i32> %161, i32 %66, i64 1, !dbg !96
  %163 = bitcast <2 x i32> %162 to <2 x float>, !dbg !96
  %164 = fcmp olt <2 x float> %160, %163, !dbg !107
  %165 = fcmp uno <2 x float> %163, zeroinitializer, !dbg !109
  %166 = or <2 x i1> %165, %164, !dbg !110
  %.v6 = select <2 x i1> %166, <2 x i32> %162, <2 x i32> %.v5, !dbg !111
  %167 = bitcast <2 x i32> %.v6 to <2 x float>, !dbg !111
  %168 = extractelement <2 x float> %167, i64 0, !dbg !112
  %169 = extractelement <2 x float> %167, i64 1, !dbg !113
  %170 = fsub float %168, %169, !dbg !112
  %171 = fmul float %170, %33, !dbg !114
  %172 = fadd float %169, %171, !dbg !113
  %173 = fsub float %172, %131, !dbg !115
  %174 = sext i32 %14 to i64, !dbg !116
  %175 = getelementptr float, ptr addrspace(1) %0, i64 %174, !dbg !116
  %176 = bitcast float %131 to i32, !dbg !117
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %176, ptr addrspace(1) %175, i1 true) #1, !dbg !117
  %177 = getelementptr float, ptr addrspace(1) %1, i64 %174, !dbg !118
  %178 = bitcast float %173 to i32, !dbg !119
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %178, ptr addrspace(1) %177, i1 true) #1, !dbg !119
  ret void, !dbg !120
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c27cdpres3mejhphaktmsy2ijrsb2fwykz6ptrryzrspcbrkfvp2.py", directory: "inductor_cache/27")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_max_pool2d_with_indices_mul_sub_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_max_pool2d_with_indices_mul_sub_15, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_max_pool2d_with_indices_mul_sub_15", linkageName: "triton_poi_fused__unsafe_index_add_max_pool2d_with_indices_mul_sub_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 28, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 31, column: 31, scope: !7)
!25 = !DILocation(line: 31, column: 36, scope: !7)
!26 = !DILocation(line: 32, column: 31, scope: !7)
!27 = !DILocation(line: 32, column: 36, scope: !7)
!28 = !DILocation(line: 33, column: 31, scope: !7)
!29 = !DILocation(line: 33, column: 36, scope: !7)
!30 = !DILocation(line: 37, column: 32, scope: !7)
!31 = !DILocation(line: 40, column: 32, scope: !7)
!32 = !DILocation(line: 41, column: 35, scope: !7)
!33 = !DILocation(line: 41, column: 50, scope: !7)
!34 = !DILocation(line: 41, column: 63, scope: !7)
!35 = !DILocation(line: 41, column: 57, scope: !7)
!36 = !DILocation(line: 41, column: 30, scope: !7)
!37 = !DILocation(line: 41, column: 68, scope: !7)
!38 = !DILocation(line: 42, column: 36, scope: !7)
!39 = !DILocation(line: 42, column: 41, scope: !7)
!40 = !DILocation(line: 42, column: 31, scope: !7)
!41 = !DILocation(line: 42, column: 74, scope: !7)
!42 = !DILocation(line: 44, column: 37, scope: !7)
!43 = !DILocation(line: 44, column: 42, scope: !7)
!44 = !DILocation(line: 44, column: 31, scope: !7)
!45 = !DILocation(line: 44, column: 75, scope: !7)
!46 = !DILocation(line: 46, column: 37, scope: !7)
!47 = !DILocation(line: 46, column: 42, scope: !7)
!48 = !DILocation(line: 46, column: 31, scope: !7)
!49 = !DILocation(line: 46, column: 75, scope: !7)
!50 = !DILocation(line: 50, column: 35, scope: !7)
!51 = !DILocation(line: 51, column: 51, scope: !7)
!52 = !DILocation(line: 51, column: 31, scope: !7)
!53 = !DILocation(line: 51, column: 70, scope: !7)
!54 = !DILocation(line: 52, column: 31, scope: !7)
!55 = !DILocation(line: 52, column: 75, scope: !7)
!56 = !DILocation(line: 54, column: 31, scope: !7)
!57 = !DILocation(line: 54, column: 76, scope: !7)
!58 = !DILocation(line: 56, column: 31, scope: !7)
!59 = !DILocation(line: 56, column: 76, scope: !7)
!60 = !DILocation(line: 60, column: 35, scope: !7)
!61 = !DILocation(line: 61, column: 31, scope: !7)
!62 = !DILocation(line: 61, column: 71, scope: !7)
!63 = !DILocation(line: 62, column: 31, scope: !7)
!64 = !DILocation(line: 62, column: 76, scope: !7)
!65 = !DILocation(line: 64, column: 31, scope: !7)
!66 = !DILocation(line: 64, column: 77, scope: !7)
!67 = !DILocation(line: 66, column: 31, scope: !7)
!68 = !DILocation(line: 66, column: 77, scope: !7)
!69 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !72)
!70 = distinct !DILexicalBlockFile(scope: !7, file: !71, discriminator: 0)
!71 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!72 = !DILocation(line: 63, column: 42, scope: !7)
!73 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !72)
!74 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !72)
!75 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !72)
!76 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !77)
!77 = !DILocation(line: 65, column: 42, scope: !7)
!78 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !77)
!79 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !77)
!80 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !77)
!81 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !82)
!82 = !DILocation(line: 67, column: 42, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !82)
!86 = !DILocation(line: 68, column: 20, scope: !7)
!87 = !DILocation(line: 70, column: 20, scope: !7)
!88 = !DILocation(line: 69, column: 20, scope: !7)
!89 = !DILocation(line: 71, column: 31, scope: !7)
!90 = !DILocation(line: 71, column: 70, scope: !7)
!91 = !DILocation(line: 72, column: 31, scope: !7)
!92 = !DILocation(line: 72, column: 75, scope: !7)
!93 = !DILocation(line: 74, column: 31, scope: !7)
!94 = !DILocation(line: 74, column: 76, scope: !7)
!95 = !DILocation(line: 76, column: 31, scope: !7)
!96 = !DILocation(line: 76, column: 76, scope: !7)
!97 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !98)
!98 = !DILocation(line: 73, column: 42, scope: !7)
!99 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !98)
!100 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !98)
!101 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !98)
!102 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !103)
!103 = !DILocation(line: 75, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !103)
!105 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !103)
!106 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !103)
!107 = !DILocation(line: 118, column: 15, scope: !70, inlinedAt: !108)
!108 = !DILocation(line: 77, column: 42, scope: !7)
!109 = !DILocation(line: 120, column: 21, scope: !70, inlinedAt: !108)
!110 = !DILocation(line: 120, column: 16, scope: !70, inlinedAt: !108)
!111 = !DILocation(line: 121, column: 29, scope: !70, inlinedAt: !108)
!112 = !DILocation(line: 78, column: 20, scope: !7)
!113 = !DILocation(line: 80, column: 20, scope: !7)
!114 = !DILocation(line: 79, column: 20, scope: !7)
!115 = !DILocation(line: 81, column: 20, scope: !7)
!116 = !DILocation(line: 82, column: 28, scope: !7)
!117 = !DILocation(line: 82, column: 40, scope: !7)
!118 = !DILocation(line: 83, column: 28, scope: !7)
!119 = !DILocation(line: 83, column: 40, scope: !7)
!120 = !DILocation(line: 83, column: 4, scope: !7)
