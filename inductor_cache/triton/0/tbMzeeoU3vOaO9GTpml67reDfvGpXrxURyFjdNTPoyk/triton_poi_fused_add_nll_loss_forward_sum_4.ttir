#loc = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0)
module {
  tt.func public @triton_poi_fused_add_nll_loss_forward_sum_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0), %arg4: i32 loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<4xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<4xf32> loc(#loc1)
    %cst_1 = arith.constant dense<true> : tensor<4xi1> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<4xi64> loc(#loc1)
    %cst_3 = arith.constant dense<-100> : tensor<4xi64> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<4xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<4xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<4xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<4xi32> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<4xi32> loc(#loc6)
    %6 = arith.muli %4, %cst_7 : tensor<4xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc9)
    %10 = arith.addi %6, %cst_6 : tensor<4xi32> loc(#loc10)
    %11 = tt.addptr %7, %10 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %6, %cst_5 : tensor<4xi32> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %6, %cst_4 : tensor<4xi32> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc18)
    %19 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<4x!tt.ptr<i64>> loc(#loc19)
    %20 = tt.addptr %19, %4 : tensor<4x!tt.ptr<i64>>, tensor<4xi32> loc(#loc19)
    %21 = tt.load %20, %5 : tensor<4x!tt.ptr<i64>> loc(#loc20)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc21)
    %23 = tt.addptr %22, %6 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc21)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc22)
    %25 = tt.addptr %22, %10 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc23)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc24)
    %27 = tt.addptr %22, %13 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc25)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.addptr %22, %16 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc27)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc28)
    %31 = arith.addf %9, %12 : tensor<4xf32> loc(#loc29)
    %32 = arith.addf %31, %15 : tensor<4xf32> loc(#loc30)
    %33 = arith.addf %32, %18 : tensor<4xf32> loc(#loc31)
    %34 = arith.cmpi ne, %21, %cst_3 : tensor<4xi64> loc(#loc32)
    %35 = arith.select %34, %21, %cst_2 : tensor<4xi1>, tensor<4xi64> loc(#loc33)
    %36 = arith.addi %35, %cst : tensor<4xi64> loc(#loc34)
    %37 = arith.cmpi slt, %35, %cst_2 : tensor<4xi64> loc(#loc35)
    %38 = arith.select %37, %36, %35 : tensor<4xi1>, tensor<4xi64> loc(#loc36)
    %39 = arith.cmpi sge, %38, %cst_2 : tensor<4xi64> loc(#loc37)
    %40 = arith.cmpi slt, %38, %cst : tensor<4xi64> loc(#loc38)
    %41 = arith.andi %39, %40 : tensor<4xi1> loc(#loc39)
    %42 = arith.xori %5, %cst_1 : tensor<4xi1> loc(#loc40)
    %43 = arith.ori %41, %42 : tensor<4xi1> loc(#loc41)
    tt.assert %43, "index out of bounds: 0 <= tmp15 < 4" : tensor<4xi1> loc(#loc42)
    %44 = arith.extsi %6 : tensor<4xi32> to tensor<4xi64> loc(#loc43)
    %45 = arith.addi %38, %44 : tensor<4xi64> loc(#loc43)
    %46 = tt.addptr %22, %45 : tensor<4x!tt.ptr<f32>>, tensor<4xi64> loc(#loc44)
    %47 = tt.load %46, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc45)
    %48 = math.exp %24 : tensor<4xf32> loc(#loc46)
    %49 = math.exp %26 : tensor<4xf32> loc(#loc47)
    %50 = arith.addf %48, %49 : tensor<4xf32> loc(#loc48)
    %51 = math.exp %28 : tensor<4xf32> loc(#loc49)
    %52 = arith.addf %50, %51 : tensor<4xf32> loc(#loc50)
    %53 = math.exp %30 : tensor<4xf32> loc(#loc51)
    %54 = arith.addf %52, %53 : tensor<4xf32> loc(#loc52)
    %55 = math.log %54 : tensor<4xf32> loc(#loc53)
    %56 = arith.subf %47, %55 : tensor<4xf32> loc(#loc54)
    %57 = arith.subf %cst_0, %56 : tensor<4xf32> loc(#loc55)
    %58 = arith.select %34, %57, %cst_0 : tensor<4xi1>, tensor<4xf32> loc(#loc56)
    %59 = arith.addf %33, %58 : tensor<4xf32> loc(#loc57)
    %60 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc58)
    %61 = tt.addptr %60, %4 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc58)
    tt.store %61, %59, %5 : tensor<4x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":21:28)
#loc3 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":21:33)
#loc4 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":22:36)
#loc5 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":22:23)
#loc6 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":23:21)
#loc7 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":25:32)
#loc8 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":25:30)
#loc9 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":25:37)
#loc10 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":26:34)
#loc11 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":26:30)
#loc12 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":26:41)
#loc13 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":27:34)
#loc14 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":27:30)
#loc15 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":27:41)
#loc16 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":28:34)
#loc17 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":28:30)
#loc18 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":28:41)
#loc19 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":29:30)
#loc20 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":29:35)
#loc21 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":30:31)
#loc22 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":30:38)
#loc23 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":31:31)
#loc24 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":31:42)
#loc25 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":32:31)
#loc26 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":32:42)
#loc27 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":33:31)
#loc28 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":33:42)
#loc29 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":34:18)
#loc30 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":35:18)
#loc31 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":36:18)
#loc32 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":38:19)
#loc33 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":40:33)
#loc34 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":42:20)
#loc35 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":43:20)
#loc36 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":44:35)
#loc37 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:28)
#loc38 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:46)
#loc39 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:38)
#loc40 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:54)
#loc41 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:52)
#loc42 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":45:62)
#loc43 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":46:39)
#loc44 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":46:31)
#loc45 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":46:46)
#loc46 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":47:24)
#loc47 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":48:24)
#loc48 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":49:20)
#loc49 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":50:24)
#loc50 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":51:20)
#loc51 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":52:24)
#loc52 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":53:20)
#loc53 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":54:24)
#loc54 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":55:20)
#loc55 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":56:13)
#loc56 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":58:34)
#loc57 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":59:19)
#loc58 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":60:25)
#loc59 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":60:37)
#loc60 = loc("inductor_cache/6q/c6qszd2mge33jf64hj7umy5sewju2cmy5xu4ij5zc5yjxg3iolgm.py":60:4)
