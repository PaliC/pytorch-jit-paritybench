; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 10, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 2, !dbg !12
  %11 = and i32 %10, 508, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 512, !dbg !13
  %14 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !14
  %15 = insertelement <2 x i32> %14, i32 %12, i64 1, !dbg !14
  %16 = sdiv <2 x i32> %15, splat (i32 256), !dbg !14
  %17 = srem <2 x i32> %16, splat (i32 80), !dbg !15
  %18 = srem i32 %12, 256, !dbg !16
  %.frozen = freeze i32 %12, !dbg !17
  %19 = sdiv i32 %.frozen, 20480, !dbg !17
  %.frozen24 = freeze i32 %13, !dbg !17
  %20 = sdiv i32 %.frozen24, 20480, !dbg !17
  %21 = mul i32 %19, 20480, !dbg !18
  %.decomposed = sub i32 %.frozen, %21, !dbg !18
  %22 = mul i32 %20, 20480, !dbg !18
  %.decomposed25 = sub i32 %.frozen24, %22, !dbg !18
  %23 = extractelement <2 x i32> %17, i64 1, !dbg !19
  %24 = icmp slt i32 %23, 64, !dbg !20
  %25 = extractelement <2 x i32> %17, i64 0, !dbg !19
  %26 = icmp slt i32 %25, 64, !dbg !20
  %27 = icmp slt i32 %23, 48, !dbg !21
  %28 = icmp slt i32 %25, 48, !dbg !21
  %29 = icmp slt i32 %23, 32, !dbg !22
  %30 = icmp slt i32 %25, 32, !dbg !22
  %31 = add nsw i32 %18, 65536, !dbg !23
  %32 = shl nsw i32 %23, 8, !dbg !24
  %33 = shl nsw i32 %25, 8, !dbg !24
  %34 = add nsw i32 %32, %31, !dbg !25
  %35 = add nsw i32 %33, %31, !dbg !25
  %36 = mul i32 %19, 73728, !dbg !26
  %37 = mul i32 %20, 73728, !dbg !26
  %38 = add i32 %34, %36, !dbg !27
  %39 = add i32 %35, %37, !dbg !27
  %40 = sext i32 %38 to i64, !dbg !28
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !28
  %42 = sext i32 %39 to i64, !dbg !28
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !28
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %41, i1 %29, i32 0, i1 %29, i32 0, i1 %29, i32 0, i1 %29, i32 0, i1 %29) #1, !dbg !29
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !29
  %46 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !29
  %47 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !29
  %48 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !29
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %43, i1 %30, i32 0, i1 %30, i32 0, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !29
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !29
  %51 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !29
  %52 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !29
  %53 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !29
  %54 = and <2 x i32> %17, splat (i32 -16), !dbg !30
  %55 = shufflevector <2 x i32> %54, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !30
  %56 = mul i32 %19, 69632, !dbg !31
  %57 = mul i32 %20, 69632, !dbg !31
  %58 = add nsw i32 %34, -8192, !dbg !32
  %59 = add i32 %58, %56, !dbg !33
  %60 = add nsw i32 %35, -8192, !dbg !32
  %61 = add i32 %60, %57, !dbg !33
  %62 = sext i32 %59 to i64, !dbg !34
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %62, !dbg !34
  %64 = sext i32 %61 to i64, !dbg !34
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !34
  %66 = icmp eq <4 x i32> %55, <i32 48, i32 48, i32 32, i32 32>, !dbg !35
  %67 = extractelement <4 x i1> %66, i64 3, !dbg !36
  %68 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %63, i1 %67, i32 0, i1 %67, i32 0, i1 %67, i32 0, i1 %67, i32 0, i1 %67) #1, !dbg !36
  %69 = extractvalue { i32, i32, i32, i32 } %68, 0, !dbg !36
  %70 = extractvalue { i32, i32, i32, i32 } %68, 1, !dbg !36
  %71 = extractvalue { i32, i32, i32, i32 } %68, 2, !dbg !36
  %72 = extractvalue { i32, i32, i32, i32 } %68, 3, !dbg !36
  %73 = extractelement <4 x i1> %66, i64 2, !dbg !36
  %74 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %65, i1 %73, i32 0, i1 %73, i32 0, i1 %73, i32 0, i1 %73, i32 0, i1 %73) #1, !dbg !36
  %75 = extractvalue { i32, i32, i32, i32 } %74, 0, !dbg !36
  %76 = extractvalue { i32, i32, i32, i32 } %74, 1, !dbg !36
  %77 = extractvalue { i32, i32, i32, i32 } %74, 2, !dbg !36
  %78 = extractvalue { i32, i32, i32, i32 } %74, 3, !dbg !36
  %.v = select i1 %29, i32 %45, i32 %69, !dbg !37
  %.v1 = select i1 %29, i32 %46, i32 %70, !dbg !37
  %.v2 = select i1 %29, i32 %47, i32 %71, !dbg !37
  %.v3 = select i1 %29, i32 %48, i32 %72, !dbg !37
  %.v4 = select i1 %30, i32 %50, i32 %75, !dbg !37
  %.v5 = select i1 %30, i32 %51, i32 %76, !dbg !37
  %.v6 = select i1 %30, i32 %52, i32 %77, !dbg !37
  %.v7 = select i1 %30, i32 %53, i32 %78, !dbg !37
  %79 = add nsw i32 %34, -12288, !dbg !38
  %80 = add i32 %79, %56, !dbg !39
  %81 = add nsw i32 %35, -12288, !dbg !38
  %82 = add i32 %81, %57, !dbg !39
  %83 = sext i32 %80 to i64, !dbg !40
  %84 = getelementptr float, ptr addrspace(1) %2, i64 %83, !dbg !40
  %85 = sext i32 %82 to i64, !dbg !40
  %86 = getelementptr float, ptr addrspace(1) %2, i64 %85, !dbg !40
  %87 = extractelement <4 x i1> %66, i64 1, !dbg !41
  %88 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %84, i1 %87, i32 0, i1 %87, i32 0, i1 %87, i32 0, i1 %87, i32 0, i1 %87) #1, !dbg !41
  %89 = extractvalue { i32, i32, i32, i32 } %88, 0, !dbg !41
  %90 = extractvalue { i32, i32, i32, i32 } %88, 1, !dbg !41
  %91 = extractvalue { i32, i32, i32, i32 } %88, 2, !dbg !41
  %92 = extractvalue { i32, i32, i32, i32 } %88, 3, !dbg !41
  %93 = extractelement <4 x i1> %66, i64 0, !dbg !41
  %94 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %86, i1 %93, i32 0, i1 %93, i32 0, i1 %93, i32 0, i1 %93, i32 0, i1 %93) #1, !dbg !41
  %95 = extractvalue { i32, i32, i32, i32 } %94, 0, !dbg !41
  %96 = extractvalue { i32, i32, i32, i32 } %94, 1, !dbg !41
  %97 = extractvalue { i32, i32, i32, i32 } %94, 2, !dbg !41
  %98 = extractvalue { i32, i32, i32, i32 } %94, 3, !dbg !41
  %.v8 = select i1 %27, i32 %.v, i32 %89, !dbg !42
  %.v9 = select i1 %27, i32 %.v1, i32 %90, !dbg !42
  %.v10 = select i1 %27, i32 %.v2, i32 %91, !dbg !42
  %.v11 = select i1 %27, i32 %.v3, i32 %92, !dbg !42
  %.v12 = select i1 %28, i32 %.v4, i32 %95, !dbg !42
  %.v13 = select i1 %28, i32 %.v5, i32 %96, !dbg !42
  %.v14 = select i1 %28, i32 %.v6, i32 %97, !dbg !42
  %.v15 = select i1 %28, i32 %.v7, i32 %98, !dbg !42
  %99 = icmp sgt i32 %23, 63, !dbg !19
  %100 = icmp sgt i32 %25, 63, !dbg !19
  %101 = add nsw i32 %34, -16384, !dbg !43
  %102 = add i32 %101, %56, !dbg !44
  %103 = add nsw i32 %35, -16384, !dbg !43
  %104 = add i32 %103, %57, !dbg !44
  %105 = sext i32 %102 to i64, !dbg !45
  %106 = getelementptr float, ptr addrspace(1) %3, i64 %105, !dbg !45
  %107 = sext i32 %104 to i64, !dbg !45
  %108 = getelementptr float, ptr addrspace(1) %3, i64 %107, !dbg !45
  %109 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %106, i1 %99, i32 0, i1 %99, i32 0, i1 %99, i32 0, i1 %99, i32 0, i1 %99) #1, !dbg !46
  %110 = extractvalue { i32, i32, i32, i32 } %109, 0, !dbg !46
  %111 = extractvalue { i32, i32, i32, i32 } %109, 1, !dbg !46
  %112 = extractvalue { i32, i32, i32, i32 } %109, 2, !dbg !46
  %113 = extractvalue { i32, i32, i32, i32 } %109, 3, !dbg !46
  %114 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %108, i1 %100, i32 0, i1 %100, i32 0, i1 %100, i32 0, i1 %100, i32 0, i1 %100) #1, !dbg !46
  %115 = extractvalue { i32, i32, i32, i32 } %114, 0, !dbg !46
  %116 = extractvalue { i32, i32, i32, i32 } %114, 1, !dbg !46
  %117 = extractvalue { i32, i32, i32, i32 } %114, 2, !dbg !46
  %118 = extractvalue { i32, i32, i32, i32 } %114, 3, !dbg !46
  %.v16 = select i1 %24, i32 %.v8, i32 %110, !dbg !47
  %.v17 = select i1 %24, i32 %.v9, i32 %111, !dbg !47
  %.v18 = select i1 %24, i32 %.v10, i32 %112, !dbg !47
  %.v19 = select i1 %24, i32 %.v11, i32 %113, !dbg !47
  %.v20 = select i1 %26, i32 %.v12, i32 %115, !dbg !47
  %.v21 = select i1 %26, i32 %.v13, i32 %116, !dbg !47
  %.v22 = select i1 %26, i32 %.v14, i32 %117, !dbg !47
  %.v23 = select i1 %26, i32 %.v15, i32 %118, !dbg !47
  %119 = mul i32 %19, 86016, !dbg !48
  %120 = mul i32 %20, 86016, !dbg !48
  %121 = add i32 %119, %.decomposed, !dbg !49
  %122 = add i32 %120, %.decomposed25, !dbg !49
  %123 = sext i32 %121 to i64, !dbg !50
  %124 = getelementptr float, ptr addrspace(1) %4, i64 %123, !dbg !50
  %125 = sext i32 %122 to i64, !dbg !50
  %126 = getelementptr float, ptr addrspace(1) %4, i64 %125, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v16, i32 %.v17, i32 %.v18, i32 %.v19, ptr addrspace(1) %124, i1 true) #1, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.v20, i32 %.v21, i32 %.v22, i32 %.v23, ptr addrspace(1) %126, i1 true) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqea36zsbtyzacc6swbxqekl67jylnr5qrfrc73jok3f77epyezo.py", directory: "inductor_cache/qe")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 62, column: 20, scope: !7)
!20 = !DILocation(line: 32, column: 18, scope: !7)
!21 = !DILocation(line: 37, column: 18, scope: !7)
!22 = !DILocation(line: 43, column: 20, scope: !7)
!23 = !DILocation(line: 45, column: 39, scope: !7)
!24 = !DILocation(line: 45, column: 49, scope: !7)
!25 = !DILocation(line: 45, column: 44, scope: !7)
!26 = !DILocation(line: 45, column: 61, scope: !7)
!27 = !DILocation(line: 45, column: 55, scope: !7)
!28 = !DILocation(line: 45, column: 31, scope: !7)
!29 = !DILocation(line: 45, column: 66, scope: !7)
!30 = !DILocation(line: 49, column: 20, scope: !7)
!31 = !DILocation(line: 50, column: 71, scope: !7)
!32 = !DILocation(line: 50, column: 44, scope: !7)
!33 = !DILocation(line: 50, column: 65, scope: !7)
!34 = !DILocation(line: 50, column: 31, scope: !7)
!35 = !DILocation(line: 57, column: 20, scope: !7)
!36 = !DILocation(line: 50, column: 76, scope: !7)
!37 = !DILocation(line: 51, column: 35, scope: !7)
!38 = !DILocation(line: 58, column: 44, scope: !7)
!39 = !DILocation(line: 58, column: 65, scope: !7)
!40 = !DILocation(line: 58, column: 31, scope: !7)
!41 = !DILocation(line: 58, column: 76, scope: !7)
!42 = !DILocation(line: 59, column: 34, scope: !7)
!43 = !DILocation(line: 65, column: 44, scope: !7)
!44 = !DILocation(line: 65, column: 63, scope: !7)
!45 = !DILocation(line: 65, column: 31, scope: !7)
!46 = !DILocation(line: 65, column: 74, scope: !7)
!47 = !DILocation(line: 0, scope: !7)
!48 = !DILocation(line: 67, column: 36, scope: !7)
!49 = !DILocation(line: 67, column: 30, scope: !7)
!50 = !DILocation(line: 67, column: 25, scope: !7)
!51 = !DILocation(line: 67, column: 48, scope: !7)
!52 = !DILocation(line: 67, column: 4, scope: !7)
