; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_45(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = add i32 %9, -2560, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = add i32 %9, -2048, !dbg !16
  %14 = sext i32 %13 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = add i32 %9, -1536, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !20
  %20 = shufflevector <2 x i32> %19, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !20
  %21 = sdiv <2 x i32> %20, <i32 2048, i32 512>, !dbg !20
  %22 = srem <2 x i32> %21, splat (i32 4), !dbg !21
  %23 = extractelement <2 x i32> %22, i64 0, !dbg !22
  %24 = icmp sgt i32 %23, 0, !dbg !23
  %25 = icmp sgt <2 x i32> %22, <i32 -1, i32 0>, !dbg !24
  %26 = extractelement <2 x i1> %25, i64 1, !dbg !25
  %27 = and i1 %24, %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %27, i32 -8388608, i1 %27) #1, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = extractelement <2 x i32> %22, i64 1, !dbg !27
  %31 = icmp sgt i32 %30, -1, !dbg !28
  %32 = and i1 %24, %31, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %32, i32 -8388608, i1 %32) #1, !dbg !30
  %34 = bitcast i32 %33 to float, !dbg !30
  %35 = fcmp ogt float %34, %29, !dbg !31
  %36 = fcmp uno float %34, 0.000000e+00, !dbg !35
  %37 = or i1 %35, %36, !dbg !36
  %38 = select i1 %37, float %34, float %29, !dbg !37
  %39 = add nsw i32 %30, 1, !dbg !38
  %40 = icmp ult i32 %39, 4, !dbg !38
  %41 = and i1 %24, %40, !dbg !39
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %41, i32 -8388608, i1 %41) #1, !dbg !40
  %43 = bitcast i32 %42 to float, !dbg !40
  %44 = fcmp olt float %38, %43, !dbg !41
  %45 = fcmp uno float %43, 0.000000e+00, !dbg !43
  %46 = or i1 %45, %44, !dbg !44
  %47 = select i1 %46, float %43, float %38, !dbg !45
  %48 = extractelement <2 x i1> %25, i64 0, !dbg !46
  %49 = and i1 %48, %26, !dbg !46
  %50 = add i32 %9, -512, !dbg !47
  %51 = sext i32 %50 to i64, !dbg !48
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !48
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %49, i32 -8388608, i1 %49) #1, !dbg !49
  %54 = bitcast i32 %53 to float, !dbg !49
  %55 = fcmp olt float %47, %54, !dbg !50
  %56 = fcmp uno float %54, 0.000000e+00, !dbg !52
  %57 = or i1 %56, %55, !dbg !53
  %58 = select i1 %57, float %54, float %47, !dbg !54
  %59 = or i32 %23, %30, !dbg !27
  %60 = icmp sgt i32 %59, -1, !dbg !27
  %61 = sext i32 %9 to i64, !dbg !55
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !55
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %60, i32 -8388608, i1 %60) #1, !dbg !56
  %64 = bitcast i32 %63 to float, !dbg !56
  %65 = fcmp olt float %58, %64, !dbg !57
  %66 = fcmp uno float %64, 0.000000e+00, !dbg !59
  %67 = or i1 %66, %65, !dbg !60
  %68 = select i1 %67, float %64, float %58, !dbg !61
  %69 = and i1 %48, %40, !dbg !62
  %70 = add i32 %9, 512, !dbg !63
  %71 = sext i32 %70 to i64, !dbg !64
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !64
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %69, i32 -8388608, i1 %69) #1, !dbg !65
  %74 = bitcast i32 %73 to float, !dbg !65
  %75 = fcmp olt float %68, %74, !dbg !66
  %76 = fcmp uno float %74, 0.000000e+00, !dbg !68
  %77 = or i1 %76, %75, !dbg !69
  %78 = select i1 %77, float %74, float %68, !dbg !70
  %79 = add nsw i32 %23, 1, !dbg !22
  %80 = icmp ult i32 %79, 4, !dbg !22
  %81 = and i1 %26, %80, !dbg !71
  %82 = add i32 %9, 1536, !dbg !72
  %83 = sext i32 %82 to i64, !dbg !73
  %84 = getelementptr float, ptr addrspace(1) %0, i64 %83, !dbg !73
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %81, i32 -8388608, i1 %81) #1, !dbg !74
  %86 = bitcast i32 %85 to float, !dbg !74
  %87 = fcmp olt float %78, %86, !dbg !75
  %88 = fcmp uno float %86, 0.000000e+00, !dbg !77
  %89 = or i1 %88, %87, !dbg !78
  %90 = select i1 %89, float %86, float %78, !dbg !79
  %91 = and i1 %31, %80, !dbg !80
  %92 = add i32 %9, 2048, !dbg !81
  %93 = sext i32 %92 to i64, !dbg !82
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !82
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %91, i32 -8388608, i1 %91) #1, !dbg !83
  %96 = bitcast i32 %95 to float, !dbg !83
  %97 = fcmp olt float %90, %96, !dbg !84
  %98 = fcmp uno float %96, 0.000000e+00, !dbg !86
  %99 = or i1 %98, %97, !dbg !87
  %100 = select i1 %99, float %96, float %90, !dbg !88
  %101 = or i32 %79, %39, !dbg !89
  %102 = icmp ult i32 %101, 4, !dbg !89
  %103 = add i32 %9, 2560, !dbg !90
  %104 = sext i32 %103 to i64, !dbg !91
  %105 = getelementptr float, ptr addrspace(1) %0, i64 %104, !dbg !91
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %105, i1 %102, i32 -8388608, i1 %102) #1, !dbg !92
  %107 = bitcast i32 %106 to float, !dbg !92
  %108 = fcmp olt float %100, %107, !dbg !93
  %109 = fcmp uno float %107, 0.000000e+00, !dbg !95
  %110 = or i1 %109, %108, !dbg !96
  %111 = zext i1 %35 to i8, !dbg !97
  %112 = select i1 %44, i8 2, i8 %111, !dbg !98
  %113 = select i1 %55, i8 3, i8 %112, !dbg !99
  %114 = select i1 %65, i8 4, i8 %113, !dbg !100
  %115 = select i1 %75, i8 5, i8 %114, !dbg !101
  %116 = select i1 %87, i8 6, i8 %115, !dbg !102
  %117 = select i1 %97, i8 7, i8 %116, !dbg !103
  %118 = select i1 %108, i8 8, i8 %117, !dbg !104
  %119 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !105
  %120 = bitcast float %100 to i32, !dbg !106
  %121 = select i1 %110, i32 %106, i32 %120, !dbg !107
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %121, ptr addrspace(1) %119, i1 true) #1, !dbg !106
  %122 = getelementptr i8, ptr addrspace(1) %2, i64 %61, !dbg !108
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %118, ptr addrspace(1) %122, i1 true) #1, !dbg !109
  ret void, !dbg !110
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4c2jv5c53ppe532vovsrgta4erm2efudb7m4n6bfwchyhyfngcr.py", directory: "inductor_cache/4c")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_45, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_45, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_45", linkageName: "triton_poi_fused_max_pool2d_with_indices_45", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 38, column: 41, scope: !7)
!15 = !DILocation(line: 38, column: 31, scope: !7)
!16 = !DILocation(line: 44, column: 41, scope: !7)
!17 = !DILocation(line: 44, column: 31, scope: !7)
!18 = !DILocation(line: 51, column: 41, scope: !7)
!19 = !DILocation(line: 51, column: 31, scope: !7)
!20 = !DILocation(line: 24, column: 21, scope: !7)
!21 = !DILocation(line: 24, column: 29, scope: !7)
!22 = !DILocation(line: 69, column: 20, scope: !7)
!23 = !DILocation(line: 29, column: 19, scope: !7)
!24 = !DILocation(line: 54, column: 21, scope: !7)
!25 = !DILocation(line: 37, column: 19, scope: !7)
!26 = !DILocation(line: 38, column: 46, scope: !7)
!27 = !DILocation(line: 60, column: 20, scope: !7)
!28 = !DILocation(line: 40, column: 21, scope: !7)
!29 = !DILocation(line: 43, column: 19, scope: !7)
!30 = !DILocation(line: 44, column: 46, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 45, column: 42, scope: !7)
!35 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 49, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 19, scope: !7)
!40 = !DILocation(line: 51, column: 46, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !42)
!42 = !DILocation(line: 52, column: 42, scope: !7)
!43 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !42)
!44 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !42)
!45 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !42)
!46 = !DILocation(line: 57, column: 20, scope: !7)
!47 = !DILocation(line: 58, column: 40, scope: !7)
!48 = !DILocation(line: 58, column: 31, scope: !7)
!49 = !DILocation(line: 58, column: 45, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !51)
!51 = !DILocation(line: 59, column: 42, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !51)
!55 = !DILocation(line: 61, column: 31, scope: !7)
!56 = !DILocation(line: 61, column: 36, scope: !7)
!57 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !58)
!58 = !DILocation(line: 62, column: 42, scope: !7)
!59 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !58)
!60 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !58)
!61 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !58)
!62 = !DILocation(line: 63, column: 20, scope: !7)
!63 = !DILocation(line: 64, column: 37, scope: !7)
!64 = !DILocation(line: 64, column: 31, scope: !7)
!65 = !DILocation(line: 64, column: 42, scope: !7)
!66 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !67)
!67 = !DILocation(line: 65, column: 42, scope: !7)
!68 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !67)
!69 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !67)
!70 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !67)
!71 = !DILocation(line: 70, column: 20, scope: !7)
!72 = !DILocation(line: 71, column: 38, scope: !7)
!73 = !DILocation(line: 71, column: 31, scope: !7)
!74 = !DILocation(line: 71, column: 43, scope: !7)
!75 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !76)
!76 = !DILocation(line: 72, column: 42, scope: !7)
!77 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !76)
!78 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !76)
!79 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !76)
!80 = !DILocation(line: 73, column: 20, scope: !7)
!81 = !DILocation(line: 74, column: 38, scope: !7)
!82 = !DILocation(line: 74, column: 31, scope: !7)
!83 = !DILocation(line: 74, column: 43, scope: !7)
!84 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !85)
!85 = !DILocation(line: 75, column: 42, scope: !7)
!86 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !85)
!87 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !85)
!88 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !85)
!89 = !DILocation(line: 76, column: 20, scope: !7)
!90 = !DILocation(line: 77, column: 38, scope: !7)
!91 = !DILocation(line: 77, column: 31, scope: !7)
!92 = !DILocation(line: 77, column: 43, scope: !7)
!93 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !94)
!94 = !DILocation(line: 78, column: 42, scope: !7)
!95 = !DILocation(line: 120, column: 21, scope: !32, inlinedAt: !94)
!96 = !DILocation(line: 120, column: 16, scope: !32, inlinedAt: !94)
!97 = !DILocation(line: 82, column: 35, scope: !7)
!98 = !DILocation(line: 85, column: 35, scope: !7)
!99 = !DILocation(line: 88, column: 35, scope: !7)
!100 = !DILocation(line: 91, column: 35, scope: !7)
!101 = !DILocation(line: 94, column: 35, scope: !7)
!102 = !DILocation(line: 97, column: 35, scope: !7)
!103 = !DILocation(line: 100, column: 35, scope: !7)
!104 = !DILocation(line: 103, column: 35, scope: !7)
!105 = !DILocation(line: 104, column: 25, scope: !7)
!106 = !DILocation(line: 104, column: 37, scope: !7)
!107 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !94)
!108 = !DILocation(line: 105, column: 25, scope: !7)
!109 = !DILocation(line: 105, column: 37, scope: !7)
!110 = !DILocation(line: 105, column: 4, scope: !7)
