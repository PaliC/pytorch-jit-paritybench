//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u32 triton_poi_fused_cat_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:21:33
	shl.b32 	%r17, %r1, 7;
	.loc	1 22 36                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:22:36
	mov.u32 	%r18, %tid.x;
	and.b32  	%r19, %r18, 127;
	.loc	1 22 23                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:22:23
	or.b32  	%r20, %r17, %r19;
	.loc	1 23 21                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:23:21
	setp.lt.s32 	%p15, %r20, 768;
	.loc	1 24 21                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:24:21
	shr.s32 	%r22, %r20, 31;
	shr.u32 	%r23, %r22, 30;
	add.s32 	%r24, %r20, %r23;
	shr.s32 	%r25, %r24, 2;
	.loc	1 24 26                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:24:26
	mul.hi.s32 	%r26, %r25, 715827883;
	shr.u32 	%r27, %r26, 31;
	shr.u32 	%r28, %r26, 1;
	add.s32 	%r29, %r28, %r27;
	mul.lo.s32 	%r30, %r29, 12;
	sub.s32 	%r31, %r25, %r30;
	.loc	1 25 19                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:25:19
	and.b32  	%r32, %r24, -4;
	sub.s32 	%r33, %r20, %r32;
	.loc	1 26 19                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:26:19
	mul.hi.s32 	%r34, %r20, 715827883;
	shr.u32 	%r35, %r34, 31;
	shr.s32 	%r36, %r34, 3;
	add.s32 	%r37, %r36, %r35;
	.loc	1 33 18                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:33:18
	setp.lt.s32 	%p16, %r31, 4;
	.loc	1 34 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:35
	mul.lo.s32 	%r38, %r37, 48;
	sub.s32 	%r39, %r20, %r38;
	.loc	1 34 47                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:47
	shl.b32 	%r40, %r37, 4;
	.loc	1 34 44                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:44
	add.s32 	%r41, %r40, %r39;
	.loc	1 34 30                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:30
	mul.wide.s32 	%rd11, %r41, 4;
	add.s64 	%rd1, %rd9, %rd11;
	.loc	1 34 59                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:59
	and.pred  	%p1, %p15, %p16;
	mov.b32 	%r3, 0;
	.loc	1 34 52                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:34:52
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 38 18                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:38:18
	and.b32  	%r42, %r31, -4;
	setp.eq.s32 	%p17, %r42, 4;
	.loc	1 41 21                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:41:21
	setp.gt.s32 	%p18, %r20, 191;
	.loc	1 42 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:42:20
	and.pred  	%p19, %p18, %p17;
	.loc	1 43 39                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:43:39
	shl.b32 	%r43, %r31, 2;
	add.s32 	%r44, %r43, -16;
	.loc	1 43 36                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:43:36
	add.s32 	%r45, %r40, %r33;
	.loc	1 43 31                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:43:31
	cvt.s64.s32 	%rd12, %r45;
	cvt.s64.s32 	%rd13, %r43;
	add.s64 	%rd14, %rd12, %rd13;
	shl.b64 	%rd15, %rd14, 2;
	add.s64 	%rd16, %rd9, %rd15;
	add.s64 	%rd2, %rd16, -64;
	.loc	1 43 68                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:43:68
	and.pred  	%p3, %p15, %p19;
	.loc	1 43 60                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:43:60
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f1, %r4;
	.loc	1 44 31                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:44:31
	cvt.s64.s32 	%rd17, %r44;
	add.s64 	%rd18, %rd12, %rd17;
	shl.b64 	%rd19, %rd18, 2;
	add.s64 	%rd20, %rd9, %rd19;
	add.s64 	%rd3, %rd20, -256;
	.loc	1 44 68                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:44:68
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 45 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:45:20
	sub.f32 	%f3, %f1, %f2;
	.loc	1 47 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:47:35
	selp.f32 	%f4, %f3, 0f00000000, %p19;
	.loc	1 48 67                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:48:67
	and.pred  	%p7, %p15, %p17;
	.loc	1 48 60                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:48:60
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd2 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f5, %r8;
	.loc	1 49 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:49:35
	selp.f32 	%f6, %f4, %f5, %p18;
	.loc	1 52 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:52:20
	setp.gt.s32 	%p20, %r31, 7;
	.loc	1 57 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:57:20
	setp.lt.s32 	%p21, %r20, 576;
	.loc	1 58 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:58:20
	and.pred  	%p9, %p21, %p20;
	.loc	1 59 39                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:59:39
	add.s32 	%r46, %r43, -32;
	.loc	1 59 31                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:59:31
	add.s64 	%rd5, %rd16, -128;
	.loc	1 59 60                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:59:60
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f7, %r10;
	.loc	1 60 31                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:60:31
	cvt.s64.s32 	%rd21, %r46;
	add.s64 	%rd22, %rd12, %rd21;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd9, %rd23;
	add.s64 	%rd6, %rd24, 256;
	.loc	1 60 65                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:60:65
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p9 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f8, %r12;
	.loc	1 61 20                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:61:20
	sub.f32 	%f9, %f7, %f8;
	.loc	1 63 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:63:35
	selp.f32 	%f10, %f9, 0f00000000, %p9;
	.loc	1 64 68                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:64:68
	and.pred  	%p13, %p15, %p20;
	.loc	1 64 60                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:64:60
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.b32 { %r14 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f11, %r14;
	.loc	1 65 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:65:35
	selp.f32 	%f12, %f10, %f11, %p21;
	.loc	1 67 35                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:67:35
	selp.f32 	%f13, %f12, 0f00000000, %p20;
	.loc	1 0 0                           // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:0:0
	selp.f32 	%f14, %f6, %f13, %p17;
	.loc	1 70 25                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:70:25
	mul.wide.s32 	%rd25, %r20, 4;
	add.s64 	%rd8, %rd10, %rd25;
	.loc	1 70 37                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:70:37
	mov.b32 	%r47, %f14;
	.loc	1 69 33                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:69:33
	selp.b32 	%r16, %r2, %r47, %p16;
	.loc	1 70 37                         // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:70:37
	// begin inline asm
	@%p15 st.global.b32 [ %rd8 + 0 ], { %r16 };
	// end inline asm
	.loc	1 70 4                          // cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py:70:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xn/cxnscz7fiundvnfhizkr6p7g5llwizkdtzwrbwru57npa77mdbdk.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 110
.b8 115
.b8 99
.b8 122
.b8 55
.b8 102
.b8 105
.b8 117
.b8 110
.b8 100
.b8 118
.b8 110
.b8 102
.b8 104
.b8 105
.b8 122
.b8 107
.b8 114
.b8 54
.b8 112
.b8 55
.b8 103
.b8 53
.b8 108
.b8 108
.b8 119
.b8 105
.b8 122
.b8 107
.b8 100
.b8 116
.b8 122
.b8 119
.b8 114
.b8 98
.b8 119
.b8 114
.b8 117
.b8 53
.b8 55
.b8 110
.b8 112
.b8 97
.b8 55
.b8 55
.b8 109
.b8 100
.b8 98
.b8 100
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
