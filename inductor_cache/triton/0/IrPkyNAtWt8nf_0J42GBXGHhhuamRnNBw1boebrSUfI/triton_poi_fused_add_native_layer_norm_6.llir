; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_add_native_layer_norm_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %8 = shl i32 %7, 6, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = lshr i32 %9, 1, !dbg !12
  %11 = and i32 %10, 15, !dbg !12
  %12 = lshr i32 %9, 1, !dbg !12
  %13 = and i32 %12, 16, !dbg !12
  %14 = lshr i32 %9, 1, !dbg !12
  %15 = and i32 %14, 32, !dbg !12
  %16 = and i32 %9, 1, !dbg !12
  %17 = shl nuw nsw i32 %16, 1, !dbg !12
  %18 = shl i32 %9, 1, !dbg !12
  %19 = and i32 %18, 62, !dbg !12
  %20 = or disjoint i32 %13, %11, !dbg !12
  %21 = or disjoint i32 %20, %15, !dbg !12
  %22 = or disjoint i32 %21, %8, !dbg !13
  %23 = or disjoint i32 %8, %19, !dbg !13
  %24 = icmp slt i32 %22, 64, !dbg !14
  %25 = icmp slt i32 %23, 64, !dbg !14
  %26 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %27 = shl i32 %26, 2, !dbg !16
  %.lobit14 = lshr i32 %9, 5, !dbg !17
  %28 = and i32 %.lobit14, 3, !dbg !17
  %29 = or disjoint i32 %27, %17, !dbg !18
  %30 = or disjoint i32 %28, %27, !dbg !18
  %31 = icmp slt i32 %29, 4, !dbg !19
  %32 = icmp slt i32 %30, 4, !dbg !19
  %.frozen = freeze i32 %22, !dbg !20
  %33 = sdiv i32 %.frozen, 16, !dbg !20
  %34 = mul i32 %33, 16, !dbg !21
  %.decomposed = sub i32 %.frozen, %34, !dbg !21
  %.frozen5 = freeze i32 %23, !dbg !20
  %35 = sdiv i32 %.frozen5, 16, !dbg !20
  %36 = mul i32 %35, 16, !dbg !21
  %.decomposed6 = sub i32 %.frozen5, %36, !dbg !21
  %37 = shl nsw i32 %33, 2, !dbg !22
  %38 = add i32 %37, %29, !dbg !23
  %39 = shl nsw i32 %.decomposed, 4, !dbg !24
  %40 = add i32 %38, %39, !dbg !25
  %41 = sext i32 %40 to i64, !dbg !26
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !26
  %43 = and i1 %24, %31, !dbg !27
  %44 = and i1 %25, %32, !dbg !27
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %43) #2, !dbg !28
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !28
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !28
  %48 = bitcast i32 %46 to float, !dbg !28
  %49 = bitcast i32 %47 to float, !dbg !28
  %50 = sext i32 %29 to i64, !dbg !29
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !29
  %52 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %51, i1 %31) #2, !dbg !30
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !30
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !30
  %55 = bitcast i32 %53 to float, !dbg !30
  %56 = bitcast i32 %54 to float, !dbg !30
  %57 = shl i32 %30, 4, !dbg !31
  %58 = add i32 %57, %.decomposed6, !dbg !32
  %59 = shl i32 %35, 6, !dbg !33
  %60 = add i32 %58, %59, !dbg !34
  %61 = sext i32 %60 to i64, !dbg !35
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !35
  %63 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %62, i1 %44) #2, !dbg !36
  %64 = extractvalue { i32, i32 } %63, 0, !dbg !36
  %65 = extractvalue { i32, i32 } %63, 1, !dbg !36
  %66 = bitcast i32 %64 to float, !dbg !36
  %67 = bitcast i32 %65 to float, !dbg !36
  %68 = fadd float %48, %55, !dbg !37
  %69 = fadd float %49, %56, !dbg !37
  %70 = shl nuw nsw i32 %16, 7, !dbg !37
  %71 = or disjoint i32 %70, %11, !dbg !37
  %72 = or disjoint i32 %71, %13, !dbg !37
  %73 = or disjoint i32 %72, %15, !dbg !37
  %74 = and i32 %18, 254, !dbg !37
  %.idx = shl nuw nsw i32 %16, 4, !dbg !37
  %75 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !37
  %76 = getelementptr float, ptr addrspace(3) %75, i32 %73, !dbg !37
  %77 = bitcast float %68 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %76, <1 x i32> %77, i1 true) #2, !dbg !37
  %78 = or disjoint i32 %73, 64, !dbg !37
  %79 = lshr i32 %78, 5, !dbg !37
  %80 = and i32 %79, 134217726, !dbg !37
  %81 = getelementptr float, ptr addrspace(3) @global_smem, i32 %80, !dbg !37
  %82 = getelementptr float, ptr addrspace(3) %81, i32 %78, !dbg !37
  %83 = bitcast float %69 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %82, <1 x i32> %83, i1 true) #2, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %84 = lshr i32 %18, 5, !dbg !37
  %85 = and i32 %84, 6, !dbg !37
  %86 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %85, !dbg !37
  %87 = getelementptr inbounds float, ptr addrspace(3) %86, i32 %74, !dbg !37
  %88 = load float, ptr addrspace(3) %87, align 8, !dbg !37
  %89 = getelementptr inbounds i8, ptr addrspace(3) %87, i32 4, !dbg !37
  %90 = load float, ptr addrspace(3) %89, align 4, !dbg !37
  %91 = fadd float %88, %66, !dbg !38
  %92 = fadd float %90, %67, !dbg !38
  %93 = shl i32 %22, 2, !dbg !39
  %94 = add i32 %29, %93, !dbg !40
  %95 = sext i32 %94 to i64, !dbg !41
  %96 = getelementptr float, ptr addrspace(1) %3, i64 %95, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %97 = shl i32 %9, 3, !dbg !42
  %98 = and i32 %97, 248, !dbg !42
  %99 = or disjoint i32 %28, %98, !dbg !42
  %100 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %98, !dbg !42
  %101 = getelementptr inbounds float, ptr addrspace(3) %100, i32 %99, !dbg !42
  %102 = bitcast float %91 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %101, <1 x i32> %102, i1 true) #2, !dbg !42
  %103 = or disjoint i32 %99, 4, !dbg !42
  %104 = lshr i32 %103, 2, !dbg !42
  %105 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %104, !dbg !42
  %106 = getelementptr inbounds float, ptr addrspace(3) %105, i32 %103, !dbg !42
  %107 = bitcast float %92 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %106, <1 x i32> %107, i1 true) #2, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %108 = lshr i32 %74, 2, !dbg !42
  %109 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %108, !dbg !42
  %110 = getelementptr inbounds float, ptr addrspace(3) %109, i32 %74, !dbg !42
  %111 = load i32, ptr addrspace(3) %110, align 4, !dbg !42
  %112 = or disjoint i32 %74, 1, !dbg !42
  %113 = getelementptr inbounds float, ptr addrspace(3) %109, i32 %112, !dbg !42
  %114 = load i32, ptr addrspace(3) %113, align 4, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %111, i32 %114, ptr addrspace(1) %96, i1 %43) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py", directory: "inductor_cache/qq")
!4 = !{ptr @triton_poi_fused_add_native_layer_norm_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_native_layer_norm_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_native_layer_norm_6", linkageName: "triton_poi_fused_add_native_layer_norm_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 37, scope: !7)
!23 = !DILocation(line: 32, column: 35, scope: !7)
!24 = !DILocation(line: 32, column: 45, scope: !7)
!25 = !DILocation(line: 32, column: 42, scope: !7)
!26 = !DILocation(line: 32, column: 30, scope: !7)
!27 = !DILocation(line: 32, column: 58, scope: !7)
!28 = !DILocation(line: 32, column: 50, scope: !7)
!29 = !DILocation(line: 33, column: 30, scope: !7)
!30 = !DILocation(line: 33, column: 35, scope: !7)
!31 = !DILocation(line: 34, column: 38, scope: !7)
!32 = !DILocation(line: 34, column: 35, scope: !7)
!33 = !DILocation(line: 34, column: 46, scope: !7)
!34 = !DILocation(line: 34, column: 43, scope: !7)
!35 = !DILocation(line: 34, column: 30, scope: !7)
!36 = !DILocation(line: 34, column: 51, scope: !7)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 36, column: 18, scope: !7)
!39 = !DILocation(line: 37, column: 32, scope: !7)
!40 = !DILocation(line: 37, column: 30, scope: !7)
!41 = !DILocation(line: 37, column: 25, scope: !7)
!42 = !DILocation(line: 37, column: 43, scope: !7)
!43 = !DILocation(line: 37, column: 4, scope: !7)
