//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_native_layer_norm_6 // -- Begin function triton_poi_fused_add_native_layer_norm_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_native_layer_norm_6
.visible .entry triton_poi_fused_add_native_layer_norm_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_6_param_3,
	.param .u32 triton_poi_fused_add_native_layer_norm_6_param_4,
	.param .u32 triton_poi_fused_add_native_layer_norm_6_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_native_layer_norm_6_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_native_layer_norm_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:22:33
	shl.b32 	%r19, %r1, 6;
	ld.param.u64 	%rd7, [triton_poi_fused_add_native_layer_norm_6_param_2];
	ld.param.u64 	%rd8, [triton_poi_fused_add_native_layer_norm_6_param_3];
	.loc	1 23 44                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:23:44
	mov.u32 	%r20, %tid.x;
	shr.u32 	%r21, %r20, 1;
	bfe.u32 	%r22, %r20, 1, 4;
	and.b32  	%r23, %r21, 16;
	and.b32  	%r24, %r21, 32;
	and.b32  	%r25, %r20, 1;
	shl.b32 	%r26, %r25, 1;
	shl.b32 	%r27, %r20, 1;
	and.b32  	%r28, %r27, 62;
	or.b32  	%r29, %r23, %r22;
	or.b32  	%r30, %r29, %r24;
	.loc	1 23 23                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:23:23
	or.b32  	%r31, %r30, %r19;
	or.b32  	%r32, %r19, %r28;
	.loc	1 24 21                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:24:21
	setp.lt.s32 	%p9, %r31, 64;
	setp.lt.s32 	%p10, %r32, 64;
	.loc	1 25 28                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:25:33
	shl.b32 	%r33, %r2, 2;
	.loc	1 26 44                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:26:44
	bfe.u32 	%r34, %r20, 5, 2;
	.loc	1 26 23                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:26:23
	or.b32  	%r35, %r33, %r26;
	or.b32  	%r36, %r34, %r33;
	.loc	1 27 21                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:27:21
	setp.lt.s32 	%p2, %r35, 4;
	setp.lt.s32 	%p11, %r36, 4;
	.loc	1 30 19                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:30:19
	shr.s32 	%r38, %r31, 31;
	shr.u32 	%r39, %r38, 28;
	add.s32 	%r40, %r31, %r39;
	shr.s32 	%r41, %r40, 4;
	.loc	1 29 19                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:29:19
	and.b32  	%r42, %r40, 268435440;
	sub.s32 	%r43, %r31, %r42;
	.loc	1 30 19                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:30:19
	shr.s32 	%r45, %r32, 31;
	shr.u32 	%r46, %r45, 28;
	add.s32 	%r47, %r32, %r46;
	.loc	1 29 19                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:29:19
	and.b32  	%r48, %r47, -16;
	sub.s32 	%r49, %r32, %r48;
	.loc	1 32 37                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:37
	shl.b32 	%r50, %r41, 2;
	.loc	1 32 35                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:35
	add.s32 	%r51, %r50, %r35;
	.loc	1 32 45                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:45
	shl.b32 	%r52, %r43, 4;
	.loc	1 32 42                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:42
	add.s32 	%r53, %r51, %r52;
	.loc	1 32 30                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:30
	mul.wide.s32 	%rd9, %r53, 4;
	add.s64 	%rd1, %rd5, %rd9;
	.loc	1 32 58                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:58
	and.pred  	%p1, %p9, %p2;
	and.pred  	%p3, %p10, %p11;
	.loc	1 32 50                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:32:50
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:33:30
	mul.wide.s32 	%rd10, %r35, 4;
	add.s64 	%rd2, %rd6, %rd10;
	.loc	1 33 35                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 34 38                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:38
	shl.b32 	%r54, %r36, 4;
	.loc	1 34 35                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:35
	add.s32 	%r55, %r54, %r49;
	.loc	1 34 46                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:46
	shl.b32 	%r56, %r47, 2;
	and.b32  	%r57, %r56, -64;
	.loc	1 34 43                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:43
	add.s32 	%r58, %r55, %r57;
	.loc	1 34 30                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:30
	mul.wide.s32 	%rd11, %r58, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 34 51                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:34:51
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	.loc	1 35 18                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:35:18
	add.f32 	%f7, %f1, %f3;
	add.f32 	%f8, %f2, %f4;
	shl.b32 	%r59, %r25, 7;
	or.b32  	%r60, %r59, %r22;
	or.b32  	%r61, %r60, %r23;
	or.b32  	%r62, %r61, %r24;
	shl.b32 	%r63, %r25, 4;
	mov.u32 	%r64, global_smem;
	add.s32 	%r65, %r64, %r63;
	shl.b32 	%r66, %r62, 2;
	add.s32 	%r9, %r65, %r66;
	mov.b32 	%r10, %f7;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	shr.u32 	%r67, %r59, 3;
	add.s32 	%r68, %r64, %r67;
	add.s32 	%r69, %r68, %r66;
	add.s32 	%r11, %r69, 264;
	mov.b32 	%r12, %f8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r70, %r20, 2;
	and.b32  	%r71, %r70, 24;
	add.s32 	%r72, %r64, %r71;
	shl.b32 	%r73, %r20, 3;
	and.b32  	%r74, %r73, 1016;
	add.s32 	%r75, %r72, %r74;
	ld.shared.v2.f32 	{%f9, %f10}, [%r75];
	.loc	1 36 18                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:36:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 37 32                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:37:32
	shl.b32 	%r76, %r31, 2;
	.loc	1 37 30                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:37:30
	add.s32 	%r77, %r35, %r76;
	.loc	1 37 25                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:37:25
	mul.wide.s32 	%rd12, %r77, 4;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 37 43                         // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:37:43
	bar.sync 	0;
	and.b32  	%r78, %r73, 248;
	or.b32  	%r79, %r34, %r78;
	add.s32 	%r80, %r64, %r78;
	shl.b32 	%r81, %r79, 2;
	add.s32 	%r13, %r80, %r81;
	mov.b32 	%r14, %f11;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r13, 20;
	mov.b32 	%r16, %f12;
	// begin inline asm
	@%p4 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r82, %r27, 252;
	add.s32 	%r83, %r64, %r82;
	add.s32 	%r84, %r83, %r74;
	ld.shared.u32 	%r17, [%r84];
	ld.shared.u32 	%r18, [%r84+4];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r17, %r18 };
	// end inline asm
	.loc	1 37 4                          // cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py:37:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qq/cqqvnvhf4tk6a67rxqkrrgpaa4crnz3k2sb3zjriwotb4foz4si6.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 118
.b8 110
.b8 118
.b8 104
.b8 102
.b8 52
.b8 116
.b8 107
.b8 54
.b8 97
.b8 54
.b8 55
.b8 114
.b8 120
.b8 113
.b8 107
.b8 114
.b8 114
.b8 103
.b8 112
.b8 97
.b8 97
.b8 52
.b8 99
.b8 114
.b8 110
.b8 122
.b8 51
.b8 107
.b8 50
.b8 115
.b8 98
.b8 51
.b8 122
.b8 106
.b8 114
.b8 105
.b8 119
.b8 111
.b8 116
.b8 98
.b8 52
.b8 102
.b8 111
.b8 122
.b8 52
.b8 115
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
