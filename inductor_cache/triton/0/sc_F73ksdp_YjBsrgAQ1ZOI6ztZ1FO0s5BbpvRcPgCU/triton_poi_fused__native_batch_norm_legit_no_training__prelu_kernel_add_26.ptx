//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_13,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_14,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_15,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_16,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_17
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<37>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<37>;
	.loc	1 19 0                          // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:21:33
	shl.b32 	%r25, %r1, 7;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_2];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_3];
	.loc	1 22 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:22:36
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 127;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_4];
	.loc	1 22 23                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:22:23
	or.b32  	%r28, %r25, %r27;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_5];
	.loc	1 25 21                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:25:21
	bfe.s32 	%r29, %r1, 24, 1;
	shr.u32 	%r30, %r29, 26;
	add.s32 	%r31, %r28, %r30;
	shr.s32 	%r32, %r31, 6;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_6];
	.loc	1 25 27                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:25:27
	shr.u32 	%r33, %r32, 27;
	add.s32 	%r34, %r32, %r33;
	and.b32  	%r35, %r34, -32;
	sub.s32 	%r36, %r32, %r35;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_7];
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_8];
	.loc	1 26 30                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:26:30
	mul.wide.s32 	%rd27, %r28, 4;
	add.s64 	%rd1, %rd18, %rd27;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_9];
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_10];
	ld.param.u64 	%rd30, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_11];
	.loc	1 27 30                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:27:30
	mul.wide.s32 	%rd31, %r36, 4;
	add.s64 	%rd2, %rd19, %rd31;
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_12];
	.loc	1 27 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:27:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_13];
	.loc	1 28 30                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:28:30
	add.s64 	%rd3, %rd20, %rd31;
	ld.param.u64 	%rd34, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_14];
	.loc	1 28 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:28:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	ld.param.u64 	%rd35, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_15];
	mov.b32 	%f1, %r4;
	ld.param.u64 	%rd36, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_26_param_16];
	.loc	1 29 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:29:31
	add.s64 	%rd4, %rd21, %rd31;
	.loc	1 29 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:29:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:30:31
	add.s64 	%rd5, %rd22, %rd31;
	.loc	1 30 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:30:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:31:31
	add.s64 	%rd6, %rd23, %rd27;
	.loc	1 31 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:31:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:32:31
	add.s64 	%rd7, %rd24, %rd31;
	.loc	1 32 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:32:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:33:31
	add.s64 	%rd8, %rd25, %rd31;
	.loc	1 33 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:33:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 34 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:34:31
	add.s64 	%rd9, %rd26, %rd31;
	.loc	1 34 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:34:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:35:31
	add.s64 	%rd10, %rd28, %rd31;
	.loc	1 35 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:35:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 32                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:36:32
	add.s64 	%rd11, %rd29, %rd31;
	.loc	1 36 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:36:37
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 32                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:37:32
	add.s64 	%rd12, %rd30, %rd27;
	.loc	1 37 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:37:37
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:38:32
	add.s64 	%rd13, %rd32, %rd31;
	.loc	1 38 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:38:37
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 39 32                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:39:32
	add.s64 	%rd14, %rd33, %rd27;
	.loc	1 39 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:39:37
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 42 18                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:42:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	.loc	1 43 26                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:43:26
	sqrt.approx.ftz.f32 	%f4, %f3;
	.loc	1 45 18                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:45:18
	mov.b32 	%r18, %f4;
	mov.b32 	%r17, 1065353216;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f5, %r16;
	.loc	1 52 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:52:20
	add.f32 	%f6, %f2, 0f3727C5AC;
	.loc	1 53 27                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:53:27
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 26 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:26:35
	mov.b32 	%f8, %r2;
	mov.b32 	%f9, %r7;
	.loc	1 27 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:27:35
	mov.b32 	%f10, %r3;
	mov.b32 	%f11, %r8;
	.loc	1 29 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:29:36
	mov.b32 	%f12, %r5;
	mov.b32 	%f13, %r10;
	.loc	1 30 36                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:30:36
	mov.b32 	%f14, %r6;
	mov.b32 	%f15, %r11;
	.loc	1 37 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:37:37
	mov.b32 	%f16, %r13;
	mov.b32 	%f17, %r15;
	.loc	1 36 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:36:37
	mov.b32 	%f18, %r12;
	mov.b32 	%f19, %r14;
	.loc	1 54 19                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:54:19
	mov.b32 	%r21, %f7;
	// begin inline asm
	div.full.f32 %r19, %r17, %r21;
	// end inline asm
	mov.b32 	%f20, %r19;
	.loc	1 40 18                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:40:18
	sub.f32 	%f21, %f9, %f11;
	sub.f32 	%f22, %f8, %f10;
	.loc	1 48 19                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:48:19
	mul.f32 	%f23, %f22, %f5;
	mul.f32 	%f24, %f21, %f20;
	.loc	1 50 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:50:20
	fma.rn.f32 	%f25, %f24, %f13, %f15;
	mov.b32 	%r23, %f25;
	fma.rn.f32 	%f26, %f23, %f12, %f14;
	mov.b32 	%r22, %f26;
	.loc	1 60 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:60:20
	setp.gt.f32 	%p18, %f25, 0f00000000;
	setp.gt.f32 	%p19, %f26, 0f00000000;
	.loc	1 61 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:61:20
	mul.f32 	%f27, %f25, %f19;
	mul.f32 	%f28, %f26, %f18;
	.loc	1 62 35                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:62:35
	selp.f32 	%f29, %f26, %f28, %p19;
	selp.f32 	%f30, %f25, %f27, %p18;
	.loc	1 63 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:63:20
	add.f32 	%f31, %f30, %f17;
	add.f32 	%f32, %f29, %f16;
	.loc	1 68 20                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:68:20
	add.f32 	%f33, %f32, %f31;
	.loc	1 69 25                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:69:25
	add.s64 	%rd15, %rd34, %rd27;
	.loc	1 69 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:69:37
	// begin inline asm
	@%p1 st.global.b32 [ %rd15 + 0 ], { %r22 };
	// end inline asm
	.loc	1 70 25                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:70:25
	add.s64 	%rd16, %rd35, %rd27;
	.loc	1 70 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:70:37
	// begin inline asm
	@%p1 st.global.b32 [ %rd16 + 0 ], { %r23 };
	// end inline asm
	.loc	1 71 25                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:71:25
	add.s64 	%rd17, %rd36, %rd27;
	.loc	1 71 37                         // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:71:37
	mov.b32 	%r24, %f33;
	// begin inline asm
	@%p1 st.global.b32 [ %rd17 + 0 ], { %r24 };
	// end inline asm
	.loc	1 71 4                          // cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py:71:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fw/cfwvp6ga6xttke3jc7uvozflfviyzkzomaemlhcaoyrszagx3jsx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 119
.b8 118
.b8 112
.b8 54
.b8 103
.b8 97
.b8 54
.b8 120
.b8 116
.b8 116
.b8 107
.b8 101
.b8 51
.b8 106
.b8 99
.b8 55
.b8 117
.b8 118
.b8 111
.b8 122
.b8 102
.b8 108
.b8 102
.b8 118
.b8 105
.b8 121
.b8 122
.b8 107
.b8 122
.b8 111
.b8 109
.b8 97
.b8 101
.b8 109
.b8 108
.b8 104
.b8 99
.b8 97
.b8 111
.b8 121
.b8 114
.b8 115
.b8 122
.b8 97
.b8 103
.b8 120
.b8 51
.b8 106
.b8 115
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
