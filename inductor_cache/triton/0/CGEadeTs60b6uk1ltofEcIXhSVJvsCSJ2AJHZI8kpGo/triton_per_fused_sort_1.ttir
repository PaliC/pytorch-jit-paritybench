#loc = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc23 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":38:69)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:50)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:51)
#loc89 = loc(callsite(#loc1 at #loc33))
#loc95 = loc(callsite(#loc1 at #loc38))
#loc106 = loc(callsite(#loc1 at #loc48))
#loc112 = loc(callsite(#loc1 at #loc53))
#loc143 = loc(callsite(#loc89 at #loc28))
#loc149 = loc(callsite(#loc95 at #loc28))
#loc161 = loc(callsite(#loc106 at #loc28))
#loc168 = loc(callsite(#loc112 at #loc28))
#loc196 = loc(callsite(#loc143 at #loc22))
#loc202 = loc(callsite(#loc149 at #loc22))
#loc214 = loc(callsite(#loc161 at #loc22))
#loc221 = loc(callsite(#loc168 at #loc22))
#loc245 = loc(callsite(#loc196 at #loc23))
#loc248 = loc(callsite(#loc202 at #loc23))
#loc251 = loc(callsite(#loc214 at #loc23))
#loc254 = loc(callsite(#loc221 at #loc23))
module {
  tt.func public @triton_per_fused_sort_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg1: !tt.ptr<i16> {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg3: i32 loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<128x4xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<128x4xi16> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<128x4xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x2x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<128x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<128x4xf32> loc(#loc1)
    %cst_5 = arith.constant dense<10> : tensor<128x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<128x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<3> : tensor<1x4xi32> loc(#loc1)
    %cst_8 = arith.constant dense<512> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<4xi32> -> tensor<1x4xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_7 : tensor<1x4xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_6 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_6 : tensor<128x1xi32> loc(#loc12)
    %12 = tt.broadcast %8 : tensor<1x4xi32> -> tensor<128x4xi32> loc(#loc13)
    %13 = tt.broadcast %10 : tensor<128x1xi32> -> tensor<128x4xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<128x4xi32> loc(#loc13)
    %15 = arith.muli %11, %cst_5 : tensor<128x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<128x1xi32> -> tensor<128x4xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<128x4xi32> loc(#loc15)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x4x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<128x4x!tt.ptr<f32>>, tensor<128x4xi32> loc(#loc16)
    %20 = tt.broadcast %9 : tensor<1x4xi1> -> tensor<128x4xi1> loc(#loc17)
    %21 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x4xi1> loc(#loc17)
    %22 = arith.andi %20, %21 : tensor<128x4xi1> loc(#loc17)
    %23 = tt.load %19, %22, %cst_4 : tensor<128x4x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.trunci %8 : tensor<1x4xi32> to tensor<1x4xi16> loc(#loc19)
    %25 = tt.broadcast %24 : tensor<1x4xi16> -> tensor<128x4xi16> loc(#loc20)
    %26 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc134)
    %27 = tt.expand_dims %26 {axis = 0 : i32} : tensor<2xi32> -> tensor<1x2xi32> loc(#loc135)
    %28 = tt.expand_dims %27 {axis = 2 : i32} : tensor<1x2xi32> -> tensor<1x2x1xi32> loc(#loc135)
    %29 = tt.broadcast %28 : tensor<1x2x1xi32> -> tensor<128x2x2xi32> loc(#loc136)
    %30 = tt.reshape %29 : tensor<128x2x2xi32> -> tensor<128x4xi32> loc(#loc137)
    %31 = tt.reshape %23 : tensor<128x4xf32> -> tensor<256x2x1xf32> loc(#loc191)
    %32 = tt.bitcast %31 : tensor<256x2x1xf32> -> tensor<256x2x1xi32> loc(#loc192)
    %33 = arith.subi %cst_2, %28 : tensor<1x2x1xi32> loc(#loc193)
    %34 = tt.broadcast %33 : tensor<1x2x1xi32> -> tensor<256x2x1xi32> loc(#loc194)
    %35 = arith.muli %32, %34 : tensor<256x2x1xi32> loc(#loc194)
    %36 = "tt.reduce"(%35) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc196 at #loc23)), %arg5: i32 loc(callsite(#loc196 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc256)
      tt.reduce.return %170 : i32 loc(#loc244)
    }) : (tensor<256x2x1xi32>) -> tensor<256x1xi32> loc(#loc244)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<256x1xi32> -> tensor<256x1x1xi32> loc(#loc198)
    %38 = tt.broadcast %37 : tensor<256x1x1xi32> -> tensor<256x2x1xi32> loc(#loc199)
    %39 = tt.broadcast %28 : tensor<1x2x1xi32> -> tensor<256x2x1xi32> loc(#loc200)
    %40 = arith.muli %32, %39 : tensor<256x2x1xi32> loc(#loc200)
    %41 = "tt.reduce"(%40) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc202 at #loc23)), %arg5: i32 loc(callsite(#loc202 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc257)
      tt.reduce.return %170 : i32 loc(#loc247)
    }) : (tensor<256x2x1xi32>) -> tensor<256x1xi32> loc(#loc247)
    %42 = tt.expand_dims %41 {axis = 1 : i32} : tensor<256x1xi32> -> tensor<256x1x1xi32> loc(#loc204)
    %43 = tt.broadcast %42 : tensor<256x1x1xi32> -> tensor<256x2x1xi32> loc(#loc205)
    %44 = tt.reshape %38 : tensor<256x2x1xi32> -> tensor<128x4xi32> loc(#loc206)
    %45 = tt.reshape %43 : tensor<256x2x1xi32> -> tensor<128x4xi32> loc(#loc207)
    %46 = tt.bitcast %44 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc208)
    %47 = tt.bitcast %45 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc209)
    %48 = tt.reshape %25 : tensor<128x4xi16> -> tensor<256x2x1xi16> loc(#loc210)
    %49 = arith.trunci %33 : tensor<1x2x1xi32> to tensor<1x2x1xi16> loc(#loc211)
    %50 = tt.broadcast %49 : tensor<1x2x1xi16> -> tensor<256x2x1xi16> loc(#loc212)
    %51 = arith.muli %48, %50 : tensor<256x2x1xi16> loc(#loc212)
    %52 = "tt.reduce"(%51) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc214 at #loc23)), %arg5: i16 loc(callsite(#loc214 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc258)
      tt.reduce.return %170 : i16 loc(#loc250)
    }) : (tensor<256x2x1xi16>) -> tensor<256x1xi16> loc(#loc250)
    %53 = tt.expand_dims %52 {axis = 1 : i32} : tensor<256x1xi16> -> tensor<256x1x1xi16> loc(#loc216)
    %54 = tt.broadcast %53 : tensor<256x1x1xi16> -> tensor<256x2x1xi16> loc(#loc217)
    %55 = arith.trunci %28 : tensor<1x2x1xi32> to tensor<1x2x1xi16> loc(#loc218)
    %56 = tt.broadcast %55 : tensor<1x2x1xi16> -> tensor<256x2x1xi16> loc(#loc219)
    %57 = arith.muli %48, %56 : tensor<256x2x1xi16> loc(#loc219)
    %58 = "tt.reduce"(%57) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc221 at #loc23)), %arg5: i16 loc(callsite(#loc221 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc259)
      tt.reduce.return %170 : i16 loc(#loc253)
    }) : (tensor<256x2x1xi16>) -> tensor<256x1xi16> loc(#loc253)
    %59 = tt.expand_dims %58 {axis = 1 : i32} : tensor<256x1xi16> -> tensor<256x1x1xi16> loc(#loc223)
    %60 = tt.broadcast %59 : tensor<256x1x1xi16> -> tensor<256x2x1xi16> loc(#loc224)
    %61 = tt.reshape %54 : tensor<256x2x1xi16> -> tensor<128x4xi16> loc(#loc225)
    %62 = tt.reshape %60 : tensor<256x2x1xi16> -> tensor<128x4xi16> loc(#loc226)
    %63 = arith.extsi %61 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc227)
    %64 = arith.cmpi slt, %63, %cst : tensor<128x4xi32> loc(#loc227)
    %65 = arith.extsi %62 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc228)
    %66 = arith.cmpi slt, %65, %cst : tensor<128x4xi32> loc(#loc228)
    %67 = tt.bitcast %23 : tensor<128x4xf32> -> tensor<128x4xi32> loc(#loc229)
    %68 = arith.cmpf ogt, %46, %47 : tensor<128x4xf32> loc(#loc230)
    %69 = arith.cmpi ugt, %66, %64 : tensor<128x4xi1> loc(#loc231)
    %70 = arith.cmpi eq, %66, %64 : tensor<128x4xi1> loc(#loc232)
    %71 = arith.andi %70, %68 : tensor<128x4xi1> loc(#loc233)
    %72 = arith.ori %69, %71 : tensor<128x4xi1> loc(#loc234)
    %73 = arith.extui %72 : tensor<128x4xi1> to tensor<128x4xi32> loc(#loc235)
    %74 = arith.xori %73, %30 : tensor<128x4xi32> loc(#loc235)
    %75 = arith.cmpi ne, %74, %cst_1 : tensor<128x4xi32> loc(#loc236)
    %76 = arith.xori %44, %45 : tensor<128x4xi32> loc(#loc237)
    %77 = arith.select %75, %76, %cst_1 : tensor<128x4xi1>, tensor<128x4xi32> loc(#loc238)
    %78 = arith.xori %67, %77 : tensor<128x4xi32> loc(#loc239)
    %79 = arith.xori %61, %62 : tensor<128x4xi16> loc(#loc240)
    %80 = arith.select %75, %79, %cst_0 : tensor<128x4xi1>, tensor<128x4xi16> loc(#loc241)
    %81 = arith.xori %25, %80 : tensor<128x4xi16> loc(#loc242)
    %82 = tt.bitcast %78 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc243)
    %83 = tt.reshape %82 : tensor<128x4xf32> -> tensor<128x2x2xf32> loc(#loc191)
    %84 = tt.bitcast %83 : tensor<128x2x2xf32> -> tensor<128x2x2xi32> loc(#loc192)
    %85 = tt.broadcast %33 : tensor<1x2x1xi32> -> tensor<128x2x2xi32> loc(#loc194)
    %86 = arith.muli %84, %85 : tensor<128x2x2xi32> loc(#loc194)
    %87 = "tt.reduce"(%86) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc196 at #loc23)), %arg5: i32 loc(callsite(#loc196 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc256)
      tt.reduce.return %170 : i32 loc(#loc244)
    }) : (tensor<128x2x2xi32>) -> tensor<128x2xi32> loc(#loc244)
    %88 = tt.expand_dims %87 {axis = 1 : i32} : tensor<128x2xi32> -> tensor<128x1x2xi32> loc(#loc198)
    %89 = tt.broadcast %88 : tensor<128x1x2xi32> -> tensor<128x2x2xi32> loc(#loc199)
    %90 = arith.muli %84, %29 : tensor<128x2x2xi32> loc(#loc200)
    %91 = "tt.reduce"(%90) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc202 at #loc23)), %arg5: i32 loc(callsite(#loc202 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc257)
      tt.reduce.return %170 : i32 loc(#loc247)
    }) : (tensor<128x2x2xi32>) -> tensor<128x2xi32> loc(#loc247)
    %92 = tt.expand_dims %91 {axis = 1 : i32} : tensor<128x2xi32> -> tensor<128x1x2xi32> loc(#loc204)
    %93 = tt.broadcast %92 : tensor<128x1x2xi32> -> tensor<128x2x2xi32> loc(#loc205)
    %94 = tt.reshape %89 : tensor<128x2x2xi32> -> tensor<128x4xi32> loc(#loc206)
    %95 = tt.reshape %93 : tensor<128x2x2xi32> -> tensor<128x4xi32> loc(#loc207)
    %96 = tt.bitcast %94 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc208)
    %97 = tt.bitcast %95 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc209)
    %98 = tt.reshape %81 : tensor<128x4xi16> -> tensor<128x2x2xi16> loc(#loc210)
    %99 = tt.broadcast %49 : tensor<1x2x1xi16> -> tensor<128x2x2xi16> loc(#loc212)
    %100 = arith.muli %98, %99 : tensor<128x2x2xi16> loc(#loc212)
    %101 = "tt.reduce"(%100) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc214 at #loc23)), %arg5: i16 loc(callsite(#loc214 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc258)
      tt.reduce.return %170 : i16 loc(#loc250)
    }) : (tensor<128x2x2xi16>) -> tensor<128x2xi16> loc(#loc250)
    %102 = tt.expand_dims %101 {axis = 1 : i32} : tensor<128x2xi16> -> tensor<128x1x2xi16> loc(#loc216)
    %103 = tt.broadcast %102 : tensor<128x1x2xi16> -> tensor<128x2x2xi16> loc(#loc217)
    %104 = tt.broadcast %55 : tensor<1x2x1xi16> -> tensor<128x2x2xi16> loc(#loc219)
    %105 = arith.muli %98, %104 : tensor<128x2x2xi16> loc(#loc219)
    %106 = "tt.reduce"(%105) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc221 at #loc23)), %arg5: i16 loc(callsite(#loc221 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc259)
      tt.reduce.return %170 : i16 loc(#loc253)
    }) : (tensor<128x2x2xi16>) -> tensor<128x2xi16> loc(#loc253)
    %107 = tt.expand_dims %106 {axis = 1 : i32} : tensor<128x2xi16> -> tensor<128x1x2xi16> loc(#loc223)
    %108 = tt.broadcast %107 : tensor<128x1x2xi16> -> tensor<128x2x2xi16> loc(#loc224)
    %109 = tt.reshape %103 : tensor<128x2x2xi16> -> tensor<128x4xi16> loc(#loc225)
    %110 = tt.reshape %108 : tensor<128x2x2xi16> -> tensor<128x4xi16> loc(#loc226)
    %111 = arith.extsi %109 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc227)
    %112 = arith.cmpi slt, %111, %cst : tensor<128x4xi32> loc(#loc227)
    %113 = arith.extsi %110 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc228)
    %114 = arith.cmpi slt, %113, %cst : tensor<128x4xi32> loc(#loc228)
    %115 = tt.bitcast %82 : tensor<128x4xf32> -> tensor<128x4xi32> loc(#loc229)
    %116 = arith.cmpf ogt, %96, %97 : tensor<128x4xf32> loc(#loc230)
    %117 = arith.cmpi ugt, %114, %112 : tensor<128x4xi1> loc(#loc231)
    %118 = arith.cmpi eq, %114, %112 : tensor<128x4xi1> loc(#loc232)
    %119 = arith.andi %118, %116 : tensor<128x4xi1> loc(#loc233)
    %120 = arith.ori %117, %119 : tensor<128x4xi1> loc(#loc234)
    %121 = arith.xori %94, %95 : tensor<128x4xi32> loc(#loc237)
    %122 = arith.select %120, %121, %cst_1 : tensor<128x4xi1>, tensor<128x4xi32> loc(#loc238)
    %123 = arith.xori %115, %122 : tensor<128x4xi32> loc(#loc239)
    %124 = arith.xori %109, %110 : tensor<128x4xi16> loc(#loc240)
    %125 = arith.select %120, %124, %cst_0 : tensor<128x4xi1>, tensor<128x4xi16> loc(#loc241)
    %126 = arith.xori %81, %125 : tensor<128x4xi16> loc(#loc242)
    %127 = tt.bitcast %123 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc243)
    %128 = tt.reshape %127 : tensor<128x4xf32> -> tensor<256x2x1xf32> loc(#loc191)
    %129 = tt.bitcast %128 : tensor<256x2x1xf32> -> tensor<256x2x1xi32> loc(#loc192)
    %130 = arith.muli %129, %34 : tensor<256x2x1xi32> loc(#loc194)
    %131 = "tt.reduce"(%130) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc196 at #loc23)), %arg5: i32 loc(callsite(#loc196 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc256)
      tt.reduce.return %170 : i32 loc(#loc244)
    }) : (tensor<256x2x1xi32>) -> tensor<256x1xi32> loc(#loc244)
    %132 = tt.expand_dims %131 {axis = 1 : i32} : tensor<256x1xi32> -> tensor<256x1x1xi32> loc(#loc198)
    %133 = tt.broadcast %132 : tensor<256x1x1xi32> -> tensor<256x2x1xi32> loc(#loc199)
    %134 = arith.muli %129, %39 : tensor<256x2x1xi32> loc(#loc200)
    %135 = "tt.reduce"(%134) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc202 at #loc23)), %arg5: i32 loc(callsite(#loc202 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i32 loc(#loc257)
      tt.reduce.return %170 : i32 loc(#loc247)
    }) : (tensor<256x2x1xi32>) -> tensor<256x1xi32> loc(#loc247)
    %136 = tt.expand_dims %135 {axis = 1 : i32} : tensor<256x1xi32> -> tensor<256x1x1xi32> loc(#loc204)
    %137 = tt.broadcast %136 : tensor<256x1x1xi32> -> tensor<256x2x1xi32> loc(#loc205)
    %138 = tt.reshape %133 : tensor<256x2x1xi32> -> tensor<128x4xi32> loc(#loc206)
    %139 = tt.reshape %137 : tensor<256x2x1xi32> -> tensor<128x4xi32> loc(#loc207)
    %140 = tt.bitcast %138 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc208)
    %141 = tt.bitcast %139 : tensor<128x4xi32> -> tensor<128x4xf32> loc(#loc209)
    %142 = tt.reshape %126 : tensor<128x4xi16> -> tensor<256x2x1xi16> loc(#loc210)
    %143 = arith.muli %142, %50 : tensor<256x2x1xi16> loc(#loc212)
    %144 = "tt.reduce"(%143) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc214 at #loc23)), %arg5: i16 loc(callsite(#loc214 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc258)
      tt.reduce.return %170 : i16 loc(#loc250)
    }) : (tensor<256x2x1xi16>) -> tensor<256x1xi16> loc(#loc250)
    %145 = tt.expand_dims %144 {axis = 1 : i32} : tensor<256x1xi16> -> tensor<256x1x1xi16> loc(#loc216)
    %146 = tt.broadcast %145 : tensor<256x1x1xi16> -> tensor<256x2x1xi16> loc(#loc217)
    %147 = arith.muli %142, %56 : tensor<256x2x1xi16> loc(#loc219)
    %148 = "tt.reduce"(%147) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc221 at #loc23)), %arg5: i16 loc(callsite(#loc221 at #loc23))):
      %170 = arith.addi %arg4, %arg5 : i16 loc(#loc259)
      tt.reduce.return %170 : i16 loc(#loc253)
    }) : (tensor<256x2x1xi16>) -> tensor<256x1xi16> loc(#loc253)
    %149 = tt.expand_dims %148 {axis = 1 : i32} : tensor<256x1xi16> -> tensor<256x1x1xi16> loc(#loc223)
    %150 = tt.broadcast %149 : tensor<256x1x1xi16> -> tensor<256x2x1xi16> loc(#loc224)
    %151 = tt.reshape %146 : tensor<256x2x1xi16> -> tensor<128x4xi16> loc(#loc225)
    %152 = tt.reshape %150 : tensor<256x2x1xi16> -> tensor<128x4xi16> loc(#loc226)
    %153 = arith.extsi %151 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc227)
    %154 = arith.cmpi slt, %153, %cst : tensor<128x4xi32> loc(#loc227)
    %155 = arith.extsi %152 : tensor<128x4xi16> to tensor<128x4xi32> loc(#loc228)
    %156 = arith.cmpi slt, %155, %cst : tensor<128x4xi32> loc(#loc228)
    %157 = arith.cmpf ogt, %140, %141 : tensor<128x4xf32> loc(#loc230)
    %158 = arith.cmpi ugt, %156, %154 : tensor<128x4xi1> loc(#loc231)
    %159 = arith.cmpi eq, %156, %154 : tensor<128x4xi1> loc(#loc232)
    %160 = arith.andi %159, %157 : tensor<128x4xi1> loc(#loc233)
    %161 = arith.ori %158, %160 : tensor<128x4xi1> loc(#loc234)
    %162 = arith.xori %151, %152 : tensor<128x4xi16> loc(#loc240)
    %163 = arith.select %161, %162, %cst_0 : tensor<128x4xi1>, tensor<128x4xi16> loc(#loc241)
    %164 = arith.xori %126, %163 : tensor<128x4xi16> loc(#loc242)
    %165 = arith.muli %5, %cst_3 : tensor<128x1xi32> loc(#loc75)
    %166 = tt.broadcast %165 : tensor<128x1xi32> -> tensor<128x4xi32> loc(#loc76)
    %167 = arith.addi %12, %166 : tensor<128x4xi32> loc(#loc76)
    %168 = tt.splat %arg1 : !tt.ptr<i16> -> tensor<128x4x!tt.ptr<i16>> loc(#loc77)
    %169 = tt.addptr %168, %167 : tensor<128x4x!tt.ptr<i16>>, tensor<128x4xi32> loc(#loc77)
    tt.store %169, %164, %22 : tensor<128x4x!tt.ptr<i16>> loc(#loc78)
    tt.return loc(#loc79)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":23:28)
#loc3 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":23:33)
#loc4 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":24:36)
#loc5 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":24:44)
#loc6 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":24:23)
#loc7 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":25:21)
#loc8 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":26:26)
#loc9 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":26:34)
#loc10 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":28:21)
#loc11 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":30:19)
#loc12 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":31:19)
#loc13 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:35)
#loc14 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:43)
#loc15 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:40)
#loc16 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:30)
#loc17 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:56)
#loc18 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:48)
#loc19 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":35:19)
#loc20 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":37:33)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:41)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":514:29)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:36)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:23)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:53)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:66)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:37)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:23)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:54)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:67)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":521:36)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":522:38)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":529:37)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":530:39)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":538:22)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":544:31)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:29)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:48)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:8)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:48)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:59)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:22)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc75 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:32)
#loc76 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:30)
#loc77 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:25)
#loc78 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:43)
#loc79 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:4)
#loc80 = loc(callsite(#loc21 at #loc22))
#loc81 = loc(callsite(#loc24 at #loc22))
#loc82 = loc(callsite(#loc25 at #loc22))
#loc83 = loc(callsite(#loc26 at #loc22))
#loc84 = loc(callsite(#loc27 at #loc28))
#loc85 = loc(callsite(#loc29 at #loc28))
#loc86 = loc(callsite(#loc30 at #loc28))
#loc87 = loc(callsite(#loc31 at #loc28))
#loc88 = loc(callsite(#loc32 at #loc33))
#loc90 = loc(callsite(#loc34 at #loc32))
#loc91 = loc(callsite(#loc35 at #loc28))
#loc92 = loc(callsite(#loc36 at #loc28))
#loc93 = loc(callsite(#loc37 at #loc28))
#loc94 = loc(callsite(#loc32 at #loc38))
#loc96 = loc(callsite(#loc39 at #loc28))
#loc97 = loc(callsite(#loc40 at #loc28))
#loc98 = loc(callsite(#loc41 at #loc28))
#loc99 = loc(callsite(#loc42 at #loc28))
#loc100 = loc(callsite(#loc43 at #loc28))
#loc101 = loc(callsite(#loc44 at #loc28))
#loc102 = loc(callsite(#loc45 at #loc28))
#loc103 = loc(callsite(#loc46 at #loc28))
#loc104 = loc(callsite(#loc47 at #loc28))
#loc105 = loc(callsite(#loc32 at #loc48))
#loc107 = loc(callsite(#loc49 at #loc28))
#loc108 = loc(callsite(#loc50 at #loc28))
#loc109 = loc(callsite(#loc51 at #loc28))
#loc110 = loc(callsite(#loc52 at #loc28))
#loc111 = loc(callsite(#loc32 at #loc53))
#loc113 = loc(callsite(#loc54 at #loc28))
#loc114 = loc(callsite(#loc55 at #loc28))
#loc115 = loc(callsite(#loc56 at #loc28))
#loc116 = loc(callsite(#loc57 at #loc28))
#loc117 = loc(callsite(#loc58 at #loc28))
#loc118 = loc(callsite(#loc59 at #loc28))
#loc119 = loc(callsite(#loc60 at #loc28))
#loc120 = loc(callsite(#loc61 at #loc28))
#loc121 = loc(callsite(#loc62 at #loc28))
#loc122 = loc(callsite(#loc63 at #loc28))
#loc123 = loc(callsite(#loc64 at #loc28))
#loc124 = loc(callsite(#loc65 at #loc28))
#loc125 = loc(callsite(#loc66 at #loc28))
#loc126 = loc(callsite(#loc67 at #loc28))
#loc127 = loc(callsite(#loc68 at #loc28))
#loc128 = loc(callsite(#loc69 at #loc28))
#loc129 = loc(callsite(#loc70 at #loc28))
#loc130 = loc(callsite(#loc71 at #loc28))
#loc131 = loc(callsite(#loc72 at #loc28))
#loc132 = loc(callsite(#loc73 at #loc28))
#loc133 = loc(callsite(#loc74 at #loc28))
#loc134 = loc(callsite(#loc80 at #loc23))
#loc135 = loc(callsite(#loc81 at #loc23))
#loc136 = loc(callsite(#loc82 at #loc23))
#loc137 = loc(callsite(#loc83 at #loc23))
#loc138 = loc(callsite(#loc84 at #loc22))
#loc139 = loc(callsite(#loc85 at #loc22))
#loc140 = loc(callsite(#loc86 at #loc22))
#loc141 = loc(callsite(#loc87 at #loc22))
#loc142 = loc(callsite(#loc88 at #loc28))
#loc144 = loc(callsite(#loc90 at #loc33))
#loc145 = loc(callsite(#loc91 at #loc22))
#loc146 = loc(callsite(#loc92 at #loc22))
#loc147 = loc(callsite(#loc93 at #loc22))
#loc148 = loc(callsite(#loc94 at #loc28))
#loc150 = loc(callsite(#loc90 at #loc38))
#loc151 = loc(callsite(#loc96 at #loc22))
#loc152 = loc(callsite(#loc97 at #loc22))
#loc153 = loc(callsite(#loc98 at #loc22))
#loc154 = loc(callsite(#loc99 at #loc22))
#loc155 = loc(callsite(#loc100 at #loc22))
#loc156 = loc(callsite(#loc101 at #loc22))
#loc157 = loc(callsite(#loc102 at #loc22))
#loc158 = loc(callsite(#loc103 at #loc22))
#loc159 = loc(callsite(#loc104 at #loc22))
#loc160 = loc(callsite(#loc105 at #loc28))
#loc162 = loc(callsite(#loc90 at #loc48))
#loc163 = loc(callsite(#loc107 at #loc22))
#loc164 = loc(callsite(#loc108 at #loc22))
#loc165 = loc(callsite(#loc109 at #loc22))
#loc166 = loc(callsite(#loc110 at #loc22))
#loc167 = loc(callsite(#loc111 at #loc28))
#loc169 = loc(callsite(#loc90 at #loc53))
#loc170 = loc(callsite(#loc113 at #loc22))
#loc171 = loc(callsite(#loc114 at #loc22))
#loc172 = loc(callsite(#loc115 at #loc22))
#loc173 = loc(callsite(#loc116 at #loc22))
#loc174 = loc(callsite(#loc117 at #loc22))
#loc175 = loc(callsite(#loc118 at #loc22))
#loc176 = loc(callsite(#loc119 at #loc22))
#loc177 = loc(callsite(#loc120 at #loc22))
#loc178 = loc(callsite(#loc121 at #loc22))
#loc179 = loc(callsite(#loc122 at #loc22))
#loc180 = loc(callsite(#loc123 at #loc22))
#loc181 = loc(callsite(#loc124 at #loc22))
#loc182 = loc(callsite(#loc125 at #loc22))
#loc183 = loc(callsite(#loc126 at #loc22))
#loc184 = loc(callsite(#loc127 at #loc22))
#loc185 = loc(callsite(#loc128 at #loc22))
#loc186 = loc(callsite(#loc129 at #loc22))
#loc187 = loc(callsite(#loc130 at #loc22))
#loc188 = loc(callsite(#loc131 at #loc22))
#loc189 = loc(callsite(#loc132 at #loc22))
#loc190 = loc(callsite(#loc133 at #loc22))
#loc191 = loc(callsite(#loc138 at #loc23))
#loc192 = loc(callsite(#loc139 at #loc23))
#loc193 = loc(callsite(#loc140 at #loc23))
#loc194 = loc(callsite(#loc141 at #loc23))
#loc195 = loc(callsite(#loc142 at #loc22))
#loc197 = loc(callsite(#loc144 at #loc28))
#loc198 = loc(callsite(#loc145 at #loc23))
#loc199 = loc(callsite(#loc146 at #loc23))
#loc200 = loc(callsite(#loc147 at #loc23))
#loc201 = loc(callsite(#loc148 at #loc22))
#loc203 = loc(callsite(#loc150 at #loc28))
#loc204 = loc(callsite(#loc151 at #loc23))
#loc205 = loc(callsite(#loc152 at #loc23))
#loc206 = loc(callsite(#loc153 at #loc23))
#loc207 = loc(callsite(#loc154 at #loc23))
#loc208 = loc(callsite(#loc155 at #loc23))
#loc209 = loc(callsite(#loc156 at #loc23))
#loc210 = loc(callsite(#loc157 at #loc23))
#loc211 = loc(callsite(#loc158 at #loc23))
#loc212 = loc(callsite(#loc159 at #loc23))
#loc213 = loc(callsite(#loc160 at #loc22))
#loc215 = loc(callsite(#loc162 at #loc28))
#loc216 = loc(callsite(#loc163 at #loc23))
#loc217 = loc(callsite(#loc164 at #loc23))
#loc218 = loc(callsite(#loc165 at #loc23))
#loc219 = loc(callsite(#loc166 at #loc23))
#loc220 = loc(callsite(#loc167 at #loc22))
#loc222 = loc(callsite(#loc169 at #loc28))
#loc223 = loc(callsite(#loc170 at #loc23))
#loc224 = loc(callsite(#loc171 at #loc23))
#loc225 = loc(callsite(#loc172 at #loc23))
#loc226 = loc(callsite(#loc173 at #loc23))
#loc227 = loc(callsite(#loc174 at #loc23))
#loc228 = loc(callsite(#loc175 at #loc23))
#loc229 = loc(callsite(#loc176 at #loc23))
#loc230 = loc(callsite(#loc177 at #loc23))
#loc231 = loc(callsite(#loc178 at #loc23))
#loc232 = loc(callsite(#loc179 at #loc23))
#loc233 = loc(callsite(#loc180 at #loc23))
#loc234 = loc(callsite(#loc181 at #loc23))
#loc235 = loc(callsite(#loc182 at #loc23))
#loc236 = loc(callsite(#loc183 at #loc23))
#loc237 = loc(callsite(#loc184 at #loc23))
#loc238 = loc(callsite(#loc185 at #loc23))
#loc239 = loc(callsite(#loc186 at #loc23))
#loc240 = loc(callsite(#loc187 at #loc23))
#loc241 = loc(callsite(#loc188 at #loc23))
#loc242 = loc(callsite(#loc189 at #loc23))
#loc243 = loc(callsite(#loc190 at #loc23))
#loc244 = loc(callsite(#loc195 at #loc23))
#loc246 = loc(callsite(#loc197 at #loc22))
#loc247 = loc(callsite(#loc201 at #loc23))
#loc249 = loc(callsite(#loc203 at #loc22))
#loc250 = loc(callsite(#loc213 at #loc23))
#loc252 = loc(callsite(#loc215 at #loc22))
#loc253 = loc(callsite(#loc220 at #loc23))
#loc255 = loc(callsite(#loc222 at #loc22))
#loc256 = loc(callsite(#loc246 at #loc23))
#loc257 = loc(callsite(#loc249 at #loc23))
#loc258 = loc(callsite(#loc252 at #loc23))
#loc259 = loc(callsite(#loc255 at #loc23))
