; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 12, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 16, !dbg !14
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %14 = shl i32 %13, 6, !dbg !16
  %15 = lshr i32 %8, 2, !dbg !17
  %16 = and i32 %15, 31, !dbg !17
  %17 = or disjoint i32 %16, 32, !dbg !17
  %18 = or disjoint i32 %14, %16, !dbg !18
  %19 = or disjoint i32 %14, %17, !dbg !18
  %20 = shl i32 %18, 2, !dbg !19
  %21 = shl i32 %19, 2, !dbg !19
  %22 = shl i32 %11, 12, !dbg !20
  %23 = add i32 %20, %22, !dbg !21
  %24 = add i32 %21, %22, !dbg !21
  %25 = sext i32 %23 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = sext i32 %24 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 %12) #4, !dbg !23
  %30 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !23
  %31 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !23
  %32 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !23
  %33 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !23
  %34 = bitcast i32 %30 to float, !dbg !23
  %35 = bitcast i32 %31 to float, !dbg !23
  %36 = bitcast i32 %32 to float, !dbg !23
  %37 = bitcast i32 %33 to float, !dbg !23
  %38 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !23
  %39 = extractvalue { i32, i32, i32, i32 } %38, 0, !dbg !23
  %40 = extractvalue { i32, i32, i32, i32 } %38, 1, !dbg !23
  %41 = extractvalue { i32, i32, i32, i32 } %38, 2, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %38, 3, !dbg !23
  %43 = bitcast i32 %39 to float, !dbg !23
  %44 = bitcast i32 %40 to float, !dbg !23
  %45 = bitcast i32 %41 to float, !dbg !23
  %46 = bitcast i32 %42 to float, !dbg !23
  %47 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1, i1 %12) #4, !dbg !24
  %48 = extractvalue { i32, i32, i32, i32 } %47, 0, !dbg !24
  %49 = extractvalue { i32, i32, i32, i32 } %47, 1, !dbg !24
  %50 = extractvalue { i32, i32, i32, i32 } %47, 2, !dbg !24
  %51 = extractvalue { i32, i32, i32, i32 } %47, 3, !dbg !24
  %52 = bitcast i32 %48 to float, !dbg !24
  %53 = bitcast i32 %49 to float, !dbg !24
  %54 = bitcast i32 %50 to float, !dbg !24
  %55 = bitcast i32 %51 to float, !dbg !24
  %56 = fadd float %34, %52, !dbg !25
  %57 = fadd float %35, %53, !dbg !25
  %58 = fadd float %36, %54, !dbg !25
  %59 = fadd float %37, %55, !dbg !25
  %60 = fadd float %43, %52, !dbg !25
  %61 = fadd float %44, %53, !dbg !25
  %62 = fadd float %45, %54, !dbg !25
  %63 = fadd float %46, %55, !dbg !25
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i = icmp eq i32 %64, 0, !dbg !26
  %65 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #4, !dbg !26
  %66 = tail call float @llvm.nvvm.fabs.f(float %56) #4, !dbg !26
  %.01.i = select i1 %.not.i, float %66, float %65, !dbg !26
  %67 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %67, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %5
  %68 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %69 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %68) #4, !dbg !26
  %70 = fadd float %69, 1.000000e+00, !dbg !26
  %71 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %70) #5, !dbg !26, !srcloc !27
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %72, 0, !dbg !26
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %71, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %71, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i = select i1 %.not6.i, float %74, float %73, !dbg !26
  %75 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %75, float 1.000000e+00, float %.03.i, !dbg !26
  %76 = bitcast float %s.0.i to i32, !dbg !26
  %77 = bitcast float %56 to i32, !dbg !26
  %78 = and i32 %77, -2147483648, !dbg !26
  %79 = or i32 %78, %76, !dbg !26
  %80 = bitcast i32 %79 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %5
  %81 = fmul float %56, %56, !dbg !26
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %82, 0, !dbg !26
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #4, !dbg !26
  %84 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i = select i1 %.not1.i, float %84, float %83, !dbg !26
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %85, 0, !dbg !26
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %81, float 0x3FC10B2820000000) #4, !dbg !26
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %81, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i = select i1 %.not2.i, float %87, float %86, !dbg !26
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %88, 0, !dbg !26
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #4, !dbg !26
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i = select i1 %.not3.i, float %90, float %89, !dbg !26
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %91, 0, !dbg !26
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %81, float 0.000000e+00) #4, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %81, float 0.000000e+00) #4, !dbg !26
  %.04.i = select i1 %.not4.i, float %93, float %92, !dbg !26
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %94, 0, !dbg !26
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %56, float %56) #4, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %56, float %56) #4, !dbg !26
  %.02.i = select i1 %.not5.i, float %96, float %95, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %80, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i3 = icmp eq i32 %97, 0, !dbg !26
  %98 = tail call float @llvm.nvvm.fabs.ftz.f(float %57) #4, !dbg !26
  %99 = tail call float @llvm.nvvm.fabs.f(float %57) #4, !dbg !26
  %.01.i4 = select i1 %.not.i3, float %99, float %98, !dbg !26
  %100 = fcmp ult float %.01.i4, 0x3FE3333340000000, !dbg !26
  br i1 %100, label %__internal_fmad.exit3.i10, label %__internal_fmad.exit1.i5, !dbg !26

__internal_fmad.exit1.i5:                         ; preds = %__nv_tanhf.exit
  %101 = fmul float %.01.i4, 0x4007154760000000, !dbg !26
  %102 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %101) #4, !dbg !26
  %103 = fadd float %102, 1.000000e+00, !dbg !26
  %104 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %103) #5, !dbg !26, !srcloc !27
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i6 = icmp eq i32 %105, 0, !dbg !26
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %104, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %104, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i7 = select i1 %.not6.i6, float %107, float %106, !dbg !26
  %108 = fcmp oge float %.01.i4, 0x4022059680000000, !dbg !26
  %s.0.i8 = select i1 %108, float 1.000000e+00, float %.03.i7, !dbg !26
  %109 = bitcast float %s.0.i8 to i32, !dbg !26
  %110 = bitcast float %57 to i32, !dbg !26
  %111 = and i32 %110, -2147483648, !dbg !26
  %112 = or i32 %111, %109, !dbg !26
  %113 = bitcast i32 %112 to float, !dbg !26
  br label %__nv_tanhf.exit21, !dbg !26

__internal_fmad.exit3.i10:                        ; preds = %__nv_tanhf.exit
  %114 = fmul float %57, %57, !dbg !26
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i11 = icmp eq i32 %115, 0, !dbg !26
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #4, !dbg !26
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i12 = select i1 %.not1.i11, float %117, float %116, !dbg !26
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i13 = icmp eq i32 %118, 0, !dbg !26
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i12, float %114, float 0x3FC10B2820000000) #4, !dbg !26
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i12, float %114, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i14 = select i1 %.not2.i13, float %120, float %119, !dbg !26
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i15 = icmp eq i32 %121, 0, !dbg !26
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %114, float 0xBFD5553DA0000000) #4, !dbg !26
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %114, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i16 = select i1 %.not3.i15, float %123, float %122, !dbg !26
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i17 = icmp eq i32 %124, 0, !dbg !26
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i16, float %114, float 0.000000e+00) #4, !dbg !26
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i16, float %114, float 0.000000e+00) #4, !dbg !26
  %.04.i18 = select i1 %.not4.i17, float %126, float %125, !dbg !26
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i19 = icmp eq i32 %127, 0, !dbg !26
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i18, float %57, float %57) #4, !dbg !26
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i18, float %57, float %57) #4, !dbg !26
  %.02.i20 = select i1 %.not5.i19, float %129, float %128, !dbg !26
  br label %__nv_tanhf.exit21, !dbg !26

__nv_tanhf.exit21:                                ; preds = %__internal_fmad.exit1.i5, %__internal_fmad.exit3.i10
  %s.1.i9 = phi float [ %113, %__internal_fmad.exit1.i5 ], [ %.02.i20, %__internal_fmad.exit3.i10 ], !dbg !26
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i22 = icmp eq i32 %130, 0, !dbg !26
  %131 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #4, !dbg !26
  %132 = tail call float @llvm.nvvm.fabs.f(float %58) #4, !dbg !26
  %.01.i23 = select i1 %.not.i22, float %132, float %131, !dbg !26
  %133 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !26
  br i1 %133, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !26

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit21
  %134 = fmul float %.01.i23, 0x4007154760000000, !dbg !26
  %135 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %134) #4, !dbg !26
  %136 = fadd float %135, 1.000000e+00, !dbg !26
  %137 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %136) #5, !dbg !26, !srcloc !27
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i25 = icmp eq i32 %138, 0, !dbg !26
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %137, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %137, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i26 = select i1 %.not6.i25, float %140, float %139, !dbg !26
  %141 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !26
  %s.0.i27 = select i1 %141, float 1.000000e+00, float %.03.i26, !dbg !26
  %142 = bitcast float %s.0.i27 to i32, !dbg !26
  %143 = bitcast float %58 to i32, !dbg !26
  %144 = and i32 %143, -2147483648, !dbg !26
  %145 = or i32 %144, %142, !dbg !26
  %146 = bitcast i32 %145 to float, !dbg !26
  br label %__nv_tanhf.exit40, !dbg !26

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit21
  %147 = fmul float %58, %58, !dbg !26
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i30 = icmp eq i32 %148, 0, !dbg !26
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #4, !dbg !26
  %150 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i31 = select i1 %.not1.i30, float %150, float %149, !dbg !26
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i32 = icmp eq i32 %151, 0, !dbg !26
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %147, float 0x3FC10B2820000000) #4, !dbg !26
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %147, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i33 = select i1 %.not2.i32, float %153, float %152, !dbg !26
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i34 = icmp eq i32 %154, 0, !dbg !26
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %147, float 0xBFD5553DA0000000) #4, !dbg !26
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %147, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i35 = select i1 %.not3.i34, float %156, float %155, !dbg !26
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i36 = icmp eq i32 %157, 0, !dbg !26
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %147, float 0.000000e+00) #4, !dbg !26
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %147, float 0.000000e+00) #4, !dbg !26
  %.04.i37 = select i1 %.not4.i36, float %159, float %158, !dbg !26
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i38 = icmp eq i32 %160, 0, !dbg !26
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %58, float %58) #4, !dbg !26
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %58, float %58) #4, !dbg !26
  %.02.i39 = select i1 %.not5.i38, float %162, float %161, !dbg !26
  br label %__nv_tanhf.exit40, !dbg !26

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %146, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !26
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i41 = icmp eq i32 %163, 0, !dbg !26
  %164 = tail call float @llvm.nvvm.fabs.ftz.f(float %59) #4, !dbg !26
  %165 = tail call float @llvm.nvvm.fabs.f(float %59) #4, !dbg !26
  %.01.i42 = select i1 %.not.i41, float %165, float %164, !dbg !26
  %166 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !26
  br i1 %166, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !26

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %167 = fmul float %.01.i42, 0x4007154760000000, !dbg !26
  %168 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %167) #4, !dbg !26
  %169 = fadd float %168, 1.000000e+00, !dbg !26
  %170 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %169) #5, !dbg !26, !srcloc !27
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i44 = icmp eq i32 %171, 0, !dbg !26
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %170, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i45 = select i1 %.not6.i44, float %173, float %172, !dbg !26
  %174 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !26
  %s.0.i46 = select i1 %174, float 1.000000e+00, float %.03.i45, !dbg !26
  %175 = bitcast float %s.0.i46 to i32, !dbg !26
  %176 = bitcast float %59 to i32, !dbg !26
  %177 = and i32 %176, -2147483648, !dbg !26
  %178 = or i32 %177, %175, !dbg !26
  %179 = bitcast i32 %178 to float, !dbg !26
  br label %__nv_tanhf.exit59, !dbg !26

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %180 = fmul float %59, %59, !dbg !26
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i49 = icmp eq i32 %181, 0, !dbg !26
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #4, !dbg !26
  %183 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i50 = select i1 %.not1.i49, float %183, float %182, !dbg !26
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i51 = icmp eq i32 %184, 0, !dbg !26
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %180, float 0x3FC10B2820000000) #4, !dbg !26
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %180, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i52 = select i1 %.not2.i51, float %186, float %185, !dbg !26
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i53 = icmp eq i32 %187, 0, !dbg !26
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %180, float 0xBFD5553DA0000000) #4, !dbg !26
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %180, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i54 = select i1 %.not3.i53, float %189, float %188, !dbg !26
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i55 = icmp eq i32 %190, 0, !dbg !26
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %180, float 0.000000e+00) #4, !dbg !26
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %180, float 0.000000e+00) #4, !dbg !26
  %.04.i56 = select i1 %.not4.i55, float %192, float %191, !dbg !26
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i57 = icmp eq i32 %193, 0, !dbg !26
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %59, float %59) #4, !dbg !26
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %59, float %59) #4, !dbg !26
  %.02.i58 = select i1 %.not5.i57, float %195, float %194, !dbg !26
  br label %__nv_tanhf.exit59, !dbg !26

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %179, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !26
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i60 = icmp eq i32 %196, 0, !dbg !26
  %197 = tail call float @llvm.nvvm.fabs.ftz.f(float %60) #4, !dbg !26
  %198 = tail call float @llvm.nvvm.fabs.f(float %60) #4, !dbg !26
  %.01.i61 = select i1 %.not.i60, float %198, float %197, !dbg !26
  %199 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !26
  br i1 %199, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !26

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %200 = fmul float %.01.i61, 0x4007154760000000, !dbg !26
  %201 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %200) #4, !dbg !26
  %202 = fadd float %201, 1.000000e+00, !dbg !26
  %203 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %202) #5, !dbg !26, !srcloc !27
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i63 = icmp eq i32 %204, 0, !dbg !26
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %203, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i64 = select i1 %.not6.i63, float %206, float %205, !dbg !26
  %207 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !26
  %s.0.i65 = select i1 %207, float 1.000000e+00, float %.03.i64, !dbg !26
  %208 = bitcast float %s.0.i65 to i32, !dbg !26
  %209 = bitcast float %60 to i32, !dbg !26
  %210 = and i32 %209, -2147483648, !dbg !26
  %211 = or i32 %210, %208, !dbg !26
  %212 = bitcast i32 %211 to float, !dbg !26
  br label %__nv_tanhf.exit78, !dbg !26

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %213 = fmul float %60, %60, !dbg !26
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i68 = icmp eq i32 %214, 0, !dbg !26
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #4, !dbg !26
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i69 = select i1 %.not1.i68, float %216, float %215, !dbg !26
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i70 = icmp eq i32 %217, 0, !dbg !26
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %213, float 0x3FC10B2820000000) #4, !dbg !26
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %213, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i71 = select i1 %.not2.i70, float %219, float %218, !dbg !26
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i72 = icmp eq i32 %220, 0, !dbg !26
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %213, float 0xBFD5553DA0000000) #4, !dbg !26
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %213, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i73 = select i1 %.not3.i72, float %222, float %221, !dbg !26
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i74 = icmp eq i32 %223, 0, !dbg !26
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %213, float 0.000000e+00) #4, !dbg !26
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %213, float 0.000000e+00) #4, !dbg !26
  %.04.i75 = select i1 %.not4.i74, float %225, float %224, !dbg !26
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i76 = icmp eq i32 %226, 0, !dbg !26
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %60, float %60) #4, !dbg !26
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %60, float %60) #4, !dbg !26
  %.02.i77 = select i1 %.not5.i76, float %228, float %227, !dbg !26
  br label %__nv_tanhf.exit78, !dbg !26

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %212, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !26
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i79 = icmp eq i32 %229, 0, !dbg !26
  %230 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #4, !dbg !26
  %231 = tail call float @llvm.nvvm.fabs.f(float %61) #4, !dbg !26
  %.01.i80 = select i1 %.not.i79, float %231, float %230, !dbg !26
  %232 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !26
  br i1 %232, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !26

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %233 = fmul float %.01.i80, 0x4007154760000000, !dbg !26
  %234 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %233) #4, !dbg !26
  %235 = fadd float %234, 1.000000e+00, !dbg !26
  %236 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %235) #5, !dbg !26, !srcloc !27
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i82 = icmp eq i32 %237, 0, !dbg !26
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %236, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %236, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i83 = select i1 %.not6.i82, float %239, float %238, !dbg !26
  %240 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !26
  %s.0.i84 = select i1 %240, float 1.000000e+00, float %.03.i83, !dbg !26
  %241 = bitcast float %s.0.i84 to i32, !dbg !26
  %242 = bitcast float %61 to i32, !dbg !26
  %243 = and i32 %242, -2147483648, !dbg !26
  %244 = or i32 %243, %241, !dbg !26
  %245 = bitcast i32 %244 to float, !dbg !26
  br label %__nv_tanhf.exit97, !dbg !26

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %246 = fmul float %61, %61, !dbg !26
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i87 = icmp eq i32 %247, 0, !dbg !26
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #4, !dbg !26
  %249 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i88 = select i1 %.not1.i87, float %249, float %248, !dbg !26
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i89 = icmp eq i32 %250, 0, !dbg !26
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %246, float 0x3FC10B2820000000) #4, !dbg !26
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %246, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i90 = select i1 %.not2.i89, float %252, float %251, !dbg !26
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i91 = icmp eq i32 %253, 0, !dbg !26
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %246, float 0xBFD5553DA0000000) #4, !dbg !26
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %246, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i92 = select i1 %.not3.i91, float %255, float %254, !dbg !26
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i93 = icmp eq i32 %256, 0, !dbg !26
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %246, float 0.000000e+00) #4, !dbg !26
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %246, float 0.000000e+00) #4, !dbg !26
  %.04.i94 = select i1 %.not4.i93, float %258, float %257, !dbg !26
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i95 = icmp eq i32 %259, 0, !dbg !26
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %61, float %61) #4, !dbg !26
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %61, float %61) #4, !dbg !26
  %.02.i96 = select i1 %.not5.i95, float %261, float %260, !dbg !26
  br label %__nv_tanhf.exit97, !dbg !26

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %245, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !26
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i98 = icmp eq i32 %262, 0, !dbg !26
  %263 = tail call float @llvm.nvvm.fabs.ftz.f(float %62) #4, !dbg !26
  %264 = tail call float @llvm.nvvm.fabs.f(float %62) #4, !dbg !26
  %.01.i99 = select i1 %.not.i98, float %264, float %263, !dbg !26
  %265 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !26
  br i1 %265, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !26

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %266 = fmul float %.01.i99, 0x4007154760000000, !dbg !26
  %267 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %266) #4, !dbg !26
  %268 = fadd float %267, 1.000000e+00, !dbg !26
  %269 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %268) #5, !dbg !26, !srcloc !27
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i101 = icmp eq i32 %270, 0, !dbg !26
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %269, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %269, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i102 = select i1 %.not6.i101, float %272, float %271, !dbg !26
  %273 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !26
  %s.0.i103 = select i1 %273, float 1.000000e+00, float %.03.i102, !dbg !26
  %274 = bitcast float %s.0.i103 to i32, !dbg !26
  %275 = bitcast float %62 to i32, !dbg !26
  %276 = and i32 %275, -2147483648, !dbg !26
  %277 = or i32 %276, %274, !dbg !26
  %278 = bitcast i32 %277 to float, !dbg !26
  br label %__nv_tanhf.exit116, !dbg !26

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %279 = fmul float %62, %62, !dbg !26
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i106 = icmp eq i32 %280, 0, !dbg !26
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #4, !dbg !26
  %282 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i107 = select i1 %.not1.i106, float %282, float %281, !dbg !26
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i108 = icmp eq i32 %283, 0, !dbg !26
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %279, float 0x3FC10B2820000000) #4, !dbg !26
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %279, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i109 = select i1 %.not2.i108, float %285, float %284, !dbg !26
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i110 = icmp eq i32 %286, 0, !dbg !26
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %279, float 0xBFD5553DA0000000) #4, !dbg !26
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %279, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i111 = select i1 %.not3.i110, float %288, float %287, !dbg !26
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i112 = icmp eq i32 %289, 0, !dbg !26
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %279, float 0.000000e+00) #4, !dbg !26
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %279, float 0.000000e+00) #4, !dbg !26
  %.04.i113 = select i1 %.not4.i112, float %291, float %290, !dbg !26
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i114 = icmp eq i32 %292, 0, !dbg !26
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %62, float %62) #4, !dbg !26
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %62, float %62) #4, !dbg !26
  %.02.i115 = select i1 %.not5.i114, float %294, float %293, !dbg !26
  br label %__nv_tanhf.exit116, !dbg !26

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %278, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !26
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i117 = icmp eq i32 %295, 0, !dbg !26
  %296 = tail call float @llvm.nvvm.fabs.ftz.f(float %63) #4, !dbg !26
  %297 = tail call float @llvm.nvvm.fabs.f(float %63) #4, !dbg !26
  %.01.i118 = select i1 %.not.i117, float %297, float %296, !dbg !26
  %298 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !26
  br i1 %298, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !26

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %299 = fmul float %.01.i118, 0x4007154760000000, !dbg !26
  %300 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %299) #4, !dbg !26
  %301 = fadd float %300, 1.000000e+00, !dbg !26
  %302 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %301) #5, !dbg !26, !srcloc !27
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i120 = icmp eq i32 %303, 0, !dbg !26
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %302, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %302, float -2.000000e+00, float 1.000000e+00) #4, !dbg !26
  %.03.i121 = select i1 %.not6.i120, float %305, float %304, !dbg !26
  %306 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !26
  %s.0.i122 = select i1 %306, float 1.000000e+00, float %.03.i121, !dbg !26
  %307 = bitcast float %s.0.i122 to i32, !dbg !26
  %308 = bitcast float %63 to i32, !dbg !26
  %309 = and i32 %308, -2147483648, !dbg !26
  %310 = or i32 %309, %307, !dbg !26
  %311 = bitcast i32 %310 to float, !dbg !26
  br label %__nv_tanhf.exit135, !dbg !26

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %312 = fmul float %63, %63, !dbg !26
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i125 = icmp eq i32 %313, 0, !dbg !26
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #4, !dbg !26
  %315 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #4, !dbg !26
  %.06.i126 = select i1 %.not1.i125, float %315, float %314, !dbg !26
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i127 = icmp eq i32 %316, 0, !dbg !26
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %312, float 0x3FC10B2820000000) #4, !dbg !26
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %312, float 0x3FC10B2820000000) #4, !dbg !26
  %.05.i128 = select i1 %.not2.i127, float %318, float %317, !dbg !26
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i129 = icmp eq i32 %319, 0, !dbg !26
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %312, float 0xBFD5553DA0000000) #4, !dbg !26
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %312, float 0xBFD5553DA0000000) #4, !dbg !26
  %.0.i130 = select i1 %.not3.i129, float %321, float %320, !dbg !26
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i131 = icmp eq i32 %322, 0, !dbg !26
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %312, float 0.000000e+00) #4, !dbg !26
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %312, float 0.000000e+00) #4, !dbg !26
  %.04.i132 = select i1 %.not4.i131, float %324, float %323, !dbg !26
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i133 = icmp eq i32 %325, 0, !dbg !26
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %63, float %63) #4, !dbg !26
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %63, float %63) #4, !dbg !26
  %.02.i134 = select i1 %.not5.i133, float %327, float %326, !dbg !26
  br label %__nv_tanhf.exit135, !dbg !26

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %311, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !26
  %328 = and i32 %9, 60, !dbg !17
  %329 = or disjoint i32 %14, %328, !dbg !18
  %330 = lshr i32 %8, 4, !dbg !12
  %331 = and i32 %330, 7, !dbg !12
  %332 = or disjoint i32 %331, %7, !dbg !13
  %333 = or disjoint i32 %332, 8, !dbg !13
  %334 = icmp slt i32 %333, 16, !dbg !14
  %335 = icmp slt i32 %332, 16, !dbg !14
  %336 = shl i32 %332, 12, !dbg !28
  %337 = shl i32 %333, 12, !dbg !28
  %338 = add i32 %329, %336, !dbg !29
  %339 = add i32 %329, %337, !dbg !29
  %340 = sext i32 %338 to i64, !dbg !30
  %341 = getelementptr float, ptr addrspace(1) %2, i64 %340, !dbg !30
  %342 = sext i32 %339 to i64, !dbg !30
  %343 = getelementptr float, ptr addrspace(1) %2, i64 %342, !dbg !30
  %344 = shl i32 %8, 8, !dbg !31
  %345 = and i32 %344, 768, !dbg !31
  %346 = or disjoint i32 %345, %16, !dbg !31
  %347 = and i32 %9, 508, !dbg !31
  %348 = lshr exact i32 %345, 4, !dbg !31
  %349 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %348, !dbg !31
  %350 = getelementptr float, ptr addrspace(3) %349, i32 %346, !dbg !31
  %351 = bitcast float %s.1.i to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %350, <1 x i32> %351, i1 true) #4, !dbg !31
  %352 = or disjoint i32 %346, 64, !dbg !31
  %353 = lshr i32 %352, 6, !dbg !31
  %354 = getelementptr float, ptr addrspace(3) @global_smem, i32 %353, !dbg !31
  %355 = getelementptr float, ptr addrspace(3) %354, i32 %352, !dbg !31
  %356 = bitcast float %s.1.i9 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %355, <1 x i32> %356, i1 true) #4, !dbg !31
  %357 = or disjoint i32 %346, 128, !dbg !31
  %358 = lshr i32 %357, 6, !dbg !31
  %359 = getelementptr float, ptr addrspace(3) @global_smem, i32 %358, !dbg !31
  %360 = getelementptr float, ptr addrspace(3) %359, i32 %357, !dbg !31
  %361 = bitcast float %s.1.i28 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %360, <1 x i32> %361, i1 true) #4, !dbg !31
  %362 = or disjoint i32 %346, 192, !dbg !31
  %363 = lshr i32 %362, 6, !dbg !31
  %364 = getelementptr float, ptr addrspace(3) @global_smem, i32 %363, !dbg !31
  %365 = getelementptr float, ptr addrspace(3) %364, i32 %362, !dbg !31
  %366 = bitcast float %s.1.i47 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %365, <1 x i32> %366, i1 true) #4, !dbg !31
  %367 = or disjoint i32 %346, 32, !dbg !31
  %368 = getelementptr float, ptr addrspace(3) %349, i32 %367, !dbg !31
  %369 = bitcast float %s.1.i66 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %368, <1 x i32> %369, i1 true) #4, !dbg !31
  %370 = or disjoint i32 %346, 96, !dbg !31
  %371 = lshr i32 %370, 6, !dbg !31
  %372 = getelementptr float, ptr addrspace(3) @global_smem, i32 %371, !dbg !31
  %373 = getelementptr float, ptr addrspace(3) %372, i32 %370, !dbg !31
  %374 = bitcast float %s.1.i85 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %373, <1 x i32> %374, i1 true) #4, !dbg !31
  %375 = or disjoint i32 %346, 160, !dbg !31
  %376 = lshr i32 %375, 6, !dbg !31
  %377 = getelementptr float, ptr addrspace(3) @global_smem, i32 %376, !dbg !31
  %378 = getelementptr float, ptr addrspace(3) %377, i32 %375, !dbg !31
  %379 = bitcast float %s.1.i104 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %378, <1 x i32> %379, i1 true) #4, !dbg !31
  %380 = or disjoint i32 %346, 224, !dbg !31
  %381 = lshr i32 %380, 6, !dbg !31
  %382 = getelementptr float, ptr addrspace(3) @global_smem, i32 %381, !dbg !31
  %383 = getelementptr float, ptr addrspace(3) %382, i32 %380, !dbg !31
  %384 = bitcast float %s.1.i123 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %383, <1 x i32> %384, i1 true) #4, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %385 = lshr i32 %347, 6, !dbg !31
  %386 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %385, !dbg !31
  %387 = getelementptr inbounds float, ptr addrspace(3) %386, i32 %347, !dbg !31
  %388 = load i32, ptr addrspace(3) %387, align 4, !dbg !31
  %389 = or disjoint i32 %347, 1, !dbg !31
  %390 = getelementptr inbounds float, ptr addrspace(3) %386, i32 %389, !dbg !31
  %391 = load i32, ptr addrspace(3) %390, align 4, !dbg !31
  %392 = or disjoint i32 %347, 2, !dbg !31
  %393 = getelementptr inbounds float, ptr addrspace(3) %386, i32 %392, !dbg !31
  %394 = load i32, ptr addrspace(3) %393, align 4, !dbg !31
  %395 = or disjoint i32 %347, 3, !dbg !31
  %396 = getelementptr inbounds float, ptr addrspace(3) %386, i32 %395, !dbg !31
  %397 = load i32, ptr addrspace(3) %396, align 4, !dbg !31
  %398 = or disjoint i32 %347, 512, !dbg !31
  %399 = lshr i32 %398, 6, !dbg !31
  %400 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %399, !dbg !31
  %401 = getelementptr inbounds float, ptr addrspace(3) %400, i32 %398, !dbg !31
  %402 = load i32, ptr addrspace(3) %401, align 4, !dbg !31
  %403 = or disjoint i32 %347, 513, !dbg !31
  %404 = lshr i32 %403, 6, !dbg !31
  %405 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %404, !dbg !31
  %406 = getelementptr inbounds float, ptr addrspace(3) %405, i32 %403, !dbg !31
  %407 = load i32, ptr addrspace(3) %406, align 4, !dbg !31
  %408 = or disjoint i32 %347, 514, !dbg !31
  %409 = lshr i32 %408, 6, !dbg !31
  %410 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %409, !dbg !31
  %411 = getelementptr inbounds float, ptr addrspace(3) %410, i32 %408, !dbg !31
  %412 = load i32, ptr addrspace(3) %411, align 4, !dbg !31
  %413 = or disjoint i32 %347, 515, !dbg !31
  %414 = lshr i32 %413, 6, !dbg !31
  %415 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %414, !dbg !31
  %416 = getelementptr inbounds float, ptr addrspace(3) %415, i32 %413, !dbg !31
  %417 = load i32, ptr addrspace(3) %416, align 4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %388, i32 %391, i32 %394, i32 %397, ptr addrspace(1) %341, i1 %335) #4, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %402, i32 %407, i32 %412, i32 %417, ptr addrspace(1) %343, i1 %334) #4, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccz4uljlxfrhzf5d7xrydaiqb2hczln5eggdlkv362ps3jrmbrry.py", directory: "inductor_cache/cz")
!4 = !{ptr @triton_poi_fused_convolution_tanh_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_19", linkageName: "triton_poi_fused_convolution_tanh_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 32, column: 37, scope: !7)
!20 = !DILocation(line: 32, column: 48, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 35, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 36, column: 35, scope: !7)
!29 = !DILocation(line: 36, column: 30, scope: !7)
!30 = !DILocation(line: 36, column: 25, scope: !7)
!31 = !DILocation(line: 36, column: 46, scope: !7)
!32 = !DILocation(line: 36, column: 4, scope: !7)
