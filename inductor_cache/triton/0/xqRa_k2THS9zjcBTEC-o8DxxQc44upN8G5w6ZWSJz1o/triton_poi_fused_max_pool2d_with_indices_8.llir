; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 28, !dbg !14
  %13 = mul i32 %12, 28, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = srem i32 %11, 28, !dbg !15
  %15 = srem i32 %12, 28, !dbg !16
  %16 = sdiv i32 %10, 784, !dbg !17
  %17 = shl nsw i32 %.decomposed, 1, !dbg !18
  %18 = shl nsw i32 %14, 1, !dbg !18
  %19 = mul nsw i32 %15, 114, !dbg !19
  %20 = mul i32 %16, 3249, !dbg !20
  %21 = add i32 %19, %20, !dbg !21
  %22 = add i32 %21, %17, !dbg !22
  %23 = add i32 %21, %18, !dbg !22
  %24 = sext i32 %22 to i64, !dbg !23
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !23
  %26 = sext i32 %23 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !24
  %30 = add i32 %21, 1, !dbg !25
  %31 = add i32 %30, %17, !dbg !26
  %32 = add i32 %30, %18, !dbg !26
  %33 = sext i32 %31 to i64, !dbg !27
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !27
  %35 = sext i32 %32 to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !27
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !28
  %39 = add i32 %21, 57, !dbg !29
  %40 = add i32 %39, %17, !dbg !30
  %41 = add i32 %39, %18, !dbg !30
  %42 = sext i32 %40 to i64, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !31
  %44 = sext i32 %41 to i64, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !31
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !32
  %48 = add i32 %21, 58, !dbg !33
  %49 = add i32 %48, %17, !dbg !34
  %50 = add i32 %48, %18, !dbg !34
  %51 = sext i32 %49 to i64, !dbg !35
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !35
  %53 = sext i32 %50 to i64, !dbg !35
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !35
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 true) #1, !dbg !36
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !36
  %57 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !24
  %58 = insertelement <2 x i32> %57, i32 %29, i64 1, !dbg !24
  %59 = bitcast <2 x i32> %58 to <2 x float>, !dbg !24
  %60 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !28
  %61 = insertelement <2 x i32> %60, i32 %38, i64 1, !dbg !28
  %62 = bitcast <2 x i32> %61 to <2 x float>, !dbg !28
  %63 = insertelement <2 x i32> poison, i32 %46, i64 0, !dbg !32
  %64 = insertelement <2 x i32> %63, i32 %47, i64 1, !dbg !32
  %65 = bitcast <2 x i32> %64 to <2 x float>, !dbg !32
  %66 = insertelement <2 x i32> poison, i32 %55, i64 0, !dbg !36
  %67 = insertelement <2 x i32> %66, i32 %56, i64 1, !dbg !36
  %68 = bitcast <2 x i32> %67 to <2 x float>, !dbg !36
  %69 = fcmp ogt <2 x float> %62, %59, !dbg !37
  %70 = fcmp uno <2 x float> %62, zeroinitializer, !dbg !41
  %71 = or <2 x i1> %69, %70, !dbg !42
  %.v = select <2 x i1> %71, <2 x i32> %61, <2 x i32> %58, !dbg !43
  %72 = bitcast <2 x i32> %.v to <2 x float>, !dbg !43
  %73 = fcmp olt <2 x float> %72, %65, !dbg !44
  %74 = fcmp uno <2 x float> %65, zeroinitializer, !dbg !46
  %75 = or <2 x i1> %74, %73, !dbg !47
  %.v1 = select <2 x i1> %75, <2 x i32> %64, <2 x i32> %.v, !dbg !48
  %76 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !48
  %77 = fcmp olt <2 x float> %76, %68, !dbg !49
  %78 = bitcast i32 %55 to float, !dbg !51
  %79 = fcmp uno float %78, 0.000000e+00, !dbg !51
  %80 = bitcast i32 %56 to float, !dbg !51
  %81 = fcmp uno float %80, 0.000000e+00, !dbg !51
  %82 = extractelement <2 x i1> %77, i64 0, !dbg !52
  %83 = or i1 %79, %82, !dbg !52
  %84 = extractelement <2 x i1> %77, i64 1, !dbg !52
  %85 = or i1 %81, %84, !dbg !52
  %86 = zext <2 x i1> %69 to <2 x i8>, !dbg !53
  %87 = select <2 x i1> %73, <2 x i8> splat (i8 2), <2 x i8> %86, !dbg !54
  %88 = select <2 x i1> %77, <2 x i8> splat (i8 3), <2 x i8> %87, !dbg !55
  %89 = sext i32 %10 to i64, !dbg !56
  %90 = getelementptr float, ptr addrspace(1) %1, i64 %89, !dbg !56
  %91 = extractelement <2 x i32> %.v1, i64 0, !dbg !57
  %92 = select i1 %83, i32 %55, i32 %91, !dbg !58
  %93 = extractelement <2 x i32> %.v1, i64 1, !dbg !57
  %94 = select i1 %85, i32 %56, i32 %93, !dbg !58
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %92, i32 %94, ptr addrspace(1) %90, i1 true) #1, !dbg !57
  %95 = getelementptr i8, ptr addrspace(1) %2, i64 %89, !dbg !59
  %96 = bitcast <2 x i8> %88 to i16, !dbg !60
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %96, ptr addrspace(1) %95, i1 true) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4rjk7cckzcvwtiezeohgr3hauvqbsryvpytvbefz3m7duth6p6w.py", directory: "inductor_cache/4r")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_8, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_8", linkageName: "triton_poi_fused_max_pool2d_with_indices_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 32, scope: !7)
!19 = !DILocation(line: 28, column: 41, scope: !7)
!20 = !DILocation(line: 28, column: 51, scope: !7)
!21 = !DILocation(line: 28, column: 37, scope: !7)
!22 = !DILocation(line: 28, column: 46, scope: !7)
!23 = !DILocation(line: 28, column: 30, scope: !7)
!24 = !DILocation(line: 28, column: 56, scope: !7)
!25 = !DILocation(line: 29, column: 41, scope: !7)
!26 = !DILocation(line: 29, column: 50, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 60, scope: !7)
!29 = !DILocation(line: 30, column: 42, scope: !7)
!30 = !DILocation(line: 30, column: 51, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 61, scope: !7)
!33 = !DILocation(line: 31, column: 42, scope: !7)
!34 = !DILocation(line: 31, column: 51, scope: !7)
!35 = !DILocation(line: 31, column: 30, scope: !7)
!36 = !DILocation(line: 31, column: 61, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 32, column: 40, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!44 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !45)
!45 = !DILocation(line: 33, column: 40, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !45)
!49 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !50)
!50 = !DILocation(line: 34, column: 40, scope: !7)
!51 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !50)
!52 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !50)
!53 = !DILocation(line: 38, column: 33, scope: !7)
!54 = !DILocation(line: 41, column: 35, scope: !7)
!55 = !DILocation(line: 44, column: 35, scope: !7)
!56 = !DILocation(line: 45, column: 25, scope: !7)
!57 = !DILocation(line: 45, column: 36, scope: !7)
!58 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !50)
!59 = !DILocation(line: 46, column: 25, scope: !7)
!60 = !DILocation(line: 46, column: 37, scope: !7)
!61 = !DILocation(line: 46, column: 4, scope: !7)
