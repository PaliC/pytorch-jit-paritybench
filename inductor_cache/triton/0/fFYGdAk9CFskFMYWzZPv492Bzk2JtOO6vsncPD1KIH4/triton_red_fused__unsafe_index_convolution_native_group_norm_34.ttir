#loc = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0)
#loc1 = loc(unknown)
#loc65 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":65:44)
#loc98 = loc(callsite(#loc1 at #loc65))
module {
  tt.func public @triton_red_fused__unsafe_index_convolution_native_group_norm_34(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":19:0)) attributes {noinline = false} {
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x2048xi64> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<1x2048xi64> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1x2048xi64> loc(#loc1)
    %cst_5 = arith.constant dense<32> : tensor<1x2048xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1024> : tensor<1x2048xi32> loc(#loc1)
    %cst_7 = arith.constant dense<8192> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.remsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c4_i32 : i32 loc(#loc7)
    %7 = arith.remsi %6, %c64_i32 : i32 loc(#loc8)
    %8 = tt.addptr %arg2, %7 : !tt.ptr<f32>, i32 loc(#loc9)
    %9 = tt.splat %8 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.load %9, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %5, %c8_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x2048xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>> loc(#loc13)
    %14 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc14)
    %15 = arith.muli %6, %c4096_i32 : i32 loc(#loc15)
    %16 = arith.extsi %15 : i32 to i64 loc(#loc16)
    %17 = tt.splat %16 : i64 -> tensor<1x2048xi64> loc(#loc16)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.broadcast %10 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc18)
    %20 = arith.muli %0, %c8192_i32 : i32 loc(#loc19)
    %21 = tt.splat %20 : i32 -> tensor<1x2048xi32> loc(#loc20)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc21)
    %23:3 = scf.for %arg9 = %c0_i32 to %c8192_i32 step %c2048_i32 iter_args(%arg10 = %cst_1, %arg11 = %cst_1, %arg12 = %cst_1) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %34 = tt.splat %arg9 : i32 -> tensor<1x2048xi32> loc(#loc23)
      %35 = arith.addi %34, %4 : tensor<1x2048xi32> loc(#loc23)
      %36 = arith.cmpi slt, %35, %cst_7 : tensor<1x2048xi32> loc(#loc24)
      %37 = arith.divsi %35, %cst_6 : tensor<1x2048xi32> loc(#loc25)
      %38 = arith.divsi %35, %cst_5 : tensor<1x2048xi32> loc(#loc26)
      %39 = arith.remsi %38, %cst_5 : tensor<1x2048xi32> loc(#loc27)
      %40 = arith.remsi %35, %cst_5 : tensor<1x2048xi32> loc(#loc28)
      %41 = arith.addi %37, %12 : tensor<1x2048xi32> loc(#loc12)
      %42 = tt.addptr %13, %41 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc13)
      %43 = arith.andi %36, %14 : tensor<1x2048xi1> loc(#loc14)
      %44 = tt.load %42, %43, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc29)
      %45 = tt.addptr %13, %39 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc30)
      %46 = tt.load %45, %36, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc31)
      %47 = tt.addptr %13, %40 : tensor<1x2048x!tt.ptr<i64>>, tensor<1x2048xi32> loc(#loc32)
      %48 = tt.load %47, %36, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>> loc(#loc33)
      %49 = arith.addi %44, %cst_4 : tensor<1x2048xi64> loc(#loc34)
      %50 = arith.cmpi slt, %44, %cst_2 : tensor<1x2048xi64> loc(#loc35)
      %51 = arith.select %50, %49, %44 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc36)
      %52 = arith.addi %46, %cst_4 : tensor<1x2048xi64> loc(#loc37)
      %53 = arith.cmpi slt, %46, %cst_2 : tensor<1x2048xi64> loc(#loc38)
      %54 = arith.select %53, %52, %46 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc39)
      %55 = arith.addi %48, %cst_4 : tensor<1x2048xi64> loc(#loc40)
      %56 = arith.cmpi slt, %48, %cst_2 : tensor<1x2048xi64> loc(#loc41)
      %57 = arith.select %56, %55, %48 : tensor<1x2048xi1>, tensor<1x2048xi64> loc(#loc42)
      %58 = arith.muli %54, %cst_4 : tensor<1x2048xi64> loc(#loc43)
      %59 = arith.addi %57, %58 : tensor<1x2048xi64> loc(#loc44)
      %60 = arith.muli %51, %cst_3 : tensor<1x2048xi64> loc(#loc45)
      %61 = arith.addi %59, %60 : tensor<1x2048xi64> loc(#loc46)
      %62 = arith.addi %61, %17 : tensor<1x2048xi64> loc(#loc16)
      %63 = tt.addptr %18, %62 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi64> loc(#loc17)
      %64 = tt.load %63, %43 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc47)
      %65 = arith.addf %64, %19 : tensor<1x2048xf32> loc(#loc18)
      %66 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc48)
      %67:3 = scf.if %66 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_1, %65, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc89)
      } else {
        %73 = arith.subf %65, %arg10 : tensor<1x2048xf32> loc(#loc90)
        %74 = arith.addf %arg12, %cst_0 : tensor<1x2048xf32> loc(#loc91)
        %75 = arith.divf %73, %74 : tensor<1x2048xf32> loc(#loc92)
        %76 = arith.addf %arg10, %75 : tensor<1x2048xf32> loc(#loc93)
        %77 = arith.subf %65, %76 : tensor<1x2048xf32> loc(#loc94)
        %78 = arith.mulf %73, %77 : tensor<1x2048xf32> loc(#loc95)
        %79 = arith.addf %arg11, %78 : tensor<1x2048xf32> loc(#loc96)
        scf.yield %79, %76, %74 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc96)
      } loc(#loc88)
      %68 = arith.select %43, %67#1, %arg10 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc59)
      %69 = arith.select %43, %67#0, %arg11 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc60)
      %70 = arith.select %43, %67#2, %arg12 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc61)
      %71 = arith.addi %35, %21 : tensor<1x2048xi32> loc(#loc20)
      %72 = tt.addptr %22, %71 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc21)
      tt.store %72, %65, %43 : tensor<1x2048x!tt.ptr<f32>> loc(#loc62)
      scf.yield %68, %69, %70 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc63)
    } loc(#loc22)
    %24:3 = "tt.reduce"(%23#0, %23#1, %23#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc65)), %arg10: f32 loc(callsite(#loc1 at #loc65)), %arg11: f32 loc(callsite(#loc1 at #loc65)), %arg12: f32 loc(callsite(#loc1 at #loc65)), %arg13: f32 loc(callsite(#loc1 at #loc65)), %arg14: f32 loc(callsite(#loc1 at #loc65))):
      %34 = arith.subf %arg12, %arg9 : f32 loc(#loc111)
      %35 = arith.addf %arg11, %arg14 : f32 loc(#loc112)
      %36 = arith.cmpf oeq, %35, %cst : f32 loc(#loc113)
      %37 = arith.divf %arg14, %35 : f32 loc(#loc114)
      %38 = arith.select %36, %cst, %37 : f32 loc(#loc115)
      %39 = arith.mulf %34, %38 : f32 loc(#loc116)
      %40 = arith.addf %arg9, %39 : f32 loc(#loc117)
      %41 = arith.addf %arg10, %arg13 : f32 loc(#loc118)
      %42 = arith.mulf %34, %34 : f32 loc(#loc119)
      %43 = arith.mulf %42, %arg11 : f32 loc(#loc120)
      %44 = arith.mulf %43, %38 : f32 loc(#loc121)
      %45 = arith.addf %41, %44 : f32 loc(#loc122)
      tt.reduce.return %40, %45, %35 : f32, f32, f32 loc(#loc97)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc97)
    %25 = tt.expand_dims %24#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc78)
    %26 = tt.expand_dims %24#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc79)
    %27 = tt.expand_dims %24#2 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc80)
    %28 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc81)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc81)
    tt.store %29, %25, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc82)
    %30 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc83)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc83)
    tt.store %31, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc84)
    %32 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc85)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc85)
    tt.store %33, %27, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc86)
    tt.return loc(#loc87)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":22:28)
#loc3 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":24:21)
#loc4 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":25:25)
#loc5 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":25:33)
#loc6 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":26:19)
#loc7 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":27:19)
#loc8 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":28:26)
#loc9 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":29:31)
#loc10 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":29:36)
#loc11 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":41:41)
#loc12 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":41:39)
#loc13 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":41:34)
#loc14 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":41:54)
#loc15 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:69)
#loc16 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:64)
#loc17 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:35)
#loc18 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":55:24)
#loc19 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":63:39)
#loc20 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":63:34)
#loc21 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":63:29)
#loc22 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":34:36)
#loc23 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":35:27)
#loc24 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":36:25)
#loc25 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":37:23)
#loc26 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":38:25)
#loc27 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":38:31)
#loc28 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":39:23)
#loc29 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":41:46)
#loc30 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":42:34)
#loc31 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":42:39)
#loc32 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":43:34)
#loc33 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":43:39)
#loc34 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":45:22)
#loc35 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":46:22)
#loc36 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":47:36)
#loc37 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":48:22)
#loc38 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":49:22)
#loc39 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":50:36)
#loc40 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":51:23)
#loc41 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":52:23)
#loc42 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":53:39)
#loc43 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:46)
#loc44 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:43)
#loc45 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:57)
#loc46 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:53)
#loc47 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":54:74)
#loc48 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":58:66)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc50 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":58:55)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc59 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":60:62)
#loc60 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":61:58)
#loc61 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":62:66)
#loc62 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":63:51)
#loc63 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":63:8)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc78 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":67:22)
#loc79 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":68:22)
#loc80 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":69:22)
#loc81 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":70:25)
#loc82 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":70:37)
#loc83 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":71:25)
#loc84 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":71:37)
#loc85 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":72:25)
#loc86 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":72:37)
#loc87 = loc("inductor_cache/mc/cmcwq5454sc4cy26h22jxv63jeve26ii2nsznlktuvwx74oxdjtk.py":72:4)
#loc88 = loc(callsite(#loc49 at #loc50))
#loc89 = loc(callsite(#loc51 at #loc50))
#loc90 = loc(callsite(#loc52 at #loc50))
#loc91 = loc(callsite(#loc53 at #loc50))
#loc92 = loc(callsite(#loc54 at #loc50))
#loc93 = loc(callsite(#loc55 at #loc50))
#loc94 = loc(callsite(#loc56 at #loc50))
#loc95 = loc(callsite(#loc57 at #loc50))
#loc96 = loc(callsite(#loc58 at #loc50))
#loc97 = loc(callsite(#loc64 at #loc65))
#loc99 = loc(callsite(#loc66 at #loc64))
#loc100 = loc(callsite(#loc67 at #loc64))
#loc101 = loc(callsite(#loc68 at #loc64))
#loc102 = loc(callsite(#loc69 at #loc64))
#loc103 = loc(callsite(#loc70 at #loc64))
#loc104 = loc(callsite(#loc71 at #loc64))
#loc105 = loc(callsite(#loc72 at #loc64))
#loc106 = loc(callsite(#loc73 at #loc64))
#loc107 = loc(callsite(#loc74 at #loc64))
#loc108 = loc(callsite(#loc75 at #loc64))
#loc109 = loc(callsite(#loc76 at #loc64))
#loc110 = loc(callsite(#loc77 at #loc64))
#loc111 = loc(callsite(#loc99 at #loc65))
#loc112 = loc(callsite(#loc100 at #loc65))
#loc113 = loc(callsite(#loc101 at #loc65))
#loc114 = loc(callsite(#loc102 at #loc65))
#loc115 = loc(callsite(#loc103 at #loc65))
#loc116 = loc(callsite(#loc104 at #loc65))
#loc117 = loc(callsite(#loc105 at #loc65))
#loc118 = loc(callsite(#loc106 at #loc65))
#loc119 = loc(callsite(#loc107 at #loc65))
#loc120 = loc(callsite(#loc108 at #loc65))
#loc121 = loc(callsite(#loc109 at #loc65))
#loc122 = loc(callsite(#loc110 at #loc65))
