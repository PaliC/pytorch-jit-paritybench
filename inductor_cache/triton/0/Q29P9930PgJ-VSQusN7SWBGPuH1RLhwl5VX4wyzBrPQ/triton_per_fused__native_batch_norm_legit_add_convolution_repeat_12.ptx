//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<90>;
	.reg .f32 	%f<73>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_0];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_1];
$L__tmp0:
	.loc	1 24 28                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_2];
	.loc	1 27 26                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:27:26
	mov.u32 	%r52, %tid.x;
	and.b32  	%r53, %r52, 31;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_3];
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_4];
	shl.b32 	%r54, %r52, 2;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_5];
	and.b32  	%r55, %r54, 252;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_6];
	.loc	1 32 19                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:32:19
	shr.s32 	%r56, %r1, 31;
	shr.u32 	%r57, %r56, 25;
	add.s32 	%r58, %r1, %r57;
	and.b32  	%r59, %r58, -128;
	sub.s32 	%r60, %r1, %r59;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_add_convolution_repeat_12_param_7];
	.loc	1 33 31                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:33:31
	mul.wide.s32 	%rd29, %r60, 4;
	add.s64 	%rd1, %rd23, %rd29;
	mov.pred 	%p1, -1;
	.loc	1 33 43                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r41 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 43                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:34:43
	shl.b32 	%r61, %r1, 8;
	.loc	1 34 39                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:34:39
	or.b32  	%r62, %r61, %r55;
	.loc	1 34 34                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:34:34
	mul.wide.s32 	%rd30, %r62, 4;
	add.s64 	%rd6, %rd21, %rd30;
	.loc	1 34 48                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:34:48
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 35 30                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:35:30
	add.s64 	%rd7, %rd24, %rd29;
	.loc	1 35 35                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:35:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r14;
	.loc	1 36 31                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:36:31
	add.s64 	%rd11, %rd25, %rd29;
	.loc	1 36 36                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:36:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 35                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:37:35
	add.s64 	%rd15, %rd22, %rd30;
	.loc	1 37 49                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:37:49
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 38 18                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:38:18
	add.f32 	%f6, %f1, %f5;
	add.f32 	%f7, %f2, %f5;
	add.f32 	%f8, %f3, %f5;
	add.f32 	%f9, %f4, %f5;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f6, %f7;
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f9, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f12;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f13, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f14;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f15, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f16;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f17, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f18;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	mov.b32 	%f19, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f20;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f21, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r53, 0;
	shr.u32 	%r73, %r52, 3;
	and.b32  	%r74, %r73, 4;
	mov.u32 	%r75, global_smem;
	add.s32 	%r23, %r75, %r74;
	mov.b32 	%r24, %f22;
	// begin inline asm
	@%p16 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r52, 2;
	add.s32 	%r26, %r75, %r54;
	// begin inline asm
	@%p17 ld.shared.b32 %r25, [ %r26 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r25;
	shfl.sync.bfly.b32	%r76, %r25, 1, 31, -1;
	mov.b32 	%f24, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r77, %r52, 1;
	setp.eq.b32 	%p27, %r77, 1;
	not.pred 	%p28, %p27;
	and.pred  	%p18, %p17, %p28;
	mov.b32 	%r28, %f25;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f26, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f27, %f26, 0f00000000;
$L__tmp3:
	.loc	1 44 19                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:44:19
	mov.b32 	%r30, %f27;
	mov.b32 	%r31, 1132462080;
	// begin inline asm
	div.full.f32 %r51, %r30, %r31;
	// end inline asm
	mov.b32 	%f28, %r51;
	.loc	1 45 19                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:45:19
	sub.f32 	%f29, %f6, %f28;
	sub.f32 	%f30, %f7, %f28;
	sub.f32 	%f31, %f8, %f28;
	sub.f32 	%f32, %f9, %f28;
	.loc	1 46 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:46:20
	mul.f32 	%f33, %f30, %f30;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f29, %f29, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f36;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f37, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f38;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f39, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f40;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f41, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f42;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f43, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f44;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f45, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f46;
	// begin inline asm
	@%p16 st.shared.b32 [ %r23 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r34, [ %r26 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r34;
	shfl.sync.bfly.b32	%r88, %r34, 1, 31, -1;
	mov.b32 	%f48, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f49;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f50, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f51, %f50, 0f00000000;
$L__tmp6:
	.loc	1 51 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:51:20
	mov.b32 	%r39, %f51;
	// begin inline asm
	div.full.f32 %r38, %r39, %r31;
	// end inline asm
	mov.b32 	%f52, %r38;
	.loc	1 53 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:53:20
	add.f32 	%f53, %f52, 0f3727C5AC;
	.loc	1 54 28                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:54:28
	rsqrt.approx.ftz.f32 	%f54, %f53;
	.loc	1 37 49                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:37:49
	mov.b32 	%f55, %r22;
	mov.b32 	%f56, %r21;
	mov.b32 	%f57, %r20;
	mov.b32 	%f58, %r19;
	.loc	1 36 36                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:36:36
	mov.b32 	%f59, %r18;
	.loc	1 33 43                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:33:43
	mov.b32 	%f60, %r5;
	.loc	1 55 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:55:20
	mul.f32 	%f61, %f29, %f54;
	mul.f32 	%f62, %f30, %f54;
	mul.f32 	%f63, %f31, %f54;
	mul.f32 	%f64, %f32, %f54;
	.loc	1 57 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:57:20
	fma.rn.f32 	%f65, %f61, %f60, %f59;
	fma.rn.f32 	%f66, %f62, %f60, %f59;
	fma.rn.f32 	%f67, %f63, %f60, %f59;
	fma.rn.f32 	%f68, %f64, %f60, %f59;
	.loc	1 58 20                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:58:20
	add.f32 	%f69, %f65, %f58;
	add.f32 	%f70, %f66, %f57;
	add.f32 	%f71, %f67, %f56;
	add.f32 	%f72, %f68, %f55;
	.loc	1 59 25                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:59:25
	mul.wide.s32 	%rd31, %r1, 4;
	add.s64 	%rd16, %rd26, %rd31;
	.loc	1 59 36                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:59:36
	and.b32  	%r89, %r52, 63;
	setp.eq.s32 	%p22, %r89, 0;
	// begin inline asm
	@%p22 st.global.b32 [ %rd16 + 0 ], { %r41 };
	// end inline asm
	.loc	1 60 48                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:60:48
	mov.b32 	%r42, %f6;
	mov.b32 	%r43, %f7;
	mov.b32 	%r44, %f8;
	mov.b32 	%r45, %f9;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	.loc	1 61 49                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:61:49
	mov.b32 	%r46, %f69;
	mov.b32 	%r47, %f70;
	mov.b32 	%r48, %f71;
	mov.b32 	%r49, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r46, %r47, %r48, %r49 };
	// end inline asm
	.loc	1 62 25                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:62:25
	add.s64 	%rd19, %rd28, %rd31;
	.loc	1 62 37                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:62:37
	mov.b32 	%r50, %f54;
	// begin inline asm
	@%p22 st.global.b32 [ %rd19 + 0 ], { %r50 };
	// end inline asm
	.loc	1 63 25                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:63:25
	add.s64 	%rd20, %rd27, %rd31;
	.loc	1 63 37                         // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:63:37
	// begin inline asm
	@%p22 st.global.b32 [ %rd20 + 0 ], { %r51 };
	// end inline asm
	.loc	1 63 4                          // cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py:63:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xo/cxozj6rdhwjiqseipvch37ezrjahvoqc2myytswlh5xh2cfsntre.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 284                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x115 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 111
.b8 122
.b8 106
.b8 54
.b8 114
.b8 100
.b8 104
.b8 119
.b8 106
.b8 105
.b8 113
.b8 115
.b8 101
.b8 105
.b8 112
.b8 118
.b8 99
.b8 104
.b8 51
.b8 55
.b8 101
.b8 122
.b8 114
.b8 106
.b8 97
.b8 104
.b8 118
.b8 111
.b8 113
.b8 99
.b8 50
.b8 109
.b8 121
.b8 121
.b8 116
.b8 115
.b8 119
.b8 108
.b8 104
.b8 53
.b8 120
.b8 104
.b8 50
.b8 99
.b8 102
.b8 115
.b8 110
.b8 116
.b8 114
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x46 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 112
.b8 101
.b8 97
.b8 116
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa9:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xee:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x106:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
