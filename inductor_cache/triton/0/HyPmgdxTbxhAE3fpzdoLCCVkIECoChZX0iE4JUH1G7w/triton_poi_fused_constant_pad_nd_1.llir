; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 1936, !dbg !14
  %12 = sdiv i32 %9, 11, !dbg !15
  %13 = sdiv i32 %10, 11, !dbg !15
  %14 = sdiv i32 %9, 121, !dbg !16
  %15 = sdiv i32 %10, 121, !dbg !16
  %16 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %17 = insertelement <2 x i32> %16, i32 %12, i64 1, !dbg !17
  %18 = srem <2 x i32> %17, splat (i32 11), !dbg !17
  %19 = add nsw <2 x i32> %18, splat (i32 -2), !dbg !18
  %20 = extractelement <2 x i32> %19, i64 0, !dbg !19
  %21 = extractelement <2 x i32> %19, i64 1, !dbg !20
  %22 = or i32 %21, %20, !dbg !21
  %23 = icmp ult i32 %22, 8, !dbg !21
  %24 = trunc nsw <2 x i32> %18 to <2 x i8>, !dbg !22
  %25 = srem <2 x i8> %24, splat (i8 2), !dbg !22
  %26 = icmp slt <2 x i8> %25, splat (i8 1), !dbg !23
  %27 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !17
  %28 = insertelement <2 x i32> %27, i32 %13, i64 1, !dbg !17
  %29 = srem <2 x i32> %28, splat (i32 11), !dbg !17
  %30 = add nsw <2 x i32> %29, splat (i32 -2), !dbg !18
  %31 = extractelement <2 x i32> %30, i64 0, !dbg !19
  %32 = extractelement <2 x i32> %30, i64 1, !dbg !20
  %33 = or i32 %32, %31, !dbg !21
  %34 = icmp ult i32 %33, 8, !dbg !21
  %35 = trunc nsw <2 x i32> %29 to <2 x i8>, !dbg !22
  %36 = srem <2 x i8> %35, splat (i8 2), !dbg !22
  %37 = icmp slt <2 x i8> %36, splat (i8 1), !dbg !23
  %shift = shufflevector <2 x i1> %26, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !24
  %38 = and <2 x i1> %26, %shift, !dbg !24
  %39 = extractelement <2 x i1> %38, i64 0, !dbg !24
  %shift23 = shufflevector <2 x i1> %37, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !24
  %40 = and <2 x i1> %37, %shift23, !dbg !24
  %41 = extractelement <2 x i1> %40, i64 0, !dbg !24
  %42 = and i1 %23, %39, !dbg !25
  %43 = and i1 %34, %41, !dbg !25
  %.lhs.trunc7 = trunc nsw i32 %21 to i8, !dbg !20
  %44 = sdiv i8 %.lhs.trunc7, 2, !dbg !20
  %.lhs.trunc9 = trunc nsw i32 %32 to i8, !dbg !20
  %45 = sdiv i8 %.lhs.trunc9, 2, !dbg !20
  %46 = srem i8 %44, 4, !dbg !26
  %.sext12 = sext i8 %46 to i32, !dbg !26
  %47 = srem i8 %45, 4, !dbg !26
  %.sext14 = sext i8 %47 to i32, !dbg !26
  %48 = shl nsw i32 %.sext12, 2, !dbg !27
  %49 = shl nsw i32 %.sext14, 2, !dbg !27
  %50 = shl nsw i32 %14, 4, !dbg !28
  %51 = shl nsw i32 %15, 4, !dbg !28
  %.lhs.trunc15 = trunc nsw i32 %20 to i8, !dbg !19
  %52 = sdiv i8 %.lhs.trunc15, 2, !dbg !19
  %.lhs.trunc17 = trunc nsw i32 %31 to i8, !dbg !19
  %53 = sdiv i8 %.lhs.trunc17, 2, !dbg !19
  %54 = srem i8 %52, 4, !dbg !29
  %.sext20 = sext i8 %54 to i32, !dbg !29
  %55 = srem i8 %53, 4, !dbg !29
  %.sext22 = sext i8 %55 to i32, !dbg !29
  %56 = add nsw i32 %50, %.sext20, !dbg !30
  %57 = add nsw i32 %56, %48, !dbg !31
  %58 = add nsw i32 %51, %.sext22, !dbg !30
  %59 = add nsw i32 %58, %49, !dbg !31
  %60 = sext i32 %57 to i64, !dbg !32
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !32
  %62 = sext i32 %59 to i64, !dbg !32
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !32
  %64 = and i1 %11, %42, !dbg !33
  %65 = and i1 %43, %11, !dbg !33
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %64, i32 0, i1 %64) #1, !dbg !34
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %65, i32 0, i1 %65) #1, !dbg !34
  %68 = sext i32 %9 to i64, !dbg !35
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !35
  %70 = select i1 %23, i32 %66, i32 0, !dbg !36
  %71 = select i1 %34, i32 %67, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %70, i32 %71, ptr addrspace(1) %69, i1 %11) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6dwa7bp2sdesyd4i7ymv256erbfdizzjn4rkatslheuvakytfe2.py", directory: "inductor_cache/6d")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_1", linkageName: "triton_poi_fused_constant_pad_nd_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 18, scope: !7)
!19 = !DILocation(line: 46, column: 88, scope: !7)
!20 = !DILocation(line: 46, column: 51, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 42, column: 27, scope: !7)
!23 = !DILocation(line: 43, column: 20, scope: !7)
!24 = !DILocation(line: 44, column: 20, scope: !7)
!25 = !DILocation(line: 45, column: 20, scope: !7)
!26 = !DILocation(line: 46, column: 56, scope: !7)
!27 = !DILocation(line: 46, column: 35, scope: !7)
!28 = !DILocation(line: 46, column: 65, scope: !7)
!29 = !DILocation(line: 46, column: 93, scope: !7)
!30 = !DILocation(line: 46, column: 62, scope: !7)
!31 = !DILocation(line: 46, column: 72, scope: !7)
!32 = !DILocation(line: 46, column: 31, scope: !7)
!33 = !DILocation(line: 46, column: 107, scope: !7)
!34 = !DILocation(line: 46, column: 99, scope: !7)
!35 = !DILocation(line: 49, column: 25, scope: !7)
!36 = !DILocation(line: 48, column: 35, scope: !7)
!37 = !DILocation(line: 49, column: 37, scope: !7)
!38 = !DILocation(line: 49, column: 4, scope: !7)
