//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_43 // -- Begin function triton_poi_fused_cat_43
                                        // @triton_poi_fused_cat_43
.visible .entry triton_poi_fused_cat_43(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_43_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_43_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_43_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_43_param_3,
	.param .u32 triton_poi_fused_cat_43_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<36>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<30>;
	.loc	1 19 0                          // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_cat_43_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_43_param_1];
$L__tmp0:
	.loc	1 21 28                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:21:33
	shl.b32 	%r7, %r1, 7;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_43_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_43_param_3];
	.loc	1 22 36                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:22:36
	mov.u32 	%r8, %tid.x;
	and.b32  	%r9, %r8, 127;
	.loc	1 22 23                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:22:23
	or.b32  	%r10, %r7, %r9;
	.loc	1 25 19                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:25:19
	shr.s32 	%r12, %r10, 31;
	shr.u32 	%r13, %r12, 23;
	add.s32 	%r14, %r10, %r13;
	shr.s32 	%r15, %r14, 9;
	.loc	1 24 19                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:24:19
	and.b32  	%r16, %r14, -512;
	sub.s32 	%r17, %r10, %r16;
	.loc	1 26 21                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:26:21
	bfe.s32 	%r18, %r1, 24, 1;
	shr.u32 	%r19, %r18, 21;
	add.s32 	%r20, %r10, %r19;
	shr.s32 	%r21, %r20, 11;
	.loc	1 26 29                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:26:29
	shr.u32 	%r22, %r21, 30;
	add.s32 	%r23, %r21, %r22;
	and.b32  	%r24, %r23, -4;
	sub.s32 	%r25, %r21, %r24;
	.loc	1 27 28                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:27:28
	shr.u32 	%r26, %r15, 30;
	add.s32 	%r27, %r15, %r26;
	and.b32  	%r28, %r27, -4;
	sub.s32 	%r29, %r15, %r28;
	.loc	1 28 19                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:28:19
	shr.u32 	%r30, %r18, 19;
	add.s32 	%r31, %r10, %r30;
	shr.s32 	%r32, %r31, 13;
	.loc	1 34 18                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:34:18
	setp.lt.s32 	%p1, %r17, 256;
	.loc	1 35 34                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:35:34
	shl.b32 	%r33, %r15, 8;
	.loc	1 35 40                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:35:40
	add.s32 	%r34, %r33, %r17;
	.loc	1 35 30                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:35:30
	mul.wide.s32 	%rd12, %r34, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mov.b32 	%r3, 0;
	.loc	1 35 46                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:35:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 37 18                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:37:18
	setp.gt.f32 	%p10, %f1, 0f00000000;
	.loc	1 39 18                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:39:18
	mul.f32 	%f2, %f1, 0f3DCCCCCD;
	.loc	1 40 33                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:40:33
	selp.f32 	%f3, %f1, %f2, %p10;
	.loc	1 43 20                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:43:20
	setp.gt.s32 	%p3, %r17, 255;
	.loc	1 46 31                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:46:31
	mul.wide.s32 	%rd13, %r25, 8;
	add.s64 	%rd3, %rd9, %rd13;
	.loc	1 46 36                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:46:36
	// begin inline asm
	mov.u64 %rd2, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd2 }, [ %rd3 + 0 ];
	@!%p3 mov.u64 %rd2, 0x0;
	// end inline asm
	.loc	1 50 35                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:50:35
	shr.u64 	%rd14, %rd2, 62;
	and.b64  	%rd15, %rd14, 2;
	add.s64 	%rd16, %rd15, %rd2;
	.loc	1 51 31                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:51:31
	mul.wide.s32 	%rd17, %r29, 8;
	add.s64 	%rd5, %rd9, %rd17;
	.loc	1 51 36                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:51:36
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	@!%p3 mov.u64 %rd4, 0x0;
	// end inline asm
	.loc	1 54 35                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:54:35
	shr.u64 	%rd18, %rd4, 62;
	and.b64  	%rd19, %rd18, 2;
	add.s64 	%rd20, %rd19, %rd4;
	.loc	1 55 60                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:55:60
	shl.b32 	%r35, %r32, 10;
	.loc	1 55 31                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:55:31
	shl.b64 	%rd21, %rd20, 10;
	add.s64 	%rd22, %rd10, %rd21;
	shl.b64 	%rd23, %rd16, 11;
	add.s64 	%rd24, %rd22, %rd23;
	mul.wide.s32 	%rd25, %r35, 4;
	add.s64 	%rd26, %rd24, %rd25;
	mul.wide.s32 	%rd27, %r17, 4;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd6, %rd28, -1024;
	.loc	1 55 81                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:55:81
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd6 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 57 20                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:57:20
	setp.gt.f32 	%p11, %f4, 0f00000000;
	.loc	1 59 20                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:59:20
	mul.f32 	%f5, %f4, 0f3DCCCCCD;
	.loc	1 60 35                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:60:35
	selp.f32 	%f6, %f4, %f5, %p11;
	.loc	1 0 0                           // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:0:0
	selp.f32 	%f7, %f3, %f6, %p1;
	.loc	1 64 25                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:64:25
	mul.wide.s32 	%rd29, %r10, 4;
	add.s64 	%rd7, %rd11, %rd29;
	.loc	1 64 37                         // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:64:37
	mov.b32 	%r6, %f7;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.global.b32 [ %rd7 + 0 ], { %r6 };
	// end inline asm
	.loc	1 64 4                          // cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py:64:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 51
.b8 114
.b8 98
.b8 116
.b8 108
.b8 105
.b8 104
.b8 109
.b8 55
.b8 105
.b8 119
.b8 50
.b8 52
.b8 98
.b8 120
.b8 110
.b8 103
.b8 111
.b8 120
.b8 97
.b8 101
.b8 51
.b8 105
.b8 116
.b8 109
.b8 116
.b8 102
.b8 52
.b8 115
.b8 55
.b8 106
.b8 106
.b8 97
.b8 106
.b8 101
.b8 107
.b8 54
.b8 100
.b8 54
.b8 109
.b8 97
.b8 105
.b8 51
.b8 105
.b8 108
.b8 108
.b8 111
.b8 98
.b8 110
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
