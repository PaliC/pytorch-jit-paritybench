#loc = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":19:0)
#loc1 = loc(unknown)
#loc7 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":34:57)
#loc18 = loc(callsite(#loc1 at #loc7))
module {
  tt.func public @triton_per_fused_add_div_linalg_vector_norm_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999996E-13 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = arith.mulf %3, %3 : tensor<256xf32> loc(#loc5)
    %5 = "tt.reduce"(%4) <{axis = 0 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc7)), %arg4: f32 loc(callsite(#loc1 at #loc7))):
      %13 = arith.addf %arg3, %arg4 : f32 loc(#loc21)
      tt.reduce.return %13 : f32 loc(#loc17)
    }) : (tensor<256xf32>) -> f32 loc(#loc17)
    %6 = arith.addf %5, %cst_0 : f32 loc(#loc20)
    %7 = tt.extern_elementwise %6 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc11)
    %8 = arith.addf %7, %cst : f32 loc(#loc12)
    %9 = tt.splat %8 : f32 -> tensor<256xf32> loc(#loc13)
    %10 = arith.divf %3, %9 : tensor<256xf32> loc(#loc13)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %12 = tt.addptr %11, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    tt.store %12, %10 : tensor<256x!tt.ptr<f32>> loc(#loc15)
    tt.return loc(#loc16)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":27:26)
#loc3 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":31:30)
#loc4 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":31:35)
#loc5 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":32:18)
#loc6 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc10 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":34:44)
#loc11 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":35:26)
#loc12 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":37:18)
#loc13 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":38:18)
#loc14 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":39:25)
#loc15 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":39:63)
#loc16 = loc("inductor_cache/b4/cb4jrv6pefld423ym7yox45m77zetfgqihpnxvdbsoetibsbeabi.py":39:4)
#loc17 = loc(callsite(#loc6 at #loc7))
#loc19 = loc(callsite(#loc8 at #loc6))
#loc20 = loc(callsite(#loc9 at #loc10))
#loc21 = loc(callsite(#loc19 at #loc7))
