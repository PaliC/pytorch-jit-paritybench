; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %4 = shl i32 %3, 4, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 15, !dbg !12
  %7 = or disjoint i32 %4, %6, !dbg !13
  %.frozen = freeze i32 %7, !dbg !14
  %8 = sdiv i32 %.frozen, 4, !dbg !14
  %9 = mul i32 %8, 4, !dbg !15
  %.decomposed = sub i32 %.frozen, %9, !dbg !15
  %10 = sitofp i32 %.decomposed to float, !dbg !16
  %11 = fmul float %10, 0xC0226BB1C0000000, !dbg !17
  %12 = fmul float %11, 0x3FF7154760000000, !dbg !18
  %13 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %12) #4, !dbg !18
  %14 = add nsw i32 %8, 1, !dbg !19
  %15 = sitofp i32 %14 to float, !dbg !20
  %16 = fmul float %13, %15, !dbg !21
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !22
  %17 = fmul float %16, 0x3FE45F3060000000, !dbg !22
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not.i = icmp eq i32 %18, 0, !dbg !22
  %19 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %17) #4, !dbg !22
  %20 = tail call i32 @llvm.nvvm.f2i.rn(float %17) #4, !dbg !22
  %.01.i = select i1 %.not.i, i32 %20, i32 %19, !dbg !22
  %21 = sitofp i32 %.01.i to float, !dbg !22
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not15.i = icmp eq i32 %22, 0, !dbg !22
  %23 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBFF921FB40000000, float %16) #4, !dbg !22
  %24 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBFF921FB40000000, float %16) #4, !dbg !22
  %.02.i = select i1 %.not15.i, float %24, float %23, !dbg !22
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not16.i = icmp eq i32 %25, 0, !dbg !22
  %26 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBE74442D00000000, float %.02.i) #4, !dbg !22
  %27 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBE74442D00000000, float %.02.i) #4, !dbg !22
  %.03.i = select i1 %.not16.i, float %27, float %26, !dbg !22
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not17.i = icmp eq i32 %28, 0, !dbg !22
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !22
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !22
  %.04.i = select i1 %.not17.i, float %30, float %29, !dbg !22
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not18.i = icmp eq i32 %31, 0, !dbg !22
  %32 = tail call float @llvm.nvvm.fabs.ftz.f(float %16) #4, !dbg !22
  %33 = tail call float @llvm.nvvm.fabs.f(float %16) #4, !dbg !22
  %.06.i = select i1 %.not18.i, float %33, float %32, !dbg !22
  %34 = fcmp ult float %.06.i, 1.056150e+05, !dbg !22
  br i1 %34, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !22

__nv_isinff.exit.i.i.i:                           ; preds = %2
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not19.i = icmp eq i32 %35, 0, !dbg !22
  %.07.i = select i1 %.not19.i, float %33, float %32, !dbg !22
  %36 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !22
  br i1 %36, label %__nv_fmul_rn.exit.i.i.i, label %40, !dbg !22

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not27.i = icmp eq i32 %37, 0, !dbg !22
  %38 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %16, float 0.000000e+00) #4, !dbg !22
  %39 = tail call float @llvm.nvvm.mul.rn.f(float %16, float 0.000000e+00) #4, !dbg !22
  %.08.i = select i1 %.not27.i, float %39, float %38, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !22

40:                                               ; preds = %__nv_isinff.exit.i.i.i
  %41 = bitcast float %16 to i32, !dbg !22
  %42 = lshr i32 %41, 23, !dbg !22
  %43 = and i32 %42, 224, !dbg !22
  %44 = add nsw i32 %43, -128, !dbg !22
  %45 = shl i32 %41, 8, !dbg !22
  %46 = or i32 %45, -2147483648, !dbg !22
  %47 = lshr exact i32 %44, 5, !dbg !22
  br label %48, !dbg !22

48:                                               ; preds = %40, %48
  %indvars.iv = phi i64 [ 0, %40 ], [ %indvars.iv.next, %48 ]
  %hi.i.i.i.0.i54 = phi i32 [ 0, %40 ], [ %53, %48 ]
  %49 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !22
  %50 = load i32, ptr addrspace(1) %49, align 4, !dbg !22
  %51 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %50, i32 %46, i32 %hi.i.i.i.0.i54) #5, !dbg !22, !srcloc !23
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !22
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !22
  %54 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !22
  store i32 %52, ptr %54, align 4, !dbg !22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !22
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !22
  br i1 %exitcond.not, label %55, label %48, !dbg !22, !llvm.loop !24

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !22
  store i32 %53, ptr %56, align 4, !dbg !22
  %57 = and i32 %42, 31, !dbg !22
  %58 = sub nsw i32 6, %47, !dbg !22
  %59 = sext i32 %58 to i64, !dbg !22
  %60 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %59, !dbg !22
  %61 = load i32, ptr %60, align 4, !dbg !22
  %62 = sub nsw i32 5, %47, !dbg !22
  %63 = sext i32 %62 to i64, !dbg !22
  %64 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %63, !dbg !22
  %65 = load i32, ptr %64, align 4, !dbg !22
  %.not20.i = icmp eq i32 %57, 0, !dbg !22
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %66, !dbg !22

66:                                               ; preds = %55
  %67 = sub nsw i32 4, %47, !dbg !22
  %68 = sub nuw nsw i32 32, %57, !dbg !22
  %69 = shl i32 %61, %57, !dbg !22
  %70 = lshr i32 %65, %68, !dbg !22
  %71 = add i32 %70, %69, !dbg !22
  %72 = shl i32 %65, %57, !dbg !22
  %73 = sext i32 %67 to i64, !dbg !22
  %74 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %73, !dbg !22
  %75 = load i32, ptr %74, align 4, !dbg !22
  %76 = lshr i32 %75, %68, !dbg !22
  %77 = add i32 %76, %72, !dbg !22
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !22

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %66, %55
  %hi.i.i.i.1.i = phi i32 [ %71, %66 ], [ %61, %55 ], !dbg !22
  %lo.i.i.i.0.i = phi i32 [ %77, %66 ], [ %65, %55 ], !dbg !22
  %78 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !22
  %79 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !22
  %80 = shl i32 %lo.i.i.i.0.i, 2, !dbg !22
  %81 = lshr i32 %79, 31, !dbg !22
  %82 = add nuw nsw i32 %81, %78, !dbg !22
  %83 = sub nsw i32 0, %82, !dbg !22
  %.not2123.i = icmp slt i32 %41, 0, !dbg !22
  %spec.select.i = select i1 %.not2123.i, i32 %83, i32 %82, !dbg !22
  %84 = xor i32 %79, %41, !dbg !22
  %.lobit.i = ashr i32 %79, 31, !dbg !22
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %79, !dbg !22
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %80, !dbg !22
  %85 = zext i32 %hi.i.i.i.2.i to i64, !dbg !22
  %86 = shl nuw i64 %85, 32, !dbg !22
  %87 = zext i32 %lo.i.i.i.1.i to i64, !dbg !22
  %88 = or disjoint i64 %86, %87, !dbg !22
  %89 = sitofp i64 %88 to double, !dbg !22
  %90 = fmul double %89, 0x3BF921FB54442D19, !dbg !22
  %91 = fptrunc double %90 to float, !dbg !22
  %92 = fneg float %91, !dbg !22
  %.not2526.i = icmp slt i32 %84, 0, !dbg !22
  %r.i.i.i.0.i = select i1 %.not2526.i, float %92, float %91, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !22

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %2
  %i.i.1.i = phi i32 [ %.01.i, %2 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !22
  %t.i.i.1.i = phi float [ %.04.i, %2 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !22
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not28.i = icmp eq i32 %93, 0, !dbg !22
  %94 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !22
  %95 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !22
  %.011.i = select i1 %.not28.i, float %95, float %94, !dbg !22
  %96 = and i32 %i.i.1.i, 1, !dbg !22
  %.not29.i = icmp eq i32 %96, 0, !dbg !22
  %97 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !22
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not30.i = icmp eq i32 %98, 0, !dbg !22
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %97, float 0.000000e+00) #4, !dbg !22
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %97, float 0.000000e+00) #4, !dbg !22
  %.012.i = select i1 %.not30.i, float %100, float %99, !dbg !22
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !22

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not31.i = icmp eq i32 %101, 0, !dbg !22
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !22
  %103 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !22
  %.013.i = select i1 %.not31.i, float %103, float %102, !dbg !22
  br label %__internal_fmad.exit2.i.i.i, !dbg !22

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %104 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !22
  %105 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !22
  %106 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !22
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not32.i = icmp eq i32 %107, 0, !dbg !22
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float %.011.i, float %105) #4, !dbg !22
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %106, float %.011.i, float %105) #4, !dbg !22
  %.010.i = select i1 %.not32.i, float %109, float %108, !dbg !22
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not33.i = icmp eq i32 %110, 0, !dbg !22
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %104) #4, !dbg !22
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %104) #4, !dbg !22
  %.09.i = select i1 %.not33.i, float %112, float %111, !dbg !22
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not34.i = icmp eq i32 %113, 0, !dbg !22
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %97) #4, !dbg !22
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %97) #4, !dbg !22
  %.05.i = select i1 %.not34.i, float %115, float %114, !dbg !22
  %116 = and i32 %i.i.1.i, 2, !dbg !22
  %.not35.i = icmp eq i32 %116, 0, !dbg !22
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !22

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !22
  %.not36.i = icmp eq i32 %117, 0, !dbg !22
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !22
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !22
  %.0.i = select i1 %.not36.i, float %119, float %118, !dbg !22
  br label %__nv_sinf.exit, !dbg !22

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !22
  %120 = add nsw i32 %.decomposed, -2, !dbg !26
  %121 = sitofp i32 %120 to float, !dbg !27
  %122 = fmul float %121, 0xC0226BB1C0000000, !dbg !28
  %123 = fmul float %122, 0x3FF7154760000000, !dbg !29
  %124 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %123) #4, !dbg !29
  %125 = fmul float %124, %15, !dbg !30
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !31
  %126 = fmul float %125, 0x3FE45F3060000000, !dbg !31
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not.i2 = icmp eq i32 %127, 0, !dbg !31
  %128 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %126) #4, !dbg !31
  %129 = tail call i32 @llvm.nvvm.f2i.rn(float %126) #4, !dbg !31
  %.01.i3 = select i1 %.not.i2, i32 %129, i32 %128, !dbg !31
  %130 = sitofp i32 %.01.i3 to float, !dbg !31
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not15.i4 = icmp eq i32 %131, 0, !dbg !31
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float 0xBFF921FB40000000, float %125) #4, !dbg !31
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float 0xBFF921FB40000000, float %125) #4, !dbg !31
  %.02.i5 = select i1 %.not15.i4, float %133, float %132, !dbg !31
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not16.i6 = icmp eq i32 %134, 0, !dbg !31
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !31
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %130, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !31
  %.03.i7 = select i1 %.not16.i6, float %136, float %135, !dbg !31
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not17.i8 = icmp eq i32 %137, 0, !dbg !31
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !31
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %130, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !31
  %.04.i9 = select i1 %.not17.i8, float %139, float %138, !dbg !31
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not18.i10 = icmp eq i32 %140, 0, !dbg !31
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #4, !dbg !31
  %142 = tail call float @llvm.nvvm.fabs.f(float %125) #4, !dbg !31
  %.06.i11 = select i1 %.not18.i10, float %142, float %141, !dbg !31
  %143 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !31
  br i1 %143, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !31

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not19.i13 = icmp eq i32 %144, 0, !dbg !31
  %.07.i14 = select i1 %.not19.i13, float %142, float %141, !dbg !31
  %145 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !31
  br i1 %145, label %__nv_fmul_rn.exit.i.i.i51, label %149, !dbg !31

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not27.i52 = icmp eq i32 %146, 0, !dbg !31
  %147 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %125, float 0.000000e+00) #4, !dbg !31
  %148 = tail call float @llvm.nvvm.mul.rn.f(float %125, float 0.000000e+00) #4, !dbg !31
  %.08.i53 = select i1 %.not27.i52, float %148, float %147, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !31

149:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %150 = bitcast float %125 to i32, !dbg !31
  %151 = lshr i32 %150, 23, !dbg !31
  %152 = and i32 %151, 224, !dbg !31
  %153 = add nsw i32 %152, -128, !dbg !31
  %154 = shl i32 %150, 8, !dbg !31
  %155 = or i32 %154, -2147483648, !dbg !31
  %156 = lshr exact i32 %153, 5, !dbg !31
  br label %157, !dbg !31

157:                                              ; preds = %149, %157
  %indvars.iv61 = phi i64 [ 0, %149 ], [ %indvars.iv.next62, %157 ]
  %hi.i.i.i.0.i1556 = phi i32 [ 0, %149 ], [ %162, %157 ]
  %158 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv61, !dbg !31
  %159 = load i32, ptr addrspace(1) %158, align 4, !dbg !31
  %160 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %159, i32 %155, i32 %hi.i.i.i.0.i1556) #5, !dbg !31, !srcloc !23
  %161 = extractvalue { i32, i32 } %160, 0, !dbg !31
  %162 = extractvalue { i32, i32 } %160, 1, !dbg !31
  %163 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv61, !dbg !31
  store i32 %161, ptr %163, align 4, !dbg !31
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !31
  %exitcond63.not = icmp eq i64 %indvars.iv.next62, 6, !dbg !31
  br i1 %exitcond63.not, label %164, label %157, !dbg !31, !llvm.loop !32

164:                                              ; preds = %157
  %165 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !31
  store i32 %162, ptr %165, align 4, !dbg !31
  %166 = and i32 %151, 31, !dbg !31
  %167 = sub nsw i32 6, %156, !dbg !31
  %168 = sext i32 %167 to i64, !dbg !31
  %169 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %168, !dbg !31
  %170 = load i32, ptr %169, align 4, !dbg !31
  %171 = sub nsw i32 5, %156, !dbg !31
  %172 = sext i32 %171 to i64, !dbg !31
  %173 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %172, !dbg !31
  %174 = load i32, ptr %173, align 4, !dbg !31
  %.not20.i17 = icmp eq i32 %166, 0, !dbg !31
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %175, !dbg !31

175:                                              ; preds = %164
  %176 = sub nsw i32 4, %156, !dbg !31
  %177 = sub nuw nsw i32 32, %166, !dbg !31
  %178 = shl i32 %170, %166, !dbg !31
  %179 = lshr i32 %174, %177, !dbg !31
  %180 = add i32 %179, %178, !dbg !31
  %181 = shl i32 %174, %166, !dbg !31
  %182 = sext i32 %176 to i64, !dbg !31
  %183 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %182, !dbg !31
  %184 = load i32, ptr %183, align 4, !dbg !31
  %185 = lshr i32 %184, %177, !dbg !31
  %186 = add i32 %185, %181, !dbg !31
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !31

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %175, %164
  %hi.i.i.i.1.i19 = phi i32 [ %180, %175 ], [ %170, %164 ], !dbg !31
  %lo.i.i.i.0.i20 = phi i32 [ %186, %175 ], [ %174, %164 ], !dbg !31
  %187 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !31
  %188 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !31
  %189 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !31
  %190 = lshr i32 %188, 31, !dbg !31
  %191 = add nuw nsw i32 %190, %187, !dbg !31
  %192 = sub nsw i32 0, %191, !dbg !31
  %.not2123.i21 = icmp slt i32 %150, 0, !dbg !31
  %spec.select.i22 = select i1 %.not2123.i21, i32 %192, i32 %191, !dbg !31
  %193 = xor i32 %188, %150, !dbg !31
  %.lobit.i23 = ashr i32 %188, 31, !dbg !31
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %188, !dbg !31
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %189, !dbg !31
  %194 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !31
  %195 = shl nuw i64 %194, 32, !dbg !31
  %196 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !31
  %197 = or disjoint i64 %195, %196, !dbg !31
  %198 = sitofp i64 %197 to double, !dbg !31
  %199 = fmul double %198, 0x3BF921FB54442D19, !dbg !31
  %200 = fptrunc double %199 to float, !dbg !31
  %201 = fneg float %200, !dbg !31
  %.not2526.i27 = icmp slt i32 %193, 0, !dbg !31
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %201, float %200, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !31

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !31
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !31
  %202 = add i32 %i.i.1.i30, 1, !dbg !31
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not28.i32 = icmp eq i32 %203, 0, !dbg !31
  %204 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !31
  %205 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !31
  %.011.i33 = select i1 %.not28.i32, float %205, float %204, !dbg !31
  %206 = and i32 %i.i.1.i30, 1, !dbg !31
  %.not29.not.i = icmp eq i32 %206, 0, !dbg !31
  %207 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !31
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not30.i34 = icmp eq i32 %208, 0, !dbg !31
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %207, float 0.000000e+00) #4, !dbg !31
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %207, float 0.000000e+00) #4, !dbg !31
  %.012.i35 = select i1 %.not30.i34, float %210, float %209, !dbg !31
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !31

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not31.i49 = icmp eq i32 %211, 0, !dbg !31
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !31
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !31
  %.013.i50 = select i1 %.not31.i49, float %213, float %212, !dbg !31
  br label %__internal_fmad.exit2.i.i.i36, !dbg !31

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %214 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %215 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %216 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not32.i37 = icmp eq i32 %217, 0, !dbg !31
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %.011.i33, float %215) #4, !dbg !31
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %.011.i33, float %215) #4, !dbg !31
  %.010.i38 = select i1 %.not32.i37, float %219, float %218, !dbg !31
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not33.i39 = icmp eq i32 %220, 0, !dbg !31
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %214) #4, !dbg !31
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %214) #4, !dbg !31
  %.09.i40 = select i1 %.not33.i39, float %222, float %221, !dbg !31
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not34.i41 = icmp eq i32 %223, 0, !dbg !31
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %207) #4, !dbg !31
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %207) #4, !dbg !31
  %.05.i42 = select i1 %.not34.i41, float %225, float %224, !dbg !31
  %226 = and i32 %202, 2, !dbg !31
  %.not35.i43 = icmp eq i32 %226, 0, !dbg !31
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !31

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !31
  %.not36.i45 = icmp eq i32 %227, 0, !dbg !31
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !31
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !31
  %.0.i46 = select i1 %.not36.i45, float %229, float %228, !dbg !31
  br label %__nv_cosf.exit, !dbg !31

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !31
  %230 = icmp slt i32 %.decomposed, 2, !dbg !33
  %231 = icmp slt i32 %7, 16, !dbg !34
  %232 = and i32 %5, 16, !dbg !12
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !31
  %233 = select i1 %230, float %z.i.i.0.i, float %z.i.i.0.i47, !dbg !35
  %234 = sext i32 %7 to i64, !dbg !36
  %235 = getelementptr float, ptr addrspace(1) %0, i64 %234, !dbg !36
  %236 = icmp eq i32 %232, 0, !dbg !37
  %237 = bitcast float %233 to i32, !dbg !37
  %238 = and i1 %236, %231, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %237, ptr addrspace(1) %235, i1 %238) #4, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpiqruswf4x7355c6c6xublm7b7tgupwqbxu2oqpkdxn54lfkac3.py", directory: "inductor_cache/pi")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 19, scope: !7)
!17 = !DILocation(line: 39, column: 20, scope: !7)
!18 = !DILocation(line: 40, column: 24, scope: !7)
!19 = !DILocation(line: 41, column: 16, scope: !7)
!20 = !DILocation(line: 42, column: 21, scope: !7)
!21 = !DILocation(line: 43, column: 20, scope: !7)
!22 = !DILocation(line: 44, column: 24, scope: !7)
!23 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.count", i32 1}
!26 = !DILocation(line: 50, column: 19, scope: !7)
!27 = !DILocation(line: 51, column: 21, scope: !7)
!28 = !DILocation(line: 57, column: 20, scope: !7)
!29 = !DILocation(line: 58, column: 24, scope: !7)
!30 = !DILocation(line: 61, column: 20, scope: !7)
!31 = !DILocation(line: 62, column: 24, scope: !7)
!32 = distinct !{!32, !25}
!33 = !DILocation(line: 31, column: 18, scope: !7)
!34 = !DILocation(line: 23, column: 21, scope: !7)
!35 = !DILocation(line: 0, scope: !7)
!36 = !DILocation(line: 66, column: 25, scope: !7)
!37 = !DILocation(line: 66, column: 37, scope: !7)
!38 = !DILocation(line: 66, column: 4, scope: !7)
