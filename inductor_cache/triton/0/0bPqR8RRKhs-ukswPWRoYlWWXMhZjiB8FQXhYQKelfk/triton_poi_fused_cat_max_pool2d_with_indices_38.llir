; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_max_pool2d_with_indices_38(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 2048, !dbg !14
  %12 = srem i32 %10, 128, !dbg !15
  %13 = sext i32 %10 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = add i32 %10, -768, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 false, i32 -8388608, i1 false) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = add i32 %10, -640, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 false, i32 -8388608, i1 false) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = fcmp ogt float %25, %20, !dbg !24
  %27 = fcmp uno float %25, 0.000000e+00, !dbg !28
  %28 = or i1 %26, %27, !dbg !29
  %29 = select i1 %28, float %25, float %20, !dbg !30
  %30 = add i32 %10, -512, !dbg !31
  %31 = sext i32 %30 to i64, !dbg !32
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !32
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 false, i32 -8388608, i1 false) #1, !dbg !33
  %34 = bitcast i32 %33 to float, !dbg !33
  %35 = fcmp olt float %29, %34, !dbg !34
  %36 = fcmp uno float %34, 0.000000e+00, !dbg !36
  %37 = or i1 %36, %35, !dbg !37
  %38 = select i1 %37, float %34, float %29, !dbg !38
  %39 = add i32 %10, -384, !dbg !39
  %40 = sext i32 %39 to i64, !dbg !40
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !40
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 false, i32 -8388608, i1 false) #1, !dbg !41
  %43 = bitcast i32 %42 to float, !dbg !41
  %44 = fcmp olt float %38, %43, !dbg !42
  %45 = fcmp uno float %43, 0.000000e+00, !dbg !44
  %46 = or i1 %45, %44, !dbg !45
  %47 = select i1 %46, float %43, float %38, !dbg !46
  %48 = add i32 %10, -256, !dbg !47
  %49 = sext i32 %48 to i64, !dbg !48
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !48
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 false, i32 -8388608, i1 false) #1, !dbg !49
  %52 = bitcast i32 %51 to float, !dbg !49
  %53 = fcmp olt float %47, %52, !dbg !50
  %54 = fcmp uno float %52, 0.000000e+00, !dbg !52
  %55 = or i1 %54, %53, !dbg !53
  %56 = select i1 %55, float %52, float %47, !dbg !54
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 false, i32 -8388608, i1 false) #1, !dbg !55
  %58 = bitcast i32 %57 to float, !dbg !55
  %59 = fcmp olt float %56, %58, !dbg !56
  %60 = fcmp uno float %58, 0.000000e+00, !dbg !58
  %61 = or i1 %60, %59, !dbg !59
  %62 = select i1 %61, float %58, float %56, !dbg !60
  %63 = add i32 %10, -128, !dbg !61
  %64 = sext i32 %63 to i64, !dbg !62
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !62
  %66 = add i32 %10, 128, !dbg !63
  %67 = sext i32 %66 to i64, !dbg !64
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !64
  %69 = add i32 %10, 256, !dbg !65
  %70 = sext i32 %69 to i64, !dbg !66
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !66
  %72 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !67
  %73 = shufflevector <2 x i32> %72, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !67
  %74 = sdiv <2 x i32> %73, <i32 256, i32 128>, !dbg !67
  %75 = srem <2 x i32> %74, splat (i32 2), !dbg !68
  %76 = extractelement <2 x i32> %75, i64 1, !dbg !69
  %77 = icmp sgt i32 %76, 0, !dbg !70
  %78 = icmp sgt i32 %76, -1, !dbg !71
  %79 = icmp ugt i32 %76, -3, !dbg !72
  %80 = extractelement <2 x i32> %75, i64 0, !dbg !69
  %81 = icmp sgt i32 %80, 0, !dbg !73
  %82 = and i1 %81, %77, !dbg !74
  %83 = and i1 %11, %82, !dbg !75
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %83, i32 -8388608, i1 %83) #1, !dbg !76
  %85 = bitcast i32 %84 to float, !dbg !76
  %86 = fcmp olt float %62, %85, !dbg !77
  %87 = fcmp uno float %85, 0.000000e+00, !dbg !79
  %88 = or i1 %87, %86, !dbg !80
  %89 = select i1 %88, float %85, float %62, !dbg !81
  %90 = and i1 %81, %78, !dbg !82
  %91 = and i1 %11, %90, !dbg !83
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %91, i32 -8388608, i1 %91) #1, !dbg !84
  %93 = bitcast i32 %92 to float, !dbg !84
  %94 = fcmp olt float %89, %93, !dbg !85
  %95 = fcmp uno float %93, 0.000000e+00, !dbg !87
  %96 = or i1 %95, %94, !dbg !88
  %97 = select i1 %96, float %93, float %89, !dbg !89
  %98 = icmp slt <2 x i32> %75, splat (i32 1), !dbg !90
  %99 = extractelement <2 x i1> %98, i64 1, !dbg !91
  %100 = and i1 %81, %99, !dbg !91
  %101 = and i1 %11, %100, !dbg !92
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %101, i32 -8388608, i1 %101) #1, !dbg !93
  %103 = bitcast i32 %102 to float, !dbg !93
  %104 = fcmp olt float %97, %103, !dbg !94
  %105 = fcmp uno float %103, 0.000000e+00, !dbg !96
  %106 = or i1 %105, %104, !dbg !97
  %107 = select i1 %106, float %103, float %97, !dbg !98
  %108 = and i1 %81, %79, !dbg !99
  %109 = and i1 %11, %108, !dbg !100
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %109, i32 -8388608, i1 %109) #1, !dbg !101
  %111 = bitcast i32 %110 to float, !dbg !101
  %112 = fcmp olt float %107, %111, !dbg !102
  %113 = fcmp uno float %111, 0.000000e+00, !dbg !104
  %114 = or i1 %113, %112, !dbg !105
  %115 = select i1 %114, float %111, float %107, !dbg !106
  %116 = icmp sgt i32 %80, -1, !dbg !107
  %117 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 false, i32 -8388608, i1 false) #1, !dbg !108
  %118 = bitcast i32 %117 to float, !dbg !108
  %119 = fcmp olt float %115, %118, !dbg !109
  %120 = fcmp uno float %118, 0.000000e+00, !dbg !111
  %121 = or i1 %120, %119, !dbg !112
  %122 = select i1 %121, float %118, float %115, !dbg !113
  %123 = and i1 %116, %77, !dbg !114
  %124 = and i1 %11, %123, !dbg !115
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %124, i32 -8388608, i1 %124) #1, !dbg !116
  %126 = bitcast i32 %125 to float, !dbg !116
  %127 = fcmp olt float %122, %126, !dbg !117
  %128 = fcmp uno float %126, 0.000000e+00, !dbg !119
  %129 = or i1 %128, %127, !dbg !120
  %130 = select i1 %129, float %126, float %122, !dbg !121
  %131 = or i32 %80, %76, !dbg !122
  %132 = icmp sgt i32 %131, -1, !dbg !122
  %133 = and i1 %11, %132, !dbg !123
  %134 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %133, i32 -8388608, i1 %133) #1, !dbg !124
  %135 = bitcast i32 %134 to float, !dbg !124
  %136 = fcmp olt float %130, %135, !dbg !125
  %137 = fcmp uno float %135, 0.000000e+00, !dbg !127
  %138 = or i1 %137, %136, !dbg !128
  %139 = select i1 %138, float %135, float %130, !dbg !129
  %140 = and i1 %116, %99, !dbg !130
  %141 = and i1 %11, %140, !dbg !131
  %142 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %141, i32 -8388608, i1 %141) #1, !dbg !132
  %143 = bitcast i32 %142 to float, !dbg !132
  %144 = fcmp olt float %139, %143, !dbg !133
  %145 = fcmp uno float %143, 0.000000e+00, !dbg !135
  %146 = or i1 %145, %144, !dbg !136
  %147 = select i1 %146, float %143, float %139, !dbg !137
  %148 = and i1 %116, %79, !dbg !138
  %149 = and i1 %11, %148, !dbg !139
  %150 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %149, i32 -8388608, i1 %149) #1, !dbg !140
  %151 = bitcast i32 %150 to float, !dbg !140
  %152 = fcmp olt float %147, %151, !dbg !141
  %153 = fcmp uno float %151, 0.000000e+00, !dbg !143
  %154 = or i1 %153, %152, !dbg !144
  %155 = select i1 %154, float %151, float %147, !dbg !145
  %156 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 false, i32 -8388608, i1 false) #1, !dbg !146
  %157 = bitcast i32 %156 to float, !dbg !146
  %158 = fcmp olt float %155, %157, !dbg !147
  %159 = fcmp uno float %157, 0.000000e+00, !dbg !149
  %160 = or i1 %159, %158, !dbg !150
  %161 = select i1 %160, float %157, float %155, !dbg !151
  %162 = extractelement <2 x i1> %98, i64 0, !dbg !152
  %163 = and i1 %162, %77, !dbg !152
  %164 = and i1 %11, %163, !dbg !153
  %165 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %164, i32 -8388608, i1 %164) #1, !dbg !154
  %166 = bitcast i32 %165 to float, !dbg !154
  %167 = fcmp olt float %161, %166, !dbg !155
  %168 = fcmp uno float %166, 0.000000e+00, !dbg !157
  %169 = or i1 %168, %167, !dbg !158
  %170 = select i1 %169, float %166, float %161, !dbg !159
  %171 = and i1 %162, %78, !dbg !160
  %172 = and i1 %11, %171, !dbg !161
  %173 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %172, i32 -8388608, i1 %172) #1, !dbg !162
  %174 = bitcast i32 %173 to float, !dbg !162
  %175 = fcmp olt float %170, %174, !dbg !163
  %176 = fcmp uno float %174, 0.000000e+00, !dbg !165
  %177 = or i1 %176, %175, !dbg !166
  %178 = select i1 %177, float %174, float %170, !dbg !167
  %179 = and i1 %162, %99, !dbg !168
  %180 = add i32 %10, 384, !dbg !169
  %181 = sext i32 %180 to i64, !dbg !170
  %182 = getelementptr float, ptr addrspace(1) %0, i64 %181, !dbg !170
  %183 = and i1 %11, %179, !dbg !171
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %182, i1 %183, i32 -8388608, i1 %183) #1, !dbg !172
  %185 = bitcast i32 %184 to float, !dbg !172
  %186 = fcmp olt float %178, %185, !dbg !173
  %187 = fcmp uno float %185, 0.000000e+00, !dbg !175
  %188 = or i1 %187, %186, !dbg !176
  %189 = select i1 %188, float %185, float %178, !dbg !177
  %190 = and i1 %162, %79, !dbg !178
  %191 = add i32 %10, 512, !dbg !179
  %192 = sext i32 %191 to i64, !dbg !180
  %193 = getelementptr float, ptr addrspace(1) %0, i64 %192, !dbg !180
  %194 = and i1 %11, %190, !dbg !181
  %195 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %193, i1 %194, i32 -8388608, i1 %194) #1, !dbg !182
  %196 = bitcast i32 %195 to float, !dbg !182
  %197 = fcmp olt float %189, %196, !dbg !183
  %198 = fcmp uno float %196, 0.000000e+00, !dbg !185
  %199 = or i1 %198, %197, !dbg !186
  %200 = select i1 %199, float %196, float %189, !dbg !187
  %201 = icmp ugt i32 %80, -3, !dbg !188
  %202 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 false, i32 -8388608, i1 false) #1, !dbg !189
  %203 = bitcast i32 %202 to float, !dbg !189
  %204 = fcmp olt float %200, %203, !dbg !190
  %205 = fcmp uno float %203, 0.000000e+00, !dbg !192
  %206 = or i1 %205, %204, !dbg !193
  %207 = select i1 %206, float %203, float %200, !dbg !194
  %208 = and i1 %201, %77, !dbg !195
  %209 = and i1 %11, %208, !dbg !196
  %210 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %182, i1 %209, i32 -8388608, i1 %209) #1, !dbg !197
  %211 = bitcast i32 %210 to float, !dbg !197
  %212 = fcmp olt float %207, %211, !dbg !198
  %213 = fcmp uno float %211, 0.000000e+00, !dbg !200
  %214 = or i1 %213, %212, !dbg !201
  %215 = select i1 %214, float %211, float %207, !dbg !202
  %216 = and i1 %201, %78, !dbg !203
  %217 = and i1 %11, %216, !dbg !204
  %218 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %193, i1 %217, i32 -8388608, i1 %217) #1, !dbg !205
  %219 = bitcast i32 %218 to float, !dbg !205
  %220 = fcmp olt float %215, %219, !dbg !206
  %221 = fcmp uno float %219, 0.000000e+00, !dbg !208
  %222 = or i1 %221, %220, !dbg !209
  %223 = select i1 %222, float %219, float %215, !dbg !210
  %224 = and i1 %201, %99, !dbg !211
  %225 = add i32 %10, 640, !dbg !212
  %226 = sext i32 %225 to i64, !dbg !213
  %227 = getelementptr float, ptr addrspace(1) %0, i64 %226, !dbg !213
  %228 = and i1 %11, %224, !dbg !214
  %229 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %227, i1 %228, i32 -8388608, i1 %228) #1, !dbg !215
  %230 = bitcast i32 %229 to float, !dbg !215
  %231 = fcmp olt float %223, %230, !dbg !216
  %232 = fcmp uno float %230, 0.000000e+00, !dbg !218
  %233 = or i1 %232, %231, !dbg !219
  %234 = select i1 %233, float %230, float %223, !dbg !220
  %235 = and i32 %80, %76, !dbg !69
  %236 = icmp ugt i32 %235, -3, !dbg !69
  %237 = add i32 %10, 768, !dbg !221
  %238 = sext i32 %237 to i64, !dbg !222
  %239 = getelementptr float, ptr addrspace(1) %0, i64 %238, !dbg !222
  %240 = and i1 %11, %236, !dbg !223
  %241 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %239, i1 %240, i32 -8388608, i1 %240) #1, !dbg !224
  %242 = bitcast i32 %241 to float, !dbg !224
  %243 = fcmp olt float %234, %242, !dbg !225
  %244 = fcmp uno float %242, 0.000000e+00, !dbg !227
  %245 = or i1 %244, %243, !dbg !228
  %246 = zext i1 %26 to i8, !dbg !229
  %247 = select i1 %35, i8 2, i8 %246, !dbg !230
  %248 = select i1 %44, i8 3, i8 %247, !dbg !231
  %249 = select i1 %53, i8 4, i8 %248, !dbg !232
  %250 = select i1 %59, i8 5, i8 %249, !dbg !233
  %251 = select i1 %86, i8 6, i8 %250, !dbg !234
  %252 = select i1 %94, i8 7, i8 %251, !dbg !235
  %253 = select i1 %104, i8 8, i8 %252, !dbg !236
  %254 = select i1 %112, i8 9, i8 %253, !dbg !237
  %255 = select i1 %119, i8 10, i8 %254, !dbg !238
  %256 = select i1 %127, i8 11, i8 %255, !dbg !239
  %257 = select i1 %136, i8 12, i8 %256, !dbg !240
  %258 = select i1 %144, i8 13, i8 %257, !dbg !241
  %259 = select i1 %152, i8 14, i8 %258, !dbg !242
  %260 = select i1 %158, i8 15, i8 %259, !dbg !243
  %261 = select i1 %167, i8 16, i8 %260, !dbg !244
  %262 = select i1 %175, i8 17, i8 %261, !dbg !245
  %263 = select i1 %186, i8 18, i8 %262, !dbg !246
  %264 = select i1 %197, i8 19, i8 %263, !dbg !247
  %265 = select i1 %204, i8 20, i8 %264, !dbg !248
  %266 = select i1 %212, i8 21, i8 %265, !dbg !249
  %267 = select i1 %220, i8 22, i8 %266, !dbg !250
  %268 = select i1 %231, i8 23, i8 %267, !dbg !251
  %269 = select i1 %243, i8 24, i8 %268, !dbg !252
  %270 = extractelement <2 x i32> %74, i64 1, !dbg !253
  %271 = shl i32 %270, 9, !dbg !253
  %272 = add i32 %271, %12, !dbg !254
  %273 = sext i32 %272 to i64, !dbg !255
  %274 = getelementptr float, ptr addrspace(1) %1, i64 %273, !dbg !255
  %275 = bitcast float %234 to i32, !dbg !256
  %276 = select i1 %245, i32 %241, i32 %275, !dbg !257
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %276, ptr addrspace(1) %274, i1 %11) #1, !dbg !256
  %277 = getelementptr i8, ptr addrspace(1) %2, i64 %13, !dbg !258
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %269, ptr addrspace(1) %277, i1 %11) #1, !dbg !259
  %278 = getelementptr float, ptr addrspace(1) %3, i64 %273, !dbg !260
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %15, ptr addrspace(1) %278, i1 %11) #1, !dbg !261
  ret void, !dbg !262
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgpiw7ah7suunuvu3d4rybrxd4xnl5yasgcrtowxih5idhoxi5o2.py", directory: "inductor_cache/gp")
!4 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_38, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_max_pool2d_with_indices_38, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_max_pool2d_with_indices_38", linkageName: "triton_poi_fused_cat_max_pool2d_with_indices_38", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 29, column: 32, scope: !7)
!17 = !DILocation(line: 29, column: 37, scope: !7)
!18 = !DILocation(line: 41, column: 40, scope: !7)
!19 = !DILocation(line: 41, column: 31, scope: !7)
!20 = !DILocation(line: 41, column: 45, scope: !7)
!21 = !DILocation(line: 47, column: 40, scope: !7)
!22 = !DILocation(line: 47, column: 31, scope: !7)
!23 = !DILocation(line: 47, column: 45, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 48, column: 42, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !27)
!30 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !27)
!31 = !DILocation(line: 54, column: 40, scope: !7)
!32 = !DILocation(line: 54, column: 31, scope: !7)
!33 = !DILocation(line: 54, column: 45, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !35)
!35 = !DILocation(line: 55, column: 42, scope: !7)
!36 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !35)
!37 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !35)
!38 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !35)
!39 = !DILocation(line: 61, column: 40, scope: !7)
!40 = !DILocation(line: 61, column: 31, scope: !7)
!41 = !DILocation(line: 61, column: 45, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !43)
!43 = !DILocation(line: 62, column: 42, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !43)
!46 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !43)
!47 = !DILocation(line: 68, column: 40, scope: !7)
!48 = !DILocation(line: 68, column: 31, scope: !7)
!49 = !DILocation(line: 68, column: 45, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !51)
!51 = !DILocation(line: 69, column: 42, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !51)
!53 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !51)
!54 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !51)
!55 = !DILocation(line: 75, column: 45, scope: !7)
!56 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !57)
!57 = !DILocation(line: 76, column: 42, scope: !7)
!58 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !57)
!59 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !57)
!60 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !57)
!61 = !DILocation(line: 84, column: 40, scope: !7)
!62 = !DILocation(line: 84, column: 31, scope: !7)
!63 = !DILocation(line: 103, column: 37, scope: !7)
!64 = !DILocation(line: 103, column: 31, scope: !7)
!65 = !DILocation(line: 106, column: 37, scope: !7)
!66 = !DILocation(line: 106, column: 31, scope: !7)
!67 = !DILocation(line: 24, column: 21, scope: !7)
!68 = !DILocation(line: 24, column: 28, scope: !7)
!69 = !DILocation(line: 143, column: 22, scope: !7)
!70 = !DILocation(line: 43, column: 21, scope: !7)
!71 = !DILocation(line: 50, column: 21, scope: !7)
!72 = !DILocation(line: 65, column: 20, scope: !7)
!73 = !DILocation(line: 71, column: 21, scope: !7)
!74 = !DILocation(line: 77, column: 20, scope: !7)
!75 = !DILocation(line: 78, column: 53, scope: !7)
!76 = !DILocation(line: 78, column: 45, scope: !7)
!77 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !78)
!78 = !DILocation(line: 79, column: 42, scope: !7)
!79 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !78)
!80 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !78)
!81 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !78)
!82 = !DILocation(line: 80, column: 20, scope: !7)
!83 = !DILocation(line: 81, column: 53, scope: !7)
!84 = !DILocation(line: 81, column: 45, scope: !7)
!85 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !86)
!86 = !DILocation(line: 82, column: 42, scope: !7)
!87 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !86)
!88 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !86)
!89 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !86)
!90 = !DILocation(line: 110, column: 20, scope: !7)
!91 = !DILocation(line: 83, column: 20, scope: !7)
!92 = !DILocation(line: 84, column: 53, scope: !7)
!93 = !DILocation(line: 84, column: 45, scope: !7)
!94 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !95)
!95 = !DILocation(line: 85, column: 42, scope: !7)
!96 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !95)
!97 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !95)
!98 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !95)
!99 = !DILocation(line: 86, column: 20, scope: !7)
!100 = !DILocation(line: 87, column: 44, scope: !7)
!101 = !DILocation(line: 87, column: 36, scope: !7)
!102 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !103)
!103 = !DILocation(line: 88, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !103)
!105 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !103)
!106 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !103)
!107 = !DILocation(line: 90, column: 21, scope: !7)
!108 = !DILocation(line: 94, column: 45, scope: !7)
!109 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !110)
!110 = !DILocation(line: 95, column: 42, scope: !7)
!111 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !110)
!114 = !DILocation(line: 96, column: 20, scope: !7)
!115 = !DILocation(line: 97, column: 53, scope: !7)
!116 = !DILocation(line: 97, column: 45, scope: !7)
!117 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !118)
!118 = !DILocation(line: 98, column: 42, scope: !7)
!119 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !118)
!120 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !118)
!121 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !118)
!122 = !DILocation(line: 99, column: 20, scope: !7)
!123 = !DILocation(line: 100, column: 44, scope: !7)
!124 = !DILocation(line: 100, column: 36, scope: !7)
!125 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !126)
!126 = !DILocation(line: 101, column: 42, scope: !7)
!127 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !126)
!128 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !126)
!129 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !126)
!130 = !DILocation(line: 102, column: 20, scope: !7)
!131 = !DILocation(line: 103, column: 50, scope: !7)
!132 = !DILocation(line: 103, column: 42, scope: !7)
!133 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !134)
!134 = !DILocation(line: 104, column: 42, scope: !7)
!135 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !134)
!136 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !134)
!137 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !134)
!138 = !DILocation(line: 105, column: 20, scope: !7)
!139 = !DILocation(line: 106, column: 50, scope: !7)
!140 = !DILocation(line: 106, column: 42, scope: !7)
!141 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !142)
!142 = !DILocation(line: 107, column: 42, scope: !7)
!143 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !142)
!144 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !142)
!145 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !142)
!146 = !DILocation(line: 113, column: 36, scope: !7)
!147 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !148)
!148 = !DILocation(line: 114, column: 42, scope: !7)
!149 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !148)
!150 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !148)
!151 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !148)
!152 = !DILocation(line: 115, column: 20, scope: !7)
!153 = !DILocation(line: 116, column: 50, scope: !7)
!154 = !DILocation(line: 116, column: 42, scope: !7)
!155 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !156)
!156 = !DILocation(line: 117, column: 42, scope: !7)
!157 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !156)
!158 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !156)
!159 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !156)
!160 = !DILocation(line: 118, column: 20, scope: !7)
!161 = !DILocation(line: 119, column: 50, scope: !7)
!162 = !DILocation(line: 119, column: 42, scope: !7)
!163 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !164)
!164 = !DILocation(line: 120, column: 42, scope: !7)
!165 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !164)
!166 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !164)
!167 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !164)
!168 = !DILocation(line: 121, column: 20, scope: !7)
!169 = !DILocation(line: 122, column: 37, scope: !7)
!170 = !DILocation(line: 122, column: 31, scope: !7)
!171 = !DILocation(line: 122, column: 50, scope: !7)
!172 = !DILocation(line: 122, column: 42, scope: !7)
!173 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !174)
!174 = !DILocation(line: 123, column: 42, scope: !7)
!175 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !174)
!176 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !174)
!177 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !174)
!178 = !DILocation(line: 124, column: 20, scope: !7)
!179 = !DILocation(line: 125, column: 37, scope: !7)
!180 = !DILocation(line: 125, column: 31, scope: !7)
!181 = !DILocation(line: 125, column: 50, scope: !7)
!182 = !DILocation(line: 125, column: 42, scope: !7)
!183 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !184)
!184 = !DILocation(line: 126, column: 42, scope: !7)
!185 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !184)
!186 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !184)
!187 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !184)
!188 = !DILocation(line: 129, column: 20, scope: !7)
!189 = !DILocation(line: 132, column: 43, scope: !7)
!190 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !191)
!191 = !DILocation(line: 133, column: 44, scope: !7)
!192 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !191)
!193 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !191)
!194 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !191)
!195 = !DILocation(line: 134, column: 22, scope: !7)
!196 = !DILocation(line: 135, column: 52, scope: !7)
!197 = !DILocation(line: 135, column: 43, scope: !7)
!198 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !199)
!199 = !DILocation(line: 136, column: 44, scope: !7)
!200 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !199)
!201 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !199)
!202 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !199)
!203 = !DILocation(line: 137, column: 22, scope: !7)
!204 = !DILocation(line: 138, column: 52, scope: !7)
!205 = !DILocation(line: 138, column: 43, scope: !7)
!206 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !207)
!207 = !DILocation(line: 139, column: 44, scope: !7)
!208 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !207)
!209 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !207)
!210 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !207)
!211 = !DILocation(line: 140, column: 22, scope: !7)
!212 = !DILocation(line: 141, column: 38, scope: !7)
!213 = !DILocation(line: 141, column: 32, scope: !7)
!214 = !DILocation(line: 141, column: 52, scope: !7)
!215 = !DILocation(line: 141, column: 43, scope: !7)
!216 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !217)
!217 = !DILocation(line: 142, column: 44, scope: !7)
!218 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !217)
!219 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !217)
!220 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !217)
!221 = !DILocation(line: 144, column: 38, scope: !7)
!222 = !DILocation(line: 144, column: 32, scope: !7)
!223 = !DILocation(line: 144, column: 52, scope: !7)
!224 = !DILocation(line: 144, column: 43, scope: !7)
!225 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !226)
!226 = !DILocation(line: 145, column: 44, scope: !7)
!227 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !226)
!228 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !226)
!229 = !DILocation(line: 149, column: 38, scope: !7)
!230 = !DILocation(line: 152, column: 38, scope: !7)
!231 = !DILocation(line: 155, column: 38, scope: !7)
!232 = !DILocation(line: 158, column: 38, scope: !7)
!233 = !DILocation(line: 161, column: 38, scope: !7)
!234 = !DILocation(line: 164, column: 38, scope: !7)
!235 = !DILocation(line: 167, column: 38, scope: !7)
!236 = !DILocation(line: 170, column: 38, scope: !7)
!237 = !DILocation(line: 173, column: 38, scope: !7)
!238 = !DILocation(line: 176, column: 38, scope: !7)
!239 = !DILocation(line: 179, column: 38, scope: !7)
!240 = !DILocation(line: 182, column: 38, scope: !7)
!241 = !DILocation(line: 185, column: 38, scope: !7)
!242 = !DILocation(line: 188, column: 38, scope: !7)
!243 = !DILocation(line: 191, column: 38, scope: !7)
!244 = !DILocation(line: 194, column: 38, scope: !7)
!245 = !DILocation(line: 197, column: 38, scope: !7)
!246 = !DILocation(line: 200, column: 38, scope: !7)
!247 = !DILocation(line: 203, column: 38, scope: !7)
!248 = !DILocation(line: 206, column: 38, scope: !7)
!249 = !DILocation(line: 209, column: 38, scope: !7)
!250 = !DILocation(line: 212, column: 38, scope: !7)
!251 = !DILocation(line: 215, column: 38, scope: !7)
!252 = !DILocation(line: 218, column: 38, scope: !7)
!253 = !DILocation(line: 219, column: 34, scope: !7)
!254 = !DILocation(line: 219, column: 30, scope: !7)
!255 = !DILocation(line: 219, column: 25, scope: !7)
!256 = !DILocation(line: 219, column: 47, scope: !7)
!257 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !226)
!258 = !DILocation(line: 220, column: 25, scope: !7)
!259 = !DILocation(line: 220, column: 38, scope: !7)
!260 = !DILocation(line: 221, column: 25, scope: !7)
!261 = !DILocation(line: 221, column: 47, scope: !7)
!262 = !DILocation(line: 221, column: 4, scope: !7)
