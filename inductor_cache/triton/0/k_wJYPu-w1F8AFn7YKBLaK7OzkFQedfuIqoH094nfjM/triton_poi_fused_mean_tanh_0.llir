; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mean_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 %10) #3, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = add i32 %9, 64, !dbg !17
  %19 = sext i32 %18 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !18
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %10) #3, !dbg !19
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !19
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !19
  %24 = bitcast i32 %22 to float, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = add i32 %9, 128, !dbg !20
  %27 = sext i32 %26 to i64, !dbg !21
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !21
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %10) #3, !dbg !22
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !22
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !22
  %32 = bitcast i32 %30 to float, !dbg !22
  %33 = bitcast i32 %31 to float, !dbg !22
  %34 = add i32 %9, 192, !dbg !23
  %35 = sext i32 %34 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !24
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %10) #3, !dbg !25
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !25
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !25
  %40 = bitcast i32 %38 to float, !dbg !25
  %41 = bitcast i32 %39 to float, !dbg !25
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not.i = icmp eq i32 %42, 0, !dbg !26
  %43 = tail call float @llvm.nvvm.fabs.ftz.f(float %16) #3, !dbg !26
  %44 = tail call float @llvm.nvvm.fabs.f(float %16) #3, !dbg !26
  %.01.i = select i1 %.not.i, float %44, float %43, !dbg !26
  %45 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %45, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %3
  %46 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %47 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %46) #3, !dbg !26
  %48 = fadd float %47, 1.000000e+00, !dbg !26
  %49 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %48) #4, !dbg !26, !srcloc !27
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not6.i = icmp eq i32 %50, 0, !dbg !26
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %49, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %49, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %.03.i = select i1 %.not6.i, float %52, float %51, !dbg !26
  %53 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %53, float 1.000000e+00, float %.03.i, !dbg !26
  %54 = bitcast float %s.0.i to i32, !dbg !26
  %55 = and i32 %14, -2147483648, !dbg !26
  %56 = or i32 %55, %54, !dbg !26
  %57 = bitcast i32 %56 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %3
  %58 = fmul float %16, %16, !dbg !26
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not1.i = icmp eq i32 %59, 0, !dbg !26
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %58, float 0xBFAAC795C0000000) #3, !dbg !26
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %58, float 0xBFAAC795C0000000) #3, !dbg !26
  %.06.i = select i1 %.not1.i, float %61, float %60, !dbg !26
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not2.i = icmp eq i32 %62, 0, !dbg !26
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %58, float 0x3FC10B2820000000) #3, !dbg !26
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %58, float 0x3FC10B2820000000) #3, !dbg !26
  %.05.i = select i1 %.not2.i, float %64, float %63, !dbg !26
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not3.i = icmp eq i32 %65, 0, !dbg !26
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %58, float 0xBFD5553DA0000000) #3, !dbg !26
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %58, float 0xBFD5553DA0000000) #3, !dbg !26
  %.0.i = select i1 %.not3.i, float %67, float %66, !dbg !26
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not4.i = icmp eq i32 %68, 0, !dbg !26
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %58, float 0.000000e+00) #3, !dbg !26
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %58, float 0.000000e+00) #3, !dbg !26
  %.04.i = select i1 %.not4.i, float %70, float %69, !dbg !26
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not5.i = icmp eq i32 %71, 0, !dbg !26
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %16, float %16) #3, !dbg !26
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %16, float %16) #3, !dbg !26
  %.02.i = select i1 %.not5.i, float %73, float %72, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %57, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not.i1 = icmp eq i32 %74, 0, !dbg !26
  %75 = tail call float @llvm.nvvm.fabs.ftz.f(float %17) #3, !dbg !26
  %76 = tail call float @llvm.nvvm.fabs.f(float %17) #3, !dbg !26
  %.01.i2 = select i1 %.not.i1, float %76, float %75, !dbg !26
  %77 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !26
  br i1 %77, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !26

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %78 = fmul float %.01.i2, 0x4007154760000000, !dbg !26
  %79 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %78) #3, !dbg !26
  %80 = fadd float %79, 1.000000e+00, !dbg !26
  %81 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %80) #4, !dbg !26, !srcloc !27
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not6.i4 = icmp eq i32 %82, 0, !dbg !26
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %81, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %.03.i5 = select i1 %.not6.i4, float %84, float %83, !dbg !26
  %85 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !26
  %s.0.i6 = select i1 %85, float 1.000000e+00, float %.03.i5, !dbg !26
  %86 = bitcast float %s.0.i6 to i32, !dbg !26
  %87 = and i32 %15, -2147483648, !dbg !26
  %88 = or i32 %87, %86, !dbg !26
  %89 = bitcast i32 %88 to float, !dbg !26
  br label %__nv_tanhf.exit19, !dbg !26

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %90 = fmul float %17, %17, !dbg !26
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not1.i9 = icmp eq i32 %91, 0, !dbg !26
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %90, float 0xBFAAC795C0000000) #3, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %90, float 0xBFAAC795C0000000) #3, !dbg !26
  %.06.i10 = select i1 %.not1.i9, float %93, float %92, !dbg !26
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not2.i11 = icmp eq i32 %94, 0, !dbg !26
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %90, float 0x3FC10B2820000000) #3, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %90, float 0x3FC10B2820000000) #3, !dbg !26
  %.05.i12 = select i1 %.not2.i11, float %96, float %95, !dbg !26
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not3.i13 = icmp eq i32 %97, 0, !dbg !26
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %90, float 0xBFD5553DA0000000) #3, !dbg !26
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %90, float 0xBFD5553DA0000000) #3, !dbg !26
  %.0.i14 = select i1 %.not3.i13, float %99, float %98, !dbg !26
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not4.i15 = icmp eq i32 %100, 0, !dbg !26
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %90, float 0.000000e+00) #3, !dbg !26
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %90, float 0.000000e+00) #3, !dbg !26
  %.04.i16 = select i1 %.not4.i15, float %102, float %101, !dbg !26
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not5.i17 = icmp eq i32 %103, 0, !dbg !26
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %17, float %17) #3, !dbg !26
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %17, float %17) #3, !dbg !26
  %.02.i18 = select i1 %.not5.i17, float %105, float %104, !dbg !26
  br label %__nv_tanhf.exit19, !dbg !26

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %89, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !26
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i20 = icmp eq i32 %106, 0, !dbg !28
  %107 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #3, !dbg !28
  %108 = tail call float @llvm.nvvm.fabs.f(float %24) #3, !dbg !28
  %.01.i21 = select i1 %.not.i20, float %108, float %107, !dbg !28
  %109 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !28
  br i1 %109, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !28

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %110 = fmul float %.01.i21, 0x4007154760000000, !dbg !28
  %111 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %110) #3, !dbg !28
  %112 = fadd float %111, 1.000000e+00, !dbg !28
  %113 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %112) #4, !dbg !28, !srcloc !27
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i23 = icmp eq i32 %114, 0, !dbg !28
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %.03.i24 = select i1 %.not6.i23, float %116, float %115, !dbg !28
  %117 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !28
  %s.0.i25 = select i1 %117, float 1.000000e+00, float %.03.i24, !dbg !28
  %118 = bitcast float %s.0.i25 to i32, !dbg !28
  %119 = and i32 %22, -2147483648, !dbg !28
  %120 = or i32 %119, %118, !dbg !28
  %121 = bitcast i32 %120 to float, !dbg !28
  br label %__nv_tanhf.exit38, !dbg !28

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %122 = fmul float %24, %24, !dbg !28
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i28 = icmp eq i32 %123, 0, !dbg !28
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #3, !dbg !28
  %125 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #3, !dbg !28
  %.06.i29 = select i1 %.not1.i28, float %125, float %124, !dbg !28
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i30 = icmp eq i32 %126, 0, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %122, float 0x3FC10B2820000000) #3, !dbg !28
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %122, float 0x3FC10B2820000000) #3, !dbg !28
  %.05.i31 = select i1 %.not2.i30, float %128, float %127, !dbg !28
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i32 = icmp eq i32 %129, 0, !dbg !28
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %122, float 0xBFD5553DA0000000) #3, !dbg !28
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %122, float 0xBFD5553DA0000000) #3, !dbg !28
  %.0.i33 = select i1 %.not3.i32, float %131, float %130, !dbg !28
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i34 = icmp eq i32 %132, 0, !dbg !28
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %122, float 0.000000e+00) #3, !dbg !28
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %122, float 0.000000e+00) #3, !dbg !28
  %.04.i35 = select i1 %.not4.i34, float %134, float %133, !dbg !28
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i36 = icmp eq i32 %135, 0, !dbg !28
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %24, float %24) #3, !dbg !28
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %24, float %24) #3, !dbg !28
  %.02.i37 = select i1 %.not5.i36, float %137, float %136, !dbg !28
  br label %__nv_tanhf.exit38, !dbg !28

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %121, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !28
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i39 = icmp eq i32 %138, 0, !dbg !28
  %139 = tail call float @llvm.nvvm.fabs.ftz.f(float %25) #3, !dbg !28
  %140 = tail call float @llvm.nvvm.fabs.f(float %25) #3, !dbg !28
  %.01.i40 = select i1 %.not.i39, float %140, float %139, !dbg !28
  %141 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !28
  br i1 %141, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !28

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %142 = fmul float %.01.i40, 0x4007154760000000, !dbg !28
  %143 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %142) #3, !dbg !28
  %144 = fadd float %143, 1.000000e+00, !dbg !28
  %145 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %144) #4, !dbg !28, !srcloc !27
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i42 = icmp eq i32 %146, 0, !dbg !28
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %145, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %.03.i43 = select i1 %.not6.i42, float %148, float %147, !dbg !28
  %149 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !28
  %s.0.i44 = select i1 %149, float 1.000000e+00, float %.03.i43, !dbg !28
  %150 = bitcast float %s.0.i44 to i32, !dbg !28
  %151 = and i32 %23, -2147483648, !dbg !28
  %152 = or i32 %151, %150, !dbg !28
  %153 = bitcast i32 %152 to float, !dbg !28
  br label %__nv_tanhf.exit57, !dbg !28

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %154 = fmul float %25, %25, !dbg !28
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i47 = icmp eq i32 %155, 0, !dbg !28
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %154, float 0xBFAAC795C0000000) #3, !dbg !28
  %157 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %154, float 0xBFAAC795C0000000) #3, !dbg !28
  %.06.i48 = select i1 %.not1.i47, float %157, float %156, !dbg !28
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i49 = icmp eq i32 %158, 0, !dbg !28
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %154, float 0x3FC10B2820000000) #3, !dbg !28
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %154, float 0x3FC10B2820000000) #3, !dbg !28
  %.05.i50 = select i1 %.not2.i49, float %160, float %159, !dbg !28
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i51 = icmp eq i32 %161, 0, !dbg !28
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %154, float 0xBFD5553DA0000000) #3, !dbg !28
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %154, float 0xBFD5553DA0000000) #3, !dbg !28
  %.0.i52 = select i1 %.not3.i51, float %163, float %162, !dbg !28
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i53 = icmp eq i32 %164, 0, !dbg !28
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %154, float 0.000000e+00) #3, !dbg !28
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %154, float 0.000000e+00) #3, !dbg !28
  %.04.i54 = select i1 %.not4.i53, float %166, float %165, !dbg !28
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i55 = icmp eq i32 %167, 0, !dbg !28
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %25, float %25) #3, !dbg !28
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %25, float %25) #3, !dbg !28
  %.02.i56 = select i1 %.not5.i55, float %169, float %168, !dbg !28
  br label %__nv_tanhf.exit57, !dbg !28

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %153, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !28
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i58 = icmp eq i32 %170, 0, !dbg !29
  %171 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #3, !dbg !29
  %172 = tail call float @llvm.nvvm.fabs.f(float %32) #3, !dbg !29
  %.01.i59 = select i1 %.not.i58, float %172, float %171, !dbg !29
  %173 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !29
  br i1 %173, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !29

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %174 = fmul float %.01.i59, 0x4007154760000000, !dbg !29
  %175 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %174) #3, !dbg !29
  %176 = fadd float %175, 1.000000e+00, !dbg !29
  %177 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %176) #4, !dbg !29, !srcloc !27
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i61 = icmp eq i32 %178, 0, !dbg !29
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %177, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %.03.i62 = select i1 %.not6.i61, float %180, float %179, !dbg !29
  %181 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !29
  %s.0.i63 = select i1 %181, float 1.000000e+00, float %.03.i62, !dbg !29
  %182 = bitcast float %s.0.i63 to i32, !dbg !29
  %183 = and i32 %30, -2147483648, !dbg !29
  %184 = or i32 %183, %182, !dbg !29
  %185 = bitcast i32 %184 to float, !dbg !29
  br label %__nv_tanhf.exit76, !dbg !29

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %186 = fmul float %32, %32, !dbg !29
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i66 = icmp eq i32 %187, 0, !dbg !29
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %186, float 0xBFAAC795C0000000) #3, !dbg !29
  %189 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %186, float 0xBFAAC795C0000000) #3, !dbg !29
  %.06.i67 = select i1 %.not1.i66, float %189, float %188, !dbg !29
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i68 = icmp eq i32 %190, 0, !dbg !29
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %186, float 0x3FC10B2820000000) #3, !dbg !29
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %186, float 0x3FC10B2820000000) #3, !dbg !29
  %.05.i69 = select i1 %.not2.i68, float %192, float %191, !dbg !29
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i70 = icmp eq i32 %193, 0, !dbg !29
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %186, float 0xBFD5553DA0000000) #3, !dbg !29
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %186, float 0xBFD5553DA0000000) #3, !dbg !29
  %.0.i71 = select i1 %.not3.i70, float %195, float %194, !dbg !29
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i72 = icmp eq i32 %196, 0, !dbg !29
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %186, float 0.000000e+00) #3, !dbg !29
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %186, float 0.000000e+00) #3, !dbg !29
  %.04.i73 = select i1 %.not4.i72, float %198, float %197, !dbg !29
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i74 = icmp eq i32 %199, 0, !dbg !29
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %32, float %32) #3, !dbg !29
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %32, float %32) #3, !dbg !29
  %.02.i75 = select i1 %.not5.i74, float %201, float %200, !dbg !29
  br label %__nv_tanhf.exit76, !dbg !29

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi float [ %185, %__internal_fmad.exit1.i60 ], [ %.02.i75, %__internal_fmad.exit3.i65 ], !dbg !29
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i77 = icmp eq i32 %202, 0, !dbg !29
  %203 = tail call float @llvm.nvvm.fabs.ftz.f(float %33) #3, !dbg !29
  %204 = tail call float @llvm.nvvm.fabs.f(float %33) #3, !dbg !29
  %.01.i78 = select i1 %.not.i77, float %204, float %203, !dbg !29
  %205 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !29
  br i1 %205, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !29

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %206 = fmul float %.01.i78, 0x4007154760000000, !dbg !29
  %207 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %206) #3, !dbg !29
  %208 = fadd float %207, 1.000000e+00, !dbg !29
  %209 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %208) #4, !dbg !29, !srcloc !27
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i80 = icmp eq i32 %210, 0, !dbg !29
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %209, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %.03.i81 = select i1 %.not6.i80, float %212, float %211, !dbg !29
  %213 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !29
  %s.0.i82 = select i1 %213, float 1.000000e+00, float %.03.i81, !dbg !29
  %214 = bitcast float %s.0.i82 to i32, !dbg !29
  %215 = and i32 %31, -2147483648, !dbg !29
  %216 = or i32 %215, %214, !dbg !29
  %217 = bitcast i32 %216 to float, !dbg !29
  br label %__nv_tanhf.exit95, !dbg !29

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %218 = fmul float %33, %33, !dbg !29
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i85 = icmp eq i32 %219, 0, !dbg !29
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %218, float 0xBFAAC795C0000000) #3, !dbg !29
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %218, float 0xBFAAC795C0000000) #3, !dbg !29
  %.06.i86 = select i1 %.not1.i85, float %221, float %220, !dbg !29
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i87 = icmp eq i32 %222, 0, !dbg !29
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %218, float 0x3FC10B2820000000) #3, !dbg !29
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %218, float 0x3FC10B2820000000) #3, !dbg !29
  %.05.i88 = select i1 %.not2.i87, float %224, float %223, !dbg !29
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i89 = icmp eq i32 %225, 0, !dbg !29
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %218, float 0xBFD5553DA0000000) #3, !dbg !29
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %218, float 0xBFD5553DA0000000) #3, !dbg !29
  %.0.i90 = select i1 %.not3.i89, float %227, float %226, !dbg !29
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i91 = icmp eq i32 %228, 0, !dbg !29
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %218, float 0.000000e+00) #3, !dbg !29
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %218, float 0.000000e+00) #3, !dbg !29
  %.04.i92 = select i1 %.not4.i91, float %230, float %229, !dbg !29
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i93 = icmp eq i32 %231, 0, !dbg !29
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %33, float %33) #3, !dbg !29
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %33, float %33) #3, !dbg !29
  %.02.i94 = select i1 %.not5.i93, float %233, float %232, !dbg !29
  br label %__nv_tanhf.exit95, !dbg !29

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi float [ %217, %__internal_fmad.exit1.i79 ], [ %.02.i94, %__internal_fmad.exit3.i84 ], !dbg !29
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i96 = icmp eq i32 %234, 0, !dbg !30
  %235 = tail call float @llvm.nvvm.fabs.ftz.f(float %40) #3, !dbg !30
  %236 = tail call float @llvm.nvvm.fabs.f(float %40) #3, !dbg !30
  %.01.i97 = select i1 %.not.i96, float %236, float %235, !dbg !30
  %237 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !30
  br i1 %237, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !30

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %238 = fmul float %.01.i97, 0x4007154760000000, !dbg !30
  %239 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %238) #3, !dbg !30
  %240 = fadd float %239, 1.000000e+00, !dbg !30
  %241 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %240) #4, !dbg !30, !srcloc !27
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i99 = icmp eq i32 %242, 0, !dbg !30
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %241, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %241, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i100 = select i1 %.not6.i99, float %244, float %243, !dbg !30
  %245 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !30
  %s.0.i101 = select i1 %245, float 1.000000e+00, float %.03.i100, !dbg !30
  %246 = bitcast float %s.0.i101 to i32, !dbg !30
  %247 = and i32 %38, -2147483648, !dbg !30
  %248 = or i32 %247, %246, !dbg !30
  %249 = bitcast i32 %248 to float, !dbg !30
  br label %__nv_tanhf.exit114, !dbg !30

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %250 = fmul float %40, %40, !dbg !30
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i104 = icmp eq i32 %251, 0, !dbg !30
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %250, float 0xBFAAC795C0000000) #3, !dbg !30
  %253 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %250, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i105 = select i1 %.not1.i104, float %253, float %252, !dbg !30
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i106 = icmp eq i32 %254, 0, !dbg !30
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %250, float 0x3FC10B2820000000) #3, !dbg !30
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %250, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i107 = select i1 %.not2.i106, float %256, float %255, !dbg !30
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i108 = icmp eq i32 %257, 0, !dbg !30
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %250, float 0xBFD5553DA0000000) #3, !dbg !30
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %250, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i109 = select i1 %.not3.i108, float %259, float %258, !dbg !30
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i110 = icmp eq i32 %260, 0, !dbg !30
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %250, float 0.000000e+00) #3, !dbg !30
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %250, float 0.000000e+00) #3, !dbg !30
  %.04.i111 = select i1 %.not4.i110, float %262, float %261, !dbg !30
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i112 = icmp eq i32 %263, 0, !dbg !30
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %40, float %40) #3, !dbg !30
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %40, float %40) #3, !dbg !30
  %.02.i113 = select i1 %.not5.i112, float %265, float %264, !dbg !30
  br label %__nv_tanhf.exit114, !dbg !30

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi float [ %249, %__internal_fmad.exit1.i98 ], [ %.02.i113, %__internal_fmad.exit3.i103 ], !dbg !30
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i115 = icmp eq i32 %266, 0, !dbg !30
  %267 = tail call float @llvm.nvvm.fabs.ftz.f(float %41) #3, !dbg !30
  %268 = tail call float @llvm.nvvm.fabs.f(float %41) #3, !dbg !30
  %.01.i116 = select i1 %.not.i115, float %268, float %267, !dbg !30
  %269 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !30
  br i1 %269, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !30

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %270 = fmul float %.01.i116, 0x4007154760000000, !dbg !30
  %271 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %270) #3, !dbg !30
  %272 = fadd float %271, 1.000000e+00, !dbg !30
  %273 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %272) #4, !dbg !30, !srcloc !27
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i118 = icmp eq i32 %274, 0, !dbg !30
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %273, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %273, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i119 = select i1 %.not6.i118, float %276, float %275, !dbg !30
  %277 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !30
  %s.0.i120 = select i1 %277, float 1.000000e+00, float %.03.i119, !dbg !30
  %278 = bitcast float %s.0.i120 to i32, !dbg !30
  %279 = and i32 %39, -2147483648, !dbg !30
  %280 = or i32 %279, %278, !dbg !30
  %281 = bitcast i32 %280 to float, !dbg !30
  br label %__nv_tanhf.exit133, !dbg !30

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %282 = fmul float %41, %41, !dbg !30
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i123 = icmp eq i32 %283, 0, !dbg !30
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %282, float 0xBFAAC795C0000000) #3, !dbg !30
  %285 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %282, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i124 = select i1 %.not1.i123, float %285, float %284, !dbg !30
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i125 = icmp eq i32 %286, 0, !dbg !30
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %282, float 0x3FC10B2820000000) #3, !dbg !30
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %282, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i126 = select i1 %.not2.i125, float %288, float %287, !dbg !30
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i127 = icmp eq i32 %289, 0, !dbg !30
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %282, float 0xBFD5553DA0000000) #3, !dbg !30
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %282, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i128 = select i1 %.not3.i127, float %291, float %290, !dbg !30
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i129 = icmp eq i32 %292, 0, !dbg !30
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %282, float 0.000000e+00) #3, !dbg !30
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %282, float 0.000000e+00) #3, !dbg !30
  %.04.i130 = select i1 %.not4.i129, float %294, float %293, !dbg !30
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i131 = icmp eq i32 %295, 0, !dbg !30
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %41, float %41) #3, !dbg !30
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %41, float %41) #3, !dbg !30
  %.02.i132 = select i1 %.not5.i131, float %297, float %296, !dbg !30
  br label %__nv_tanhf.exit133, !dbg !30

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi float [ %281, %__internal_fmad.exit1.i117 ], [ %.02.i132, %__internal_fmad.exit3.i122 ], !dbg !30
  %298 = fadd float %s.1.i7, %s.1.i45, !dbg !31
  %299 = fadd float %298, %s.1.i83, !dbg !32
  %300 = fadd float %s.1.i, %s.1.i26, !dbg !31
  %301 = fadd float %300, %s.1.i64, !dbg !32
  %302 = fadd float %301, %s.1.i102, !dbg !33
  %303 = fadd float %299, %s.1.i121, !dbg !33
  %304 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %302, float 4.000000e+00) #3, !dbg !34
  %305 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %303, float 4.000000e+00) #3, !dbg !34
  %306 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !35
  %307 = bitcast float %304 to i32, !dbg !36
  %308 = bitcast float %305 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %307, i32 %308, ptr addrspace(1) %306, i1 %10) #3, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbgp2zdoslfq6clgllxoz266vf3vqy4hh3kxuaseoufhkexa5lau.py", directory: "inductor_cache/bg")
!4 = !{ptr @triton_poi_fused_mean_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_tanh_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_tanh_0", linkageName: "triton_poi_fused_mean_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 40, scope: !7)
!20 = !DILocation(line: 27, column: 36, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 41, scope: !7)
!23 = !DILocation(line: 28, column: 36, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 41, scope: !7)
!26 = !DILocation(line: 29, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 30, column: 26, scope: !7)
!29 = !DILocation(line: 32, column: 26, scope: !7)
!30 = !DILocation(line: 34, column: 26, scope: !7)
!31 = !DILocation(line: 31, column: 18, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 19, scope: !7)
!34 = !DILocation(line: 37, column: 20, scope: !7)
!35 = !DILocation(line: 38, column: 25, scope: !7)
!36 = !DILocation(line: 38, column: 37, scope: !7)
!37 = !DILocation(line: 38, column: 4, scope: !7)
