; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %16 = icmp slt i32 %15, 1024, !dbg !14
  %17 = sdiv i32 %15, 16, !dbg !15
  %.frozen = freeze i32 %15, !dbg !16
  %18 = sdiv i32 %.frozen, 256, !dbg !16
  %19 = mul i32 %18, 256, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %19, !dbg !17
  %20 = shl nsw i32 %18, 6, !dbg !18
  %21 = add nsw i32 %20, %srem.decomposed, !dbg !19
  %22 = sext i32 %21 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !20
  %24 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !21
  %25 = insertelement <2 x i32> %24, i32 %17, i64 1, !dbg !21
  %26 = srem <2 x i32> %25, splat (i32 16), !dbg !21
  %27 = extractelement <2 x i32> %26, i64 1, !dbg !22
  %28 = icmp slt i32 %27, 4, !dbg !23
  %29 = and i1 %16, %28, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %29, i32 0, i1 %29) #1, !dbg !25
  %31 = sext i32 %27 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %29, i32 0, i1 %29) #1, !dbg !27
  %34 = and i32 %27, -4, !dbg !28
  %35 = icmp eq i32 %34, 4, !dbg !28
  %36 = insertelement <2 x i32> <i32 poison, i32 -4>, i32 %20, i64 0, !dbg !29
  %37 = add nsw <2 x i32> %36, %26, !dbg !29
  %38 = extractelement <2 x i32> %37, i64 1, !dbg !30
  %39 = shl nsw i32 %38, 4, !dbg !30
  %40 = extractelement <2 x i32> %37, i64 0, !dbg !31
  %41 = add nsw i32 %40, %39, !dbg !32
  %42 = sext i32 %41 to i64, !dbg !33
  %43 = getelementptr float, ptr addrspace(1) %2, i64 %42, !dbg !33
  %44 = and i1 %16, %35, !dbg !34
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %44, i32 0, i1 %44) #1, !dbg !35
  %46 = sext i32 %38 to i64, !dbg !36
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %46, !dbg !36
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %44, i32 0, i1 %44) #1, !dbg !37
  %49 = icmp eq i32 %34, 8, !dbg !38
  %50 = add nsw i32 %27, -8, !dbg !39
  %51 = shl nsw i32 %50, 4, !dbg !40
  %52 = add nsw i32 %40, %51, !dbg !41
  %53 = sext i32 %52 to i64, !dbg !42
  %54 = getelementptr float, ptr addrspace(1) %4, i64 %53, !dbg !42
  %55 = and i1 %16, %49, !dbg !43
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %55, i32 0, i1 %55) #1, !dbg !44
  %57 = sext i32 %50 to i64, !dbg !45
  %58 = getelementptr float, ptr addrspace(1) %5, i64 %57, !dbg !45
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %55, i32 0, i1 %55) #1, !dbg !46
  %60 = icmp sgt i32 %27, 11, !dbg !22
  %61 = add nsw i32 %27, -12, !dbg !47
  %62 = shl nsw i32 %61, 4, !dbg !48
  %63 = add nsw i32 %40, %62, !dbg !31
  %64 = sext i32 %63 to i64, !dbg !49
  %65 = getelementptr float, ptr addrspace(1) %6, i64 %64, !dbg !49
  %66 = and i1 %16, %60, !dbg !50
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %66, i32 0, i1 %66) #1, !dbg !51
  %68 = sext i32 %61 to i64, !dbg !52
  %69 = getelementptr float, ptr addrspace(1) %7, i64 %68, !dbg !52
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %66, i32 0, i1 %66) #1, !dbg !53
  %71 = insertelement <4 x i32> poison, i32 %67, i64 0, !dbg !51
  %72 = insertelement <4 x i32> %71, i32 %56, i64 1, !dbg !51
  %73 = insertelement <4 x i32> %72, i32 %45, i64 2, !dbg !51
  %74 = insertelement <4 x i32> %73, i32 %30, i64 3, !dbg !51
  %75 = bitcast <4 x i32> %74 to <4 x float>, !dbg !51
  %76 = insertelement <4 x i32> poison, i32 %70, i64 0, !dbg !53
  %77 = insertelement <4 x i32> %76, i32 %59, i64 1, !dbg !53
  %78 = insertelement <4 x i32> %77, i32 %48, i64 2, !dbg !53
  %79 = insertelement <4 x i32> %78, i32 %33, i64 3, !dbg !53
  %80 = bitcast <4 x i32> %79 to <4 x float>, !dbg !53
  %81 = fadd <4 x float> %75, %80, !dbg !54
  %82 = fcmp olt <4 x float> %81, zeroinitializer, !dbg !55
  %83 = extractelement <4 x i1> %82, i64 3, !dbg !59
  %84 = extractelement <4 x float> %81, i64 3, !dbg !59
  %85 = select i1 %83, float 0.000000e+00, float %84, !dbg !59
  %86 = extractelement <4 x i1> %82, i64 2, !dbg !61
  %87 = extractelement <4 x float> %81, i64 2, !dbg !61
  %88 = select i1 %86, float 0.000000e+00, float %87, !dbg !61
  %89 = extractelement <4 x i1> %82, i64 1, !dbg !63
  %90 = extractelement <4 x float> %81, i64 1, !dbg !63
  %91 = select i1 %89, float 0.000000e+00, float %90, !dbg !63
  %92 = extractelement <4 x i1> %82, i64 0, !dbg !65
  %93 = extractelement <4 x float> %81, i64 0, !dbg !65
  %94 = select i1 %92, float 0.000000e+00, float %93, !dbg !65
  %95 = select i1 %60, float %94, float 0.000000e+00, !dbg !66
  %96 = select i1 %49, float %91, float %95, !dbg !67
  %97 = select i1 %35, float %88, float %96, !dbg !67
  %98 = select i1 %28, float %85, float %97, !dbg !67
  %99 = sext i32 %15 to i64, !dbg !68
  %100 = getelementptr float, ptr addrspace(1) %8, i64 %99, !dbg !68
  %101 = bitcast float %98 to i32, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %101, ptr addrspace(1) %100, i1 %16) #1, !dbg !69
  ret void, !dbg !70
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdjyufezpzhbzw4evec6oknlonbzhfq5h44agn7kzzfm4bxsulsn.py", directory: "inductor_cache/dj")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 48, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 62, column: 20, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 35, scope: !7)
!28 = !DILocation(line: 43, column: 20, scope: !7)
!29 = !DILocation(line: 44, column: 36, scope: !7)
!30 = !DILocation(line: 44, column: 40, scope: !7)
!31 = !DILocation(line: 65, column: 54, scope: !7)
!32 = !DILocation(line: 44, column: 53, scope: !7)
!33 = !DILocation(line: 44, column: 31, scope: !7)
!34 = !DILocation(line: 44, column: 69, scope: !7)
!35 = !DILocation(line: 44, column: 61, scope: !7)
!36 = !DILocation(line: 45, column: 31, scope: !7)
!37 = !DILocation(line: 45, column: 43, scope: !7)
!38 = !DILocation(line: 54, column: 20, scope: !7)
!39 = !DILocation(line: 55, column: 47, scope: !7)
!40 = !DILocation(line: 55, column: 40, scope: !7)
!41 = !DILocation(line: 55, column: 53, scope: !7)
!42 = !DILocation(line: 55, column: 31, scope: !7)
!43 = !DILocation(line: 55, column: 69, scope: !7)
!44 = !DILocation(line: 55, column: 61, scope: !7)
!45 = !DILocation(line: 56, column: 31, scope: !7)
!46 = !DILocation(line: 56, column: 43, scope: !7)
!47 = !DILocation(line: 65, column: 48, scope: !7)
!48 = !DILocation(line: 65, column: 40, scope: !7)
!49 = !DILocation(line: 65, column: 31, scope: !7)
!50 = !DILocation(line: 65, column: 70, scope: !7)
!51 = !DILocation(line: 65, column: 62, scope: !7)
!52 = !DILocation(line: 66, column: 31, scope: !7)
!53 = !DILocation(line: 66, column: 44, scope: !7)
!54 = !DILocation(line: 67, column: 20, scope: !7)
!55 = !DILocation(line: 118, column: 15, scope: !56, inlinedAt: !58)
!56 = distinct !DILexicalBlockFile(scope: !7, file: !57, discriminator: 0)
!57 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!58 = !DILocation(line: 69, column: 42, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !56, inlinedAt: !60)
!60 = !DILocation(line: 37, column: 40, scope: !7)
!61 = !DILocation(line: 121, column: 29, scope: !56, inlinedAt: !62)
!62 = !DILocation(line: 48, column: 42, scope: !7)
!63 = !DILocation(line: 121, column: 29, scope: !56, inlinedAt: !64)
!64 = !DILocation(line: 59, column: 42, scope: !7)
!65 = !DILocation(line: 121, column: 29, scope: !56, inlinedAt: !58)
!66 = !DILocation(line: 71, column: 35, scope: !7)
!67 = !DILocation(line: 0, scope: !7)
!68 = !DILocation(line: 75, column: 25, scope: !7)
!69 = !DILocation(line: 75, column: 37, scope: !7)
!70 = !DILocation(line: 75, column: 4, scope: !7)
