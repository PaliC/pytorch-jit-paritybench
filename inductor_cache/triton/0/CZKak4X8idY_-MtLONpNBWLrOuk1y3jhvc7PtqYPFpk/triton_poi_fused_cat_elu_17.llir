; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_elu_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %13 = sdiv i32 %.frozen, 128, !dbg !14
  %14 = mul i32 %13, 128, !dbg !15
  %.decomposed = sub i32 %.frozen, %14, !dbg !15
  %15 = icmp slt i32 %.decomposed, 64, !dbg !16
  %16 = shl nsw i32 %13, 6, !dbg !17
  %17 = add nsw i32 %16, %.decomposed, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %19, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #3, !dbg !20
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !20
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !20
  %23 = bitcast i32 %21 to float, !dbg !20
  %24 = bitcast i32 %22 to float, !dbg !20
  %25 = sext i32 %.decomposed to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !21
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %26, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #3, !dbg !22
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !22
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !22
  %30 = bitcast i32 %28 to float, !dbg !22
  %31 = bitcast i32 %29 to float, !dbg !22
  %32 = fadd float %23, %30, !dbg !23
  %33 = fadd float %24, %31, !dbg !23
  %34 = icmp sgt i32 %.decomposed, 63, !dbg !24
  %35 = add nsw i32 %.decomposed, -64, !dbg !25
  %36 = add nsw i32 %16, %35, !dbg !26
  %37 = sext i32 %36 to i64, !dbg !27
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !27
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %38, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #3, !dbg !28
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !28
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !28
  %42 = bitcast i32 %40 to float, !dbg !28
  %43 = bitcast i32 %41 to float, !dbg !28
  %44 = sext i32 %35 to i64, !dbg !29
  %45 = getelementptr float, ptr addrspace(1) %3, i64 %44, !dbg !29
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %45, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #3, !dbg !30
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !30
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !30
  %49 = bitcast i32 %47 to float, !dbg !30
  %50 = bitcast i32 %48 to float, !dbg !30
  %51 = fadd float %42, %49, !dbg !31
  %52 = fadd float %43, %50, !dbg !31
  %53 = select i1 %15, float %32, float %51, !dbg !32
  %54 = select i1 %15, float %33, float %52, !dbg !32
  %55 = fmul float %53, 0x3FF7154760000000, !dbg !33
  %56 = tail call float @llvm.nvvm.round.f(float %55) #3, !dbg !33
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i = icmp eq i32 %57, 0, !dbg !33
  %58 = tail call float @llvm.nvvm.fabs.ftz.f(float %53) #3, !dbg !33
  %59 = tail call float @llvm.nvvm.fabs.f(float %53) #3, !dbg !33
  %.03.i = select i1 %.not.i, float %59, float %58, !dbg !33
  %60 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i = select i1 %60, float 0.000000e+00, float %56, !dbg !33
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %63 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !33
  %j.0.i = select i1 %63, float 1.270000e+02, float %t.0.i, !dbg !33
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i = icmp eq i32 %69, 0, !dbg !33
  br i1 %.not8.i, label %72, label %70, !dbg !33

70:                                               ; preds = %6
  %71 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !33
  br label %__nv_expm1f.exit, !dbg !33

72:                                               ; preds = %6
  %73 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !33
  br label %__nv_expm1f.exit, !dbg !33

__nv_expm1f.exit:                                 ; preds = %70, %72
  %.0.i = phi float [ %71, %70 ], [ %73, %72 ], !dbg !33
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %75 = fmul float %54, 0x3FF7154760000000, !dbg !33
  %76 = tail call float @llvm.nvvm.round.f(float %75) #3, !dbg !33
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i1 = icmp eq i32 %77, 0, !dbg !33
  %78 = tail call float @llvm.nvvm.fabs.ftz.f(float %54) #3, !dbg !33
  %79 = tail call float @llvm.nvvm.fabs.f(float %54) #3, !dbg !33
  %.03.i2 = select i1 %.not.i1, float %79, float %78, !dbg !33
  %80 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !33
  %t.0.i3 = select i1 %80, float 0.000000e+00, float %76, !dbg !33
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %83 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !33
  %j.0.i4 = select i1 %83, float 1.270000e+02, float %t.0.i3, !dbg !33
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not8.i5 = icmp eq i32 %89, 0, !dbg !33
  br i1 %.not8.i5, label %92, label %90, !dbg !33

90:                                               ; preds = %__nv_expm1f.exit
  %91 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !33
  br label %__nv_expm1f.exit27, !dbg !33

92:                                               ; preds = %__nv_expm1f.exit
  %93 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !33
  br label %__nv_expm1f.exit27, !dbg !33

__nv_expm1f.exit27:                               ; preds = %90, %92
  %.0.i6 = phi float [ %91, %90 ], [ %93, %92 ], !dbg !33
  %94 = fcmp oeq float %53, 0.000000e+00, !dbg !33
  %95 = fadd float %53, %53, !dbg !33
  %96 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !33
  %97 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !33
  %.not9.i = icmp eq i32 %74, 0, !dbg !33
  %.not7.i = icmp eq i32 %68, 0, !dbg !33
  %.not6.i = icmp eq i32 %67, 0, !dbg !33
  %.not5.i = icmp eq i32 %66, 0, !dbg !33
  %.not4.i = icmp eq i32 %65, 0, !dbg !33
  %.not3.i = icmp eq i32 %64, 0, !dbg !33
  %.not2.i = icmp eq i32 %62, 0, !dbg !33
  %98 = fneg float %t.0.i, !dbg !33
  %.not1.i = icmp eq i32 %61, 0, !dbg !33
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %98, float 0x3FE62E4000000000, float %53) #3, !dbg !33
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %98, float 0x3FE62E4000000000, float %53) #3, !dbg !33
  %.04.i = select i1 %.not1.i, float %99, float %100, !dbg !33
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %98, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !33
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %98, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !33
  %.05.i = select i1 %.not2.i, float %101, float %102, !dbg !33
  %103 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !33
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i = select i1 %.not3.i, float %103, float %104, !dbg !33
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !33
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i = select i1 %.not4.i, float %105, float %106, !dbg !33
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !33
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i = select i1 %.not5.i, float %107, float %108, !dbg !33
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i = select i1 %.not6.i, float %109, float %110, !dbg !33
  %111 = fmul float %.05.i, %.06.i, !dbg !33
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %111, float %.05.i, float %.05.i) #3, !dbg !33
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float %.05.i, float %.05.i) #3, !dbg !33
  %.01.i = select i1 %.not7.i, float %112, float %113, !dbg !33
  %114 = fadd float %.0.i, -1.000000e+00, !dbg !33
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %114) #3, !dbg !33
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %114) #3, !dbg !33
  %.02.i = select i1 %.not9.i, float %115, float %116, !dbg !33
  %117 = fadd float %.02.i, %.02.i, !dbg !33
  %u.0.i = select i1 %63, float %117, float %.02.i, !dbg !33
  %u.1.i = select i1 %97, float 0x7FF0000000000000, float %u.0.i, !dbg !33
  %u.2.i = select i1 %96, float -1.000000e+00, float %u.1.i, !dbg !33
  %u.3.i = select i1 %94, float %95, float %u.2.i, !dbg !33
  %118 = fcmp ogt float %54, 0.000000e+00, !dbg !34
  %119 = fcmp ogt float %53, 0.000000e+00, !dbg !34
  %.not7.i7 = icmp eq i32 %88, 0, !dbg !33
  %.not6.i8 = icmp eq i32 %87, 0, !dbg !33
  %.not5.i9 = icmp eq i32 %86, 0, !dbg !33
  %.not4.i10 = icmp eq i32 %85, 0, !dbg !33
  %.not3.i11 = icmp eq i32 %84, 0, !dbg !33
  %.not2.i12 = icmp eq i32 %82, 0, !dbg !33
  %120 = fneg float %t.0.i3, !dbg !33
  %.not1.i13 = icmp eq i32 %81, 0, !dbg !33
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %120, float 0x3FE62E4000000000, float %54) #3, !dbg !33
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %120, float 0x3FE62E4000000000, float %54) #3, !dbg !33
  %.04.i14 = select i1 %.not1.i13, float %121, float %122, !dbg !33
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %120, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !33
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %120, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !33
  %.05.i15 = select i1 %.not2.i12, float %123, float %124, !dbg !33
  %125 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !33
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !33
  %.07.i16 = select i1 %.not3.i11, float %125, float %126, !dbg !33
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !33
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !33
  %.08.i17 = select i1 %.not4.i10, float %127, float %128, !dbg !33
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !33
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !33
  %.09.i18 = select i1 %.not5.i9, float %129, float %130, !dbg !33
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !33
  %.06.i19 = select i1 %.not6.i8, float %131, float %132, !dbg !33
  %133 = fmul float %.05.i15, %.06.i19, !dbg !33
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %133, float %.05.i15, float %.05.i15) #3, !dbg !33
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %133, float %.05.i15, float %.05.i15) #3, !dbg !33
  %.01.i20 = select i1 %.not7.i7, float %134, float %135, !dbg !33
  %136 = fadd float %.0.i6, -1.000000e+00, !dbg !33
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not9.i21 = icmp eq i32 %137, 0, !dbg !33
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %136) #3, !dbg !33
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %136) #3, !dbg !33
  %.02.i22 = select i1 %.not9.i21, float %139, float %138, !dbg !33
  %140 = fadd float %.02.i22, %.02.i22, !dbg !33
  %u.0.i23 = select i1 %83, float %140, float %.02.i22, !dbg !33
  %141 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !33
  %u.1.i24 = select i1 %141, float 0x7FF0000000000000, float %u.0.i23, !dbg !33
  %142 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !33
  %u.2.i25 = select i1 %142, float -1.000000e+00, float %u.1.i24, !dbg !33
  %143 = fcmp oeq float %54, 0.000000e+00, !dbg !33
  %144 = fadd float %54, %54, !dbg !33
  %u.3.i26 = select i1 %143, float %144, float %u.2.i25, !dbg !33
  %145 = select i1 %119, float %53, float %u.3.i, !dbg !35
  %146 = select i1 %118, float %54, float %u.3.i26, !dbg !35
  %147 = sext i32 %12 to i64, !dbg !36
  %148 = getelementptr float, ptr addrspace(1) %4, i64 %147, !dbg !36
  %149 = bitcast float %145 to i32, !dbg !37
  %150 = bitcast float %146 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %149, i32 %150, ptr addrspace(1) %148, i1 true) #3, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cv6nvt276cwed4dbjfj5hygzognuia6afrhsdmvibwfy6x6w4fnw.py", directory: "inductor_cache/v6")
!4 = !{ptr @triton_poi_fused_cat_elu_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_elu_17, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_elu_17", linkageName: "triton_poi_fused_cat_elu_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 33, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 45, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 20, scope: !7)
!25 = !DILocation(line: 40, column: 48, scope: !7)
!26 = !DILocation(line: 40, column: 40, scope: !7)
!27 = !DILocation(line: 40, column: 31, scope: !7)
!28 = !DILocation(line: 40, column: 54, scope: !7)
!29 = !DILocation(line: 41, column: 31, scope: !7)
!30 = !DILocation(line: 41, column: 44, scope: !7)
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 0, scope: !7)
!33 = !DILocation(line: 50, column: 28, scope: !7)
!34 = !DILocation(line: 47, column: 20, scope: !7)
!35 = !DILocation(line: 52, column: 35, scope: !7)
!36 = !DILocation(line: 53, column: 25, scope: !7)
!37 = !DILocation(line: 53, column: 37, scope: !7)
!38 = !DILocation(line: 53, column: 4, scope: !7)
