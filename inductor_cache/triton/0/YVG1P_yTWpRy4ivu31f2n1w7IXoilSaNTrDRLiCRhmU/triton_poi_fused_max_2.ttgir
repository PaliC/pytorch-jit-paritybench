#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2> : tensor<16xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<16xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<16xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<16xi32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<16xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = arith.addi %4, %cst_3 : tensor<16xi32, #blocked> loc(#loc9)
    %10 = tt.addptr %6, %9 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc10)
    %11 = tt.load %10, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.addi %4, %cst_2 : tensor<16xi32, #blocked> loc(#loc12)
    %13 = tt.addptr %6, %12 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc13)
    %14 = tt.load %13, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = arith.cmpf ogt, %8, %11 : tensor<16xf32, #blocked> loc(#loc47)
    %16 = arith.cmpf une, %8, %8 : tensor<16xf32, #blocked> loc(#loc48)
    %17 = arith.ori %15, %16 : tensor<16xi1, #blocked> loc(#loc49)
    %18 = arith.select %17, %8, %11 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc50)
    %19 = arith.cmpf ogt, %18, %14 : tensor<16xf32, #blocked> loc(#loc51)
    %20 = arith.cmpf une, %18, %18 : tensor<16xf32, #blocked> loc(#loc52)
    %21 = arith.ori %19, %20 : tensor<16xi1, #blocked> loc(#loc53)
    %22 = arith.select %21, %18, %14 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc54)
    %23 = arith.cmpf oeq, %8, %11 : tensor<16xf32, #blocked> loc(#loc21)
    %24 = arith.cmpf une, %11, %11 : tensor<16xf32, #blocked> loc(#loc22)
    %25 = arith.cmpi ugt, %16, %24 : tensor<16xi1, #blocked> loc(#loc23)
    %26 = arith.ori %15, %25 : tensor<16xi1, #blocked> loc(#loc24)
    %27 = arith.andi %16, %24 : tensor<16xi1, #blocked> loc(#loc25)
    %28 = arith.ori %23, %27 : tensor<16xi1, #blocked> loc(#loc26)
    %29 = arith.ori %26, %28 : tensor<16xi1, #blocked> loc(#loc27)
    %30 = arith.select %29, %8, %11 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc28)
    %31 = arith.select %29, %cst_1, %cst_0 : tensor<16xi1, #blocked>, tensor<16xi64, #blocked> loc(#loc29)
    %32 = arith.cmpf ogt, %30, %14 : tensor<16xf32, #blocked> loc(#loc30)
    %33 = arith.cmpf oeq, %30, %14 : tensor<16xf32, #blocked> loc(#loc31)
    %34 = arith.cmpf une, %30, %30 : tensor<16xf32, #blocked> loc(#loc32)
    %35 = arith.cmpf une, %14, %14 : tensor<16xf32, #blocked> loc(#loc33)
    %36 = arith.cmpi ugt, %34, %35 : tensor<16xi1, #blocked> loc(#loc34)
    %37 = arith.ori %32, %36 : tensor<16xi1, #blocked> loc(#loc35)
    %38 = arith.andi %34, %35 : tensor<16xi1, #blocked> loc(#loc36)
    %39 = arith.ori %33, %38 : tensor<16xi1, #blocked> loc(#loc37)
    %40 = arith.cmpi slt, %31, %cst : tensor<16xi64, #blocked> loc(#loc38)
    %41 = arith.andi %39, %40 : tensor<16xi1, #blocked> loc(#loc39)
    %42 = arith.ori %37, %41 : tensor<16xi1, #blocked> loc(#loc40)
    %43 = arith.select %42, %31, %cst : tensor<16xi1, #blocked>, tensor<16xi64, #blocked> loc(#loc41)
    %44 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc42)
    %45 = tt.addptr %44, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc42)
    tt.store %45, %22, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc43)
    %46 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<16x!tt.ptr<i64>, #blocked> loc(#loc44)
    %47 = tt.addptr %46, %4 : tensor<16x!tt.ptr<i64>, #blocked>, tensor<16xi32, #blocked> loc(#loc44)
    tt.store %47, %43, %5 : tensor<16x!tt.ptr<i64>, #blocked> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":21:28)
#loc3 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":21:33)
#loc4 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":22:36)
#loc5 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":22:23)
#loc6 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":23:21)
#loc7 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":25:30)
#loc8 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":25:35)
#loc9 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":26:35)
#loc10 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":26:30)
#loc11 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":26:40)
#loc12 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":27:35)
#loc13 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":27:30)
#loc14 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":27:40)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc16 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":28:40)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":29:40)
#loc21 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":31:19)
#loc22 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":33:19)
#loc23 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":34:18)
#loc24 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":35:19)
#loc25 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":36:19)
#loc26 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":37:19)
#loc27 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":42:20)
#loc28 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":43:34)
#loc29 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":44:35)
#loc30 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":45:20)
#loc31 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":46:21)
#loc32 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":47:21)
#loc33 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":48:20)
#loc34 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":49:20)
#loc35 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":50:20)
#loc36 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":51:20)
#loc37 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":52:20)
#loc38 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":54:20)
#loc39 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":55:20)
#loc40 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":56:20)
#loc41 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":58:35)
#loc42 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":59:25)
#loc43 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":59:36)
#loc44 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":60:25)
#loc45 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":60:37)
#loc46 = loc("inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py":60:4)
#loc47 = loc(callsite(#loc15 at #loc16))
#loc48 = loc(callsite(#loc17 at #loc16))
#loc49 = loc(callsite(#loc18 at #loc16))
#loc50 = loc(callsite(#loc19 at #loc16))
#loc51 = loc(callsite(#loc15 at #loc20))
#loc52 = loc(callsite(#loc17 at #loc20))
#loc53 = loc(callsite(#loc18 at #loc20))
#loc54 = loc(callsite(#loc19 at #loc20))
