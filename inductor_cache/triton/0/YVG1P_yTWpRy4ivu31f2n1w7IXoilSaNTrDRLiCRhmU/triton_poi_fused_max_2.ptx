//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_max_2  // -- Begin function triton_poi_fused_max_2
                                        // @triton_poi_fused_max_2
.visible .entry triton_poi_fused_max_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_2_param_2,
	.param .u32 triton_poi_fused_max_2_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<15>;
	.reg .f32 	%f<6>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_max_2_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_max_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:21:33
	shl.b32 	%r6, %r1, 4;
	ld.param.u64 	%rd9, [triton_poi_fused_max_2_param_2];
	.loc	1 22 36                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:22:36
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 16;
	and.b32  	%r9, %r7, 15;
	.loc	1 22 23                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:22:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 23 21                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:23:21
	setp.lt.s32 	%p1, %r10, 16;
	.loc	1 25 30                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:25:30
	mul.wide.s32 	%rd10, %r10, 4;
	add.s64 	%rd1, %rd7, %rd10;
	.loc	1 25 35                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:25:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 26 35                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:26:35
	add.s32 	%r11, %r10, 16;
	.loc	1 26 30                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:26:30
	mul.wide.s32 	%rd11, %r11, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 26 40                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:26:40
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 27 35                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:27:35
	add.s32 	%r12, %r10, 32;
	.loc	1 27 30                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:27:30
	mul.wide.s32 	%rd12, %r12, 4;
	add.s64 	%rd3, %rd7, %rd12;
	.loc	1 27 40                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:27:40
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p6, %f1, %f2;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p7, %f1, %f1;
	.loc	2 120 16                        // triton_helpers.py:120:16
	or.pred  	%p8, %p7, %p6;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f4, %f1, %f2, %p8;
$L__tmp2:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p9, %f4, %f3;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p10, %f4, %f4;
$L__tmp3:
	.loc	1 31 19                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:31:19
	setp.eq.f32 	%p11, %f1, %f2;
	.loc	1 42 20                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:42:20
	or.pred  	%p12, %p8, %p11;
	.loc	1 43 34                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:43:34
	selp.f32 	%f5, %f1, %f2, %p12;
	.loc	1 44 35                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:44:35
	not.pred 	%p13, %p12;
	selp.u64 	%rd13, 1, 0, %p13;
	.loc	1 45 20                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:45:20
	setp.gt.f32 	%p14, %f5, %f3;
	.loc	1 46 21                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:46:21
	setp.eq.f32 	%p15, %f5, %f3;
	.loc	1 47 21                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:47:21
	setp.nan.f32 	%p16, %f5, %f5;
	.loc	1 48 20                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:48:20
	setp.nan.f32 	%p17, %f3, %f3;
	.loc	1 58 35                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:58:35
	selp.b64 	%rd14, %rd13, 2, %p16;
	selp.b64 	%rd15, %rd14, 2, %p17;
	selp.b64 	%rd16, %rd13, %rd15, %p15;
	selp.b64 	%rd17, %rd16, %rd13, %p17;
	selp.b64 	%rd18, %rd17, %rd16, %p16;
	selp.b64 	%rd5, %rd13, %rd18, %p14;
	.loc	1 59 25                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:59:25
	add.s64 	%rd4, %rd8, %rd10;
	.loc	1 59 36                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:59:36
	setp.eq.s32 	%p18, %r8, 0;
	mov.b32 	%r13, %f4;
$L__tmp4:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r14, %r13, %r4, %p10;
	selp.b32 	%r5, %r13, %r14, %p9;
$L__tmp5:
	.loc	1 59 36                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:59:36
	and.pred  	%p4, %p18, %p1;
	// begin inline asm
	@%p4 st.global.b32 [ %rd4 + 0 ], { %r5 };
	// end inline asm
	.loc	1 60 25                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:60:25
	mul.wide.s32 	%rd19, %r10, 8;
	add.s64 	%rd6, %rd9, %rd19;
	.loc	1 60 37                         // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:60:37
	// begin inline asm
	@%p4 st.global.b64 [ %rd6 + 0 ], { %rd5 };
	// end inline asm
	.loc	1 60 4                          // cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py:60:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/u7/cu7gfrmtwditofhke6w4gizygtika2v4g65xl2xkium3tj3wlywp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 191                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 55
.b8 103
.b8 102
.b8 114
.b8 109
.b8 116
.b8 119
.b8 100
.b8 105
.b8 116
.b8 111
.b8 102
.b8 104
.b8 107
.b8 101
.b8 54
.b8 119
.b8 52
.b8 103
.b8 105
.b8 122
.b8 121
.b8 103
.b8 116
.b8 105
.b8 107
.b8 97
.b8 50
.b8 118
.b8 52
.b8 103
.b8 54
.b8 53
.b8 120
.b8 108
.b8 50
.b8 120
.b8 107
.b8 105
.b8 117
.b8 109
.b8 51
.b8 116
.b8 106
.b8 51
.b8 119
.b8 108
.b8 121
.b8 119
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 28                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 29                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
