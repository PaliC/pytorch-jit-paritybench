#loc = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_7(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1024xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-160> : tensor<1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-128> : tensor<1024xi32> loc(#loc1)
    %cst_3 = arith.constant dense<160> : tensor<1024xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-96> : tensor<1024xi32> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<1024xi64> loc(#loc1)
    %cst_6 = arith.constant dense<8192> : tensor<1024xi32> loc(#loc1)
    %cst_7 = arith.constant dense<-64> : tensor<1024xi32> loc(#loc1)
    %cst_8 = arith.constant dense<96> : tensor<1024xi64> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_10 = arith.constant dense<24576> : tensor<1024xi32> loc(#loc1)
    %cst_11 = arith.constant dense<64> : tensor<1024xi64> loc(#loc1)
    %cst_12 = arith.constant dense<49152> : tensor<1024xi32> loc(#loc1)
    %cst_13 = arith.constant dense<192> : tensor<1024xi32> loc(#loc1)
    %cst_14 = arith.constant dense<256> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_14 : tensor<1024xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_13 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_14 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_12 : tensor<1024xi32> loc(#loc9)
    %9 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc14)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc16)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc17)
    %21 = arith.extsi %6 : tensor<1024xi32> to tensor<1024xi64> loc(#loc18)
    %22 = arith.cmpi slt, %21, %cst_11 : tensor<1024xi64> loc(#loc18)
    %23 = arith.muli %6, %cst_14 : tensor<1024xi32> loc(#loc19)
    %24 = arith.addi %7, %23 : tensor<1024xi32> loc(#loc20)
    %25 = arith.muli %8, %cst_10 : tensor<1024xi32> loc(#loc21)
    %26 = arith.addi %24, %25 : tensor<1024xi32> loc(#loc22)
    %27 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc23)
    %28 = tt.addptr %27, %26 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc23)
    %29 = tt.load %28, %22, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc24)
    %30 = arith.cmpi sge, %21, %cst_11 : tensor<1024xi64> loc(#loc25)
    %31 = arith.cmpi slt, %21, %cst_8 : tensor<1024xi64> loc(#loc26)
    %32 = arith.andi %30, %31 : tensor<1024xi1> loc(#loc27)
    %33 = arith.addi %6, %cst_7 : tensor<1024xi32> loc(#loc28)
    %34 = arith.muli %33, %cst_14 : tensor<1024xi32> loc(#loc29)
    %35 = arith.addi %7, %34 : tensor<1024xi32> loc(#loc30)
    %36 = arith.muli %8, %cst_6 : tensor<1024xi32> loc(#loc31)
    %37 = arith.addi %35, %36 : tensor<1024xi32> loc(#loc32)
    %38 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc33)
    %39 = tt.addptr %38, %37 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc33)
    %40 = tt.load %39, %32, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc34)
    %41 = arith.cmpi sge, %21, %cst_8 : tensor<1024xi64> loc(#loc35)
    %42 = arith.cmpi slt, %21, %cst_5 : tensor<1024xi64> loc(#loc36)
    %43 = arith.andi %41, %42 : tensor<1024xi1> loc(#loc37)
    %44 = arith.addi %6, %cst_4 : tensor<1024xi32> loc(#loc38)
    %45 = arith.muli %44, %cst_14 : tensor<1024xi32> loc(#loc39)
    %46 = arith.addi %7, %45 : tensor<1024xi32> loc(#loc40)
    %47 = arith.addi %46, %36 : tensor<1024xi32> loc(#loc41)
    %48 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc42)
    %49 = tt.addptr %48, %47 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc42)
    %50 = tt.load %49, %43, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc43)
    %51 = arith.cmpi sge, %21, %cst_5 : tensor<1024xi64> loc(#loc44)
    %52 = arith.cmpi slt, %21, %cst_3 : tensor<1024xi64> loc(#loc45)
    %53 = arith.andi %51, %52 : tensor<1024xi1> loc(#loc46)
    %54 = arith.addi %6, %cst_2 : tensor<1024xi32> loc(#loc47)
    %55 = arith.muli %54, %cst_14 : tensor<1024xi32> loc(#loc48)
    %56 = arith.addi %7, %55 : tensor<1024xi32> loc(#loc49)
    %57 = arith.addi %56, %36 : tensor<1024xi32> loc(#loc50)
    %58 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc51)
    %59 = tt.addptr %58, %57 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc51)
    %60 = tt.load %59, %53, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc52)
    %61 = arith.cmpi sge, %21, %cst_3 : tensor<1024xi64> loc(#loc53)
    %62 = arith.addi %6, %cst_1 : tensor<1024xi32> loc(#loc54)
    %63 = arith.muli %62, %cst_14 : tensor<1024xi32> loc(#loc55)
    %64 = arith.addi %7, %63 : tensor<1024xi32> loc(#loc56)
    %65 = arith.addi %64, %36 : tensor<1024xi32> loc(#loc57)
    %66 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc58)
    %67 = tt.addptr %66, %65 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc58)
    %68 = tt.load %67, %61, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc59)
    %69 = arith.select %53, %60, %68 : tensor<1024xi1>, tensor<1024xf32> loc(#loc60)
    %70 = arith.select %43, %50, %69 : tensor<1024xi1>, tensor<1024xf32> loc(#loc61)
    %71 = arith.select %32, %40, %70 : tensor<1024xi1>, tensor<1024xf32> loc(#loc62)
    %72 = arith.select %22, %29, %71 : tensor<1024xi1>, tensor<1024xf32> loc(#loc63)
    %73 = arith.subf %72, %11 : tensor<1024xf32> loc(#loc64)
    %74 = arith.addf %14, %cst_0 : tensor<1024xf32> loc(#loc65)
    %75 = tt.extern_elementwise %74 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024xf32>) -> tensor<1024xf32> loc(#loc66)
    %76 = arith.divf %cst, %75 : tensor<1024xf32> loc(#loc67)
    %77 = arith.mulf %73, %76 : tensor<1024xf32> loc(#loc68)
    %78 = arith.mulf %77, %17 : tensor<1024xf32> loc(#loc69)
    %79 = arith.addf %78, %20 : tensor<1024xf32> loc(#loc70)
    %80 = arith.cmpf ogt, %cst_9, %79 : tensor<1024xf32> loc(#loc79)
    %81 = arith.select %80, %cst_9, %79 : tensor<1024xi1>, tensor<1024xf32> loc(#loc80)
    %82 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc74)
    %83 = tt.addptr %82, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc74)
    tt.store %83, %72 : tensor<1024x!tt.ptr<f32>> loc(#loc75)
    %84 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc76)
    %85 = tt.addptr %84, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc76)
    tt.store %85, %81 : tensor<1024x!tt.ptr<f32>> loc(#loc77)
    tt.return loc(#loc78)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":21:28)
#loc3 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":21:33)
#loc4 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":22:36)
#loc5 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":22:23)
#loc6 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":24:21)
#loc7 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":24:28)
#loc8 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":25:19)
#loc9 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":26:19)
#loc10 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":28:31)
#loc11 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":28:36)
#loc12 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":29:31)
#loc13 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":29:36)
#loc14 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":30:31)
#loc15 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":30:36)
#loc16 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":31:31)
#loc17 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":31:36)
#loc18 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":36:18)
#loc19 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:40)
#loc20 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:35)
#loc21 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:52)
#loc22 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:46)
#loc23 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:30)
#loc24 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":37:57)
#loc25 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":38:19)
#loc26 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":40:18)
#loc27 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":41:18)
#loc28 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:49)
#loc29 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:41)
#loc30 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:36)
#loc31 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:60)
#loc32 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:55)
#loc33 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:31)
#loc34 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":42:65)
#loc35 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":43:20)
#loc36 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":45:19)
#loc37 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":46:20)
#loc38 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:49)
#loc39 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:41)
#loc40 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:36)
#loc41 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:55)
#loc42 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:31)
#loc43 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":47:65)
#loc44 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":48:20)
#loc45 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":50:19)
#loc46 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":51:20)
#loc47 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:50)
#loc48 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:41)
#loc49 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:36)
#loc50 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:56)
#loc51 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:31)
#loc52 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":52:66)
#loc53 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":53:20)
#loc54 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:50)
#loc55 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:41)
#loc56 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:36)
#loc57 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:56)
#loc58 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:31)
#loc59 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":56:66)
#loc60 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":57:35)
#loc61 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":58:35)
#loc62 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":59:34)
#loc63 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":60:33)
#loc64 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":61:20)
#loc65 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":63:20)
#loc66 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":64:27)
#loc67 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":66:20)
#loc68 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":69:20)
#loc69 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":70:20)
#loc70 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":71:20)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc72 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":73:42)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc74 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":74:25)
#loc75 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":74:37)
#loc76 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":75:25)
#loc77 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":75:37)
#loc78 = loc("inductor_cache/7x/c7xtmzbp23xlo2qral3g34lflqmjgdzn3cmptszsgly7nnzwjjm3.py":75:4)
#loc79 = loc(callsite(#loc71 at #loc72))
#loc80 = loc(callsite(#loc73 at #loc72))
