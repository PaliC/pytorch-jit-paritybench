#loc = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":37:24)
#loc28 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":44:26)
#loc38 = loc(callsite(#loc1 at #loc22))
#loc41 = loc(callsite(#loc1 at #loc28))
module {
  tt.func public @triton_per_fused_native_group_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":19:0)) attributes {noinline = false} {
    %c524288_i32 = arith.constant 524288 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<1.280000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<1x128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc4)
    %3 = arith.remsi %0, %c64_i32 : i32 loc(#loc5)
    %4 = arith.divsi %0, %c64_i32 : i32 loc(#loc6)
    %5 = arith.remsi %4, %c64_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %c4096_i32 : i32 loc(#loc8)
    %7 = arith.muli %3, %c2_i32 : i32 loc(#loc9)
    %8 = arith.muli %5, %c128_i32 : i32 loc(#loc10)
    %9 = tt.splat %8 : i32 -> tensor<1x128xi32> loc(#loc11)
    %10 = arith.addi %2, %9 : tensor<1x128xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_1 : tensor<1x128xi32> loc(#loc12)
    %12 = arith.muli %11, %cst_0 : tensor<1x128xi32> loc(#loc13)
    %13 = tt.splat %7 : i32 -> tensor<1x128xi32> loc(#loc14)
    %14 = arith.addi %13, %12 : tensor<1x128xi32> loc(#loc14)
    %15 = arith.muli %6, %c524288_i32 : i32 loc(#loc15)
    %16 = tt.splat %15 : i32 -> tensor<1x128xi32> loc(#loc16)
    %17 = arith.addi %14, %16 : tensor<1x128xi32> loc(#loc16)
    %18 = arith.divsi %10, %cst_1 : tensor<1x128xi32> loc(#loc17)
    %19 = arith.addi %17, %18 : tensor<1x128xi32> loc(#loc18)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc19)
    %21 = tt.addptr %20, %19 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc19)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc20)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc22)), %arg7: f32 loc(callsite(#loc1 at #loc22))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc42)
      tt.reduce.return %37 : f32 loc(#loc37)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc37)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %25 = arith.divf %24, %cst : tensor<1x1xf32> loc(#loc25)
    %26 = tt.broadcast %25 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc26)
    %27 = arith.subf %22, %26 : tensor<1x128xf32> loc(#loc26)
    %28 = arith.mulf %27, %27 : tensor<1x128xf32> loc(#loc27)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc28)), %arg7: f32 loc(callsite(#loc1 at #loc28))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc43)
      tt.reduce.return %37 : f32 loc(#loc40)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc40)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc29)
    %31 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc30)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc30)
    tt.store %32, %25 : tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    %33 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    tt.store %34, %30 : tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    %35 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    tt.store %36, %cst : tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":23:28)
#loc3 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":26:26)
#loc4 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":26:34)
#loc5 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":30:19)
#loc6 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":31:21)
#loc7 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":31:27)
#loc8 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":32:19)
#loc9 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:32)
#loc10 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:53)
#loc11 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:49)
#loc12 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:59)
#loc13 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:43)
#loc14 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:37)
#loc15 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:75)
#loc16 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:68)
#loc17 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:98)
#loc18 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:81)
#loc19 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:30)
#loc20 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":34:106)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc24 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":37:27)
#loc25 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":40:18)
#loc26 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":41:18)
#loc27 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":42:19)
#loc29 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":44:29)
#loc30 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":45:25)
#loc31 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":45:36)
#loc32 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":46:25)
#loc33 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":46:37)
#loc34 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":47:25)
#loc35 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":47:36)
#loc36 = loc("inductor_cache/t4/ct4anm4yu4ylhptgvkj7ehfmdxy4jboqevkfylz2xi2o6tytuecy.py":47:4)
#loc37 = loc(callsite(#loc21 at #loc22))
#loc39 = loc(callsite(#loc23 at #loc21))
#loc40 = loc(callsite(#loc21 at #loc28))
#loc42 = loc(callsite(#loc39 at #loc22))
#loc43 = loc(callsite(#loc39 at #loc28))
