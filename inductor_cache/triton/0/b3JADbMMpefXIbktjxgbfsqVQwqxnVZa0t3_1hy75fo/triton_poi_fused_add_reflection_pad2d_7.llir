; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_reflection_pad2d_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 1115136, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 66, !dbg !15
  %16 = mul i32 %15, 66, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 66, !dbg !16
  %18 = srem i32 %15, 66, !dbg !17
  %19 = sdiv i32 %12, 4356, !dbg !18
  %20 = add nsw i32 %.decomposed, -1, !dbg !19
  %21 = add nsw i32 %17, -1, !dbg !19
  %22 = tail call i32 @llvm.abs.i32(i32 %20, i1 true), !dbg !20
  %23 = tail call i32 @llvm.abs.i32(i32 %21, i1 true), !dbg !20
  %24 = add nsw i32 %22, -63, !dbg !21
  %25 = add nsw i32 %23, -63, !dbg !21
  %26 = tail call i32 @llvm.abs.i32(i32 %24, i1 true), !dbg !22
  %27 = tail call i32 @llvm.abs.i32(i32 %25, i1 true), !dbg !22
  %28 = add nsw i32 %18, -1, !dbg !23
  %29 = tail call i32 @llvm.abs.i32(i32 %28, i1 true), !dbg !24
  %30 = add nsw i32 %29, -63, !dbg !25
  %31 = tail call i32 @llvm.abs.i32(i32 %30, i1 true), !dbg !26
  %32 = mul nsw i32 %31, -64, !dbg !27
  %33 = shl nsw i32 %19, 12, !dbg !28
  %reass.sub = or disjoint i32 %33, 4095, !dbg !29
  %34 = sub nuw i32 %reass.sub, %26, !dbg !29
  %35 = add i32 %34, %32, !dbg !30
  %36 = sub nuw i32 %reass.sub, %27, !dbg !29
  %37 = add i32 %36, %32, !dbg !30
  %38 = sext i32 %35 to i64, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !31
  %40 = sext i32 %37 to i64, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !31
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %14) #3, !dbg !32
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %14) #3, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !33
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !33
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %14) #3, !dbg !34
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %14) #3, !dbg !34
  %48 = sext i32 %19 to i64, !dbg !35
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !35
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #3, !dbg !36
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %14) #3, !dbg !36
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %48, !dbg !37
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %14) #3, !dbg !38
  %54 = bitcast i32 %53 to float, !dbg !38
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %14) #3, !dbg !38
  %56 = bitcast i32 %55 to float, !dbg !38
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float 4.096000e+03) #3, !dbg !39
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float 4.096000e+03) #3, !dbg !39
  %59 = fadd float %57, 0x3EE4F8B580000000, !dbg !40
  %60 = fadd float %58, 0x3EE4F8B580000000, !dbg !40
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i = icmp eq i32 %61, 0, !dbg !41
  br i1 %.not.i, label %64, label %62, !dbg !41

62:                                               ; preds = %6
  %63 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %59), !dbg !41
  br label %__nv_rsqrtf.exit, !dbg !41

64:                                               ; preds = %6
  %65 = tail call float @llvm.nvvm.rsqrt.approx.f(float %59), !dbg !41
  br label %__nv_rsqrtf.exit, !dbg !41

__nv_rsqrtf.exit:                                 ; preds = %62, %64
  %.0.i = phi float [ %63, %62 ], [ %65, %64 ], !dbg !41
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i2 = icmp eq i32 %66, 0, !dbg !41
  br i1 %.not.i2, label %69, label %67, !dbg !41

67:                                               ; preds = %__nv_rsqrtf.exit
  %68 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %60), !dbg !41
  br label %__nv_rsqrtf.exit4, !dbg !41

69:                                               ; preds = %__nv_rsqrtf.exit
  %70 = tail call float @llvm.nvvm.rsqrt.approx.f(float %60), !dbg !41
  br label %__nv_rsqrtf.exit4, !dbg !41

__nv_rsqrtf.exit4:                                ; preds = %67, %69
  %.0.i3 = phi float [ %68, %67 ], [ %70, %69 ], !dbg !41
  %71 = bitcast i32 %47 to float, !dbg !34
  %72 = bitcast i32 %51 to float, !dbg !36
  %73 = fsub float %71, %72, !dbg !42
  %74 = bitcast i32 %46 to float, !dbg !34
  %75 = bitcast i32 %50 to float, !dbg !36
  %76 = fsub float %74, %75, !dbg !42
  %77 = bitcast i32 %43 to float, !dbg !32
  %78 = bitcast i32 %42 to float, !dbg !32
  %79 = fmul float %76, %.0.i, !dbg !43
  %80 = fmul float %73, %.0.i3, !dbg !43
  %81 = fadd float %79, %78, !dbg !44
  %82 = fadd float %80, %77, !dbg !44
  %83 = sext i32 %12 to i64, !dbg !45
  %84 = getelementptr float, ptr addrspace(1) %4, i64 %83, !dbg !45
  %85 = bitcast float %81 to i32, !dbg !46
  %86 = bitcast float %82 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %85, i32 %86, ptr addrspace(1) %84, i1 %14) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csxzielijpamyijeorbwsxuy6wn6elavaiusnkibk6hmnojfvfm6.py", directory: "inductor_cache/sx")
!4 = !{ptr @triton_poi_fused_add_reflection_pad2d_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_reflection_pad2d_7, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_reflection_pad2d_7", linkageName: "triton_poi_fused_add_reflection_pad2d_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 82, scope: !7)
!20 = !DILocation(line: 28, column: 75, scope: !7)
!21 = !DILocation(line: 28, column: 63, scope: !7)
!22 = !DILocation(line: 28, column: 55, scope: !7)
!23 = !DILocation(line: 28, column: 136, scope: !7)
!24 = !DILocation(line: 28, column: 129, scope: !7)
!25 = !DILocation(line: 28, column: 117, scope: !7)
!26 = !DILocation(line: 28, column: 109, scope: !7)
!27 = !DILocation(line: 28, column: 97, scope: !7)
!28 = !DILocation(line: 28, column: 149, scope: !7)
!29 = !DILocation(line: 28, column: 91, scope: !7)
!30 = !DILocation(line: 28, column: 144, scope: !7)
!31 = !DILocation(line: 28, column: 30, scope: !7)
!32 = !DILocation(line: 28, column: 154, scope: !7)
!33 = !DILocation(line: 29, column: 30, scope: !7)
!34 = !DILocation(line: 29, column: 154, scope: !7)
!35 = !DILocation(line: 30, column: 30, scope: !7)
!36 = !DILocation(line: 30, column: 35, scope: !7)
!37 = !DILocation(line: 31, column: 30, scope: !7)
!38 = !DILocation(line: 31, column: 35, scope: !7)
!39 = !DILocation(line: 34, column: 18, scope: !7)
!40 = !DILocation(line: 36, column: 18, scope: !7)
!41 = !DILocation(line: 37, column: 27, scope: !7)
!42 = !DILocation(line: 32, column: 18, scope: !7)
!43 = !DILocation(line: 38, column: 19, scope: !7)
!44 = !DILocation(line: 39, column: 19, scope: !7)
!45 = !DILocation(line: 40, column: 25, scope: !7)
!46 = !DILocation(line: 40, column: 37, scope: !7)
!47 = !DILocation(line: 40, column: 4, scope: !7)
