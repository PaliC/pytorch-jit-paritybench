#loc = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0)
#loc1 = loc(unknown)
#loc23 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":48:41)
#loc48 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_red_fused_convolution_native_group_norm_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":19:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.048000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<1x2048xi32> loc(#loc1)
    %cst_5 = arith.constant dense<2048> : tensor<1x2048xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.remsi %0, %c32_i32 : i32 loc(#loc6)
    %6 = arith.cmpi slt, %4, %cst_5 : tensor<1x2048xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_4 : tensor<1x2048xi32> loc(#loc8)
    %8 = arith.muli %0, %c2048_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i32 -> tensor<1x2048xi32> loc(#loc10)
    %10 = arith.addi %4, %9 : tensor<1x2048xi32> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc11)
    %13 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc12)
    %14 = arith.andi %6, %13 : tensor<1x2048xi1> loc(#loc12)
    %15 = tt.load %12, %14, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.muli %5, %c8_i32 : i32 loc(#loc14)
    %17 = tt.splat %16 : i32 -> tensor<1x2048xi32> loc(#loc15)
    %18 = arith.addi %7, %17 : tensor<1x2048xi32> loc(#loc15)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc16)
    %21 = tt.load %20, %14, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.addf %15, %21 : tensor<1x2048xf32> loc(#loc18)
    %23 = arith.select %14, %22, %cst_3 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc19)
    %24 = arith.select %14, %cst_0, %cst_3 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc20)
    tt.store %12, %22, %14 : tensor<1x2048x!tt.ptr<f32>> loc(#loc21)
    %25:3 = "tt.reduce"(%23, %cst_3, %24) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc23)), %arg7: f32 loc(callsite(#loc1 at #loc23)), %arg8: f32 loc(callsite(#loc1 at #loc23)), %arg9: f32 loc(callsite(#loc1 at #loc23)), %arg10: f32 loc(callsite(#loc1 at #loc23)), %arg11: f32 loc(callsite(#loc1 at #loc23))):
      %35 = arith.subf %arg9, %arg6 : f32 loc(#loc61)
      %36 = arith.addf %arg8, %arg11 : f32 loc(#loc62)
      %37 = arith.cmpf oeq, %36, %cst : f32 loc(#loc63)
      %38 = arith.divf %arg11, %36 : f32 loc(#loc64)
      %39 = arith.select %37, %cst, %38 : f32 loc(#loc65)
      %40 = arith.mulf %35, %39 : f32 loc(#loc66)
      %41 = arith.addf %arg6, %40 : f32 loc(#loc67)
      %42 = arith.addf %arg7, %arg10 : f32 loc(#loc68)
      %43 = arith.mulf %35, %35 : f32 loc(#loc69)
      %44 = arith.mulf %43, %arg8 : f32 loc(#loc70)
      %45 = arith.mulf %44, %39 : f32 loc(#loc71)
      %46 = arith.addf %42, %45 : f32 loc(#loc72)
      tt.reduce.return %41, %46, %36 : f32, f32, f32 loc(#loc47)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc47)
    %26 = tt.expand_dims %25#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc36)
    %27 = tt.expand_dims %25#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc37)
    %28 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.store %29, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    %30 = arith.divf %27, %cst_2 : tensor<1x1xf32> loc(#loc40)
    %31 = arith.addf %30, %cst_1 : tensor<1x1xf32> loc(#loc41)
    %32 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc42)
    gpu.barrier loc(#loc43)
    %33 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc44)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.store %34, %32, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":22:28)
#loc3 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":24:21)
#loc4 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":25:25)
#loc5 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":25:33)
#loc6 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":27:19)
#loc7 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":33:25)
#loc8 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":35:23)
#loc9 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":36:48)
#loc10 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":36:43)
#loc11 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":36:38)
#loc12 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":36:61)
#loc13 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":36:53)
#loc14 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":37:41)
#loc15 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":37:39)
#loc16 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":37:34)
#loc17 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":37:46)
#loc18 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":38:22)
#loc19 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":43:60)
#loc20 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":45:64)
#loc21 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":46:53)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc36 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":50:20)
#loc37 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":51:20)
#loc38 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":53:25)
#loc39 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":53:36)
#loc40 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":55:18)
#loc41 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":57:19)
#loc42 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":58:28)
#loc43 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":59:4)
#loc44 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":60:28)
#loc45 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":60:40)
#loc46 = loc("inductor_cache/bx/cbxupx5wq7ma55hhr5fg6fdofnsdzwh3tf6g7ptayeqysozzgiyn.py":60:4)
#loc47 = loc(callsite(#loc22 at #loc23))
#loc49 = loc(callsite(#loc24 at #loc22))
#loc50 = loc(callsite(#loc25 at #loc22))
#loc51 = loc(callsite(#loc26 at #loc22))
#loc52 = loc(callsite(#loc27 at #loc22))
#loc53 = loc(callsite(#loc28 at #loc22))
#loc54 = loc(callsite(#loc29 at #loc22))
#loc55 = loc(callsite(#loc30 at #loc22))
#loc56 = loc(callsite(#loc31 at #loc22))
#loc57 = loc(callsite(#loc32 at #loc22))
#loc58 = loc(callsite(#loc33 at #loc22))
#loc59 = loc(callsite(#loc34 at #loc22))
#loc60 = loc(callsite(#loc35 at #loc22))
#loc61 = loc(callsite(#loc49 at #loc23))
#loc62 = loc(callsite(#loc50 at #loc23))
#loc63 = loc(callsite(#loc51 at #loc23))
#loc64 = loc(callsite(#loc52 at #loc23))
#loc65 = loc(callsite(#loc53 at #loc23))
#loc66 = loc(callsite(#loc54 at #loc23))
#loc67 = loc(callsite(#loc55 at #loc23))
#loc68 = loc(callsite(#loc56 at #loc23))
#loc69 = loc(callsite(#loc57 at #loc23))
#loc70 = loc(callsite(#loc58 at #loc23))
#loc71 = loc(callsite(#loc59 at #loc23))
#loc72 = loc(callsite(#loc60 at #loc23))
