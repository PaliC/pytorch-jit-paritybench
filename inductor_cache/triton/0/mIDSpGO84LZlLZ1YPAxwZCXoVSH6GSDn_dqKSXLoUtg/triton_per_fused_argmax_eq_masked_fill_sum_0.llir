; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_argmax_eq_masked_fill_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 15, !dbg !10
  %7 = shl nuw nsw i32 %6, 2, !dbg !11
  %8 = zext nneg i32 %7 to i64, !dbg !12
  %9 = getelementptr float, ptr addrspace(1) %0, i64 %8, !dbg !12
  %10 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #2, !dbg !13
  %11 = bitcast i32 %10 to float, !dbg !13
  %12 = or disjoint i32 %7, 1, !dbg !14
  %13 = zext nneg i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #2, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = or disjoint i32 %7, 2, !dbg !17
  %18 = zext nneg i32 %17 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #2, !dbg !19
  %21 = bitcast i32 %20 to float, !dbg !19
  %22 = or disjoint i32 %7, 3, !dbg !20
  %23 = zext nneg i32 %22 to i64, !dbg !21
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #2, !dbg !22
  %26 = bitcast i32 %25 to float, !dbg !22
  %27 = zext nneg i32 %6 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #2, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = fcmp ogt float %11, %16, !dbg !25
  %32 = fcmp oeq float %11, %16, !dbg !26
  %33 = fcmp uno float %11, 0.000000e+00, !dbg !27
  %34 = fcmp uno float %16, 0.000000e+00, !dbg !28
  %35 = xor i1 %34, true, !dbg !29
  %36 = and i1 %33, %35, !dbg !29
  %37 = or i1 %31, %36, !dbg !30
  %38 = and i1 %33, %34, !dbg !31
  %39 = or i1 %32, %38, !dbg !32
  %40 = or i1 %37, %39, !dbg !33
  %41 = select i1 %40, float %11, float %16, !dbg !34
  %not. = xor i1 %40, true, !dbg !35
  %42 = fcmp ogt float %41, %21, !dbg !36
  %43 = fcmp oeq float %41, %21, !dbg !37
  %44 = fcmp uno float %41, 0.000000e+00, !dbg !38
  %45 = fcmp uno float %21, 0.000000e+00, !dbg !39
  %46 = xor i1 %45, true, !dbg !40
  %47 = and i1 %44, %46, !dbg !40
  %48 = or i1 %42, %47, !dbg !41
  %49 = and i1 %45, %44, !dbg !42
  %50 = or i1 %43, %49, !dbg !43
  %51 = or i1 %48, %50, !dbg !44
  %52 = select i1 %51, float %41, float %21, !dbg !45
  %53 = fcmp ogt float %52, %26, !dbg !46
  %54 = fcmp oeq float %52, %26, !dbg !47
  %55 = fcmp uno float %52, 0.000000e+00, !dbg !48
  %56 = fcmp uno float %26, 0.000000e+00, !dbg !49
  %57 = xor i1 %56, true, !dbg !50
  %58 = and i1 %55, %57, !dbg !50
  %59 = or i1 %53, %58, !dbg !51
  %60 = and i1 %56, %55, !dbg !52
  %61 = or i1 %54, %60, !dbg !53
  %62 = or i1 %59, %61, !dbg !54
  %63 = fcmp une float %30, 0.000000e+00, !dbg !55
  %64 = uitofp i1 %not. to float, !dbg !56
  %65 = select i1 %51, float %64, float 2.000000e+00, !dbg !57
  %66 = select i1 %62, float %65, float 3.000000e+00, !dbg !58
  %67 = fcmp oeq float %66, %30, !dbg !59
  %68 = select i1 %63, i1 %67, i1 false, !dbg !60
  %69 = zext i1 %68 to i64, !dbg !61
  %70 = zext i1 %68 to i32, !dbg !62
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 8, i32 31), !dbg !62
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 0, i32 8, i32 31), !dbg !62
  %73 = insertelement <2 x i32> poison, i32 %71, i64 0, !dbg !62
  %74 = insertelement <2 x i32> %73, i32 %72, i64 1, !dbg !62
  %75 = bitcast <2 x i32> %74 to i64, !dbg !62
  %76 = add i64 %69, %75, !dbg !66
  %extelt.offset = lshr i64 %76, 32, !dbg !62
  %77 = trunc nuw i64 %extelt.offset to i32, !dbg !62
  %78 = trunc i64 %76 to i32, !dbg !62
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 4, i32 31), !dbg !62
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 4, i32 31), !dbg !62
  %81 = insertelement <2 x i32> poison, i32 %79, i64 0, !dbg !62
  %82 = insertelement <2 x i32> %81, i32 %80, i64 1, !dbg !62
  %83 = bitcast <2 x i32> %82 to i64, !dbg !62
  %84 = add i64 %76, %83, !dbg !66
  %extelt.offset2 = lshr i64 %84, 32, !dbg !62
  %85 = trunc nuw i64 %extelt.offset2 to i32, !dbg !62
  %86 = trunc i64 %84 to i32, !dbg !62
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 2, i32 31), !dbg !62
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 2, i32 31), !dbg !62
  %89 = insertelement <2 x i32> poison, i32 %87, i64 0, !dbg !62
  %90 = insertelement <2 x i32> %89, i32 %88, i64 1, !dbg !62
  %91 = bitcast <2 x i32> %90 to i64, !dbg !62
  %92 = add i64 %84, %91, !dbg !66
  %extelt.offset3 = lshr i64 %92, 32, !dbg !62
  %93 = trunc nuw i64 %extelt.offset3 to i32, !dbg !62
  %94 = trunc i64 %92 to i32, !dbg !62
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 1, i32 31), !dbg !62
  %96 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !62
  %97 = insertelement <2 x i32> poison, i32 %95, i64 0, !dbg !62
  %98 = insertelement <2 x i32> %97, i32 %96, i64 1, !dbg !62
  %99 = bitcast <2 x i32> %98 to i64, !dbg !62
  %100 = add i64 %92, %99, !dbg !66
  %101 = and i32 %5, 63, !dbg !68
  %102 = icmp eq i32 %101, 0, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %100, ptr addrspace(1) %2, i1 %102) #2, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py", directory: "inductor_cache/4z")
!4 = !{ptr @triton_per_fused_argmax_eq_masked_fill_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_argmax_eq_masked_fill_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_argmax_eq_masked_fill_sum_0", linkageName: "triton_per_fused_argmax_eq_masked_fill_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 30, column: 32, scope: !7)
!12 = !DILocation(line: 30, column: 30, scope: !7)
!13 = !DILocation(line: 30, column: 37, scope: !7)
!14 = !DILocation(line: 31, column: 34, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 41, scope: !7)
!17 = !DILocation(line: 32, column: 35, scope: !7)
!18 = !DILocation(line: 32, column: 31, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 31, scope: !7)
!22 = !DILocation(line: 33, column: 42, scope: !7)
!23 = !DILocation(line: 34, column: 31, scope: !7)
!24 = !DILocation(line: 34, column: 36, scope: !7)
!25 = !DILocation(line: 35, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 19, scope: !7)
!27 = !DILocation(line: 37, column: 19, scope: !7)
!28 = !DILocation(line: 38, column: 19, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 18, scope: !7)
!31 = !DILocation(line: 41, column: 18, scope: !7)
!32 = !DILocation(line: 42, column: 18, scope: !7)
!33 = !DILocation(line: 47, column: 19, scope: !7)
!34 = !DILocation(line: 48, column: 34, scope: !7)
!35 = !DILocation(line: 49, column: 35, scope: !7)
!36 = !DILocation(line: 50, column: 20, scope: !7)
!37 = !DILocation(line: 51, column: 21, scope: !7)
!38 = !DILocation(line: 52, column: 21, scope: !7)
!39 = !DILocation(line: 53, column: 21, scope: !7)
!40 = !DILocation(line: 54, column: 20, scope: !7)
!41 = !DILocation(line: 55, column: 20, scope: !7)
!42 = !DILocation(line: 56, column: 20, scope: !7)
!43 = !DILocation(line: 57, column: 20, scope: !7)
!44 = !DILocation(line: 61, column: 20, scope: !7)
!45 = !DILocation(line: 62, column: 35, scope: !7)
!46 = !DILocation(line: 64, column: 20, scope: !7)
!47 = !DILocation(line: 65, column: 21, scope: !7)
!48 = !DILocation(line: 66, column: 21, scope: !7)
!49 = !DILocation(line: 67, column: 21, scope: !7)
!50 = !DILocation(line: 68, column: 20, scope: !7)
!51 = !DILocation(line: 69, column: 20, scope: !7)
!52 = !DILocation(line: 70, column: 20, scope: !7)
!53 = !DILocation(line: 71, column: 20, scope: !7)
!54 = !DILocation(line: 75, column: 20, scope: !7)
!55 = !DILocation(line: 79, column: 21, scope: !7)
!56 = !DILocation(line: 80, column: 21, scope: !7)
!57 = !DILocation(line: 63, column: 35, scope: !7)
!58 = !DILocation(line: 77, column: 35, scope: !7)
!59 = !DILocation(line: 81, column: 21, scope: !7)
!60 = !DILocation(line: 83, column: 35, scope: !7)
!61 = !DILocation(line: 84, column: 21, scope: !7)
!62 = !DILocation(line: 267, column: 36, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !7, file: !64, discriminator: 0)
!64 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!65 = !DILocation(line: 86, column: 26, scope: !7)
!66 = !DILocation(line: 256, column: 15, scope: !67, inlinedAt: !65)
!67 = distinct !DILexicalBlockFile(scope: !63, file: !64, discriminator: 0)
!68 = !DILocation(line: 87, column: 68, scope: !7)
!69 = !DILocation(line: 87, column: 4, scope: !7)
