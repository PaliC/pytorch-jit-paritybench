#loc = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":19:0)
#loc1 = loc(unknown)
#loc60 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":86:26)
#loc67 = loc(callsite(#loc1 at #loc60))
module {
  tt.func public @triton_per_fused_argmax_eq_masked_fill_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<false> : tensor<1x16xi1> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<1x16xi64> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1x16xi64> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<1x16xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<1x16xi64> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = arith.muli %1, %cst_8 : tensor<1x16xi32> loc(#loc4)
    %3 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %2 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc5)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.addi %2, %cst_7 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.addptr %3, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %2, %cst_6 : tensor<1x16xi32> loc(#loc10)
    %10 = tt.addptr %3, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc11)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %12 = arith.addi %2, %cst_5 : tensor<1x16xi32> loc(#loc13)
    %13 = tt.addptr %3, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc16)
    %16 = tt.addptr %15, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc16)
    %17 = tt.load %16 : tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.cmpf ogt, %5, %8 : tensor<1x16xf32> loc(#loc18)
    %19 = arith.cmpf oeq, %5, %8 : tensor<1x16xf32> loc(#loc19)
    %20 = arith.cmpf une, %5, %5 : tensor<1x16xf32> loc(#loc20)
    %21 = arith.cmpf une, %8, %8 : tensor<1x16xf32> loc(#loc21)
    %22 = arith.cmpi ugt, %20, %21 : tensor<1x16xi1> loc(#loc22)
    %23 = arith.ori %18, %22 : tensor<1x16xi1> loc(#loc23)
    %24 = arith.andi %20, %21 : tensor<1x16xi1> loc(#loc24)
    %25 = arith.ori %19, %24 : tensor<1x16xi1> loc(#loc25)
    %26 = arith.ori %23, %25 : tensor<1x16xi1> loc(#loc26)
    %27 = arith.select %26, %5, %8 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc27)
    %28 = arith.select %26, %cst_4, %cst_3 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc28)
    %29 = arith.cmpf ogt, %27, %11 : tensor<1x16xf32> loc(#loc29)
    %30 = arith.cmpf oeq, %27, %11 : tensor<1x16xf32> loc(#loc30)
    %31 = arith.cmpf une, %27, %27 : tensor<1x16xf32> loc(#loc31)
    %32 = arith.cmpf une, %11, %11 : tensor<1x16xf32> loc(#loc32)
    %33 = arith.cmpi ugt, %31, %32 : tensor<1x16xi1> loc(#loc33)
    %34 = arith.ori %29, %33 : tensor<1x16xi1> loc(#loc34)
    %35 = arith.andi %31, %32 : tensor<1x16xi1> loc(#loc35)
    %36 = arith.ori %30, %35 : tensor<1x16xi1> loc(#loc36)
    %37 = arith.cmpi slt, %28, %cst_2 : tensor<1x16xi64> loc(#loc37)
    %38 = arith.andi %36, %37 : tensor<1x16xi1> loc(#loc38)
    %39 = arith.ori %34, %38 : tensor<1x16xi1> loc(#loc39)
    %40 = arith.select %39, %27, %11 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc40)
    %41 = arith.select %39, %28, %cst_2 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc41)
    %42 = arith.cmpf ogt, %40, %14 : tensor<1x16xf32> loc(#loc42)
    %43 = arith.cmpf oeq, %40, %14 : tensor<1x16xf32> loc(#loc43)
    %44 = arith.cmpf une, %40, %40 : tensor<1x16xf32> loc(#loc44)
    %45 = arith.cmpf une, %14, %14 : tensor<1x16xf32> loc(#loc45)
    %46 = arith.cmpi ugt, %44, %45 : tensor<1x16xi1> loc(#loc46)
    %47 = arith.ori %42, %46 : tensor<1x16xi1> loc(#loc47)
    %48 = arith.andi %44, %45 : tensor<1x16xi1> loc(#loc48)
    %49 = arith.ori %43, %48 : tensor<1x16xi1> loc(#loc49)
    %50 = arith.cmpi slt, %41, %cst_1 : tensor<1x16xi64> loc(#loc50)
    %51 = arith.andi %49, %50 : tensor<1x16xi1> loc(#loc51)
    %52 = arith.ori %47, %51 : tensor<1x16xi1> loc(#loc52)
    %53 = arith.select %52, %41, %cst_1 : tensor<1x16xi1>, tensor<1x16xi64> loc(#loc53)
    %54 = arith.cmpf oeq, %17, %cst_0 : tensor<1x16xf32> loc(#loc54)
    %55 = arith.sitofp %53 : tensor<1x16xi64> to tensor<1x16xf32> loc(#loc55)
    %56 = arith.cmpf oeq, %55, %17 : tensor<1x16xf32> loc(#loc56)
    %57 = arith.select %54, %cst, %56 : tensor<1x16xi1>, tensor<1x16xi1> loc(#loc57)
    %58 = arith.extui %57 : tensor<1x16xi1> to tensor<1x16xi64> loc(#loc58)
    %59 = "tt.reduce"(%58) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i64 loc(callsite(#loc1 at #loc60)), %arg5: i64 loc(callsite(#loc1 at #loc60))):
      %63 = arith.addi %arg4, %arg5 : i64 loc(#loc69)
      tt.reduce.return %63 : i64 loc(#loc66)
    }) : (tensor<1x16xi64>) -> tensor<1xi64> loc(#loc66)
    %60 = tt.expand_dims %59 {axis = 1 : i32} : tensor<1xi64> -> tensor<1x1xi64> loc(#loc62)
    %61 = tt.addptr %arg2, %c0_i32 : !tt.ptr<i64>, i32 loc(#loc63)
    %62 = tt.splat %61 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc63)
    tt.store %62, %60 : tensor<1x1x!tt.ptr<i64>> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":26:26)
#loc3 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":26:34)
#loc4 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":30:32)
#loc5 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":30:30)
#loc6 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":30:37)
#loc7 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":31:34)
#loc8 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":31:30)
#loc9 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":31:41)
#loc10 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":32:35)
#loc11 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":32:31)
#loc12 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":32:42)
#loc13 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":33:35)
#loc14 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":33:31)
#loc15 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":33:42)
#loc16 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":34:31)
#loc17 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":34:36)
#loc18 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":35:18)
#loc19 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":36:19)
#loc20 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":37:19)
#loc21 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":38:19)
#loc22 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":39:18)
#loc23 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":40:18)
#loc24 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":41:18)
#loc25 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":42:18)
#loc26 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":47:19)
#loc27 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":48:34)
#loc28 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":49:35)
#loc29 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":50:20)
#loc30 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":51:21)
#loc31 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":52:21)
#loc32 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":53:21)
#loc33 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":54:20)
#loc34 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":55:20)
#loc35 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":56:20)
#loc36 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":57:20)
#loc37 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":59:20)
#loc38 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":60:20)
#loc39 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":61:20)
#loc40 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":62:35)
#loc41 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":63:35)
#loc42 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":64:20)
#loc43 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":65:21)
#loc44 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":66:21)
#loc45 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":67:21)
#loc46 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":68:20)
#loc47 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":69:20)
#loc48 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":70:20)
#loc49 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":71:20)
#loc50 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":73:20)
#loc51 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":74:20)
#loc52 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":75:20)
#loc53 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":77:35)
#loc54 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":79:21)
#loc55 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":80:21)
#loc56 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":81:21)
#loc57 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":83:35)
#loc58 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":84:21)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc62 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":86:29)
#loc63 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":87:25)
#loc64 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":87:68)
#loc65 = loc("inductor_cache/4z/c4z2dvnjr3qeyeqem5qsp6kjtdl2crrzpvny2mt4xnfuvx2fzs65.py":87:4)
#loc66 = loc(callsite(#loc59 at #loc60))
#loc68 = loc(callsite(#loc61 at #loc59))
#loc69 = loc(callsite(#loc68 at #loc60))
