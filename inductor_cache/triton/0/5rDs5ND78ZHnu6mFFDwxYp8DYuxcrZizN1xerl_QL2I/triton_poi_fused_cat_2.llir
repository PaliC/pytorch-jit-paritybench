; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i117 = alloca [7 x i32], align 4
  %result.i.i.i.i64 = alloca [7 x i32], align 4
  %result.i.i.i.i9 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %10 = sdiv i32 %.frozen, 128, !dbg !14
  %11 = mul i32 %10, 128, !dbg !15
  %.decomposed = sub i32 %.frozen, %11, !dbg !15
  %12 = icmp slt i32 %.decomposed, 64, !dbg !16
  %.lhs.trunc = trunc nsw i32 %.decomposed to i8, !dbg !17
  %13 = sdiv i8 %.lhs.trunc, 2, !dbg !18
  %14 = mul i8 %13, 2, !dbg !17
  %.decomposed484 = sub i8 %.lhs.trunc, %14, !dbg !17
  %15 = icmp slt i8 %.decomposed484, 1, !dbg !19
  %16 = and i1 %12, %15, !dbg !20
  %17 = sext i32 %10 to i64, !dbg !21
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %16, i32 0, i1 %16) #5, !dbg !22
  %20 = bitcast i32 %19 to float, !dbg !22
  %21 = srem i8 %13, 32, !dbg !23
  %.sext447 = sext i8 %21 to i32, !dbg !23
  %22 = shl nsw i32 %.sext447, 1, !dbg !24
  %23 = sitofp i32 %22 to float, !dbg !25
  %24 = fmul float %23, 5.000000e-01, !dbg !26
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i = icmp eq i32 %25, 0, !dbg !27
  %26 = tail call float @llvm.nvvm.floor.ftz.f(float %24), !dbg !27
  %27 = tail call float @llvm.nvvm.floor.f(float %24), !dbg !27
  %.0.i = select i1 %.not.i, float %27, float %26, !dbg !27
  %28 = fmul float %.0.i, 2.000000e+00, !dbg !28
  %29 = fmul float %28, 1.562500e-02, !dbg !29
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not.i172 = icmp eq i32 %31, 0, !dbg !30
  %32 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #5, !dbg !30
  %33 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #5, !dbg !30
  %.09.i173 = select i1 %.not.i172, float %33, float %32, !dbg !30
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not12.i = icmp eq i32 %34, 0, !dbg !30
  %35 = fcmp olt float %.09.i173, 0x3810000000000000, !dbg !30
  %36 = fmul float %.09.i173, 0x4170000000000000, !dbg !30
  %37 = select i1 %.not12.i, i1 %35, i1 false, !dbg !30
  %.116.i = select i1 %37, float %36, float %.09.i173, !dbg !30
  %expo.i.i.1.i = select i1 %37, float -1.510000e+02, float -1.270000e+02, !dbg !30
  %38 = bitcast float %.116.i to i32, !dbg !30
  %39 = and i32 %38, 8388607, !dbg !30
  %40 = or disjoint i32 %39, 1065353216, !dbg !30
  %41 = bitcast i32 %40 to float, !dbg !30
  %42 = lshr i32 %38, 23, !dbg !30
  %43 = uitofp nneg i32 %42 to float, !dbg !30
  %44 = fadd float %expo.i.i.1.i, %43, !dbg !30
  %45 = fcmp ogt float %41, 0x3FF6A09E60000000, !dbg !30
  %46 = fmul float %41, 5.000000e-01, !dbg !30
  %47 = fadd float %44, 1.000000e+00, !dbg !30
  %expo.i.i.2.i = select i1 %45, float %47, float %44, !dbg !30
  %m.i.i.0.i = select i1 %45, float %46, float %41, !dbg !30
  %48 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !30
  %49 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !30
  %50 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %49) #6, !dbg !30, !srcloc !31
  %51 = fmul float %48, 2.000000e+00, !dbg !30
  %52 = fmul float %50, %51, !dbg !30
  %53 = fmul float %52, %52, !dbg !30
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not13.i = icmp eq i32 %54, 0, !dbg !30
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %53, float 0x3F8995EC60000000) #5, !dbg !30
  %56 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %53, float 0x3F8995EC60000000) #5, !dbg !30
  %.020.i = select i1 %.not13.i, float %56, float %55, !dbg !30
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not14.i = icmp eq i32 %57, 0, !dbg !30
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %53, float 0x3FB55557A0000000) #5, !dbg !30
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %53, float 0x3FB55557A0000000) #5, !dbg !30
  %.021.i = select i1 %.not14.i, float %59, float %58, !dbg !30
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not15.i174 = icmp eq i32 %60, 0, !dbg !30
  %61 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %53) #5, !dbg !30
  %62 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %53) #5, !dbg !30
  %.022.i = select i1 %.not15.i174, float %62, float %61, !dbg !30
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not16.i175 = icmp eq i32 %63, 0, !dbg !30
  %64 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %52) #5, !dbg !30
  %65 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %52) #5, !dbg !30
  %.024.i = select i1 %.not16.i175, float %65, float %64, !dbg !30
  %66 = fsub float %48, %52, !dbg !30
  %67 = fmul float %66, 2.000000e+00, !dbg !30
  %68 = fneg float %52, !dbg !30
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not17.i176 = icmp eq i32 %69, 0, !dbg !30
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float %48, float %67) #5, !dbg !30
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float %48, float %67) #5, !dbg !30
  %.025.i = select i1 %.not17.i176, float %71, float %70, !dbg !30
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not18.i177 = icmp eq i32 %72, 0, !dbg !30
  %73 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %50, float %.025.i) #5, !dbg !30
  %74 = tail call float @llvm.nvvm.mul.rn.f(float %50, float %.025.i) #5, !dbg !30
  %.026.i = select i1 %.not18.i177, float %74, float %73, !dbg !30
  %75 = fadd float %52, %.024.i, !dbg !30
  %76 = fsub float %52, %75, !dbg !30
  %77 = fadd float %.024.i, %76, !dbg !30
  %78 = fadd float %.026.i, %77, !dbg !30
  %79 = fadd float %75, %78, !dbg !30
  %80 = fsub float %75, %79, !dbg !30
  %81 = fadd float %78, %80, !dbg !30
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not19.i178 = icmp eq i32 %82, 0, !dbg !30
  %83 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !30
  %84 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !30
  %.019.i = select i1 %.not19.i178, float %84, float %83, !dbg !30
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not20.i179 = icmp eq i32 %85, 0, !dbg !30
  %86 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !30
  %87 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !30
  %.018.i = select i1 %.not20.i179, float %87, float %86, !dbg !30
  %88 = fadd float %.019.i, %79, !dbg !30
  %89 = fsub float %.019.i, %88, !dbg !30
  %90 = fadd float %79, %89, !dbg !30
  %91 = fadd float %81, %90, !dbg !30
  %92 = fadd float %.018.i, %91, !dbg !30
  %93 = fadd float %88, %92, !dbg !30
  %94 = fsub float %88, %93, !dbg !30
  %95 = fadd float %92, %94, !dbg !30
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not21.i = icmp eq i32 %96, 0, !dbg !30
  %97 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #5, !dbg !30
  %98 = tail call float @llvm.nvvm.fabs.f(float %29) #5, !dbg !30
  %.027.i = select i1 %.not21.i, float %98, float %97, !dbg !30
  %99 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !30
  %100 = fmul float %29, 0x3F20000000000000, !dbg !30
  %.013.i180 = select i1 %99, float %100, float %29, !dbg !30
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not22.i = icmp eq i32 %101, 0, !dbg !30
  %102 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i180, float %93) #5, !dbg !30
  %103 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i180, float %93) #5, !dbg !30
  %.028.i = select i1 %.not22.i, float %103, float %102, !dbg !30
  %104 = fneg float %.028.i, !dbg !30
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not23.i = icmp eq i32 %105, 0, !dbg !30
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i180, float %93, float %104) #5, !dbg !30
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i180, float %93, float %104) #5, !dbg !30
  %.029.i = select i1 %.not23.i, float %107, float %106, !dbg !30
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not24.i = icmp eq i32 %108, 0, !dbg !30
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i180, float %95, float %.029.i) #5, !dbg !30
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i180, float %95, float %.029.i) #5, !dbg !30
  %.030.i = select i1 %.not24.i, float %110, float %109, !dbg !30
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not25.i = icmp eq i32 %111, 0, !dbg !30
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %93, float %.030.i) #5, !dbg !30
  %113 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %93, float %.030.i) #5, !dbg !30
  %.031.i = select i1 %.not25.i, float %113, float %112, !dbg !30
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not26.i = icmp eq i32 %114, 0, !dbg !30
  %115 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #5, !dbg !30
  %116 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #5, !dbg !30
  %.032.i = select i1 %.not26.i, float %116, float %115, !dbg !30
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %119 = bitcast float %.032.i to i32, !dbg !30
  %120 = icmp eq i32 %119, 1118925336, !dbg !30
  %prod.i.145.0.i = select i1 %120, float 0x40562E42E0000000, float %.032.i, !dbg !30
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not29.i183 = icmp eq i32 %121, 0, !dbg !30
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !30
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !30
  %.017.i = select i1 %.not29.i183, float %123, float %122, !dbg !30
  %124 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #5, !dbg !30
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not30.i184 = icmp eq i32 %125, 0, !dbg !30
  %126 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #5, !dbg !30
  %127 = tail call float @llvm.nvvm.fabs.f(float %124) #5, !dbg !30
  %.023.i = select i1 %.not30.i184, float %127, float %126, !dbg !30
  %128 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !30
  %129 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %124), !dbg !30
  %j.i.i.0.i = select i1 %128, float %129, float %124, !dbg !30
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not31.i185 = icmp eq i32 %130, 0, !dbg !30
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !30
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !30
  %.035.i = select i1 %.not31.i185, float %132, float %131, !dbg !30
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not32.i186 = icmp eq i32 %133, 0, !dbg !30
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !30
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !30
  %.036.i = select i1 %.not32.i186, float %135, float %134, !dbg !30
  %136 = fmul float %.036.i, 0x3FF7154760000000, !dbg !30
  %137 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !30
  %138 = bitcast float %137 to i32, !dbg !30
  %139 = shl i32 %138, 23, !dbg !30
  %140 = bitcast i32 %139 to float, !dbg !30
  %141 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %136) #5, !dbg !30
  %142 = fmul float %141, %140, !dbg !30
  %143 = fcmp une float %142, 0x7FF0000000000000, !dbg !30
  br i1 %143, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !30

__internal_fmad.exit.i.i:                         ; preds = %4
  %.not28.i182 = icmp eq i32 %118, 0, !dbg !30
  %.not27.i181 = icmp eq i32 %117, 0, !dbg !30
  %144 = fneg float %.032.i, !dbg !30
  %145 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %144) #5, !dbg !30
  %146 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %144) #5, !dbg !30
  %.033.i = select i1 %.not27.i181, float %145, float %146, !dbg !30
  %147 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #5, !dbg !30
  %148 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #5, !dbg !30
  %.034.i = select i1 %.not28.i182, float %147, float %148, !dbg !30
  %149 = fadd float %.034.i, 0x3EE0000000000000, !dbg !30
  %prod.i.044.0.i = select i1 %120, float %149, float %.034.i, !dbg !30
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not33.i197 = icmp eq i32 %150, 0, !dbg !30
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float %prod.i.044.0.i, float %142) #5, !dbg !30
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %142, float %prod.i.044.0.i, float %142) #5, !dbg !30
  %.014.i = select i1 %.not33.i197, float %152, float %151, !dbg !30
  br label %__internal_powf_corner_cases.exit.i, !dbg !30

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %4
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %4 ], !dbg !30
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not34.i187 = icmp eq i32 %153, 0, !dbg !30
  %.01.i188 = select i1 %.not34.i187, float %33, float %32, !dbg !30
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not35.i189 = icmp eq i32 %154, 0, !dbg !30
  %.02.i190 = select i1 %.not35.i189, float %98, float %97, !dbg !30
  %155 = fadd float %.01.i188, %.02.i190, !dbg !30
  %156 = bitcast float %155 to i32, !dbg !30
  %157 = icmp sgt i32 %156, 2139095039, !dbg !30
  br i1 %157, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !30

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not36.i191 = icmp eq i32 %158, 0, !dbg !30
  %.06.i192 = select i1 %.not36.i191, float %33, float %32, !dbg !30
  %159 = fcmp uno float %.06.i192, 0.000000e+00, !dbg !30
  br i1 %159, label %162, label %__nv_isnanf.exit11.i.i, !dbg !30

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not37.i = icmp eq i32 %160, 0, !dbg !30
  %.07.i193 = select i1 %.not37.i, float %98, float %97, !dbg !30
  %161 = fcmp uno float %.07.i193, 0.000000e+00, !dbg !30
  br i1 %161, label %162, label %__nv_isinff.exit8.i.i, !dbg !30

162:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %163 = fadd float %29, 1.000000e+04, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not38.i = icmp eq i32 %164, 0, !dbg !30
  %.05.i194 = select i1 %.not38.i, float %98, float %97, !dbg !30
  %165 = fcmp oeq float %.05.i194, 0x7FF0000000000000, !dbg !30
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !30
  %.not40.i = icmp eq i32 %166, 0, !dbg !30
  %.04.i196 = select i1 %.not40.i, float %33, float %32, !dbg !30
  br i1 %165, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !30

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %167 = fcmp ogt float %.04.i196, 1.000000e+00, !dbg !30
  %ti.i.0.i = select i1 %167, i32 2139095040, i32 0, !dbg !30
  %168 = fcmp olt float %29, 0.000000e+00, !dbg !30
  %169 = xor i32 %ti.i.0.i, 2139095040, !dbg !30
  %ti.i.1.i = select i1 %168, i32 %169, i32 %ti.i.0.i, !dbg !30
  %170 = bitcast i32 %ti.i.1.i to float, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %171 = fcmp oeq float %.04.i196, 0x7FF0000000000000, !dbg !30
  br i1 %171, label %172, label %__nv_powf.exit, !dbg !30

172:                                              ; preds = %__nv_isinff.exit.i.i
  %173 = fcmp oge float %29, 0.000000e+00, !dbg !30
  %174 = select i1 %173, float 0x7FF0000000000000, float 0.000000e+00, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %162, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %172
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %163, %162 ], [ %170, %__nv_fabsf.exit5.i.i ], [ %174, %172 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !30
  %175 = fcmp oeq float %29, 0.000000e+00, !dbg !30
  %t.0.i = select i1 %175, float 1.000000e+00, float %.3.i, !dbg !30
  %176 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %20, float %t.0.i) #5, !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  %177 = fmul float %176, 0x3FE45F3060000000, !dbg !33
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not.i7 = icmp eq i32 %178, 0, !dbg !33
  %179 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %177) #5, !dbg !33
  %180 = tail call i32 @llvm.nvvm.f2i.rn(float %177) #5, !dbg !33
  %.01.i = select i1 %.not.i7, i32 %180, i32 %179, !dbg !33
  %181 = sitofp i32 %.01.i to float, !dbg !33
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not15.i = icmp eq i32 %182, 0, !dbg !33
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %181, float 0xBFF921FB40000000, float %176) #5, !dbg !33
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %181, float 0xBFF921FB40000000, float %176) #5, !dbg !33
  %.02.i = select i1 %.not15.i, float %184, float %183, !dbg !33
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not16.i = icmp eq i32 %185, 0, !dbg !33
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %181, float 0xBE74442D00000000, float %.02.i) #5, !dbg !33
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %181, float 0xBE74442D00000000, float %.02.i) #5, !dbg !33
  %.03.i = select i1 %.not16.i, float %187, float %186, !dbg !33
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not17.i = icmp eq i32 %188, 0, !dbg !33
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %181, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !33
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %181, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !33
  %.04.i = select i1 %.not17.i, float %190, float %189, !dbg !33
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not18.i = icmp eq i32 %191, 0, !dbg !33
  %192 = tail call float @llvm.nvvm.fabs.ftz.f(float %176) #5, !dbg !33
  %193 = tail call float @llvm.nvvm.fabs.f(float %176) #5, !dbg !33
  %.06.i = select i1 %.not18.i, float %193, float %192, !dbg !33
  %194 = fcmp ult float %.06.i, 1.056150e+05, !dbg !33
  br i1 %194, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !33

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_powf.exit
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not19.i = icmp eq i32 %195, 0, !dbg !33
  %.07.i = select i1 %.not19.i, float %193, float %192, !dbg !33
  %196 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !33
  br i1 %196, label %__nv_fmul_rn.exit.i.i.i, label %200, !dbg !33

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not27.i = icmp eq i32 %197, 0, !dbg !33
  %198 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %176, float 0.000000e+00) #5, !dbg !33
  %199 = tail call float @llvm.nvvm.mul.rn.f(float %176, float 0.000000e+00) #5, !dbg !33
  %.08.i = select i1 %.not27.i, float %199, float %198, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

200:                                              ; preds = %__nv_isinff.exit.i.i.i
  %201 = bitcast float %176 to i32, !dbg !33
  %202 = lshr i32 %201, 23, !dbg !33
  %203 = and i32 %202, 224, !dbg !33
  %204 = add nsw i32 %203, -128, !dbg !33
  %205 = shl i32 %201, 8, !dbg !33
  %206 = or i32 %205, -2147483648, !dbg !33
  %207 = lshr exact i32 %204, 5, !dbg !33
  br label %208, !dbg !33

208:                                              ; preds = %200, %208
  %indvars.iv = phi i64 [ 0, %200 ], [ %indvars.iv.next, %208 ]
  %hi.i.i.i.0.i448 = phi i32 [ 0, %200 ], [ %213, %208 ]
  %209 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !33
  %210 = load i32, ptr addrspace(1) %209, align 4, !dbg !33
  %211 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %210, i32 %206, i32 %hi.i.i.i.0.i448) #6, !dbg !33, !srcloc !34
  %212 = extractvalue { i32, i32 } %211, 0, !dbg !33
  %213 = extractvalue { i32, i32 } %211, 1, !dbg !33
  %214 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !33
  store i32 %212, ptr %214, align 4, !dbg !33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !33
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !33
  br i1 %exitcond.not, label %215, label %208, !dbg !33, !llvm.loop !35

215:                                              ; preds = %208
  %216 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !33
  store i32 %213, ptr %216, align 4, !dbg !33
  %217 = and i32 %202, 31, !dbg !33
  %218 = sub nsw i32 6, %207, !dbg !33
  %219 = sext i32 %218 to i64, !dbg !33
  %220 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %219, !dbg !33
  %221 = load i32, ptr %220, align 4, !dbg !33
  %222 = sub nsw i32 5, %207, !dbg !33
  %223 = sext i32 %222 to i64, !dbg !33
  %224 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %223, !dbg !33
  %225 = load i32, ptr %224, align 4, !dbg !33
  %.not20.i = icmp eq i32 %217, 0, !dbg !33
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %226, !dbg !33

226:                                              ; preds = %215
  %227 = sub nsw i32 4, %207, !dbg !33
  %228 = sub nuw nsw i32 32, %217, !dbg !33
  %229 = shl i32 %221, %217, !dbg !33
  %230 = lshr i32 %225, %228, !dbg !33
  %231 = add i32 %230, %229, !dbg !33
  %232 = shl i32 %225, %217, !dbg !33
  %233 = sext i32 %227 to i64, !dbg !33
  %234 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %233, !dbg !33
  %235 = load i32, ptr %234, align 4, !dbg !33
  %236 = lshr i32 %235, %228, !dbg !33
  %237 = add i32 %236, %232, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %226, %215
  %hi.i.i.i.1.i = phi i32 [ %231, %226 ], [ %221, %215 ], !dbg !33
  %lo.i.i.i.0.i = phi i32 [ %237, %226 ], [ %225, %215 ], !dbg !33
  %238 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !33
  %239 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !33
  %240 = shl i32 %lo.i.i.i.0.i, 2, !dbg !33
  %241 = lshr i32 %239, 31, !dbg !33
  %242 = add nuw nsw i32 %241, %238, !dbg !33
  %243 = sub nsw i32 0, %242, !dbg !33
  %.not2123.i = icmp slt i32 %201, 0, !dbg !33
  %spec.select.i = select i1 %.not2123.i, i32 %243, i32 %242, !dbg !33
  %244 = xor i32 %239, %201, !dbg !33
  %.lobit.i = ashr i32 %239, 31, !dbg !33
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %239, !dbg !33
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %240, !dbg !33
  %245 = zext i32 %hi.i.i.i.2.i to i64, !dbg !33
  %246 = shl nuw i64 %245, 32, !dbg !33
  %247 = zext i32 %lo.i.i.i.1.i to i64, !dbg !33
  %248 = or disjoint i64 %246, %247, !dbg !33
  %249 = sitofp i64 %248 to double, !dbg !33
  %250 = fmul double %249, 0x3BF921FB54442D19, !dbg !33
  %251 = fptrunc double %250 to float, !dbg !33
  %252 = fneg float %251, !dbg !33
  %.not2526.i = icmp slt i32 %244, 0, !dbg !33
  %r.i.i.i.0.i = select i1 %.not2526.i, float %252, float %251, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_powf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_powf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %t.i.i.1.i = phi float [ %.04.i, %__nv_powf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not28.i = icmp eq i32 %253, 0, !dbg !33
  %254 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !33
  %255 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !33
  %.011.i = select i1 %.not28.i, float %255, float %254, !dbg !33
  %256 = and i32 %i.i.1.i, 1, !dbg !33
  %.not29.i = icmp eq i32 %256, 0, !dbg !33
  %257 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !33
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not30.i = icmp eq i32 %258, 0, !dbg !33
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %257, float 0.000000e+00) #5, !dbg !33
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %257, float 0.000000e+00) #5, !dbg !33
  %.012.i = select i1 %.not30.i, float %260, float %259, !dbg !33
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !33

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not31.i = icmp eq i32 %261, 0, !dbg !33
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !33
  %263 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !33
  %.013.i = select i1 %.not31.i, float %263, float %262, !dbg !33
  br label %__internal_fmad.exit2.i.i.i, !dbg !33

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %264 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %265 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %266 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not32.i = icmp eq i32 %267, 0, !dbg !33
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float %.011.i, float %265) #5, !dbg !33
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float %.011.i, float %265) #5, !dbg !33
  %.010.i = select i1 %.not32.i, float %269, float %268, !dbg !33
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not33.i = icmp eq i32 %270, 0, !dbg !33
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %264) #5, !dbg !33
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %264) #5, !dbg !33
  %.09.i = select i1 %.not33.i, float %272, float %271, !dbg !33
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not34.i = icmp eq i32 %273, 0, !dbg !33
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %257) #5, !dbg !33
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %257) #5, !dbg !33
  %.05.i = select i1 %.not34.i, float %275, float %274, !dbg !33
  %276 = and i32 %i.i.1.i, 2, !dbg !33
  %.not35.i = icmp eq i32 %276, 0, !dbg !33
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !33

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not36.i = icmp eq i32 %277, 0, !dbg !33
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %.0.i8 = select i1 %.not36.i, float %279, float %278, !dbg !33
  br label %__nv_sinf.exit, !dbg !33

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i8, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !33
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  %280 = icmp sgt i8 %.decomposed484, 0, !dbg !37
  %281 = and i1 %12, %280, !dbg !38
  %282 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %281, i32 0, i1 %281) #5, !dbg !39
  %283 = bitcast i32 %282 to float, !dbg !39
  %284 = or disjoint i32 %22, 1, !dbg !40
  %285 = sitofp i32 %284 to float, !dbg !41
  %286 = fmul float %285, 5.000000e-01, !dbg !42
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i1 = icmp eq i32 %287, 0, !dbg !43
  %288 = tail call float @llvm.nvvm.floor.ftz.f(float %286), !dbg !43
  %289 = tail call float @llvm.nvvm.floor.f(float %286), !dbg !43
  %.0.i2 = select i1 %.not.i1, float %289, float %288, !dbg !43
  %290 = fmul float %.0.i2, 2.000000e+00, !dbg !44
  %291 = fmul float %290, 1.562500e-02, !dbg !45
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not.i198 = icmp eq i32 %293, 0, !dbg !46
  %.09.i199 = select i1 %.not.i198, float %33, float %32, !dbg !46
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not12.i200 = icmp eq i32 %294, 0, !dbg !46
  %295 = fcmp olt float %.09.i199, 0x3810000000000000, !dbg !46
  %296 = fmul float %.09.i199, 0x4170000000000000, !dbg !46
  %297 = select i1 %.not12.i200, i1 %295, i1 false, !dbg !46
  %.116.i203 = select i1 %297, float %296, float %.09.i199, !dbg !46
  %expo.i.i.1.i204 = select i1 %297, float -1.510000e+02, float -1.270000e+02, !dbg !46
  %298 = bitcast float %.116.i203 to i32, !dbg !46
  %299 = and i32 %298, 8388607, !dbg !46
  %300 = or disjoint i32 %299, 1065353216, !dbg !46
  %301 = bitcast i32 %300 to float, !dbg !46
  %302 = lshr i32 %298, 23, !dbg !46
  %303 = uitofp nneg i32 %302 to float, !dbg !46
  %304 = fadd float %expo.i.i.1.i204, %303, !dbg !46
  %305 = fcmp ogt float %301, 0x3FF6A09E60000000, !dbg !46
  %306 = fmul float %301, 5.000000e-01, !dbg !46
  %307 = fadd float %304, 1.000000e+00, !dbg !46
  %expo.i.i.2.i205 = select i1 %305, float %307, float %304, !dbg !46
  %m.i.i.0.i206 = select i1 %305, float %306, float %301, !dbg !46
  %308 = fadd float %m.i.i.0.i206, -1.000000e+00, !dbg !46
  %309 = fadd float %m.i.i.0.i206, 1.000000e+00, !dbg !46
  %310 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %309) #6, !dbg !46, !srcloc !31
  %311 = fmul float %308, 2.000000e+00, !dbg !46
  %312 = fmul float %310, %311, !dbg !46
  %313 = fmul float %312, %312, !dbg !46
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not13.i207 = icmp eq i32 %314, 0, !dbg !46
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %313, float 0x3F8995EC60000000) #5, !dbg !46
  %316 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %313, float 0x3F8995EC60000000) #5, !dbg !46
  %.020.i208 = select i1 %.not13.i207, float %316, float %315, !dbg !46
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not14.i209 = icmp eq i32 %317, 0, !dbg !46
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i208, float %313, float 0x3FB55557A0000000) #5, !dbg !46
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i208, float %313, float 0x3FB55557A0000000) #5, !dbg !46
  %.021.i210 = select i1 %.not14.i209, float %319, float %318, !dbg !46
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not15.i211 = icmp eq i32 %320, 0, !dbg !46
  %321 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i210, float %313) #5, !dbg !46
  %322 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i210, float %313) #5, !dbg !46
  %.022.i212 = select i1 %.not15.i211, float %322, float %321, !dbg !46
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not16.i213 = icmp eq i32 %323, 0, !dbg !46
  %324 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i212, float %312) #5, !dbg !46
  %325 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i212, float %312) #5, !dbg !46
  %.024.i214 = select i1 %.not16.i213, float %325, float %324, !dbg !46
  %326 = fsub float %308, %312, !dbg !46
  %327 = fmul float %326, 2.000000e+00, !dbg !46
  %328 = fneg float %312, !dbg !46
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not17.i215 = icmp eq i32 %329, 0, !dbg !46
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %328, float %308, float %327) #5, !dbg !46
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %328, float %308, float %327) #5, !dbg !46
  %.025.i216 = select i1 %.not17.i215, float %331, float %330, !dbg !46
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not18.i217 = icmp eq i32 %332, 0, !dbg !46
  %333 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %310, float %.025.i216) #5, !dbg !46
  %334 = tail call float @llvm.nvvm.mul.rn.f(float %310, float %.025.i216) #5, !dbg !46
  %.026.i218 = select i1 %.not18.i217, float %334, float %333, !dbg !46
  %335 = fadd float %312, %.024.i214, !dbg !46
  %336 = fsub float %312, %335, !dbg !46
  %337 = fadd float %.024.i214, %336, !dbg !46
  %338 = fadd float %.026.i218, %337, !dbg !46
  %339 = fadd float %335, %338, !dbg !46
  %340 = fsub float %335, %339, !dbg !46
  %341 = fadd float %338, %340, !dbg !46
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not19.i219 = icmp eq i32 %342, 0, !dbg !46
  %343 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i205, float 0x3FE62E4000000000) #5, !dbg !46
  %344 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i205, float 0x3FE62E4000000000) #5, !dbg !46
  %.019.i220 = select i1 %.not19.i219, float %344, float %343, !dbg !46
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not20.i221 = icmp eq i32 %345, 0, !dbg !46
  %346 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i205, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %347 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i205, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %.018.i222 = select i1 %.not20.i221, float %347, float %346, !dbg !46
  %348 = fadd float %.019.i220, %339, !dbg !46
  %349 = fsub float %.019.i220, %348, !dbg !46
  %350 = fadd float %339, %349, !dbg !46
  %351 = fadd float %341, %350, !dbg !46
  %352 = fadd float %.018.i222, %351, !dbg !46
  %353 = fadd float %348, %352, !dbg !46
  %354 = fsub float %348, %353, !dbg !46
  %355 = fadd float %352, %354, !dbg !46
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not21.i223 = icmp eq i32 %356, 0, !dbg !46
  %357 = tail call float @llvm.nvvm.fabs.ftz.f(float %291) #5, !dbg !46
  %358 = tail call float @llvm.nvvm.fabs.f(float %291) #5, !dbg !46
  %.027.i224 = select i1 %.not21.i223, float %358, float %357, !dbg !46
  %359 = fcmp ogt float %.027.i224, 0x46FED09BE0000000, !dbg !46
  %360 = fmul float %291, 0x3F20000000000000, !dbg !46
  %.013.i225 = select i1 %359, float %360, float %291, !dbg !46
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not22.i226 = icmp eq i32 %361, 0, !dbg !46
  %362 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i225, float %353) #5, !dbg !46
  %363 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i225, float %353) #5, !dbg !46
  %.028.i227 = select i1 %.not22.i226, float %363, float %362, !dbg !46
  %364 = fneg float %.028.i227, !dbg !46
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not23.i228 = icmp eq i32 %365, 0, !dbg !46
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i225, float %353, float %364) #5, !dbg !46
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i225, float %353, float %364) #5, !dbg !46
  %.029.i229 = select i1 %.not23.i228, float %367, float %366, !dbg !46
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not24.i230 = icmp eq i32 %368, 0, !dbg !46
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i225, float %355, float %.029.i229) #5, !dbg !46
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i225, float %355, float %.029.i229) #5, !dbg !46
  %.030.i231 = select i1 %.not24.i230, float %370, float %369, !dbg !46
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not25.i232 = icmp eq i32 %371, 0, !dbg !46
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %353, float %.030.i231) #5, !dbg !46
  %373 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %353, float %.030.i231) #5, !dbg !46
  %.031.i233 = select i1 %.not25.i232, float %373, float %372, !dbg !46
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not26.i234 = icmp eq i32 %374, 0, !dbg !46
  %375 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i227, float %.031.i233) #5, !dbg !46
  %376 = tail call float @llvm.nvvm.add.rn.f(float %.028.i227, float %.031.i233) #5, !dbg !46
  %.032.i235 = select i1 %.not26.i234, float %376, float %375, !dbg !46
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %379 = bitcast float %.032.i235 to i32, !dbg !46
  %380 = icmp eq i32 %379, 1118925336, !dbg !46
  %prod.i.145.0.i241 = select i1 %380, float 0x40562E42E0000000, float %.032.i235, !dbg !46
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not29.i242 = icmp eq i32 %381, 0, !dbg !46
  %382 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i241, float 0x3FF7154760000000) #5, !dbg !46
  %383 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i241, float 0x3FF7154760000000) #5, !dbg !46
  %.017.i243 = select i1 %.not29.i242, float %383, float %382, !dbg !46
  %384 = tail call float @llvm.nvvm.trunc.f(float %.017.i243) #5, !dbg !46
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not30.i244 = icmp eq i32 %385, 0, !dbg !46
  %386 = tail call float @llvm.nvvm.fabs.ftz.f(float %384) #5, !dbg !46
  %387 = tail call float @llvm.nvvm.fabs.f(float %384) #5, !dbg !46
  %.023.i245 = select i1 %.not30.i244, float %387, float %386, !dbg !46
  %388 = fcmp ogt float %.023.i245, 1.260000e+02, !dbg !46
  %389 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %384), !dbg !46
  %j.i.i.0.i246 = select i1 %388, float %389, float %384, !dbg !46
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not31.i247 = icmp eq i32 %390, 0, !dbg !46
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i246, float 0xBFE62E4300000000, float %prod.i.145.0.i241) #5, !dbg !46
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i246, float 0xBFE62E4300000000, float %prod.i.145.0.i241) #5, !dbg !46
  %.035.i248 = select i1 %.not31.i247, float %392, float %391, !dbg !46
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not32.i249 = icmp eq i32 %393, 0, !dbg !46
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i246, float 0x3E205C6100000000, float %.035.i248) #5, !dbg !46
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i246, float 0x3E205C6100000000, float %.035.i248) #5, !dbg !46
  %.036.i250 = select i1 %.not32.i249, float %395, float %394, !dbg !46
  %396 = fmul float %.036.i250, 0x3FF7154760000000, !dbg !46
  %397 = fadd float %j.i.i.0.i246, 0x4168000FE0000000, !dbg !46
  %398 = bitcast float %397 to i32, !dbg !46
  %399 = shl i32 %398, 23, !dbg !46
  %400 = bitcast i32 %399 to float, !dbg !46
  %401 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %396) #5, !dbg !46
  %402 = fmul float %401, %400, !dbg !46
  %403 = fcmp une float %402, 0x7FF0000000000000, !dbg !46
  br i1 %403, label %__internal_fmad.exit.i.i276, label %__internal_powf_corner_cases.exit.i251, !dbg !46

__internal_fmad.exit.i.i276:                      ; preds = %__nv_sinf.exit
  %.not28.i238 = icmp eq i32 %378, 0, !dbg !46
  %.not27.i236 = icmp eq i32 %377, 0, !dbg !46
  %404 = fneg float %.032.i235, !dbg !46
  %405 = tail call float @llvm.nvvm.add.rn.f(float %.028.i227, float %404) #5, !dbg !46
  %406 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i227, float %404) #5, !dbg !46
  %.033.i237 = select i1 %.not27.i236, float %405, float %406, !dbg !46
  %407 = tail call float @llvm.nvvm.add.rn.f(float %.033.i237, float %.031.i233) #5, !dbg !46
  %408 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i237, float %.031.i233) #5, !dbg !46
  %.034.i239 = select i1 %.not28.i238, float %407, float %408, !dbg !46
  %409 = fadd float %.034.i239, 0x3EE0000000000000, !dbg !46
  %prod.i.044.0.i240 = select i1 %380, float %409, float %.034.i239, !dbg !46
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not33.i277 = icmp eq i32 %410, 0, !dbg !46
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %402, float %prod.i.044.0.i240, float %402) #5, !dbg !46
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %402, float %prod.i.044.0.i240, float %402) #5, !dbg !46
  %.014.i278 = select i1 %.not33.i277, float %412, float %411, !dbg !46
  br label %__internal_powf_corner_cases.exit.i251, !dbg !46

__internal_powf_corner_cases.exit.i251:           ; preds = %__internal_fmad.exit.i.i276, %__nv_sinf.exit
  %t.i.0.i252 = phi float [ %.014.i278, %__internal_fmad.exit.i.i276 ], [ 0x7FF0000000000000, %__nv_sinf.exit ], !dbg !46
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not34.i253 = icmp eq i32 %413, 0, !dbg !46
  %.01.i254 = select i1 %.not34.i253, float %33, float %32, !dbg !46
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not35.i255 = icmp eq i32 %414, 0, !dbg !46
  %.02.i256 = select i1 %.not35.i255, float %358, float %357, !dbg !46
  %415 = fadd float %.01.i254, %.02.i256, !dbg !46
  %416 = bitcast float %415 to i32, !dbg !46
  %417 = icmp sgt i32 %416, 2139095039, !dbg !46
  br i1 %417, label %__nv_isnanf.exit.i.i259, label %__nv_powf.exit279, !dbg !46

__nv_isnanf.exit.i.i259:                          ; preds = %__internal_powf_corner_cases.exit.i251
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not36.i260 = icmp eq i32 %418, 0, !dbg !46
  %.06.i261 = select i1 %.not36.i260, float %33, float %32, !dbg !46
  %419 = fcmp uno float %.06.i261, 0.000000e+00, !dbg !46
  br i1 %419, label %422, label %__nv_isnanf.exit11.i.i262, !dbg !46

__nv_isnanf.exit11.i.i262:                        ; preds = %__nv_isnanf.exit.i.i259
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not37.i263 = icmp eq i32 %420, 0, !dbg !46
  %.07.i264 = select i1 %.not37.i263, float %358, float %357, !dbg !46
  %421 = fcmp uno float %.07.i264, 0.000000e+00, !dbg !46
  br i1 %421, label %422, label %__nv_isinff.exit8.i.i265, !dbg !46

422:                                              ; preds = %__nv_isnanf.exit11.i.i262, %__nv_isnanf.exit.i.i259
  %423 = fadd float %291, 1.000000e+04, !dbg !46
  br label %__nv_powf.exit279, !dbg !46

__nv_isinff.exit8.i.i265:                         ; preds = %__nv_isnanf.exit11.i.i262
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not38.i266 = icmp eq i32 %424, 0, !dbg !46
  %.05.i267 = select i1 %.not38.i266, float %358, float %357, !dbg !46
  %425 = fcmp oeq float %.05.i267, 0x7FF0000000000000, !dbg !46
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not40.i272 = icmp eq i32 %426, 0, !dbg !46
  %.04.i273 = select i1 %.not40.i272, float %33, float %32, !dbg !46
  br i1 %425, label %__nv_fabsf.exit5.i.i271, label %__nv_isinff.exit.i.i268, !dbg !46

__nv_fabsf.exit5.i.i271:                          ; preds = %__nv_isinff.exit8.i.i265
  %427 = fcmp ogt float %.04.i273, 1.000000e+00, !dbg !46
  %ti.i.0.i274 = select i1 %427, i32 2139095040, i32 0, !dbg !46
  %428 = fcmp olt float %291, 0.000000e+00, !dbg !46
  %429 = xor i32 %ti.i.0.i274, 2139095040, !dbg !46
  %ti.i.1.i275 = select i1 %428, i32 %429, i32 %ti.i.0.i274, !dbg !46
  %430 = bitcast i32 %ti.i.1.i275 to float, !dbg !46
  br label %__nv_powf.exit279, !dbg !46

__nv_isinff.exit.i.i268:                          ; preds = %__nv_isinff.exit8.i.i265
  %431 = fcmp oeq float %.04.i273, 0x7FF0000000000000, !dbg !46
  br i1 %431, label %432, label %__nv_powf.exit279, !dbg !46

432:                                              ; preds = %__nv_isinff.exit.i.i268
  %433 = fcmp oge float %291, 0.000000e+00, !dbg !46
  %434 = select i1 %433, float 0x7FF0000000000000, float 0.000000e+00, !dbg !46
  br label %__nv_powf.exit279, !dbg !46

__nv_powf.exit279:                                ; preds = %__internal_powf_corner_cases.exit.i251, %422, %__nv_fabsf.exit5.i.i271, %__nv_isinff.exit.i.i268, %432
  %.3.i257 = phi float [ %t.i.0.i252, %__internal_powf_corner_cases.exit.i251 ], [ %423, %422 ], [ %430, %__nv_fabsf.exit5.i.i271 ], [ %434, %432 ], [ %t.i.0.i252, %__nv_isinff.exit.i.i268 ], !dbg !46
  %435 = fcmp oeq float %291, 0.000000e+00, !dbg !46
  %t.0.i258 = select i1 %435, float 1.000000e+00, float %.3.i257, !dbg !46
  %436 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %283, float %t.0.i258) #5, !dbg !47
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i64), !dbg !48
  %437 = fmul float %436, 0x3FE45F3060000000, !dbg !48
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not.i65 = icmp eq i32 %438, 0, !dbg !48
  %439 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %437) #5, !dbg !48
  %440 = tail call i32 @llvm.nvvm.f2i.rn(float %437) #5, !dbg !48
  %.01.i66 = select i1 %.not.i65, i32 %440, i32 %439, !dbg !48
  %441 = sitofp i32 %.01.i66 to float, !dbg !48
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not15.i67 = icmp eq i32 %442, 0, !dbg !48
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float 0xBFF921FB40000000, float %436) #5, !dbg !48
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %441, float 0xBFF921FB40000000, float %436) #5, !dbg !48
  %.02.i68 = select i1 %.not15.i67, float %444, float %443, !dbg !48
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not16.i69 = icmp eq i32 %445, 0, !dbg !48
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float 0xBE74442D00000000, float %.02.i68) #5, !dbg !48
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %441, float 0xBE74442D00000000, float %.02.i68) #5, !dbg !48
  %.03.i70 = select i1 %.not16.i69, float %447, float %446, !dbg !48
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not17.i71 = icmp eq i32 %448, 0, !dbg !48
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %441, float 0xBCF84698A0000000, float %.03.i70) #5, !dbg !48
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %441, float 0xBCF84698A0000000, float %.03.i70) #5, !dbg !48
  %.04.i72 = select i1 %.not17.i71, float %450, float %449, !dbg !48
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not18.i73 = icmp eq i32 %451, 0, !dbg !48
  %452 = tail call float @llvm.nvvm.fabs.ftz.f(float %436) #5, !dbg !48
  %453 = tail call float @llvm.nvvm.fabs.f(float %436) #5, !dbg !48
  %.06.i74 = select i1 %.not18.i73, float %453, float %452, !dbg !48
  %454 = fcmp ult float %.06.i74, 1.056150e+05, !dbg !48
  br i1 %454, label %__internal_trig_reduction_kernel.exit.i.i92, label %__nv_isinff.exit.i.i.i75, !dbg !48

__nv_isinff.exit.i.i.i75:                         ; preds = %__nv_powf.exit279
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not19.i76 = icmp eq i32 %455, 0, !dbg !48
  %.07.i77 = select i1 %.not19.i76, float %453, float %452, !dbg !48
  %456 = fcmp oeq float %.07.i77, 0x7FF0000000000000, !dbg !48
  br i1 %456, label %__nv_fmul_rn.exit.i.i.i114, label %460, !dbg !48

__nv_fmul_rn.exit.i.i.i114:                       ; preds = %__nv_isinff.exit.i.i.i75
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not27.i115 = icmp eq i32 %457, 0, !dbg !48
  %458 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %436, float 0.000000e+00) #5, !dbg !48
  %459 = tail call float @llvm.nvvm.mul.rn.f(float %436, float 0.000000e+00) #5, !dbg !48
  %.08.i116 = select i1 %.not27.i115, float %459, float %458, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i92, !dbg !48

460:                                              ; preds = %__nv_isinff.exit.i.i.i75
  %461 = bitcast float %436 to i32, !dbg !48
  %462 = lshr i32 %461, 23, !dbg !48
  %463 = and i32 %462, 224, !dbg !48
  %464 = add nsw i32 %463, -128, !dbg !48
  %465 = shl i32 %461, 8, !dbg !48
  %466 = or i32 %465, -2147483648, !dbg !48
  %467 = lshr exact i32 %464, 5, !dbg !48
  br label %468, !dbg !48

468:                                              ; preds = %460, %468
  %indvars.iv463 = phi i64 [ 0, %460 ], [ %indvars.iv.next464, %468 ]
  %hi.i.i.i.0.i78450 = phi i32 [ 0, %460 ], [ %473, %468 ]
  %469 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv463, !dbg !48
  %470 = load i32, ptr addrspace(1) %469, align 4, !dbg !48
  %471 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %470, i32 %466, i32 %hi.i.i.i.0.i78450) #6, !dbg !48, !srcloc !34
  %472 = extractvalue { i32, i32 } %471, 0, !dbg !48
  %473 = extractvalue { i32, i32 } %471, 1, !dbg !48
  %474 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %indvars.iv463, !dbg !48
  store i32 %472, ptr %474, align 4, !dbg !48
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1, !dbg !48
  %exitcond465.not = icmp eq i64 %indvars.iv.next464, 6, !dbg !48
  br i1 %exitcond465.not, label %475, label %468, !dbg !48, !llvm.loop !49

475:                                              ; preds = %468
  %476 = getelementptr inbounds i8, ptr %result.i.i.i.i64, i64 24, !dbg !48
  store i32 %473, ptr %476, align 4, !dbg !48
  %477 = and i32 %462, 31, !dbg !48
  %478 = sub nsw i32 6, %467, !dbg !48
  %479 = sext i32 %478 to i64, !dbg !48
  %480 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %479, !dbg !48
  %481 = load i32, ptr %480, align 4, !dbg !48
  %482 = sub nsw i32 5, %467, !dbg !48
  %483 = sext i32 %482 to i64, !dbg !48
  %484 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %483, !dbg !48
  %485 = load i32, ptr %484, align 4, !dbg !48
  %.not20.i80 = icmp eq i32 %477, 0, !dbg !48
  br i1 %.not20.i80, label %__internal_trig_reduction_slowpath.exit.i.i.i81, label %486, !dbg !48

486:                                              ; preds = %475
  %487 = sub nsw i32 4, %467, !dbg !48
  %488 = sub nuw nsw i32 32, %477, !dbg !48
  %489 = shl i32 %481, %477, !dbg !48
  %490 = lshr i32 %485, %488, !dbg !48
  %491 = add i32 %490, %489, !dbg !48
  %492 = shl i32 %485, %477, !dbg !48
  %493 = sext i32 %487 to i64, !dbg !48
  %494 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %493, !dbg !48
  %495 = load i32, ptr %494, align 4, !dbg !48
  %496 = lshr i32 %495, %488, !dbg !48
  %497 = add i32 %496, %492, !dbg !48
  br label %__internal_trig_reduction_slowpath.exit.i.i.i81, !dbg !48

__internal_trig_reduction_slowpath.exit.i.i.i81:  ; preds = %486, %475
  %hi.i.i.i.1.i82 = phi i32 [ %491, %486 ], [ %481, %475 ], !dbg !48
  %lo.i.i.i.0.i83 = phi i32 [ %497, %486 ], [ %485, %475 ], !dbg !48
  %498 = lshr i32 %hi.i.i.i.1.i82, 30, !dbg !48
  %499 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i82, i32 %lo.i.i.i.0.i83, i32 2), !dbg !48
  %500 = shl i32 %lo.i.i.i.0.i83, 2, !dbg !48
  %501 = lshr i32 %499, 31, !dbg !48
  %502 = add nuw nsw i32 %501, %498, !dbg !48
  %503 = sub nsw i32 0, %502, !dbg !48
  %.not2123.i84 = icmp slt i32 %461, 0, !dbg !48
  %spec.select.i85 = select i1 %.not2123.i84, i32 %503, i32 %502, !dbg !48
  %504 = xor i32 %499, %461, !dbg !48
  %.lobit.i86 = ashr i32 %499, 31, !dbg !48
  %hi.i.i.i.2.i87 = xor i32 %.lobit.i86, %499, !dbg !48
  %lo.i.i.i.1.i89 = xor i32 %.lobit.i86, %500, !dbg !48
  %505 = zext i32 %hi.i.i.i.2.i87 to i64, !dbg !48
  %506 = shl nuw i64 %505, 32, !dbg !48
  %507 = zext i32 %lo.i.i.i.1.i89 to i64, !dbg !48
  %508 = or disjoint i64 %506, %507, !dbg !48
  %509 = sitofp i64 %508 to double, !dbg !48
  %510 = fmul double %509, 0x3BF921FB54442D19, !dbg !48
  %511 = fptrunc double %510 to float, !dbg !48
  %512 = fneg float %511, !dbg !48
  %.not2526.i90 = icmp slt i32 %504, 0, !dbg !48
  %r.i.i.i.0.i91 = select i1 %.not2526.i90, float %512, float %511, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i92, !dbg !48

__internal_trig_reduction_kernel.exit.i.i92:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i81, %__nv_fmul_rn.exit.i.i.i114, %__nv_powf.exit279
  %i.i.1.i93 = phi i32 [ %.01.i66, %__nv_powf.exit279 ], [ 0, %__nv_fmul_rn.exit.i.i.i114 ], [ %spec.select.i85, %__internal_trig_reduction_slowpath.exit.i.i.i81 ], !dbg !48
  %t.i.i.1.i94 = phi float [ %.04.i72, %__nv_powf.exit279 ], [ %.08.i116, %__nv_fmul_rn.exit.i.i.i114 ], [ %r.i.i.i.0.i91, %__internal_trig_reduction_slowpath.exit.i.i.i81 ], !dbg !48
  %513 = add i32 %i.i.1.i93, 1, !dbg !48
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not28.i95 = icmp eq i32 %514, 0, !dbg !48
  %515 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i94, float %t.i.i.1.i94) #5, !dbg !48
  %516 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i94, float %t.i.i.1.i94) #5, !dbg !48
  %.011.i96 = select i1 %.not28.i95, float %516, float %515, !dbg !48
  %517 = and i32 %i.i.1.i93, 1, !dbg !48
  %.not29.not.i = icmp eq i32 %517, 0, !dbg !48
  %518 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i94, !dbg !48
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not30.i97 = icmp eq i32 %519, 0, !dbg !48
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i96, float %518, float 0.000000e+00) #5, !dbg !48
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i96, float %518, float 0.000000e+00) #5, !dbg !48
  %.012.i98 = select i1 %.not30.i97, float %521, float %520, !dbg !48
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i111, label %__internal_fmad.exit2.i.i.i99, !dbg !48

__internal_fmad.exit1.i.i.i111:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i92
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not31.i112 = icmp eq i32 %522, 0, !dbg !48
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i96, float 0xBF56C0FDA0000000) #5, !dbg !48
  %524 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i96, float 0xBF56C0FDA0000000) #5, !dbg !48
  %.013.i113 = select i1 %.not31.i112, float %524, float %523, !dbg !48
  br label %__internal_fmad.exit2.i.i.i99, !dbg !48

__internal_fmad.exit2.i.i.i99:                    ; preds = %__internal_fmad.exit1.i.i.i111, %__internal_trig_reduction_kernel.exit.i.i92
  %525 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i111 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !48
  %526 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i111 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !48
  %527 = phi float [ %.013.i113, %__internal_fmad.exit1.i.i.i111 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !48
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not32.i100 = icmp eq i32 %528, 0, !dbg !48
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %527, float %.011.i96, float %526) #5, !dbg !48
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %527, float %.011.i96, float %526) #5, !dbg !48
  %.010.i101 = select i1 %.not32.i100, float %530, float %529, !dbg !48
  %531 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not33.i102 = icmp eq i32 %531, 0, !dbg !48
  %532 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i101, float %.011.i96, float %525) #5, !dbg !48
  %533 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i101, float %.011.i96, float %525) #5, !dbg !48
  %.09.i103 = select i1 %.not33.i102, float %533, float %532, !dbg !48
  %534 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not34.i104 = icmp eq i32 %534, 0, !dbg !48
  %535 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i103, float %.012.i98, float %518) #5, !dbg !48
  %536 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i103, float %.012.i98, float %518) #5, !dbg !48
  %.05.i105 = select i1 %.not34.i104, float %536, float %535, !dbg !48
  %537 = and i32 %513, 2, !dbg !48
  %.not35.i106 = icmp eq i32 %537, 0, !dbg !48
  br i1 %.not35.i106, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i107, !dbg !48

__internal_fmad.exit5.i.i.i107:                   ; preds = %__internal_fmad.exit2.i.i.i99
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not36.i108 = icmp eq i32 %538, 0, !dbg !48
  %539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i105, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %540 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i105, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %.0.i109 = select i1 %.not36.i108, float %540, float %539, !dbg !48
  br label %__nv_cosf.exit, !dbg !48

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i99, %__internal_fmad.exit5.i.i.i107
  %z.i.i.0.i110 = phi float [ %.0.i109, %__internal_fmad.exit5.i.i.i107 ], [ %.05.i105, %__internal_fmad.exit2.i.i.i99 ], !dbg !48
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i64), !dbg !48
  %541 = icmp sgt i32 %.decomposed, 63, !dbg !50
  %542 = add nsw i32 %.decomposed, -64, !dbg !51
  %543 = sdiv i32 %542, 2, !dbg !52
  %544 = mul i32 %543, 2, !dbg !53
  %.decomposed485 = sub i32 %542, %544, !dbg !53
  %545 = icmp slt i32 %.decomposed485, 1, !dbg !54
  %546 = and i1 %541, %545, !dbg !55
  %547 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !56
  %548 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %547, i1 %546, i32 0, i1 %546) #5, !dbg !57
  %549 = bitcast i32 %548 to float, !dbg !57
  %550 = srem i32 %543, 32, !dbg !58
  %551 = shl nsw i32 %550, 1, !dbg !59
  %552 = sitofp i32 %551 to float, !dbg !60
  %553 = fmul float %552, 5.000000e-01, !dbg !61
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !62
  %.not.i3 = icmp eq i32 %554, 0, !dbg !62
  %555 = tail call float @llvm.nvvm.floor.ftz.f(float %553), !dbg !62
  %556 = tail call float @llvm.nvvm.floor.f(float %553), !dbg !62
  %.0.i4 = select i1 %.not.i3, float %556, float %555, !dbg !62
  %557 = fmul float %.0.i4, 2.000000e+00, !dbg !63
  %558 = fmul float %557, 1.562500e-02, !dbg !64
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not.i280 = icmp eq i32 %560, 0, !dbg !65
  %.09.i281 = select i1 %.not.i280, float %33, float %32, !dbg !65
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not12.i282 = icmp eq i32 %561, 0, !dbg !65
  %562 = fcmp olt float %.09.i281, 0x3810000000000000, !dbg !65
  %563 = fmul float %.09.i281, 0x4170000000000000, !dbg !65
  %564 = select i1 %.not12.i282, i1 %562, i1 false, !dbg !65
  %.116.i285 = select i1 %564, float %563, float %.09.i281, !dbg !65
  %expo.i.i.1.i286 = select i1 %564, float -1.510000e+02, float -1.270000e+02, !dbg !65
  %565 = bitcast float %.116.i285 to i32, !dbg !65
  %566 = and i32 %565, 8388607, !dbg !65
  %567 = or disjoint i32 %566, 1065353216, !dbg !65
  %568 = bitcast i32 %567 to float, !dbg !65
  %569 = lshr i32 %565, 23, !dbg !65
  %570 = uitofp nneg i32 %569 to float, !dbg !65
  %571 = fadd float %expo.i.i.1.i286, %570, !dbg !65
  %572 = fcmp ogt float %568, 0x3FF6A09E60000000, !dbg !65
  %573 = fmul float %568, 5.000000e-01, !dbg !65
  %574 = fadd float %571, 1.000000e+00, !dbg !65
  %expo.i.i.2.i287 = select i1 %572, float %574, float %571, !dbg !65
  %m.i.i.0.i288 = select i1 %572, float %573, float %568, !dbg !65
  %575 = fadd float %m.i.i.0.i288, -1.000000e+00, !dbg !65
  %576 = fadd float %m.i.i.0.i288, 1.000000e+00, !dbg !65
  %577 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %576) #6, !dbg !65, !srcloc !31
  %578 = fmul float %575, 2.000000e+00, !dbg !65
  %579 = fmul float %577, %578, !dbg !65
  %580 = fmul float %579, %579, !dbg !65
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not13.i289 = icmp eq i32 %581, 0, !dbg !65
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %580, float 0x3F8995EC60000000) #5, !dbg !65
  %583 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %580, float 0x3F8995EC60000000) #5, !dbg !65
  %.020.i290 = select i1 %.not13.i289, float %583, float %582, !dbg !65
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not14.i291 = icmp eq i32 %584, 0, !dbg !65
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i290, float %580, float 0x3FB55557A0000000) #5, !dbg !65
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i290, float %580, float 0x3FB55557A0000000) #5, !dbg !65
  %.021.i292 = select i1 %.not14.i291, float %586, float %585, !dbg !65
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not15.i293 = icmp eq i32 %587, 0, !dbg !65
  %588 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i292, float %580) #5, !dbg !65
  %589 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i292, float %580) #5, !dbg !65
  %.022.i294 = select i1 %.not15.i293, float %589, float %588, !dbg !65
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not16.i295 = icmp eq i32 %590, 0, !dbg !65
  %591 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i294, float %579) #5, !dbg !65
  %592 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i294, float %579) #5, !dbg !65
  %.024.i296 = select i1 %.not16.i295, float %592, float %591, !dbg !65
  %593 = fsub float %575, %579, !dbg !65
  %594 = fmul float %593, 2.000000e+00, !dbg !65
  %595 = fneg float %579, !dbg !65
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not17.i297 = icmp eq i32 %596, 0, !dbg !65
  %597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %595, float %575, float %594) #5, !dbg !65
  %598 = tail call float @llvm.nvvm.fma.rn.f(float %595, float %575, float %594) #5, !dbg !65
  %.025.i298 = select i1 %.not17.i297, float %598, float %597, !dbg !65
  %599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not18.i299 = icmp eq i32 %599, 0, !dbg !65
  %600 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %577, float %.025.i298) #5, !dbg !65
  %601 = tail call float @llvm.nvvm.mul.rn.f(float %577, float %.025.i298) #5, !dbg !65
  %.026.i300 = select i1 %.not18.i299, float %601, float %600, !dbg !65
  %602 = fadd float %579, %.024.i296, !dbg !65
  %603 = fsub float %579, %602, !dbg !65
  %604 = fadd float %.024.i296, %603, !dbg !65
  %605 = fadd float %.026.i300, %604, !dbg !65
  %606 = fadd float %602, %605, !dbg !65
  %607 = fsub float %602, %606, !dbg !65
  %608 = fadd float %605, %607, !dbg !65
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not19.i301 = icmp eq i32 %609, 0, !dbg !65
  %610 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i287, float 0x3FE62E4000000000) #5, !dbg !65
  %611 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i287, float 0x3FE62E4000000000) #5, !dbg !65
  %.019.i302 = select i1 %.not19.i301, float %611, float %610, !dbg !65
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not20.i303 = icmp eq i32 %612, 0, !dbg !65
  %613 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i287, float 0x3EB7F7D1C0000000) #5, !dbg !65
  %614 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i287, float 0x3EB7F7D1C0000000) #5, !dbg !65
  %.018.i304 = select i1 %.not20.i303, float %614, float %613, !dbg !65
  %615 = fadd float %.019.i302, %606, !dbg !65
  %616 = fsub float %.019.i302, %615, !dbg !65
  %617 = fadd float %606, %616, !dbg !65
  %618 = fadd float %608, %617, !dbg !65
  %619 = fadd float %.018.i304, %618, !dbg !65
  %620 = fadd float %615, %619, !dbg !65
  %621 = fsub float %615, %620, !dbg !65
  %622 = fadd float %619, %621, !dbg !65
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not21.i305 = icmp eq i32 %623, 0, !dbg !65
  %624 = tail call float @llvm.nvvm.fabs.ftz.f(float %558) #5, !dbg !65
  %625 = tail call float @llvm.nvvm.fabs.f(float %558) #5, !dbg !65
  %.027.i306 = select i1 %.not21.i305, float %625, float %624, !dbg !65
  %626 = fcmp ogt float %.027.i306, 0x46FED09BE0000000, !dbg !65
  %627 = fmul float %558, 0x3F20000000000000, !dbg !65
  %.013.i307 = select i1 %626, float %627, float %558, !dbg !65
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not22.i308 = icmp eq i32 %628, 0, !dbg !65
  %629 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i307, float %620) #5, !dbg !65
  %630 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i307, float %620) #5, !dbg !65
  %.028.i309 = select i1 %.not22.i308, float %630, float %629, !dbg !65
  %631 = fneg float %.028.i309, !dbg !65
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not23.i310 = icmp eq i32 %632, 0, !dbg !65
  %633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i307, float %620, float %631) #5, !dbg !65
  %634 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i307, float %620, float %631) #5, !dbg !65
  %.029.i311 = select i1 %.not23.i310, float %634, float %633, !dbg !65
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not24.i312 = icmp eq i32 %635, 0, !dbg !65
  %636 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i307, float %622, float %.029.i311) #5, !dbg !65
  %637 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i307, float %622, float %.029.i311) #5, !dbg !65
  %.030.i313 = select i1 %.not24.i312, float %637, float %636, !dbg !65
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not25.i314 = icmp eq i32 %638, 0, !dbg !65
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %620, float %.030.i313) #5, !dbg !65
  %640 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %620, float %.030.i313) #5, !dbg !65
  %.031.i315 = select i1 %.not25.i314, float %640, float %639, !dbg !65
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not26.i316 = icmp eq i32 %641, 0, !dbg !65
  %642 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i309, float %.031.i315) #5, !dbg !65
  %643 = tail call float @llvm.nvvm.add.rn.f(float %.028.i309, float %.031.i315) #5, !dbg !65
  %.032.i317 = select i1 %.not26.i316, float %643, float %642, !dbg !65
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %646 = bitcast float %.032.i317 to i32, !dbg !65
  %647 = icmp eq i32 %646, 1118925336, !dbg !65
  %prod.i.145.0.i323 = select i1 %647, float 0x40562E42E0000000, float %.032.i317, !dbg !65
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not29.i324 = icmp eq i32 %648, 0, !dbg !65
  %649 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i323, float 0x3FF7154760000000) #5, !dbg !65
  %650 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i323, float 0x3FF7154760000000) #5, !dbg !65
  %.017.i325 = select i1 %.not29.i324, float %650, float %649, !dbg !65
  %651 = tail call float @llvm.nvvm.trunc.f(float %.017.i325) #5, !dbg !65
  %652 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not30.i326 = icmp eq i32 %652, 0, !dbg !65
  %653 = tail call float @llvm.nvvm.fabs.ftz.f(float %651) #5, !dbg !65
  %654 = tail call float @llvm.nvvm.fabs.f(float %651) #5, !dbg !65
  %.023.i327 = select i1 %.not30.i326, float %654, float %653, !dbg !65
  %655 = fcmp ogt float %.023.i327, 1.260000e+02, !dbg !65
  %656 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %651), !dbg !65
  %j.i.i.0.i328 = select i1 %655, float %656, float %651, !dbg !65
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not31.i329 = icmp eq i32 %657, 0, !dbg !65
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i328, float 0xBFE62E4300000000, float %prod.i.145.0.i323) #5, !dbg !65
  %659 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i328, float 0xBFE62E4300000000, float %prod.i.145.0.i323) #5, !dbg !65
  %.035.i330 = select i1 %.not31.i329, float %659, float %658, !dbg !65
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not32.i331 = icmp eq i32 %660, 0, !dbg !65
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i328, float 0x3E205C6100000000, float %.035.i330) #5, !dbg !65
  %662 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i328, float 0x3E205C6100000000, float %.035.i330) #5, !dbg !65
  %.036.i332 = select i1 %.not32.i331, float %662, float %661, !dbg !65
  %663 = fmul float %.036.i332, 0x3FF7154760000000, !dbg !65
  %664 = fadd float %j.i.i.0.i328, 0x4168000FE0000000, !dbg !65
  %665 = bitcast float %664 to i32, !dbg !65
  %666 = shl i32 %665, 23, !dbg !65
  %667 = bitcast i32 %666 to float, !dbg !65
  %668 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %663) #5, !dbg !65
  %669 = fmul float %668, %667, !dbg !65
  %670 = fcmp une float %669, 0x7FF0000000000000, !dbg !65
  br i1 %670, label %__internal_fmad.exit.i.i358, label %__internal_powf_corner_cases.exit.i333, !dbg !65

__internal_fmad.exit.i.i358:                      ; preds = %__nv_cosf.exit
  %.not28.i320 = icmp eq i32 %645, 0, !dbg !65
  %.not27.i318 = icmp eq i32 %644, 0, !dbg !65
  %671 = fneg float %.032.i317, !dbg !65
  %672 = tail call float @llvm.nvvm.add.rn.f(float %.028.i309, float %671) #5, !dbg !65
  %673 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i309, float %671) #5, !dbg !65
  %.033.i319 = select i1 %.not27.i318, float %672, float %673, !dbg !65
  %674 = tail call float @llvm.nvvm.add.rn.f(float %.033.i319, float %.031.i315) #5, !dbg !65
  %675 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i319, float %.031.i315) #5, !dbg !65
  %.034.i321 = select i1 %.not28.i320, float %674, float %675, !dbg !65
  %676 = fadd float %.034.i321, 0x3EE0000000000000, !dbg !65
  %prod.i.044.0.i322 = select i1 %647, float %676, float %.034.i321, !dbg !65
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not33.i359 = icmp eq i32 %677, 0, !dbg !65
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %669, float %prod.i.044.0.i322, float %669) #5, !dbg !65
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %669, float %prod.i.044.0.i322, float %669) #5, !dbg !65
  %.014.i360 = select i1 %.not33.i359, float %679, float %678, !dbg !65
  br label %__internal_powf_corner_cases.exit.i333, !dbg !65

__internal_powf_corner_cases.exit.i333:           ; preds = %__internal_fmad.exit.i.i358, %__nv_cosf.exit
  %t.i.0.i334 = phi float [ %.014.i360, %__internal_fmad.exit.i.i358 ], [ 0x7FF0000000000000, %__nv_cosf.exit ], !dbg !65
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not34.i335 = icmp eq i32 %680, 0, !dbg !65
  %.01.i336 = select i1 %.not34.i335, float %33, float %32, !dbg !65
  %681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not35.i337 = icmp eq i32 %681, 0, !dbg !65
  %.02.i338 = select i1 %.not35.i337, float %625, float %624, !dbg !65
  %682 = fadd float %.01.i336, %.02.i338, !dbg !65
  %683 = bitcast float %682 to i32, !dbg !65
  %684 = icmp sgt i32 %683, 2139095039, !dbg !65
  br i1 %684, label %__nv_isnanf.exit.i.i341, label %__nv_powf.exit361, !dbg !65

__nv_isnanf.exit.i.i341:                          ; preds = %__internal_powf_corner_cases.exit.i333
  %685 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not36.i342 = icmp eq i32 %685, 0, !dbg !65
  %.06.i343 = select i1 %.not36.i342, float %33, float %32, !dbg !65
  %686 = fcmp uno float %.06.i343, 0.000000e+00, !dbg !65
  br i1 %686, label %689, label %__nv_isnanf.exit11.i.i344, !dbg !65

__nv_isnanf.exit11.i.i344:                        ; preds = %__nv_isnanf.exit.i.i341
  %687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not37.i345 = icmp eq i32 %687, 0, !dbg !65
  %.07.i346 = select i1 %.not37.i345, float %625, float %624, !dbg !65
  %688 = fcmp uno float %.07.i346, 0.000000e+00, !dbg !65
  br i1 %688, label %689, label %__nv_isinff.exit8.i.i347, !dbg !65

689:                                              ; preds = %__nv_isnanf.exit11.i.i344, %__nv_isnanf.exit.i.i341
  %690 = fadd float %558, 1.000000e+04, !dbg !65
  br label %__nv_powf.exit361, !dbg !65

__nv_isinff.exit8.i.i347:                         ; preds = %__nv_isnanf.exit11.i.i344
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not38.i348 = icmp eq i32 %691, 0, !dbg !65
  %.05.i349 = select i1 %.not38.i348, float %625, float %624, !dbg !65
  %692 = fcmp oeq float %.05.i349, 0x7FF0000000000000, !dbg !65
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !65
  %.not40.i354 = icmp eq i32 %693, 0, !dbg !65
  %.04.i355 = select i1 %.not40.i354, float %33, float %32, !dbg !65
  br i1 %692, label %__nv_fabsf.exit5.i.i353, label %__nv_isinff.exit.i.i350, !dbg !65

__nv_fabsf.exit5.i.i353:                          ; preds = %__nv_isinff.exit8.i.i347
  %694 = fcmp ogt float %.04.i355, 1.000000e+00, !dbg !65
  %ti.i.0.i356 = select i1 %694, i32 2139095040, i32 0, !dbg !65
  %695 = fcmp olt float %558, 0.000000e+00, !dbg !65
  %696 = xor i32 %ti.i.0.i356, 2139095040, !dbg !65
  %ti.i.1.i357 = select i1 %695, i32 %696, i32 %ti.i.0.i356, !dbg !65
  %697 = bitcast i32 %ti.i.1.i357 to float, !dbg !65
  br label %__nv_powf.exit361, !dbg !65

__nv_isinff.exit.i.i350:                          ; preds = %__nv_isinff.exit8.i.i347
  %698 = fcmp oeq float %.04.i355, 0x7FF0000000000000, !dbg !65
  br i1 %698, label %699, label %__nv_powf.exit361, !dbg !65

699:                                              ; preds = %__nv_isinff.exit.i.i350
  %700 = fcmp oge float %558, 0.000000e+00, !dbg !65
  %701 = select i1 %700, float 0x7FF0000000000000, float 0.000000e+00, !dbg !65
  br label %__nv_powf.exit361, !dbg !65

__nv_powf.exit361:                                ; preds = %__internal_powf_corner_cases.exit.i333, %689, %__nv_fabsf.exit5.i.i353, %__nv_isinff.exit.i.i350, %699
  %.3.i339 = phi float [ %t.i.0.i334, %__internal_powf_corner_cases.exit.i333 ], [ %690, %689 ], [ %697, %__nv_fabsf.exit5.i.i353 ], [ %701, %699 ], [ %t.i.0.i334, %__nv_isinff.exit.i.i350 ], !dbg !65
  %702 = fcmp oeq float %558, 0.000000e+00, !dbg !65
  %t.0.i340 = select i1 %702, float 1.000000e+00, float %.3.i339, !dbg !65
  %703 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %549, float %t.0.i340) #5, !dbg !66
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i9), !dbg !67
  %704 = fmul float %703, 0x3FE45F3060000000, !dbg !67
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i10 = icmp eq i32 %705, 0, !dbg !67
  %706 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %704) #5, !dbg !67
  %707 = tail call i32 @llvm.nvvm.f2i.rn(float %704) #5, !dbg !67
  %.01.i11 = select i1 %.not.i10, i32 %707, i32 %706, !dbg !67
  %708 = sitofp i32 %.01.i11 to float, !dbg !67
  %709 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not15.i12 = icmp eq i32 %709, 0, !dbg !67
  %710 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %708, float 0xBFF921FB40000000, float %703) #5, !dbg !67
  %711 = tail call float @llvm.nvvm.fma.rn.f(float %708, float 0xBFF921FB40000000, float %703) #5, !dbg !67
  %.02.i13 = select i1 %.not15.i12, float %711, float %710, !dbg !67
  %712 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not16.i14 = icmp eq i32 %712, 0, !dbg !67
  %713 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %708, float 0xBE74442D00000000, float %.02.i13) #5, !dbg !67
  %714 = tail call float @llvm.nvvm.fma.rn.f(float %708, float 0xBE74442D00000000, float %.02.i13) #5, !dbg !67
  %.03.i15 = select i1 %.not16.i14, float %714, float %713, !dbg !67
  %715 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not17.i16 = icmp eq i32 %715, 0, !dbg !67
  %716 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %708, float 0xBCF84698A0000000, float %.03.i15) #5, !dbg !67
  %717 = tail call float @llvm.nvvm.fma.rn.f(float %708, float 0xBCF84698A0000000, float %.03.i15) #5, !dbg !67
  %.04.i17 = select i1 %.not17.i16, float %717, float %716, !dbg !67
  %718 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not18.i18 = icmp eq i32 %718, 0, !dbg !67
  %719 = tail call float @llvm.nvvm.fabs.ftz.f(float %703) #5, !dbg !67
  %720 = tail call float @llvm.nvvm.fabs.f(float %703) #5, !dbg !67
  %.06.i19 = select i1 %.not18.i18, float %720, float %719, !dbg !67
  %721 = fcmp ult float %.06.i19, 1.056150e+05, !dbg !67
  br i1 %721, label %__internal_trig_reduction_kernel.exit.i.i37, label %__nv_isinff.exit.i.i.i20, !dbg !67

__nv_isinff.exit.i.i.i20:                         ; preds = %__nv_powf.exit361
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not19.i21 = icmp eq i32 %722, 0, !dbg !67
  %.07.i22 = select i1 %.not19.i21, float %720, float %719, !dbg !67
  %723 = fcmp oeq float %.07.i22, 0x7FF0000000000000, !dbg !67
  br i1 %723, label %__nv_fmul_rn.exit.i.i.i60, label %727, !dbg !67

__nv_fmul_rn.exit.i.i.i60:                        ; preds = %__nv_isinff.exit.i.i.i20
  %724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not27.i61 = icmp eq i32 %724, 0, !dbg !67
  %725 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %703, float 0.000000e+00) #5, !dbg !67
  %726 = tail call float @llvm.nvvm.mul.rn.f(float %703, float 0.000000e+00) #5, !dbg !67
  %.08.i62 = select i1 %.not27.i61, float %726, float %725, !dbg !67
  br label %__internal_trig_reduction_kernel.exit.i.i37, !dbg !67

727:                                              ; preds = %__nv_isinff.exit.i.i.i20
  %728 = bitcast float %703 to i32, !dbg !67
  %729 = lshr i32 %728, 23, !dbg !67
  %730 = and i32 %729, 224, !dbg !67
  %731 = add nsw i32 %730, -128, !dbg !67
  %732 = shl i32 %728, 8, !dbg !67
  %733 = or i32 %732, -2147483648, !dbg !67
  %734 = lshr exact i32 %731, 5, !dbg !67
  br label %735, !dbg !67

735:                                              ; preds = %727, %735
  %indvars.iv466 = phi i64 [ 0, %727 ], [ %indvars.iv.next467, %735 ]
  %hi.i.i.i.0.i23452 = phi i32 [ 0, %727 ], [ %740, %735 ]
  %736 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv466, !dbg !67
  %737 = load i32, ptr addrspace(1) %736, align 4, !dbg !67
  %738 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %737, i32 %733, i32 %hi.i.i.i.0.i23452) #6, !dbg !67, !srcloc !34
  %739 = extractvalue { i32, i32 } %738, 0, !dbg !67
  %740 = extractvalue { i32, i32 } %738, 1, !dbg !67
  %741 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %indvars.iv466, !dbg !67
  store i32 %739, ptr %741, align 4, !dbg !67
  %indvars.iv.next467 = add nuw nsw i64 %indvars.iv466, 1, !dbg !67
  %exitcond468.not = icmp eq i64 %indvars.iv.next467, 6, !dbg !67
  br i1 %exitcond468.not, label %742, label %735, !dbg !67, !llvm.loop !68

742:                                              ; preds = %735
  %743 = getelementptr inbounds i8, ptr %result.i.i.i.i9, i64 24, !dbg !67
  store i32 %740, ptr %743, align 4, !dbg !67
  %744 = and i32 %729, 31, !dbg !67
  %745 = sub nsw i32 6, %734, !dbg !67
  %746 = sext i32 %745 to i64, !dbg !67
  %747 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %746, !dbg !67
  %748 = load i32, ptr %747, align 4, !dbg !67
  %749 = sub nsw i32 5, %734, !dbg !67
  %750 = sext i32 %749 to i64, !dbg !67
  %751 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %750, !dbg !67
  %752 = load i32, ptr %751, align 4, !dbg !67
  %.not20.i25 = icmp eq i32 %744, 0, !dbg !67
  br i1 %.not20.i25, label %__internal_trig_reduction_slowpath.exit.i.i.i26, label %753, !dbg !67

753:                                              ; preds = %742
  %754 = sub nsw i32 4, %734, !dbg !67
  %755 = sub nuw nsw i32 32, %744, !dbg !67
  %756 = shl i32 %748, %744, !dbg !67
  %757 = lshr i32 %752, %755, !dbg !67
  %758 = add i32 %757, %756, !dbg !67
  %759 = shl i32 %752, %744, !dbg !67
  %760 = sext i32 %754 to i64, !dbg !67
  %761 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %760, !dbg !67
  %762 = load i32, ptr %761, align 4, !dbg !67
  %763 = lshr i32 %762, %755, !dbg !67
  %764 = add i32 %763, %759, !dbg !67
  br label %__internal_trig_reduction_slowpath.exit.i.i.i26, !dbg !67

__internal_trig_reduction_slowpath.exit.i.i.i26:  ; preds = %753, %742
  %hi.i.i.i.1.i27 = phi i32 [ %758, %753 ], [ %748, %742 ], !dbg !67
  %lo.i.i.i.0.i28 = phi i32 [ %764, %753 ], [ %752, %742 ], !dbg !67
  %765 = lshr i32 %hi.i.i.i.1.i27, 30, !dbg !67
  %766 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i27, i32 %lo.i.i.i.0.i28, i32 2), !dbg !67
  %767 = shl i32 %lo.i.i.i.0.i28, 2, !dbg !67
  %768 = lshr i32 %766, 31, !dbg !67
  %769 = add nuw nsw i32 %768, %765, !dbg !67
  %770 = sub nsw i32 0, %769, !dbg !67
  %.not2123.i29 = icmp slt i32 %728, 0, !dbg !67
  %spec.select.i30 = select i1 %.not2123.i29, i32 %770, i32 %769, !dbg !67
  %771 = xor i32 %766, %728, !dbg !67
  %.lobit.i31 = ashr i32 %766, 31, !dbg !67
  %hi.i.i.i.2.i32 = xor i32 %.lobit.i31, %766, !dbg !67
  %lo.i.i.i.1.i34 = xor i32 %.lobit.i31, %767, !dbg !67
  %772 = zext i32 %hi.i.i.i.2.i32 to i64, !dbg !67
  %773 = shl nuw i64 %772, 32, !dbg !67
  %774 = zext i32 %lo.i.i.i.1.i34 to i64, !dbg !67
  %775 = or disjoint i64 %773, %774, !dbg !67
  %776 = sitofp i64 %775 to double, !dbg !67
  %777 = fmul double %776, 0x3BF921FB54442D19, !dbg !67
  %778 = fptrunc double %777 to float, !dbg !67
  %779 = fneg float %778, !dbg !67
  %.not2526.i35 = icmp slt i32 %771, 0, !dbg !67
  %r.i.i.i.0.i36 = select i1 %.not2526.i35, float %779, float %778, !dbg !67
  br label %__internal_trig_reduction_kernel.exit.i.i37, !dbg !67

__internal_trig_reduction_kernel.exit.i.i37:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i26, %__nv_fmul_rn.exit.i.i.i60, %__nv_powf.exit361
  %i.i.1.i38 = phi i32 [ %.01.i11, %__nv_powf.exit361 ], [ 0, %__nv_fmul_rn.exit.i.i.i60 ], [ %spec.select.i30, %__internal_trig_reduction_slowpath.exit.i.i.i26 ], !dbg !67
  %t.i.i.1.i39 = phi float [ %.04.i17, %__nv_powf.exit361 ], [ %.08.i62, %__nv_fmul_rn.exit.i.i.i60 ], [ %r.i.i.i.0.i36, %__internal_trig_reduction_slowpath.exit.i.i.i26 ], !dbg !67
  %780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not28.i40 = icmp eq i32 %780, 0, !dbg !67
  %781 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i39, float %t.i.i.1.i39) #5, !dbg !67
  %782 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i39, float %t.i.i.1.i39) #5, !dbg !67
  %.011.i41 = select i1 %.not28.i40, float %782, float %781, !dbg !67
  %783 = and i32 %i.i.1.i38, 1, !dbg !67
  %.not29.i42 = icmp eq i32 %783, 0, !dbg !67
  %784 = select i1 %.not29.i42, float %t.i.i.1.i39, float 1.000000e+00, !dbg !67
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not30.i43 = icmp eq i32 %785, 0, !dbg !67
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i41, float %784, float 0.000000e+00) #5, !dbg !67
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i41, float %784, float 0.000000e+00) #5, !dbg !67
  %.012.i44 = select i1 %.not30.i43, float %787, float %786, !dbg !67
  br i1 %.not29.i42, label %__internal_fmad.exit2.i.i.i48, label %__internal_fmad.exit1.i.i.i45, !dbg !67

__internal_fmad.exit1.i.i.i45:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i37
  %788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not31.i46 = icmp eq i32 %788, 0, !dbg !67
  %789 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i41, float 0xBF56C0FDA0000000) #5, !dbg !67
  %790 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i41, float 0xBF56C0FDA0000000) #5, !dbg !67
  %.013.i47 = select i1 %.not31.i46, float %790, float %789, !dbg !67
  br label %__internal_fmad.exit2.i.i.i48, !dbg !67

__internal_fmad.exit2.i.i.i48:                    ; preds = %__internal_fmad.exit1.i.i.i45, %__internal_trig_reduction_kernel.exit.i.i37
  %791 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i45 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !67
  %792 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i45 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !67
  %793 = phi float [ %.013.i47, %__internal_fmad.exit1.i.i.i45 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !67
  %794 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not32.i49 = icmp eq i32 %794, 0, !dbg !67
  %795 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %793, float %.011.i41, float %792) #5, !dbg !67
  %796 = tail call float @llvm.nvvm.fma.rn.f(float %793, float %.011.i41, float %792) #5, !dbg !67
  %.010.i50 = select i1 %.not32.i49, float %796, float %795, !dbg !67
  %797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not33.i51 = icmp eq i32 %797, 0, !dbg !67
  %798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i50, float %.011.i41, float %791) #5, !dbg !67
  %799 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i50, float %.011.i41, float %791) #5, !dbg !67
  %.09.i52 = select i1 %.not33.i51, float %799, float %798, !dbg !67
  %800 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not34.i53 = icmp eq i32 %800, 0, !dbg !67
  %801 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i52, float %.012.i44, float %784) #5, !dbg !67
  %802 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i52, float %.012.i44, float %784) #5, !dbg !67
  %.05.i54 = select i1 %.not34.i53, float %802, float %801, !dbg !67
  %803 = and i32 %i.i.1.i38, 2, !dbg !67
  %.not35.i55 = icmp eq i32 %803, 0, !dbg !67
  br i1 %.not35.i55, label %__nv_sinf.exit63, label %__internal_fmad.exit5.i.i.i56, !dbg !67

__internal_fmad.exit5.i.i.i56:                    ; preds = %__internal_fmad.exit2.i.i.i48
  %804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not36.i57 = icmp eq i32 %804, 0, !dbg !67
  %805 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i54, float -1.000000e+00, float 0.000000e+00) #5, !dbg !67
  %806 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i54, float -1.000000e+00, float 0.000000e+00) #5, !dbg !67
  %.0.i58 = select i1 %.not36.i57, float %806, float %805, !dbg !67
  br label %__nv_sinf.exit63, !dbg !67

__nv_sinf.exit63:                                 ; preds = %__internal_fmad.exit2.i.i.i48, %__internal_fmad.exit5.i.i.i56
  %z.i.i.0.i59 = phi float [ %.0.i58, %__internal_fmad.exit5.i.i.i56 ], [ %.05.i54, %__internal_fmad.exit2.i.i.i48 ], !dbg !67
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i9), !dbg !67
  %807 = icmp sgt i32 %.decomposed485, 0, !dbg !69
  %808 = and i1 %541, %807, !dbg !70
  %809 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %547, i1 %808, i32 0, i1 %808) #5, !dbg !71
  %810 = bitcast i32 %809 to float, !dbg !71
  %811 = or disjoint i32 %551, 1, !dbg !72
  %812 = sitofp i32 %811 to float, !dbg !73
  %813 = fmul float %812, 5.000000e-01, !dbg !74
  %814 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !75
  %.not.i5 = icmp eq i32 %814, 0, !dbg !75
  %815 = tail call float @llvm.nvvm.floor.ftz.f(float %813), !dbg !75
  %816 = tail call float @llvm.nvvm.floor.f(float %813), !dbg !75
  %.0.i6 = select i1 %.not.i5, float %816, float %815, !dbg !75
  %817 = fmul float %.0.i6, 2.000000e+00, !dbg !76
  %818 = fmul float %817, 1.562500e-02, !dbg !77
  %819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %820 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not.i362 = icmp eq i32 %820, 0, !dbg !78
  %.09.i363 = select i1 %.not.i362, float %33, float %32, !dbg !78
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not12.i364 = icmp eq i32 %821, 0, !dbg !78
  %822 = fcmp olt float %.09.i363, 0x3810000000000000, !dbg !78
  %823 = fmul float %.09.i363, 0x4170000000000000, !dbg !78
  %824 = select i1 %.not12.i364, i1 %822, i1 false, !dbg !78
  %.116.i367 = select i1 %824, float %823, float %.09.i363, !dbg !78
  %expo.i.i.1.i368 = select i1 %824, float -1.510000e+02, float -1.270000e+02, !dbg !78
  %825 = bitcast float %.116.i367 to i32, !dbg !78
  %826 = and i32 %825, 8388607, !dbg !78
  %827 = or disjoint i32 %826, 1065353216, !dbg !78
  %828 = bitcast i32 %827 to float, !dbg !78
  %829 = lshr i32 %825, 23, !dbg !78
  %830 = uitofp nneg i32 %829 to float, !dbg !78
  %831 = fadd float %expo.i.i.1.i368, %830, !dbg !78
  %832 = fcmp ogt float %828, 0x3FF6A09E60000000, !dbg !78
  %833 = fmul float %828, 5.000000e-01, !dbg !78
  %834 = fadd float %831, 1.000000e+00, !dbg !78
  %expo.i.i.2.i369 = select i1 %832, float %834, float %831, !dbg !78
  %m.i.i.0.i370 = select i1 %832, float %833, float %828, !dbg !78
  %835 = fadd float %m.i.i.0.i370, -1.000000e+00, !dbg !78
  %836 = fadd float %m.i.i.0.i370, 1.000000e+00, !dbg !78
  %837 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %836) #6, !dbg !78, !srcloc !31
  %838 = fmul float %835, 2.000000e+00, !dbg !78
  %839 = fmul float %837, %838, !dbg !78
  %840 = fmul float %839, %839, !dbg !78
  %841 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not13.i371 = icmp eq i32 %841, 0, !dbg !78
  %842 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %840, float 0x3F8995EC60000000) #5, !dbg !78
  %843 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %840, float 0x3F8995EC60000000) #5, !dbg !78
  %.020.i372 = select i1 %.not13.i371, float %843, float %842, !dbg !78
  %844 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not14.i373 = icmp eq i32 %844, 0, !dbg !78
  %845 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i372, float %840, float 0x3FB55557A0000000) #5, !dbg !78
  %846 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i372, float %840, float 0x3FB55557A0000000) #5, !dbg !78
  %.021.i374 = select i1 %.not14.i373, float %846, float %845, !dbg !78
  %847 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not15.i375 = icmp eq i32 %847, 0, !dbg !78
  %848 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i374, float %840) #5, !dbg !78
  %849 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i374, float %840) #5, !dbg !78
  %.022.i376 = select i1 %.not15.i375, float %849, float %848, !dbg !78
  %850 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not16.i377 = icmp eq i32 %850, 0, !dbg !78
  %851 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i376, float %839) #5, !dbg !78
  %852 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i376, float %839) #5, !dbg !78
  %.024.i378 = select i1 %.not16.i377, float %852, float %851, !dbg !78
  %853 = fsub float %835, %839, !dbg !78
  %854 = fmul float %853, 2.000000e+00, !dbg !78
  %855 = fneg float %839, !dbg !78
  %856 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not17.i379 = icmp eq i32 %856, 0, !dbg !78
  %857 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %855, float %835, float %854) #5, !dbg !78
  %858 = tail call float @llvm.nvvm.fma.rn.f(float %855, float %835, float %854) #5, !dbg !78
  %.025.i380 = select i1 %.not17.i379, float %858, float %857, !dbg !78
  %859 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not18.i381 = icmp eq i32 %859, 0, !dbg !78
  %860 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %837, float %.025.i380) #5, !dbg !78
  %861 = tail call float @llvm.nvvm.mul.rn.f(float %837, float %.025.i380) #5, !dbg !78
  %.026.i382 = select i1 %.not18.i381, float %861, float %860, !dbg !78
  %862 = fadd float %839, %.024.i378, !dbg !78
  %863 = fsub float %839, %862, !dbg !78
  %864 = fadd float %.024.i378, %863, !dbg !78
  %865 = fadd float %.026.i382, %864, !dbg !78
  %866 = fadd float %862, %865, !dbg !78
  %867 = fsub float %862, %866, !dbg !78
  %868 = fadd float %865, %867, !dbg !78
  %869 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not19.i383 = icmp eq i32 %869, 0, !dbg !78
  %870 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i369, float 0x3FE62E4000000000) #5, !dbg !78
  %871 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i369, float 0x3FE62E4000000000) #5, !dbg !78
  %.019.i384 = select i1 %.not19.i383, float %871, float %870, !dbg !78
  %872 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not20.i385 = icmp eq i32 %872, 0, !dbg !78
  %873 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i369, float 0x3EB7F7D1C0000000) #5, !dbg !78
  %874 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i369, float 0x3EB7F7D1C0000000) #5, !dbg !78
  %.018.i386 = select i1 %.not20.i385, float %874, float %873, !dbg !78
  %875 = fadd float %.019.i384, %866, !dbg !78
  %876 = fsub float %.019.i384, %875, !dbg !78
  %877 = fadd float %866, %876, !dbg !78
  %878 = fadd float %868, %877, !dbg !78
  %879 = fadd float %.018.i386, %878, !dbg !78
  %880 = fadd float %875, %879, !dbg !78
  %881 = fsub float %875, %880, !dbg !78
  %882 = fadd float %879, %881, !dbg !78
  %883 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not21.i387 = icmp eq i32 %883, 0, !dbg !78
  %884 = tail call float @llvm.nvvm.fabs.ftz.f(float %818) #5, !dbg !78
  %885 = tail call float @llvm.nvvm.fabs.f(float %818) #5, !dbg !78
  %.027.i388 = select i1 %.not21.i387, float %885, float %884, !dbg !78
  %886 = fcmp ogt float %.027.i388, 0x46FED09BE0000000, !dbg !78
  %887 = fmul float %818, 0x3F20000000000000, !dbg !78
  %.013.i389 = select i1 %886, float %887, float %818, !dbg !78
  %888 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not22.i390 = icmp eq i32 %888, 0, !dbg !78
  %889 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i389, float %880) #5, !dbg !78
  %890 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i389, float %880) #5, !dbg !78
  %.028.i391 = select i1 %.not22.i390, float %890, float %889, !dbg !78
  %891 = fneg float %.028.i391, !dbg !78
  %892 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not23.i392 = icmp eq i32 %892, 0, !dbg !78
  %893 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i389, float %880, float %891) #5, !dbg !78
  %894 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i389, float %880, float %891) #5, !dbg !78
  %.029.i393 = select i1 %.not23.i392, float %894, float %893, !dbg !78
  %895 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not24.i394 = icmp eq i32 %895, 0, !dbg !78
  %896 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i389, float %882, float %.029.i393) #5, !dbg !78
  %897 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i389, float %882, float %.029.i393) #5, !dbg !78
  %.030.i395 = select i1 %.not24.i394, float %897, float %896, !dbg !78
  %898 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not25.i396 = icmp eq i32 %898, 0, !dbg !78
  %899 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %880, float %.030.i395) #5, !dbg !78
  %900 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %880, float %.030.i395) #5, !dbg !78
  %.031.i397 = select i1 %.not25.i396, float %900, float %899, !dbg !78
  %901 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not26.i398 = icmp eq i32 %901, 0, !dbg !78
  %902 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i391, float %.031.i397) #5, !dbg !78
  %903 = tail call float @llvm.nvvm.add.rn.f(float %.028.i391, float %.031.i397) #5, !dbg !78
  %.032.i399 = select i1 %.not26.i398, float %903, float %902, !dbg !78
  %904 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %905 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %906 = bitcast float %.032.i399 to i32, !dbg !78
  %907 = icmp eq i32 %906, 1118925336, !dbg !78
  %prod.i.145.0.i405 = select i1 %907, float 0x40562E42E0000000, float %.032.i399, !dbg !78
  %908 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not29.i406 = icmp eq i32 %908, 0, !dbg !78
  %909 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i405, float 0x3FF7154760000000) #5, !dbg !78
  %910 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i405, float 0x3FF7154760000000) #5, !dbg !78
  %.017.i407 = select i1 %.not29.i406, float %910, float %909, !dbg !78
  %911 = tail call float @llvm.nvvm.trunc.f(float %.017.i407) #5, !dbg !78
  %912 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not30.i408 = icmp eq i32 %912, 0, !dbg !78
  %913 = tail call float @llvm.nvvm.fabs.ftz.f(float %911) #5, !dbg !78
  %914 = tail call float @llvm.nvvm.fabs.f(float %911) #5, !dbg !78
  %.023.i409 = select i1 %.not30.i408, float %914, float %913, !dbg !78
  %915 = fcmp ogt float %.023.i409, 1.260000e+02, !dbg !78
  %916 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %911), !dbg !78
  %j.i.i.0.i410 = select i1 %915, float %916, float %911, !dbg !78
  %917 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not31.i411 = icmp eq i32 %917, 0, !dbg !78
  %918 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i410, float 0xBFE62E4300000000, float %prod.i.145.0.i405) #5, !dbg !78
  %919 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i410, float 0xBFE62E4300000000, float %prod.i.145.0.i405) #5, !dbg !78
  %.035.i412 = select i1 %.not31.i411, float %919, float %918, !dbg !78
  %920 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not32.i413 = icmp eq i32 %920, 0, !dbg !78
  %921 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i410, float 0x3E205C6100000000, float %.035.i412) #5, !dbg !78
  %922 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i410, float 0x3E205C6100000000, float %.035.i412) #5, !dbg !78
  %.036.i414 = select i1 %.not32.i413, float %922, float %921, !dbg !78
  %923 = fmul float %.036.i414, 0x3FF7154760000000, !dbg !78
  %924 = fadd float %j.i.i.0.i410, 0x4168000FE0000000, !dbg !78
  %925 = bitcast float %924 to i32, !dbg !78
  %926 = shl i32 %925, 23, !dbg !78
  %927 = bitcast i32 %926 to float, !dbg !78
  %928 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %923) #5, !dbg !78
  %929 = fmul float %928, %927, !dbg !78
  %930 = fcmp une float %929, 0x7FF0000000000000, !dbg !78
  br i1 %930, label %__internal_fmad.exit.i.i440, label %__internal_powf_corner_cases.exit.i415, !dbg !78

__internal_fmad.exit.i.i440:                      ; preds = %__nv_sinf.exit63
  %.not28.i402 = icmp eq i32 %905, 0, !dbg !78
  %.not27.i400 = icmp eq i32 %904, 0, !dbg !78
  %931 = fneg float %.032.i399, !dbg !78
  %932 = tail call float @llvm.nvvm.add.rn.f(float %.028.i391, float %931) #5, !dbg !78
  %933 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i391, float %931) #5, !dbg !78
  %.033.i401 = select i1 %.not27.i400, float %932, float %933, !dbg !78
  %934 = tail call float @llvm.nvvm.add.rn.f(float %.033.i401, float %.031.i397) #5, !dbg !78
  %935 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i401, float %.031.i397) #5, !dbg !78
  %.034.i403 = select i1 %.not28.i402, float %934, float %935, !dbg !78
  %936 = fadd float %.034.i403, 0x3EE0000000000000, !dbg !78
  %prod.i.044.0.i404 = select i1 %907, float %936, float %.034.i403, !dbg !78
  %937 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not33.i441 = icmp eq i32 %937, 0, !dbg !78
  %938 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %929, float %prod.i.044.0.i404, float %929) #5, !dbg !78
  %939 = tail call float @llvm.nvvm.fma.rn.f(float %929, float %prod.i.044.0.i404, float %929) #5, !dbg !78
  %.014.i442 = select i1 %.not33.i441, float %939, float %938, !dbg !78
  br label %__internal_powf_corner_cases.exit.i415, !dbg !78

__internal_powf_corner_cases.exit.i415:           ; preds = %__internal_fmad.exit.i.i440, %__nv_sinf.exit63
  %t.i.0.i416 = phi float [ %.014.i442, %__internal_fmad.exit.i.i440 ], [ 0x7FF0000000000000, %__nv_sinf.exit63 ], !dbg !78
  %940 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not34.i417 = icmp eq i32 %940, 0, !dbg !78
  %.01.i418 = select i1 %.not34.i417, float %33, float %32, !dbg !78
  %941 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not35.i419 = icmp eq i32 %941, 0, !dbg !78
  %.02.i420 = select i1 %.not35.i419, float %885, float %884, !dbg !78
  %942 = fadd float %.01.i418, %.02.i420, !dbg !78
  %943 = bitcast float %942 to i32, !dbg !78
  %944 = icmp sgt i32 %943, 2139095039, !dbg !78
  br i1 %944, label %__nv_isnanf.exit.i.i423, label %__nv_powf.exit443, !dbg !78

__nv_isnanf.exit.i.i423:                          ; preds = %__internal_powf_corner_cases.exit.i415
  %945 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not36.i424 = icmp eq i32 %945, 0, !dbg !78
  %.06.i425 = select i1 %.not36.i424, float %33, float %32, !dbg !78
  %946 = fcmp uno float %.06.i425, 0.000000e+00, !dbg !78
  br i1 %946, label %949, label %__nv_isnanf.exit11.i.i426, !dbg !78

__nv_isnanf.exit11.i.i426:                        ; preds = %__nv_isnanf.exit.i.i423
  %947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not37.i427 = icmp eq i32 %947, 0, !dbg !78
  %.07.i428 = select i1 %.not37.i427, float %885, float %884, !dbg !78
  %948 = fcmp uno float %.07.i428, 0.000000e+00, !dbg !78
  br i1 %948, label %949, label %__nv_isinff.exit8.i.i429, !dbg !78

949:                                              ; preds = %__nv_isnanf.exit11.i.i426, %__nv_isnanf.exit.i.i423
  %950 = fadd float %818, 1.000000e+04, !dbg !78
  br label %__nv_powf.exit443, !dbg !78

__nv_isinff.exit8.i.i429:                         ; preds = %__nv_isnanf.exit11.i.i426
  %951 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not38.i430 = icmp eq i32 %951, 0, !dbg !78
  %.05.i431 = select i1 %.not38.i430, float %885, float %884, !dbg !78
  %952 = fcmp oeq float %.05.i431, 0x7FF0000000000000, !dbg !78
  %953 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !78
  %.not40.i436 = icmp eq i32 %953, 0, !dbg !78
  %.04.i437 = select i1 %.not40.i436, float %33, float %32, !dbg !78
  br i1 %952, label %__nv_fabsf.exit5.i.i435, label %__nv_isinff.exit.i.i432, !dbg !78

__nv_fabsf.exit5.i.i435:                          ; preds = %__nv_isinff.exit8.i.i429
  %954 = fcmp ogt float %.04.i437, 1.000000e+00, !dbg !78
  %ti.i.0.i438 = select i1 %954, i32 2139095040, i32 0, !dbg !78
  %955 = fcmp olt float %818, 0.000000e+00, !dbg !78
  %956 = xor i32 %ti.i.0.i438, 2139095040, !dbg !78
  %ti.i.1.i439 = select i1 %955, i32 %956, i32 %ti.i.0.i438, !dbg !78
  %957 = bitcast i32 %ti.i.1.i439 to float, !dbg !78
  br label %__nv_powf.exit443, !dbg !78

__nv_isinff.exit.i.i432:                          ; preds = %__nv_isinff.exit8.i.i429
  %958 = fcmp oeq float %.04.i437, 0x7FF0000000000000, !dbg !78
  br i1 %958, label %959, label %__nv_powf.exit443, !dbg !78

959:                                              ; preds = %__nv_isinff.exit.i.i432
  %960 = fcmp oge float %818, 0.000000e+00, !dbg !78
  %961 = select i1 %960, float 0x7FF0000000000000, float 0.000000e+00, !dbg !78
  br label %__nv_powf.exit443, !dbg !78

__nv_powf.exit443:                                ; preds = %__internal_powf_corner_cases.exit.i415, %949, %__nv_fabsf.exit5.i.i435, %__nv_isinff.exit.i.i432, %959
  %.3.i421 = phi float [ %t.i.0.i416, %__internal_powf_corner_cases.exit.i415 ], [ %950, %949 ], [ %957, %__nv_fabsf.exit5.i.i435 ], [ %961, %959 ], [ %t.i.0.i416, %__nv_isinff.exit.i.i432 ], !dbg !78
  %962 = fcmp oeq float %818, 0.000000e+00, !dbg !78
  %t.0.i422 = select i1 %962, float 1.000000e+00, float %.3.i421, !dbg !78
  %963 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %810, float %t.0.i422) #5, !dbg !79
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i117), !dbg !80
  %964 = fmul float %963, 0x3FE45F3060000000, !dbg !80
  %965 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not.i118 = icmp eq i32 %965, 0, !dbg !80
  %966 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %964) #5, !dbg !80
  %967 = tail call i32 @llvm.nvvm.f2i.rn(float %964) #5, !dbg !80
  %.01.i119 = select i1 %.not.i118, i32 %967, i32 %966, !dbg !80
  %968 = sitofp i32 %.01.i119 to float, !dbg !80
  %969 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not15.i120 = icmp eq i32 %969, 0, !dbg !80
  %970 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %968, float 0xBFF921FB40000000, float %963) #5, !dbg !80
  %971 = tail call float @llvm.nvvm.fma.rn.f(float %968, float 0xBFF921FB40000000, float %963) #5, !dbg !80
  %.02.i121 = select i1 %.not15.i120, float %971, float %970, !dbg !80
  %972 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not16.i122 = icmp eq i32 %972, 0, !dbg !80
  %973 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %968, float 0xBE74442D00000000, float %.02.i121) #5, !dbg !80
  %974 = tail call float @llvm.nvvm.fma.rn.f(float %968, float 0xBE74442D00000000, float %.02.i121) #5, !dbg !80
  %.03.i123 = select i1 %.not16.i122, float %974, float %973, !dbg !80
  %975 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not17.i124 = icmp eq i32 %975, 0, !dbg !80
  %976 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %968, float 0xBCF84698A0000000, float %.03.i123) #5, !dbg !80
  %977 = tail call float @llvm.nvvm.fma.rn.f(float %968, float 0xBCF84698A0000000, float %.03.i123) #5, !dbg !80
  %.04.i125 = select i1 %.not17.i124, float %977, float %976, !dbg !80
  %978 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not18.i126 = icmp eq i32 %978, 0, !dbg !80
  %979 = tail call float @llvm.nvvm.fabs.ftz.f(float %963) #5, !dbg !80
  %980 = tail call float @llvm.nvvm.fabs.f(float %963) #5, !dbg !80
  %.06.i127 = select i1 %.not18.i126, float %980, float %979, !dbg !80
  %981 = fcmp ult float %.06.i127, 1.056150e+05, !dbg !80
  br i1 %981, label %__internal_trig_reduction_kernel.exit.i.i145, label %__nv_isinff.exit.i.i.i128, !dbg !80

__nv_isinff.exit.i.i.i128:                        ; preds = %__nv_powf.exit443
  %982 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not19.i129 = icmp eq i32 %982, 0, !dbg !80
  %.07.i130 = select i1 %.not19.i129, float %980, float %979, !dbg !80
  %983 = fcmp oeq float %.07.i130, 0x7FF0000000000000, !dbg !80
  br i1 %983, label %__nv_fmul_rn.exit.i.i.i168, label %987, !dbg !80

__nv_fmul_rn.exit.i.i.i168:                       ; preds = %__nv_isinff.exit.i.i.i128
  %984 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not27.i169 = icmp eq i32 %984, 0, !dbg !80
  %985 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %963, float 0.000000e+00) #5, !dbg !80
  %986 = tail call float @llvm.nvvm.mul.rn.f(float %963, float 0.000000e+00) #5, !dbg !80
  %.08.i170 = select i1 %.not27.i169, float %986, float %985, !dbg !80
  br label %__internal_trig_reduction_kernel.exit.i.i145, !dbg !80

987:                                              ; preds = %__nv_isinff.exit.i.i.i128
  %988 = bitcast float %963 to i32, !dbg !80
  %989 = lshr i32 %988, 23, !dbg !80
  %990 = and i32 %989, 224, !dbg !80
  %991 = add nsw i32 %990, -128, !dbg !80
  %992 = shl i32 %988, 8, !dbg !80
  %993 = or i32 %992, -2147483648, !dbg !80
  %994 = lshr exact i32 %991, 5, !dbg !80
  br label %995, !dbg !80

995:                                              ; preds = %987, %995
  %indvars.iv469 = phi i64 [ 0, %987 ], [ %indvars.iv.next470, %995 ]
  %hi.i.i.i.0.i131454 = phi i32 [ 0, %987 ], [ %1000, %995 ]
  %996 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv469, !dbg !80
  %997 = load i32, ptr addrspace(1) %996, align 4, !dbg !80
  %998 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %997, i32 %993, i32 %hi.i.i.i.0.i131454) #6, !dbg !80, !srcloc !34
  %999 = extractvalue { i32, i32 } %998, 0, !dbg !80
  %1000 = extractvalue { i32, i32 } %998, 1, !dbg !80
  %1001 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %indvars.iv469, !dbg !80
  store i32 %999, ptr %1001, align 4, !dbg !80
  %indvars.iv.next470 = add nuw nsw i64 %indvars.iv469, 1, !dbg !80
  %exitcond471.not = icmp eq i64 %indvars.iv.next470, 6, !dbg !80
  br i1 %exitcond471.not, label %1002, label %995, !dbg !80, !llvm.loop !81

1002:                                             ; preds = %995
  %1003 = getelementptr inbounds i8, ptr %result.i.i.i.i117, i64 24, !dbg !80
  store i32 %1000, ptr %1003, align 4, !dbg !80
  %1004 = and i32 %989, 31, !dbg !80
  %1005 = sub nsw i32 6, %994, !dbg !80
  %1006 = sext i32 %1005 to i64, !dbg !80
  %1007 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %1006, !dbg !80
  %1008 = load i32, ptr %1007, align 4, !dbg !80
  %1009 = sub nsw i32 5, %994, !dbg !80
  %1010 = sext i32 %1009 to i64, !dbg !80
  %1011 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %1010, !dbg !80
  %1012 = load i32, ptr %1011, align 4, !dbg !80
  %.not20.i133 = icmp eq i32 %1004, 0, !dbg !80
  br i1 %.not20.i133, label %__internal_trig_reduction_slowpath.exit.i.i.i134, label %1013, !dbg !80

1013:                                             ; preds = %1002
  %1014 = sub nsw i32 4, %994, !dbg !80
  %1015 = sub nuw nsw i32 32, %1004, !dbg !80
  %1016 = shl i32 %1008, %1004, !dbg !80
  %1017 = lshr i32 %1012, %1015, !dbg !80
  %1018 = add i32 %1017, %1016, !dbg !80
  %1019 = shl i32 %1012, %1004, !dbg !80
  %1020 = sext i32 %1014 to i64, !dbg !80
  %1021 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %1020, !dbg !80
  %1022 = load i32, ptr %1021, align 4, !dbg !80
  %1023 = lshr i32 %1022, %1015, !dbg !80
  %1024 = add i32 %1023, %1019, !dbg !80
  br label %__internal_trig_reduction_slowpath.exit.i.i.i134, !dbg !80

__internal_trig_reduction_slowpath.exit.i.i.i134: ; preds = %1013, %1002
  %hi.i.i.i.1.i135 = phi i32 [ %1018, %1013 ], [ %1008, %1002 ], !dbg !80
  %lo.i.i.i.0.i136 = phi i32 [ %1024, %1013 ], [ %1012, %1002 ], !dbg !80
  %1025 = lshr i32 %hi.i.i.i.1.i135, 30, !dbg !80
  %1026 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i135, i32 %lo.i.i.i.0.i136, i32 2), !dbg !80
  %1027 = shl i32 %lo.i.i.i.0.i136, 2, !dbg !80
  %1028 = lshr i32 %1026, 31, !dbg !80
  %1029 = add nuw nsw i32 %1028, %1025, !dbg !80
  %1030 = sub nsw i32 0, %1029, !dbg !80
  %.not2123.i137 = icmp slt i32 %988, 0, !dbg !80
  %spec.select.i138 = select i1 %.not2123.i137, i32 %1030, i32 %1029, !dbg !80
  %1031 = xor i32 %1026, %988, !dbg !80
  %.lobit.i139 = ashr i32 %1026, 31, !dbg !80
  %hi.i.i.i.2.i140 = xor i32 %.lobit.i139, %1026, !dbg !80
  %lo.i.i.i.1.i142 = xor i32 %.lobit.i139, %1027, !dbg !80
  %1032 = zext i32 %hi.i.i.i.2.i140 to i64, !dbg !80
  %1033 = shl nuw i64 %1032, 32, !dbg !80
  %1034 = zext i32 %lo.i.i.i.1.i142 to i64, !dbg !80
  %1035 = or disjoint i64 %1033, %1034, !dbg !80
  %1036 = sitofp i64 %1035 to double, !dbg !80
  %1037 = fmul double %1036, 0x3BF921FB54442D19, !dbg !80
  %1038 = fptrunc double %1037 to float, !dbg !80
  %1039 = fneg float %1038, !dbg !80
  %.not2526.i143 = icmp slt i32 %1031, 0, !dbg !80
  %r.i.i.i.0.i144 = select i1 %.not2526.i143, float %1039, float %1038, !dbg !80
  br label %__internal_trig_reduction_kernel.exit.i.i145, !dbg !80

__internal_trig_reduction_kernel.exit.i.i145:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i134, %__nv_fmul_rn.exit.i.i.i168, %__nv_powf.exit443
  %i.i.1.i146 = phi i32 [ %.01.i119, %__nv_powf.exit443 ], [ 0, %__nv_fmul_rn.exit.i.i.i168 ], [ %spec.select.i138, %__internal_trig_reduction_slowpath.exit.i.i.i134 ], !dbg !80
  %t.i.i.1.i147 = phi float [ %.04.i125, %__nv_powf.exit443 ], [ %.08.i170, %__nv_fmul_rn.exit.i.i.i168 ], [ %r.i.i.i.0.i144, %__internal_trig_reduction_slowpath.exit.i.i.i134 ], !dbg !80
  %1040 = add i32 %i.i.1.i146, 1, !dbg !80
  %1041 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not28.i148 = icmp eq i32 %1041, 0, !dbg !80
  %1042 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i147, float %t.i.i.1.i147) #5, !dbg !80
  %1043 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i147, float %t.i.i.1.i147) #5, !dbg !80
  %.011.i149 = select i1 %.not28.i148, float %1043, float %1042, !dbg !80
  %1044 = and i32 %i.i.1.i146, 1, !dbg !80
  %.not29.not.i150 = icmp eq i32 %1044, 0, !dbg !80
  %1045 = select i1 %.not29.not.i150, float 1.000000e+00, float %t.i.i.1.i147, !dbg !80
  %1046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not30.i151 = icmp eq i32 %1046, 0, !dbg !80
  %1047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i149, float %1045, float 0.000000e+00) #5, !dbg !80
  %1048 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i149, float %1045, float 0.000000e+00) #5, !dbg !80
  %.012.i152 = select i1 %.not30.i151, float %1048, float %1047, !dbg !80
  br i1 %.not29.not.i150, label %__internal_fmad.exit1.i.i.i165, label %__internal_fmad.exit2.i.i.i153, !dbg !80

__internal_fmad.exit1.i.i.i165:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i145
  %1049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not31.i166 = icmp eq i32 %1049, 0, !dbg !80
  %1050 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i149, float 0xBF56C0FDA0000000) #5, !dbg !80
  %1051 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i149, float 0xBF56C0FDA0000000) #5, !dbg !80
  %.013.i167 = select i1 %.not31.i166, float %1051, float %1050, !dbg !80
  br label %__internal_fmad.exit2.i.i.i153, !dbg !80

__internal_fmad.exit2.i.i.i153:                   ; preds = %__internal_fmad.exit1.i.i.i165, %__internal_trig_reduction_kernel.exit.i.i145
  %1052 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i165 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !80
  %1053 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i165 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !80
  %1054 = phi float [ %.013.i167, %__internal_fmad.exit1.i.i.i165 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !80
  %1055 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not32.i154 = icmp eq i32 %1055, 0, !dbg !80
  %1056 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1054, float %.011.i149, float %1053) #5, !dbg !80
  %1057 = tail call float @llvm.nvvm.fma.rn.f(float %1054, float %.011.i149, float %1053) #5, !dbg !80
  %.010.i155 = select i1 %.not32.i154, float %1057, float %1056, !dbg !80
  %1058 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not33.i156 = icmp eq i32 %1058, 0, !dbg !80
  %1059 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i155, float %.011.i149, float %1052) #5, !dbg !80
  %1060 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i155, float %.011.i149, float %1052) #5, !dbg !80
  %.09.i157 = select i1 %.not33.i156, float %1060, float %1059, !dbg !80
  %1061 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not34.i158 = icmp eq i32 %1061, 0, !dbg !80
  %1062 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i157, float %.012.i152, float %1045) #5, !dbg !80
  %1063 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i157, float %.012.i152, float %1045) #5, !dbg !80
  %.05.i159 = select i1 %.not34.i158, float %1063, float %1062, !dbg !80
  %1064 = and i32 %1040, 2, !dbg !80
  %.not35.i160 = icmp eq i32 %1064, 0, !dbg !80
  br i1 %.not35.i160, label %__nv_cosf.exit171, label %__internal_fmad.exit5.i.i.i161, !dbg !80

__internal_fmad.exit5.i.i.i161:                   ; preds = %__internal_fmad.exit2.i.i.i153
  %1065 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !80
  %.not36.i162 = icmp eq i32 %1065, 0, !dbg !80
  %1066 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i159, float -1.000000e+00, float 0.000000e+00) #5, !dbg !80
  %1067 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i159, float -1.000000e+00, float 0.000000e+00) #5, !dbg !80
  %.0.i163 = select i1 %.not36.i162, float %1067, float %1066, !dbg !80
  br label %__nv_cosf.exit171, !dbg !80

__nv_cosf.exit171:                                ; preds = %__internal_fmad.exit2.i.i.i153, %__internal_fmad.exit5.i.i.i161
  %z.i.i.0.i164 = phi float [ %.0.i163, %__internal_fmad.exit5.i.i.i161 ], [ %.05.i159, %__internal_fmad.exit2.i.i.i153 ], !dbg !80
  %1068 = select i1 %546, float %z.i.i.0.i59, float 0.000000e+00, !dbg !82
  %1069 = select i1 %16, float %z.i.i.0.i, float 0.000000e+00, !dbg !83
  %1070 = select i1 %281, float %z.i.i.0.i110, float 0.000000e+00, !dbg !84
  %1071 = select i1 %15, float %1069, float %1070, !dbg !85
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i117), !dbg !80
  %1072 = select i1 %808, float %z.i.i.0.i164, float 0.000000e+00, !dbg !86
  %1073 = select i1 %545, float %1068, float %1072, !dbg !87
  %1074 = select i1 %12, float %1071, float %1073, !dbg !88
  %1075 = sext i32 %9 to i64, !dbg !89
  %1076 = getelementptr float, ptr addrspace(1) %2, i64 %1075, !dbg !89
  %1077 = bitcast float %1074 to i32, !dbg !90
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1077, ptr addrspace(1) %1076, i1 true) #5, !dbg !90
  ret void, !dbg !91
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7zm4nxxj6x35opozupbku7qxg4jxmo7jmj2nkdfxzddlxcpbu7q.py", directory: "inductor_cache/7z")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 31, column: 18, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 39, column: 25, scope: !7)
!19 = !DILocation(line: 36, column: 18, scope: !7)
!20 = !DILocation(line: 37, column: 19, scope: !7)
!21 = !DILocation(line: 38, column: 31, scope: !7)
!22 = !DILocation(line: 38, column: 36, scope: !7)
!23 = !DILocation(line: 39, column: 30, scope: !7)
!24 = !DILocation(line: 39, column: 16, scope: !7)
!25 = !DILocation(line: 40, column: 21, scope: !7)
!26 = !DILocation(line: 42, column: 20, scope: !7)
!27 = !DILocation(line: 43, column: 28, scope: !7)
!28 = !DILocation(line: 45, column: 20, scope: !7)
!29 = !DILocation(line: 47, column: 20, scope: !7)
!30 = !DILocation(line: 49, column: 33, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 50, column: 20, scope: !7)
!33 = !DILocation(line: 51, column: 24, scope: !7)
!34 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.count", i32 1}
!37 = !DILocation(line: 54, column: 20, scope: !7)
!38 = !DILocation(line: 57, column: 20, scope: !7)
!39 = !DILocation(line: 58, column: 36, scope: !7)
!40 = !DILocation(line: 59, column: 16, scope: !7)
!41 = !DILocation(line: 60, column: 21, scope: !7)
!42 = !DILocation(line: 62, column: 20, scope: !7)
!43 = !DILocation(line: 63, column: 28, scope: !7)
!44 = !DILocation(line: 65, column: 20, scope: !7)
!45 = !DILocation(line: 67, column: 20, scope: !7)
!46 = !DILocation(line: 69, column: 33, scope: !7)
!47 = !DILocation(line: 70, column: 20, scope: !7)
!48 = !DILocation(line: 71, column: 24, scope: !7)
!49 = distinct !{!49, !36}
!50 = !DILocation(line: 77, column: 20, scope: !7)
!51 = !DILocation(line: 80, column: 22, scope: !7)
!52 = !DILocation(line: 87, column: 33, scope: !7)
!53 = !DILocation(line: 80, column: 28, scope: !7)
!54 = !DILocation(line: 84, column: 20, scope: !7)
!55 = !DILocation(line: 85, column: 20, scope: !7)
!56 = !DILocation(line: 86, column: 31, scope: !7)
!57 = !DILocation(line: 86, column: 36, scope: !7)
!58 = !DILocation(line: 87, column: 38, scope: !7)
!59 = !DILocation(line: 87, column: 16, scope: !7)
!60 = !DILocation(line: 88, column: 21, scope: !7)
!61 = !DILocation(line: 90, column: 20, scope: !7)
!62 = !DILocation(line: 91, column: 28, scope: !7)
!63 = !DILocation(line: 93, column: 20, scope: !7)
!64 = !DILocation(line: 95, column: 20, scope: !7)
!65 = !DILocation(line: 97, column: 33, scope: !7)
!66 = !DILocation(line: 98, column: 20, scope: !7)
!67 = !DILocation(line: 99, column: 24, scope: !7)
!68 = distinct !{!68, !36}
!69 = !DILocation(line: 102, column: 21, scope: !7)
!70 = !DILocation(line: 105, column: 20, scope: !7)
!71 = !DILocation(line: 106, column: 36, scope: !7)
!72 = !DILocation(line: 107, column: 16, scope: !7)
!73 = !DILocation(line: 108, column: 21, scope: !7)
!74 = !DILocation(line: 110, column: 20, scope: !7)
!75 = !DILocation(line: 111, column: 28, scope: !7)
!76 = !DILocation(line: 113, column: 20, scope: !7)
!77 = !DILocation(line: 115, column: 20, scope: !7)
!78 = !DILocation(line: 117, column: 33, scope: !7)
!79 = !DILocation(line: 118, column: 20, scope: !7)
!80 = !DILocation(line: 119, column: 24, scope: !7)
!81 = distinct !{!81, !36}
!82 = !DILocation(line: 101, column: 35, scope: !7)
!83 = !DILocation(line: 53, column: 35, scope: !7)
!84 = !DILocation(line: 73, column: 35, scope: !7)
!85 = !DILocation(line: 74, column: 34, scope: !7)
!86 = !DILocation(line: 121, column: 35, scope: !7)
!87 = !DILocation(line: 122, column: 35, scope: !7)
!88 = !DILocation(line: 0, scope: !7)
!89 = !DILocation(line: 126, column: 25, scope: !7)
!90 = !DILocation(line: 126, column: 37, scope: !7)
!91 = !DILocation(line: 126, column: 4, scope: !7)
