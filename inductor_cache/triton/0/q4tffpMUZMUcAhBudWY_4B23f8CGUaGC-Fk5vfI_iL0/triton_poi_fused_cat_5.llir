; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sdiv i32 %12, 16, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 5120, !dbg !15
  %15 = mul i32 %14, 5120, !dbg !16
  %srem.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = shl nsw i32 %14, 12, !dbg !17
  %17 = add nsw i32 %16, %srem.decomposed, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = shl nsw i32 %14, 10, !dbg !20
  %21 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !21
  %22 = insertelement <2 x i32> %21, i32 %13, i64 1, !dbg !21
  %23 = srem <2 x i32> %22, <i32 16, i32 320>, !dbg !21
  %24 = extractelement <2 x i32> %23, i64 1, !dbg !22
  %25 = icmp slt i32 %24, 256, !dbg !23
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %19, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !24
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !24
  %29 = icmp sgt i32 %24, 255, !dbg !22
  %30 = insertelement <2 x i32> <i32 poison, i32 -256>, i32 %20, i64 0, !dbg !25
  %31 = add nsw <2 x i32> %30, %23, !dbg !25
  %32 = extractelement <2 x i32> %31, i64 1, !dbg !26
  %33 = shl nsw i32 %32, 4, !dbg !26
  %34 = extractelement <2 x i32> %31, i64 0, !dbg !27
  %35 = add nsw i32 %34, %33, !dbg !27
  %36 = sext i32 %35 to i64, !dbg !28
  %37 = getelementptr i1, ptr addrspace(1) %1, i64 %36, !dbg !28
  %38 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u16 $0, 0x0;", "=c,l,b,b"(ptr addrspace(1) %37, i1 %29, i1 %29) #1, !dbg !29
  %39 = bitcast i16 %38 to <2 x i8>, !dbg !29
  %40 = icmp eq <2 x i8> %39, zeroinitializer, !dbg !29
  %41 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !30
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %41, i1 %29, i32 0, i1 %29, i32 0, i1 %29) #1, !dbg !31
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !31
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !31
  %45 = bitcast i32 %43 to float, !dbg !31
  %46 = bitcast i32 %44 to float, !dbg !31
  %47 = sext i32 %32 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %3, i64 %47, !dbg !32
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %29, i32 0, i1 %29) #1, !dbg !33
  %50 = bitcast i32 %49 to float, !dbg !33
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %29, i32 0, i1 %29) #1, !dbg !33
  %52 = bitcast i32 %51 to float, !dbg !33
  %53 = fadd float %45, %50, !dbg !34
  %54 = fadd float %46, %52, !dbg !34
  %55 = fmul float %53, 0x3F847AE140000000, !dbg !35
  %56 = fmul float %54, 0x3F847AE140000000, !dbg !35
  %57 = extractelement <2 x i1> %40, i64 0, !dbg !36
  %58 = select i1 %57, float %55, float %53, !dbg !36
  %59 = extractelement <2 x i1> %40, i64 1, !dbg !36
  %60 = select i1 %59, float %56, float %54, !dbg !36
  %61 = sext i32 %12 to i64, !dbg !37
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %61, !dbg !37
  %63 = bitcast float %58 to i32, !dbg !38
  %64 = select i1 %25, i32 %27, i32 %63, !dbg !39
  %65 = bitcast float %60 to i32, !dbg !38
  %66 = select i1 %25, i32 %28, i32 %65, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %64, i32 %66, ptr addrspace(1) %62, i1 true) #1, !dbg !38
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqsvvjfub4xoedodwit3gkvyyms3rnv7u7f475nor3uyitp6d26w.py", directory: "inductor_cache/qs")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 50, scope: !7)
!18 = !DILocation(line: 33, column: 45, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 37, column: 59, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 34, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 55, scope: !7)
!25 = !DILocation(line: 37, column: 35, scope: !7)
!26 = !DILocation(line: 37, column: 39, scope: !7)
!27 = !DILocation(line: 37, column: 54, scope: !7)
!28 = !DILocation(line: 37, column: 30, scope: !7)
!29 = !DILocation(line: 37, column: 64, scope: !7)
!30 = !DILocation(line: 38, column: 31, scope: !7)
!31 = !DILocation(line: 38, column: 65, scope: !7)
!32 = !DILocation(line: 39, column: 31, scope: !7)
!33 = !DILocation(line: 39, column: 45, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 42, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 34, scope: !7)
!37 = !DILocation(line: 47, column: 25, scope: !7)
!38 = !DILocation(line: 47, column: 37, scope: !7)
!39 = !DILocation(line: 46, column: 33, scope: !7)
!40 = !DILocation(line: 47, column: 4, scope: !7)
