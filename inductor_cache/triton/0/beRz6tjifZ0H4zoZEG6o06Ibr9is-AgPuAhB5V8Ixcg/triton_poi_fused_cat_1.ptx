//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_1  // -- Begin function triton_poi_fused_cat_1
                                        // @triton_poi_fused_cat_1
.visible .entry triton_poi_fused_cat_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_1_param_1,
	.param .u32 triton_poi_fused_cat_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_1_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:21:33
	shl.b32 	%r19, %r1, 5;
	.loc	1 22 36                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 31;
	.loc	1 22 23                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:23:21
	setp.lt.s32 	%p17, %r22, 32;
	.loc	1 25 21                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:25:21
	shr.u32 	%r24, %r22, 31;
	add.s32 	%r25, %r22, %r24;
	shr.s32 	%r26, %r25, 1;
	.loc	1 24 19                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:24:19
	and.b32  	%r27, %r25, -2;
	sub.s32 	%r28, %r22, %r27;
	.loc	1 25 26                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:25:26
	shr.u32 	%r29, %r26, 30;
	add.s32 	%r30, %r26, %r29;
	and.b32  	%r31, %r30, -4;
	sub.s32 	%r32, %r26, %r31;
	.loc	1 26 19                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:26:19
	bfe.s32 	%r33, %r1, 26, 1;
	shr.u32 	%r34, %r33, 29;
	add.s32 	%r35, %r22, %r34;
	.loc	1 32 18                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:32:18
	setp.lt.s32 	%p18, %r28, 1;
	.loc	1 33 38                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:33:38
	shl.b32 	%r36, %r35, 1;
	and.b32  	%r37, %r36, -16;
	.loc	1 33 35                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:33:35
	add.s32 	%r38, %r32, %r37;
	.loc	1 33 30                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:33:30
	mul.wide.s32 	%rd12, %r38, 4;
	add.s64 	%rd1, %rd10, %rd12;
	.loc	1 33 50                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:33:50
	and.pred  	%p1, %p17, %p18;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 34 39                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:34:39
	add.s32 	%r39, %r38, 4;
	.loc	1 34 30                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:34:30
	mul.wide.s32 	%rd13, %r39, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 34 47                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:34:47
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 35 18                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:35:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 36 39                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:36:39
	add.s32 	%r40, %r38, 8;
	.loc	1 36 30                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:36:30
	mul.wide.s32 	%rd14, %r40, 4;
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 36 47                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:36:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 37 18                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:37:18
	add.f32 	%f5, %f3, %f4;
	.loc	1 38 41                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:38:41
	add.s32 	%r41, %r38, 12;
	.loc	1 38 31                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:38:31
	mul.wide.s32 	%rd15, %r41, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 38 49                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:38:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f6, %r8;
	.loc	1 39 20                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:39:20
	add.f32 	%f7, %f5, %f6;
	.loc	1 44 20                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:44:20
	setp.gt.s32 	%p19, %r28, 0;
	.loc	1 47 52                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:47:52
	and.pred  	%p9, %p17, %p19;
	.loc	1 47 44                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:47:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd1 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 48 48                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:48:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	@!%p9 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f9, %r12;
	.loc	1 49 20                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:49:20
	add.f32 	%f10, %f8, %f9;
	.loc	1 50 48                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:50:48
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r14 }, [ %rd3 + 0 ];
	@!%p9 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f11, %r14;
	.loc	1 51 20                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:51:20
	add.f32 	%f12, %f10, %f11;
	.loc	1 52 49                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:52:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r16 }, [ %rd4 + 0 ];
	@!%p9 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f13, %r16;
	.loc	1 53 20                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:53:20
	add.f32 	%f14, %f12, %f13;
	.loc	1 0 0                           // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:0:0
	selp.f32 	%f15, %f7, %f14, %p18;
	mul.f32 	%f16, %f15, 0f3E800000;
	.loc	1 59 25                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:59:25
	mul.wide.s32 	%rd16, %r22, 4;
	add.s64 	%rd9, %rd11, %rd16;
	.loc	1 59 37                         // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:59:37
	mov.b32 	%r18, %f16;
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 59 4                          // cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py:59:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ck/cckgkojsewqhzgjtteo52frfbbceyb5cl3qfsalofdigymdfffkg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 107
.b8 103
.b8 107
.b8 111
.b8 106
.b8 115
.b8 101
.b8 119
.b8 113
.b8 104
.b8 122
.b8 103
.b8 106
.b8 116
.b8 116
.b8 101
.b8 111
.b8 53
.b8 50
.b8 102
.b8 114
.b8 102
.b8 98
.b8 98
.b8 99
.b8 101
.b8 121
.b8 98
.b8 53
.b8 99
.b8 108
.b8 51
.b8 113
.b8 102
.b8 115
.b8 97
.b8 108
.b8 111
.b8 102
.b8 100
.b8 105
.b8 103
.b8 121
.b8 109
.b8 100
.b8 102
.b8 102
.b8 102
.b8 107
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
