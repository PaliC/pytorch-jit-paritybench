//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clamp_div_linalg_vector_norm_mul_0 // -- Begin function triton_poi_fused_clamp_div_linalg_vector_norm_mul_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_clamp_div_linalg_vector_norm_mul_0
.visible .entry triton_poi_fused_clamp_div_linalg_vector_norm_mul_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_2,
	.param .u32 triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<30>;
	.reg .f32 	%f<30>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:21:33
	shl.b32 	%r21, %r1, 8;
	ld.param.u64 	%rd13, [triton_poi_fused_clamp_div_linalg_vector_norm_mul_0_param_2];
	.loc	1 22 36                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:22:36
	mov.u32 	%r22, %tid.x;
	shl.b32 	%r23, %r22, 1;
	and.b32  	%r24, %r23, 254;
	.loc	1 22 23                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:22:23
	or.b32  	%r25, %r21, %r24;
	.loc	1 23 21                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:23:21
	setp.lt.s32 	%p1, %r25, 256;
	.loc	1 25 19                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:25:19
	bfe.s32 	%r26, %r1, 23, 1;
	shr.u32 	%r27, %r26, 30;
	add.s32 	%r28, %r25, %r27;
	.loc	1 26 30                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:26:30
	mul.wide.s32 	%rd14, %r25, 4;
	add.s64 	%rd1, %rd12, %rd14;
	.loc	1 26 35                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:26:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r17 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 32                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:27:32
	and.b32  	%r29, %r28, -4;
	.loc	1 27 30                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:27:30
	mul.wide.s32 	%rd15, %r29, 4;
	add.s64 	%rd2, %rd12, %rd15;
	.loc	1 27 37                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:27:37
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 28 30                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:28:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 28 41                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:28:41
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 29 30                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:29:30
	add.s64 	%rd6, %rd2, 8;
	.loc	1 29 41                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:29:41
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r9;
	.loc	1 30 30                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:30:30
	add.s64 	%rd8, %rd2, 12;
	.loc	1 30 41                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:30:41
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r11;
	mov.pred 	%p10, -1;
	.loc	1 31 20                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:31:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p10 ld.global.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:34:18
	mul.f32 	%f9, %f3, %f3;
	mul.f32 	%f10, %f4, %f4;
	.loc	1 35 18                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:35:18
	fma.rn.f32 	%f11, %f1, %f1, %f9;
	fma.rn.f32 	%f12, %f2, %f2, %f10;
	.loc	1 37 18                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:37:18
	fma.rn.f32 	%f13, %f5, %f5, %f11;
	fma.rn.f32 	%f14, %f6, %f6, %f12;
	.loc	1 39 19                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:39:19
	fma.rn.f32 	%f15, %f7, %f7, %f13;
	fma.rn.f32 	%f16, %f8, %f8, %f14;
	.loc	1 40 27                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:40:27
	sqrt.approx.ftz.f32 	%f17, %f15;
	sqrt.approx.ftz.f32 	%f18, %f16;
	.loc	1 31 20                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:31:20
	mov.b32 	%f19, %r12;
	.loc	1 42 20                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:42:20
	mul.f32 	%f20, %f17, 0f3F000000;
	mul.f32 	%f21, %f18, 0f3F000000;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p12, %f20, 0f3727C5AC;
	setp.gt.f32 	%p13, %f21, 0f3727C5AC;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p14, %f20, %f20;
	setp.nan.f32 	%p15, %f21, %f21;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f22, %f20, 0f3727C5AC, %p14;
	selp.f32 	%f23, %f20, %f22, %p12;
	selp.f32 	%f24, %f21, 0f3727C5AC, %p15;
	selp.f32 	%f25, %f21, %f24, %p13;
$L__tmp2:
	.loc	1 45 19                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:45:19
	mov.b32 	%r15, %f23;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f26, %r13;
	mov.b32 	%r18, %f25;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f27, %r16;
	.loc	1 46 20                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:46:20
	mul.f32 	%f28, %f26, %f19;
	mul.f32 	%f29, %f27, %f19;
	.loc	1 47 25                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:47:25
	add.s64 	%rd11, %rd13, %rd14;
	.loc	1 47 37                         // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:47:37
	mov.b32 	%r19, %f28;
	mov.b32 	%r20, %f29;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r19, %r20 };
	// end inline asm
	.loc	1 47 4                          // cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py:47:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dv/cdv5hdu5xvu6bhdxnhv5qytn4hntc2zgearofr7osqiz7guvsznq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 196                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 118
.b8 53
.b8 104
.b8 100
.b8 117
.b8 53
.b8 120
.b8 118
.b8 117
.b8 54
.b8 98
.b8 104
.b8 100
.b8 120
.b8 110
.b8 104
.b8 118
.b8 53
.b8 113
.b8 121
.b8 116
.b8 110
.b8 52
.b8 104
.b8 110
.b8 116
.b8 99
.b8 50
.b8 122
.b8 103
.b8 101
.b8 97
.b8 114
.b8 111
.b8 102
.b8 114
.b8 55
.b8 111
.b8 115
.b8 113
.b8 105
.b8 122
.b8 55
.b8 103
.b8 117
.b8 118
.b8 115
.b8 122
.b8 110
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
