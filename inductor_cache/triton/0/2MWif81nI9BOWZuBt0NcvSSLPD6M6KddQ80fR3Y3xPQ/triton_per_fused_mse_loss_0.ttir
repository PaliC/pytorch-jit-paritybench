#loc = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":35:24)
#loc20 = loc(callsite(#loc1 at #loc13))
module {
  tt.func public @triton_per_fused_mse_loss_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.muli %1, %cst_0 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.addi %2, %cst : tensor<1x64xi32> loc(#loc5)
    %4 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc6)
    %5 = tt.addptr %4, %3 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc6)
    %6 = tt.load %5 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %3 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %10 = arith.subf %6, %9 : tensor<1x64xf32> loc(#loc10)
    %11 = arith.mulf %10, %10 : tensor<1x64xf32> loc(#loc11)
    %12 = "tt.reduce"(%11) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc13)), %arg5: f32 loc(callsite(#loc1 at #loc13))):
      %16 = arith.addf %arg4, %arg5 : f32 loc(#loc22)
      tt.reduce.return %16 : f32 loc(#loc19)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc19)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc15)
    %14 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc16)
    %15 = tt.splat %14 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    tt.store %15, %13 : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    tt.return loc(#loc18)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":26:26)
#loc3 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":26:34)
#loc4 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":30:36)
#loc5 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":30:34)
#loc6 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":30:30)
#loc7 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":30:41)
#loc8 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":31:30)
#loc9 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":31:41)
#loc10 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":32:18)
#loc11 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":33:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc15 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":35:27)
#loc16 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":36:25)
#loc17 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":36:67)
#loc18 = loc("inductor_cache/3j/c3j7roae3va2jaz4e4nugobobgedukqlganbtou6sksrnpldlxlg.py":36:4)
#loc19 = loc(callsite(#loc12 at #loc13))
#loc21 = loc(callsite(#loc14 at #loc12))
#loc22 = loc(callsite(#loc21 at #loc13))
