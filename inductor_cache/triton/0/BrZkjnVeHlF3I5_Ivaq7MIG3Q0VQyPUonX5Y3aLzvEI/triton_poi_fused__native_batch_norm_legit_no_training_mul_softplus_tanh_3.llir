; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 9, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 510, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = srem i32 %13, 128, !dbg !14
  %15 = sext i32 %13 to i64, !dbg !15
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #3, !dbg !16
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !16
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !16
  %20 = bitcast i32 %18 to float, !dbg !16
  %21 = bitcast i32 %19 to float, !dbg !16
  %22 = sext i32 %14 to i64, !dbg !17
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !17
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %23, i1 true) #3, !dbg !18
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !18
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !18
  %27 = bitcast i32 %25 to float, !dbg !18
  %28 = bitcast i32 %26 to float, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %22, !dbg !19
  %30 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %29, i1 true) #3, !dbg !20
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !20
  %32 = extractvalue { i32, i32 } %30, 1, !dbg !20
  %33 = bitcast i32 %31 to float, !dbg !20
  %34 = bitcast i32 %32 to float, !dbg !20
  %35 = getelementptr float, ptr addrspace(1) %4, i64 %22, !dbg !21
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !22
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !22
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !22
  %39 = bitcast i32 %37 to float, !dbg !22
  %40 = bitcast i32 %38 to float, !dbg !22
  %41 = getelementptr float, ptr addrspace(1) %5, i64 %22, !dbg !23
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 true) #3, !dbg !24
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !24
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !24
  %45 = bitcast i32 %43 to float, !dbg !24
  %46 = bitcast i32 %44 to float, !dbg !24
  %47 = fsub float %20, %27, !dbg !25
  %48 = fsub float %21, %28, !dbg !25
  %49 = fadd float %33, 0x3EE4F8B580000000, !dbg !26
  %50 = fadd float %34, 0x3EE4F8B580000000, !dbg !26
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i = icmp eq i32 %51, 0, !dbg !27
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !27
  %.not1.i = icmp eq i32 %52, 0, !dbg !27
  br i1 %.not.i, label %58, label %53, !dbg !27

53:                                               ; preds = %7
  br i1 %.not1.i, label %56, label %54, !dbg !27

54:                                               ; preds = %53
  %55 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %49) #3, !dbg !27
  br label %__nv_sqrtf.exit, !dbg !27

56:                                               ; preds = %53
  %57 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %49) #3, !dbg !27
  br label %__nv_sqrtf.exit, !dbg !27

58:                                               ; preds = %7
  br i1 %.not1.i, label %61, label %59, !dbg !27

59:                                               ; preds = %58
  %60 = tail call float @llvm.nvvm.sqrt.rn.f(float %49) #3, !dbg !27
  br label %__nv_sqrtf.exit, !dbg !27

61:                                               ; preds = %58
  %62 = tail call float @llvm.nvvm.sqrt.approx.f(float %49) #3, !dbg !27
  br label %__nv_sqrtf.exit, !dbg !27

__nv_sqrtf.exit:                                  ; preds = %54, %56, %59, %61
  %.0.i = phi float [ %55, %54 ], [ %57, %56 ], [ %60, %59 ], [ %62, %61 ], !dbg !27
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i1 = icmp eq i32 %63, 0, !dbg !27
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !27
  %.not1.i4 = icmp eq i32 %64, 0, !dbg !27
  br i1 %.not.i1, label %70, label %65, !dbg !27

65:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %68, label %66, !dbg !27

66:                                               ; preds = %65
  %67 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %50) #3, !dbg !27
  br label %__nv_sqrtf.exit5, !dbg !27

68:                                               ; preds = %65
  %69 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %50) #3, !dbg !27
  br label %__nv_sqrtf.exit5, !dbg !27

70:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %73, label %71, !dbg !27

71:                                               ; preds = %70
  %72 = tail call float @llvm.nvvm.sqrt.rn.f(float %50) #3, !dbg !27
  br label %__nv_sqrtf.exit5, !dbg !27

73:                                               ; preds = %70
  %74 = tail call float @llvm.nvvm.sqrt.approx.f(float %50) #3, !dbg !27
  br label %__nv_sqrtf.exit5, !dbg !27

__nv_sqrtf.exit5:                                 ; preds = %66, %68, %71, %73
  %.0.i3 = phi float [ %67, %66 ], [ %69, %68 ], [ %72, %71 ], [ %74, %73 ], !dbg !27
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !28
  %76 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !28
  %77 = fmul float %47, %75, !dbg !29
  %78 = fmul float %48, %76, !dbg !29
  %79 = fmul float %77, %39, !dbg !30
  %80 = fmul float %78, %40, !dbg !30
  %81 = fadd float %79, %45, !dbg !31
  %82 = fadd float %80, %46, !dbg !31
  %83 = fcmp ogt float %81, 2.000000e+01, !dbg !32
  %84 = fcmp ogt float %82, 2.000000e+01, !dbg !32
  %85 = fmul float %81, 0x3FF7154760000000, !dbg !33
  %86 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %85) #3, !dbg !33
  %87 = fmul float %82, 0x3FF7154760000000, !dbg !33
  %88 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %87) #3, !dbg !33
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i29 = icmp eq i32 %89, 0, !dbg !34
  %90 = tail call float @llvm.nvvm.add.rz.ftz.f(float %86, float 1.000000e+00) #3, !dbg !34
  %91 = tail call float @llvm.nvvm.add.rz.f(float %86, float 1.000000e+00) #3, !dbg !34
  %.01.i30 = select i1 %.not.i29, float %91, float %90, !dbg !34
  %92 = bitcast float %.01.i30 to i32, !dbg !34
  %93 = add i32 %92, -1061158912, !dbg !34
  %94 = and i32 %93, -8388608, !dbg !34
  %95 = bitcast float %86 to i32, !dbg !34
  %96 = sub i32 %95, %94, !dbg !34
  %97 = bitcast i32 %96 to float, !dbg !34
  %98 = sub i32 1082130432, %94, !dbg !34
  %99 = bitcast i32 %98 to float, !dbg !34
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not14.i = icmp eq i32 %100, 0, !dbg !34
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %99, float -1.000000e+00) #3, !dbg !34
  %102 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %99, float -1.000000e+00) #3, !dbg !34
  %.09.i = select i1 %.not14.i, float %102, float %101, !dbg !34
  %103 = fadd float %.09.i, %97, !dbg !34
  %104 = sitofp i32 %94 to float, !dbg !34
  %105 = fmul float %104, 0x3E80000000000000, !dbg !34
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not15.i = icmp eq i32 %106, 0, !dbg !34
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %103, float 0x3FBB000240000000) #3, !dbg !34
  %108 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %103, float 0x3FBB000240000000) #3, !dbg !34
  %.012.i = select i1 %.not15.i, float %108, float %107, !dbg !34
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not16.i = icmp eq i32 %109, 0, !dbg !34
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %103, float 0xBFC0EF1C00000000) #3, !dbg !34
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %103, float 0xBFC0EF1C00000000) #3, !dbg !34
  %.010.i = select i1 %.not16.i, float %111, float %110, !dbg !34
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not17.i = icmp eq i32 %112, 0, !dbg !34
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %103, float 0x3FC28C8EA0000000) #3, !dbg !34
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %103, float 0x3FC28C8EA0000000) #3, !dbg !34
  %.06.i31 = select i1 %.not17.i, float %114, float %113, !dbg !34
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not18.i = icmp eq i32 %115, 0, !dbg !34
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %103, float 0xBFC54D1BA0000000) #3, !dbg !34
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %103, float 0xBFC54D1BA0000000) #3, !dbg !34
  %.02.i32 = select i1 %.not18.i, float %117, float %116, !dbg !34
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not19.i = icmp eq i32 %118, 0, !dbg !34
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i32, float %103, float 0x3FC995F3C0000000) #3, !dbg !34
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i32, float %103, float 0x3FC995F3C0000000) #3, !dbg !34
  %.0.i33 = select i1 %.not19.i, float %120, float %119, !dbg !34
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not20.i = icmp eq i32 %121, 0, !dbg !34
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %103, float 0xBFD0000840000000) #3, !dbg !34
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %103, float 0xBFD0000840000000) #3, !dbg !34
  %.011.i = select i1 %.not20.i, float %123, float %122, !dbg !34
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not21.i = icmp eq i32 %124, 0, !dbg !34
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %103, float 0x3FD5555CC0000000) #3, !dbg !34
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %103, float 0x3FD5555CC0000000) #3, !dbg !34
  %.08.i = select i1 %.not21.i, float %126, float %125, !dbg !34
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not22.i = icmp eq i32 %127, 0, !dbg !34
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %103, float -5.000000e-01) #3, !dbg !34
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %103, float -5.000000e-01) #3, !dbg !34
  %.07.i = select i1 %.not22.i, float %129, float %128, !dbg !34
  %130 = fmul float %103, %.07.i, !dbg !34
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not23.i = icmp eq i32 %131, 0, !dbg !34
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float %103, float %103) #3, !dbg !34
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float %103, float %103) #3, !dbg !34
  %.05.i34 = select i1 %.not23.i, float %133, float %132, !dbg !34
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not24.i = icmp eq i32 %134, 0, !dbg !34
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !34
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %105, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !34
  %.04.i35 = select i1 %.not24.i, float %136, float %135, !dbg !34
  %137 = icmp ugt i32 %95, 2139095039, !dbg !34
  br i1 %137, label %138, label %__nv_log1pf.exit, !dbg !34

138:                                              ; preds = %__nv_sqrtf.exit5
  %139 = icmp sgt i32 %95, -1082130432, !dbg !34
  br i1 %139, label %__nv_fmaf_rn.exit.i, label %143, !dbg !34

__nv_fmaf_rn.exit.i:                              ; preds = %138
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not25.i = icmp eq i32 %140, 0, !dbg !34
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %86, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %86, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i36 = select i1 %.not25.i, float %142, float %141, !dbg !34
  br label %143, !dbg !34

143:                                              ; preds = %__nv_fmaf_rn.exit.i, %138
  %r.0.i = phi float [ %.03.i36, %__nv_fmaf_rn.exit.i ], [ %.04.i35, %138 ], !dbg !34
  %144 = fcmp oeq float %86, 0.000000e+00, !dbg !34
  %r.1.i = select i1 %144, float -0.000000e+00, float %r.0.i, !dbg !34
  br label %__nv_log1pf.exit, !dbg !34

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit5, %143
  %r.2.i = phi float [ %r.1.i, %143 ], [ %.04.i35, %__nv_sqrtf.exit5 ], !dbg !34
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i37 = icmp eq i32 %145, 0, !dbg !34
  %146 = tail call float @llvm.nvvm.add.rz.ftz.f(float %88, float 1.000000e+00) #3, !dbg !34
  %147 = tail call float @llvm.nvvm.add.rz.f(float %88, float 1.000000e+00) #3, !dbg !34
  %.01.i38 = select i1 %.not.i37, float %147, float %146, !dbg !34
  %148 = bitcast float %.01.i38 to i32, !dbg !34
  %149 = add i32 %148, -1061158912, !dbg !34
  %150 = and i32 %149, -8388608, !dbg !34
  %151 = bitcast float %88 to i32, !dbg !34
  %152 = sub i32 %151, %150, !dbg !34
  %153 = bitcast i32 %152 to float, !dbg !34
  %154 = sub i32 1082130432, %150, !dbg !34
  %155 = bitcast i32 %154 to float, !dbg !34
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not14.i39 = icmp eq i32 %156, 0, !dbg !34
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %155, float -1.000000e+00) #3, !dbg !34
  %158 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %155, float -1.000000e+00) #3, !dbg !34
  %.09.i40 = select i1 %.not14.i39, float %158, float %157, !dbg !34
  %159 = fadd float %.09.i40, %153, !dbg !34
  %160 = sitofp i32 %150 to float, !dbg !34
  %161 = fmul float %160, 0x3E80000000000000, !dbg !34
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not15.i41 = icmp eq i32 %162, 0, !dbg !34
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %159, float 0x3FBB000240000000) #3, !dbg !34
  %164 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %159, float 0x3FBB000240000000) #3, !dbg !34
  %.012.i42 = select i1 %.not15.i41, float %164, float %163, !dbg !34
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not16.i43 = icmp eq i32 %165, 0, !dbg !34
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i42, float %159, float 0xBFC0EF1C00000000) #3, !dbg !34
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i42, float %159, float 0xBFC0EF1C00000000) #3, !dbg !34
  %.010.i44 = select i1 %.not16.i43, float %167, float %166, !dbg !34
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not17.i45 = icmp eq i32 %168, 0, !dbg !34
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i44, float %159, float 0x3FC28C8EA0000000) #3, !dbg !34
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i44, float %159, float 0x3FC28C8EA0000000) #3, !dbg !34
  %.06.i46 = select i1 %.not17.i45, float %170, float %169, !dbg !34
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not18.i47 = icmp eq i32 %171, 0, !dbg !34
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %159, float 0xBFC54D1BA0000000) #3, !dbg !34
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %159, float 0xBFC54D1BA0000000) #3, !dbg !34
  %.02.i48 = select i1 %.not18.i47, float %173, float %172, !dbg !34
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not19.i49 = icmp eq i32 %174, 0, !dbg !34
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i48, float %159, float 0x3FC995F3C0000000) #3, !dbg !34
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i48, float %159, float 0x3FC995F3C0000000) #3, !dbg !34
  %.0.i50 = select i1 %.not19.i49, float %176, float %175, !dbg !34
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not20.i51 = icmp eq i32 %177, 0, !dbg !34
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %159, float 0xBFD0000840000000) #3, !dbg !34
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %159, float 0xBFD0000840000000) #3, !dbg !34
  %.011.i52 = select i1 %.not20.i51, float %179, float %178, !dbg !34
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not21.i53 = icmp eq i32 %180, 0, !dbg !34
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i52, float %159, float 0x3FD5555CC0000000) #3, !dbg !34
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i52, float %159, float 0x3FD5555CC0000000) #3, !dbg !34
  %.08.i54 = select i1 %.not21.i53, float %182, float %181, !dbg !34
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not22.i55 = icmp eq i32 %183, 0, !dbg !34
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i54, float %159, float -5.000000e-01) #3, !dbg !34
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i54, float %159, float -5.000000e-01) #3, !dbg !34
  %.07.i56 = select i1 %.not22.i55, float %185, float %184, !dbg !34
  %186 = fmul float %159, %.07.i56, !dbg !34
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not23.i57 = icmp eq i32 %187, 0, !dbg !34
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %186, float %159, float %159) #3, !dbg !34
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %186, float %159, float %159) #3, !dbg !34
  %.05.i58 = select i1 %.not23.i57, float %189, float %188, !dbg !34
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not24.i59 = icmp eq i32 %190, 0, !dbg !34
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !34
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %161, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !34
  %.04.i60 = select i1 %.not24.i59, float %192, float %191, !dbg !34
  %193 = icmp ugt i32 %151, 2139095039, !dbg !34
  br i1 %193, label %194, label %__nv_log1pf.exit67, !dbg !34

194:                                              ; preds = %__nv_log1pf.exit
  %195 = icmp sgt i32 %151, -1082130432, !dbg !34
  br i1 %195, label %__nv_fmaf_rn.exit.i64, label %199, !dbg !34

__nv_fmaf_rn.exit.i64:                            ; preds = %194
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not25.i65 = icmp eq i32 %196, 0, !dbg !34
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !34
  %.03.i66 = select i1 %.not25.i65, float %198, float %197, !dbg !34
  br label %199, !dbg !34

199:                                              ; preds = %__nv_fmaf_rn.exit.i64, %194
  %r.0.i62 = phi float [ %.03.i66, %__nv_fmaf_rn.exit.i64 ], [ %.04.i60, %194 ], !dbg !34
  %200 = fcmp oeq float %88, 0.000000e+00, !dbg !34
  %r.1.i63 = select i1 %200, float -0.000000e+00, float %r.0.i62, !dbg !34
  br label %__nv_log1pf.exit67, !dbg !34

__nv_log1pf.exit67:                               ; preds = %__nv_log1pf.exit, %199
  %r.2.i61 = phi float [ %r.1.i63, %199 ], [ %.04.i60, %__nv_log1pf.exit ], !dbg !34
  %201 = select i1 %83, float %81, float %r.2.i, !dbg !35
  %202 = select i1 %84, float %82, float %r.2.i61, !dbg !35
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i6 = icmp eq i32 %203, 0, !dbg !36
  %204 = tail call float @llvm.nvvm.fabs.ftz.f(float %201) #3, !dbg !36
  %205 = tail call float @llvm.nvvm.fabs.f(float %201) #3, !dbg !36
  %.01.i = select i1 %.not.i6, float %205, float %204, !dbg !36
  %206 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !36
  br i1 %206, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !36

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit67
  %207 = fmul float %.01.i, 0x4007154760000000, !dbg !36
  %208 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %207) #3, !dbg !36
  %209 = fadd float %208, 1.000000e+00, !dbg !36
  %210 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %209) #4, !dbg !36, !srcloc !37
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i = icmp eq i32 %211, 0, !dbg !36
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %210, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %210, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i = select i1 %.not6.i, float %213, float %212, !dbg !36
  %214 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !36
  %s.0.i = select i1 %214, float 1.000000e+00, float %.03.i, !dbg !36
  %215 = bitcast float %s.0.i to i32, !dbg !36
  %216 = bitcast float %201 to i32, !dbg !36
  %217 = and i32 %216, -2147483648, !dbg !36
  %218 = or i32 %217, %215, !dbg !36
  %219 = bitcast i32 %218 to float, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit67
  %220 = fmul float %201, %201, !dbg !36
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i7 = icmp eq i32 %221, 0, !dbg !36
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %220, float 0xBFAAC795C0000000) #3, !dbg !36
  %223 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %220, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i = select i1 %.not1.i7, float %223, float %222, !dbg !36
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i8 = icmp eq i32 %224, 0, !dbg !36
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %220, float 0x3FC10B2820000000) #3, !dbg !36
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %220, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i = select i1 %.not2.i8, float %226, float %225, !dbg !36
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i = icmp eq i32 %227, 0, !dbg !36
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %220, float 0xBFD5553DA0000000) #3, !dbg !36
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %220, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i9 = select i1 %.not3.i, float %229, float %228, !dbg !36
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i = icmp eq i32 %230, 0, !dbg !36
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %220, float 0.000000e+00) #3, !dbg !36
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %220, float 0.000000e+00) #3, !dbg !36
  %.04.i = select i1 %.not4.i, float %232, float %231, !dbg !36
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i = icmp eq i32 %233, 0, !dbg !36
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %201, float %201) #3, !dbg !36
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %201, float %201) #3, !dbg !36
  %.02.i = select i1 %.not5.i, float %235, float %234, !dbg !36
  br label %__nv_tanhf.exit, !dbg !36

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %219, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !36
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i10 = icmp eq i32 %236, 0, !dbg !36
  %237 = tail call float @llvm.nvvm.fabs.ftz.f(float %202) #3, !dbg !36
  %238 = tail call float @llvm.nvvm.fabs.f(float %202) #3, !dbg !36
  %.01.i11 = select i1 %.not.i10, float %238, float %237, !dbg !36
  %239 = fcmp ult float %.01.i11, 0x3FE3333340000000, !dbg !36
  br i1 %239, label %__internal_fmad.exit3.i17, label %__internal_fmad.exit1.i12, !dbg !36

__internal_fmad.exit1.i12:                        ; preds = %__nv_tanhf.exit
  %240 = fmul float %.01.i11, 0x4007154760000000, !dbg !36
  %241 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %240) #3, !dbg !36
  %242 = fadd float %241, 1.000000e+00, !dbg !36
  %243 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %242) #4, !dbg !36, !srcloc !37
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i13 = icmp eq i32 %244, 0, !dbg !36
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %243, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %243, float -2.000000e+00, float 1.000000e+00) #3, !dbg !36
  %.03.i14 = select i1 %.not6.i13, float %246, float %245, !dbg !36
  %247 = fcmp oge float %.01.i11, 0x4022059680000000, !dbg !36
  %s.0.i15 = select i1 %247, float 1.000000e+00, float %.03.i14, !dbg !36
  %248 = bitcast float %s.0.i15 to i32, !dbg !36
  %249 = bitcast float %202 to i32, !dbg !36
  %250 = and i32 %249, -2147483648, !dbg !36
  %251 = or i32 %250, %248, !dbg !36
  %252 = bitcast i32 %251 to float, !dbg !36
  br label %__nv_tanhf.exit28, !dbg !36

__internal_fmad.exit3.i17:                        ; preds = %__nv_tanhf.exit
  %253 = fmul float %202, %202, !dbg !36
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i18 = icmp eq i32 %254, 0, !dbg !36
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %253, float 0xBFAAC795C0000000) #3, !dbg !36
  %256 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %253, float 0xBFAAC795C0000000) #3, !dbg !36
  %.06.i19 = select i1 %.not1.i18, float %256, float %255, !dbg !36
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i20 = icmp eq i32 %257, 0, !dbg !36
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i19, float %253, float 0x3FC10B2820000000) #3, !dbg !36
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i19, float %253, float 0x3FC10B2820000000) #3, !dbg !36
  %.05.i21 = select i1 %.not2.i20, float %259, float %258, !dbg !36
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i22 = icmp eq i32 %260, 0, !dbg !36
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i21, float %253, float 0xBFD5553DA0000000) #3, !dbg !36
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i21, float %253, float 0xBFD5553DA0000000) #3, !dbg !36
  %.0.i23 = select i1 %.not3.i22, float %262, float %261, !dbg !36
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i24 = icmp eq i32 %263, 0, !dbg !36
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i23, float %253, float 0.000000e+00) #3, !dbg !36
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i23, float %253, float 0.000000e+00) #3, !dbg !36
  %.04.i25 = select i1 %.not4.i24, float %265, float %264, !dbg !36
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i26 = icmp eq i32 %266, 0, !dbg !36
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i25, float %202, float %202) #3, !dbg !36
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i25, float %202, float %202) #3, !dbg !36
  %.02.i27 = select i1 %.not5.i26, float %268, float %267, !dbg !36
  br label %__nv_tanhf.exit28, !dbg !36

__nv_tanhf.exit28:                                ; preds = %__internal_fmad.exit1.i12, %__internal_fmad.exit3.i17
  %s.1.i16 = phi float [ %252, %__internal_fmad.exit1.i12 ], [ %.02.i27, %__internal_fmad.exit3.i17 ], !dbg !36
  %269 = fmul float %81, %s.1.i, !dbg !38
  %270 = fmul float %82, %s.1.i16, !dbg !38
  %271 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !39
  %272 = bitcast float %269 to i32, !dbg !40
  %273 = bitcast float %270 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %272, i32 %273, ptr addrspace(1) %271, i1 true) #3, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czzjv7bsmtkykngnmrudnmzqg2zhoggsplcricbc3tvpw7hq3w5l.py", directory: "inductor_cache/zz")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_3, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_3", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 30, scope: !7)
!16 = !DILocation(line: 26, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 18, scope: !7)
!26 = !DILocation(line: 33, column: 18, scope: !7)
!27 = !DILocation(line: 34, column: 26, scope: !7)
!28 = !DILocation(line: 36, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 19, scope: !7)
!30 = !DILocation(line: 40, column: 20, scope: !7)
!31 = !DILocation(line: 41, column: 20, scope: !7)
!32 = !DILocation(line: 43, column: 20, scope: !7)
!33 = !DILocation(line: 44, column: 24, scope: !7)
!34 = !DILocation(line: 45, column: 28, scope: !7)
!35 = !DILocation(line: 46, column: 35, scope: !7)
!36 = !DILocation(line: 47, column: 27, scope: !7)
!37 = !{i32 21046}
!38 = !DILocation(line: 48, column: 20, scope: !7)
!39 = !DILocation(line: 49, column: 28, scope: !7)
!40 = !DILocation(line: 49, column: 40, scope: !7)
!41 = !DILocation(line: 49, column: 4, scope: !7)
