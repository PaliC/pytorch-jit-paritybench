; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_clone_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 12, !dbg !12
  %10 = lshr i32 %7, 3, !dbg !12
  %11 = and i32 %10, 15, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %6, %11, !dbg !13
  %14 = icmp slt i32 %12, 16, !dbg !14
  %15 = icmp slt i32 %13, 16, !dbg !14
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %17 = shl i32 %16, 5, !dbg !16
  %18 = lshr i32 %7, 2, !dbg !17
  %19 = and i32 %18, 31, !dbg !17
  %20 = and i32 %8, 28, !dbg !17
  %21 = or disjoint i32 %17, %19, !dbg !18
  %22 = or disjoint i32 %17, %20, !dbg !18
  %23 = icmp slt i32 %21, 32, !dbg !19
  %24 = icmp slt i32 %22, 32, !dbg !19
  %25 = ashr exact i32 %12, 2, !dbg !20
  %26 = mul i32 %21, 12, !dbg !21
  %27 = mul i32 %25, 384, !dbg !22
  %28 = add i32 %26, %27, !dbg !23
  %29 = sext i32 %28 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !24
  %31 = and i1 %14, %23, !dbg !25
  %32 = and i1 %15, %24, !dbg !25
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %30, i1 %31) #2, !dbg !26
  %34 = extractvalue { i32, i32, i32, i32 } %33, 0, !dbg !26
  %35 = extractvalue { i32, i32, i32, i32 } %33, 1, !dbg !26
  %36 = extractvalue { i32, i32, i32, i32 } %33, 2, !dbg !26
  %37 = extractvalue { i32, i32, i32, i32 } %33, 3, !dbg !26
  %38 = shl i32 %13, 5, !dbg !27
  %39 = add i32 %22, %38, !dbg !28
  %40 = sext i32 %39 to i64, !dbg !29
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !29
  %42 = shl i32 %7, 7, !dbg !30
  %43 = and i32 %42, 384, !dbg !30
  %44 = or disjoint i32 %43, %19, !dbg !30
  %45 = and i32 %8, 508, !dbg !30
  %46 = lshr exact i32 %43, 3, !dbg !30
  %47 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %46, !dbg !30
  %48 = getelementptr float, ptr addrspace(3) %47, i32 %44, !dbg !30
  %49 = insertelement <1 x i32> poison, i32 %34, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %48, <1 x i32> %49, i1 true) #2, !dbg !30
  %50 = or disjoint i32 %44, 32, !dbg !30
  %51 = lshr i32 %50, 5, !dbg !30
  %52 = getelementptr float, ptr addrspace(3) @global_smem, i32 %51, !dbg !30
  %53 = getelementptr float, ptr addrspace(3) %52, i32 %50, !dbg !30
  %54 = insertelement <1 x i32> poison, i32 %35, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %53, <1 x i32> %54, i1 true) #2, !dbg !30
  %55 = or disjoint i32 %44, 64, !dbg !30
  %56 = lshr i32 %55, 5, !dbg !30
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i32 %56, !dbg !30
  %58 = getelementptr float, ptr addrspace(3) %57, i32 %55, !dbg !30
  %59 = insertelement <1 x i32> poison, i32 %36, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %58, <1 x i32> %59, i1 true) #2, !dbg !30
  %60 = or disjoint i32 %44, 96, !dbg !30
  %61 = lshr i32 %60, 5, !dbg !30
  %62 = getelementptr float, ptr addrspace(3) @global_smem, i32 %61, !dbg !30
  %63 = getelementptr float, ptr addrspace(3) %62, i32 %60, !dbg !30
  %64 = insertelement <1 x i32> poison, i32 %37, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %63, <1 x i32> %64, i1 true) #2, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %65 = lshr i32 %45, 5, !dbg !30
  %66 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %65, !dbg !30
  %67 = getelementptr inbounds float, ptr addrspace(3) %66, i32 %45, !dbg !30
  %68 = load i32, ptr addrspace(3) %67, align 4, !dbg !30
  %69 = or disjoint i32 %45, 1, !dbg !30
  %70 = getelementptr inbounds float, ptr addrspace(3) %66, i32 %69, !dbg !30
  %71 = load i32, ptr addrspace(3) %70, align 4, !dbg !30
  %72 = or disjoint i32 %45, 2, !dbg !30
  %73 = getelementptr inbounds float, ptr addrspace(3) %66, i32 %72, !dbg !30
  %74 = load i32, ptr addrspace(3) %73, align 4, !dbg !30
  %75 = or disjoint i32 %45, 3, !dbg !30
  %76 = getelementptr inbounds float, ptr addrspace(3) %66, i32 %75, !dbg !30
  %77 = load i32, ptr addrspace(3) %76, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %68, i32 %71, i32 %74, i32 %77, ptr addrspace(1) %41, i1 %32) #2, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py", directory: "inductor_cache/sy")
!4 = !{ptr @triton_poi_fused_clone_mul_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_mul_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_mul_0", linkageName: "triton_poi_fused_clone_mul_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 38, scope: !7)
!22 = !DILocation(line: 32, column: 47, scope: !7)
!23 = !DILocation(line: 32, column: 43, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 60, scope: !7)
!26 = !DILocation(line: 32, column: 52, scope: !7)
!27 = !DILocation(line: 35, column: 33, scope: !7)
!28 = !DILocation(line: 35, column: 30, scope: !7)
!29 = !DILocation(line: 35, column: 25, scope: !7)
!30 = !DILocation(line: 35, column: 44, scope: !7)
!31 = !DILocation(line: 35, column: 4, scope: !7)
