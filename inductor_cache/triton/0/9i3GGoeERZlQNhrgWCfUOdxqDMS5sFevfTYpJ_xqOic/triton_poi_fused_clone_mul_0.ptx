//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_mul_0 // -- Begin function triton_poi_fused_clone_mul_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_mul_0
.visible .entry triton_poi_fused_clone_mul_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_mul_0_param_1,
	.param .u32 triton_poi_fused_clone_mul_0_param_2,
	.param .u32 triton_poi_fused_clone_mul_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<61>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_clone_mul_0_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_clone_mul_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:22:33
	shl.b32 	%r19, %r1, 4;
	.loc	1 23 44                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:23:44
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r21, %r20, 2;
	and.b32  	%r22, %r21, 12;
	bfe.u32 	%r23, %r20, 3, 4;
	.loc	1 23 23                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:23:23
	or.b32  	%r24, %r19, %r22;
	or.b32  	%r25, %r19, %r23;
	.loc	1 24 21                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:24:21
	setp.lt.s32 	%p7, %r24, 16;
	setp.lt.s32 	%p8, %r25, 16;
	.loc	1 25 28                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:25:33
	shl.b32 	%r26, %r2, 5;
	.loc	1 26 44                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:26:44
	bfe.u32 	%r27, %r20, 2, 5;
	and.b32  	%r28, %r21, 28;
	.loc	1 26 23                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:26:23
	or.b32  	%r29, %r26, %r27;
	or.b32  	%r30, %r26, %r28;
	.loc	1 27 21                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:27:21
	setp.lt.s32 	%p9, %r29, 32;
	setp.lt.s32 	%p10, %r30, 32;
	.loc	1 30 19                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:30:19
	shr.u32 	%r31, %r24, 2;
	.loc	1 32 47                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:32:47
	mul.lo.s32 	%r32, %r31, 384;
	.loc	1 32 43                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:32:43
	mad.lo.s32 	%r33, %r29, 12, %r32;
	.loc	1 32 30                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:32:30
	mul.wide.s32 	%rd5, %r33, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 32 60                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:32:60
	and.pred  	%p1, %p7, %p9;
	and.pred  	%p6, %p8, %p10;
	.loc	1 32 52                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:32:52
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r8, %r10, %r12, %r14 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 35 33                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:35:33
	shl.b32 	%r34, %r25, 5;
	.loc	1 35 30                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:35:30
	add.s32 	%r35, %r30, %r34;
	.loc	1 35 25                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:35:25
	mul.wide.s32 	%rd6, %r35, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 35 44                         // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:35:44
	shl.b32 	%r36, %r20, 7;
	and.b32  	%r37, %r36, 384;
	or.b32  	%r38, %r37, %r27;
	shr.u32 	%r39, %r37, 3;
	mov.u32 	%r40, global_smem;
	add.s32 	%r41, %r40, %r39;
	shl.b32 	%r42, %r38, 2;
	add.s32 	%r7, %r41, %r42;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	or.b32  	%r43, %r37, 32;
	shr.u32 	%r44, %r43, 3;
	add.s32 	%r45, %r40, %r44;
	add.s32 	%r46, %r45, %r42;
	add.s32 	%r9, %r46, 128;
	// begin inline asm
	@%p2 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	or.b32  	%r47, %r37, 64;
	shr.u32 	%r48, %r47, 3;
	add.s32 	%r49, %r40, %r48;
	add.s32 	%r50, %r49, %r42;
	add.s32 	%r11, %r50, 256;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r51, %r37, 96;
	shr.u32 	%r52, %r51, 3;
	add.s32 	%r53, %r40, %r52;
	add.s32 	%r54, %r53, %r42;
	add.s32 	%r13, %r54, 384;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r55, %r20, 1;
	and.b32  	%r56, %r55, 60;
	add.s32 	%r57, %r40, %r56;
	shl.b32 	%r58, %r20, 4;
	and.b32  	%r59, %r58, 2032;
	add.s32 	%r60, %r57, %r59;
	ld.shared.u32 	%r15, [%r60];
	ld.shared.u32 	%r16, [%r60+4];
	ld.shared.u32 	%r17, [%r60+8];
	ld.shared.u32 	%r18, [%r60+12];
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd2 + 0 ], { %r15, %r16, %r17, %r18 };
	// end inline asm
	.loc	1 35 4                          // csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sy/csymagy3n57cyji4x76sqejnmjilwgxskubdv4hruixxiivs27tc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 121
.b8 109
.b8 97
.b8 103
.b8 121
.b8 51
.b8 110
.b8 53
.b8 55
.b8 99
.b8 121
.b8 106
.b8 105
.b8 52
.b8 120
.b8 55
.b8 54
.b8 115
.b8 113
.b8 101
.b8 106
.b8 110
.b8 109
.b8 106
.b8 105
.b8 108
.b8 119
.b8 103
.b8 120
.b8 115
.b8 107
.b8 117
.b8 98
.b8 100
.b8 118
.b8 52
.b8 104
.b8 114
.b8 117
.b8 105
.b8 120
.b8 120
.b8 105
.b8 105
.b8 118
.b8 115
.b8 50
.b8 55
.b8 116
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
