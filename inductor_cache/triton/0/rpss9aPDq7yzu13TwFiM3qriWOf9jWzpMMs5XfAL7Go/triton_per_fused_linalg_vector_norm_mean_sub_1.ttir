#loc = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":19:0)
#loc1 = loc(unknown)
#loc43 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":52:26)
#loc52 = loc(callsite(#loc1 at #loc43))
module {
  tt.func public @triton_per_fused_linalg_vector_norm_mean_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_3 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_3 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.muli %3, %cst_2 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %2, %4 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %11 = tt.load %10 : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.addi %2, %cst_3 : tensor<1x64xi32> loc(#loc12)
    %13 = arith.addi %12, %4 : tensor<1x64xi32> loc(#loc13)
    %14 = tt.addptr %6, %13 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %15 = tt.load %14 : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %9, %13 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %17 = tt.load %16 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %2, %cst_1 : tensor<1x64xi32> loc(#loc18)
    %19 = arith.addi %18, %4 : tensor<1x64xi32> loc(#loc19)
    %20 = tt.addptr %6, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %21 = tt.load %20 : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %22 = tt.addptr %9, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc22)
    %23 = tt.load %22 : tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.addi %2, %cst_0 : tensor<1x64xi32> loc(#loc24)
    %25 = arith.addi %24, %4 : tensor<1x64xi32> loc(#loc25)
    %26 = tt.addptr %6, %25 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc26)
    %27 = tt.load %26 : tensor<1x64x!tt.ptr<f32>> loc(#loc27)
    %28 = tt.addptr %9, %25 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc28)
    %29 = tt.load %28 : tensor<1x64x!tt.ptr<f32>> loc(#loc29)
    %30 = arith.subf %8, %11 : tensor<1x64xf32> loc(#loc30)
    %31 = arith.mulf %30, %30 : tensor<1x64xf32> loc(#loc31)
    %32 = arith.subf %15, %17 : tensor<1x64xf32> loc(#loc32)
    %33 = arith.mulf %32, %32 : tensor<1x64xf32> loc(#loc33)
    %34 = arith.addf %31, %33 : tensor<1x64xf32> loc(#loc34)
    %35 = arith.subf %21, %23 : tensor<1x64xf32> loc(#loc35)
    %36 = arith.mulf %35, %35 : tensor<1x64xf32> loc(#loc36)
    %37 = arith.addf %34, %36 : tensor<1x64xf32> loc(#loc37)
    %38 = arith.subf %27, %29 : tensor<1x64xf32> loc(#loc38)
    %39 = arith.mulf %38, %38 : tensor<1x64xf32> loc(#loc39)
    %40 = arith.addf %37, %39 : tensor<1x64xf32> loc(#loc40)
    %41 = tt.extern_elementwise %40 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc41)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc43)), %arg5: f32 loc(callsite(#loc1 at #loc43))):
      %47 = arith.addf %arg4, %arg5 : f32 loc(#loc54)
      tt.reduce.return %47 : f32 loc(#loc51)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc51)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc45)
    %44 = arith.divf %43, %cst : tensor<1x1xf32> loc(#loc46)
    gpu.barrier loc(#loc47)
    %45 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc48)
    %46 = tt.splat %45 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc48)
    tt.store %46, %44 : tensor<1x1x!tt.ptr<f32>> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":26:26)
#loc3 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":26:34)
#loc4 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":29:19)
#loc5 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":30:19)
#loc6 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":31:38)
#loc7 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":31:35)
#loc8 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":31:30)
#loc9 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":31:43)
#loc10 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":32:30)
#loc11 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":32:43)
#loc12 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":33:35)
#loc13 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":33:40)
#loc14 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":33:30)
#loc15 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":33:48)
#loc16 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":34:30)
#loc17 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":34:48)
#loc18 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":35:35)
#loc19 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":35:40)
#loc20 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":35:30)
#loc21 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":35:48)
#loc22 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":36:31)
#loc23 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":36:49)
#loc24 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":37:36)
#loc25 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":37:41)
#loc26 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":37:31)
#loc27 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":37:49)
#loc28 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":38:31)
#loc29 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":38:49)
#loc30 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":39:18)
#loc31 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":40:18)
#loc32 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":41:18)
#loc33 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":42:18)
#loc34 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":43:18)
#loc35 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":44:19)
#loc36 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":45:20)
#loc37 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":46:19)
#loc38 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":47:20)
#loc39 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":48:20)
#loc40 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":49:20)
#loc41 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":50:27)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc45 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":52:29)
#loc46 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":54:20)
#loc47 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":55:4)
#loc48 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":56:28)
#loc49 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":56:71)
#loc50 = loc("inductor_cache/fo/cfo6vwrxzthei7fgo3ieknjywrrr3z5ply2xegxgswtguigquk7d.py":56:4)
#loc51 = loc(callsite(#loc42 at #loc43))
#loc53 = loc(callsite(#loc44 at #loc42))
#loc54 = loc(callsite(#loc53 at #loc43))
