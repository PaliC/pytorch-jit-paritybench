//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<55>;
	.reg .b32 	%r<149>;
	.reg .f32 	%f<146>;
	.reg .b64 	%rd<59>;
	.loc	1 19 0                          // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd47, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_0];
	ld.param.u64 	%rd48, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:21:33
	shl.b32 	%r114, %r1, 10;
	ld.param.u64 	%rd49, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_2];
	ld.param.u64 	%rd50, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_3];
	.loc	1 22 36                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:22:36
	mov.u32 	%r115, %tid.x;
	shl.b32 	%r116, %r115, 2;
	ld.param.u64 	%rd51, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_4];
	and.b32  	%r117, %r116, 508;
	ld.param.u64 	%rd52, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_5];
	.loc	1 22 23                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:22:23
	or.b32  	%r118, %r114, %r117;
	ld.param.u64 	%rd53, [triton_poi_fused__native_batch_norm_legit_no_training_mul_relu_25_param_6];
	.loc	1 25 19                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:25:19
	bfe.s32 	%r119, %r1, 21, 1;
	shr.u32 	%r120, %r119, 24;
	add.s32 	%r121, %r120, %r118;
	shr.s32 	%r122, %r121, 8;
	add.s32 	%r123, %r121, 512;
	shr.s32 	%r124, %r123, 8;
	.loc	1 26 28                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:26:28
	shr.u32 	%r125, %r122, 25;
	add.s32 	%r126, %r122, %r125;
	and.b32  	%r127, %r126, -128;
	sub.s32 	%r128, %r122, %r127;
	shr.u32 	%r129, %r124, 25;
	add.s32 	%r130, %r124, %r129;
	and.b32  	%r131, %r130, -128;
	sub.s32 	%r132, %r124, %r131;
	.loc	1 27 34                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:27:34
	mul.wide.s32 	%rd54, %r118, 4;
	add.s64 	%rd1, %rd47, %rd54;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 27 39                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:27:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:28:30
	mul.wide.s32 	%rd55, %r122, 4;
	add.s64 	%rd3, %rd48, %rd55;
	mul.wide.s32 	%rd56, %r124, 4;
	add.s64 	%rd7, %rd48, %rd56;
	.loc	1 28 35                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:28:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r16;
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r17;
	.loc	1 29 30                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:29:30
	mul.wide.s32 	%rd57, %r128, 4;
	add.s64 	%rd11, %rd49, %rd57;
	mul.wide.s32 	%rd58, %r132, 4;
	add.s64 	%rd15, %rd49, %rd58;
	.loc	1 29 35                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:29:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 30 30                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:30:30
	add.s64 	%rd19, %rd50, %rd57;
	add.s64 	%rd23, %rd50, %rd58;
	.loc	1 30 35                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:30:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r27;
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r28;
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r31;
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r32;
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r33;
	.loc	1 31 31                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:31:31
	add.s64 	%rd27, %rd51, %rd57;
	add.s64 	%rd31, %rd51, %rd58;
	.loc	1 31 36                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:31:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r34 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r36 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r40 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r41 }, [ %rd31 + 0 ];
	// end inline asm
	.loc	1 32 31                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:32:31
	add.s64 	%rd35, %rd52, %rd57;
	add.s64 	%rd39, %rd52, %rd58;
	.loc	1 32 36                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:32:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r43 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r44 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r45 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r46 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r47 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r48 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r49 }, [ %rd39 + 0 ];
	// end inline asm
	mov.f32 	%f33, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f34, %f33, %f17;
	sub.f32 	%f35, %f33, %f18;
	sub.f32 	%f36, %f33, %f19;
	sub.f32 	%f37, %f33, %f20;
	sub.f32 	%f38, %f33, %f21;
	sub.f32 	%f39, %f33, %f22;
	sub.f32 	%f40, %f33, %f23;
	sub.f32 	%f41, %f33, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f34, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f35, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f36, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f37, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f38, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f39, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f42, %f1, 0f3F800000;
	add.f32 	%f43, %f3, 0f3F800000;
	add.f32 	%f44, %f5, 0f3F800000;
	add.f32 	%f45, %f7, 0f3F800000;
	add.f32 	%f46, %f9, 0f3F800000;
	add.f32 	%f47, %f11, 0f3F800000;
	add.f32 	%f48, %f13, 0f3F800000;
	add.f32 	%f49, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r52, %f42;
	mov.b32 	%r51, 1065353216;
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f50, %r50;
	mov.b32 	%r55, %f43;
	// begin inline asm
	div.full.f32 %r53, %r51, %r55;
	// end inline asm
	mov.b32 	%f51, %r53;
	mov.b32 	%r58, %f44;
	// begin inline asm
	div.full.f32 %r56, %r51, %r58;
	// end inline asm
	mov.b32 	%f52, %r56;
	mov.b32 	%r61, %f45;
	// begin inline asm
	div.full.f32 %r59, %r51, %r61;
	// end inline asm
	mov.b32 	%f53, %r59;
	mov.b32 	%r64, %f46;
	// begin inline asm
	div.full.f32 %r62, %r51, %r64;
	// end inline asm
	mov.b32 	%f54, %r62;
	mov.b32 	%r67, %f47;
	// begin inline asm
	div.full.f32 %r65, %r51, %r67;
	// end inline asm
	mov.b32 	%f55, %r65;
	mov.b32 	%r70, %f48;
	// begin inline asm
	div.full.f32 %r68, %r51, %r70;
	// end inline asm
	mov.b32 	%f56, %r68;
	mov.b32 	%r73, %f49;
	// begin inline asm
	div.full.f32 %r71, %r51, %r73;
	// end inline asm
	mov.b32 	%f57, %r71;
$L__tmp2:
	.loc	1 37 18                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:37:18
	add.f32 	%f58, %f25, 0f3727C5AC;
	add.f32 	%f59, %f26, 0f3727C5AC;
	add.f32 	%f60, %f27, 0f3727C5AC;
	add.f32 	%f61, %f28, 0f3727C5AC;
	add.f32 	%f62, %f29, 0f3727C5AC;
	add.f32 	%f63, %f30, 0f3727C5AC;
	add.f32 	%f64, %f31, 0f3727C5AC;
	add.f32 	%f65, %f32, 0f3727C5AC;
	.loc	1 38 26                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:38:26
	sqrt.approx.ftz.f32 	%f66, %f58;
	sqrt.approx.ftz.f32 	%f67, %f59;
	sqrt.approx.ftz.f32 	%f68, %f60;
	sqrt.approx.ftz.f32 	%f69, %f61;
	sqrt.approx.ftz.f32 	%f70, %f62;
	sqrt.approx.ftz.f32 	%f71, %f63;
	sqrt.approx.ftz.f32 	%f72, %f64;
	sqrt.approx.ftz.f32 	%f73, %f65;
	.loc	1 29 35                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:29:35
	xor.b32  	%r133, %r25, -2147483648;
	mov.b32 	%f74, %r133;
	xor.b32  	%r134, %r24, -2147483648;
	mov.b32 	%f75, %r134;
	xor.b32  	%r135, %r23, -2147483648;
	mov.b32 	%f76, %r135;
	xor.b32  	%r136, %r22, -2147483648;
	mov.b32 	%f77, %r136;
	xor.b32  	%r137, %r21, -2147483648;
	mov.b32 	%f78, %r137;
	xor.b32  	%r138, %r20, -2147483648;
	mov.b32 	%f79, %r138;
	xor.b32  	%r139, %r19, -2147483648;
	mov.b32 	%f80, %r139;
	xor.b32  	%r140, %r18, -2147483648;
	mov.b32 	%f81, %r140;
	.loc	1 32 36                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:32:36
	mov.b32 	%f82, %r49;
	mov.b32 	%f83, %r48;
	mov.b32 	%f84, %r47;
	mov.b32 	%f85, %r46;
	mov.b32 	%f86, %r45;
	mov.b32 	%f87, %r44;
	mov.b32 	%f88, %r43;
	mov.b32 	%f89, %r42;
	.loc	1 31 36                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:31:36
	mov.b32 	%f90, %r41;
	mov.b32 	%f91, %r40;
	mov.b32 	%f92, %r39;
	mov.b32 	%f93, %r38;
	mov.b32 	%f94, %r37;
	mov.b32 	%f95, %r36;
	mov.b32 	%f96, %r35;
	mov.b32 	%f97, %r34;
	.loc	1 40 20                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:40:20
	mov.b32 	%r76, %f66;
	// begin inline asm
	div.full.f32 %r74, %r51, %r76;
	// end inline asm
	mov.b32 	%f98, %r74;
	mov.b32 	%r79, %f67;
	// begin inline asm
	div.full.f32 %r77, %r51, %r79;
	// end inline asm
	mov.b32 	%f99, %r77;
	mov.b32 	%r82, %f68;
	// begin inline asm
	div.full.f32 %r80, %r51, %r82;
	// end inline asm
	mov.b32 	%f100, %r80;
	mov.b32 	%r85, %f69;
	// begin inline asm
	div.full.f32 %r83, %r51, %r85;
	// end inline asm
	mov.b32 	%f101, %r83;
	mov.b32 	%r88, %f70;
	// begin inline asm
	div.full.f32 %r86, %r51, %r88;
	// end inline asm
	mov.b32 	%f102, %r86;
	mov.b32 	%r91, %f71;
	// begin inline asm
	div.full.f32 %r89, %r51, %r91;
	// end inline asm
	mov.b32 	%f103, %r89;
	mov.b32 	%r94, %f72;
	// begin inline asm
	div.full.f32 %r92, %r51, %r94;
	// end inline asm
	mov.b32 	%f104, %r92;
	mov.b32 	%r97, %f73;
	// begin inline asm
	div.full.f32 %r95, %r51, %r97;
	// end inline asm
	mov.b32 	%f105, %r95;
	.loc	1 27 39                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:27:39
	mov.b32 	%f106, %r6;
	mov.b32 	%f107, %r7;
	mov.b32 	%f108, %r8;
	mov.b32 	%f109, %r9;
	mov.b32 	%f110, %r2;
	mov.b32 	%f111, %r3;
	mov.b32 	%f112, %r4;
	mov.b32 	%f113, %r5;
	.loc	1 34 18                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:34:18
	mul.f32 	%f114, %f53, %f113;
	mul.f32 	%f115, %f52, %f112;
	mul.f32 	%f116, %f51, %f111;
	mul.f32 	%f117, %f50, %f110;
	mul.f32 	%f118, %f57, %f109;
	mul.f32 	%f119, %f56, %f108;
	mul.f32 	%f120, %f55, %f107;
	mul.f32 	%f121, %f54, %f106;
	.loc	1 35 18                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:35:18
	fma.rn.f32 	%f122, %f50, %f110, %f81;
	fma.rn.f32 	%f123, %f51, %f111, %f80;
	fma.rn.f32 	%f124, %f52, %f112, %f79;
	fma.rn.f32 	%f125, %f53, %f113, %f78;
	fma.rn.f32 	%f126, %f54, %f106, %f77;
	fma.rn.f32 	%f127, %f55, %f107, %f76;
	fma.rn.f32 	%f128, %f56, %f108, %f75;
	fma.rn.f32 	%f129, %f57, %f109, %f74;
	.loc	1 43 19                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:43:19
	mul.f32 	%f130, %f129, %f105;
	mul.f32 	%f131, %f128, %f104;
	mul.f32 	%f132, %f127, %f103;
	mul.f32 	%f133, %f126, %f102;
	mul.f32 	%f134, %f125, %f101;
	mul.f32 	%f135, %f124, %f100;
	mul.f32 	%f136, %f123, %f99;
	mul.f32 	%f137, %f122, %f98;
	.loc	1 45 20                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:45:20
	fma.rn.f32 	%f138, %f137, %f97, %f89;
	fma.rn.f32 	%f139, %f136, %f96, %f88;
	fma.rn.f32 	%f140, %f135, %f95, %f87;
	fma.rn.f32 	%f141, %f134, %f94, %f86;
	fma.rn.f32 	%f142, %f133, %f93, %f85;
	fma.rn.f32 	%f143, %f132, %f92, %f84;
	fma.rn.f32 	%f144, %f131, %f91, %f83;
	fma.rn.f32 	%f145, %f130, %f90, %f82;
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p47, %f145, 0f00000000;
	setp.lt.f32 	%p48, %f144, 0f00000000;
	setp.lt.f32 	%p49, %f143, 0f00000000;
	setp.lt.f32 	%p50, %f142, 0f00000000;
	setp.lt.f32 	%p51, %f141, 0f00000000;
	setp.lt.f32 	%p52, %f140, 0f00000000;
	setp.lt.f32 	%p53, %f139, 0f00000000;
	setp.lt.f32 	%p54, %f138, 0f00000000;
$L__tmp4:
	.loc	1 48 39                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:48:39
	mov.b32 	%r102, %f121;
	mov.b32 	%r103, %f120;
	mov.b32 	%r104, %f119;
	mov.b32 	%r105, %f118;
	mov.b32 	%r98, %f117;
	mov.b32 	%r99, %f116;
	mov.b32 	%r100, %f115;
	mov.b32 	%r101, %f114;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r98, %r99, %r100, %r101 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r102, %r103, %r104, %r105 };
	// end inline asm
	.loc	1 49 25                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:49:25
	add.s64 	%rd45, %rd53, %rd54;
	add.s64 	%rd46, %rd45, 2048;
	.loc	1 49 37                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:49:37
	mov.b32 	%r141, %f145;
	mov.b32 	%r142, %f144;
	mov.b32 	%r143, %f143;
	mov.b32 	%r144, %f142;
	mov.b32 	%r145, %f141;
	mov.b32 	%r146, %f140;
	mov.b32 	%r147, %f139;
	mov.b32 	%r148, %f138;
$L__tmp5:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r106, 0, %r148, %p54;
	selp.b32 	%r107, 0, %r147, %p53;
	selp.b32 	%r108, 0, %r146, %p52;
	selp.b32 	%r109, 0, %r145, %p51;
$L__tmp6:
	.loc	1 49 37                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:49:37
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd45 + 0 ], { %r106, %r107, %r108, %r109 };
	// end inline asm
$L__tmp7:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r110, 0, %r144, %p50;
	selp.b32 	%r111, 0, %r143, %p49;
	selp.b32 	%r112, 0, %r142, %p48;
	selp.b32 	%r113, 0, %r141, %p47;
$L__tmp8:
	.loc	1 49 37                         // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:49:37
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd46 + 0 ], { %r110, %r111, %r112, %r113 };
	// end inline asm
	.loc	1 49 4                          // c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py:49:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6s/c6sgkrn4fuwugdcs7w6z25rya2ptpfekq443mbcpdkyvu34g3dac.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 115
.b8 103
.b8 107
.b8 114
.b8 110
.b8 52
.b8 102
.b8 117
.b8 119
.b8 117
.b8 103
.b8 100
.b8 99
.b8 115
.b8 55
.b8 119
.b8 54
.b8 122
.b8 50
.b8 53
.b8 114
.b8 121
.b8 97
.b8 50
.b8 112
.b8 116
.b8 112
.b8 102
.b8 101
.b8 107
.b8 113
.b8 52
.b8 52
.b8 51
.b8 109
.b8 98
.b8 99
.b8 112
.b8 100
.b8 107
.b8 121
.b8 118
.b8 117
.b8 51
.b8 52
.b8 103
.b8 51
.b8 100
.b8 97
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
