//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_hardswish_mean_32 // -- Begin function triton_per_fused_hardswish_mean_32
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_hardswish_mean_32
.visible .entry triton_per_fused_hardswish_mean_32(
	.param .u64 .ptr .global .align 1 triton_per_fused_hardswish_mean_32_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_hardswish_mean_32_param_1,
	.param .u32 triton_per_fused_hardswish_mean_32_param_2,
	.param .u32 triton_per_fused_hardswish_mean_32_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<54>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_hardswish_mean_32_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_hardswish_mean_32_param_1];
$L__tmp0:
	.loc	1 23 28                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:23:33
	shl.b32 	%r31, %r1, 5;
	.loc	1 24 44                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:24:44
	mov.u32 	%r32, %tid.x;
	and.b32  	%r33, %r32, 24;
	shl.b32 	%r34, %r32, 2;
	and.b32  	%r35, %r34, 28;
	and.b32  	%r36, %r32, 31;
	.loc	1 24 23                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:24:23
	or.b32  	%r37, %r31, %r35;
	or.b32  	%r38, %r31, %r36;
	.loc	1 25 21                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:25:21
	setp.lt.s32 	%p1, %r37, 480;
	setp.lt.s32 	%p14, %r38, 480;
	.loc	1 26 34                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:26:34
	bfe.u32 	%r39, %r32, 3, 4;
	.loc	1 31 19                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:31:19
	mul.hi.s32 	%r41, %r37, -2004318071;
	mad.lo.s32 	%r42, %r37, 1, %r41;
	shr.u32 	%r43, %r42, 31;
	shr.s32 	%r44, %r42, 6;
	add.s32 	%r45, %r44, %r43;
	.loc	1 30 19                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:30:19
	mul.lo.s32 	%r46, %r45, 120;
	sub.s32 	%r47, %r37, %r46;
	.loc	1 33 35                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:35
	mad.lo.s32 	%r48, %r39, 120, %r47;
	.loc	1 33 44                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:44
	mad.lo.s32 	%r49, %r45, 1920, %r48;
	.loc	1 33 30                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:30
	mul.wide.s32 	%rd5, %r49, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r6, 0;
	.loc	1 33 54                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 35 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:35:18
	add.f32 	%f2, %f1, 0f40400000;
	.loc	1 33 54                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:54
	mov.b32 	%f3, %r3;
	.loc	1 35 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:35:18
	add.f32 	%f4, %f3, 0f40400000;
	.loc	1 33 54                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:54
	mov.b32 	%f5, %r4;
	.loc	1 35 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:35:18
	add.f32 	%f6, %f5, 0f40400000;
	.loc	1 33 54                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:33:54
	mov.b32 	%f7, %r5;
	.loc	1 35 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:35:18
	add.f32 	%f8, %f7, 0f40400000;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p15, %f8, 0f00000000;
	setp.le.f32 	%p16, %f6, 0f00000000;
	setp.le.f32 	%p17, %f4, 0f00000000;
	setp.le.f32 	%p18, %f2, 0f00000000;
	selp.f32 	%f9, 0f00000000, %f2, %p18;
	selp.f32 	%f10, 0f00000000, %f4, %p17;
	selp.f32 	%f11, 0f00000000, %f6, %p16;
	selp.f32 	%f12, 0f00000000, %f8, %p15;
$L__tmp2:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.lt.f32 	%p19, %f12, 0f40C00000;
	setp.lt.f32 	%p20, %f11, 0f40C00000;
	setp.lt.f32 	%p21, %f10, 0f40C00000;
	setp.lt.f32 	%p22, %f9, 0f40C00000;
	.loc	2 112 21                        // triton_helpers.py:112:21
	setp.nan.f32 	%p23, %f9, %f9;
	setp.nan.f32 	%p24, %f10, %f10;
	setp.nan.f32 	%p25, %f11, %f11;
	setp.nan.f32 	%p26, %f12, %f12;
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f13, %f9, 0f40C00000, %p23;
	selp.f32 	%f14, %f9, %f13, %p22;
	selp.f32 	%f15, %f10, 0f40C00000, %p24;
	selp.f32 	%f16, %f10, %f15, %p21;
	selp.f32 	%f17, %f11, 0f40C00000, %p25;
	selp.f32 	%f18, %f11, %f17, %p20;
	selp.f32 	%f19, %f12, 0f40C00000, %p26;
	selp.f32 	%f20, %f12, %f19, %p19;
$L__tmp3:
	.loc	1 40 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:40:18
	mul.f32 	%f21, %f14, %f1;
	mul.f32 	%f22, %f16, %f3;
	mul.f32 	%f23, %f18, %f5;
	mul.f32 	%f24, %f20, %f7;
	.loc	1 42 18                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:42:18
	mul.f32 	%f25, %f21, 0f3E2AAAAB;
	mul.f32 	%f26, %f22, 0f3E2AAAAB;
	mul.f32 	%f27, %f23, 0f3E2AAAAB;
	mul.f32 	%f28, %f24, 0f3E2AAAAB;
	.loc	1 44 35                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:44:35
	selp.f32 	%f29, %f25, 0f00000000, %p1;
	selp.f32 	%f30, %f26, 0f00000000, %p1;
	selp.f32 	%f31, %f27, 0f00000000, %p1;
	selp.f32 	%f32, %f28, 0f00000000, %p1;
$L__tmp4:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f29;
	shfl.sync.bfly.b32	%r51, %r50, 16, 31, -1;
	mov.b32 	%f33, %r51;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f34, %f29, %f33;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f34;
	shfl.sync.bfly.b32	%r53, %r52, 8, 31, -1;
	mov.b32 	%f35, %r53;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f30;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f37, %r55;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f38, %f30, %f37;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f38;
	shfl.sync.bfly.b32	%r57, %r56, 8, 31, -1;
	mov.b32 	%f39, %r57;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f31;
	shfl.sync.bfly.b32	%r59, %r58, 16, 31, -1;
	mov.b32 	%f41, %r59;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f42, %f31, %f41;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f42;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f43, %r61;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f32;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f45, %r63;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f46, %f32, %f45;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f46;
	shfl.sync.bfly.b32	%r65, %r64, 8, 31, -1;
	mov.b32 	%f47, %r65;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p6, %r33, 0;
	bfe.u32 	%r66, %r32, 5, 2;
	shl.b32 	%r67, %r66, 2;
	shl.b32 	%r68, %r35, 4;
	or.b32  	%r69, %r68, %r67;
	mov.u32 	%r70, global_smem;
	add.s32 	%r10, %r70, %r69;
	mov.b32 	%r11, %f36;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 16;
	mov.b32 	%r13, %f40;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 32;
	mov.b32 	%r15, %f44;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 48;
	mov.b32 	%r17, %f48;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r32, 128;
	add.s32 	%r19, %r70, %r34;
	// begin inline asm
	@%p10 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r18;
	shfl.sync.bfly.b32	%r71, %r18, 2, 31, -1;
	mov.b32 	%f50, %r71;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f51;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f52, %r73;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r74, %r32, 3;
	setp.eq.s32 	%p27, %r74, 0;
	and.pred  	%p11, %p10, %p27;
	mov.b32 	%r21, %f53;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r75, %r70, %r68;
	ld.shared.u32 	%r23, [%r75];
	ld.shared.u32 	%r24, [%r75+16];
	ld.shared.u32 	%r25, [%r75+32];
	ld.shared.u32 	%r26, [%r75+48];
$L__tmp5:
	.loc	1 47 20                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:47:20
	bar.sync 	0;
	mad.lo.s32 	%r22, %r35, -12, %r75;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.v4.b32 [ %r22 + 0 ], { %r23, %r24, %r25, %r26 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r76, %r36, 2;
	add.s32 	%r77, %r70, %r76;
	ld.shared.u32 	%r28, [%r77];
	mov.b32 	%r29, 1098907648;
	// begin inline asm
	div.full.f32 %r30, %r28, %r29;
	// end inline asm
	.loc	1 48 4                          // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:48:4
	bar.sync 	0;
	.loc	1 49 28                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:49:28
	mul.wide.s32 	%rd6, %r38, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 49 40                         // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:49:40
	setp.eq.s32 	%p28, %r66, 0;
	and.pred  	%p13, %p28, %p14;
	// begin inline asm
	@%p13 st.global.b32 [ %rd2 + 0 ], { %r30 };
	// end inline asm
	.loc	1 49 4                          // cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py:49:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vu/cvupwx7444dgm4f7srzpxaupd7up7b6onpjtltrvzr5p2hggetym.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 227                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdc DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 117
.b8 112
.b8 119
.b8 120
.b8 55
.b8 52
.b8 52
.b8 52
.b8 100
.b8 103
.b8 109
.b8 52
.b8 102
.b8 55
.b8 115
.b8 114
.b8 122
.b8 112
.b8 120
.b8 97
.b8 117
.b8 112
.b8 100
.b8 55
.b8 117
.b8 112
.b8 55
.b8 98
.b8 54
.b8 111
.b8 110
.b8 112
.b8 106
.b8 116
.b8 108
.b8 116
.b8 114
.b8 118
.b8 122
.b8 114
.b8 53
.b8 112
.b8 50
.b8 104
.b8 103
.b8 103
.b8 101
.b8 116
.b8 121
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x25 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 104
.b8 97
.b8 114
.b8 100
.b8 115
.b8 119
.b8 105
.b8 115
.b8 104
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
