; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !12
  %9 = shl i32 %8, 9, !dbg !13
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %11 = shl i32 %10, 2, !dbg !14
  %12 = and i32 %11, 508, !dbg !14
  %13 = or disjoint i32 %12, 1, !dbg !14
  %14 = or disjoint i32 %12, 2, !dbg !14
  %15 = or disjoint i32 %12, 3, !dbg !14
  %16 = or disjoint i32 %9, %12, !dbg !15
  %17 = or disjoint i32 %9, %13, !dbg !15
  %18 = or disjoint i32 %9, %14, !dbg !15
  %19 = or disjoint i32 %9, %15, !dbg !15
  %.frozen = freeze i32 %6, !dbg !16
  %20 = sdiv i32 %.frozen, 4, !dbg !16
  %21 = mul i32 %20, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %21, !dbg !17
  %22 = shl i32 %16, 2, !dbg !18
  %23 = shl i32 %17, 2, !dbg !18
  %24 = shl i32 %18, 2, !dbg !18
  %25 = shl i32 %19, 2, !dbg !18
  %26 = shl i32 %20, 14, !dbg !19
  %27 = add i32 %26, %.decomposed, !dbg !20
  %28 = add i32 %27, %22, !dbg !21
  %29 = add i32 %27, %23, !dbg !21
  %30 = add i32 %27, %24, !dbg !21
  %31 = add i32 %27, %25, !dbg !21
  %32 = sext i32 %28 to i64, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !22
  %34 = sext i32 %29 to i64, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !22
  %36 = sext i32 %30 to i64, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !22
  %38 = sext i32 %31 to i64, !dbg !22
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !22
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %7) #1, !dbg !23
  %41 = bitcast i32 %40 to float, !dbg !23
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %7) #1, !dbg !23
  %43 = bitcast i32 %42 to float, !dbg !23
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %7) #1, !dbg !23
  %45 = bitcast i32 %44 to float, !dbg !23
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %7) #1, !dbg !23
  %47 = bitcast i32 %46 to float, !dbg !23
  %48 = sext i32 %.decomposed to i64, !dbg !24
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !24
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #1, !dbg !25
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #1, !dbg !25
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #1, !dbg !25
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #1, !dbg !25
  %54 = bitcast i32 %53 to float, !dbg !25
  %55 = fadd float %41, %54, !dbg !26
  %56 = fadd float %43, %54, !dbg !26
  %57 = fadd float %45, %54, !dbg !26
  %58 = fadd float %47, %54, !dbg !26
  %59 = shl i32 %6, 12, !dbg !27
  %60 = add i32 %16, %59, !dbg !28
  %61 = sext i32 %60 to i64, !dbg !29
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !29
  %63 = bitcast float %55 to i32, !dbg !30
  %64 = bitcast float %56 to i32, !dbg !30
  %65 = bitcast float %57 to i32, !dbg !30
  %66 = bitcast float %58 to i32, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %63, i32 %64, i32 %65, i32 %66, ptr addrspace(1) %62, i1 %7) #1, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7frsypkryrn53bst2igjbqx6ua735hdc6dt7nosllhzt3tpcu4m.py", directory: "inductor_cache/7f")
!4 = !{ptr @triton_poi_fused_convolution_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_24", linkageName: "triton_poi_fused_convolution_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 30, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 37, scope: !7)
!19 = !DILocation(line: 32, column: 48, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 35, scope: !7)
!28 = !DILocation(line: 35, column: 30, scope: !7)
!29 = !DILocation(line: 35, column: 25, scope: !7)
!30 = !DILocation(line: 35, column: 46, scope: !7)
!31 = !DILocation(line: 35, column: 4, scope: !7)
