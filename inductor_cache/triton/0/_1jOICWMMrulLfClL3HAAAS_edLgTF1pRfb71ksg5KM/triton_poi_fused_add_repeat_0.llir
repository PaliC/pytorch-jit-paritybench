; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_add_repeat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 18432, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 36, !dbg !15
  %13 = srem i32 %12, 128, !dbg !16
  %14 = mul i32 %12, 36, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = srem i32 %10, 36, !dbg !17
  %16 = sext i32 %9 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %11) #4, !dbg !19
  %19 = sext i32 %13 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %11) #4, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %11) #4, !dbg !21
  %23 = shl nsw i32 %13, 1, !dbg !22
  %24 = sitofp i32 %23 to float, !dbg !23
  %25 = fmul float %24, 0xBFB26BB1C0000000, !dbg !24
  %26 = fmul float %25, 0x3FF7154760000000, !dbg !25
  %27 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %26) #4, !dbg !25
  %28 = sitofp i32 %.decomposed to float, !dbg !26
  %29 = sitofp i32 %15 to float, !dbg !26
  %30 = fmul float %27, %28, !dbg !27
  %31 = fmul float %27, %29, !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !28
  %32 = fmul float %30, 0x3FE45F3060000000, !dbg !28
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i = icmp eq i32 %33, 0, !dbg !28
  %34 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %32) #4, !dbg !28
  %35 = tail call i32 @llvm.nvvm.f2i.rn(float %32) #4, !dbg !28
  %.01.i = select i1 %.not.i, i32 %35, i32 %34, !dbg !28
  %36 = sitofp i32 %.01.i to float, !dbg !28
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i = icmp eq i32 %37, 0, !dbg !28
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0xBFF921FB40000000, float %30) #4, !dbg !28
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0xBFF921FB40000000, float %30) #4, !dbg !28
  %.02.i = select i1 %.not15.i, float %39, float %38, !dbg !28
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i = icmp eq i32 %40, 0, !dbg !28
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0xBE74442D00000000, float %.02.i) #4, !dbg !28
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0xBE74442D00000000, float %.02.i) #4, !dbg !28
  %.03.i = select i1 %.not16.i, float %42, float %41, !dbg !28
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i = icmp eq i32 %43, 0, !dbg !28
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !28
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !28
  %.04.i = select i1 %.not17.i, float %45, float %44, !dbg !28
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i = icmp eq i32 %46, 0, !dbg !28
  %47 = tail call float @llvm.nvvm.fabs.ftz.f(float %30) #4, !dbg !28
  %48 = tail call float @llvm.nvvm.fabs.f(float %30) #4, !dbg !28
  %.06.i = select i1 %.not18.i, float %48, float %47, !dbg !28
  %49 = fcmp ult float %.06.i, 1.056150e+05, !dbg !28
  br i1 %49, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !28

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i = icmp eq i32 %50, 0, !dbg !28
  %.07.i = select i1 %.not19.i, float %48, float %47, !dbg !28
  %51 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !28
  br i1 %51, label %__nv_fmul_rn.exit.i.i.i, label %55, !dbg !28

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i = icmp eq i32 %52, 0, !dbg !28
  %53 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %30, float 0.000000e+00) #4, !dbg !28
  %54 = tail call float @llvm.nvvm.mul.rn.f(float %30, float 0.000000e+00) #4, !dbg !28
  %.08.i = select i1 %.not27.i, float %54, float %53, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !28

55:                                               ; preds = %__nv_isinff.exit.i.i.i
  %56 = bitcast float %30 to i32, !dbg !28
  %57 = lshr i32 %56, 23, !dbg !28
  %58 = and i32 %57, 224, !dbg !28
  %59 = add nsw i32 %58, -128, !dbg !28
  %60 = shl i32 %56, 8, !dbg !28
  %61 = or i32 %60, -2147483648, !dbg !28
  %62 = lshr exact i32 %59, 5, !dbg !28
  br label %63, !dbg !28

63:                                               ; preds = %55, %63
  %indvars.iv = phi i64 [ 0, %55 ], [ %indvars.iv.next, %63 ]
  %hi.i.i.i.0.i164 = phi i32 [ 0, %55 ], [ %68, %63 ]
  %64 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !28
  %65 = load i32, ptr addrspace(1) %64, align 4, !dbg !28
  %66 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %65, i32 %61, i32 %hi.i.i.i.0.i164) #5, !dbg !28, !srcloc !29
  %67 = extractvalue { i32, i32 } %66, 0, !dbg !28
  %68 = extractvalue { i32, i32 } %66, 1, !dbg !28
  %69 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !28
  store i32 %67, ptr %69, align 4, !dbg !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !28
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !28
  br i1 %exitcond.not, label %70, label %63, !dbg !28, !llvm.loop !30

70:                                               ; preds = %63
  %71 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !28
  store i32 %68, ptr %71, align 4, !dbg !28
  %72 = and i32 %57, 31, !dbg !28
  %73 = sub nsw i32 6, %62, !dbg !28
  %74 = sext i32 %73 to i64, !dbg !28
  %75 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %74, !dbg !28
  %76 = load i32, ptr %75, align 4, !dbg !28
  %77 = sub nsw i32 5, %62, !dbg !28
  %78 = sext i32 %77 to i64, !dbg !28
  %79 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %78, !dbg !28
  %80 = load i32, ptr %79, align 4, !dbg !28
  %.not20.i = icmp eq i32 %72, 0, !dbg !28
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %81, !dbg !28

81:                                               ; preds = %70
  %82 = sub nsw i32 4, %62, !dbg !28
  %83 = sub nuw nsw i32 32, %72, !dbg !28
  %84 = shl i32 %76, %72, !dbg !28
  %85 = lshr i32 %80, %83, !dbg !28
  %86 = add i32 %85, %84, !dbg !28
  %87 = shl i32 %80, %72, !dbg !28
  %88 = sext i32 %82 to i64, !dbg !28
  %89 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %88, !dbg !28
  %90 = load i32, ptr %89, align 4, !dbg !28
  %91 = lshr i32 %90, %83, !dbg !28
  %92 = add i32 %91, %87, !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %81, %70
  %hi.i.i.i.1.i = phi i32 [ %86, %81 ], [ %76, %70 ], !dbg !28
  %lo.i.i.i.0.i = phi i32 [ %92, %81 ], [ %80, %70 ], !dbg !28
  %93 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !28
  %94 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !28
  %95 = shl i32 %lo.i.i.i.0.i, 2, !dbg !28
  %96 = lshr i32 %94, 31, !dbg !28
  %97 = add nuw nsw i32 %96, %93, !dbg !28
  %98 = sub nsw i32 0, %97, !dbg !28
  %.not2123.i = icmp slt i32 %56, 0, !dbg !28
  %spec.select.i = select i1 %.not2123.i, i32 %98, i32 %97, !dbg !28
  %99 = xor i32 %94, %56, !dbg !28
  %.lobit.i = ashr i32 %94, 31, !dbg !28
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %94, !dbg !28
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %95, !dbg !28
  %100 = zext i32 %hi.i.i.i.2.i to i64, !dbg !28
  %101 = shl nuw i64 %100, 32, !dbg !28
  %102 = zext i32 %lo.i.i.i.1.i to i64, !dbg !28
  %103 = or disjoint i64 %101, %102, !dbg !28
  %104 = sitofp i64 %103 to double, !dbg !28
  %105 = fmul double %104, 0x3BF921FB54442D19, !dbg !28
  %106 = fptrunc double %105 to float, !dbg !28
  %107 = fneg float %106, !dbg !28
  %.not2526.i = icmp slt i32 %99, 0, !dbg !28
  %r.i.i.i.0.i = select i1 %.not2526.i, float %107, float %106, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !28

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !28
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !28
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i = icmp eq i32 %108, 0, !dbg !28
  %109 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !28
  %110 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !28
  %.011.i = select i1 %.not28.i, float %110, float %109, !dbg !28
  %111 = and i32 %i.i.1.i, 1, !dbg !28
  %.not29.i = icmp eq i32 %111, 0, !dbg !28
  %112 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !28
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i = icmp eq i32 %113, 0, !dbg !28
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %112, float 0.000000e+00) #4, !dbg !28
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %112, float 0.000000e+00) #4, !dbg !28
  %.012.i = select i1 %.not30.i, float %115, float %114, !dbg !28
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !28

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i = icmp eq i32 %116, 0, !dbg !28
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !28
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i = select i1 %.not31.i, float %118, float %117, !dbg !28
  br label %__internal_fmad.exit2.i.i.i, !dbg !28

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %119 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %120 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %121 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !28
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i = icmp eq i32 %122, 0, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float %.011.i, float %120) #4, !dbg !28
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %121, float %.011.i, float %120) #4, !dbg !28
  %.010.i = select i1 %.not32.i, float %124, float %123, !dbg !28
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i = icmp eq i32 %125, 0, !dbg !28
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %119) #4, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %119) #4, !dbg !28
  %.09.i = select i1 %.not33.i, float %127, float %126, !dbg !28
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i = icmp eq i32 %128, 0, !dbg !28
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %112) #4, !dbg !28
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %112) #4, !dbg !28
  %.05.i = select i1 %.not34.i, float %130, float %129, !dbg !28
  %131 = and i32 %i.i.1.i, 2, !dbg !28
  %.not35.i = icmp eq i32 %131, 0, !dbg !28
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !28

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i = icmp eq i32 %132, 0, !dbg !28
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i = select i1 %.not36.i, float %134, float %133, !dbg !28
  br label %__nv_sinf.exit, !dbg !28

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !28
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !28
  %135 = fmul float %31, 0x3FE45F3060000000, !dbg !28
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i2 = icmp eq i32 %136, 0, !dbg !28
  %137 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %135) #4, !dbg !28
  %138 = tail call i32 @llvm.nvvm.f2i.rn(float %135) #4, !dbg !28
  %.01.i3 = select i1 %.not.i2, i32 %138, i32 %137, !dbg !28
  %139 = sitofp i32 %.01.i3 to float, !dbg !28
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i4 = icmp eq i32 %140, 0, !dbg !28
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBFF921FB40000000, float %31) #4, !dbg !28
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBFF921FB40000000, float %31) #4, !dbg !28
  %.02.i5 = select i1 %.not15.i4, float %142, float %141, !dbg !28
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i6 = icmp eq i32 %143, 0, !dbg !28
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !28
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !28
  %.03.i7 = select i1 %.not16.i6, float %145, float %144, !dbg !28
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i8 = icmp eq i32 %146, 0, !dbg !28
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !28
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %139, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !28
  %.04.i9 = select i1 %.not17.i8, float %148, float %147, !dbg !28
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i10 = icmp eq i32 %149, 0, !dbg !28
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %31) #4, !dbg !28
  %151 = tail call float @llvm.nvvm.fabs.f(float %31) #4, !dbg !28
  %.06.i11 = select i1 %.not18.i10, float %151, float %150, !dbg !28
  %152 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !28
  br i1 %152, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !28

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i13 = icmp eq i32 %153, 0, !dbg !28
  %.07.i14 = select i1 %.not19.i13, float %151, float %150, !dbg !28
  %154 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !28
  br i1 %154, label %__nv_fmul_rn.exit.i.i.i52, label %158, !dbg !28

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not27.i53 = icmp eq i32 %155, 0, !dbg !28
  %156 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %31, float 0.000000e+00) #4, !dbg !28
  %157 = tail call float @llvm.nvvm.mul.rn.f(float %31, float 0.000000e+00) #4, !dbg !28
  %.08.i54 = select i1 %.not27.i53, float %157, float %156, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !28

158:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %159 = bitcast float %31 to i32, !dbg !28
  %160 = lshr i32 %159, 23, !dbg !28
  %161 = and i32 %160, 224, !dbg !28
  %162 = add nsw i32 %161, -128, !dbg !28
  %163 = shl i32 %159, 8, !dbg !28
  %164 = or i32 %163, -2147483648, !dbg !28
  %165 = lshr exact i32 %162, 5, !dbg !28
  br label %166, !dbg !28

166:                                              ; preds = %158, %166
  %indvars.iv179 = phi i64 [ 0, %158 ], [ %indvars.iv.next180, %166 ]
  %hi.i.i.i.0.i15166 = phi i32 [ 0, %158 ], [ %171, %166 ]
  %167 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv179, !dbg !28
  %168 = load i32, ptr addrspace(1) %167, align 4, !dbg !28
  %169 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %168, i32 %164, i32 %hi.i.i.i.0.i15166) #5, !dbg !28, !srcloc !29
  %170 = extractvalue { i32, i32 } %169, 0, !dbg !28
  %171 = extractvalue { i32, i32 } %169, 1, !dbg !28
  %172 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv179, !dbg !28
  store i32 %170, ptr %172, align 4, !dbg !28
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1, !dbg !28
  %exitcond181.not = icmp eq i64 %indvars.iv.next180, 6, !dbg !28
  br i1 %exitcond181.not, label %173, label %166, !dbg !28, !llvm.loop !32

173:                                              ; preds = %166
  %174 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !28
  store i32 %171, ptr %174, align 4, !dbg !28
  %175 = and i32 %160, 31, !dbg !28
  %176 = sub nsw i32 6, %165, !dbg !28
  %177 = sext i32 %176 to i64, !dbg !28
  %178 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %177, !dbg !28
  %179 = load i32, ptr %178, align 4, !dbg !28
  %180 = sub nsw i32 5, %165, !dbg !28
  %181 = sext i32 %180 to i64, !dbg !28
  %182 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %181, !dbg !28
  %183 = load i32, ptr %182, align 4, !dbg !28
  %.not20.i17 = icmp eq i32 %175, 0, !dbg !28
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %184, !dbg !28

184:                                              ; preds = %173
  %185 = sub nsw i32 4, %165, !dbg !28
  %186 = sub nuw nsw i32 32, %175, !dbg !28
  %187 = shl i32 %179, %175, !dbg !28
  %188 = lshr i32 %183, %186, !dbg !28
  %189 = add i32 %188, %187, !dbg !28
  %190 = shl i32 %183, %175, !dbg !28
  %191 = sext i32 %185 to i64, !dbg !28
  %192 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %191, !dbg !28
  %193 = load i32, ptr %192, align 4, !dbg !28
  %194 = lshr i32 %193, %186, !dbg !28
  %195 = add i32 %194, %190, !dbg !28
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !28

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %184, %173
  %hi.i.i.i.1.i19 = phi i32 [ %189, %184 ], [ %179, %173 ], !dbg !28
  %lo.i.i.i.0.i20 = phi i32 [ %195, %184 ], [ %183, %173 ], !dbg !28
  %196 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !28
  %197 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !28
  %198 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !28
  %199 = lshr i32 %197, 31, !dbg !28
  %200 = add nuw nsw i32 %199, %196, !dbg !28
  %201 = sub nsw i32 0, %200, !dbg !28
  %.not2123.i21 = icmp slt i32 %159, 0, !dbg !28
  %spec.select.i22 = select i1 %.not2123.i21, i32 %201, i32 %200, !dbg !28
  %202 = xor i32 %197, %159, !dbg !28
  %.lobit.i23 = ashr i32 %197, 31, !dbg !28
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %197, !dbg !28
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %198, !dbg !28
  %203 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !28
  %204 = shl nuw i64 %203, 32, !dbg !28
  %205 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !28
  %206 = or disjoint i64 %204, %205, !dbg !28
  %207 = sitofp i64 %206 to double, !dbg !28
  %208 = fmul double %207, 0x3BF921FB54442D19, !dbg !28
  %209 = fptrunc double %208 to float, !dbg !28
  %210 = fneg float %209, !dbg !28
  %.not2526.i27 = icmp slt i32 %202, 0, !dbg !28
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %210, float %209, !dbg !28
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !28

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !28
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !28
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not28.i32 = icmp eq i32 %211, 0, !dbg !28
  %212 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !28
  %213 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !28
  %.011.i33 = select i1 %.not28.i32, float %213, float %212, !dbg !28
  %214 = and i32 %i.i.1.i30, 1, !dbg !28
  %.not29.i34 = icmp eq i32 %214, 0, !dbg !28
  %215 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !28
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not30.i35 = icmp eq i32 %216, 0, !dbg !28
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %215, float 0.000000e+00) #4, !dbg !28
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %215, float 0.000000e+00) #4, !dbg !28
  %.012.i36 = select i1 %.not30.i35, float %218, float %217, !dbg !28
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !28

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not31.i38 = icmp eq i32 %219, 0, !dbg !28
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !28
  %221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !28
  %.013.i39 = select i1 %.not31.i38, float %221, float %220, !dbg !28
  br label %__internal_fmad.exit2.i.i.i40, !dbg !28

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %222 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !28
  %223 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !28
  %224 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !28
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not32.i41 = icmp eq i32 %225, 0, !dbg !28
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %224, float %.011.i33, float %223) #4, !dbg !28
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %224, float %.011.i33, float %223) #4, !dbg !28
  %.010.i42 = select i1 %.not32.i41, float %227, float %226, !dbg !28
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not33.i43 = icmp eq i32 %228, 0, !dbg !28
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %222) #4, !dbg !28
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %222) #4, !dbg !28
  %.09.i44 = select i1 %.not33.i43, float %230, float %229, !dbg !28
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not34.i45 = icmp eq i32 %231, 0, !dbg !28
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %215) #4, !dbg !28
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %215) #4, !dbg !28
  %.05.i46 = select i1 %.not34.i45, float %233, float %232, !dbg !28
  %234 = and i32 %i.i.1.i30, 2, !dbg !28
  %.not35.i47 = icmp eq i32 %234, 0, !dbg !28
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !28

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not36.i49 = icmp eq i32 %235, 0, !dbg !28
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !28
  %.0.i50 = select i1 %.not36.i49, float %237, float %236, !dbg !28
  br label %__nv_sinf.exit55, !dbg !28

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !28
  %238 = add nsw i32 %23, -128, !dbg !33
  %239 = sitofp i32 %238 to float, !dbg !34
  %240 = fmul float %239, 0xBFB26BB1C0000000, !dbg !35
  %241 = fmul float %240, 0x3FF7154760000000, !dbg !36
  %242 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %241) #4, !dbg !36
  %243 = fmul float %242, %28, !dbg !37
  %244 = fmul float %242, %29, !dbg !37
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  %245 = fmul float %243, 0x3FE45F3060000000, !dbg !38
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i57 = icmp eq i32 %246, 0, !dbg !38
  %247 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %245) #4, !dbg !38
  %248 = tail call i32 @llvm.nvvm.f2i.rn(float %245) #4, !dbg !38
  %.01.i58 = select i1 %.not.i57, i32 %248, i32 %247, !dbg !38
  %249 = sitofp i32 %.01.i58 to float, !dbg !38
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i59 = icmp eq i32 %250, 0, !dbg !38
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float 0xBFF921FB40000000, float %243) #4, !dbg !38
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %249, float 0xBFF921FB40000000, float %243) #4, !dbg !38
  %.02.i60 = select i1 %.not15.i59, float %252, float %251, !dbg !38
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i61 = icmp eq i32 %253, 0, !dbg !38
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %249, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %.03.i62 = select i1 %.not16.i61, float %255, float %254, !dbg !38
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i63 = icmp eq i32 %256, 0, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %249, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %.04.i64 = select i1 %.not17.i63, float %258, float %257, !dbg !38
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i65 = icmp eq i32 %259, 0, !dbg !38
  %260 = tail call float @llvm.nvvm.fabs.ftz.f(float %243) #4, !dbg !38
  %261 = tail call float @llvm.nvvm.fabs.f(float %243) #4, !dbg !38
  %.06.i66 = select i1 %.not18.i65, float %261, float %260, !dbg !38
  %262 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !38
  br i1 %262, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !38

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i68 = icmp eq i32 %263, 0, !dbg !38
  %.07.i69 = select i1 %.not19.i68, float %261, float %260, !dbg !38
  %264 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !38
  br i1 %264, label %__nv_fmul_rn.exit.i.i.i106, label %268, !dbg !38

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i107 = icmp eq i32 %265, 0, !dbg !38
  %266 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %243, float 0.000000e+00) #4, !dbg !38
  %267 = tail call float @llvm.nvvm.mul.rn.f(float %243, float 0.000000e+00) #4, !dbg !38
  %.08.i108 = select i1 %.not27.i107, float %267, float %266, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

268:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %269 = bitcast float %243 to i32, !dbg !38
  %270 = lshr i32 %269, 23, !dbg !38
  %271 = and i32 %270, 224, !dbg !38
  %272 = add nsw i32 %271, -128, !dbg !38
  %273 = shl i32 %269, 8, !dbg !38
  %274 = or i32 %273, -2147483648, !dbg !38
  %275 = lshr exact i32 %272, 5, !dbg !38
  br label %276, !dbg !38

276:                                              ; preds = %268, %276
  %indvars.iv182 = phi i64 [ 0, %268 ], [ %indvars.iv.next183, %276 ]
  %hi.i.i.i.0.i70168 = phi i32 [ 0, %268 ], [ %281, %276 ]
  %277 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv182, !dbg !38
  %278 = load i32, ptr addrspace(1) %277, align 4, !dbg !38
  %279 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %278, i32 %274, i32 %hi.i.i.i.0.i70168) #5, !dbg !38, !srcloc !29
  %280 = extractvalue { i32, i32 } %279, 0, !dbg !38
  %281 = extractvalue { i32, i32 } %279, 1, !dbg !38
  %282 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv182, !dbg !38
  store i32 %280, ptr %282, align 4, !dbg !38
  %indvars.iv.next183 = add nuw nsw i64 %indvars.iv182, 1, !dbg !38
  %exitcond184.not = icmp eq i64 %indvars.iv.next183, 6, !dbg !38
  br i1 %exitcond184.not, label %283, label %276, !dbg !38, !llvm.loop !39

283:                                              ; preds = %276
  %284 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !38
  store i32 %281, ptr %284, align 4, !dbg !38
  %285 = and i32 %270, 31, !dbg !38
  %286 = sub nsw i32 6, %275, !dbg !38
  %287 = sext i32 %286 to i64, !dbg !38
  %288 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %287, !dbg !38
  %289 = load i32, ptr %288, align 4, !dbg !38
  %290 = sub nsw i32 5, %275, !dbg !38
  %291 = sext i32 %290 to i64, !dbg !38
  %292 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %291, !dbg !38
  %293 = load i32, ptr %292, align 4, !dbg !38
  %.not20.i72 = icmp eq i32 %285, 0, !dbg !38
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %294, !dbg !38

294:                                              ; preds = %283
  %295 = sub nsw i32 4, %275, !dbg !38
  %296 = sub nuw nsw i32 32, %285, !dbg !38
  %297 = shl i32 %289, %285, !dbg !38
  %298 = lshr i32 %293, %296, !dbg !38
  %299 = add i32 %298, %297, !dbg !38
  %300 = shl i32 %293, %285, !dbg !38
  %301 = sext i32 %295 to i64, !dbg !38
  %302 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %301, !dbg !38
  %303 = load i32, ptr %302, align 4, !dbg !38
  %304 = lshr i32 %303, %296, !dbg !38
  %305 = add i32 %304, %300, !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %294, %283
  %hi.i.i.i.1.i74 = phi i32 [ %299, %294 ], [ %289, %283 ], !dbg !38
  %lo.i.i.i.0.i75 = phi i32 [ %305, %294 ], [ %293, %283 ], !dbg !38
  %306 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !38
  %307 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !38
  %308 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !38
  %309 = lshr i32 %307, 31, !dbg !38
  %310 = add nuw nsw i32 %309, %306, !dbg !38
  %311 = sub nsw i32 0, %310, !dbg !38
  %.not2123.i76 = icmp slt i32 %269, 0, !dbg !38
  %spec.select.i77 = select i1 %.not2123.i76, i32 %311, i32 %310, !dbg !38
  %312 = xor i32 %307, %269, !dbg !38
  %.lobit.i78 = ashr i32 %307, 31, !dbg !38
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %307, !dbg !38
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %308, !dbg !38
  %313 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !38
  %314 = shl nuw i64 %313, 32, !dbg !38
  %315 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !38
  %316 = or disjoint i64 %314, %315, !dbg !38
  %317 = sitofp i64 %316 to double, !dbg !38
  %318 = fmul double %317, 0x3BF921FB54442D19, !dbg !38
  %319 = fptrunc double %318 to float, !dbg !38
  %320 = fneg float %319, !dbg !38
  %.not2526.i82 = icmp slt i32 %312, 0, !dbg !38
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %320, float %319, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %321 = add i32 %i.i.1.i85, 1, !dbg !38
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i87 = icmp eq i32 %322, 0, !dbg !38
  %323 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %324 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %.011.i88 = select i1 %.not28.i87, float %324, float %323, !dbg !38
  %325 = and i32 %i.i.1.i85, 1, !dbg !38
  %.not29.not.i = icmp eq i32 %325, 0, !dbg !38
  %326 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !38
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i89 = icmp eq i32 %327, 0, !dbg !38
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %326, float 0.000000e+00) #4, !dbg !38
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %326, float 0.000000e+00) #4, !dbg !38
  %.012.i90 = select i1 %.not30.i89, float %329, float %328, !dbg !38
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i104 = icmp eq i32 %330, 0, !dbg !38
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %332 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i105 = select i1 %.not31.i104, float %332, float %331, !dbg !38
  br label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %333 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %334 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %335 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i92 = icmp eq i32 %336, 0, !dbg !38
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %335, float %.011.i88, float %334) #4, !dbg !38
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %335, float %.011.i88, float %334) #4, !dbg !38
  %.010.i93 = select i1 %.not32.i92, float %338, float %337, !dbg !38
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i94 = icmp eq i32 %339, 0, !dbg !38
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %333) #4, !dbg !38
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %333) #4, !dbg !38
  %.09.i95 = select i1 %.not33.i94, float %341, float %340, !dbg !38
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i96 = icmp eq i32 %342, 0, !dbg !38
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %326) #4, !dbg !38
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %326) #4, !dbg !38
  %.05.i97 = select i1 %.not34.i96, float %344, float %343, !dbg !38
  %345 = and i32 %321, 2, !dbg !38
  %.not35.i98 = icmp eq i32 %345, 0, !dbg !38
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !38

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i100 = icmp eq i32 %346, 0, !dbg !38
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i101 = select i1 %.not36.i100, float %348, float %347, !dbg !38
  br label %__nv_cosf.exit, !dbg !38

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !38
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !38
  %349 = fmul float %244, 0x3FE45F3060000000, !dbg !38
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i110 = icmp eq i32 %350, 0, !dbg !38
  %351 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %349) #4, !dbg !38
  %352 = tail call i32 @llvm.nvvm.f2i.rn(float %349) #4, !dbg !38
  %.01.i111 = select i1 %.not.i110, i32 %352, i32 %351, !dbg !38
  %353 = sitofp i32 %.01.i111 to float, !dbg !38
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i112 = icmp eq i32 %354, 0, !dbg !38
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float 0xBFF921FB40000000, float %244) #4, !dbg !38
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %353, float 0xBFF921FB40000000, float %244) #4, !dbg !38
  %.02.i113 = select i1 %.not15.i112, float %356, float %355, !dbg !38
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i114 = icmp eq i32 %357, 0, !dbg !38
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !38
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %353, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !38
  %.03.i115 = select i1 %.not16.i114, float %359, float %358, !dbg !38
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i116 = icmp eq i32 %360, 0, !dbg !38
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !38
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %353, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !38
  %.04.i117 = select i1 %.not17.i116, float %362, float %361, !dbg !38
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i118 = icmp eq i32 %363, 0, !dbg !38
  %364 = tail call float @llvm.nvvm.fabs.ftz.f(float %244) #4, !dbg !38
  %365 = tail call float @llvm.nvvm.fabs.f(float %244) #4, !dbg !38
  %.06.i119 = select i1 %.not18.i118, float %365, float %364, !dbg !38
  %366 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !38
  br i1 %366, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !38

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i121 = icmp eq i32 %367, 0, !dbg !38
  %.07.i122 = select i1 %.not19.i121, float %365, float %364, !dbg !38
  %368 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !38
  br i1 %368, label %__nv_fmul_rn.exit.i.i.i160, label %372, !dbg !38

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i161 = icmp eq i32 %369, 0, !dbg !38
  %370 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %244, float 0.000000e+00) #4, !dbg !38
  %371 = tail call float @llvm.nvvm.mul.rn.f(float %244, float 0.000000e+00) #4, !dbg !38
  %.08.i162 = select i1 %.not27.i161, float %371, float %370, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !38

372:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %373 = bitcast float %244 to i32, !dbg !38
  %374 = lshr i32 %373, 23, !dbg !38
  %375 = and i32 %374, 224, !dbg !38
  %376 = add nsw i32 %375, -128, !dbg !38
  %377 = shl i32 %373, 8, !dbg !38
  %378 = or i32 %377, -2147483648, !dbg !38
  %379 = lshr exact i32 %376, 5, !dbg !38
  br label %380, !dbg !38

380:                                              ; preds = %372, %380
  %indvars.iv185 = phi i64 [ 0, %372 ], [ %indvars.iv.next186, %380 ]
  %hi.i.i.i.0.i123170 = phi i32 [ 0, %372 ], [ %385, %380 ]
  %381 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv185, !dbg !38
  %382 = load i32, ptr addrspace(1) %381, align 4, !dbg !38
  %383 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %382, i32 %378, i32 %hi.i.i.i.0.i123170) #5, !dbg !38, !srcloc !29
  %384 = extractvalue { i32, i32 } %383, 0, !dbg !38
  %385 = extractvalue { i32, i32 } %383, 1, !dbg !38
  %386 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv185, !dbg !38
  store i32 %384, ptr %386, align 4, !dbg !38
  %indvars.iv.next186 = add nuw nsw i64 %indvars.iv185, 1, !dbg !38
  %exitcond187.not = icmp eq i64 %indvars.iv.next186, 6, !dbg !38
  br i1 %exitcond187.not, label %387, label %380, !dbg !38, !llvm.loop !40

387:                                              ; preds = %380
  %388 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !38
  store i32 %385, ptr %388, align 4, !dbg !38
  %389 = and i32 %374, 31, !dbg !38
  %390 = sub nsw i32 6, %379, !dbg !38
  %391 = sext i32 %390 to i64, !dbg !38
  %392 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %391, !dbg !38
  %393 = load i32, ptr %392, align 4, !dbg !38
  %394 = sub nsw i32 5, %379, !dbg !38
  %395 = sext i32 %394 to i64, !dbg !38
  %396 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %395, !dbg !38
  %397 = load i32, ptr %396, align 4, !dbg !38
  %.not20.i125 = icmp eq i32 %389, 0, !dbg !38
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %398, !dbg !38

398:                                              ; preds = %387
  %399 = sub nsw i32 4, %379, !dbg !38
  %400 = sub nuw nsw i32 32, %389, !dbg !38
  %401 = shl i32 %393, %389, !dbg !38
  %402 = lshr i32 %397, %400, !dbg !38
  %403 = add i32 %402, %401, !dbg !38
  %404 = shl i32 %397, %389, !dbg !38
  %405 = sext i32 %399 to i64, !dbg !38
  %406 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %405, !dbg !38
  %407 = load i32, ptr %406, align 4, !dbg !38
  %408 = lshr i32 %407, %400, !dbg !38
  %409 = add i32 %408, %404, !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %398, %387
  %hi.i.i.i.1.i127 = phi i32 [ %403, %398 ], [ %393, %387 ], !dbg !38
  %lo.i.i.i.0.i128 = phi i32 [ %409, %398 ], [ %397, %387 ], !dbg !38
  %410 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !38
  %411 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !38
  %412 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !38
  %413 = lshr i32 %411, 31, !dbg !38
  %414 = add nuw nsw i32 %413, %410, !dbg !38
  %415 = sub nsw i32 0, %414, !dbg !38
  %.not2123.i129 = icmp slt i32 %373, 0, !dbg !38
  %spec.select.i130 = select i1 %.not2123.i129, i32 %415, i32 %414, !dbg !38
  %416 = xor i32 %411, %373, !dbg !38
  %.lobit.i131 = ashr i32 %411, 31, !dbg !38
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %411, !dbg !38
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %412, !dbg !38
  %417 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !38
  %418 = shl nuw i64 %417, 32, !dbg !38
  %419 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !38
  %420 = or disjoint i64 %418, %419, !dbg !38
  %421 = sitofp i64 %420 to double, !dbg !38
  %422 = fmul double %421, 0x3BF921FB54442D19, !dbg !38
  %423 = fptrunc double %422 to float, !dbg !38
  %424 = fneg float %423, !dbg !38
  %.not2526.i135 = icmp slt i32 %416, 0, !dbg !38
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %424, float %423, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !38

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !38
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !38
  %425 = add i32 %i.i.1.i138, 1, !dbg !38
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i140 = icmp eq i32 %426, 0, !dbg !38
  %427 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !38
  %428 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !38
  %.011.i141 = select i1 %.not28.i140, float %428, float %427, !dbg !38
  %429 = and i32 %i.i.1.i138, 1, !dbg !38
  %.not29.not.i142 = icmp eq i32 %429, 0, !dbg !38
  %430 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !38
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i143 = icmp eq i32 %431, 0, !dbg !38
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %430, float 0.000000e+00) #4, !dbg !38
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %430, float 0.000000e+00) #4, !dbg !38
  %.012.i144 = select i1 %.not30.i143, float %433, float %432, !dbg !38
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !38

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i158 = icmp eq i32 %434, 0, !dbg !38
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !38
  %436 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i159 = select i1 %.not31.i158, float %436, float %435, !dbg !38
  br label %__internal_fmad.exit2.i.i.i145, !dbg !38

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %437 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %438 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %439 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i146 = icmp eq i32 %440, 0, !dbg !38
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %439, float %.011.i141, float %438) #4, !dbg !38
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %439, float %.011.i141, float %438) #4, !dbg !38
  %.010.i147 = select i1 %.not32.i146, float %442, float %441, !dbg !38
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i148 = icmp eq i32 %443, 0, !dbg !38
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %437) #4, !dbg !38
  %445 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %437) #4, !dbg !38
  %.09.i149 = select i1 %.not33.i148, float %445, float %444, !dbg !38
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i150 = icmp eq i32 %446, 0, !dbg !38
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %430) #4, !dbg !38
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %430) #4, !dbg !38
  %.05.i151 = select i1 %.not34.i150, float %448, float %447, !dbg !38
  %449 = and i32 %425, 2, !dbg !38
  %.not35.i152 = icmp eq i32 %449, 0, !dbg !38
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !38

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i154 = icmp eq i32 %450, 0, !dbg !38
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i155 = select i1 %.not36.i154, float %452, float %451, !dbg !38
  br label %__nv_cosf.exit163, !dbg !38

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !38
  %453 = icmp slt i32 %13, 64, !dbg !41
  %454 = extractvalue { i32, i32 } %18, 1, !dbg !19
  %455 = bitcast i32 %454 to float, !dbg !19
  %456 = bitcast i32 %22 to float, !dbg !21
  %457 = fadd float %455, %456, !dbg !42
  %458 = extractvalue { i32, i32 } %18, 0, !dbg !19
  %459 = bitcast i32 %458 to float, !dbg !19
  %460 = bitcast i32 %21 to float, !dbg !21
  %461 = fadd float %459, %460, !dbg !42
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !38
  %462 = select i1 %453, float %z.i.i.0.i, float %z.i.i.0.i102, !dbg !43
  %463 = select i1 %453, float %z.i.i.0.i51, float %z.i.i.0.i156, !dbg !43
  %464 = fadd float %461, %462, !dbg !44
  %465 = fadd float %457, %463, !dbg !44
  %466 = bitcast float %464 to i32, !dbg !45
  %467 = bitcast float %465 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %466, i32 %467, ptr addrspace(1) %17, i1 %11) #4, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpvme26tpuy662q37ccvyrmnzr3pas3fh3tnibj6n5uuild2t2z6.py", directory: "inductor_cache/pv")
!4 = !{ptr @triton_poi_fused_add_repeat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_repeat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_repeat_0", linkageName: "triton_poi_fused_add_repeat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 39, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 35, column: 14, scope: !7)
!23 = !DILocation(line: 36, column: 19, scope: !7)
!24 = !DILocation(line: 38, column: 19, scope: !7)
!25 = !DILocation(line: 39, column: 24, scope: !7)
!26 = !DILocation(line: 41, column: 21, scope: !7)
!27 = !DILocation(line: 42, column: 20, scope: !7)
!28 = !DILocation(line: 43, column: 24, scope: !7)
!29 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.count", i32 1}
!32 = distinct !{!32, !31}
!33 = !DILocation(line: 49, column: 15, scope: !7)
!34 = !DILocation(line: 50, column: 21, scope: !7)
!35 = !DILocation(line: 52, column: 20, scope: !7)
!36 = !DILocation(line: 53, column: 24, scope: !7)
!37 = !DILocation(line: 56, column: 20, scope: !7)
!38 = !DILocation(line: 57, column: 24, scope: !7)
!39 = distinct !{!39, !31}
!40 = distinct !{!40, !31}
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 29, column: 18, scope: !7)
!43 = !DILocation(line: 0, scope: !7)
!44 = !DILocation(line: 61, column: 19, scope: !7)
!45 = !DILocation(line: 62, column: 40, scope: !7)
!46 = !DILocation(line: 62, column: 4, scope: !7)
