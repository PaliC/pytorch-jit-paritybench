#loc = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0)
#loc1 = loc(unknown)
#loc46 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":63:26)
#loc61 = loc(callsite(#loc1 at #loc46))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg8: i32 loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0)) attributes {noinline = false} {
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c-377_i32 = arith.constant -377 : i32 loc(#loc1)
    %c24128_i32 = arith.constant 24128 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c377_i64 = arith.constant 377 : i64 loc(#loc1)
    %c389_i32 = arith.constant 389 : i32 loc(#loc1)
    %c1556_i32 = arith.constant 1556 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c1556_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.remsi %0, %c389_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c389_i32 : i32 loc(#loc7)
    %7 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc8)
    %8 = tt.splat %7 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.load %8, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.load %11, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %arg5, %5 : !tt.ptr<f32>, i32 loc(#loc12)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %arg6, %5 : !tt.ptr<f32>, i32 loc(#loc14)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %19 = arith.extsi %5 : i32 to i64 loc(#loc16)
    %20 = arith.cmpi slt, %19, %c377_i64 : i64 loc(#loc16)
    %21 = arith.muli %5, %c64_i32 : i32 loc(#loc17)
    %22 = tt.splat %21 : i32 -> tensor<1x64xi32> loc(#loc18)
    %23 = arith.addi %4, %22 : tensor<1x64xi32> loc(#loc18)
    %24 = arith.muli %6, %c24128_i32 : i32 loc(#loc19)
    %25 = tt.splat %24 : i32 -> tensor<1x64xi32> loc(#loc20)
    %26 = arith.addi %23, %25 : tensor<1x64xi32> loc(#loc20)
    %27 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %28 = tt.addptr %27, %26 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc21)
    %29 = arith.andi %20, %1 : i1 loc(#loc22)
    %30 = tt.splat %29 : i1 -> tensor<1x64xi1> loc(#loc23)
    %31 = tt.load %28, %30, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %32 = arith.cmpi sge, %19, %c377_i64 : i64 loc(#loc24)
    %33 = arith.addi %5, %c-377_i32 : i32 loc(#loc25)
    %34 = arith.muli %33, %c64_i32 : i32 loc(#loc26)
    %35 = tt.splat %34 : i32 -> tensor<1x64xi32> loc(#loc27)
    %36 = arith.addi %4, %35 : tensor<1x64xi32> loc(#loc27)
    %37 = arith.muli %6, %c768_i32 : i32 loc(#loc28)
    %38 = tt.splat %37 : i32 -> tensor<1x64xi32> loc(#loc29)
    %39 = arith.addi %36, %38 : tensor<1x64xi32> loc(#loc29)
    %40 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc30)
    %41 = tt.addptr %40, %39 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc30)
    %42 = arith.andi %32, %1 : i1 loc(#loc31)
    %43 = tt.splat %42 : i1 -> tensor<1x64xi1> loc(#loc32)
    %44 = tt.load %41, %43, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc32)
    %45 = tt.splat %20 : i1 -> tensor<1x64xi1> loc(#loc33)
    %46 = arith.select %45, %31, %44 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc33)
    %47 = tt.broadcast %9 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc34)
    %48 = arith.subf %46, %47 : tensor<1x64xf32> loc(#loc34)
    %49 = arith.addf %12, %cst_1 : tensor<1x1xf32> loc(#loc35)
    %50 = tt.extern_elementwise %49 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc36)
    %51 = arith.divf %cst, %50 : tensor<1x1xf32> loc(#loc37)
    %52 = tt.broadcast %51 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc38)
    %53 = arith.mulf %48, %52 : tensor<1x64xf32> loc(#loc38)
    %54 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc39)
    %55 = arith.mulf %53, %54 : tensor<1x64xf32> loc(#loc39)
    %56 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc40)
    %57 = arith.addf %55, %56 : tensor<1x64xf32> loc(#loc40)
    %58 = arith.cmpf ogt, %cst_2, %57 : tensor<1x64xf32> loc(#loc58)
    %59 = arith.select %58, %cst_2, %57 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc59)
    %60 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc44)
    %61 = arith.select %60, %59, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc44)
    %62 = "tt.reduce"(%61) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc46)), %arg11: f32 loc(callsite(#loc1 at #loc46))):
      %72 = arith.addf %arg10, %arg11 : f32 loc(#loc63)
      tt.reduce.return %72 : f32 loc(#loc60)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc60)
    %63 = tt.expand_dims %62 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc48)
    %64 = arith.divf %63, %cst_0 : tensor<1x1xf32> loc(#loc49)
    %65 = arith.muli %0, %c64_i32 : i32 loc(#loc50)
    %66 = tt.splat %65 : i32 -> tensor<1x64xi32> loc(#loc51)
    %67 = arith.addi %4, %66 : tensor<1x64xi32> loc(#loc51)
    %68 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc52)
    %69 = tt.addptr %68, %67 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc52)
    tt.store %69, %46, %60 : tensor<1x64x!tt.ptr<f32>> loc(#loc53)
    gpu.barrier loc(#loc54)
    %70 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc55)
    %71 = tt.splat %70 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc55)
    tt.store %71, %64, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":23:28)
#loc3 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":25:21)
#loc4 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":26:26)
#loc5 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":26:34)
#loc6 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":29:19)
#loc7 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":31:19)
#loc8 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":33:31)
#loc9 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":33:36)
#loc10 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":34:31)
#loc11 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":34:36)
#loc12 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":35:31)
#loc13 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":35:36)
#loc14 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":36:31)
#loc15 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":36:36)
#loc16 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":41:18)
#loc17 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:39)
#loc18 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:35)
#loc19 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:51)
#loc20 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:45)
#loc21 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:30)
#loc22 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:63)
#loc23 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:56)
#loc24 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":43:19)
#loc25 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:48)
#loc26 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:39)
#loc27 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:35)
#loc28 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:58)
#loc29 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:54)
#loc30 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:30)
#loc31 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:70)
#loc32 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:63)
#loc33 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":47:33)
#loc34 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":48:20)
#loc35 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":50:20)
#loc36 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":51:27)
#loc37 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":53:20)
#loc38 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":56:20)
#loc39 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":57:20)
#loc40 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":58:20)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc42 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":60:42)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":62:35)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc48 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":63:29)
#loc49 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":65:20)
#loc50 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:33)
#loc51 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:30)
#loc52 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:25)
#loc53 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:45)
#loc54 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":67:4)
#loc55 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:28)
#loc56 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:40)
#loc57 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:4)
#loc58 = loc(callsite(#loc41 at #loc42))
#loc59 = loc(callsite(#loc43 at #loc42))
#loc60 = loc(callsite(#loc45 at #loc46))
#loc62 = loc(callsite(#loc47 at #loc45))
#loc63 = loc(callsite(#loc62 at #loc46))
