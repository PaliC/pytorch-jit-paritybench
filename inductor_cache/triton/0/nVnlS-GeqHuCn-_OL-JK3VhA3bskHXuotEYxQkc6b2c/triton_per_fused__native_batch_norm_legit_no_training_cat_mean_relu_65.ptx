//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<27>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_0];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_1];
$L__tmp0:
	.loc	1 23 28                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:25:21
	setp.lt.s32 	%p1, %r1, 1556;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_2];
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_3];
	.loc	1 26 34                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:26:34
	mov.u32 	%r24, %tid.x;
	and.b32  	%r25, %r24, 63;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_4];
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_5];
	.loc	1 31 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:31:19
	mul.hi.s32 	%r26, %r1, -1468459255;
	mad.lo.s32 	%r27, %r1, 1, %r26;
	shr.u32 	%r28, %r27, 31;
	shr.s32 	%r29, %r27, 8;
	add.s32 	%r30, %r29, %r28;
	ld.param.u64 	%rd15, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_6];
	.loc	1 29 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:29:19
	mul.lo.s32 	%r31, %r30, 389;
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65_param_7];
	sub.s32 	%r32, %r1, %r31;
	.loc	1 33 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:31
	mul.wide.s32 	%rd17, %r32, 4;
	add.s64 	%rd1, %rd12, %rd17;
	.loc	1 33 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:34:31
	add.s64 	%rd2, %rd13, %rd17;
	.loc	1 34 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:34:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 35 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:31
	add.s64 	%rd3, %rd14, %rd17;
	.loc	1 35 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:31
	add.s64 	%rd4, %rd15, %rd17;
	.loc	1 36 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 41 18                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:41:18
	setp.lt.s32 	%p14, %r32, 377;
	.loc	1 42 39                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:39
	shl.b32 	%r33, %r32, 6;
	.loc	1 42 35                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:35
	or.b32  	%r34, %r33, %r25;
	.loc	1 42 45                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:45
	mad.lo.s32 	%r35, %r30, 24128, %r34;
	.loc	1 42 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:30
	mul.wide.s32 	%rd18, %r35, 4;
	add.s64 	%rd5, %rd10, %rd18;
	.loc	1 42 63                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:63
	and.pred  	%p5, %p1, %p14;
	mov.b32 	%r7, 0;
	.loc	1 42 56                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:42:56
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	@!%p5 mov.u32 %r6, %r7;
	// end inline asm
	.loc	1 43 19                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:43:19
	setp.gt.s32 	%p15, %r32, 376;
	.loc	1 46 39                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:39
	add.s32 	%r36, %r34, -24128;
	.loc	1 46 54                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:54
	mad.lo.s32 	%r37, %r30, 768, %r36;
	.loc	1 46 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:30
	mul.wide.s32 	%rd19, %r37, 4;
	add.s64 	%rd6, %rd11, %rd19;
	.loc	1 46 70                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:70
	and.pred  	%p7, %p1, %p15;
	.loc	1 46 63                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:46:63
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd6 + 0 ];
	@!%p7 mov.u32 %r8, %r7;
	// end inline asm
	.loc	1 50 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:50:20
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 51 27                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:51:27
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 47 33                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:47:33
	selp.b32 	%r22, %r6, %r8, %p14;
	mov.b32 	%f4, %r22;
	.loc	1 33 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:33:36
	mov.b32 	%f5, %r2;
	.loc	1 48 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:48:20
	sub.f32 	%f6, %f4, %f5;
	.loc	1 36 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:36:36
	mov.b32 	%f7, %r5;
	.loc	1 35 36                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:35:36
	mov.b32 	%f8, %r4;
	.loc	1 26 34                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:26:34
	and.b32  	%r38, %r24, 31;
	.loc	1 53 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:53:20
	mov.b32 	%r12, %f3;
	mov.b32 	%r11, 1065353216;
	// begin inline asm
	div.full.f32 %r10, %r11, %r12;
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 56 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:56:20
	mul.f32 	%f10, %f6, %f9;
	.loc	1 58 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:58:20
	fma.rn.f32 	%f11, %f10, %f8, %f7;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f11, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f12, 0f00000000, %f11, %p16;
$L__tmp2:
	.loc	1 62 35                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:62:35
	selp.f32 	%f13, %f12, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f13;
	shfl.sync.bfly.b32	%r40, %r39, 16, 31, -1;
	mov.b32 	%f14, %r40;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f15;
	shfl.sync.bfly.b32	%r42, %r41, 8, 31, -1;
	mov.b32 	%f16, %r42;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f17;
	shfl.sync.bfly.b32	%r44, %r43, 4, 31, -1;
	mov.b32 	%f18, %r44;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f19;
	shfl.sync.bfly.b32	%r46, %r45, 2, 31, -1;
	mov.b32 	%f20, %r46;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f21;
	shfl.sync.bfly.b32	%r48, %r47, 1, 31, -1;
	mov.b32 	%f22, %r48;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r38, 0;
	shr.u32 	%r49, %r24, 3;
	and.b32  	%r50, %r49, 4;
	mov.u32 	%r51, global_smem;
	add.s32 	%r13, %r51, %r50;
	mov.b32 	%r14, %f23;
	// begin inline asm
	@%p9 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r24, 2;
	shl.b32 	%r52, %r24, 2;
	add.s32 	%r16, %r51, %r52;
	// begin inline asm
	@%p10 ld.shared.b32 %r15, [ %r16 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r15;
	shfl.sync.bfly.b32	%r53, %r15, 1, 31, -1;
	mov.b32 	%f25, %r53;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r54, %r24, 1;
	setp.eq.b32 	%p17, %r54, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p11, %p10, %p18;
	mov.b32 	%r18, %f26;
	// begin inline asm
	@%p11 st.shared.b32 [ %r16 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 65 20                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:65:20
	ld.shared.u32 	%r20, [global_smem];
	mov.b32 	%r21, 1115684864;
	// begin inline asm
	div.full.f32 %r23, %r20, %r21;
	// end inline asm
	.loc	1 66 33                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:33
	shl.b32 	%r55, %r1, 6;
	.loc	1 66 30                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:30
	or.b32  	%r56, %r55, %r25;
	.loc	1 66 25                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:25
	mul.wide.s32 	%rd20, %r56, 4;
	add.s64 	%rd7, %rd16, %rd20;
	.loc	1 66 45                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:66:45
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r22 };
	// end inline asm
	.loc	1 67 4                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:67:4
	bar.sync 	0;
	.loc	1 68 28                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:28
	mul.wide.s32 	%rd21, %r1, 4;
	add.s64 	%rd8, %rd9, %rd21;
	.loc	1 68 40                         // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:40
	setp.eq.s32 	%p19, %r25, 0;
	and.pred  	%p13, %p19, %p1;
	// begin inline asm
	@%p13 st.global.b32 [ %rd8 + 0 ], { %r23 };
	// end inline asm
	.loc	1 68 4                          // cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py:68:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 239                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 51
.b8 103
.b8 120
.b8 103
.b8 98
.b8 122
.b8 106
.b8 98
.b8 107
.b8 117
.b8 53
.b8 54
.b8 104
.b8 111
.b8 114
.b8 99
.b8 55
.b8 106
.b8 55
.b8 99
.b8 105
.b8 116
.b8 114
.b8 100
.b8 104
.b8 53
.b8 97
.b8 108
.b8 52
.b8 104
.b8 106
.b8 112
.b8 55
.b8 118
.b8 106
.b8 122
.b8 107
.b8 116
.b8 110
.b8 114
.b8 55
.b8 113
.b8 100
.b8 121
.b8 99
.b8 102
.b8 53
.b8 121
.b8 54
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x49 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 54
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xac:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
