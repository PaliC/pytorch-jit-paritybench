//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_26 // -- Begin function triton_poi_fused_convolution_26
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_26
.visible .entry triton_poi_fused_convolution_26(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_26_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_26_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_26_param_2,
	.param .u32 triton_poi_fused_convolution_26_param_3,
	.param .u32 triton_poi_fused_convolution_26_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<123>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_26_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_26_param_1];
$L__tmp0:
	.loc	1 22 28                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:22:33
	shl.b32 	%r43, %r1, 6;
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_26_param_2];
	.loc	1 23 44                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:23:44
	mov.u32 	%r44, %tid.x;
	shr.u32 	%r45, %r44, 2;
	bfe.u32 	%r46, %r44, 2, 5;
	shl.b32 	%r47, %r44, 2;
	and.b32  	%r48, %r47, 12;
	and.b32  	%r49, %r47, 60;
	.loc	1 23 23                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:23:23
	or.b32  	%r50, %r43, %r46;
	or.b32  	%r51, %r50, 32;
	or.b32  	%r52, %r43, %r49;
	.loc	1 24 21                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:24:21
	setp.lt.s32 	%p15, %r50, 64;
	setp.lt.s32 	%p16, %r51, 64;
	setp.lt.s32 	%p17, %r52, 64;
	.loc	1 25 28                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:25:33
	shl.b32 	%r53, %r2, 4;
	.loc	1 26 44                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:26:44
	bfe.u32 	%r54, %r44, 4, 3;
	.loc	1 26 23                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:26:23
	or.b32  	%r55, %r53, %r48;
	or.b32  	%r56, %r53, %r54;
	or.b32  	%r57, %r56, 8;
	.loc	1 27 21                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:27:21
	setp.lt.s32 	%p18, %r55, 16;
	setp.lt.s32 	%p19, %r56, 16;
	setp.lt.s32 	%p20, %r57, 16;
	.loc	1 30 19                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:30:19
	shr.s32 	%r59, %r50, 31;
	shr.u32 	%r60, %r59, 28;
	add.s32 	%r61, %r50, %r60;
	.loc	1 29 19                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:29:19
	and.b32  	%r62, %r61, 268435440;
	sub.s32 	%r63, %r50, %r62;
	.loc	1 30 19                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:30:19
	shr.s32 	%r65, %r52, 31;
	shr.u32 	%r66, %r65, 28;
	add.s32 	%r67, %r52, %r66;
	.loc	1 29 19                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:29:19
	and.b32  	%r68, %r67, -16;
	sub.s32 	%r69, %r52, %r68;
	.loc	1 30 19                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:30:19
	bfe.s32 	%r70, %r1, 25, 1;
	shr.u32 	%r71, %r70, 28;
	add.s32 	%r72, %r51, %r71;
	.loc	1 31 36                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:36
	add.s32 	%r73, %r55, 256;
	.loc	1 31 44                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:44
	shl.b32 	%r74, %r63, 4;
	.loc	1 31 41                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:41
	add.s32 	%r75, %r73, %r74;
	.loc	1 31 53                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:53
	shl.b32 	%r76, %r61, 5;
	and.b32  	%r77, %r76, -512;
	shl.b32 	%r78, %r72, 5;
	and.b32  	%r79, %r78, -512;
	.loc	1 31 49                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:49
	add.s32 	%r80, %r75, %r77;
	.loc	1 31 41                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:41
	add.s32 	%r81, %r79, %r74;
	.loc	1 31 49                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:49
	add.s32 	%r82, %r81, %r73;
	.loc	1 31 30                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:30
	mul.wide.s32 	%rd10, %r80, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r82, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 31 66                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:66
	and.pred  	%p1, %p15, %p18;
	and.pred  	%p2, %p16, %p18;
	and.pred  	%p11, %p17, %p19;
	and.pred  	%p12, %p20, %p17;
	.loc	1 31 58                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:31:58
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 33                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:33
	shl.b32 	%r83, %r56, 4;
	shl.b32 	%r84, %r57, 4;
	.loc	1 32 42                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:42
	shl.b32 	%r85, %r67, 4;
	and.b32  	%r86, %r85, -256;
	.loc	1 32 30                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:30
	add.s32 	%r87, %r86, %r69;
	.loc	1 32 38                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:38
	add.s32 	%r88, %r87, %r83;
	add.s32 	%r89, %r87, %r84;
	.loc	1 32 25                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:25
	mul.wide.s32 	%rd12, %r88, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r89, 4;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 32 53                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:32:53
	shl.b32 	%r90, %r44, 8;
	and.b32  	%r91, %r90, 768;
	or.b32  	%r92, %r91, %r46;
	and.b32  	%r93, %r47, 508;
	shr.u32 	%r94, %r91, 4;
	add.s32 	%r95, %r94, %r92;
	shl.b32 	%r96, %r95, 2;
	mov.u32 	%r97, global_smem;
	add.s32 	%r11, %r97, %r96;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r98, %r91, 64;
	shr.u32 	%r99, %r98, 4;
	add.s32 	%r100, %r99, %r92;
	shl.b32 	%r101, %r100, 2;
	add.s32 	%r102, %r97, %r101;
	add.s32 	%r13, %r102, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r103, %r91, 128;
	shr.u32 	%r104, %r103, 4;
	add.s32 	%r105, %r104, %r92;
	shl.b32 	%r106, %r105, 2;
	add.s32 	%r107, %r97, %r106;
	add.s32 	%r15, %r107, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r108, %r91, 192;
	shr.u32 	%r109, %r108, 4;
	add.s32 	%r110, %r109, %r92;
	shl.b32 	%r111, %r110, 2;
	add.s32 	%r112, %r97, %r111;
	add.s32 	%r17, %r112, 768;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r102, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r107, 640;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r112, 896;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r113, %r45, 28;
	add.s32 	%r114, %r113, %r93;
	shl.b32 	%r115, %r114, 2;
	add.s32 	%r116, %r97, %r115;
	or.b32  	%r117, %r93, 512;
	shr.u32 	%r118, %r117, 4;
	and.b32  	%r119, %r118, 60;
	add.s32 	%r120, %r119, %r93;
	shl.b32 	%r121, %r120, 2;
	add.s32 	%r122, %r97, %r121;
	ld.shared.v4.u32 	{%r31, %r32, %r33, %r34}, [%r122+2048];
	ld.shared.v4.u32 	{%r27, %r28, %r29, %r30}, [%r116];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 25                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:33:25
	add.s64 	%rd5, %rd9, %rd12;
	add.s64 	%rd6, %rd9, %rd13;
	.loc	1 33 53                         // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:33:53
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd5 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd6 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 4                          // cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gc/cgcmsxpemv7ll2z4pw34c6yb5pkwoyevgfiq54zb7qnomv24xp2j.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 99
.b8 109
.b8 115
.b8 120
.b8 112
.b8 101
.b8 109
.b8 118
.b8 55
.b8 108
.b8 108
.b8 50
.b8 122
.b8 52
.b8 112
.b8 119
.b8 51
.b8 52
.b8 99
.b8 54
.b8 121
.b8 98
.b8 53
.b8 112
.b8 107
.b8 119
.b8 111
.b8 121
.b8 101
.b8 118
.b8 103
.b8 102
.b8 105
.b8 113
.b8 53
.b8 52
.b8 122
.b8 98
.b8 55
.b8 113
.b8 110
.b8 111
.b8 109
.b8 118
.b8 50
.b8 52
.b8 120
.b8 112
.b8 50
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
