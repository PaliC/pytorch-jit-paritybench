; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_0(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %4 = shl i32 %3, 8, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = shl i32 %5, 1, !dbg !12
  %7 = and i32 %6, 254, !dbg !12
  %8 = or disjoint i32 %4, %7, !dbg !13
  %9 = or disjoint i32 %8, 1, !dbg !13
  %10 = icmp slt i32 %8, 256, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = mul i32 %11, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %14 = insertelement <2 x i32> %13, i32 %11, i64 1, !dbg !16
  %15 = srem <2 x i32> %14, splat (i32 4), !dbg !16
  %16 = extractelement <2 x i32> %15, i64 1, !dbg !17
  %17 = sub nsw i32 %.decomposed, %16, !dbg !17
  %18 = extractelement <2 x i32> %15, i64 0, !dbg !17
  %19 = sub nsw i32 %18, %16, !dbg !17
  %20 = icmp eq i32 %17, 3, !dbg !18
  %21 = icmp eq i32 %19, 3, !dbg !18
  %22 = sext i32 %8 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = select i1 %20, i32 1065353216, i32 0, !dbg !18
  %25 = select i1 %21, i32 1065353216, i32 0, !dbg !18
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %24, i32 %25, ptr addrspace(1) %23, i1 %10) #1, !dbg !20
  ret void, !dbg !21
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cachke7cn6hy6wyhqb54wandt4ji5uu4zbhqnzjy5c56dkm3r466.py", directory: "inductor_cache/ac")
!4 = !{ptr @triton_poi_fused_clone_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_0", linkageName: "triton_poi_fused_clone_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 17, scope: !7)
!18 = !DILocation(line: 34, column: 32, scope: !7)
!19 = !DILocation(line: 35, column: 25, scope: !7)
!20 = !DILocation(line: 35, column: 36, scope: !7)
!21 = !DILocation(line: 35, column: 4, scope: !7)
