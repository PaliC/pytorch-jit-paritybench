#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [16, 2, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [8, 2, 2], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#loc = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc17 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":38:69)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:50)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:51)
#loc81 = loc(callsite(#loc1 at #loc26))
#loc87 = loc(callsite(#loc1 at #loc31))
#loc98 = loc(callsite(#loc1 at #loc41))
#loc104 = loc(callsite(#loc1 at #loc46))
#loc134 = loc(callsite(#loc81 at #loc21))
#loc140 = loc(callsite(#loc87 at #loc21))
#loc152 = loc(callsite(#loc98 at #loc21))
#loc159 = loc(callsite(#loc104 at #loc21))
#loc187 = loc(callsite(#loc134 at #loc16))
#loc193 = loc(callsite(#loc140 at #loc16))
#loc205 = loc(callsite(#loc152 at #loc16))
#loc212 = loc(callsite(#loc159 at #loc16))
#loc236 = loc(callsite(#loc187 at #loc17))
#loc239 = loc(callsite(#loc193 at #loc17))
#loc242 = loc(callsite(#loc205 at #loc17))
#loc245 = loc(callsite(#loc212 at #loc17))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_sort_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg1: !tt.ptr<i16> {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0), %arg3: i32 loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<1x4xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x4xi32, #blocked> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c10_i32 = arith.constant 10 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x4xi16, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked2> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst : tensor<1x4xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %0, %c8_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c8_i32 : i32 loc(#loc7)
    %7 = tt.splat %5 : i32 -> tensor<1x4xi32, #blocked> loc(#loc8)
    %8 = arith.addi %3, %7 : tensor<1x4xi32, #blocked> loc(#loc8)
    %9 = arith.muli %6, %c10_i32 : i32 loc(#loc9)
    %10 = tt.splat %9 : i32 -> tensor<1x4xi32, #blocked> loc(#loc10)
    %11 = arith.addi %8, %10 : tensor<1x4xi32, #blocked> loc(#loc10)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc11)
    %14 = tt.splat %1 : i1 -> tensor<1x4xi1, #blocked> loc(#loc12)
    %15 = arith.andi %4, %14 : tensor<1x4xi1, #blocked> loc(#loc12)
    %16 = tt.load %13, %15, %cst_0 : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc13)
    %17 = arith.trunci %3 : tensor<1x4xi32, #blocked> to tensor<1x4xi16, #blocked> loc(#loc14)
    %18 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> loc(#loc126)
    %19 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc126)
    %20 = tt.expand_dims %18 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> loc(#loc126)
    %21 = tt.expand_dims %19 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc126)
    %22 = tt.expand_dims %20 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> -> tensor<1x2x1xi32, #blocked2> loc(#loc126)
    %23 = tt.expand_dims %21 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<1x2x1xi32, #blocked1> loc(#loc126)
    %24 = tt.broadcast %22 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc127)
    %25 = tt.reshape %24 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc128)
    %26 = tt.reshape %16 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc182)
    %27 = tt.bitcast %26 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc183)
    %28 = arith.subi %cst_4, %22 : tensor<1x2x1xi32, #blocked2> loc(#loc184)
    %29 = arith.subi %cst_1, %23 : tensor<1x2x1xi32, #blocked1> loc(#loc184)
    %30 = tt.broadcast %29 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc185)
    %31 = arith.muli %27, %30 : tensor<2x2x1xi32, #blocked1> loc(#loc185)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc187 at #loc17)), %arg5: i32 loc(callsite(#loc187 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc247)
      tt.reduce.return %168 : i32 loc(#loc235)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc235)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc189)
    %34 = tt.broadcast %33 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc190)
    %35 = tt.broadcast %23 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc191)
    %36 = arith.muli %27, %35 : tensor<2x2x1xi32, #blocked1> loc(#loc191)
    %37 = "tt.reduce"(%36) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc193 at #loc17)), %arg5: i32 loc(callsite(#loc193 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc248)
      tt.reduce.return %168 : i32 loc(#loc238)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc238)
    %38 = tt.expand_dims %37 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc195)
    %39 = tt.broadcast %38 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc196)
    %40 = tt.reshape %34 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc197)
    %41 = tt.reshape %39 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc198)
    %42 = tt.bitcast %40 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc199)
    %43 = tt.bitcast %41 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc200)
    %44 = tt.reshape %17 : tensor<1x4xi16, #blocked> -> tensor<2x2x1xi16, #blocked1> loc(#loc201)
    %45 = arith.trunci %29 : tensor<1x2x1xi32, #blocked1> to tensor<1x2x1xi16, #blocked1> loc(#loc202)
    %46 = arith.trunci %28 : tensor<1x2x1xi32, #blocked2> to tensor<1x2x1xi16, #blocked2> loc(#loc202)
    %47 = tt.broadcast %45 : tensor<1x2x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc203)
    %48 = arith.muli %44, %47 : tensor<2x2x1xi16, #blocked1> loc(#loc203)
    %49 = "tt.reduce"(%48) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc205 at #loc17)), %arg5: i16 loc(callsite(#loc205 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc249)
      tt.reduce.return %168 : i16 loc(#loc241)
    }) : (tensor<2x2x1xi16, #blocked1>) -> tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc241)
    %50 = tt.expand_dims %49 {axis = 1 : i32} : tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi16, #blocked1> loc(#loc207)
    %51 = tt.broadcast %50 : tensor<2x1x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc208)
    %52 = arith.trunci %23 : tensor<1x2x1xi32, #blocked1> to tensor<1x2x1xi16, #blocked1> loc(#loc209)
    %53 = arith.trunci %22 : tensor<1x2x1xi32, #blocked2> to tensor<1x2x1xi16, #blocked2> loc(#loc209)
    %54 = tt.broadcast %52 : tensor<1x2x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc210)
    %55 = arith.muli %44, %54 : tensor<2x2x1xi16, #blocked1> loc(#loc210)
    %56 = "tt.reduce"(%55) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc212 at #loc17)), %arg5: i16 loc(callsite(#loc212 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc250)
      tt.reduce.return %168 : i16 loc(#loc244)
    }) : (tensor<2x2x1xi16, #blocked1>) -> tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc244)
    %57 = tt.expand_dims %56 {axis = 1 : i32} : tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi16, #blocked1> loc(#loc214)
    %58 = tt.broadcast %57 : tensor<2x1x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc215)
    %59 = tt.reshape %51 : tensor<2x2x1xi16, #blocked1> -> tensor<1x4xi16, #blocked> loc(#loc216)
    %60 = tt.reshape %58 : tensor<2x2x1xi16, #blocked1> -> tensor<1x4xi16, #blocked> loc(#loc217)
    %61 = arith.extsi %59 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc218)
    %62 = arith.cmpi slt, %61, %cst : tensor<1x4xi32, #blocked> loc(#loc218)
    %63 = arith.extsi %60 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc219)
    %64 = arith.cmpi slt, %63, %cst : tensor<1x4xi32, #blocked> loc(#loc219)
    %65 = tt.bitcast %16 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc220)
    %66 = arith.cmpf ogt, %42, %43 : tensor<1x4xf32, #blocked> loc(#loc221)
    %67 = arith.cmpi ugt, %64, %62 : tensor<1x4xi1, #blocked> loc(#loc222)
    %68 = arith.cmpi eq, %64, %62 : tensor<1x4xi1, #blocked> loc(#loc223)
    %69 = arith.andi %68, %66 : tensor<1x4xi1, #blocked> loc(#loc224)
    %70 = arith.ori %67, %69 : tensor<1x4xi1, #blocked> loc(#loc225)
    %71 = arith.extui %70 : tensor<1x4xi1, #blocked> to tensor<1x4xi32, #blocked> loc(#loc226)
    %72 = arith.xori %71, %25 : tensor<1x4xi32, #blocked> loc(#loc226)
    %73 = arith.cmpi ne, %72, %cst_2 : tensor<1x4xi32, #blocked> loc(#loc227)
    %74 = arith.xori %40, %41 : tensor<1x4xi32, #blocked> loc(#loc228)
    %75 = arith.select %73, %74, %cst_2 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc229)
    %76 = arith.xori %65, %75 : tensor<1x4xi32, #blocked> loc(#loc230)
    %77 = arith.xori %59, %60 : tensor<1x4xi16, #blocked> loc(#loc231)
    %78 = arith.select %73, %77, %cst_3 : tensor<1x4xi1, #blocked>, tensor<1x4xi16, #blocked> loc(#loc232)
    %79 = arith.xori %17, %78 : tensor<1x4xi16, #blocked> loc(#loc233)
    %80 = tt.bitcast %76 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc234)
    %81 = tt.reshape %80 : tensor<1x4xf32, #blocked> -> tensor<1x2x2xf32, #blocked2> loc(#loc182)
    %82 = tt.bitcast %81 : tensor<1x2x2xf32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc183)
    %83 = tt.broadcast %28 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc185)
    %84 = arith.muli %82, %83 : tensor<1x2x2xi32, #blocked2> loc(#loc185)
    %85 = "tt.reduce"(%84) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc187 at #loc17)), %arg5: i32 loc(callsite(#loc187 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc247)
      tt.reduce.return %168 : i32 loc(#loc235)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc235)
    %86 = tt.expand_dims %85 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc189)
    %87 = tt.broadcast %86 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc190)
    %88 = arith.muli %82, %24 : tensor<1x2x2xi32, #blocked2> loc(#loc191)
    %89 = "tt.reduce"(%88) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc193 at #loc17)), %arg5: i32 loc(callsite(#loc193 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc248)
      tt.reduce.return %168 : i32 loc(#loc238)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc238)
    %90 = tt.expand_dims %89 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc195)
    %91 = tt.broadcast %90 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc196)
    %92 = tt.reshape %87 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc197)
    %93 = tt.reshape %91 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc198)
    %94 = tt.bitcast %92 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc199)
    %95 = tt.bitcast %93 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc200)
    %96 = tt.reshape %79 : tensor<1x4xi16, #blocked> -> tensor<1x2x2xi16, #blocked2> loc(#loc201)
    %97 = tt.broadcast %46 : tensor<1x2x1xi16, #blocked2> -> tensor<1x2x2xi16, #blocked2> loc(#loc203)
    %98 = arith.muli %96, %97 : tensor<1x2x2xi16, #blocked2> loc(#loc203)
    %99 = "tt.reduce"(%98) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc205 at #loc17)), %arg5: i16 loc(callsite(#loc205 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc249)
      tt.reduce.return %168 : i16 loc(#loc241)
    }) : (tensor<1x2x2xi16, #blocked2>) -> tensor<1x2xi16, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc241)
    %100 = tt.expand_dims %99 {axis = 1 : i32} : tensor<1x2xi16, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi16, #blocked2> loc(#loc207)
    %101 = tt.broadcast %100 : tensor<1x1x2xi16, #blocked2> -> tensor<1x2x2xi16, #blocked2> loc(#loc208)
    %102 = tt.broadcast %53 : tensor<1x2x1xi16, #blocked2> -> tensor<1x2x2xi16, #blocked2> loc(#loc210)
    %103 = arith.muli %96, %102 : tensor<1x2x2xi16, #blocked2> loc(#loc210)
    %104 = "tt.reduce"(%103) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc212 at #loc17)), %arg5: i16 loc(callsite(#loc212 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc250)
      tt.reduce.return %168 : i16 loc(#loc244)
    }) : (tensor<1x2x2xi16, #blocked2>) -> tensor<1x2xi16, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc244)
    %105 = tt.expand_dims %104 {axis = 1 : i32} : tensor<1x2xi16, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi16, #blocked2> loc(#loc214)
    %106 = tt.broadcast %105 : tensor<1x1x2xi16, #blocked2> -> tensor<1x2x2xi16, #blocked2> loc(#loc215)
    %107 = tt.reshape %101 : tensor<1x2x2xi16, #blocked2> -> tensor<1x4xi16, #blocked> loc(#loc216)
    %108 = tt.reshape %106 : tensor<1x2x2xi16, #blocked2> -> tensor<1x4xi16, #blocked> loc(#loc217)
    %109 = arith.extsi %107 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc218)
    %110 = arith.cmpi slt, %109, %cst : tensor<1x4xi32, #blocked> loc(#loc218)
    %111 = arith.extsi %108 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc219)
    %112 = arith.cmpi slt, %111, %cst : tensor<1x4xi32, #blocked> loc(#loc219)
    %113 = tt.bitcast %80 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc220)
    %114 = arith.cmpf ogt, %94, %95 : tensor<1x4xf32, #blocked> loc(#loc221)
    %115 = arith.cmpi ugt, %112, %110 : tensor<1x4xi1, #blocked> loc(#loc222)
    %116 = arith.cmpi eq, %112, %110 : tensor<1x4xi1, #blocked> loc(#loc223)
    %117 = arith.andi %116, %114 : tensor<1x4xi1, #blocked> loc(#loc224)
    %118 = arith.ori %115, %117 : tensor<1x4xi1, #blocked> loc(#loc225)
    %119 = arith.xori %92, %93 : tensor<1x4xi32, #blocked> loc(#loc228)
    %120 = arith.select %118, %119, %cst_2 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc229)
    %121 = arith.xori %113, %120 : tensor<1x4xi32, #blocked> loc(#loc230)
    %122 = arith.xori %107, %108 : tensor<1x4xi16, #blocked> loc(#loc231)
    %123 = arith.select %118, %122, %cst_3 : tensor<1x4xi1, #blocked>, tensor<1x4xi16, #blocked> loc(#loc232)
    %124 = arith.xori %79, %123 : tensor<1x4xi16, #blocked> loc(#loc233)
    %125 = tt.bitcast %121 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc234)
    %126 = tt.reshape %125 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc182)
    %127 = tt.bitcast %126 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc183)
    %128 = arith.muli %127, %30 : tensor<2x2x1xi32, #blocked1> loc(#loc185)
    %129 = "tt.reduce"(%128) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc187 at #loc17)), %arg5: i32 loc(callsite(#loc187 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc247)
      tt.reduce.return %168 : i32 loc(#loc235)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc235)
    %130 = tt.expand_dims %129 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc189)
    %131 = tt.broadcast %130 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc190)
    %132 = arith.muli %127, %35 : tensor<2x2x1xi32, #blocked1> loc(#loc191)
    %133 = "tt.reduce"(%132) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc193 at #loc17)), %arg5: i32 loc(callsite(#loc193 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i32 loc(#loc248)
      tt.reduce.return %168 : i32 loc(#loc238)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc238)
    %134 = tt.expand_dims %133 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc195)
    %135 = tt.broadcast %134 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc196)
    %136 = tt.reshape %131 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc197)
    %137 = tt.reshape %135 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc198)
    %138 = tt.bitcast %136 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc199)
    %139 = tt.bitcast %137 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc200)
    %140 = tt.reshape %124 : tensor<1x4xi16, #blocked> -> tensor<2x2x1xi16, #blocked1> loc(#loc201)
    %141 = arith.muli %140, %47 : tensor<2x2x1xi16, #blocked1> loc(#loc203)
    %142 = "tt.reduce"(%141) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc205 at #loc17)), %arg5: i16 loc(callsite(#loc205 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc249)
      tt.reduce.return %168 : i16 loc(#loc241)
    }) : (tensor<2x2x1xi16, #blocked1>) -> tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc241)
    %143 = tt.expand_dims %142 {axis = 1 : i32} : tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi16, #blocked1> loc(#loc207)
    %144 = tt.broadcast %143 : tensor<2x1x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc208)
    %145 = arith.muli %140, %54 : tensor<2x2x1xi16, #blocked1> loc(#loc210)
    %146 = "tt.reduce"(%145) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i16 loc(callsite(#loc212 at #loc17)), %arg5: i16 loc(callsite(#loc212 at #loc17))):
      %168 = arith.addi %arg4, %arg5 : i16 loc(#loc250)
      tt.reduce.return %168 : i16 loc(#loc244)
    }) : (tensor<2x2x1xi16, #blocked1>) -> tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc244)
    %147 = tt.expand_dims %146 {axis = 1 : i32} : tensor<2x1xi16, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi16, #blocked1> loc(#loc214)
    %148 = tt.broadcast %147 : tensor<2x1x1xi16, #blocked1> -> tensor<2x2x1xi16, #blocked1> loc(#loc215)
    %149 = tt.reshape %144 : tensor<2x2x1xi16, #blocked1> -> tensor<1x4xi16, #blocked> loc(#loc216)
    %150 = tt.reshape %148 : tensor<2x2x1xi16, #blocked1> -> tensor<1x4xi16, #blocked> loc(#loc217)
    %151 = arith.extsi %149 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc218)
    %152 = arith.cmpi slt, %151, %cst : tensor<1x4xi32, #blocked> loc(#loc218)
    %153 = arith.extsi %150 : tensor<1x4xi16, #blocked> to tensor<1x4xi32, #blocked> loc(#loc219)
    %154 = arith.cmpi slt, %153, %cst : tensor<1x4xi32, #blocked> loc(#loc219)
    %155 = arith.cmpf ogt, %138, %139 : tensor<1x4xf32, #blocked> loc(#loc221)
    %156 = arith.cmpi ugt, %154, %152 : tensor<1x4xi1, #blocked> loc(#loc222)
    %157 = arith.cmpi eq, %154, %152 : tensor<1x4xi1, #blocked> loc(#loc223)
    %158 = arith.andi %157, %155 : tensor<1x4xi1, #blocked> loc(#loc224)
    %159 = arith.ori %156, %158 : tensor<1x4xi1, #blocked> loc(#loc225)
    %160 = arith.xori %149, %150 : tensor<1x4xi16, #blocked> loc(#loc231)
    %161 = arith.select %159, %160, %cst_3 : tensor<1x4xi1, #blocked>, tensor<1x4xi16, #blocked> loc(#loc232)
    %162 = arith.xori %124, %161 : tensor<1x4xi16, #blocked> loc(#loc233)
    %163 = arith.muli %0, %c3_i32 : i32 loc(#loc68)
    %164 = tt.splat %163 : i32 -> tensor<1x4xi32, #blocked> loc(#loc69)
    %165 = arith.addi %3, %164 : tensor<1x4xi32, #blocked> loc(#loc69)
    %166 = tt.splat %arg1 : !tt.ptr<i16> -> tensor<1x4x!tt.ptr<i16>, #blocked> loc(#loc70)
    %167 = tt.addptr %166, %165 : tensor<1x4x!tt.ptr<i16>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc70)
    tt.store %167, %162, %15 : tensor<1x4x!tt.ptr<i16>, #blocked> loc(#loc71)
    tt.return loc(#loc72)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":23:28)
#loc3 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":25:21)
#loc4 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":26:34)
#loc5 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":28:21)
#loc6 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":30:19)
#loc7 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":31:19)
#loc8 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:35)
#loc9 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:43)
#loc10 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:40)
#loc11 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:30)
#loc12 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:56)
#loc13 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":33:48)
#loc14 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":35:19)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":514:29)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:36)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:23)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:53)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":516:66)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:37)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:23)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:54)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":519:67)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":521:36)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":522:38)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":529:37)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":530:39)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":538:22)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":544:31)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:29)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:48)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":545:8)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:48)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:59)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":549:22)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc68 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:32)
#loc69 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:30)
#loc70 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:25)
#loc71 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:43)
#loc72 = loc("inductor_cache/mf/cmfpbriu5l7n7aqripryac7hspwe6imvcqnmw6qqwc42q7q6sqkw.py":39:4)
#loc73 = loc(callsite(#loc15 at #loc16))
#loc74 = loc(callsite(#loc18 at #loc16))
#loc75 = loc(callsite(#loc19 at #loc16))
#loc76 = loc(callsite(#loc20 at #loc21))
#loc77 = loc(callsite(#loc22 at #loc21))
#loc78 = loc(callsite(#loc23 at #loc21))
#loc79 = loc(callsite(#loc24 at #loc21))
#loc80 = loc(callsite(#loc25 at #loc26))
#loc82 = loc(callsite(#loc27 at #loc25))
#loc83 = loc(callsite(#loc28 at #loc21))
#loc84 = loc(callsite(#loc29 at #loc21))
#loc85 = loc(callsite(#loc30 at #loc21))
#loc86 = loc(callsite(#loc25 at #loc31))
#loc88 = loc(callsite(#loc32 at #loc21))
#loc89 = loc(callsite(#loc33 at #loc21))
#loc90 = loc(callsite(#loc34 at #loc21))
#loc91 = loc(callsite(#loc35 at #loc21))
#loc92 = loc(callsite(#loc36 at #loc21))
#loc93 = loc(callsite(#loc37 at #loc21))
#loc94 = loc(callsite(#loc38 at #loc21))
#loc95 = loc(callsite(#loc39 at #loc21))
#loc96 = loc(callsite(#loc40 at #loc21))
#loc97 = loc(callsite(#loc25 at #loc41))
#loc99 = loc(callsite(#loc42 at #loc21))
#loc100 = loc(callsite(#loc43 at #loc21))
#loc101 = loc(callsite(#loc44 at #loc21))
#loc102 = loc(callsite(#loc45 at #loc21))
#loc103 = loc(callsite(#loc25 at #loc46))
#loc105 = loc(callsite(#loc47 at #loc21))
#loc106 = loc(callsite(#loc48 at #loc21))
#loc107 = loc(callsite(#loc49 at #loc21))
#loc108 = loc(callsite(#loc50 at #loc21))
#loc109 = loc(callsite(#loc51 at #loc21))
#loc110 = loc(callsite(#loc52 at #loc21))
#loc111 = loc(callsite(#loc53 at #loc21))
#loc112 = loc(callsite(#loc54 at #loc21))
#loc113 = loc(callsite(#loc55 at #loc21))
#loc114 = loc(callsite(#loc56 at #loc21))
#loc115 = loc(callsite(#loc57 at #loc21))
#loc116 = loc(callsite(#loc58 at #loc21))
#loc117 = loc(callsite(#loc59 at #loc21))
#loc118 = loc(callsite(#loc60 at #loc21))
#loc119 = loc(callsite(#loc61 at #loc21))
#loc120 = loc(callsite(#loc62 at #loc21))
#loc121 = loc(callsite(#loc63 at #loc21))
#loc122 = loc(callsite(#loc64 at #loc21))
#loc123 = loc(callsite(#loc65 at #loc21))
#loc124 = loc(callsite(#loc66 at #loc21))
#loc125 = loc(callsite(#loc67 at #loc21))
#loc126 = loc(callsite(#loc73 at #loc17))
#loc127 = loc(callsite(#loc74 at #loc17))
#loc128 = loc(callsite(#loc75 at #loc17))
#loc129 = loc(callsite(#loc76 at #loc16))
#loc130 = loc(callsite(#loc77 at #loc16))
#loc131 = loc(callsite(#loc78 at #loc16))
#loc132 = loc(callsite(#loc79 at #loc16))
#loc133 = loc(callsite(#loc80 at #loc21))
#loc135 = loc(callsite(#loc82 at #loc26))
#loc136 = loc(callsite(#loc83 at #loc16))
#loc137 = loc(callsite(#loc84 at #loc16))
#loc138 = loc(callsite(#loc85 at #loc16))
#loc139 = loc(callsite(#loc86 at #loc21))
#loc141 = loc(callsite(#loc82 at #loc31))
#loc142 = loc(callsite(#loc88 at #loc16))
#loc143 = loc(callsite(#loc89 at #loc16))
#loc144 = loc(callsite(#loc90 at #loc16))
#loc145 = loc(callsite(#loc91 at #loc16))
#loc146 = loc(callsite(#loc92 at #loc16))
#loc147 = loc(callsite(#loc93 at #loc16))
#loc148 = loc(callsite(#loc94 at #loc16))
#loc149 = loc(callsite(#loc95 at #loc16))
#loc150 = loc(callsite(#loc96 at #loc16))
#loc151 = loc(callsite(#loc97 at #loc21))
#loc153 = loc(callsite(#loc82 at #loc41))
#loc154 = loc(callsite(#loc99 at #loc16))
#loc155 = loc(callsite(#loc100 at #loc16))
#loc156 = loc(callsite(#loc101 at #loc16))
#loc157 = loc(callsite(#loc102 at #loc16))
#loc158 = loc(callsite(#loc103 at #loc21))
#loc160 = loc(callsite(#loc82 at #loc46))
#loc161 = loc(callsite(#loc105 at #loc16))
#loc162 = loc(callsite(#loc106 at #loc16))
#loc163 = loc(callsite(#loc107 at #loc16))
#loc164 = loc(callsite(#loc108 at #loc16))
#loc165 = loc(callsite(#loc109 at #loc16))
#loc166 = loc(callsite(#loc110 at #loc16))
#loc167 = loc(callsite(#loc111 at #loc16))
#loc168 = loc(callsite(#loc112 at #loc16))
#loc169 = loc(callsite(#loc113 at #loc16))
#loc170 = loc(callsite(#loc114 at #loc16))
#loc171 = loc(callsite(#loc115 at #loc16))
#loc172 = loc(callsite(#loc116 at #loc16))
#loc173 = loc(callsite(#loc117 at #loc16))
#loc174 = loc(callsite(#loc118 at #loc16))
#loc175 = loc(callsite(#loc119 at #loc16))
#loc176 = loc(callsite(#loc120 at #loc16))
#loc177 = loc(callsite(#loc121 at #loc16))
#loc178 = loc(callsite(#loc122 at #loc16))
#loc179 = loc(callsite(#loc123 at #loc16))
#loc180 = loc(callsite(#loc124 at #loc16))
#loc181 = loc(callsite(#loc125 at #loc16))
#loc182 = loc(callsite(#loc129 at #loc17))
#loc183 = loc(callsite(#loc130 at #loc17))
#loc184 = loc(callsite(#loc131 at #loc17))
#loc185 = loc(callsite(#loc132 at #loc17))
#loc186 = loc(callsite(#loc133 at #loc16))
#loc188 = loc(callsite(#loc135 at #loc21))
#loc189 = loc(callsite(#loc136 at #loc17))
#loc190 = loc(callsite(#loc137 at #loc17))
#loc191 = loc(callsite(#loc138 at #loc17))
#loc192 = loc(callsite(#loc139 at #loc16))
#loc194 = loc(callsite(#loc141 at #loc21))
#loc195 = loc(callsite(#loc142 at #loc17))
#loc196 = loc(callsite(#loc143 at #loc17))
#loc197 = loc(callsite(#loc144 at #loc17))
#loc198 = loc(callsite(#loc145 at #loc17))
#loc199 = loc(callsite(#loc146 at #loc17))
#loc200 = loc(callsite(#loc147 at #loc17))
#loc201 = loc(callsite(#loc148 at #loc17))
#loc202 = loc(callsite(#loc149 at #loc17))
#loc203 = loc(callsite(#loc150 at #loc17))
#loc204 = loc(callsite(#loc151 at #loc16))
#loc206 = loc(callsite(#loc153 at #loc21))
#loc207 = loc(callsite(#loc154 at #loc17))
#loc208 = loc(callsite(#loc155 at #loc17))
#loc209 = loc(callsite(#loc156 at #loc17))
#loc210 = loc(callsite(#loc157 at #loc17))
#loc211 = loc(callsite(#loc158 at #loc16))
#loc213 = loc(callsite(#loc160 at #loc21))
#loc214 = loc(callsite(#loc161 at #loc17))
#loc215 = loc(callsite(#loc162 at #loc17))
#loc216 = loc(callsite(#loc163 at #loc17))
#loc217 = loc(callsite(#loc164 at #loc17))
#loc218 = loc(callsite(#loc165 at #loc17))
#loc219 = loc(callsite(#loc166 at #loc17))
#loc220 = loc(callsite(#loc167 at #loc17))
#loc221 = loc(callsite(#loc168 at #loc17))
#loc222 = loc(callsite(#loc169 at #loc17))
#loc223 = loc(callsite(#loc170 at #loc17))
#loc224 = loc(callsite(#loc171 at #loc17))
#loc225 = loc(callsite(#loc172 at #loc17))
#loc226 = loc(callsite(#loc173 at #loc17))
#loc227 = loc(callsite(#loc174 at #loc17))
#loc228 = loc(callsite(#loc175 at #loc17))
#loc229 = loc(callsite(#loc176 at #loc17))
#loc230 = loc(callsite(#loc177 at #loc17))
#loc231 = loc(callsite(#loc178 at #loc17))
#loc232 = loc(callsite(#loc179 at #loc17))
#loc233 = loc(callsite(#loc180 at #loc17))
#loc234 = loc(callsite(#loc181 at #loc17))
#loc235 = loc(callsite(#loc186 at #loc17))
#loc237 = loc(callsite(#loc188 at #loc16))
#loc238 = loc(callsite(#loc192 at #loc17))
#loc240 = loc(callsite(#loc194 at #loc16))
#loc241 = loc(callsite(#loc204 at #loc17))
#loc243 = loc(callsite(#loc206 at #loc16))
#loc244 = loc(callsite(#loc211 at #loc17))
#loc246 = loc(callsite(#loc213 at #loc16))
#loc247 = loc(callsite(#loc237 at #loc17))
#loc248 = loc(callsite(#loc240 at #loc17))
#loc249 = loc(callsite(#loc243 at #loc17))
#loc250 = loc(callsite(#loc246 at #loc17))
