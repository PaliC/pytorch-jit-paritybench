; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_native_layer_norm_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %10 = shl i32 %9, 5, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = lshr i32 %11, 2, !dbg !12
  %13 = and i32 %12, 31, !dbg !12
  %14 = and i32 %11, 3, !dbg !12
  %15 = and i32 %11, 31, !dbg !12
  %16 = or disjoint i32 %10, %13, !dbg !13
  %17 = or disjoint i32 %10, %15, !dbg !13
  %18 = icmp slt i32 %16, 64, !dbg !14
  %19 = icmp slt i32 %17, 64, !dbg !14
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %21 = shl i32 %20, 2, !dbg !16
  %22 = lshr i32 %11, 5, !dbg !17
  %23 = and i32 %22, 3, !dbg !17
  %24 = or disjoint i32 %21, %14, !dbg !18
  %25 = or disjoint i32 %21, %23, !dbg !18
  %26 = icmp slt i32 %24, 4, !dbg !19
  %27 = icmp slt i32 %25, 4, !dbg !19
  %28 = sdiv i32 %16, 16, !dbg !20
  %.frozen = freeze i32 %17, !dbg !20
  %29 = sdiv i32 %.frozen, 16, !dbg !20
  %30 = mul i32 %29, 16, !dbg !21
  %.decomposed = sub i32 %.frozen, %30, !dbg !21
  %.frozen4 = freeze i32 %16, !dbg !22
  %31 = sdiv i32 %.frozen4, 4, !dbg !22
  %32 = mul i32 %31, 4, !dbg !23
  %.decomposed5 = sub i32 %.frozen4, %32, !dbg !23
  %33 = srem i32 %31, 4, !dbg !24
  %34 = shl i32 %25, 4, !dbg !25
  %35 = add i32 %34, %.decomposed, !dbg !26
  %36 = shl i32 %28, 6, !dbg !27
  %37 = shl i32 %29, 6, !dbg !27
  %38 = add i32 %35, %37, !dbg !28
  %39 = sext i32 %38 to i64, !dbg !29
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !29
  %41 = and i1 %18, %26, !dbg !30
  %42 = and i1 %19, %27, !dbg !30
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %42) #2, !dbg !31
  %44 = bitcast i32 %43 to float, !dbg !31
  %45 = sext i32 %17 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %19) #2, !dbg !33
  %48 = bitcast i32 %47 to float, !dbg !33
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !34
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %19) #2, !dbg !35
  %51 = bitcast i32 %50 to float, !dbg !35
  %52 = sext i32 %25 to i64, !dbg !36
  %53 = getelementptr float, ptr addrspace(1) %3, i64 %52, !dbg !36
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %27) #2, !dbg !37
  %55 = bitcast i32 %54 to float, !dbg !37
  %56 = getelementptr float, ptr addrspace(1) %4, i64 %52, !dbg !38
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %27) #2, !dbg !39
  %58 = bitcast i32 %57 to float, !dbg !39
  %59 = fsub float %44, %48, !dbg !40
  %60 = fmul float %59, %51, !dbg !41
  %61 = fmul float %60, %55, !dbg !42
  %62 = fadd float %61, %58, !dbg !43
  %63 = shl nsw i32 %33, 2, !dbg !44
  %64 = shl nsw i32 %.decomposed5, 4, !dbg !45
  %65 = add i32 %64, %24, !dbg !46
  %66 = add i32 %65, %36, !dbg !47
  %67 = add i32 %66, %63, !dbg !48
  %68 = sext i32 %67 to i64, !dbg !49
  %69 = getelementptr float, ptr addrspace(1) %5, i64 %68, !dbg !49
  %70 = shl i32 %11, 2, !dbg !50
  %71 = and i32 %70, 124, !dbg !50
  %72 = or disjoint i32 %71, %23, !dbg !50
  %73 = and i32 %11, 127, !dbg !50
  %74 = lshr exact i32 %71, 2, !dbg !50
  %75 = add nuw nsw i32 %72, %74, !dbg !50
  %76 = zext nneg i32 %75 to i64, !dbg !50
  %77 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %76, !dbg !50
  %78 = bitcast float %62 to <1 x i32>, !dbg !50
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %77, <1 x i32> %78, i1 true) #2, !dbg !50
  tail call void @llvm.nvvm.barrier0(), !dbg !50
  %79 = lshr i32 %73, 2, !dbg !50
  %80 = add nuw nsw i32 %79, %73, !dbg !50
  %81 = zext nneg i32 %80 to i64, !dbg !50
  %82 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %81, !dbg !50
  %83 = load i32, ptr addrspace(3) %82, align 4, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %83, ptr addrspace(1) %69, i1 %41) #2, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5b3bm6eyqxppc7afs5qzkwnk3rjtxthp2zrevfm64a6mpbf7wpm.py", directory: "inductor_cache/5b")
!4 = !{ptr @triton_poi_fused_native_layer_norm_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_native_layer_norm_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_native_layer_norm_1", linkageName: "triton_poi_fused_native_layer_norm_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 33, column: 21, scope: !7)
!23 = !DILocation(line: 32, column: 19, scope: !7)
!24 = !DILocation(line: 33, column: 26, scope: !7)
!25 = !DILocation(line: 34, column: 38, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 46, scope: !7)
!28 = !DILocation(line: 34, column: 43, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 59, scope: !7)
!31 = !DILocation(line: 34, column: 51, scope: !7)
!32 = !DILocation(line: 35, column: 30, scope: !7)
!33 = !DILocation(line: 35, column: 35, scope: !7)
!34 = !DILocation(line: 36, column: 30, scope: !7)
!35 = !DILocation(line: 36, column: 35, scope: !7)
!36 = !DILocation(line: 37, column: 30, scope: !7)
!37 = !DILocation(line: 37, column: 35, scope: !7)
!38 = !DILocation(line: 38, column: 30, scope: !7)
!39 = !DILocation(line: 38, column: 35, scope: !7)
!40 = !DILocation(line: 39, column: 18, scope: !7)
!41 = !DILocation(line: 40, column: 18, scope: !7)
!42 = !DILocation(line: 41, column: 18, scope: !7)
!43 = !DILocation(line: 42, column: 18, scope: !7)
!44 = !DILocation(line: 43, column: 32, scope: !7)
!45 = !DILocation(line: 43, column: 40, scope: !7)
!46 = !DILocation(line: 43, column: 30, scope: !7)
!47 = !DILocation(line: 43, column: 37, scope: !7)
!48 = !DILocation(line: 43, column: 45, scope: !7)
!49 = !DILocation(line: 43, column: 25, scope: !7)
!50 = !DILocation(line: 43, column: 59, scope: !7)
!51 = !DILocation(line: 43, column: 4, scope: !7)
