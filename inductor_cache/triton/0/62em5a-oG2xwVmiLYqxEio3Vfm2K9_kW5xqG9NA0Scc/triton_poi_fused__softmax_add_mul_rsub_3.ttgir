#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__softmax_add_mul_rsub_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-1.000000e+30> : tensor<64xf32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = arith.muli %4, %cst_3 : tensor<64xi32, #blocked> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc9)
    %9 = tt.addptr %8, %7 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc9)
    %10 = tt.load %9, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = arith.muli %6, %cst_3 : tensor<64xi32, #blocked> loc(#loc11)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc12)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %15 = arith.addi %7, %cst_4 : tensor<64xi32, #blocked> loc(#loc14)
    %16 = tt.addptr %8, %15 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.addi %11, %cst_4 : tensor<64xi32, #blocked> loc(#loc17)
    %19 = tt.addptr %12, %18 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc18)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = arith.addi %7, %cst_5 : tensor<64xi32, #blocked> loc(#loc20)
    %22 = tt.addptr %8, %21 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc21)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc22)
    %24 = arith.addi %11, %cst_5 : tensor<64xi32, #blocked> loc(#loc23)
    %25 = tt.addptr %12, %24 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc24)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc25)
    %27 = arith.addi %7, %cst_6 : tensor<64xi32, #blocked> loc(#loc26)
    %28 = tt.addptr %8, %27 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc27)
    %29 = tt.load %28, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc28)
    %30 = arith.addi %11, %cst_6 : tensor<64xi32, #blocked> loc(#loc29)
    %31 = tt.addptr %12, %30 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc30)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc31)
    %33 = arith.mulf %10, %14 : tensor<64xf32, #blocked> loc(#loc32)
    %34 = arith.subf %cst, %14 : tensor<64xf32, #blocked> loc(#loc33)
    %35 = arith.mulf %34, %cst_0 : tensor<64xf32, #blocked> loc(#loc34)
    %36 = arith.addf %33, %35 : tensor<64xf32, #blocked> loc(#loc35)
    %37 = arith.mulf %17, %20 : tensor<64xf32, #blocked> loc(#loc36)
    %38 = arith.subf %cst, %20 : tensor<64xf32, #blocked> loc(#loc37)
    %39 = arith.mulf %38, %cst_0 : tensor<64xf32, #blocked> loc(#loc38)
    %40 = arith.addf %37, %39 : tensor<64xf32, #blocked> loc(#loc39)
    %41 = arith.cmpf ogt, %36, %40 : tensor<64xf32, #blocked> loc(#loc71)
    %42 = arith.cmpf une, %36, %36 : tensor<64xf32, #blocked> loc(#loc72)
    %43 = arith.ori %41, %42 : tensor<64xi1, #blocked> loc(#loc73)
    %44 = arith.select %43, %36, %40 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc74)
    %45 = arith.mulf %23, %26 : tensor<64xf32, #blocked> loc(#loc45)
    %46 = arith.subf %cst, %26 : tensor<64xf32, #blocked> loc(#loc46)
    %47 = arith.mulf %46, %cst_0 : tensor<64xf32, #blocked> loc(#loc47)
    %48 = arith.addf %45, %47 : tensor<64xf32, #blocked> loc(#loc48)
    %49 = arith.cmpf ogt, %44, %48 : tensor<64xf32, #blocked> loc(#loc75)
    %50 = arith.cmpf une, %44, %44 : tensor<64xf32, #blocked> loc(#loc76)
    %51 = arith.ori %49, %50 : tensor<64xi1, #blocked> loc(#loc77)
    %52 = arith.select %51, %44, %48 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc78)
    %53 = arith.mulf %29, %32 : tensor<64xf32, #blocked> loc(#loc50)
    %54 = arith.subf %cst, %32 : tensor<64xf32, #blocked> loc(#loc51)
    %55 = arith.mulf %54, %cst_0 : tensor<64xf32, #blocked> loc(#loc52)
    %56 = arith.addf %53, %55 : tensor<64xf32, #blocked> loc(#loc53)
    %57 = arith.cmpf ogt, %52, %56 : tensor<64xf32, #blocked> loc(#loc79)
    %58 = arith.cmpf une, %52, %52 : tensor<64xf32, #blocked> loc(#loc80)
    %59 = arith.ori %57, %58 : tensor<64xi1, #blocked> loc(#loc81)
    %60 = arith.select %59, %52, %56 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc82)
    %61 = arith.subf %36, %60 : tensor<64xf32, #blocked> loc(#loc55)
    %62 = math.exp %61 : tensor<64xf32, #blocked> loc(#loc56)
    %63 = arith.subf %40, %60 : tensor<64xf32, #blocked> loc(#loc57)
    %64 = math.exp %63 : tensor<64xf32, #blocked> loc(#loc58)
    %65 = arith.addf %62, %64 : tensor<64xf32, #blocked> loc(#loc59)
    %66 = arith.subf %48, %60 : tensor<64xf32, #blocked> loc(#loc60)
    %67 = math.exp %66 : tensor<64xf32, #blocked> loc(#loc61)
    %68 = arith.addf %65, %67 : tensor<64xf32, #blocked> loc(#loc62)
    %69 = arith.subf %56, %60 : tensor<64xf32, #blocked> loc(#loc63)
    %70 = math.exp %69 : tensor<64xf32, #blocked> loc(#loc64)
    %71 = arith.addf %68, %70 : tensor<64xf32, #blocked> loc(#loc65)
    %72 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc66)
    %73 = tt.addptr %72, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc66)
    tt.store %73, %60, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc67)
    %74 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc68)
    %75 = tt.addptr %74, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc68)
    tt.store %75, %71, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":21:28)
#loc3 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":21:33)
#loc4 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":22:36)
#loc5 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":22:23)
#loc6 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":23:21)
#loc7 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":25:19)
#loc8 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":26:32)
#loc9 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":26:30)
#loc10 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":26:37)
#loc11 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":27:32)
#loc12 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":27:30)
#loc13 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":27:37)
#loc14 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":28:34)
#loc15 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":28:30)
#loc16 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":28:41)
#loc17 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":29:34)
#loc18 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":29:30)
#loc19 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":29:41)
#loc20 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":30:35)
#loc21 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":30:31)
#loc22 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":30:42)
#loc23 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":31:35)
#loc24 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":31:31)
#loc25 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":31:42)
#loc26 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":32:35)
#loc27 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":32:31)
#loc28 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":32:42)
#loc29 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":33:35)
#loc30 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":33:31)
#loc31 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":33:42)
#loc32 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":34:18)
#loc33 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":36:18)
#loc34 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":38:18)
#loc35 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":39:18)
#loc36 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":40:19)
#loc37 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":41:19)
#loc38 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":42:20)
#loc39 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":43:20)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":44:41)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":45:20)
#loc46 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":46:19)
#loc47 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":47:20)
#loc48 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":48:20)
#loc49 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":49:42)
#loc50 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":50:20)
#loc51 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":51:19)
#loc52 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":52:20)
#loc53 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":53:20)
#loc54 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":54:42)
#loc55 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":55:19)
#loc56 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":56:24)
#loc57 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":57:20)
#loc58 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":58:24)
#loc59 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":59:20)
#loc60 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":60:20)
#loc61 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":61:24)
#loc62 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":62:20)
#loc63 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":63:20)
#loc64 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":64:24)
#loc65 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":65:20)
#loc66 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":66:25)
#loc67 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":66:37)
#loc68 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":67:25)
#loc69 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":67:37)
#loc70 = loc("inductor_cache/4g/c4gewrjketnkm4oyk2vafdqqqbfrdoxc2kvf72wkbs5sdoxhb5i4.py":67:4)
#loc71 = loc(callsite(#loc40 at #loc41))
#loc72 = loc(callsite(#loc42 at #loc41))
#loc73 = loc(callsite(#loc43 at #loc41))
#loc74 = loc(callsite(#loc44 at #loc41))
#loc75 = loc(callsite(#loc40 at #loc49))
#loc76 = loc(callsite(#loc42 at #loc49))
#loc77 = loc(callsite(#loc43 at #loc49))
#loc78 = loc(callsite(#loc44 at #loc49))
#loc79 = loc(callsite(#loc40 at #loc54))
#loc80 = loc(callsite(#loc42 at #loc54))
#loc81 = loc(callsite(#loc43 at #loc54))
#loc82 = loc(callsite(#loc44 at #loc54))
