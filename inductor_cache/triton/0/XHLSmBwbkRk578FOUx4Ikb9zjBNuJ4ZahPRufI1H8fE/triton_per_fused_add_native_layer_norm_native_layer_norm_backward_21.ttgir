#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0)
#loc1 = loc(unknown)
#loc47 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":49:26)
#loc54 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":57:26)
#loc72 = loc(callsite(#loc1 at #loc47))
#loc75 = loc(callsite(#loc1 at #loc54))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_21(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.920000e+02> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x256xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<192> : tensor<1x256xi32, #blocked> loc(#loc1)
    %c12288_i32 = arith.constant 12288 : i32 loc(#loc1)
    %c6144_i32 = arith.constant 6144 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c192_i32 = arith.constant 192 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<1.920000e+02> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<0.00520833349> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x256xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst_1 : tensor<1x256xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %0, %c8_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c8_i32 : i32 loc(#loc7)
    %7 = arith.remsi %6, %c8_i32 : i32 loc(#loc8)
    %8 = arith.divsi %0, %c64_i32 : i32 loc(#loc9)
    %9 = arith.muli %0, %c192_i32 : i32 loc(#loc10)
    %10 = tt.splat %9 : i32 -> tensor<1x256xi32, #blocked> loc(#loc11)
    %11 = arith.addi %3, %10 : tensor<1x256xi32, #blocked> loc(#loc11)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc12)
    %14 = tt.splat %1 : i1 -> tensor<1x256xi1, #blocked> loc(#loc13)
    %15 = arith.andi %4, %14 : tensor<1x256xi1, #blocked> loc(#loc13)
    %16 = tt.load %13, %15, %cst_0 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %18 = tt.addptr %17, %11 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc15)
    %19 = tt.load %18, %15, %cst_0 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %21 = tt.addptr %20, %3 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc17)
    %22 = tt.load %21, %4, %cst_0 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %23 = arith.remsi %5, %c4_i32 : i32 loc(#loc19)
    %24 = arith.muli %23, %c192_i32 : i32 loc(#loc20)
    %25 = tt.splat %24 : i32 -> tensor<1x256xi32, #blocked> loc(#loc21)
    %26 = arith.addi %3, %25 : tensor<1x256xi32, #blocked> loc(#loc21)
    %27 = arith.remsi %7, %c4_i32 : i32 loc(#loc22)
    %28 = arith.muli %27, %c768_i32 : i32 loc(#loc23)
    %29 = tt.splat %28 : i32 -> tensor<1x256xi32, #blocked> loc(#loc24)
    %30 = arith.addi %26, %29 : tensor<1x256xi32, #blocked> loc(#loc24)
    %31 = arith.divsi %5, %c4_i32 : i32 loc(#loc25)
    %32 = arith.muli %31, %c3072_i32 : i32 loc(#loc26)
    %33 = tt.splat %32 : i32 -> tensor<1x256xi32, #blocked> loc(#loc27)
    %34 = arith.addi %30, %33 : tensor<1x256xi32, #blocked> loc(#loc27)
    %35 = arith.divsi %7, %c4_i32 : i32 loc(#loc28)
    %36 = arith.muli %35, %c6144_i32 : i32 loc(#loc29)
    %37 = tt.splat %36 : i32 -> tensor<1x256xi32, #blocked> loc(#loc30)
    %38 = arith.addi %34, %37 : tensor<1x256xi32, #blocked> loc(#loc30)
    %39 = arith.muli %8, %c12288_i32 : i32 loc(#loc31)
    %40 = tt.splat %39 : i32 -> tensor<1x256xi32, #blocked> loc(#loc32)
    %41 = arith.addi %38, %40 : tensor<1x256xi32, #blocked> loc(#loc32)
    %42 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc33)
    %43 = tt.addptr %42, %41 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc33)
    %44 = tt.load %43, %15, %cst_0 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc34)
    %45 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %46 = tt.addptr %45, %3 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc35)
    %47 = tt.load %46, %4, %cst_0 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc36)
    %48 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc37)
    %49 = tt.addptr %48, %3 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc37)
    %50 = tt.load %49, %4, %cst_0 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %51 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %52 = tt.addptr %51, %3 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc39)
    %53 = tt.load %52, %4, %cst_0 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc40)
    %54 = arith.addf %19, %22 : tensor<1x256xf32, #blocked> loc(#loc41)
    %55 = arith.addf %16, %54 : tensor<1x256xf32, #blocked> loc(#loc42)
    %56 = arith.addf %44, %47 : tensor<1x256xf32, #blocked> loc(#loc43)
    %57 = arith.addf %55, %56 : tensor<1x256xf32, #blocked> loc(#loc44)
    %58 = arith.select %15, %57, %cst_0 : tensor<1x256xi1, #blocked>, tensor<1x256xf32, #blocked> loc(#loc45)
    %59 = "tt.reduce"(%58) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc47)), %arg13: f32 loc(callsite(#loc1 at #loc47))):
      %88 = arith.addf %arg12, %arg13 : f32 loc(#loc76)
      tt.reduce.return %88 : f32 loc(#loc71)
    }) : (tensor<1x256xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc71)
    %60 = tt.expand_dims %59 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc49)
    %61 = arith.divf %60, %cst : tensor<1x1xf32, #blocked> loc(#loc50)
    %62 = tt.broadcast %61 : tensor<1x1xf32, #blocked> -> tensor<1x256xf32, #blocked> loc(#loc51)
    %63 = arith.subf %57, %62 : tensor<1x256xf32, #blocked> loc(#loc51)
    %64 = arith.mulf %63, %63 : tensor<1x256xf32, #blocked> loc(#loc52)
    %65 = arith.select %15, %64, %cst_0 : tensor<1x256xi1, #blocked>, tensor<1x256xf32, #blocked> loc(#loc53)
    %66 = "tt.reduce"(%65) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc54)), %arg13: f32 loc(callsite(#loc1 at #loc54))):
      %88 = arith.addf %arg12, %arg13 : f32 loc(#loc77)
      tt.reduce.return %88 : f32 loc(#loc74)
    }) : (tensor<1x256xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc74)
    %67 = triton_gpu.convert_layout %66 {fastmath = #arith.fastmath<none>} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc55)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc56)
    %69 = tt.expand_dims %66 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc56)
    %70 = arith.divf %68, %cst_4 : tensor<1x1xf32, #blocked1> loc(#loc57)
    %71 = arith.divf %69, %cst : tensor<1x1xf32, #blocked> loc(#loc57)
    %72 = arith.addf %70, %cst_3 : tensor<1x1xf32, #blocked1> loc(#loc58)
    %73 = arith.addf %71, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc58)
    %74 = tt.extern_elementwise %72 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked1>) -> tensor<1x1xf32, #blocked1> loc(#loc59)
    %75 = tt.extern_elementwise %73 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc59)
    %76 = tt.broadcast %75 : tensor<1x1xf32, #blocked> -> tensor<1x256xf32, #blocked> loc(#loc60)
    %77 = arith.mulf %63, %76 : tensor<1x256xf32, #blocked> loc(#loc60)
    %78 = arith.mulf %77, %50 : tensor<1x256xf32, #blocked> loc(#loc61)
    %79 = arith.addf %78, %53 : tensor<1x256xf32, #blocked> loc(#loc62)
    %80 = arith.mulf %74, %cst_5 : tensor<1x1xf32, #blocked1> loc(#loc55)
    tt.store %13, %57, %15 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc63)
    %81 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc64)
    %82 = tt.addptr %81, %11 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc64)
    tt.store %82, %77, %15 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc65)
    %83 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc66)
    %84 = tt.addptr %83, %11 : tensor<1x256x!tt.ptr<f32>, #blocked>, tensor<1x256xi32, #blocked> loc(#loc66)
    tt.store %84, %79, %15 : tensor<1x256x!tt.ptr<f32>, #blocked> loc(#loc67)
    %85 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc68)
    %86 = tt.splat %85 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc69)
    %87 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc69)
    tt.store %86, %80, %87 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":23:28)
#loc3 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":25:21)
#loc4 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":26:34)
#loc5 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":28:21)
#loc6 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":31:19)
#loc7 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":32:21)
#loc8 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":32:26)
#loc9 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":33:19)
#loc10 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":34:43)
#loc11 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":34:39)
#loc12 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":34:34)
#loc13 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":34:56)
#loc14 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":34:48)
#loc15 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":35:30)
#loc16 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":35:44)
#loc17 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":36:30)
#loc18 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":36:35)
#loc19 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:46)
#loc20 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:41)
#loc21 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:35)
#loc22 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:63)
#loc23 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:58)
#loc24 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:52)
#loc25 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:81)
#loc26 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:75)
#loc27 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:69)
#loc28 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:98)
#loc29 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:92)
#loc30 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:86)
#loc31 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:109)
#loc32 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:103)
#loc33 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:30)
#loc34 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":37:114)
#loc35 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":38:30)
#loc36 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":38:35)
#loc37 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":39:31)
#loc38 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":39:36)
#loc39 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":40:31)
#loc40 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":40:36)
#loc41 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":41:18)
#loc42 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":42:18)
#loc43 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":43:18)
#loc44 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":44:18)
#loc45 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":48:43)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc49 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":49:29)
#loc50 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":52:20)
#loc51 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":53:19)
#loc52 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":54:20)
#loc53 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":56:43)
#loc55 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":68:20)
#loc56 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":57:29)
#loc57 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":60:20)
#loc58 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":62:20)
#loc59 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":63:28)
#loc60 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":64:20)
#loc61 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":65:20)
#loc62 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":66:20)
#loc63 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":69:48)
#loc64 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":70:25)
#loc65 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":70:46)
#loc66 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":71:25)
#loc67 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":71:46)
#loc68 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":72:25)
#loc69 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":72:37)
#loc70 = loc("inductor_cache/7i/c7istjaymt7hqrdmimyn3l5m42awxkfo5ze265driy5x7zraxnb3.py":72:4)
#loc71 = loc(callsite(#loc46 at #loc47))
#loc73 = loc(callsite(#loc48 at #loc46))
#loc74 = loc(callsite(#loc46 at #loc54))
#loc76 = loc(callsite(#loc73 at #loc47))
#loc77 = loc(callsite(#loc73 at #loc54))
