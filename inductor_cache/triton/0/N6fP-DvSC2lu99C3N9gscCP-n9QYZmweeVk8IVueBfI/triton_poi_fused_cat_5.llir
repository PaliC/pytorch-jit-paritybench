; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) nocapture readnone %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 8, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = shl i32 %14, 1, !dbg !12
  %16 = and i32 %15, 254, !dbg !12
  %17 = or disjoint i32 %13, %16, !dbg !13
  %18 = icmp slt i32 %17, 768, !dbg !14
  %19 = sdiv i32 %17, 16, !dbg !15
  %.frozen1 = freeze i32 %17, !dbg !16
  %20 = sdiv i32 %.frozen1, 192, !dbg !16
  %.frozen = freeze i32 %17, !dbg !17
  %21 = sdiv i32 %.frozen, 4, !dbg !17
  %22 = srem i32 %21, 4, !dbg !18
  %23 = mul i32 %21, 4, !dbg !19
  %.decomposed = sub i32 %.frozen, %23, !dbg !19
  %24 = mul i32 %20, 192, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %24, !dbg !20
  %25 = shl nsw i32 %20, 6, !dbg !21
  %26 = add nsw i32 %25, %srem.decomposed, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !23
  %29 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !24
  %30 = insertelement <2 x i32> %29, i32 %19, i64 1, !dbg !24
  %31 = srem <2 x i32> %30, <i32 16, i32 12>, !dbg !24
  %32 = extractelement <2 x i32> %31, i64 1, !dbg !25
  %33 = icmp slt i32 %32, 4, !dbg !26
  %34 = and i1 %18, %33, !dbg !27
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #1, !dbg !28
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !28
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !28
  %38 = and i32 %32, -4, !dbg !29
  %39 = icmp eq i32 %38, 4, !dbg !29
  %40 = shl nsw i32 %32, 4, !dbg !25
  %41 = insertelement <2 x i32> <i32 poison, i32 -8>, i32 %25, i64 0, !dbg !25
  %42 = add nsw <2 x i32> %41, %31, !dbg !25
  %43 = extractelement <2 x i32> %42, i64 0, !dbg !30
  %44 = add nsw i32 %43, -64, !dbg !31
  %45 = add nsw i32 %44, %40, !dbg !32
  %46 = sext i32 %45 to i64, !dbg !33
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !33
  %48 = and i1 %18, %39, !dbg !34
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48, i32 0, i1 %48) #1, !dbg !35
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !35
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !35
  %52 = icmp sgt i32 %32, 7, !dbg !36
  %53 = extractelement <2 x i32> %42, i64 1, !dbg !37
  %54 = shl nsw i32 %53, 4, !dbg !37
  %55 = add nsw i32 %43, %54, !dbg !30
  %56 = sext i32 %55 to i64, !dbg !38
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !38
  %58 = and i1 %18, %52, !dbg !39
  %59 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %57, i1 %58, i32 0, i1 %58, i32 0, i1 %58) #1, !dbg !40
  %60 = extractvalue { i32, i32 } %59, 0, !dbg !40
  %61 = extractvalue { i32, i32 } %59, 1, !dbg !40
  %62 = bitcast i32 %60 to float, !dbg !40
  %63 = bitcast i32 %61 to float, !dbg !40
  %64 = shl nsw i32 %20, 2, !dbg !41
  %65 = add nsw i32 %53, %64, !dbg !42
  %66 = sext i32 %65 to i64, !dbg !43
  %67 = getelementptr float, ptr addrspace(1) %5, i64 %66, !dbg !43
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %58, i32 0, i1 %58) #1, !dbg !44
  %69 = bitcast i32 %68 to float, !dbg !44
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %58, i32 0, i1 %58) #1, !dbg !44
  %71 = bitcast i32 %70 to float, !dbg !44
  %72 = fsub float %69, %69, !dbg !45
  %73 = fsub float %71, %71, !dbg !45
  %74 = sext i32 %.decomposed to i64, !dbg !46
  %75 = getelementptr float, ptr addrspace(1) %7, i64 %74, !dbg !46
  %76 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %75, i1 %58, i32 0, i1 %58, i32 0, i1 %58) #1, !dbg !47
  %77 = extractvalue { i32, i32 } %76, 0, !dbg !47
  %78 = extractvalue { i32, i32 } %76, 1, !dbg !47
  %79 = bitcast i32 %77 to float, !dbg !47
  %80 = bitcast i32 %78 to float, !dbg !47
  %81 = fmul float %72, %79, !dbg !48
  %82 = fmul float %73, %80, !dbg !48
  %83 = fadd float %81, %69, !dbg !49
  %84 = fadd float %82, %71, !dbg !49
  %85 = fsub float %83, %62, !dbg !50
  %86 = fsub float %84, %63, !dbg !50
  %87 = sext i32 %22 to i64, !dbg !51
  %88 = getelementptr float, ptr addrspace(1) %8, i64 %87, !dbg !51
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %58, i32 0, i1 %58) #1, !dbg !52
  %90 = bitcast i32 %89 to float, !dbg !52
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %88, i1 %58, i32 0, i1 %58) #1, !dbg !52
  %92 = bitcast i32 %91 to float, !dbg !52
  %93 = fmul float %85, %90, !dbg !53
  %94 = fmul float %86, %92, !dbg !53
  %95 = fadd float %93, %62, !dbg !54
  %96 = fadd float %94, %63, !dbg !54
  %97 = sext i32 %17 to i64, !dbg !55
  %98 = getelementptr float, ptr addrspace(1) %9, i64 %97, !dbg !55
  %99 = bitcast float %95 to i32, !dbg !56
  %100 = select i1 %52, i32 %99, i32 0, !dbg !57
  %101 = select i1 %39, i32 %50, i32 %100, !dbg !58
  %102 = select i1 %33, i32 %36, i32 %101, !dbg !59
  %103 = bitcast float %96 to i32, !dbg !56
  %104 = select i1 %52, i32 %103, i32 0, !dbg !57
  %105 = select i1 %39, i32 %51, i32 %104, !dbg !58
  %106 = select i1 %33, i32 %37, i32 %105, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %102, i32 %106, ptr addrspace(1) %98, i1 %18) #1, !dbg !56
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvonduyqjysm2afucqrzorkybjks4oxen5lutfwguhyn62e324mp.py", directory: "inductor_cache/vo")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 27, column: 26, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 35, column: 35, scope: !7)
!21 = !DILocation(line: 35, column: 48, scope: !7)
!22 = !DILocation(line: 35, column: 45, scope: !7)
!23 = !DILocation(line: 35, column: 30, scope: !7)
!24 = !DILocation(line: 26, column: 19, scope: !7)
!25 = !DILocation(line: 40, column: 40, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 60, scope: !7)
!28 = !DILocation(line: 35, column: 53, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 44, column: 53, scope: !7)
!31 = !DILocation(line: 40, column: 36, scope: !7)
!32 = !DILocation(line: 40, column: 53, scope: !7)
!33 = !DILocation(line: 40, column: 31, scope: !7)
!34 = !DILocation(line: 40, column: 68, scope: !7)
!35 = !DILocation(line: 40, column: 61, scope: !7)
!36 = !DILocation(line: 41, column: 20, scope: !7)
!37 = !DILocation(line: 44, column: 40, scope: !7)
!38 = !DILocation(line: 44, column: 31, scope: !7)
!39 = !DILocation(line: 44, column: 69, scope: !7)
!40 = !DILocation(line: 44, column: 61, scope: !7)
!41 = !DILocation(line: 54, column: 33, scope: !7)
!42 = !DILocation(line: 54, column: 39, scope: !7)
!43 = !DILocation(line: 54, column: 31, scope: !7)
!44 = !DILocation(line: 54, column: 52, scope: !7)
!45 = !DILocation(line: 59, column: 20, scope: !7)
!46 = !DILocation(line: 60, column: 31, scope: !7)
!47 = !DILocation(line: 60, column: 36, scope: !7)
!48 = !DILocation(line: 61, column: 20, scope: !7)
!49 = !DILocation(line: 62, column: 20, scope: !7)
!50 = !DILocation(line: 63, column: 20, scope: !7)
!51 = !DILocation(line: 64, column: 31, scope: !7)
!52 = !DILocation(line: 64, column: 36, scope: !7)
!53 = !DILocation(line: 65, column: 20, scope: !7)
!54 = !DILocation(line: 66, column: 20, scope: !7)
!55 = !DILocation(line: 71, column: 25, scope: !7)
!56 = !DILocation(line: 71, column: 37, scope: !7)
!57 = !DILocation(line: 68, column: 35, scope: !7)
!58 = !DILocation(line: 69, column: 34, scope: !7)
!59 = !DILocation(line: 70, column: 33, scope: !7)
!60 = !DILocation(line: 71, column: 4, scope: !7)
