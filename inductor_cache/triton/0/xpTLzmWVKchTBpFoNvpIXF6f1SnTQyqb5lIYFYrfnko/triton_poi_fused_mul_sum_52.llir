; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_sum_52(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 4096, !dbg !14
  %12 = mul i32 %11, 4096, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = shl i32 %11, 14, !dbg !16
  %14 = add i32 %13, %.decomposed, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !19
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !19
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !19
  %20 = bitcast i32 %18 to float, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !20
  %23 = bitcast i32 %22 to float, !dbg !20
  %24 = add i32 %14, 4096, !dbg !21
  %25 = sext i32 %24 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !23
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !23
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !23
  %30 = bitcast i32 %28 to float, !dbg !23
  %31 = bitcast i32 %29 to float, !dbg !23
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !24
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !25
  %34 = bitcast i32 %33 to float, !dbg !25
  %35 = add i32 %14, 8192, !dbg !26
  %36 = sext i32 %35 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !27
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !28
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !28
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !28
  %41 = bitcast i32 %39 to float, !dbg !28
  %42 = bitcast i32 %40 to float, !dbg !28
  %43 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !29
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !30
  %45 = bitcast i32 %44 to float, !dbg !30
  %46 = add i32 %14, 12288, !dbg !31
  %47 = sext i32 %46 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !32
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %48, i1 true) #1, !dbg !33
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !33
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !33
  %52 = bitcast i32 %50 to float, !dbg !33
  %53 = bitcast i32 %51 to float, !dbg !33
  %54 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !34
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !35
  %56 = bitcast i32 %55 to float, !dbg !35
  %57 = fmul float %20, %23, !dbg !36
  %58 = fmul float %21, %23, !dbg !36
  %59 = fmul float %30, %34, !dbg !37
  %60 = fmul float %31, %34, !dbg !37
  %61 = fadd float %57, %59, !dbg !38
  %62 = fadd float %58, %60, !dbg !38
  %63 = fmul float %41, %45, !dbg !39
  %64 = fmul float %42, %45, !dbg !39
  %65 = fadd float %61, %63, !dbg !40
  %66 = fadd float %62, %64, !dbg !40
  %67 = fmul float %52, %56, !dbg !41
  %68 = fmul float %53, %56, !dbg !41
  %69 = fadd float %65, %67, !dbg !42
  %70 = fadd float %66, %68, !dbg !42
  %71 = sext i32 %10 to i64, !dbg !43
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !43
  %73 = bitcast float %69 to i32, !dbg !44
  %74 = bitcast float %70 to i32, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %72, i1 true) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c72rujp5zhdxjdqqr42giytcruszpae52xhv734ysnnvfqa4ojof.py", directory: "inductor_cache/72")
!4 = !{ptr @triton_poi_fused_mul_sum_52, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sum_52, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sum_52", linkageName: "triton_poi_fused_mul_sum_52", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 41, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 46, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 42, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 53, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 19, scope: !7)
!26 = !DILocation(line: 33, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 53, scope: !7)
!29 = !DILocation(line: 34, column: 31, scope: !7)
!30 = !DILocation(line: 34, column: 20, scope: !7)
!31 = !DILocation(line: 36, column: 44, scope: !7)
!32 = !DILocation(line: 36, column: 31, scope: !7)
!33 = !DILocation(line: 36, column: 55, scope: !7)
!34 = !DILocation(line: 37, column: 31, scope: !7)
!35 = !DILocation(line: 37, column: 20, scope: !7)
!36 = !DILocation(line: 39, column: 18, scope: !7)
!37 = !DILocation(line: 40, column: 18, scope: !7)
!38 = !DILocation(line: 41, column: 18, scope: !7)
!39 = !DILocation(line: 42, column: 19, scope: !7)
!40 = !DILocation(line: 43, column: 19, scope: !7)
!41 = !DILocation(line: 44, column: 20, scope: !7)
!42 = !DILocation(line: 45, column: 20, scope: !7)
!43 = !DILocation(line: 46, column: 25, scope: !7)
!44 = !DILocation(line: 46, column: 37, scope: !7)
!45 = !DILocation(line: 46, column: 4, scope: !7)
