#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_tanh_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.muli %7, %cst_3 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5, %cst_0 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = arith.addi %6, %cst_4 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = arith.addi %13, %8 : tensor<256xi32, #blocked> loc(#loc14)
    %15 = tt.addptr %10, %14 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc15)
    %16 = tt.load %15, %5, %cst_0 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %17 = arith.cmpf olt, %12, %16 : tensor<256xf32, #blocked> loc(#loc28)
    %18 = arith.cmpf une, %12, %12 : tensor<256xf32, #blocked> loc(#loc29)
    %19 = arith.ori %17, %18 : tensor<256xi1, #blocked> loc(#loc30)
    %20 = arith.select %19, %12, %16 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc31)
    %21 = tt.extern_elementwise %20 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc22)
    %22 = arith.mulf %21, %cst : tensor<256xf32, #blocked> loc(#loc23)
    %23 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<256xf32, #blocked>) -> tensor<256xf32, #blocked> loc(#loc24)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc25)
    %25 = tt.addptr %24, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc25)
    tt.store %25, %23, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":21:28)
#loc3 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":21:33)
#loc4 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":22:36)
#loc5 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":22:23)
#loc6 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":23:21)
#loc7 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":24:19)
#loc8 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":25:19)
#loc9 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":32:38)
#loc10 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":32:35)
#loc11 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":32:30)
#loc12 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":32:43)
#loc13 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":34:35)
#loc14 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":34:40)
#loc15 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":34:30)
#loc16 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":34:48)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc18 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":36:40)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc22 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":37:27)
#loc23 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":39:20)
#loc24 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":40:27)
#loc25 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":41:25)
#loc26 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":41:37)
#loc27 = loc("inductor_cache/4k/c4keazgngqvankddcamd6sm5tirukpodtxdb2wt474gzkmilqkn2.py":41:4)
#loc28 = loc(callsite(#loc17 at #loc18))
#loc29 = loc(callsite(#loc19 at #loc18))
#loc30 = loc(callsite(#loc20 at #loc18))
#loc31 = loc(callsite(#loc21 at #loc18))
