; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_relu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 512, !dbg !13
  %11 = sext i32 %9 to i64, !dbg !14
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !14
  %13 = sext i32 %10 to i64, !dbg !14
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #1, !dbg !15
  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !15
  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !15
  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !15
  %20 = bitcast i32 %16 to float, !dbg !15
  %21 = bitcast i32 %17 to float, !dbg !15
  %22 = bitcast i32 %18 to float, !dbg !15
  %23 = bitcast i32 %19 to float, !dbg !15
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !15
  %25 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !15
  %26 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !15
  %27 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !15
  %28 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !15
  %29 = bitcast i32 %25 to float, !dbg !15
  %30 = bitcast i32 %26 to float, !dbg !15
  %31 = bitcast i32 %27 to float, !dbg !15
  %32 = bitcast i32 %28 to float, !dbg !15
  %33 = fcmp olt float %20, 0.000000e+00, !dbg !16
  %34 = fcmp olt float %21, 0.000000e+00, !dbg !16
  %35 = fcmp olt float %22, 0.000000e+00, !dbg !16
  %36 = fcmp olt float %23, 0.000000e+00, !dbg !16
  %37 = fcmp olt float %29, 0.000000e+00, !dbg !16
  %38 = fcmp olt float %30, 0.000000e+00, !dbg !16
  %39 = fcmp olt float %31, 0.000000e+00, !dbg !16
  %40 = fcmp olt float %32, 0.000000e+00, !dbg !16
  %41 = select i1 %33, float 0.000000e+00, float %20, !dbg !20
  %42 = select i1 %34, float 0.000000e+00, float %21, !dbg !20
  %43 = select i1 %35, float 0.000000e+00, float %22, !dbg !20
  %44 = select i1 %36, float 0.000000e+00, float %23, !dbg !20
  %45 = select i1 %37, float 0.000000e+00, float %29, !dbg !20
  %46 = select i1 %38, float 0.000000e+00, float %30, !dbg !20
  %47 = select i1 %39, float 0.000000e+00, float %31, !dbg !20
  %48 = select i1 %40, float 0.000000e+00, float %32, !dbg !20
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !21
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !21
  %51 = bitcast float %41 to i32, !dbg !22
  %52 = bitcast float %42 to i32, !dbg !22
  %53 = bitcast float %43 to i32, !dbg !22
  %54 = bitcast float %44 to i32, !dbg !22
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %51, i32 %52, i32 %53, i32 %54, ptr addrspace(1) %49, i1 true) #1, !dbg !22
  %55 = bitcast float %45 to i32, !dbg !22
  %56 = bitcast float %46 to i32, !dbg !22
  %57 = bitcast float %47 to i32, !dbg !22
  %58 = bitcast float %48 to i32, !dbg !22
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %55, i32 %56, i32 %57, i32 %58, ptr addrspace(1) %50, i1 true) #1, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfkfck545nvaclnu4p2ktnwgdgafjme3hqv6b6sbcgpgjdtmjc72.py", directory: "inductor_cache/fk")
!4 = !{ptr @triton_poi_fused_relu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_relu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_relu_0", linkageName: "triton_poi_fused_relu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 118, column: 15, scope: !17, inlinedAt: !19)
!17 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!18 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!19 = !DILocation(line: 27, column: 40, scope: !7)
!20 = !DILocation(line: 121, column: 29, scope: !17, inlinedAt: !19)
!21 = !DILocation(line: 28, column: 25, scope: !7)
!22 = !DILocation(line: 28, column: 36, scope: !7)
!23 = !DILocation(line: 28, column: 4, scope: !7)
