; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_reflection_pad2d_7(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = srem i32 %10, 18, !dbg !14
  %12 = sdiv i32 %9, 18, !dbg !15
  %13 = sdiv i32 %9, 324, !dbg !16
  %14 = add nsw i32 %11, -1, !dbg !17
  %15 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !18
  %16 = add nsw i32 %15, -15, !dbg !19
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true), !dbg !20
  %18 = shl nsw i32 %13, 8, !dbg !21
  %reass.sub = or disjoint i32 %18, 255, !dbg !22
  %19 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !14
  %20 = insertelement <2 x i32> %19, i32 %12, i64 1, !dbg !14
  %21 = srem <2 x i32> %20, splat (i32 18), !dbg !14
  %22 = add nsw <2 x i32> %21, splat (i32 -1), !dbg !17
  %23 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %22, i1 true), !dbg !18
  %24 = add nsw <2 x i32> %23, splat (i32 -15), !dbg !19
  %25 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %24, i1 true), !dbg !20
  %26 = extractelement <2 x i32> %25, i64 0, !dbg !23
  %27 = sub nuw i32 %reass.sub, %26, !dbg !23
  %28 = extractelement <2 x i32> %25, i64 1, !dbg !23
  %29 = mul nsw i32 %28, -16, !dbg !23
  %30 = add i32 %27, %29, !dbg !23
  %31 = sub nuw i32 %reass.sub, %17, !dbg !22
  %32 = add i32 %31, %29, !dbg !23
  %33 = sext i32 %30 to i64, !dbg !24
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !24
  %35 = sext i32 %32 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !24
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 true) #2, !dbg !25
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #2, !dbg !25
  %39 = sext i32 %9 to i64, !dbg !26
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !26
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %37, i32 %38, ptr addrspace(1) %40, i1 true) #2, !dbg !27
  ret void, !dbg !28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cw5gq3zdiuenctv2kuwyosdc2cfjepcbvn7fs3mbexz7wi66bwel.py", directory: "inductor_cache/w5")
!4 = !{ptr @triton_poi_fused_reflection_pad2d_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_reflection_pad2d_7, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_reflection_pad2d_7", linkageName: "triton_poi_fused_reflection_pad2d_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 81, scope: !7)
!18 = !DILocation(line: 28, column: 74, scope: !7)
!19 = !DILocation(line: 28, column: 62, scope: !7)
!20 = !DILocation(line: 28, column: 54, scope: !7)
!21 = !DILocation(line: 28, column: 147, scope: !7)
!22 = !DILocation(line: 28, column: 90, scope: !7)
!23 = !DILocation(line: 28, column: 143, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 152, scope: !7)
!26 = !DILocation(line: 29, column: 25, scope: !7)
!27 = !DILocation(line: 29, column: 36, scope: !7)
!28 = !DILocation(line: 29, column: 4, scope: !7)
