#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_abs_gt_mul_sign_stack_sub_view_as_complex_where_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg6: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.00999999977> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<384> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<5> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %8, %cst_4 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.extsi %6 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_5 : tensor<256xi64, #blocked> loc(#loc11)
    %12 = arith.muli %7, %cst_2 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc13)
    %15 = arith.andi %11, %5 : tensor<256xi1, #blocked> loc(#loc14)
    %16 = tt.load %14, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = arith.muli %9, %cst_6 : tensor<256xi32, #blocked> loc(#loc16)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = tt.addptr %18, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc17)
    %20 = tt.load %19, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = arith.mulf %16, %20 : tensor<256xf32, #blocked> loc(#loc19)
    %22 = arith.addi %12, %cst_7 : tensor<256xi32, #blocked> loc(#loc20)
    %23 = tt.addptr %13, %22 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc21)
    %24 = tt.load %23, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %25 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %26 = tt.addptr %25, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc23)
    %27 = tt.load %26, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc24)
    %28 = arith.mulf %24, %27 : tensor<256xf32, #blocked> loc(#loc25)
    %29 = arith.subf %21, %28 : tensor<256xf32, #blocked> loc(#loc26)
    %30 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc27)
    %31 = tt.addptr %30, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc27)
    %32 = tt.load %31, %15, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc28)
    %33 = arith.addf %29, %32 : tensor<256xf32, #blocked> loc(#loc29)
    %34 = arith.cmpf ogt, %cst, %33 : tensor<256xf32, #blocked> loc(#loc66)
    %35 = arith.select %34, %cst, %33 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc67)
    %36 = arith.cmpi sge, %10, %cst_5 : tensor<256xi64, #blocked> loc(#loc33)
    %37 = arith.andi %36, %5 : tensor<256xi1, #blocked> loc(#loc34)
    %38 = tt.load %23, %37, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %39 = tt.load %19, %37, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc36)
    %40 = arith.mulf %38, %39 : tensor<256xf32, #blocked> loc(#loc37)
    %41 = tt.load %14, %37, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %42 = tt.load %26, %37, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %43 = arith.mulf %41, %42 : tensor<256xf32, #blocked> loc(#loc40)
    %44 = arith.addf %40, %43 : tensor<256xf32, #blocked> loc(#loc41)
    %45 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc42)
    %46 = tt.addptr %45, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc42)
    %47 = tt.load %46, %37, %cst evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc43)
    %48 = arith.addf %44, %47 : tensor<256xf32, #blocked> loc(#loc44)
    %49 = arith.cmpf ogt, %cst, %48 : tensor<256xf32, #blocked> loc(#loc68)
    %50 = arith.select %49, %cst, %48 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc69)
    %51 = arith.select %36, %50, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc46)
    %52 = arith.select %11, %35, %51 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc70)
    %53 = math.absf %52 : tensor<256xf32, #blocked> loc(#loc49)
    %54 = arith.cmpf ogt, %53, %cst_0 : tensor<256xf32, #blocked> loc(#loc50)
    %55 = arith.cmpf olt, %cst, %52 : tensor<256xf32, #blocked> loc(#loc51)
    %56 = arith.extui %55 : tensor<256xi1, #blocked> to tensor<256xi8, #blocked> loc(#loc52)
    %57 = arith.cmpf olt, %52, %cst : tensor<256xf32, #blocked> loc(#loc53)
    %58 = arith.extui %57 : tensor<256xi1, #blocked> to tensor<256xi8, #blocked> loc(#loc54)
    %59 = arith.subi %56, %58 : tensor<256xi8, #blocked> loc(#loc55)
    %60 = arith.sitofp %59 : tensor<256xi8, #blocked> to tensor<256xf32, #blocked> loc(#loc56)
    %61 = arith.mulf %60, %cst_0 : tensor<256xf32, #blocked> loc(#loc57)
    %62 = arith.subf %52, %61 : tensor<256xf32, #blocked> loc(#loc58)
    %63 = arith.mulf %52, %cst : tensor<256xf32, #blocked> loc(#loc59)
    %64 = arith.select %54, %62, %63 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc60)
    %65 = tt.splat %arg6 : !tt.ptr<i1> -> tensor<256x!tt.ptr<i1>, #blocked> loc(#loc61)
    %66 = tt.addptr %65, %4 : tensor<256x!tt.ptr<i1>, #blocked>, tensor<256xi32, #blocked> loc(#loc61)
    %67 = tt.bitcast %66 : tensor<256x!tt.ptr<i1>, #blocked> -> tensor<256x!tt.ptr<i8>, #blocked> loc(#loc62)
    %68 = arith.extui %54 : tensor<256xi1, #blocked> to tensor<256xi8, #blocked> loc(#loc62)
    tt.store %67, %68, %5 : tensor<256x!tt.ptr<i8>, #blocked> loc(#loc62)
    %69 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc63)
    %70 = tt.addptr %69, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc63)
    tt.store %70, %64, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":21:28)
#loc3 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":21:33)
#loc4 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":22:36)
#loc5 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":22:23)
#loc6 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":23:21)
#loc7 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":24:19)
#loc8 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":25:19)
#loc9 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":26:21)
#loc10 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":26:26)
#loc11 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":32:18)
#loc12 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":33:32)
#loc13 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":33:30)
#loc14 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":33:44)
#loc15 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":33:37)
#loc16 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":34:32)
#loc17 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":34:30)
#loc18 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":34:37)
#loc19 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":35:18)
#loc20 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":36:34)
#loc21 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":36:30)
#loc22 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":36:41)
#loc23 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":37:30)
#loc24 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":37:37)
#loc25 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":38:19)
#loc26 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":39:19)
#loc27 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":40:31)
#loc28 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":40:36)
#loc29 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":41:20)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc31 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":43:42)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":46:20)
#loc34 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":49:50)
#loc35 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":49:42)
#loc36 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":50:38)
#loc37 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":51:20)
#loc38 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":52:38)
#loc39 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":53:38)
#loc40 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":54:20)
#loc41 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":55:20)
#loc42 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":56:31)
#loc43 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":56:36)
#loc44 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":57:20)
#loc45 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":59:42)
#loc46 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":61:35)
#loc47 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":62:34)
#loc48 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":45:34)
#loc49 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":63:24)
#loc50 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":65:20)
#loc51 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":67:20)
#loc52 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":68:21)
#loc53 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":69:20)
#loc54 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":70:21)
#loc55 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":71:20)
#loc56 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":72:21)
#loc57 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":73:20)
#loc58 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":74:20)
#loc59 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":76:20)
#loc60 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":77:35)
#loc61 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":78:25)
#loc62 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":78:37)
#loc63 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":79:28)
#loc64 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":79:40)
#loc65 = loc("inductor_cache/l2/cl2cp4v7znty3olp2nmmgmreavkmaof4pjob6a6qlrzyzerdfbk4.py":79:4)
#loc66 = loc(callsite(#loc30 at #loc31))
#loc67 = loc(callsite(#loc32 at #loc31))
#loc68 = loc(callsite(#loc30 at #loc45))
#loc69 = loc(callsite(#loc32 at #loc45))
#loc70 = loc(fused[#loc47, #loc48])
