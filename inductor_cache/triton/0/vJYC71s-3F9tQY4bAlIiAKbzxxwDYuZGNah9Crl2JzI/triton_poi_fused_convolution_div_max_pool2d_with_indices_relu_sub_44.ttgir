#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_convolution_div_max_pool2d_with_indices_relu_sub_44(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2097152> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x1024xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1024xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<1x1024xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<1x1024xi32, #blocked1> loc(#loc5)
    %10 = tt.get_program_id x : i32 loc(#loc6)
    %11 = arith.remsi %8, %cst_0 : tensor<1x1024xi32, #blocked> loc(#loc7)
    %12 = arith.divsi %8, %cst_0 : tensor<1x1024xi32, #blocked> loc(#loc8)
    %13 = arith.muli %10, %c512_i32 : i32 loc(#loc9)
    %14 = tt.splat %13 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc10)
    %15 = arith.addi %11, %14 : tensor<1x1024xi32, #blocked> loc(#loc10)
    %16 = arith.muli %12, %cst_1 : tensor<1x1024xi32, #blocked> loc(#loc11)
    %17 = arith.addi %15, %16 : tensor<1x1024xi32, #blocked> loc(#loc12)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %19 = tt.addptr %18, %17 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc13)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc14)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc15)
    %22 = tt.addptr %21, %11 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc15)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %24 = arith.addf %20, %23 : tensor<1x1024xf32, #blocked> loc(#loc17)
    %25 = arith.cmpf ogt, %cst, %24 : tensor<1x1024xf32, #blocked> loc(#loc26)
    %26 = arith.select %25, %cst, %24 : tensor<1x1024xi1, #blocked>, tensor<1x1024xf32, #blocked> loc(#loc27)
    %27 = arith.muli %9, %cst_2 : tensor<1x1024xi32, #blocked1> loc(#loc21)
    %28 = tt.splat %10 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc22)
    %29 = arith.addi %28, %27 : tensor<1x1024xi32, #blocked1> loc(#loc22)
    %30 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %31 = tt.addptr %30, %29 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc23)
    %32 = triton_gpu.convert_layout %26 : tensor<1x1024xf32, #blocked> -> tensor<1x1024xf32, #blocked1> loc(#loc24)
    tt.store %31, %32 : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":22:28)
#loc3 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":22:33)
#loc4 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":23:44)
#loc5 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":23:23)
#loc6 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":25:28)
#loc7 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":29:19)
#loc8 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":30:19)
#loc9 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:39)
#loc10 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:35)
#loc11 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:52)
#loc12 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:44)
#loc13 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:30)
#loc14 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:57)
#loc15 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":33:30)
#loc16 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":33:35)
#loc17 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":34:18)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":36:40)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:35)
#loc22 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:30)
#loc23 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:25)
#loc24 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:46)
#loc25 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:4)
#loc26 = loc(callsite(#loc18 at #loc19))
#loc27 = loc(callsite(#loc20 at #loc19))
