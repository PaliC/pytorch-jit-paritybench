#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_max_unpool2d_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<false> : tensor<256xi1, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<32768> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<256xi64, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_10 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<5> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.muli %5, %cst : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.muli %6, %cst_10 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.addi %8, %9 : tensor<256xi32, #blocked> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %12 = tt.addptr %11, %10 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc12)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = arith.addi %8, %cst_0 : tensor<256xi32, #blocked> loc(#loc14)
    %15 = arith.addi %14, %9 : tensor<256xi32, #blocked> loc(#loc15)
    %16 = tt.addptr %11, %15 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc16)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %18 = arith.addi %8, %cst_11 : tensor<256xi32, #blocked> loc(#loc18)
    %19 = arith.addi %18, %9 : tensor<256xi32, #blocked> loc(#loc19)
    %20 = tt.addptr %11, %19 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc20)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc21)
    %22 = arith.addi %8, %cst_12 : tensor<256xi32, #blocked> loc(#loc22)
    %23 = arith.addi %22, %9 : tensor<256xi32, #blocked> loc(#loc23)
    %24 = tt.addptr %11, %23 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc24)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc25)
    %26 = arith.cmpf ogt, %17, %13 : tensor<256xf32, #blocked> loc(#loc26)
    %27 = arith.select %26, %cst_1, %cst_2 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc27)
    %28 = arith.cmpf une, %17, %17 : tensor<256xf32, #blocked> loc(#loc68)
    %29 = arith.ori %26, %28 : tensor<256xi1, #blocked> loc(#loc69)
    %30 = arith.select %29, %17, %13 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc70)
    %31 = arith.cmpf ogt, %21, %30 : tensor<256xf32, #blocked> loc(#loc32)
    %32 = arith.select %31, %cst_3, %27 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc33)
    %33 = arith.cmpf une, %21, %21 : tensor<256xf32, #blocked> loc(#loc71)
    %34 = arith.ori %31, %33 : tensor<256xi1, #blocked> loc(#loc72)
    %35 = arith.select %34, %21, %30 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc73)
    %36 = arith.cmpf ogt, %25, %35 : tensor<256xf32, #blocked> loc(#loc35)
    %37 = arith.select %36, %cst_4, %32 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc36)
    %38 = arith.extsi %37 : tensor<256xi8, #blocked> to tensor<256xi32, #blocked> loc(#loc37)
    %39 = arith.cmpi slt, %38, %cst_5 : tensor<256xi32, #blocked> loc(#loc37)
    %40 = arith.cmpi ne, %39, %cst_7 : tensor<256xi1, #blocked> loc(#loc38)
    %41 = arith.remsi %38, %cst : tensor<256xi32, #blocked> loc(#loc39)
    %42 = arith.cmpi ne, %41, %cst_5 : tensor<256xi32, #blocked> loc(#loc40)
    %43 = arith.divsi %38, %cst : tensor<256xi32, #blocked> loc(#loc41)
    %44 = arith.subi %43, %cst_0 : tensor<256xi32, #blocked> loc(#loc42)
    %45 = arith.select %42, %44, %43 : tensor<256xi1, #blocked>, tensor<256xi32, #blocked> loc(#loc43)
    %46 = arith.select %40, %45, %43 : tensor<256xi1, #blocked>, tensor<256xi32, #blocked> loc(#loc44)
    %47 = arith.muli %46, %cst : tensor<256xi32, #blocked> loc(#loc45)
    %48 = arith.subi %38, %47 : tensor<256xi32, #blocked> loc(#loc46)
    %49 = arith.muli %7, %cst : tensor<256xi32, #blocked> loc(#loc47)
    %50 = arith.addi %49, %46 : tensor<256xi32, #blocked> loc(#loc48)
    %51 = arith.addi %8, %48 : tensor<256xi32, #blocked> loc(#loc49)
    %52 = arith.extsi %50 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc50)
    %53 = arith.muli %52, %cst_6 : tensor<256xi64, #blocked> loc(#loc50)
    %54 = arith.extsi %51 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc51)
    %55 = arith.addi %53, %54 : tensor<256xi64, #blocked> loc(#loc51)
    %56 = arith.divsi %4, %cst_11 : tensor<256xi32, #blocked> loc(#loc52)
    %57 = arith.muli %56, %cst_13 : tensor<256xi32, #blocked> loc(#loc53)
    %58 = arith.extsi %57 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc54)
    %59 = arith.addi %55, %58 : tensor<256xi64, #blocked> loc(#loc54)
    %60 = arith.addi %59, %cst_8 : tensor<256xi64, #blocked> loc(#loc55)
    %61 = arith.cmpi slt, %59, %cst_9 : tensor<256xi64, #blocked> loc(#loc56)
    %62 = arith.select %61, %60, %59 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc57)
    %63 = arith.cmpi sge, %62, %cst_9 : tensor<256xi64, #blocked> loc(#loc58)
    %64 = arith.cmpi slt, %62, %cst_8 : tensor<256xi64, #blocked> loc(#loc59)
    %65 = arith.andi %63, %64 : tensor<256xi1, #blocked> loc(#loc60)
    tt.assert %65, "index out of bounds: 0 <= tmp33 < 32768" : tensor<256xi1, #blocked> loc(#loc61)
    %66 = arith.cmpf une, %25, %25 : tensor<256xf32, #blocked> loc(#loc74)
    %67 = arith.ori %36, %66 : tensor<256xi1, #blocked> loc(#loc75)
    %68 = arith.select %67, %25, %35 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc76)
    %69 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc63)
    %70 = tt.addptr %69, %4 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc63)
    tt.store %70, %55 : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc64)
    %71 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc65)
    %72 = tt.addptr %71, %62 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc65)
    %73 = triton_gpu.convert_layout %72 : tensor<256x!tt.ptr<f32>, #blocked> -> tensor<256x!tt.ptr<f32>, #blocked1> loc(#loc66)
    %74 = triton_gpu.convert_layout %68 : tensor<256xf32, #blocked> -> tensor<256xf32, #blocked1> loc(#loc66)
    tt.store %73, %74 : tensor<256x!tt.ptr<f32>, #blocked1> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":21:28)
#loc3 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":21:33)
#loc4 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":22:36)
#loc5 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":22:23)
#loc6 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":24:19)
#loc7 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":25:19)
#loc8 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":26:26)
#loc9 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":28:32)
#loc10 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":28:39)
#loc11 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":28:37)
#loc12 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":28:30)
#loc13 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":28:44)
#loc14 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":29:34)
#loc15 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":29:41)
#loc16 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":29:30)
#loc17 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":29:48)
#loc18 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":30:34)
#loc19 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":30:41)
#loc20 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":30:30)
#loc21 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":30:48)
#loc22 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":31:35)
#loc23 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":31:42)
#loc24 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":31:31)
#loc25 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":31:49)
#loc26 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":36:18)
#loc27 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":39:32)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc29 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":40:40)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":41:18)
#loc33 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":43:33)
#loc34 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":44:41)
#loc35 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":45:20)
#loc36 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":47:35)
#loc37 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:30)
#loc38 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:37)
#loc39 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:66)
#loc40 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:75)
#loc41 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:87)
#loc42 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:95)
#loc43 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:98)
#loc44 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":50:115)
#loc45 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":51:20)
#loc46 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":52:20)
#loc47 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":53:14)
#loc48 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":54:20)
#loc49 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":56:20)
#loc50 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":58:20)
#loc51 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":59:20)
#loc52 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":60:22)
#loc53 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":60:16)
#loc54 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":61:20)
#loc55 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":63:20)
#loc56 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":64:20)
#loc57 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":65:35)
#loc58 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":66:27)
#loc59 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":66:45)
#loc60 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":66:37)
#loc61 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":66:53)
#loc62 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":69:42)
#loc63 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":70:25)
#loc64 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":70:37)
#loc65 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":71:25)
#loc66 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":71:67)
#loc67 = loc("inductor_cache/eo/ceomiioqx6k77au5yicognjo6eglfpt6b7mh7hsps3nfyrtfnxab.py":71:4)
#loc68 = loc(callsite(#loc28 at #loc29))
#loc69 = loc(callsite(#loc30 at #loc29))
#loc70 = loc(callsite(#loc31 at #loc29))
#loc71 = loc(callsite(#loc28 at #loc34))
#loc72 = loc(callsite(#loc30 at #loc34))
#loc73 = loc(callsite(#loc31 at #loc34))
#loc74 = loc(callsite(#loc28 at #loc62))
#loc75 = loc(callsite(#loc30 at #loc62))
#loc76 = loc(callsite(#loc31 at #loc62))
