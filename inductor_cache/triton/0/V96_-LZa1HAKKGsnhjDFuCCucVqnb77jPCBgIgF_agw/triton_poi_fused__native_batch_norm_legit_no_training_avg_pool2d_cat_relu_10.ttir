#loc = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<32768> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<30720> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<28672> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<26624> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<24576> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<9.99999974E-6> : tensor<256xf32> loc(#loc1)
    %cst_7 = arith.constant dense<2.500000e-01> : tensor<256xf32> loc(#loc1)
    %cst_8 = arith.constant dense<17> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<8192> : tensor<256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<128> : tensor<256xi32> loc(#loc1)
    %cst_15 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_16 = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_16 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_16 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_15 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_14 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_13 : tensor<256xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_13 : tensor<256xi32> loc(#loc11)
    %11 = arith.muli %5, %cst_12 : tensor<256xi32> loc(#loc12)
    %12 = arith.muli %6, %cst_11 : tensor<256xi32> loc(#loc13)
    %13 = arith.addi %11, %12 : tensor<256xi32> loc(#loc14)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %15 = tt.addptr %14, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %17 = arith.addi %11, %cst_10 : tensor<256xi32> loc(#loc17)
    %18 = arith.addi %17, %12 : tensor<256xi32> loc(#loc18)
    %19 = tt.addptr %14, %18 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %11, %cst_9 : tensor<256xi32> loc(#loc21)
    %22 = arith.addi %21, %12 : tensor<256xi32> loc(#loc22)
    %23 = tt.addptr %14, %22 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %25 = arith.addi %11, %cst_8 : tensor<256xi32> loc(#loc25)
    %26 = arith.addi %25, %12 : tensor<256xi32> loc(#loc26)
    %27 = tt.addptr %14, %26 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %30 = tt.addptr %29, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %31 = tt.load %30 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc31)
    %33 = tt.addptr %32, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc31)
    %34 = tt.load %33 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc32)
    %35 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc33)
    %36 = tt.addptr %35, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc33)
    %37 = tt.load %36 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc35)
    %39 = tt.addptr %38, %8 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %40 = tt.load %39 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc36)
    %41 = arith.addf %20, %16 : tensor<256xf32> loc(#loc37)
    %42 = arith.addf %24, %41 : tensor<256xf32> loc(#loc38)
    %43 = arith.addf %28, %42 : tensor<256xf32> loc(#loc39)
    %44 = arith.mulf %43, %cst_7 : tensor<256xf32> loc(#loc40)
    %45 = arith.subf %44, %31 : tensor<256xf32> loc(#loc41)
    %46 = arith.addf %34, %cst_6 : tensor<256xf32> loc(#loc42)
    %47 = tt.extern_elementwise %46 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc43)
    %48 = arith.divf %cst_0, %47 : tensor<256xf32> loc(#loc44)
    %49 = arith.mulf %45, %48 : tensor<256xf32> loc(#loc45)
    %50 = arith.mulf %49, %37 : tensor<256xf32> loc(#loc46)
    %51 = arith.addf %50, %40 : tensor<256xf32> loc(#loc47)
    %52 = arith.cmpf ogt, %cst, %51 : tensor<256xf32> loc(#loc76)
    %53 = arith.select %52, %cst, %51 : tensor<256xi1>, tensor<256xf32> loc(#loc77)
    %54 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc51)
    %55 = tt.addptr %54, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    tt.store %55, %44 : tensor<256x!tt.ptr<f32>> loc(#loc52)
    %56 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc53)
    %57 = tt.addptr %56, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc53)
    tt.store %57, %53 : tensor<256x!tt.ptr<f32>> loc(#loc54)
    %58 = arith.muli %9, %cst_5 : tensor<256xi32> loc(#loc55)
    %59 = arith.addi %10, %58 : tensor<256xi32> loc(#loc56)
    %60 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc57)
    %61 = tt.addptr %60, %59 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc57)
    tt.store %61, %44 : tensor<256x!tt.ptr<f32>> loc(#loc58)
    %62 = arith.muli %9, %cst_4 : tensor<256xi32> loc(#loc59)
    %63 = arith.addi %10, %62 : tensor<256xi32> loc(#loc60)
    %64 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc61)
    %65 = tt.addptr %64, %63 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc61)
    tt.store %65, %44 : tensor<256x!tt.ptr<f32>> loc(#loc62)
    %66 = arith.muli %9, %cst_3 : tensor<256xi32> loc(#loc63)
    %67 = arith.addi %10, %66 : tensor<256xi32> loc(#loc64)
    %68 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc65)
    %69 = tt.addptr %68, %67 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc65)
    tt.store %69, %44 : tensor<256x!tt.ptr<f32>> loc(#loc66)
    %70 = arith.muli %9, %cst_2 : tensor<256xi32> loc(#loc67)
    %71 = arith.addi %10, %70 : tensor<256xi32> loc(#loc68)
    %72 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc69)
    %73 = tt.addptr %72, %71 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc69)
    tt.store %73, %44 : tensor<256x!tt.ptr<f32>> loc(#loc70)
    %74 = arith.muli %9, %cst_1 : tensor<256xi32> loc(#loc71)
    %75 = arith.addi %10, %74 : tensor<256xi32> loc(#loc72)
    %76 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc73)
    %77 = tt.addptr %76, %75 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc73)
    tt.store %77, %44 : tensor<256x!tt.ptr<f32>> loc(#loc74)
    tt.return loc(#loc75)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":21:28)
#loc3 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":21:33)
#loc4 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":22:36)
#loc5 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":22:23)
#loc6 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":24:19)
#loc7 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":25:19)
#loc8 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":27:21)
#loc9 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":27:27)
#loc10 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":28:19)
#loc11 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":29:19)
#loc12 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":30:32)
#loc13 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":30:40)
#loc14 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":30:37)
#loc15 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":30:30)
#loc16 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":30:45)
#loc17 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":31:34)
#loc18 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":31:41)
#loc19 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":31:30)
#loc20 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":31:49)
#loc21 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":32:35)
#loc22 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":32:42)
#loc23 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":32:30)
#loc24 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":32:50)
#loc25 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":33:35)
#loc26 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":33:42)
#loc27 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":33:30)
#loc28 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":33:50)
#loc29 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":34:30)
#loc30 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":34:35)
#loc31 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":35:31)
#loc32 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":35:36)
#loc33 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":36:31)
#loc34 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":36:36)
#loc35 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":37:31)
#loc36 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":37:36)
#loc37 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":38:18)
#loc38 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":39:18)
#loc39 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":40:18)
#loc40 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":42:18)
#loc41 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":43:19)
#loc42 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":45:20)
#loc43 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":46:27)
#loc44 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":48:20)
#loc45 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":51:20)
#loc46 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":52:20)
#loc47 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":53:20)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc49 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":55:42)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc51 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":56:25)
#loc52 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":56:36)
#loc53 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":57:25)
#loc54 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":57:37)
#loc55 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":58:36)
#loc56 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":58:30)
#loc57 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":58:25)
#loc58 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":58:47)
#loc59 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":59:36)
#loc60 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":59:30)
#loc61 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":59:25)
#loc62 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":59:47)
#loc63 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":60:36)
#loc64 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":60:30)
#loc65 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":60:25)
#loc66 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":60:47)
#loc67 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":61:36)
#loc68 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":61:30)
#loc69 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":61:25)
#loc70 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":61:47)
#loc71 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":62:36)
#loc72 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":62:30)
#loc73 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":62:25)
#loc74 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":62:47)
#loc75 = loc("inductor_cache/7u/c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py":62:4)
#loc76 = loc(callsite(#loc48 at #loc49))
#loc77 = loc(callsite(#loc50 at #loc49))
