#loc = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clamp_div_log2_mul_neg_rsub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.999998986> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %11 = tt.load %10, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %12 = arith.cmpf ogt, %8, %cst_0 : tensor<256xf32> loc(#loc36)
    %13 = arith.cmpf une, %8, %8 : tensor<256xf32> loc(#loc37)
    %14 = arith.ori %12, %13 : tensor<256xi1> loc(#loc38)
    %15 = arith.select %14, %8, %cst_0 : tensor<256xi1>, tensor<256xf32> loc(#loc39)
    %16 = arith.cmpf olt, %15, %cst : tensor<256xf32> loc(#loc40)
    %17 = arith.cmpf une, %15, %15 : tensor<256xf32> loc(#loc41)
    %18 = arith.ori %16, %17 : tensor<256xi1> loc(#loc42)
    %19 = arith.select %18, %15, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc43)
    %20 = tt.extern_elementwise %19 {libname = "", libpath = "", pure = true, symbol = "__nv_log2f"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc21)
    %21 = arith.subf %cst_3, %20 : tensor<256xf32> loc(#loc22)
    %22 = arith.addf %11, %cst_2 : tensor<256xf32> loc(#loc23)
    %23 = arith.mulf %22, %cst_1 : tensor<256xf32> loc(#loc24)
    %24 = arith.mulf %21, %23 : tensor<256xf32> loc(#loc25)
    %25 = arith.subf %cst_2, %19 : tensor<256xf32> loc(#loc26)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_log2f"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc27)
    %27 = arith.subf %cst_3, %26 : tensor<256xf32> loc(#loc28)
    %28 = arith.subf %cst_2, %11 : tensor<256xf32> loc(#loc29)
    %29 = arith.mulf %28, %cst_1 : tensor<256xf32> loc(#loc30)
    %30 = arith.mulf %27, %29 : tensor<256xf32> loc(#loc31)
    %31 = arith.addf %24, %30 : tensor<256xf32> loc(#loc32)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc33)
    %33 = tt.addptr %32, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc33)
    tt.store %33, %31, %5 : tensor<256x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":21:28)
#loc3 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":21:33)
#loc4 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":22:36)
#loc5 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":22:23)
#loc6 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":23:21)
#loc7 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":25:30)
#loc8 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":25:35)
#loc9 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":26:30)
#loc10 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":26:35)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc12 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":28:40)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc17 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":30:40)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc21 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":31:26)
#loc22 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":32:12)
#loc23 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":34:18)
#loc24 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":36:19)
#loc25 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":37:19)
#loc26 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":38:19)
#loc27 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":39:27)
#loc28 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":40:13)
#loc29 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":41:19)
#loc30 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":42:20)
#loc31 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":43:20)
#loc32 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":44:20)
#loc33 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":45:25)
#loc34 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":45:37)
#loc35 = loc("inductor_cache/pl/cpldmb44u5hxhhcsxi6ag5p3vesz3qs5mvalwsmcsvlepiskjuxx.py":45:4)
#loc36 = loc(callsite(#loc11 at #loc12))
#loc37 = loc(callsite(#loc13 at #loc12))
#loc38 = loc(callsite(#loc14 at #loc12))
#loc39 = loc(callsite(#loc15 at #loc12))
#loc40 = loc(callsite(#loc16 at #loc17))
#loc41 = loc(callsite(#loc18 at #loc17))
#loc42 = loc(callsite(#loc19 at #loc17))
#loc43 = loc(callsite(#loc20 at #loc17))
