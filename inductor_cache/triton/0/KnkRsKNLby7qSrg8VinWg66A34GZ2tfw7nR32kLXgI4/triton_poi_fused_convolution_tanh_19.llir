; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %9 = shl i32 %8, 9, !dbg !13
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %11 = shl i32 %10, 2, !dbg !14
  %12 = and i32 %11, 508, !dbg !14
  %13 = or disjoint i32 %12, 1, !dbg !14
  %14 = or disjoint i32 %12, 2, !dbg !14
  %15 = or disjoint i32 %12, 3, !dbg !14
  %16 = or disjoint i32 %9, %12, !dbg !15
  %17 = or disjoint i32 %9, %13, !dbg !15
  %18 = or disjoint i32 %9, %14, !dbg !15
  %19 = or disjoint i32 %9, %15, !dbg !15
  %.frozen = freeze i32 %6, !dbg !16
  %20 = sdiv i32 %.frozen, 4, !dbg !16
  %21 = mul i32 %20, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %21, !dbg !17
  %22 = shl i32 %16, 2, !dbg !18
  %23 = shl i32 %17, 2, !dbg !18
  %24 = shl i32 %18, 2, !dbg !18
  %25 = shl i32 %19, 2, !dbg !18
  %26 = shl i32 %20, 14, !dbg !19
  %27 = add i32 %26, %.decomposed, !dbg !20
  %28 = add i32 %27, %22, !dbg !21
  %29 = add i32 %27, %23, !dbg !21
  %30 = add i32 %27, %24, !dbg !21
  %31 = add i32 %27, %25, !dbg !21
  %32 = sext i32 %28 to i64, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !22
  %34 = sext i32 %29 to i64, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !22
  %36 = sext i32 %30 to i64, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !22
  %38 = sext i32 %31 to i64, !dbg !22
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !22
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %7) #3, !dbg !23
  %41 = bitcast i32 %40 to float, !dbg !23
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %7) #3, !dbg !23
  %43 = bitcast i32 %42 to float, !dbg !23
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %7) #3, !dbg !23
  %45 = bitcast i32 %44 to float, !dbg !23
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %7) #3, !dbg !23
  %47 = bitcast i32 %46 to float, !dbg !23
  %48 = sext i32 %.decomposed to i64, !dbg !24
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !24
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #3, !dbg !25
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #3, !dbg !25
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #3, !dbg !25
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %7) #3, !dbg !25
  %54 = bitcast i32 %53 to float, !dbg !25
  %55 = fadd float %41, %54, !dbg !26
  %56 = fadd float %43, %54, !dbg !26
  %57 = fadd float %45, %54, !dbg !26
  %58 = fadd float %47, %54, !dbg !26
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i = icmp eq i32 %59, 0, !dbg !27
  %60 = tail call float @llvm.nvvm.fabs.ftz.f(float %55) #3, !dbg !27
  %61 = tail call float @llvm.nvvm.fabs.f(float %55) #3, !dbg !27
  %.01.i = select i1 %.not.i, float %61, float %60, !dbg !27
  %62 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !27
  br i1 %62, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !27

__internal_fmad.exit1.i:                          ; preds = %5
  %63 = fmul float %.01.i, 0x4007154760000000, !dbg !27
  %64 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %63) #3, !dbg !27
  %65 = fadd float %64, 1.000000e+00, !dbg !27
  %66 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %65) #4, !dbg !27, !srcloc !28
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i = icmp eq i32 %67, 0, !dbg !27
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %66, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %66, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i = select i1 %.not6.i, float %69, float %68, !dbg !27
  %70 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !27
  %s.0.i = select i1 %70, float 1.000000e+00, float %.03.i, !dbg !27
  %71 = bitcast float %s.0.i to i32, !dbg !27
  %72 = bitcast float %55 to i32, !dbg !27
  %73 = and i32 %72, -2147483648, !dbg !27
  %74 = or i32 %73, %71, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__internal_fmad.exit3.i:                          ; preds = %5
  %75 = fmul float %55, %55, !dbg !27
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i = icmp eq i32 %76, 0, !dbg !27
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %75, float 0xBFAAC795C0000000) #3, !dbg !27
  %78 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %75, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i = select i1 %.not1.i, float %78, float %77, !dbg !27
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i = icmp eq i32 %79, 0, !dbg !27
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %75, float 0x3FC10B2820000000) #3, !dbg !27
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %75, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i = select i1 %.not2.i, float %81, float %80, !dbg !27
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i = icmp eq i32 %82, 0, !dbg !27
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %75, float 0xBFD5553DA0000000) #3, !dbg !27
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %75, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i = select i1 %.not3.i, float %84, float %83, !dbg !27
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i = icmp eq i32 %85, 0, !dbg !27
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %75, float 0.000000e+00) #3, !dbg !27
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %75, float 0.000000e+00) #3, !dbg !27
  %.04.i = select i1 %.not4.i, float %87, float %86, !dbg !27
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i = icmp eq i32 %88, 0, !dbg !27
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %55, float %55) #3, !dbg !27
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %55, float %55) #3, !dbg !27
  %.02.i = select i1 %.not5.i, float %90, float %89, !dbg !27
  %91 = bitcast float %.02.i to i32, !dbg !29
  br label %__nv_tanhf.exit, !dbg !27

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi i32 [ %74, %__internal_fmad.exit1.i ], [ %91, %__internal_fmad.exit3.i ], !dbg !27
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i1 = icmp eq i32 %92, 0, !dbg !27
  %93 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #3, !dbg !27
  %94 = tail call float @llvm.nvvm.fabs.f(float %56) #3, !dbg !27
  %.01.i2 = select i1 %.not.i1, float %94, float %93, !dbg !27
  %95 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !27
  br i1 %95, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !27

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %96 = fmul float %.01.i2, 0x4007154760000000, !dbg !27
  %97 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %96) #3, !dbg !27
  %98 = fadd float %97, 1.000000e+00, !dbg !27
  %99 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %98) #4, !dbg !27, !srcloc !28
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i4 = icmp eq i32 %100, 0, !dbg !27
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %99, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %99, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i5 = select i1 %.not6.i4, float %102, float %101, !dbg !27
  %103 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !27
  %s.0.i6 = select i1 %103, float 1.000000e+00, float %.03.i5, !dbg !27
  %104 = bitcast float %s.0.i6 to i32, !dbg !27
  %105 = bitcast float %56 to i32, !dbg !27
  %106 = and i32 %105, -2147483648, !dbg !27
  %107 = or i32 %106, %104, !dbg !27
  br label %__nv_tanhf.exit19, !dbg !27

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %108 = fmul float %56, %56, !dbg !27
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i9 = icmp eq i32 %109, 0, !dbg !27
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %108, float 0xBFAAC795C0000000) #3, !dbg !27
  %111 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %108, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i10 = select i1 %.not1.i9, float %111, float %110, !dbg !27
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i11 = icmp eq i32 %112, 0, !dbg !27
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %108, float 0x3FC10B2820000000) #3, !dbg !27
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %108, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i12 = select i1 %.not2.i11, float %114, float %113, !dbg !27
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i13 = icmp eq i32 %115, 0, !dbg !27
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %108, float 0xBFD5553DA0000000) #3, !dbg !27
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %108, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i14 = select i1 %.not3.i13, float %117, float %116, !dbg !27
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i15 = icmp eq i32 %118, 0, !dbg !27
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %108, float 0.000000e+00) #3, !dbg !27
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %108, float 0.000000e+00) #3, !dbg !27
  %.04.i16 = select i1 %.not4.i15, float %120, float %119, !dbg !27
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i17 = icmp eq i32 %121, 0, !dbg !27
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %56, float %56) #3, !dbg !27
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %56, float %56) #3, !dbg !27
  %.02.i18 = select i1 %.not5.i17, float %123, float %122, !dbg !27
  %124 = bitcast float %.02.i18 to i32, !dbg !29
  br label %__nv_tanhf.exit19, !dbg !27

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi i32 [ %107, %__internal_fmad.exit1.i3 ], [ %124, %__internal_fmad.exit3.i8 ], !dbg !27
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i20 = icmp eq i32 %125, 0, !dbg !27
  %126 = tail call float @llvm.nvvm.fabs.ftz.f(float %57) #3, !dbg !27
  %127 = tail call float @llvm.nvvm.fabs.f(float %57) #3, !dbg !27
  %.01.i21 = select i1 %.not.i20, float %127, float %126, !dbg !27
  %128 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !27
  br i1 %128, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !27

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %129 = fmul float %.01.i21, 0x4007154760000000, !dbg !27
  %130 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %129) #3, !dbg !27
  %131 = fadd float %130, 1.000000e+00, !dbg !27
  %132 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %131) #4, !dbg !27, !srcloc !28
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i23 = icmp eq i32 %133, 0, !dbg !27
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i24 = select i1 %.not6.i23, float %135, float %134, !dbg !27
  %136 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !27
  %s.0.i25 = select i1 %136, float 1.000000e+00, float %.03.i24, !dbg !27
  %137 = bitcast float %s.0.i25 to i32, !dbg !27
  %138 = bitcast float %57 to i32, !dbg !27
  %139 = and i32 %138, -2147483648, !dbg !27
  %140 = or i32 %139, %137, !dbg !27
  br label %__nv_tanhf.exit38, !dbg !27

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %141 = fmul float %57, %57, !dbg !27
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i28 = icmp eq i32 %142, 0, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %141, float 0xBFAAC795C0000000) #3, !dbg !27
  %144 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %141, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i29 = select i1 %.not1.i28, float %144, float %143, !dbg !27
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i30 = icmp eq i32 %145, 0, !dbg !27
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %141, float 0x3FC10B2820000000) #3, !dbg !27
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %141, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i31 = select i1 %.not2.i30, float %147, float %146, !dbg !27
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i32 = icmp eq i32 %148, 0, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %141, float 0xBFD5553DA0000000) #3, !dbg !27
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %141, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i33 = select i1 %.not3.i32, float %150, float %149, !dbg !27
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i34 = icmp eq i32 %151, 0, !dbg !27
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %141, float 0.000000e+00) #3, !dbg !27
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %141, float 0.000000e+00) #3, !dbg !27
  %.04.i35 = select i1 %.not4.i34, float %153, float %152, !dbg !27
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i36 = icmp eq i32 %154, 0, !dbg !27
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %57, float %57) #3, !dbg !27
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %57, float %57) #3, !dbg !27
  %.02.i37 = select i1 %.not5.i36, float %156, float %155, !dbg !27
  %157 = bitcast float %.02.i37 to i32, !dbg !29
  br label %__nv_tanhf.exit38, !dbg !27

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi i32 [ %140, %__internal_fmad.exit1.i22 ], [ %157, %__internal_fmad.exit3.i27 ], !dbg !27
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i39 = icmp eq i32 %158, 0, !dbg !27
  %159 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #3, !dbg !27
  %160 = tail call float @llvm.nvvm.fabs.f(float %58) #3, !dbg !27
  %.01.i40 = select i1 %.not.i39, float %160, float %159, !dbg !27
  %161 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !27
  br i1 %161, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !27

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %162 = fmul float %.01.i40, 0x4007154760000000, !dbg !27
  %163 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %162) #3, !dbg !27
  %164 = fadd float %163, 1.000000e+00, !dbg !27
  %165 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %164) #4, !dbg !27, !srcloc !28
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i42 = icmp eq i32 %166, 0, !dbg !27
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %165, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %165, float -2.000000e+00, float 1.000000e+00) #3, !dbg !27
  %.03.i43 = select i1 %.not6.i42, float %168, float %167, !dbg !27
  %169 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !27
  %s.0.i44 = select i1 %169, float 1.000000e+00, float %.03.i43, !dbg !27
  %170 = bitcast float %s.0.i44 to i32, !dbg !27
  %171 = bitcast float %58 to i32, !dbg !27
  %172 = and i32 %171, -2147483648, !dbg !27
  %173 = or i32 %172, %170, !dbg !27
  br label %__nv_tanhf.exit57, !dbg !27

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %174 = fmul float %58, %58, !dbg !27
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i47 = icmp eq i32 %175, 0, !dbg !27
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %174, float 0xBFAAC795C0000000) #3, !dbg !27
  %177 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %174, float 0xBFAAC795C0000000) #3, !dbg !27
  %.06.i48 = select i1 %.not1.i47, float %177, float %176, !dbg !27
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i49 = icmp eq i32 %178, 0, !dbg !27
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %174, float 0x3FC10B2820000000) #3, !dbg !27
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %174, float 0x3FC10B2820000000) #3, !dbg !27
  %.05.i50 = select i1 %.not2.i49, float %180, float %179, !dbg !27
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i51 = icmp eq i32 %181, 0, !dbg !27
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %174, float 0xBFD5553DA0000000) #3, !dbg !27
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %174, float 0xBFD5553DA0000000) #3, !dbg !27
  %.0.i52 = select i1 %.not3.i51, float %183, float %182, !dbg !27
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i53 = icmp eq i32 %184, 0, !dbg !27
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %174, float 0.000000e+00) #3, !dbg !27
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %174, float 0.000000e+00) #3, !dbg !27
  %.04.i54 = select i1 %.not4.i53, float %186, float %185, !dbg !27
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i55 = icmp eq i32 %187, 0, !dbg !27
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %58, float %58) #3, !dbg !27
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %58, float %58) #3, !dbg !27
  %.02.i56 = select i1 %.not5.i55, float %189, float %188, !dbg !27
  %190 = bitcast float %.02.i56 to i32, !dbg !29
  br label %__nv_tanhf.exit57, !dbg !27

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi i32 [ %173, %__internal_fmad.exit1.i41 ], [ %190, %__internal_fmad.exit3.i46 ], !dbg !27
  %191 = shl i32 %6, 12, !dbg !30
  %192 = add i32 %16, %191, !dbg !31
  %193 = sext i32 %192 to i64, !dbg !32
  %194 = getelementptr float, ptr addrspace(1) %2, i64 %193, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i, i32 %s.1.i7, i32 %s.1.i26, i32 %s.1.i45, ptr addrspace(1) %194, i1 %7) #3, !dbg !29
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccz4uljlxfrhzf5d7xrydaiqb2hczln5eggdlkv362ps3jrmbrry.py", directory: "inductor_cache/cz")
!4 = !{ptr @triton_poi_fused_convolution_tanh_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_19", linkageName: "triton_poi_fused_convolution_tanh_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 30, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 37, scope: !7)
!19 = !DILocation(line: 32, column: 48, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 33, column: 30, scope: !7)
!25 = !DILocation(line: 33, column: 35, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 26, scope: !7)
!28 = !{i32 21046}
!29 = !DILocation(line: 36, column: 46, scope: !7)
!30 = !DILocation(line: 36, column: 35, scope: !7)
!31 = !DILocation(line: 36, column: 30, scope: !7)
!32 = !DILocation(line: 36, column: 25, scope: !7)
!33 = !DILocation(line: 36, column: 4, scope: !7)
