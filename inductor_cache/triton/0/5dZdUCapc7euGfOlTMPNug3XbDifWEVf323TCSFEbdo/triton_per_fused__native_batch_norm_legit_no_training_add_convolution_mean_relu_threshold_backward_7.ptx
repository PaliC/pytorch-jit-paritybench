//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_10
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<82>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_0];
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_1];
$L__tmp0:
	.loc	1 24 28                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_2];
	.loc	1 27 26                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:27:26
	mov.u32 	%r48, %tid.x;
	shl.b32 	%r49, %r48, 2;
	ld.param.u64 	%rd29, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_3];
	and.b32  	%r50, %r49, 252;
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_4];
	.loc	1 32 19                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:32:19
	shr.s32 	%r51, %r1, 31;
	shr.u32 	%r52, %r51, 26;
	add.s32 	%r53, %r1, %r52;
	and.b32  	%r54, %r53, -64;
	sub.s32 	%r55, %r1, %r54;
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_5];
	.loc	1 33 43                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:33:43
	shl.b32 	%r56, %r1, 8;
	ld.param.u64 	%rd32, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_6];
	.loc	1 33 39                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:33:39
	or.b32  	%r57, %r56, %r50;
	ld.param.u64 	%rd33, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_7];
	.loc	1 33 34                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:33:34
	cvt.s64.s32 	%rd34, %r57;
	ld.param.u64 	%rd35, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_threshold_backward_7_param_8];
	mul.wide.s32 	%rd36, %r57, 4;
	add.s64 	%rd1, %rd26, %rd36;
	mov.pred 	%p1, -1;
	.loc	1 33 48                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:33:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:34:30
	mul.wide.s32 	%rd37, %r55, 4;
	add.s64 	%rd2, %rd28, %rd37;
	.loc	1 34 35                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:35:30
	add.s64 	%rd6, %rd29, %rd37;
	.loc	1 35 35                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:35:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:36:30
	add.s64 	%rd10, %rd30, %rd37;
	.loc	1 36 35                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:36:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 37 31                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:37:31
	add.s64 	%rd14, %rd31, %rd37;
	.loc	1 37 36                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:37:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:38:31
	add.s64 	%rd18, %rd32, %rd37;
	.loc	1 38 36                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:38:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:39:31
	add.s64 	%rd22, %rd33, %rd36;
	.loc	1 39 45                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:39:45
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 43 18                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:43:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 44 26                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:44:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 27 26                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:27:26
	and.b32  	%r58, %r48, 31;
	.loc	1 46 19                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:46:19
	mov.b32 	%r32, %f3;
	mov.b32 	%r31, 1065353216;
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f4, %r30;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p23, %r58, 0;
	shr.u32 	%r59, %r48, 3;
	and.b32  	%r60, %r59, 4;
	mov.u32 	%r61, global_smem;
	add.s32 	%r33, %r61, %r60;
	setp.lt.s32 	%p24, %r48, 2;
	add.s32 	%r36, %r61, %r49;
	and.b32  	%r62, %r48, 1;
	setp.eq.b32 	%p29, %r62, 1;
	not.pred 	%p30, %p29;
	and.pred  	%p25, %p24, %p30;
$L__tmp2:
	.loc	1 62 25                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:62:25
	add.s64 	%rd24, %rd35, %rd34;
	.loc	1 33 48                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:33:48
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	mov.b32 	%f7, %r4;
	mov.b32 	%f8, %r5;
	.loc	1 40 18                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:40:18
	mov.b32 	%f9, %r9;
	add.f32 	%f10, %f9, %f8;
	add.f32 	%f11, %f9, %f7;
	add.f32 	%f12, %f9, %f6;
	add.f32 	%f13, %f9, %f5;
	.loc	1 41 18                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:41:18
	mov.b32 	%f14, %r13;
	sub.f32 	%f15, %f13, %f14;
	sub.f32 	%f16, %f12, %f14;
	sub.f32 	%f17, %f11, %f14;
	sub.f32 	%f18, %f10, %f14;
	.loc	1 39 45                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:39:45
	mov.b32 	%f19, %r26;
	mov.b32 	%f20, %r27;
	mov.b32 	%f21, %r28;
	mov.b32 	%f22, %r29;
	.loc	1 49 19                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:49:19
	mul.f32 	%f23, %f18, %f4;
	mul.f32 	%f24, %f17, %f4;
	mul.f32 	%f25, %f16, %f4;
	mul.f32 	%f26, %f15, %f4;
	.loc	1 50 20                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:50:20
	mov.b32 	%f27, %r21;
	.loc	1 51 20                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:51:20
	mov.b32 	%f28, %r25;
	fma.rn.f32 	%f29, %f26, %f27, %f28;
	fma.rn.f32 	%f30, %f25, %f27, %f28;
	fma.rn.f32 	%f31, %f24, %f27, %f28;
	fma.rn.f32 	%f32, %f23, %f27, %f28;
	.loc	1 52 20                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:52:20
	add.f32 	%f33, %f32, %f22;
	add.f32 	%f34, %f31, %f21;
	add.f32 	%f35, %f30, %f20;
	add.f32 	%f36, %f29, %f19;
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f36, 0f00000000;
	setp.lt.f32 	%p32, %f35, 0f00000000;
	setp.lt.f32 	%p33, %f34, 0f00000000;
	setp.lt.f32 	%p34, %f33, 0f00000000;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, 0f00000000, %f33, %p34;
	selp.f32 	%f38, 0f00000000, %f34, %p33;
	selp.f32 	%f39, 0f00000000, %f35, %p32;
	selp.f32 	%f40, 0f00000000, %f36, %p31;
$L__tmp4:
	.loc	1 56 21                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:56:21
	setp.le.f32 	%p35, %f40, 0f00000000;
	setp.le.f32 	%p36, %f39, 0f00000000;
	setp.le.f32 	%p37, %f38, 0f00000000;
	setp.le.f32 	%p38, %f37, 0f00000000;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f40, %f39;
	add.f32 	%f42, %f38, %f41;
	add.f32 	%f43, %f37, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f43;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f44, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f45;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f46, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f47;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f48, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f49;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	mov.b32 	%f50, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f51;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f52, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f53;
	// begin inline asm
	@%p23 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p24 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r35;
	shfl.sync.bfly.b32	%r73, %r35, 1, 31, -1;
	mov.b32 	%f55, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f56;
	// begin inline asm
	@%p25 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f57, [global_smem];
$L__tmp6:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f58, %f57, 0f00000000;
$L__tmp7:
	.loc	1 60 20                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:60:20
	mov.b32 	%r40, %f58;
	mov.b32 	%r41, 1132462080;
	// begin inline asm
	div.full.f32 %r47, %r40, %r41;
	// end inline asm
	.loc	1 61 48                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:61:48
	mov.b32 	%r42, %f13;
	mov.b32 	%r43, %f12;
	mov.b32 	%r44, %f11;
	mov.b32 	%r45, %f10;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	.loc	1 62 46                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:62:46
	selp.u32 	%r74, 1, 0, %p38;
	selp.u32 	%r75, 1, 0, %p37;
	prmt.b32 	%r76, %r75, %r74, 0x3340U;
	selp.u32 	%r77, 1, 0, %p36;
	selp.u32 	%r78, 1, 0, %p35;
	prmt.b32 	%r79, %r78, %r77, 0x3340U;
	prmt.b32 	%r80, %r79, %r76, 0x5410U;
	// begin inline asm
	@%p1 st.global.b32 [ %rd24 + 0 ], { %r80 };
	// end inline asm
	.loc	1 63 4                          // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:63:4
	bar.sync 	0;
	.loc	1 64 28                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:64:28
	mul.wide.s32 	%rd38, %r1, 4;
	add.s64 	%rd25, %rd27, %rd38;
	.loc	1 64 40                         // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:64:40
	and.b32  	%r81, %r48, 63;
	setp.eq.s32 	%p28, %r81, 0;
	// begin inline asm
	@%p28 st.global.b32 [ %rd25 + 0 ], { %r47 };
	// end inline asm
	.loc	1 64 4                          // cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py:64:4
	ret;
$L__tmp8:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dg/cdg46vnuarylry366loccbgayclpi2lfmcoosyuwwudtg4r5ehov.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 293                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 103
.b8 52
.b8 54
.b8 118
.b8 110
.b8 117
.b8 97
.b8 114
.b8 121
.b8 108
.b8 114
.b8 121
.b8 51
.b8 54
.b8 54
.b8 108
.b8 111
.b8 99
.b8 99
.b8 98
.b8 103
.b8 97
.b8 121
.b8 99
.b8 108
.b8 112
.b8 105
.b8 50
.b8 108
.b8 102
.b8 109
.b8 99
.b8 111
.b8 111
.b8 115
.b8 121
.b8 117
.b8 119
.b8 119
.b8 117
.b8 100
.b8 116
.b8 103
.b8 52
.b8 114
.b8 53
.b8 101
.b8 104
.b8 111
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x67 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xca:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xdf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
