; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 1024, !dbg !14
  %13 = srem i32 %12, 128, !dbg !15
  %14 = mul i32 %12, 1024, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %.frozen4 = freeze i32 %11, !dbg !17
  %15 = sdiv i32 %.frozen4, 131072, !dbg !17
  %16 = sext i32 %11 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !19
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %22 = bitcast i32 %20 to float, !dbg !19
  %23 = icmp slt i32 %13, 64, !dbg !20
  %24 = mul i32 %15, 131072, !dbg !21
  %srem.decomposed = sub i32 %.frozen4, %24, !dbg !21
  %25 = shl nsw i32 %15, 16, !dbg !22
  %26 = add nsw i32 %25, %srem.decomposed, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 %23, i32 0, i1 %23, i32 0, i1 %23) #1, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %32 = and i32 %13, -32, !dbg !26
  %33 = icmp eq i32 %32, 64, !dbg !26
  %34 = shl nsw i32 %13, 10, !dbg !27
  %35 = shl nsw i32 %15, 15, !dbg !28
  %36 = add nsw i32 %35, %.decomposed, !dbg !27
  %37 = add nsw i32 %36, -65536, !dbg !29
  %38 = add nsw i32 %37, %34, !dbg !30
  %39 = sext i32 %38 to i64, !dbg !31
  %40 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !31
  %41 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %40, i1 %33, i32 0, i1 %33, i32 0, i1 %33) #1, !dbg !32
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !32
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !32
  %44 = icmp sgt i32 %13, 95, !dbg !33
  %45 = add nsw i32 %36, -98304, !dbg !34
  %46 = add nsw i32 %45, %34, !dbg !35
  %47 = sext i32 %46 to i64, !dbg !36
  %48 = getelementptr float, ptr addrspace(1) %3, i64 %47, !dbg !36
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %48, i1 %44, i32 0, i1 %44, i32 0, i1 %44) #1, !dbg !37
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !37
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !37
  %.v = select i1 %33, i32 %42, i32 %50, !dbg !38
  %.v1 = select i1 %33, i32 %43, i32 %51, !dbg !38
  %.v2 = select i1 %23, i32 %30, i32 %.v, !dbg !39
  %52 = bitcast i32 %.v2 to float, !dbg !39
  %.v3 = select i1 %23, i32 %31, i32 %.v1, !dbg !39
  %53 = bitcast i32 %.v3 to float, !dbg !39
  %54 = fadd float %21, %52, !dbg !40
  %55 = fadd float %22, %53, !dbg !40
  %56 = bitcast float %54 to i32, !dbg !41
  %57 = bitcast float %55 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %56, i32 %57, ptr addrspace(1) %17, i1 true) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6dkrtzriiiibq2xvrrjsnp35xafoem3lmnaqdasly4jmsjtnpm7.py", directory: "inductor_cache/6d")
!4 = !{ptr @triton_poi_fused_add_cat_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_6, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_6", linkageName: "triton_poi_fused_add_cat_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 29, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 40, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 53, scope: !7)
!23 = !DILocation(line: 34, column: 47, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 58, scope: !7)
!26 = !DILocation(line: 38, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 42, scope: !7)
!28 = !DILocation(line: 39, column: 62, scope: !7)
!29 = !DILocation(line: 39, column: 36, scope: !7)
!30 = !DILocation(line: 39, column: 56, scope: !7)
!31 = !DILocation(line: 39, column: 31, scope: !7)
!32 = !DILocation(line: 39, column: 67, scope: !7)
!33 = !DILocation(line: 40, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 36, scope: !7)
!35 = !DILocation(line: 43, column: 56, scope: !7)
!36 = !DILocation(line: 43, column: 31, scope: !7)
!37 = !DILocation(line: 43, column: 67, scope: !7)
!38 = !DILocation(line: 44, column: 34, scope: !7)
!39 = !DILocation(line: 45, column: 33, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 47, column: 40, scope: !7)
!42 = !DILocation(line: 47, column: 4, scope: !7)
