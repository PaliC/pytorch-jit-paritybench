; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_cat_mean_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %.frozen = freeze i32 %6, !dbg !13
  %10 = sdiv i32 %.frozen, 4, !dbg !13
  %11 = mul i32 %10, 4, !dbg !14
  %.decomposed = sub i32 %.frozen, %11, !dbg !14
  %12 = shl i32 %6, 4, !dbg !15
  %13 = or disjoint i32 %12, %9, !dbg !16
  %14 = sext i32 %13 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %7, i32 0, i1 %7) #2, !dbg !18
  %17 = bitcast i32 %16 to float, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %7, i32 0, i1 %7) #2, !dbg !18
  %19 = select i1 %7, float %17, float 0.000000e+00, !dbg !19
  %20 = bitcast float %19 to i32, !dbg !20
  %21 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %20, i32 8, i32 31), !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = fadd float %19, %22, !dbg !24
  %24 = bitcast float %23 to i32, !dbg !20
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 4, i32 31), !dbg !20
  %26 = bitcast i32 %25 to float, !dbg !20
  %27 = fadd float %23, %26, !dbg !24
  %28 = bitcast float %27 to i32, !dbg !20
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 2, i32 31), !dbg !20
  %30 = bitcast i32 %29 to float, !dbg !20
  %31 = fadd float %27, %30, !dbg !24
  %32 = bitcast float %31 to i32, !dbg !20
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 1, i32 31), !dbg !20
  %34 = bitcast i32 %33 to float, !dbg !20
  %35 = fadd float %31, %34, !dbg !24
  %36 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float 1.600000e+01) #2, !dbg !26
  %37 = shl nsw i32 %.decomposed, 4, !dbg !27
  %38 = or disjoint i32 %37, %9, !dbg !28
  %39 = mul i32 %10, 84, !dbg !29
  %40 = add i32 %38, %39, !dbg !30
  %41 = sext i32 %40 to i64, !dbg !31
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !31
  %43 = and i32 %8, 48, !dbg !32
  %44 = icmp eq i32 %43, 0, !dbg !32
  %45 = and i1 %44, %7, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %18, ptr addrspace(1) %42, i1 %45) #2, !dbg !32
  %46 = add i32 %39, %.decomposed, !dbg !33
  %47 = sext i32 %46 to i64, !dbg !34
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !34
  %urem = and i32 %8, 63, !dbg !35
  %49 = icmp eq i32 %urem, 0, !dbg !35
  %50 = bitcast float %36 to i32, !dbg !35
  %51 = and i1 %49, %7, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %50, ptr addrspace(1) %48, i1 %51) #2, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cttct6twwzvpihrjr3qx6fmt2k5xaflizqzkgviqasiwzbw45wgx.py", directory: "inductor_cache/tt")
!4 = !{ptr @triton_per_fused_cat_mean_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_cat_mean_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_cat_mean_0", linkageName: "triton_per_fused_cat_mean_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 32, column: 19, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 38, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 30, scope: !7)
!18 = !DILocation(line: 33, column: 43, scope: !7)
!19 = !DILocation(line: 35, column: 33, scope: !7)
!20 = !DILocation(line: 267, column: 36, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!23 = !DILocation(line: 36, column: 24, scope: !7)
!24 = !DILocation(line: 256, column: 15, scope: !25, inlinedAt: !23)
!25 = distinct !DILexicalBlockFile(scope: !21, file: !22, discriminator: 0)
!26 = !DILocation(line: 38, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 33, scope: !7)
!28 = !DILocation(line: 39, column: 30, scope: !7)
!29 = !DILocation(line: 39, column: 41, scope: !7)
!30 = !DILocation(line: 39, column: 38, scope: !7)
!31 = !DILocation(line: 39, column: 25, scope: !7)
!32 = !DILocation(line: 39, column: 52, scope: !7)
!33 = !DILocation(line: 40, column: 30, scope: !7)
!34 = !DILocation(line: 40, column: 25, scope: !7)
!35 = !DILocation(line: 40, column: 44, scope: !7)
!36 = !DILocation(line: 40, column: 4, scope: !7)
