//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<56>;
	.reg .b32 	%r<209>;
	.reg .f32 	%f<85>;
	.reg .b64 	%rd<85>;
	.loc	1 19 0                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd45, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_0];
	ld.param.u64 	%rd46, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:22:33
	shl.b32 	%r95, %r1, 6;
	ld.param.u64 	%rd47, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_2];
	ld.param.u64 	%rd48, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_3];
	.loc	1 23 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:23:44
	mov.u32 	%r96, %tid.x;
	shr.u32 	%r97, %r96, 2;
	ld.param.u64 	%rd49, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_4];
	bfe.u32 	%r98, %r96, 2, 2;
	ld.param.u64 	%rd50, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_5];
	and.b32  	%r99, %r96, 16;
	ld.param.u64 	%rd51, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_6];
	ld.param.u64 	%rd52, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_7];
	ld.param.u64 	%rd53, [triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_relu_7_param_8];
	and.b32  	%r100, %r96, 32;
	and.b32  	%r101, %r96, 64;
	or.b32  	%r102, %r100, %r101;
	or.b32  	%r103, %r99, %r102;
	shr.u32 	%r104, %r103, 2;
	or.b32  	%r105, %r104, %r98;
	shl.b32 	%r106, %r96, 2;
	and.b32  	%r107, %r106, 12;
	and.b32  	%r108, %r106, 60;
	.loc	1 23 23                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:23:23
	or.b32  	%r109, %r95, %r105;
	or.b32  	%r110, %r109, 32;
	or.b32  	%r111, %r95, %r108;
	.loc	1 24 21                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:24:21
	setp.lt.s32 	%p45, %r109, 512;
	setp.lt.s32 	%p46, %r110, 512;
	setp.lt.s32 	%p17, %r111, 512;
	.loc	1 25 28                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:25:33
	shl.b32 	%r112, %r2, 4;
	.loc	1 26 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:26:44
	or.b32  	%r113, %r99, %r101;
	or.b32  	%r114, %r113, %r100;
	shr.u32 	%r115, %r114, 4;
	.loc	1 26 23                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:26:23
	or.b32  	%r116, %r112, %r115;
	or.b32  	%r117, %r116, 8;
	or.b32  	%r118, %r112, %r107;
	.loc	1 27 21                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:27:21
	setp.lt.s32 	%p1, %r116, 16;
	setp.lt.s32 	%p5, %r117, 16;
	setp.lt.s32 	%p47, %r118, 16;
	.loc	1 28 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:28:19
	shr.s32 	%r120, %r116, 31;
	shr.u32 	%r121, %r120, 30;
	add.s32 	%r122, %r116, %r121;
	shr.s32 	%r123, %r122, 2;
	bfe.s32 	%r124, %r2, 27, 1;
	shr.u32 	%r125, %r124, 30;
	add.s32 	%r126, %r117, %r125;
	shr.s32 	%r127, %r126, 2;
	.loc	1 29 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:29:19
	and.b32  	%r128, %r122, -4;
	sub.s32 	%r129, %r116, %r128;
	.loc	1 31 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:31:19
	shr.s32 	%r131, %r111, 31;
	shr.u32 	%r132, %r131, 25;
	add.s32 	%r133, %r111, %r132;
	.loc	1 30 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:30:19
	and.b32  	%r134, %r133, -128;
	sub.s32 	%r135, %r111, %r134;
	.loc	1 34 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:34:30
	mul.wide.s32 	%rd54, %r123, 8;
	add.s64 	%rd2, %rd45, %rd54;
	mul.wide.s32 	%rd55, %r127, 8;
	add.s64 	%rd10, %rd45, %rd55;
	.loc	1 34 35                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:34:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:35:30
	mul.wide.s32 	%rd56, %r129, 8;
	add.s64 	%rd18, %rd45, %rd56;
	.loc	1 35 35                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:35:35
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd19 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd21 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd23 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd27 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd29 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd31 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:36:31
	mul.wide.s32 	%rd57, %r135, 4;
	add.s64 	%rd33, %rd47, %rd57;
	.loc	1 36 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:36:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:37:31
	add.s64 	%rd34, %rd48, %rd57;
	.loc	1 37 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:37:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd34 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	mov.b32 	%f2, %r8;
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 38 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:38:31
	add.s64 	%rd35, %rd49, %rd57;
	.loc	1 38 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:38:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:39:31
	add.s64 	%rd36, %rd50, %rd57;
	.loc	1 39 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:39:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 40 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:39
	shl.b32 	%r136, %r109, 4;
	shl.b32 	%r137, %r110, 4;
	.loc	1 40 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:36
	add.s32 	%r138, %r118, %r136;
	add.s32 	%r139, %r118, %r137;
	.loc	1 40 31                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:31
	mul.wide.s32 	%rd58, %r138, 4;
	add.s64 	%rd37, %rd51, %rd58;
	mul.wide.s32 	%rd59, %r139, 4;
	add.s64 	%rd38, %rd51, %rd59;
	.loc	1 40 52                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:52
	and.pred  	%p21, %p45, %p47;
	and.pred  	%p22, %p46, %p47;
	and.pred  	%p31, %p17, %p1;
	and.pred  	%p32, %p5, %p17;
	.loc	1 40 44                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:40:44
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd38 + 0 ];
	// end inline asm
	shl.b32 	%r140, %r96, 8;
	and.b32  	%r141, %r140, 768;
	or.b32  	%r142, %r105, %r141;
	and.b32  	%r143, %r106, 508;
	shr.u32 	%r144, %r141, 4;
	add.s32 	%r145, %r142, %r144;
	shl.b32 	%r146, %r145, 2;
	mov.u32 	%r147, global_smem;
	add.s32 	%r27, %r147, %r146;
	mov.pred 	%p23, -1;
	// begin inline asm
	@%p23 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r148, %r141, 64;
	shr.u32 	%r149, %r148, 4;
	add.s32 	%r150, %r149, %r142;
	shl.b32 	%r151, %r150, 2;
	add.s32 	%r152, %r147, %r151;
	add.s32 	%r29, %r152, 256;
	// begin inline asm
	@%p23 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	or.b32  	%r153, %r141, 128;
	shr.u32 	%r154, %r153, 4;
	add.s32 	%r155, %r154, %r142;
	shl.b32 	%r156, %r155, 2;
	add.s32 	%r157, %r147, %r156;
	add.s32 	%r31, %r157, 512;
	// begin inline asm
	@%p23 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	or.b32  	%r158, %r141, 192;
	shr.u32 	%r159, %r158, 4;
	add.s32 	%r160, %r159, %r142;
	shl.b32 	%r161, %r160, 2;
	add.s32 	%r162, %r147, %r161;
	add.s32 	%r33, %r162, 768;
	// begin inline asm
	@%p23 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r27, 128;
	// begin inline asm
	@%p23 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r152, 384;
	// begin inline asm
	@%p23 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r157, 640;
	// begin inline asm
	@%p23 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r162, 896;
	// begin inline asm
	@%p23 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r163, %r97, 28;
	add.s32 	%r164, %r163, %r143;
	shl.b32 	%r165, %r164, 2;
	add.s32 	%r166, %r147, %r165;
	ld.shared.v4.f32 	{%f5, %f6, %f7, %f8}, [%r166];
	or.b32  	%r167, %r143, 512;
	shr.u32 	%r168, %r167, 4;
	and.b32  	%r169, %r168, 60;
	add.s32 	%r170, %r169, %r143;
	shl.b32 	%r171, %r170, 2;
	add.s32 	%r172, %r147, %r171;
	ld.shared.v4.f32 	{%f9, %f10, %f11, %f12}, [%r172+2048];
	.loc	1 44 32                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:44:32
	shr.u64 	%rd60, %rd7, 61;
	and.b64  	%rd61, %rd60, 4;
	add.s64 	%rd62, %rd61, %rd7;
	shr.u64 	%rd63, %rd15, 61;
	and.b64  	%rd64, %rd63, 4;
	add.s64 	%rd65, %rd64, %rd15;
	.loc	1 47 32                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:47:32
	shr.u64 	%rd66, %rd23, 61;
	and.b64  	%rd67, %rd66, 4;
	add.s64 	%rd68, %rd67, %rd23;
	shr.u64 	%rd69, %rd31, 61;
	and.b64  	%rd70, %rd69, 4;
	add.s64 	%rd71, %rd70, %rd31;
	.loc	1 48 62                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:62
	shl.b32 	%r173, %r133, 4;
	and.b32  	%r174, %r173, -2048;
	.loc	1 48 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:30
	shl.b64 	%rd72, %rd68, 9;
	add.s64 	%rd73, %rd46, %rd72;
	add.s64 	%rd74, %rd73, %rd57;
	shl.b64 	%rd75, %rd62, 11;
	add.s64 	%rd76, %rd74, %rd75;
	mul.wide.s32 	%rd77, %r174, 4;
	add.s64 	%rd39, %rd76, %rd77;
	shl.b64 	%rd78, %rd71, 9;
	add.s64 	%rd79, %rd46, %rd78;
	add.s64 	%rd80, %rd79, %rd57;
	shl.b64 	%rd81, %rd65, 11;
	add.s64 	%rd82, %rd80, %rd81;
	add.s64 	%rd40, %rd82, %rd77;
	.loc	1 48 67                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:67
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p31 ld.global.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p32 ld.global.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 51 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:51:20
	add.f32 	%f13, %f1, 0f3727C5AC;
	add.f32 	%f14, %f2, 0f3727C5AC;
	add.f32 	%f15, %f3, 0f3727C5AC;
	add.f32 	%f16, %f4, 0f3727C5AC;
	.loc	1 52 27                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:52:27
	sqrt.approx.ftz.f32 	%f17, %f13;
	sqrt.approx.ftz.f32 	%f18, %f14;
	sqrt.approx.ftz.f32 	%f19, %f15;
	sqrt.approx.ftz.f32 	%f20, %f16;
	.loc	1 54 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:54:20
	mov.b32 	%r53, %f17;
	mov.b32 	%r52, 1065353216;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f21, %r51;
	mov.b32 	%r56, %f18;
	// begin inline asm
	div.full.f32 %r54, %r52, %r56;
	// end inline asm
	mov.b32 	%f22, %r54;
	mov.b32 	%r59, %f19;
	// begin inline asm
	div.full.f32 %r57, %r52, %r59;
	// end inline asm
	mov.b32 	%f23, %r57;
	mov.b32 	%r62, %f20;
	// begin inline asm
	div.full.f32 %r60, %r52, %r62;
	// end inline asm
	mov.b32 	%f24, %r60;
	.loc	1 36 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:36:36
	mov.b32 	%f25, %r6;
	mov.b32 	%f26, %r5;
	mov.b32 	%f27, %r4;
	mov.b32 	%f28, %r3;
	.loc	1 48 67                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:48:67
	mov.b32 	%f29, %r50;
	mov.b32 	%f30, %r49;
	mov.b32 	%f31, %r48;
	mov.b32 	%f32, %r47;
	mov.b32 	%f33, %r46;
	mov.b32 	%f34, %r45;
	mov.b32 	%f35, %r44;
	mov.b32 	%f36, %r43;
	.loc	1 49 19                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:49:19
	sub.f32 	%f37, %f36, %f28;
	sub.f32 	%f38, %f35, %f27;
	sub.f32 	%f39, %f34, %f26;
	sub.f32 	%f40, %f33, %f25;
	sub.f32 	%f41, %f32, %f28;
	sub.f32 	%f42, %f31, %f27;
	sub.f32 	%f43, %f30, %f26;
	sub.f32 	%f44, %f29, %f25;
	.loc	1 39 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:39:36
	mov.b32 	%f45, %r18;
	mov.b32 	%f46, %r17;
	mov.b32 	%f47, %r16;
	mov.b32 	%f48, %r15;
	.loc	1 38 36                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:38:36
	mov.b32 	%f49, %r14;
	mov.b32 	%f50, %r13;
	mov.b32 	%f51, %r12;
	mov.b32 	%f52, %r11;
	.loc	1 57 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:57:20
	mul.f32 	%f53, %f44, %f24;
	mul.f32 	%f54, %f43, %f23;
	mul.f32 	%f55, %f42, %f22;
	mul.f32 	%f56, %f41, %f21;
	mul.f32 	%f57, %f40, %f24;
	mul.f32 	%f58, %f39, %f23;
	mul.f32 	%f59, %f38, %f22;
	mul.f32 	%f60, %f37, %f21;
	.loc	1 59 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:59:20
	fma.rn.f32 	%f61, %f60, %f52, %f48;
	fma.rn.f32 	%f62, %f59, %f51, %f47;
	fma.rn.f32 	%f63, %f58, %f50, %f46;
	fma.rn.f32 	%f64, %f57, %f49, %f45;
	fma.rn.f32 	%f65, %f56, %f52, %f48;
	fma.rn.f32 	%f66, %f55, %f51, %f47;
	fma.rn.f32 	%f67, %f54, %f50, %f46;
	fma.rn.f32 	%f68, %f53, %f49, %f45;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p48, %f68, 0f00000000;
	setp.lt.f32 	%p49, %f67, 0f00000000;
	setp.lt.f32 	%p50, %f66, 0f00000000;
	setp.lt.f32 	%p51, %f65, 0f00000000;
	setp.lt.f32 	%p52, %f64, 0f00000000;
	setp.lt.f32 	%p53, %f63, 0f00000000;
	setp.lt.f32 	%p54, %f62, 0f00000000;
	setp.lt.f32 	%p55, %f61, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f69, 0f00000000, %f61, %p55;
	selp.f32 	%f70, 0f00000000, %f62, %p54;
	selp.f32 	%f71, 0f00000000, %f63, %p53;
	selp.f32 	%f72, 0f00000000, %f64, %p52;
	selp.f32 	%f73, 0f00000000, %f65, %p51;
	selp.f32 	%f74, 0f00000000, %f66, %p50;
	selp.f32 	%f75, 0f00000000, %f67, %p49;
	selp.f32 	%f76, 0f00000000, %f68, %p48;
$L__tmp2:
	.loc	1 62 20                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:62:20
	add.f32 	%f77, %f5, %f69;
	add.f32 	%f78, %f6, %f70;
	add.f32 	%f79, %f7, %f71;
	add.f32 	%f80, %f8, %f72;
	add.f32 	%f81, %f9, %f73;
	add.f32 	%f82, %f10, %f74;
	add.f32 	%f83, %f11, %f75;
	add.f32 	%f84, %f12, %f76;
	.loc	1 63 25                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:63:25
	add.s64 	%rd41, %rd52, %rd58;
	add.s64 	%rd42, %rd52, %rd59;
	.loc	1 63 45                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:63:45
	bar.sync 	0;
	shl.b32 	%r175, %r96, 6;
	and.b32  	%r176, %r175, 960;
	or.b32  	%r177, %r115, %r176;
	shr.u32 	%r178, %r176, 4;
	add.s32 	%r179, %r177, %r178;
	shl.b32 	%r180, %r179, 2;
	add.s32 	%r63, %r147, %r180;
	mov.b32 	%r64, %f69;
	// begin inline asm
	@%p23 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	or.b32  	%r181, %r176, 16;
	shr.u32 	%r182, %r181, 4;
	add.s32 	%r183, %r182, %r177;
	shl.b32 	%r184, %r183, 2;
	add.s32 	%r185, %r147, %r184;
	add.s32 	%r65, %r185, 64;
	mov.b32 	%r66, %f70;
	// begin inline asm
	@%p23 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	or.b32  	%r186, %r176, 32;
	shr.u32 	%r187, %r186, 4;
	add.s32 	%r188, %r187, %r177;
	shl.b32 	%r189, %r188, 2;
	add.s32 	%r190, %r147, %r189;
	add.s32 	%r67, %r190, 128;
	mov.b32 	%r68, %f71;
	// begin inline asm
	@%p23 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	or.b32  	%r191, %r176, 48;
	shr.u32 	%r192, %r191, 4;
	add.s32 	%r193, %r192, %r177;
	shl.b32 	%r194, %r193, 2;
	add.s32 	%r195, %r147, %r194;
	add.s32 	%r69, %r195, 192;
	mov.b32 	%r70, %f72;
	// begin inline asm
	@%p23 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r63, 32;
	mov.b32 	%r72, %f73;
	// begin inline asm
	@%p23 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r185, 96;
	mov.b32 	%r74, %f74;
	// begin inline asm
	@%p23 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r190, 160;
	mov.b32 	%r76, %f75;
	// begin inline asm
	@%p23 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r195, 224;
	mov.b32 	%r78, %f76;
	// begin inline asm
	@%p23 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r196, %r106, 4, 5;
	add.s32 	%r197, %r196, %r143;
	shl.b32 	%r198, %r197, 2;
	add.s32 	%r199, %r147, %r198;
	ld.shared.u32 	%r79, [%r199];
	ld.shared.u32 	%r80, [%r199+4];
	ld.shared.u32 	%r81, [%r199+8];
	ld.shared.u32 	%r82, [%r199+12];
	add.s32 	%r200, %r168, %r143;
	shl.b32 	%r201, %r200, 2;
	add.s32 	%r202, %r147, %r201;
	ld.shared.u32 	%r83, [%r202+2048];
	ld.shared.u32 	%r84, [%r202+2052];
	ld.shared.u32 	%r85, [%r202+2056];
	ld.shared.u32 	%r86, [%r202+2060];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd41 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd42 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 64 34                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:34
	shl.b32 	%r203, %r116, 7;
	shl.b32 	%r204, %r117, 7;
	.loc	1 64 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:30
	add.s32 	%r205, %r203, %r135;
	.loc	1 64 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:39
	add.s32 	%r206, %r205, %r174;
	.loc	1 64 30                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:30
	add.s32 	%r207, %r174, %r135;
	.loc	1 64 39                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:39
	add.s32 	%r208, %r207, %r204;
	.loc	1 64 25                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:25
	mul.wide.s32 	%rd83, %r206, 4;
	add.s64 	%rd43, %rd53, %rd83;
	mul.wide.s32 	%rd84, %r208, 4;
	add.s64 	%rd44, %rd53, %rd84;
	.loc	1 64 56                         // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:56
	mov.b32 	%r87, %f77;
	mov.b32 	%r88, %f78;
	mov.b32 	%r89, %f79;
	mov.b32 	%r90, %f80;
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd43 + 0 ], { %r87, %r88, %r89, %r90 };
	// end inline asm
	mov.b32 	%r91, %f81;
	mov.b32 	%r92, %f82;
	mov.b32 	%r93, %f83;
	mov.b32 	%r94, %f84;
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd44 + 0 ], { %r91, %r92, %r93, %r94 };
	// end inline asm
	.loc	1 64 4                          // cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py:64:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bm/cbm65p4dyc2lwasdlfcily27avpivtj5opnjqhnspf5a2ppsdkpn.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 223                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 109
.b8 54
.b8 53
.b8 112
.b8 52
.b8 100
.b8 121
.b8 99
.b8 50
.b8 108
.b8 119
.b8 97
.b8 115
.b8 100
.b8 108
.b8 102
.b8 99
.b8 105
.b8 108
.b8 121
.b8 50
.b8 55
.b8 97
.b8 118
.b8 112
.b8 105
.b8 118
.b8 116
.b8 106
.b8 53
.b8 111
.b8 112
.b8 110
.b8 106
.b8 113
.b8 104
.b8 110
.b8 115
.b8 112
.b8 102
.b8 53
.b8 97
.b8 50
.b8 112
.b8 112
.b8 115
.b8 100
.b8 107
.b8 112
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x51 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb4:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 61                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
