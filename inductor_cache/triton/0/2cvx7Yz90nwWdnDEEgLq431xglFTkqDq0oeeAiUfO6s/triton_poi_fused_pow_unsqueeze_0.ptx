//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_pow_unsqueeze_0 // -- Begin function triton_poi_fused_pow_unsqueeze_0
                                        // @triton_poi_fused_pow_unsqueeze_0
.visible .entry triton_poi_fused_pow_unsqueeze_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_pow_unsqueeze_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_pow_unsqueeze_0_param_1,
	.param .u32 triton_poi_fused_pow_unsqueeze_0_param_2,
	.param .u32 triton_poi_fused_pow_unsqueeze_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_pow_unsqueeze_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_pow_unsqueeze_0_param_1];
$L__tmp0:
	.loc	1 22 29                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:22:29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 48                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:22:48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	.loc	1 22 69                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:22:69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	.loc	1 22 34                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:22:34
	mad.lo.s32 	%r21, %r3, %r2, %r1;
	.loc	1 23 44                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:23:44
	mov.u32 	%r22, %tid.x;
	shl.b32 	%r23, %r22, 2;
	.loc	1 25 28                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:25:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 22 75                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:22:75
	shl.b32 	%r24, %r21, 7;
	shl.b32 	%r25, %r4, 3;
	.loc	1 23 44                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:23:44
	bfe.u32 	%r26, %r22, 5, 2;
	and.b32  	%r27, %r23, 124;
	.loc	1 23 23                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:23:23
	or.b32  	%r28, %r24, %r27;
	or.b32  	%r29, %r25, %r26;
	.loc	1 24 21                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:24:21
	setp.lt.s32 	%p5, %r28, 65536;
	.loc	1 26 23                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:26:23
	or.b32  	%r30, %r29, 4;
	.loc	1 27 21                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:27:21
	setp.lt.s32 	%p6, %r29, 8;
	setp.lt.s32 	%p7, %r30, 8;
	.loc	1 30 41                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:30:41
	shl.b32 	%r31, %r29, 16;
	shl.b32 	%r32, %r30, 16;
	.loc	1 30 35                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:30:35
	add.s32 	%r33, %r28, %r31;
	add.s32 	%r34, %r28, %r32;
	.loc	1 30 30                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:30:30
	mul.wide.s32 	%rd7, %r33, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mul.wide.s32 	%rd8, %r34, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 30 54                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:30:54
	and.pred  	%p1, %p6, %p5;
	and.pred  	%p2, %p7, %p5;
	.loc	1 30 46                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:30:46
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r6;
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r10;
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r12;
	.loc	1 31 18                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:31:18
	mul.f32 	%f9, %f1, %f1;
	mul.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f3, %f3;
	mul.f32 	%f12, %f4, %f4;
	mul.f32 	%f13, %f5, %f5;
	mul.f32 	%f14, %f6, %f6;
	mul.f32 	%f15, %f7, %f7;
	mul.f32 	%f16, %f8, %f8;
	.loc	1 32 25                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:32:25
	add.s64 	%rd3, %rd6, %rd7;
	add.s64 	%rd4, %rd6, %rd8;
	.loc	1 32 47                         // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:32:47
	mov.b32 	%r13, %f9;
	mov.b32 	%r14, %f10;
	mov.b32 	%r15, %f11;
	mov.b32 	%r16, %f12;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r13, %r14, %r15, %r16 };
	// end inline asm
	mov.b32 	%r17, %f13;
	mov.b32 	%r18, %f14;
	mov.b32 	%r19, %f15;
	mov.b32 	%r20, %f16;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd4 + 0 ], { %r17, %r18, %r19, %r20 };
	// end inline asm
	.loc	1 32 4                          // cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py:32:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 51
.b8 109
.b8 51
.b8 112
.b8 97
.b8 117
.b8 51
.b8 104
.b8 107
.b8 112
.b8 52
.b8 105
.b8 102
.b8 110
.b8 54
.b8 101
.b8 110
.b8 108
.b8 55
.b8 50
.b8 53
.b8 110
.b8 120
.b8 110
.b8 119
.b8 115
.b8 105
.b8 102
.b8 50
.b8 104
.b8 109
.b8 104
.b8 55
.b8 115
.b8 100
.b8 52
.b8 115
.b8 122
.b8 111
.b8 120
.b8 111
.b8 117
.b8 120
.b8 54
.b8 107
.b8 118
.b8 99
.b8 105
.b8 122
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
