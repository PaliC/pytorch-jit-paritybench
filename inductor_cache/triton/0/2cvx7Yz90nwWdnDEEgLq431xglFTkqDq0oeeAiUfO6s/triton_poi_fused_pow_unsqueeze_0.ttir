#loc = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":19:0)
module {
  tt.func public @triton_poi_fused_pow_unsqueeze_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":19:0), %arg3: i32 loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<65536> : tensor<8x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<8x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<65536> : tensor<1x128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = tt.get_program_id z : i32 loc(#loc3)
    %2 = tt.get_num_programs y : i32 loc(#loc4)
    %3 = arith.muli %1, %2 : i32 loc(#loc5)
    %4 = arith.addi %0, %3 : i32 loc(#loc6)
    %5 = arith.muli %4, %c128_i32 : i32 loc(#loc7)
    %6 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc8)
    %7 = tt.expand_dims %6 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc9)
    %8 = tt.splat %5 : i32 -> tensor<1x128xi32> loc(#loc10)
    %9 = arith.addi %8, %7 : tensor<1x128xi32> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_1 : tensor<1x128xi32> loc(#loc11)
    %11 = tt.get_program_id x : i32 loc(#loc12)
    %12 = arith.muli %11, %c8_i32 : i32 loc(#loc13)
    %13 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc14)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc15)
    %15 = tt.splat %12 : i32 -> tensor<8x1xi32> loc(#loc16)
    %16 = arith.addi %15, %14 : tensor<8x1xi32> loc(#loc16)
    %17 = arith.cmpi slt, %16, %cst_0 : tensor<8x1xi32> loc(#loc17)
    %18 = arith.muli %16, %cst : tensor<8x1xi32> loc(#loc18)
    %19 = tt.broadcast %9 : tensor<1x128xi32> -> tensor<8x128xi32> loc(#loc19)
    %20 = tt.broadcast %18 : tensor<8x1xi32> -> tensor<8x128xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<8x128xi32> loc(#loc19)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %21 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc20)
    %24 = tt.broadcast %17 : tensor<8x1xi1> -> tensor<8x128xi1> loc(#loc21)
    %25 = tt.broadcast %10 : tensor<1x128xi1> -> tensor<8x128xi1> loc(#loc21)
    %26 = arith.andi %24, %25 : tensor<8x128xi1> loc(#loc21)
    %27 = tt.load %23, %26 evictionPolicy = evict_last : tensor<8x128x!tt.ptr<f32>> loc(#loc22)
    %28 = arith.mulf %27, %27 : tensor<8x128xf32> loc(#loc23)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x128x!tt.ptr<f32>> loc(#loc24)
    %30 = tt.addptr %29, %21 : tensor<8x128x!tt.ptr<f32>>, tensor<8x128xi32> loc(#loc24)
    tt.store %30, %28, %26 : tensor<8x128x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:29)
#loc3 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:48)
#loc4 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:69)
#loc5 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:53)
#loc6 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:34)
#loc7 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":22:75)
#loc8 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":23:36)
#loc9 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":23:44)
#loc10 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":23:23)
#loc11 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":24:21)
#loc12 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":25:28)
#loc13 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":25:33)
#loc14 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":26:36)
#loc15 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":26:44)
#loc16 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":26:23)
#loc17 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":27:21)
#loc18 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":30:41)
#loc19 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":30:35)
#loc20 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":30:30)
#loc21 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":30:54)
#loc22 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":30:46)
#loc23 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":31:18)
#loc24 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":32:25)
#loc25 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":32:47)
#loc26 = loc("inductor_cache/y3/cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py":32:4)
