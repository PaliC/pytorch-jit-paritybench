; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_pow_unsqueeze_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.z;", "=r"() #1, !dbg !11
  %7 = tail call i32 asm "mov.u32 $0, %nctaid.y;", "=r"() #1, !dbg !12
  %8 = mul i32 %7, %6, !dbg !13
  %9 = add i32 %8, %5, !dbg !14
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !15
  %11 = shl i32 %10, 2, !dbg !15
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !16
  %13 = lshr i32 %10, 5, !dbg !17
  %14 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !18
  %15 = insertelement <2 x i32> %14, i32 %12, i64 1, !dbg !18
  %16 = shl <2 x i32> %15, <i32 7, i32 3>, !dbg !18
  %17 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !15
  %18 = insertelement <2 x i32> %17, i32 %13, i64 1, !dbg !15
  %19 = and <2 x i32> %18, <i32 124, i32 3>, !dbg !15
  %20 = or disjoint <2 x i32> %16, %19, !dbg !19
  %21 = extractelement <2 x i32> %20, i64 0, !dbg !20
  %22 = icmp slt i32 %21, 65536, !dbg !20
  %23 = extractelement <2 x i32> %20, i64 1, !dbg !21
  %24 = or disjoint i32 %23, 4, !dbg !21
  %25 = icmp slt i32 %23, 8, !dbg !22
  %26 = icmp slt i32 %24, 8, !dbg !22
  %27 = shl i32 %23, 16, !dbg !23
  %28 = shl i32 %24, 16, !dbg !23
  %29 = add i32 %21, %27, !dbg !24
  %30 = add i32 %21, %28, !dbg !24
  %31 = sext i32 %29 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !25
  %33 = sext i32 %30 to i64, !dbg !25
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = and i1 %25, %22, !dbg !26
  %36 = and i1 %26, %22, !dbg !26
  %37 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %32, i1 %35) #1, !dbg !27
  %38 = extractvalue { i32, i32, i32, i32 } %37, 0, !dbg !27
  %39 = extractvalue { i32, i32, i32, i32 } %37, 1, !dbg !27
  %40 = extractvalue { i32, i32, i32, i32 } %37, 2, !dbg !27
  %41 = extractvalue { i32, i32, i32, i32 } %37, 3, !dbg !27
  %42 = bitcast i32 %38 to float, !dbg !27
  %43 = bitcast i32 %39 to float, !dbg !27
  %44 = bitcast i32 %40 to float, !dbg !27
  %45 = bitcast i32 %41 to float, !dbg !27
  %46 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 %36) #1, !dbg !27
  %47 = extractvalue { i32, i32, i32, i32 } %46, 0, !dbg !27
  %48 = extractvalue { i32, i32, i32, i32 } %46, 1, !dbg !27
  %49 = extractvalue { i32, i32, i32, i32 } %46, 2, !dbg !27
  %50 = extractvalue { i32, i32, i32, i32 } %46, 3, !dbg !27
  %51 = bitcast i32 %47 to float, !dbg !27
  %52 = bitcast i32 %48 to float, !dbg !27
  %53 = bitcast i32 %49 to float, !dbg !27
  %54 = bitcast i32 %50 to float, !dbg !27
  %55 = fmul float %42, %42, !dbg !28
  %56 = fmul float %43, %43, !dbg !28
  %57 = fmul float %44, %44, !dbg !28
  %58 = fmul float %45, %45, !dbg !28
  %59 = fmul float %51, %51, !dbg !28
  %60 = fmul float %52, %52, !dbg !28
  %61 = fmul float %53, %53, !dbg !28
  %62 = fmul float %54, %54, !dbg !28
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !29
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !29
  %65 = bitcast float %55 to i32, !dbg !30
  %66 = bitcast float %56 to i32, !dbg !30
  %67 = bitcast float %57 to i32, !dbg !30
  %68 = bitcast float %58 to i32, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %65, i32 %66, i32 %67, i32 %68, ptr addrspace(1) %63, i1 %35) #1, !dbg !30
  %69 = bitcast float %59 to i32, !dbg !30
  %70 = bitcast float %60 to i32, !dbg !30
  %71 = bitcast float %61 to i32, !dbg !30
  %72 = bitcast float %62 to i32, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %69, i32 %70, i32 %71, i32 %72, ptr addrspace(1) %64, i1 %36) #1, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cy3m3pau3hkp4ifn6enl725nxnwsif2hmh7sd4szoxoux6kvciza.py", directory: "inductor_cache/y3")
!4 = !{ptr @triton_poi_fused_pow_unsqueeze_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_pow_unsqueeze_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_pow_unsqueeze_0", linkageName: "triton_poi_fused_pow_unsqueeze_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 29, scope: !7)
!11 = !DILocation(line: 22, column: 48, scope: !7)
!12 = !DILocation(line: 22, column: 69, scope: !7)
!13 = !DILocation(line: 22, column: 53, scope: !7)
!14 = !DILocation(line: 22, column: 34, scope: !7)
!15 = !DILocation(line: 23, column: 44, scope: !7)
!16 = !DILocation(line: 25, column: 28, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 22, column: 75, scope: !7)
!19 = !DILocation(line: 23, column: 23, scope: !7)
!20 = !DILocation(line: 24, column: 21, scope: !7)
!21 = !DILocation(line: 26, column: 23, scope: !7)
!22 = !DILocation(line: 27, column: 21, scope: !7)
!23 = !DILocation(line: 30, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 54, scope: !7)
!27 = !DILocation(line: 30, column: 46, scope: !7)
!28 = !DILocation(line: 31, column: 18, scope: !7)
!29 = !DILocation(line: 32, column: 25, scope: !7)
!30 = !DILocation(line: 32, column: 47, scope: !7)
!31 = !DILocation(line: 32, column: 4, scope: !7)
