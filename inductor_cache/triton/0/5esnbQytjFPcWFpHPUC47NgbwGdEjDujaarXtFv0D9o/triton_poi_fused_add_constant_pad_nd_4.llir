; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_constant_pad_nd_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 576, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 6, !dbg !15
  %16 = mul i32 %15, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = sdiv i32 %12, 36, !dbg !17
  %18 = add nsw i32 %.decomposed, -1, !dbg !18
  %19 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !19
  %20 = insertelement <2 x i32> %19, i32 %13, i64 1, !dbg !19
  %21 = srem <2 x i32> %20, splat (i32 6), !dbg !19
  %22 = add nsw <2 x i32> %21, splat (i32 -1), !dbg !20
  %23 = extractelement <2 x i32> %22, i64 0, !dbg !18
  %24 = or i32 %23, %18, !dbg !18
  %25 = icmp ult i32 %24, 4, !dbg !18
  %26 = extractelement <2 x i32> %22, i64 1, !dbg !18
  %27 = or i32 %23, %26, !dbg !18
  %28 = icmp ult i32 %27, 4, !dbg !18
  %29 = extractelement <2 x i32> %21, i64 0, !dbg !21
  %30 = shl nsw i32 %29, 2, !dbg !21
  %31 = shl nsw i32 %17, 4, !dbg !22
  %32 = add nsw i32 %31, -5, !dbg !23
  %33 = add nsw i32 %32, %.decomposed, !dbg !24
  %34 = add nsw i32 %33, %30, !dbg !25
  %35 = extractelement <2 x i32> %21, i64 1, !dbg !24
  %36 = add nsw i32 %32, %35, !dbg !24
  %37 = add nsw i32 %36, %30, !dbg !25
  %38 = sext i32 %34 to i64, !dbg !26
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !26
  %40 = sext i32 %37 to i64, !dbg !26
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !26
  %42 = and i1 %14, %25, !dbg !27
  %43 = and i1 %14, %28, !dbg !27
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %42, i32 0, i1 %42) #3, !dbg !28
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %43, i32 0, i1 %43) #3, !dbg !28
  %46 = sext i32 %17 to i64, !dbg !29
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !29
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %42, i32 0, i1 %42) #3, !dbg !30
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %43, i32 0, i1 %43) #3, !dbg !30
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !31
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %42, i32 0, i1 %42) #3, !dbg !32
  %52 = bitcast i32 %51 to float, !dbg !32
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %43, i32 0, i1 %43) #3, !dbg !32
  %54 = bitcast i32 %53 to float, !dbg !32
  %55 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 1.600000e+01) #3, !dbg !33
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float 1.600000e+01) #3, !dbg !33
  %57 = fadd float %55, 0x3EE4F8B580000000, !dbg !34
  %58 = fadd float %56, 0x3EE4F8B580000000, !dbg !34
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i = icmp eq i32 %59, 0, !dbg !35
  br i1 %.not.i, label %62, label %60, !dbg !35

60:                                               ; preds = %6
  %61 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %57), !dbg !35
  br label %__nv_rsqrtf.exit, !dbg !35

62:                                               ; preds = %6
  %63 = tail call float @llvm.nvvm.rsqrt.approx.f(float %57), !dbg !35
  br label %__nv_rsqrtf.exit, !dbg !35

__nv_rsqrtf.exit:                                 ; preds = %60, %62
  %.0.i = phi float [ %61, %60 ], [ %63, %62 ], !dbg !35
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i1 = icmp eq i32 %64, 0, !dbg !35
  br i1 %.not.i1, label %67, label %65, !dbg !35

65:                                               ; preds = %__nv_rsqrtf.exit
  %66 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %58), !dbg !35
  br label %__nv_rsqrtf.exit3, !dbg !35

67:                                               ; preds = %__nv_rsqrtf.exit
  %68 = tail call float @llvm.nvvm.rsqrt.approx.f(float %58), !dbg !35
  br label %__nv_rsqrtf.exit3, !dbg !35

__nv_rsqrtf.exit3:                                ; preds = %65, %67
  %.0.i2 = phi float [ %66, %65 ], [ %68, %67 ], !dbg !35
  %69 = bitcast i32 %45 to float, !dbg !28
  %70 = bitcast i32 %49 to float, !dbg !30
  %71 = fsub float %69, %70, !dbg !36
  %72 = bitcast i32 %44 to float, !dbg !28
  %73 = bitcast i32 %48 to float, !dbg !30
  %74 = fsub float %72, %73, !dbg !36
  %75 = fmul float %74, %.0.i, !dbg !37
  %76 = fmul float %71, %.0.i2, !dbg !37
  %77 = getelementptr float, ptr addrspace(1) %3, i64 %38, !dbg !38
  %78 = getelementptr float, ptr addrspace(1) %3, i64 %40, !dbg !38
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %77, i1 %42, i32 0, i1 %42) #3, !dbg !39
  %80 = bitcast i32 %79 to float, !dbg !39
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %43, i32 0, i1 %43) #3, !dbg !39
  %82 = bitcast i32 %81 to float, !dbg !39
  %83 = fadd float %75, %80, !dbg !40
  %84 = fadd float %76, %82, !dbg !40
  %85 = sext i32 %12 to i64, !dbg !41
  %86 = getelementptr float, ptr addrspace(1) %4, i64 %85, !dbg !41
  %87 = bitcast float %83 to i32, !dbg !42
  %88 = select i1 %25, i32 %87, i32 0, !dbg !43
  %89 = bitcast float %84 to i32, !dbg !42
  %90 = select i1 %28, i32 %89, i32 0, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %88, i32 %90, ptr addrspace(1) %86, i1 %14) #3, !dbg !42
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3h437ofom5l6qrgpaxf2m7763wxpgykyhyw3fm7rwmnsluw5323.py", directory: "inductor_cache/3h")
!4 = !{ptr @triton_poi_fused_add_constant_pad_nd_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_constant_pad_nd_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_constant_pad_nd_4", linkageName: "triton_poi_fused_add_constant_pad_nd_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 38, column: 19, scope: !7)
!19 = !DILocation(line: 24, column: 26, scope: !7)
!20 = !DILocation(line: 36, column: 18, scope: !7)
!21 = !DILocation(line: 39, column: 45, scope: !7)
!22 = !DILocation(line: 39, column: 53, scope: !7)
!23 = !DILocation(line: 39, column: 38, scope: !7)
!24 = !DILocation(line: 39, column: 43, scope: !7)
!25 = !DILocation(line: 39, column: 50, scope: !7)
!26 = !DILocation(line: 39, column: 31, scope: !7)
!27 = !DILocation(line: 39, column: 66, scope: !7)
!28 = !DILocation(line: 39, column: 58, scope: !7)
!29 = !DILocation(line: 40, column: 31, scope: !7)
!30 = !DILocation(line: 40, column: 36, scope: !7)
!31 = !DILocation(line: 42, column: 31, scope: !7)
!32 = !DILocation(line: 42, column: 36, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 46, column: 20, scope: !7)
!35 = !DILocation(line: 47, column: 28, scope: !7)
!36 = !DILocation(line: 41, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 31, scope: !7)
!39 = !DILocation(line: 49, column: 58, scope: !7)
!40 = !DILocation(line: 50, column: 20, scope: !7)
!41 = !DILocation(line: 53, column: 25, scope: !7)
!42 = !DILocation(line: 53, column: 37, scope: !7)
!43 = !DILocation(line: 52, column: 35, scope: !7)
!44 = !DILocation(line: 53, column: 4, scope: !7)
