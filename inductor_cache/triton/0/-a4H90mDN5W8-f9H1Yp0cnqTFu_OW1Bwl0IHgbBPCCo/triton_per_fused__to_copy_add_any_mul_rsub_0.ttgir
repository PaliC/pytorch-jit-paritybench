#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":38:36)
#loc31 = loc(callsite(#loc1 at #loc17))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_add_any_mul_rsub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg3: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg5: i32 loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x64xi32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc4)
    %4 = arith.remsi %3, %cst : tensor<1x64xi32, #blocked> loc(#loc5)
    %5 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x64xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x64xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x64xi1, #blocked> loc(#loc9)
    %11 = tt.load %9, %10, %cst_0 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %13 = tt.addptr %12, %7 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc10)
    %14 = tt.load %13, %10, %cst_0 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc11)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %16 = tt.addptr %15, %4 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc12)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %18 = arith.cmpf une, %11, %cst_0 : tensor<1x64xf32, #blocked> loc(#loc14)
    %19 = arith.extui %18 : tensor<1x64xi1, #blocked> to tensor<1x64xi32, #blocked> loc(#loc15)
    %20 = arith.select %10, %19, %cst_1 : tensor<1x64xi1, #blocked>, tensor<1x64xi32, #blocked> loc(#loc15)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg7: i32 loc(callsite(#loc1 at #loc17)), %arg8: i32 loc(callsite(#loc1 at #loc17))):
      %39 = arith.ori %arg7, %arg8 : i32 loc(#loc33)
      tt.reduce.return %39 : i32 loc(#loc30)
    }) : (tensor<1x64xi32, #blocked>) -> tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc30)
    %22 = triton_gpu.convert_layout %21 : tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc19)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xi32, #blocked1> loc(#loc20)
    %24 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xi32, #blocked> loc(#loc20)
    %25 = arith.sitofp %24 : tensor<1x1xi32, #blocked> to tensor<1x1xf32, #blocked> loc(#loc21)
    %26 = tt.broadcast %25 : tensor<1x1xf32, #blocked> -> tensor<1x64xf32, #blocked> loc(#loc22)
    %27 = arith.mulf %14, %26 : tensor<1x64xf32, #blocked> loc(#loc22)
    %28 = arith.subf %cst_2, %25 : tensor<1x1xf32, #blocked> loc(#loc23)
    %29 = tt.broadcast %28 : tensor<1x1xf32, #blocked> -> tensor<1x64xf32, #blocked> loc(#loc24)
    %30 = arith.mulf %17, %29 : tensor<1x64xf32, #blocked> loc(#loc24)
    %31 = arith.addf %27, %30 : tensor<1x64xf32, #blocked> loc(#loc25)
    %32 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc26)
    %33 = tt.addptr %32, %7 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc26)
    tt.store %33, %31, %10 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc27)
    %34 = tt.addptr %arg3, %0 : !tt.ptr<i1>, i32 loc(#loc28)
    %35 = tt.bitcast %34 : !tt.ptr<i1> -> !tt.ptr<i8> loc(#loc19)
    %36 = arith.trunci %23 : tensor<1x1xi32, #blocked1> to tensor<1x1xi8, #blocked1> loc(#loc19)
    %37 = tt.splat %35 : !tt.ptr<i8> -> tensor<1x1x!tt.ptr<i8>, #blocked1> loc(#loc19)
    %38 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc19)
    tt.store %37, %36, %38 : tensor<1x1x!tt.ptr<i8>, #blocked1> loc(#loc19)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":23:28)
#loc3 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":25:21)
#loc4 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":26:34)
#loc5 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":31:19)
#loc6 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":32:38)
#loc7 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":32:35)
#loc8 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":32:30)
#loc9 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":32:43)
#loc10 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":33:30)
#loc11 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":33:43)
#loc12 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":34:30)
#loc13 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":34:35)
#loc14 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":35:20)
#loc15 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":37:33)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc19 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":46:36)
#loc20 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":38:39)
#loc21 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":39:19)
#loc22 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":40:18)
#loc23 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":42:20)
#loc24 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":43:19)
#loc25 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":44:19)
#loc26 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":45:25)
#loc27 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":45:45)
#loc28 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":46:25)
#loc29 = loc("inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py":46:4)
#loc30 = loc(callsite(#loc16 at #loc17))
#loc32 = loc(callsite(#loc18 at #loc16))
#loc33 = loc(callsite(#loc32 at #loc17))
