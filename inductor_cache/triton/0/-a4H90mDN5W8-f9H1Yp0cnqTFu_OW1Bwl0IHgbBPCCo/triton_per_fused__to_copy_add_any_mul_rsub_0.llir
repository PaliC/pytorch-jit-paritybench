; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__to_copy_add_any_mul_rsub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = icmp slt i32 %8, 4, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = lshr i32 %10, 5, !dbg !12
  %13 = and i32 %10, 63, !dbg !12
  %14 = and i32 %10, 3, !dbg !13
  %15 = shl i32 %8, 6, !dbg !14
  %16 = or disjoint i32 %15, %13, !dbg !15
  %17 = sext i32 %16 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %9, i32 0, i1 %9) #3, !dbg !17
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !18
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %9, i32 0, i1 %9) #3, !dbg !19
  %22 = bitcast i32 %21 to float, !dbg !19
  %23 = zext nneg i32 %14 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %23, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = and i32 %19, 2147483647, !dbg !22
  %28 = icmp ne i32 %27, 0, !dbg !22
  %narrow = select i1 %9, i1 %28, i1 false, !dbg !23
  %29 = zext i1 %narrow to i32, !dbg !23
  %30 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %29, i32 -1), !dbg !24
  %31 = icmp eq i32 %11, 0, !dbg !24
  %32 = and i32 %12, 1, !dbg !24
  %33 = zext nneg i32 %32 to i64, !dbg !24
  %34 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %33, !dbg !24
  %35 = insertelement <1 x i32> poison, i32 %30, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %34, <1 x i32> %35, i1 %31) #3, !dbg !24
  tail call void @llvm.nvvm.barrier0(), !dbg !24
  %36 = icmp slt i32 %10, 2, !dbg !24
  %37 = sext i32 %10 to i64, !dbg !24
  %38 = getelementptr i32, ptr addrspace(3) @global_smem, i64 %37, !dbg !24
  %39 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %38, i1 %36) #3, !dbg !24
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 1, i32 31), !dbg !24
  %41 = or i32 %40, %39, !dbg !28
  %42 = and i32 %10, 1, !dbg !24
  %43 = icmp eq i32 %42, 0, !dbg !24
  %44 = and i1 %36, %43, !dbg !24
  %45 = insertelement <1 x i32> poison, i32 %41, i64 0, !dbg !24
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %38, <1 x i32> %45, i1 %44) #3, !dbg !24
  tail call void @llvm.nvvm.barrier0(), !dbg !24
  %46 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !24
  %47 = sitofp i32 %46 to float, !dbg !30
  %48 = fmul float %22, %47, !dbg !31
  %49 = fsub float 1.000000e+00, %47, !dbg !32
  %50 = fmul float %49, %26, !dbg !33
  %51 = fadd float %48, %50, !dbg !34
  %52 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !35
  %53 = bitcast float %51 to i32, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %52, i1 %9) #3, !dbg !36
  %54 = sext i32 %8 to i64, !dbg !37
  %55 = getelementptr i1, ptr addrspace(1) %3, i64 %54, !dbg !37
  %56 = trunc i32 %46 to i8, !dbg !38
  %57 = icmp eq i32 %13, 0, !dbg !38
  %58 = and i1 %57, %9, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %56, ptr addrspace(1) %55, i1 %58) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.redux.sync.or(i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py", directory: "inductor_cache/w4")
!4 = !{ptr @triton_per_fused__to_copy_add_any_mul_rsub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy_add_any_mul_rsub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_any_mul_rsub_0", linkageName: "triton_per_fused__to_copy_add_any_mul_rsub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 32, column: 38, scope: !7)
!15 = !DILocation(line: 32, column: 35, scope: !7)
!16 = !DILocation(line: 32, column: 30, scope: !7)
!17 = !DILocation(line: 32, column: 43, scope: !7)
!18 = !DILocation(line: 33, column: 30, scope: !7)
!19 = !DILocation(line: 33, column: 43, scope: !7)
!20 = !DILocation(line: 34, column: 30, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 35, column: 20, scope: !7)
!23 = !DILocation(line: 37, column: 33, scope: !7)
!24 = !DILocation(line: 232, column: 29, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 38, column: 36, scope: !7)
!28 = !DILocation(line: 227, column: 15, scope: !29, inlinedAt: !27)
!29 = distinct !DILexicalBlockFile(scope: !25, file: !26, discriminator: 0)
!30 = !DILocation(line: 39, column: 19, scope: !7)
!31 = !DILocation(line: 40, column: 18, scope: !7)
!32 = !DILocation(line: 42, column: 20, scope: !7)
!33 = !DILocation(line: 43, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 25, scope: !7)
!36 = !DILocation(line: 45, column: 45, scope: !7)
!37 = !DILocation(line: 46, column: 25, scope: !7)
!38 = !DILocation(line: 46, column: 36, scope: !7)
!39 = !DILocation(line: 46, column: 4, scope: !7)
