//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_any_mul_rsub_0 // -- Begin function triton_per_fused__to_copy_add_any_mul_rsub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_add_any_mul_rsub_0
.visible .entry triton_per_fused__to_copy_add_any_mul_rsub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_any_mul_rsub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_any_mul_rsub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_any_mul_rsub_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_any_mul_rsub_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_any_mul_rsub_0_param_4,
	.param .u32 triton_per_fused__to_copy_add_any_mul_rsub_0_param_5,
	.param .u32 triton_per_fused__to_copy_add_any_mul_rsub_0_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<30>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_add_any_mul_rsub_0_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_add_any_mul_rsub_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd8, [triton_per_fused__to_copy_add_any_mul_rsub_0_param_2];
	ld.param.u64 	%rd9, [triton_per_fused__to_copy_add_any_mul_rsub_0_param_3];
	.loc	1 26 34                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:26:34
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 31;
	ld.param.u64 	%rd10, [triton_per_fused__to_copy_add_any_mul_rsub_0_param_4];
	and.b32  	%r16, %r14, 63;
	.loc	1 31 19                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:31:19
	and.b32  	%r17, %r14, 3;
	.loc	1 32 38                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:32:38
	shl.b32 	%r18, %r1, 6;
	.loc	1 32 35                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:32:35
	or.b32  	%r19, %r18, %r16;
	.loc	1 32 30                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:32:30
	mul.wide.s32 	%rd11, %r19, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.b32 	%r3, 0;
	.loc	1 32 43                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 33 30                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:33:30
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 33 43                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:33:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f1, %r4;
	.loc	1 34 30                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:34:30
	mul.wide.u32 	%rd12, %r17, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mov.pred 	%p5, -1;
	.loc	1 34 35                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 35 20                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:35:20
	and.b32  	%r20, %r2, 2147483647;
	setp.ne.s32 	%p11, %r20, 0;
	.loc	1 37 33                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:37:33
	and.pred  	%p12, %p1, %p11;
	selp.u32 	%r21, 1, 0, %p12;
	mov.b32 	%r22, -1;
$L__tmp1:
	.loc	2 232 29                        // triton_helpers.py:232:29
	redux.sync.or.b32 %r8, %r21, %r22;
	setp.eq.s32 	%p6, %r15, 0;
	shr.u32 	%r23, %r14, 3;
	and.b32  	%r24, %r23, 4;
	mov.u32 	%r25, global_smem;
	add.s32 	%r7, %r25, %r24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r14, 2;
	shl.b32 	%r26, %r14, 2;
	add.s32 	%r10, %r25, %r26;
	// begin inline asm
	@%p7 ld.shared.b32 %r9, [ %r10 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32	%r27, %r9, 1, 31, -1;
	.loc	2 227 15                        // triton_helpers.py:227:15
	or.b32  	%r12, %r27, %r9;
	.loc	2 232 29                        // triton_helpers.py:232:29
	and.b32  	%r28, %r14, 1;
	setp.eq.b32 	%p13, %r28, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p8, %p7, %p14;
	// begin inline asm
	@%p8 st.shared.b32 [ %r10 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r29, [global_smem];
$L__tmp2:
	.loc	1 39 19                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:39:19
	cvt.rn.f32.s32 	%f3, %r29;
	mov.f32 	%f4, 0f3F800000;
	.loc	1 42 20                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:42:20
	sub.f32 	%f5, %f4, %f3;
	.loc	1 43 19                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:43:19
	mul.f32 	%f6, %f5, %f2;
	.loc	1 44 19                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:44:19
	fma.rn.f32 	%f7, %f1, %f3, %f6;
	.loc	1 45 25                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:45:25
	add.s64 	%rd4, %rd10, %rd11;
	.loc	1 45 45                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:45:45
	mov.b32 	%r13, %f7;
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r13 };
	// end inline asm
	.loc	1 46 25                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:46:25
	cvt.s64.s32 	%rd13, %r1;
	add.s64 	%rd5, %rd9, %rd13;
	.loc	1 46 36                         // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:46:36
	setp.eq.s32 	%p15, %r16, 0;
	and.pred  	%p10, %p15, %p1;
	cvt.u16.u32 	%rs1, %r29;
	// begin inline asm
	@%p10 st.global.b8 [ %rd5 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 46 4                          // cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py:46:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w4/cw4bmpay2ru2hq2kl3ji3vsay73infgatfdfk5qad375kzfg54y2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 189                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 52
.b8 98
.b8 109
.b8 112
.b8 97
.b8 121
.b8 50
.b8 114
.b8 117
.b8 50
.b8 104
.b8 113
.b8 50
.b8 107
.b8 108
.b8 51
.b8 106
.b8 105
.b8 51
.b8 118
.b8 115
.b8 97
.b8 121
.b8 55
.b8 51
.b8 105
.b8 110
.b8 102
.b8 103
.b8 97
.b8 116
.b8 102
.b8 100
.b8 102
.b8 107
.b8 53
.b8 113
.b8 97
.b8 100
.b8 51
.b8 55
.b8 53
.b8 107
.b8 122
.b8 102
.b8 103
.b8 53
.b8 52
.b8 121
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 97
.b8 110
.b8 121
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 36                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
