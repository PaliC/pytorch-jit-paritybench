//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_cat_43 // -- Begin function triton_poi_fused_add_cat_43
                                        // @triton_poi_fused_add_cat_43
.visible .entry triton_poi_fused_add_cat_43(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_4,
	.param .u32 triton_poi_fused_add_cat_43_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_add_cat_43_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_add_cat_43_param_1];
$L__tmp0:
	.loc	1 21 28                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:21:33
	shl.b32 	%r18, %r1, 9;
	ld.param.u64 	%rd8, [triton_poi_fused_add_cat_43_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_add_cat_43_param_3];
	.loc	1 22 36                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 1;
	ld.param.u64 	%rd10, [triton_poi_fused_add_cat_43_param_4];
	and.b32  	%r21, %r20, 510;
	.loc	1 22 23                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:22:23
	or.b32  	%r22, %r18, %r21;
	.loc	1 24 21                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:24:21
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 24;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 8;
	.loc	1 24 28                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:24:28
	shr.u32 	%r28, %r27, 24;
	add.s32 	%r29, %r27, %r28;
	and.b32  	%r30, %r29, -256;
	sub.s32 	%r31, %r27, %r30;
	.loc	1 25 19                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:25:19
	and.b32  	%r32, %r26, -256;
	sub.s32 	%r33, %r22, %r32;
	.loc	1 26 19                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:26:19
	shr.u32 	%r34, %r24, 16;
	add.s32 	%r35, %r22, %r34;
	shr.s32 	%r36, %r35, 16;
	.loc	1 28 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:28:31
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd1, %rd9, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 28 36                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:28:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 18                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:33:18
	setp.lt.s32 	%p2, %r31, 128;
	.loc	1 34 35                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:35
	and.b32  	%r37, %r35, -65536;
	sub.s32 	%r38, %r22, %r37;
	.loc	1 34 52                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:52
	shl.b32 	%r39, %r36, 15;
	.loc	1 34 46                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:46
	add.s32 	%r40, %r39, %r38;
	.loc	1 34 30                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:30
	mul.wide.s32 	%rd12, %r40, 4;
	add.s64 	%rd2, %rd6, %rd12;
	mov.b32 	%r6, 0;
	.loc	1 34 57                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:57
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p2 ld.global.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r4, %r6;
	@!%p2 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 38 18                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:38:18
	and.b32  	%r41, %r31, -64;
	setp.eq.s32 	%p5, %r41, 128;
	.loc	1 39 41                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:41
	shl.b32 	%r42, %r31, 8;
	.loc	1 39 62                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:62
	shl.b32 	%r43, %r36, 14;
	.loc	1 39 41                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:41
	add.s32 	%r44, %r43, %r33;
	.loc	1 39 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:31
	cvt.s64.s32 	%rd13, %r42;
	cvt.s64.s32 	%rd14, %r44;
	add.s64 	%rd15, %rd14, %rd13;
	shl.b64 	%rd16, %rd15, 2;
	add.s64 	%rd17, %rd7, %rd16;
	add.s64 	%rd3, %rd17, -131072;
	.loc	1 39 67                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:67
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p5 ld.global.v2.b32 { %r8, %r9 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r8, %r6;
	@!%p5 mov.u32 %r9, %r6;
	// end inline asm
	.loc	1 40 20                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:40:20
	setp.gt.s32 	%p8, %r31, 191;
	.loc	1 43 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:43:31
	add.s64 	%rd18, %rd8, %rd16;
	add.s64 	%rd4, %rd18, -196608;
	.loc	1 43 67                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:43:67
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p8 ld.global.v2.b32 { %r12, %r13 }, [ %rd4 + 0 ];
	@!%p8 mov.u32 %r12, %r6;
	@!%p8 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 44 34                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:44:34
	selp.b32 	%r45, %r8, %r12, %p5;
	selp.b32 	%r46, %r9, %r13, %p5;
	.loc	1 45 33                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:45:33
	selp.b32 	%r47, %r4, %r45, %p2;
	mov.b32 	%f3, %r47;
	selp.b32 	%r48, %r5, %r46, %p2;
	mov.b32 	%f4, %r48;
	.loc	1 46 20                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:46:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 47 25                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:25
	add.s64 	%rd5, %rd10, %rd11;
	.loc	1 47 37                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:37
	mov.b32 	%r16, %f5;
	mov.b32 	%r17, %f6;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 47 4                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/g5/cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 53
.b8 112
.b8 54
.b8 117
.b8 115
.b8 110
.b8 110
.b8 54
.b8 55
.b8 121
.b8 101
.b8 103
.b8 122
.b8 52
.b8 107
.b8 55
.b8 116
.b8 53
.b8 51
.b8 51
.b8 107
.b8 108
.b8 52
.b8 110
.b8 110
.b8 52
.b8 103
.b8 107
.b8 114
.b8 105
.b8 118
.b8 115
.b8 119
.b8 55
.b8 116
.b8 116
.b8 119
.b8 111
.b8 113
.b8 116
.b8 120
.b8 114
.b8 102
.b8 114
.b8 103
.b8 120
.b8 119
.b8 107
.b8 116
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
