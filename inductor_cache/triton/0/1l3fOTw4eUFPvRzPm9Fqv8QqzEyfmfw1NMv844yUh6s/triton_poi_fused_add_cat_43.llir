; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_43(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %13 = sdiv i32 %.frozen, 256, !dbg !14
  %14 = srem i32 %13, 256, !dbg !15
  %15 = mul i32 %13, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %.frozen4 = freeze i32 %12, !dbg !17
  %16 = sdiv i32 %.frozen4, 65536, !dbg !17
  %17 = sext i32 %12 to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %3, i64 %17, !dbg !18
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !19
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !19
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !19
  %22 = bitcast i32 %20 to float, !dbg !19
  %23 = bitcast i32 %21 to float, !dbg !19
  %24 = icmp slt i32 %14, 128, !dbg !20
  %25 = mul i32 %16, 65536, !dbg !21
  %srem.decomposed = sub i32 %.frozen4, %25, !dbg !21
  %26 = shl nsw i32 %16, 15, !dbg !22
  %27 = add nsw i32 %26, %srem.decomposed, !dbg !23
  %28 = sext i32 %27 to i64, !dbg !24
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !24
  %30 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %29, i1 %24, i32 0, i1 %24, i32 0, i1 %24) #1, !dbg !25
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !25
  %32 = extractvalue { i32, i32 } %30, 1, !dbg !25
  %33 = and i32 %14, -64, !dbg !26
  %34 = icmp eq i32 %33, 128, !dbg !26
  %35 = shl nsw i32 %14, 8, !dbg !27
  %36 = shl nsw i32 %16, 14, !dbg !28
  %37 = add nsw i32 %36, %.decomposed, !dbg !27
  %38 = add nsw i32 %37, -32768, !dbg !29
  %39 = add nsw i32 %38, %35, !dbg !30
  %40 = sext i32 %39 to i64, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !31
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %41, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #1, !dbg !32
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !32
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !32
  %45 = icmp sgt i32 %14, 191, !dbg !33
  %46 = add nsw i32 %37, -49152, !dbg !34
  %47 = add nsw i32 %46, %35, !dbg !35
  %48 = sext i32 %47 to i64, !dbg !36
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !36
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %49, i1 %45, i32 0, i1 %45, i32 0, i1 %45) #1, !dbg !37
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !37
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !37
  %.v = select i1 %34, i32 %43, i32 %51, !dbg !38
  %.v1 = select i1 %34, i32 %44, i32 %52, !dbg !38
  %.v2 = select i1 %24, i32 %31, i32 %.v, !dbg !39
  %53 = bitcast i32 %.v2 to float, !dbg !39
  %.v3 = select i1 %24, i32 %32, i32 %.v1, !dbg !39
  %54 = bitcast i32 %.v3 to float, !dbg !39
  %55 = fadd float %22, %53, !dbg !40
  %56 = fadd float %23, %54, !dbg !40
  %57 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !41
  %58 = bitcast float %55 to i32, !dbg !42
  %59 = bitcast float %56 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %58, i32 %59, ptr addrspace(1) %57, i1 true) #1, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py", directory: "inductor_cache/g5")
!4 = !{ptr @triton_poi_fused_add_cat_43, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_43, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_43", linkageName: "triton_poi_fused_add_cat_43", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 31, scope: !7)
!19 = !DILocation(line: 28, column: 36, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 52, scope: !7)
!23 = !DILocation(line: 34, column: 46, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 57, scope: !7)
!26 = !DILocation(line: 38, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 41, scope: !7)
!28 = !DILocation(line: 39, column: 62, scope: !7)
!29 = !DILocation(line: 39, column: 36, scope: !7)
!30 = !DILocation(line: 39, column: 56, scope: !7)
!31 = !DILocation(line: 39, column: 31, scope: !7)
!32 = !DILocation(line: 39, column: 67, scope: !7)
!33 = !DILocation(line: 40, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 36, scope: !7)
!35 = !DILocation(line: 43, column: 56, scope: !7)
!36 = !DILocation(line: 43, column: 31, scope: !7)
!37 = !DILocation(line: 43, column: 67, scope: !7)
!38 = !DILocation(line: 44, column: 34, scope: !7)
!39 = !DILocation(line: 45, column: 33, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 47, column: 25, scope: !7)
!42 = !DILocation(line: 47, column: 37, scope: !7)
!43 = !DILocation(line: 47, column: 4, scope: !7)
