//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_slice_37 // -- Begin function triton_poi_fused_slice_37
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_slice_37
.visible .entry triton_poi_fused_slice_37(
	.param .u64 .ptr .global .align 1 triton_poi_fused_slice_37_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_slice_37_param_1,
	.param .u32 triton_poi_fused_slice_37_param_2,
	.param .u32 triton_poi_fused_slice_37_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<88>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_slice_37_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_slice_37_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:22:33
	shl.b32 	%r35, %r1, 4;
	.loc	1 23 44                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:23:44
	mov.u32 	%r36, %tid.x;
	shl.b32 	%r37, %r36, 2;
	and.b32  	%r38, %r37, 12;
	bfe.u32 	%r39, %r36, 4, 3;
	.loc	1 23 23                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:23:23
	or.b32  	%r40, %r35, %r38;
	or.b32  	%r41, %r35, %r39;
	or.b32  	%r42, %r41, 8;
	.loc	1 24 21                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:24:21
	setp.lt.s32 	%p13, %r40, 16;
	setp.lt.s32 	%p14, %r41, 16;
	setp.lt.s32 	%p15, %r42, 16;
	.loc	1 25 28                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:25:33
	shl.b32 	%r43, %r2, 6;
	.loc	1 26 44                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:26:44
	bfe.u32 	%r44, %r36, 2, 5;
	and.b32  	%r45, %r37, 60;
	.loc	1 26 23                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:26:23
	or.b32  	%r46, %r43, %r44;
	or.b32  	%r47, %r46, 32;
	or.b32  	%r48, %r43, %r45;
	.loc	1 27 21                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:27:21
	setp.lt.s32 	%p16, %r46, 1600;
	setp.lt.s32 	%p17, %r47, 1600;
	setp.lt.s32 	%p18, %r48, 1600;
	.loc	1 30 19                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:30:19
	shr.u32 	%r49, %r40, 2;
	.loc	1 32 53                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:32:53
	mul.lo.s32 	%r50, %r49, 19200;
	.loc	1 32 47                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:32:47
	mad.lo.s32 	%r51, %r46, 12, %r50;
	add.s32 	%r52, %r51, 8;
	add.s32 	%r53, %r51, 392;
	.loc	1 32 30                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:32:30
	mul.wide.s32 	%rd7, %r52, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mul.wide.s32 	%rd8, %r53, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 32 66                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:32:66
	and.pred  	%p1, %p13, %p16;
	and.pred  	%p2, %p17, %p13;
	and.pred  	%p11, %p14, %p18;
	and.pred  	%p12, %p15, %p18;
	.loc	1 32 58                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:32:58
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:33:30
	mad.lo.s32 	%r54, %r41, 1600, %r48;
	add.s32 	%r55, %r54, 12800;
	.loc	1 33 25                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:33:25
	mul.wide.s32 	%rd9, %r54, 4;
	add.s64 	%rd3, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r55, 4;
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 33 46                         // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:33:46
	shl.b32 	%r56, %r36, 8;
	and.b32  	%r57, %r56, 768;
	or.b32  	%r58, %r57, %r44;
	and.b32  	%r59, %r37, 508;
	shr.u32 	%r60, %r57, 6;
	add.s32 	%r61, %r60, %r58;
	shl.b32 	%r62, %r61, 2;
	mov.u32 	%r63, global_smem;
	add.s32 	%r11, %r63, %r62;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r64, %r57, 64;
	shr.u32 	%r65, %r64, 6;
	add.s32 	%r66, %r65, %r58;
	shl.b32 	%r67, %r66, 2;
	add.s32 	%r68, %r63, %r67;
	add.s32 	%r13, %r68, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r69, %r57, 128;
	shr.u32 	%r70, %r69, 6;
	add.s32 	%r71, %r70, %r58;
	shl.b32 	%r72, %r71, 2;
	add.s32 	%r73, %r63, %r72;
	add.s32 	%r15, %r73, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r74, %r57, 192;
	shr.u32 	%r75, %r74, 6;
	add.s32 	%r76, %r75, %r58;
	shl.b32 	%r77, %r76, 2;
	add.s32 	%r78, %r63, %r77;
	add.s32 	%r17, %r78, 768;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r68, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r73, 640;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r78, 896;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r79, %r37, 6, 3;
	add.s32 	%r80, %r79, %r59;
	shl.b32 	%r81, %r80, 2;
	add.s32 	%r82, %r63, %r81;
	ld.shared.u32 	%r27, [%r82];
	ld.shared.u32 	%r28, [%r82+4];
	ld.shared.u32 	%r29, [%r82+8];
	ld.shared.u32 	%r30, [%r82+12];
	or.b32  	%r83, %r59, 512;
	shr.u32 	%r84, %r83, 6;
	add.s32 	%r85, %r84, %r59;
	shl.b32 	%r86, %r85, 2;
	add.s32 	%r87, %r63, %r86;
	ld.shared.u32 	%r31, [%r87+2048];
	ld.shared.u32 	%r32, [%r87+2052];
	ld.shared.u32 	%r33, [%r87+2056];
	ld.shared.u32 	%r34, [%r87+2060];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 4                          // cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yu/cyuqtcxx7572y4362zhcst52lbzmdbcd4xwj5ao6csxxxgdmnuex.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 117
.b8 113
.b8 116
.b8 99
.b8 120
.b8 120
.b8 55
.b8 53
.b8 55
.b8 50
.b8 121
.b8 52
.b8 51
.b8 54
.b8 50
.b8 122
.b8 104
.b8 99
.b8 115
.b8 116
.b8 53
.b8 50
.b8 108
.b8 98
.b8 122
.b8 109
.b8 100
.b8 98
.b8 99
.b8 100
.b8 52
.b8 120
.b8 119
.b8 106
.b8 53
.b8 97
.b8 111
.b8 54
.b8 99
.b8 115
.b8 120
.b8 120
.b8 120
.b8 103
.b8 100
.b8 109
.b8 110
.b8 117
.b8 101
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
