; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = icmp slt i32 %9, 64, !dbg !14
  %12 = ashr exact i32 %9, 1, !dbg !15
  %13 = srem i32 %12, 2, !dbg !16
  %14 = srem i32 %10, 2, !dbg !17
  %15 = sdiv i32 %9, 4, !dbg !18
  %16 = sitofp i32 %13 to float, !dbg !19
  %17 = fadd float %16, 5.000000e-01, !dbg !20
  %18 = fmul float %17, 2.000000e+00, !dbg !21
  %19 = fadd float %18, -5.000000e-01, !dbg !22
  %20 = fcmp ogt float %19, 0.000000e+00, !dbg !23
  %21 = select i1 %20, float %19, float 0.000000e+00, !dbg !27
  %22 = fptosi float %21 to i32, !dbg !28
  %23 = tail call i32 @llvm.smin.i32(i32 %22, i32 2), !dbg !29
  %narrow = add nsw i32 %23, 1, !dbg !29
  %24 = sext i32 %narrow to i64, !dbg !29
  %25 = sitofp i32 %14 to float, !dbg !31
  %26 = fadd float %25, 5.000000e-01, !dbg !32
  %27 = fmul float %26, 2.000000e+00, !dbg !33
  %28 = fadd float %27, -5.000000e-01, !dbg !34
  %29 = fcmp ogt float %28, 0.000000e+00, !dbg !35
  %30 = select i1 %29, float %28, float 0.000000e+00, !dbg !37
  %31 = fptosi float %30 to i32, !dbg !38
  %32 = sext i32 %31 to i64, !dbg !39
  %33 = tail call i64 @llvm.smin.i64(i64 %32, i64 2), !dbg !40
  %34 = shl nsw i64 %24, 2, !dbg !42
  %35 = or disjoint i64 %34, 1, !dbg !43
  %36 = shl i32 %15, 4, !dbg !44
  %37 = sext i32 %36 to i64, !dbg !45
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !46
  %39 = getelementptr float, ptr addrspace(1) %38, i64 %37, !dbg !46
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !46
  %41 = getelementptr i8, ptr addrspace(1) %40, i64 4, !dbg !46
  %42 = getelementptr float, ptr addrspace(1) %41, i64 %34, !dbg !46
  %43 = getelementptr float, ptr addrspace(1) %42, i64 %37, !dbg !46
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #2, !dbg !47
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %11) #2, !dbg !47
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !48
  %47 = getelementptr float, ptr addrspace(1) %46, i64 %37, !dbg !48
  %48 = getelementptr float, ptr addrspace(1) %46, i64 %32, !dbg !48
  %49 = getelementptr float, ptr addrspace(1) %48, i64 %37, !dbg !48
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #2, !dbg !49
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #2, !dbg !49
  %52 = sitofp i32 %31 to float, !dbg !50
  %53 = fsub float %30, %52, !dbg !51
  %54 = fcmp ogt float %53, 0.000000e+00, !dbg !52
  %55 = select i1 %54, float %53, float 0.000000e+00, !dbg !54
  %56 = fcmp olt float %55, 1.000000e+00, !dbg !55
  %57 = select i1 %56, float %55, float 1.000000e+00, !dbg !57
  %58 = shl i32 %22, 2, !dbg !58
  %59 = add i32 %58, %36, !dbg !59
  %60 = add i32 %59, %31, !dbg !59
  %61 = sext i32 %59 to i64, !dbg !60
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !60
  %63 = sext i32 %60 to i64, !dbg !60
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !60
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %11) #2, !dbg !61
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %11) #2, !dbg !61
  %67 = sext i32 %58 to i64, !dbg !62
  %68 = or disjoint i64 %67, 1, !dbg !62
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !63
  %70 = getelementptr float, ptr addrspace(1) %69, i64 %37, !dbg !63
  %71 = getelementptr float, ptr addrspace(1) %41, i64 %67, !dbg !63
  %72 = getelementptr float, ptr addrspace(1) %71, i64 %37, !dbg !63
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %11) #2, !dbg !64
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %11) #2, !dbg !64
  %75 = insertelement <2 x i32> poison, i32 %50, i64 0, !dbg !49
  %76 = insertelement <2 x i32> %75, i32 %65, i64 1, !dbg !49
  %77 = bitcast <2 x i32> %76 to <2 x float>, !dbg !49
  %78 = insertelement <2 x i32> poison, i32 %44, i64 0, !dbg !47
  %79 = insertelement <2 x i32> %78, i32 %73, i64 1, !dbg !47
  %80 = bitcast <2 x i32> %79 to <2 x float>, !dbg !47
  %81 = fsub <2 x float> %80, %77, !dbg !65
  %82 = fmul <2 x float> %81, splat (float 5.000000e-01), !dbg !66
  %83 = fadd <2 x float> %82, %77, !dbg !67
  %84 = insertelement <2 x i32> poison, i32 %51, i64 0, !dbg !49
  %85 = insertelement <2 x i32> %84, i32 %66, i64 1, !dbg !49
  %86 = bitcast <2 x i32> %85 to <2 x float>, !dbg !49
  %87 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !47
  %88 = insertelement <2 x i32> %87, i32 %74, i64 1, !dbg !47
  %89 = bitcast <2 x i32> %88 to <2 x float>, !dbg !47
  %90 = fsub <2 x float> %89, %86, !dbg !65
  %91 = insertelement <2 x float> poison, float %57, i64 0, !dbg !66
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !66
  %93 = fmul <2 x float> %90, %92, !dbg !66
  %94 = fadd <2 x float> %93, %86, !dbg !67
  %95 = extractelement <2 x float> %83, i64 0, !dbg !68
  %96 = extractelement <2 x float> %83, i64 1, !dbg !69
  %97 = fsub float %95, %96, !dbg !68
  %98 = extractelement <2 x float> %94, i64 0, !dbg !68
  %99 = extractelement <2 x float> %94, i64 1, !dbg !69
  %100 = fsub float %98, %99, !dbg !68
  %101 = sitofp i32 %22 to float, !dbg !70
  %102 = fsub float %21, %101, !dbg !71
  %103 = fcmp ogt float %102, 0.000000e+00, !dbg !72
  %104 = select i1 %103, float %102, float 0.000000e+00, !dbg !74
  %105 = fcmp olt float %104, 1.000000e+00, !dbg !75
  %106 = select i1 %105, float %104, float 1.000000e+00, !dbg !77
  %107 = fmul float %97, %106, !dbg !78
  %108 = fmul float %106, %100, !dbg !78
  %109 = fadd float %96, %107, !dbg !69
  %110 = fadd float %99, %108, !dbg !69
  %111 = sext i32 %9 to i64, !dbg !79
  %112 = getelementptr float, ptr addrspace(1) %0, i64 %111, !dbg !79
  %113 = bitcast float %109 to i32, !dbg !80
  %114 = bitcast float %110 to i32, !dbg !80
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %113, i32 %114, ptr addrspace(1) %112, i1 %11) #2, !dbg !80
  ret void, !dbg !81
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnijo7c6oecned3gr6jyodghklop6fx65yvwnk7cbtppfnn5rayj.py", directory: "inductor_cache/ni")
!4 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0", linkageName: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 31, column: 18, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 36, column: 40, scope: !7)
!27 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 113, column: 29, scope: !24, inlinedAt: !30)
!30 = !DILocation(line: 41, column: 42, scope: !7)
!31 = !DILocation(line: 43, column: 21, scope: !7)
!32 = !DILocation(line: 44, column: 20, scope: !7)
!33 = !DILocation(line: 45, column: 20, scope: !7)
!34 = !DILocation(line: 46, column: 20, scope: !7)
!35 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !36)
!36 = !DILocation(line: 47, column: 42, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !36)
!38 = !DILocation(line: 48, column: 21, scope: !7)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 113, column: 29, scope: !24, inlinedAt: !41)
!41 = !DILocation(line: 50, column: 42, scope: !7)
!42 = !DILocation(line: 51, column: 41, scope: !7)
!43 = !DILocation(line: 51, column: 39, scope: !7)
!44 = !DILocation(line: 51, column: 52, scope: !7)
!45 = !DILocation(line: 51, column: 49, scope: !7)
!46 = !DILocation(line: 51, column: 31, scope: !7)
!47 = !DILocation(line: 51, column: 57, scope: !7)
!48 = !DILocation(line: 52, column: 31, scope: !7)
!49 = !DILocation(line: 52, column: 57, scope: !7)
!50 = !DILocation(line: 54, column: 21, scope: !7)
!51 = !DILocation(line: 55, column: 20, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !53)
!53 = !DILocation(line: 56, column: 42, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !53)
!55 = !DILocation(line: 110, column: 15, scope: !24, inlinedAt: !56)
!56 = !DILocation(line: 58, column: 42, scope: !7)
!57 = !DILocation(line: 113, column: 29, scope: !24, inlinedAt: !56)
!58 = !DILocation(line: 60, column: 41, scope: !7)
!59 = !DILocation(line: 60, column: 48, scope: !7)
!60 = !DILocation(line: 60, column: 31, scope: !7)
!61 = !DILocation(line: 60, column: 56, scope: !7)
!62 = !DILocation(line: 61, column: 39, scope: !7)
!63 = !DILocation(line: 61, column: 31, scope: !7)
!64 = !DILocation(line: 61, column: 56, scope: !7)
!65 = !DILocation(line: 53, column: 20, scope: !7)
!66 = !DILocation(line: 59, column: 20, scope: !7)
!67 = !DILocation(line: 65, column: 20, scope: !7)
!68 = !DILocation(line: 66, column: 20, scope: !7)
!69 = !DILocation(line: 72, column: 20, scope: !7)
!70 = !DILocation(line: 67, column: 20, scope: !7)
!71 = !DILocation(line: 68, column: 19, scope: !7)
!72 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !73)
!73 = !DILocation(line: 69, column: 42, scope: !7)
!74 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !73)
!75 = !DILocation(line: 110, column: 15, scope: !24, inlinedAt: !76)
!76 = !DILocation(line: 70, column: 42, scope: !7)
!77 = !DILocation(line: 113, column: 29, scope: !24, inlinedAt: !76)
!78 = !DILocation(line: 71, column: 20, scope: !7)
!79 = !DILocation(line: 73, column: 28, scope: !7)
!80 = !DILocation(line: 73, column: 40, scope: !7)
!81 = !DILocation(line: 73, column: 4, scope: !7)
