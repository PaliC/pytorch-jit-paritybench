; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_stack_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 8, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 254, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = or disjoint i32 %16, 1, !dbg !13
  %18 = icmp slt i32 %16, 1024, !dbg !14
  %.frozen = freeze i32 %16, !dbg !15
  %19 = sdiv i32 %.frozen, 8, !dbg !15
  %20 = srem i32 %19, 8, !dbg !16
  %21 = mul i32 %19, 8, !dbg !17
  %.decomposed = sub i32 %.frozen, %21, !dbg !17
  %22 = srem i32 %17, 8, !dbg !17
  %23 = sdiv i32 %16, 64, !dbg !18
  %24 = srem i32 %23, 4, !dbg !19
  %25 = icmp slt i32 %20, 4, !dbg !20
  %.lhs.trunc1 = trunc nsw i32 %22 to i8, !dbg !21
  %.lhs.trunc1.frozen = freeze i8 %.lhs.trunc1, !dbg !22
  %26 = sdiv i8 %.lhs.trunc1.frozen, 2, !dbg !22
  %27 = mul i8 %26, 2, !dbg !21
  %.decomposed7 = sub i8 %.lhs.trunc1.frozen, %27, !dbg !21
  %.sext2 = sext i8 %.decomposed7 to i32, !dbg !21
  %28 = shl nsw i32 %.sext2, 2, !dbg !23
  %29 = add nsw i32 %20, %28, !dbg !24
  %30 = icmp slt i32 %29, 4, !dbg !25
  %31 = and i1 %25, %30, !dbg !26
  %32 = shl nsw i32 %20, 2, !dbg !27
  %33 = shl nsw i32 %29, 2, !dbg !27
  %34 = shl nsw i32 %23, 4, !dbg !28
  %.lhs.trunc3 = trunc nsw i32 %.decomposed to i8, !dbg !22
  %35 = ashr exact i8 %.lhs.trunc3, 1, !dbg !22
  %.sext4 = sext i8 %35 to i32, !dbg !22
  %.sext6 = sext i8 %26 to i32, !dbg !22
  %36 = add nsw i32 %34, %.sext4, !dbg !29
  %37 = add nsw i32 %36, %32, !dbg !30
  %38 = add nsw i32 %34, %.sext6, !dbg !29
  %39 = add nsw i32 %38, %33, !dbg !30
  %40 = sext i32 %37 to i64, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !31
  %42 = sext i32 %39 to i64, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !31
  %44 = and i1 %18, %25, !dbg !32
  %45 = and i1 %18, %31, !dbg !32
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %44, i32 0, i1 %44) #1, !dbg !33
  %47 = bitcast i32 %46 to float, !dbg !33
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %45, i32 0, i1 %45) #1, !dbg !33
  %49 = bitcast i32 %48 to float, !dbg !33
  %50 = sext i32 %24 to i64, !dbg !34
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !34
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %44, i32 0, i1 %44) #1, !dbg !35
  %53 = bitcast i32 %52 to float, !dbg !35
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %45, i32 0, i1 %45) #1, !dbg !35
  %55 = bitcast i32 %54 to float, !dbg !35
  %56 = fadd float %47, %53, !dbg !36
  %57 = fadd float %49, %55, !dbg !36
  %58 = select i1 %31, float %57, float 0.000000e+00, !dbg !37
  %59 = icmp sgt i32 %29, 3, !dbg !38
  %60 = and i1 %25, %59, !dbg !39
  %61 = add nsw i32 %28, -4, !dbg !40
  %62 = add nsw i32 %20, %61, !dbg !41
  %63 = shl nsw i32 %62, 2, !dbg !42
  %64 = add nsw i32 %36, -16, !dbg !43
  %65 = add nsw i32 %64, %32, !dbg !44
  %66 = add nsw i32 %38, %63, !dbg !44
  %67 = sext i32 %65 to i64, !dbg !45
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %67, !dbg !45
  %69 = sext i32 %66 to i64, !dbg !45
  %70 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !45
  %71 = and i1 %18, %60, !dbg !46
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 false, i32 0, i1 false) #1, !dbg !47
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %71, i32 0, i1 %71) #1, !dbg !47
  %74 = bitcast i32 %73 to float, !dbg !47
  %75 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !48
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 false, i32 0, i1 false) #1, !dbg !49
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %75, i1 %71, i32 0, i1 %71) #1, !dbg !49
  %78 = bitcast i32 %77 to float, !dbg !49
  %79 = fadd float %74, %78, !dbg !50
  %80 = select i1 %60, float %79, float 0.000000e+00, !dbg !51
  %81 = select i1 %30, float %58, float %80, !dbg !52
  %82 = icmp sgt i32 %20, 3, !dbg !53
  %83 = add nsw i32 %20, -4, !dbg !54
  %84 = add nsw i32 %83, %28, !dbg !55
  %85 = icmp slt i32 %84, 4, !dbg !56
  %86 = and i1 %82, %85, !dbg !57
  %87 = shl nsw i32 %83, 2, !dbg !58
  %88 = shl nsw i32 %84, 2, !dbg !58
  %89 = add nsw i32 %36, %87, !dbg !59
  %90 = add nsw i32 %38, %88, !dbg !59
  %91 = sext i32 %89 to i64, !dbg !60
  %92 = getelementptr float, ptr addrspace(1) %4, i64 %91, !dbg !60
  %93 = sext i32 %90 to i64, !dbg !60
  %94 = getelementptr float, ptr addrspace(1) %4, i64 %93, !dbg !60
  %95 = and i1 %18, %82, !dbg !61
  %96 = and i1 %18, %86, !dbg !61
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %92, i1 %95, i32 0, i1 %95) #1, !dbg !62
  %98 = bitcast i32 %97 to float, !dbg !62
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %96, i32 0, i1 %96) #1, !dbg !62
  %100 = bitcast i32 %99 to float, !dbg !62
  %101 = getelementptr float, ptr addrspace(1) %5, i64 %50, !dbg !63
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %101, i1 %95, i32 0, i1 %95) #1, !dbg !64
  %103 = bitcast i32 %102 to float, !dbg !64
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %101, i1 %96, i32 0, i1 %96) #1, !dbg !64
  %105 = bitcast i32 %104 to float, !dbg !64
  %106 = fadd float %98, %103, !dbg !65
  %107 = fadd float %100, %105, !dbg !65
  %108 = select i1 %86, float %107, float 0.000000e+00, !dbg !66
  %109 = icmp sgt i32 %84, 3, !dbg !67
  %110 = and i1 %82, %109, !dbg !68
  %111 = add nsw i32 %83, %61, !dbg !69
  %112 = shl nsw i32 %111, 2, !dbg !70
  %113 = add nsw i32 %36, -32, !dbg !71
  %114 = add nsw i32 %113, %32, !dbg !72
  %115 = add nsw i32 %38, %112, !dbg !72
  %116 = sext i32 %114 to i64, !dbg !73
  %117 = getelementptr float, ptr addrspace(1) %6, i64 %116, !dbg !73
  %118 = sext i32 %115 to i64, !dbg !73
  %119 = getelementptr float, ptr addrspace(1) %6, i64 %118, !dbg !73
  %120 = and i1 %18, %110, !dbg !74
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %117, i1 false, i32 0, i1 false) #1, !dbg !75
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %120, i32 0, i1 %120) #1, !dbg !75
  %123 = bitcast i32 %122 to float, !dbg !75
  %124 = getelementptr float, ptr addrspace(1) %7, i64 %50, !dbg !76
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %124, i1 false, i32 0, i1 false) #1, !dbg !77
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %124, i1 %120, i32 0, i1 %120) #1, !dbg !77
  %127 = bitcast i32 %126 to float, !dbg !77
  %128 = fadd float %123, %127, !dbg !78
  %129 = select i1 %110, float %128, float 0.000000e+00, !dbg !79
  %130 = select i1 %85, float %108, float %129, !dbg !80
  %131 = select i1 %25, float %56, float %106, !dbg !81
  %132 = select i1 %25, float %81, float %130, !dbg !81
  %133 = sext i32 %16 to i64, !dbg !82
  %134 = getelementptr float, ptr addrspace(1) %8, i64 %133, !dbg !82
  %135 = bitcast float %131 to i32, !dbg !83
  %136 = bitcast float %132 to i32, !dbg !83
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %135, i32 %136, ptr addrspace(1) %134, i1 %18) #1, !dbg !83
  ret void, !dbg !84
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4qawlktcyjixancfq7oe5ntkvhvfvzsdjh7zqwhlvqdtreoakmr.py", directory: "inductor_cache/4q")
!4 = !{ptr @triton_poi_fused_stack_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_4", linkageName: "triton_poi_fused_stack_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 27, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 20, scope: !7)
!22 = !DILocation(line: 40, column: 72, scope: !7)
!23 = !DILocation(line: 34, column: 15, scope: !7)
!24 = !DILocation(line: 34, column: 27, scope: !7)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 19, scope: !7)
!27 = !DILocation(line: 40, column: 34, scope: !7)
!28 = !DILocation(line: 40, column: 60, scope: !7)
!29 = !DILocation(line: 40, column: 57, scope: !7)
!30 = !DILocation(line: 40, column: 66, scope: !7)
!31 = !DILocation(line: 40, column: 31, scope: !7)
!32 = !DILocation(line: 40, column: 85, scope: !7)
!33 = !DILocation(line: 40, column: 77, scope: !7)
!34 = !DILocation(line: 41, column: 31, scope: !7)
!35 = !DILocation(line: 41, column: 36, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 44, column: 35, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 48, column: 20, scope: !7)
!40 = !DILocation(line: 49, column: 41, scope: !7)
!41 = !DILocation(line: 49, column: 57, scope: !7)
!42 = !DILocation(line: 49, column: 34, scope: !7)
!43 = !DILocation(line: 49, column: 64, scope: !7)
!44 = !DILocation(line: 49, column: 73, scope: !7)
!45 = !DILocation(line: 49, column: 31, scope: !7)
!46 = !DILocation(line: 49, column: 92, scope: !7)
!47 = !DILocation(line: 49, column: 84, scope: !7)
!48 = !DILocation(line: 50, column: 31, scope: !7)
!49 = !DILocation(line: 50, column: 36, scope: !7)
!50 = !DILocation(line: 51, column: 20, scope: !7)
!51 = !DILocation(line: 53, column: 35, scope: !7)
!52 = !DILocation(line: 54, column: 34, scope: !7)
!53 = !DILocation(line: 57, column: 20, scope: !7)
!54 = !DILocation(line: 60, column: 35, scope: !7)
!55 = !DILocation(line: 60, column: 28, scope: !7)
!56 = !DILocation(line: 64, column: 20, scope: !7)
!57 = !DILocation(line: 65, column: 20, scope: !7)
!58 = !DILocation(line: 66, column: 34, scope: !7)
!59 = !DILocation(line: 66, column: 73, scope: !7)
!60 = !DILocation(line: 66, column: 31, scope: !7)
!61 = !DILocation(line: 66, column: 92, scope: !7)
!62 = !DILocation(line: 66, column: 84, scope: !7)
!63 = !DILocation(line: 67, column: 31, scope: !7)
!64 = !DILocation(line: 67, column: 36, scope: !7)
!65 = !DILocation(line: 68, column: 20, scope: !7)
!66 = !DILocation(line: 70, column: 35, scope: !7)
!67 = !DILocation(line: 71, column: 21, scope: !7)
!68 = !DILocation(line: 74, column: 20, scope: !7)
!69 = !DILocation(line: 75, column: 57, scope: !7)
!70 = !DILocation(line: 75, column: 34, scope: !7)
!71 = !DILocation(line: 75, column: 71, scope: !7)
!72 = !DILocation(line: 75, column: 80, scope: !7)
!73 = !DILocation(line: 75, column: 31, scope: !7)
!74 = !DILocation(line: 75, column: 99, scope: !7)
!75 = !DILocation(line: 75, column: 91, scope: !7)
!76 = !DILocation(line: 76, column: 31, scope: !7)
!77 = !DILocation(line: 76, column: 36, scope: !7)
!78 = !DILocation(line: 77, column: 20, scope: !7)
!79 = !DILocation(line: 79, column: 35, scope: !7)
!80 = !DILocation(line: 80, column: 35, scope: !7)
!81 = !DILocation(line: 0, scope: !7)
!82 = !DILocation(line: 84, column: 25, scope: !7)
!83 = !DILocation(line: 84, column: 37, scope: !7)
!84 = !DILocation(line: 84, column: 4, scope: !7)
