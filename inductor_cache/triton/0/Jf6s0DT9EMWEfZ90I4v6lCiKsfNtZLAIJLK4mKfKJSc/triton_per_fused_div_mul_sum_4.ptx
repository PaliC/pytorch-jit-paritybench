//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_div_mul_sum_4 // -- Begin function triton_per_fused_div_mul_sum_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_div_mul_sum_4
.visible .entry triton_per_fused_div_mul_sum_4(
	.param .u64 .ptr .global .align 1 triton_per_fused_div_mul_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_mul_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_mul_sum_4_param_2,
	.param .u32 triton_per_fused_div_mul_sum_4_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<65>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_div_mul_sum_4_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_div_mul_sum_4_param_1];
$L__tmp0:
	.loc	1 27 26                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:27:26
	mov.u32 	%r44, %tid.x;
	and.b32  	%r45, %r44, 31;
	ld.param.u64 	%rd9, [triton_per_fused_div_mul_sum_4_param_2];
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 60;
	and.b32  	%r48, %r46, 252;
	.loc	1 32 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:32:30
	mul.wide.u32 	%rd10, %r48, 4;
	add.s64 	%rd1, %rd8, %rd10;
	mov.pred 	%p1, -1;
	.loc	1 32 35                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:32:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r35, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r29, %r32, %r35 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:33:30
	mul.wide.u32 	%rd11, %r47, 4;
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 33 35                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r6;
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r8;
	.loc	1 34 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:34:30
	add.s64 	%rd3, %rd2, 256;
	.loc	1 34 40                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:34:40
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r10;
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r12;
	.loc	1 35 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:35:30
	add.s64 	%rd4, %rd2, 512;
	.loc	1 35 41                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:35:41
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r14;
	mov.b32 	%f11, %r15;
	mov.b32 	%f12, %r16;
	.loc	1 36 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:36:30
	add.s64 	%rd5, %rd2, 768;
	.loc	1 36 41                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:36:41
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r17;
	mov.b32 	%f14, %r18;
	mov.b32 	%f15, %r19;
	mov.b32 	%f16, %r20;
	.loc	1 37 30                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:37:30
	add.s64 	%rd6, %rd9, %rd10;
	.loc	1 37 35                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:37:35
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p1 ld.global.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r21;
	mov.b32 	%f18, %r22;
	mov.b32 	%f19, %r23;
	mov.b32 	%f20, %r24;
	.loc	1 38 18                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:38:18
	add.f32 	%f21, %f1, %f5;
	add.f32 	%f22, %f2, %f6;
	add.f32 	%f23, %f3, %f7;
	add.f32 	%f24, %f4, %f8;
	.loc	1 39 18                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:39:18
	add.f32 	%f25, %f21, %f9;
	add.f32 	%f26, %f22, %f10;
	add.f32 	%f27, %f23, %f11;
	add.f32 	%f28, %f24, %f12;
	.loc	1 40 18                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:40:18
	add.f32 	%f29, %f25, %f13;
	add.f32 	%f30, %f26, %f14;
	add.f32 	%f31, %f27, %f15;
	add.f32 	%f32, %f28, %f16;
	.loc	1 41 18                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:41:18
	mov.b32 	%r27, %f29;
	// begin inline asm
	div.full.f32 %r25, %r26, %r27;
	// end inline asm
	mov.b32 	%f33, %r25;
	mov.b32 	%r30, %f30;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f34, %r28;
	mov.b32 	%r33, %f31;
	// begin inline asm
	div.full.f32 %r31, %r32, %r33;
	// end inline asm
	mov.b32 	%f35, %r31;
	mov.b32 	%r36, %f32;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f36, %r34;
	.loc	1 42 19                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:42:19
	mul.f32 	%f37, %f34, %f18;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f38, %f33, %f17, %f37;
	fma.rn.f32 	%f39, %f35, %f19, %f38;
	fma.rn.f32 	%f40, %f36, %f20, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f40;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	mov.b32 	%f41, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f42;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f43, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f44;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f45, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f46;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f47, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f48;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f49, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r45, 0;
	shr.u32 	%r59, %r44, 3;
	and.b32  	%r60, %r59, 4;
	mov.u32 	%r61, global_smem;
	add.s32 	%r37, %r61, %r60;
	mov.b32 	%r38, %f50;
	// begin inline asm
	@%p7 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r44, 2;
	add.s32 	%r40, %r61, %r46;
	// begin inline asm
	@%p8 ld.shared.b32 %r39, [ %r40 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r39;
	shfl.sync.bfly.b32	%r62, %r39, 1, 31, -1;
	mov.b32 	%f52, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r63, %r44, 1;
	setp.eq.b32 	%p11, %r63, 1;
	not.pred 	%p12, %p11;
	and.pred  	%p9, %p8, %p12;
	mov.b32 	%r42, %f53;
	// begin inline asm
	@%p9 st.shared.b32 [ %r40 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f54, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f55, %f54, 0f00000000;
$L__tmp3:
	.loc	1 46 20                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:46:20
	mul.f32 	%f56, %f55, 0f3A83126F;
	.loc	1 47 4                          // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:47:4
	bar.sync 	0;
	.loc	1 48 63                         // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:48:63
	and.b32  	%r64, %r44, 63;
	setp.eq.s32 	%p10, %r64, 0;
	mov.b32 	%r43, %f56;
	// begin inline asm
	@%p10 st.global.b32 [ %rd7 + 0 ], { %r43 };
	// end inline asm
	.loc	1 48 4                          // cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py:48:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xw/cxwyp66uo5pu3jr3ejiofdhzy5a2vtzjh24knemgqtjmob22i36k.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 199                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 119
.b8 121
.b8 112
.b8 54
.b8 54
.b8 117
.b8 111
.b8 53
.b8 112
.b8 117
.b8 51
.b8 106
.b8 114
.b8 51
.b8 101
.b8 106
.b8 105
.b8 111
.b8 102
.b8 100
.b8 104
.b8 122
.b8 121
.b8 53
.b8 97
.b8 50
.b8 118
.b8 116
.b8 122
.b8 106
.b8 104
.b8 50
.b8 52
.b8 107
.b8 110
.b8 101
.b8 109
.b8 103
.b8 113
.b8 116
.b8 106
.b8 109
.b8 111
.b8 98
.b8 50
.b8 50
.b8 105
.b8 51
.b8 54
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
