; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_leaky_relu_11(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %4 = shl i32 %3, 9, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = shl i32 %5, 2, !dbg !12
  %7 = and i32 %6, 508, !dbg !12
  %8 = or disjoint i32 %4, %7, !dbg !13
  %9 = sext i32 %8 to i64, !dbg !14
  %10 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !14
  %11 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %10, i1 true) #1, !dbg !15
  %12 = extractvalue { i32, i32, i32, i32 } %11, 0, !dbg !15
  %13 = extractvalue { i32, i32, i32, i32 } %11, 1, !dbg !15
  %14 = extractvalue { i32, i32, i32, i32 } %11, 2, !dbg !15
  %15 = extractvalue { i32, i32, i32, i32 } %11, 3, !dbg !15
  %16 = bitcast i32 %12 to float, !dbg !15
  %17 = bitcast i32 %13 to float, !dbg !15
  %18 = bitcast i32 %14 to float, !dbg !15
  %19 = bitcast i32 %15 to float, !dbg !15
  %20 = fcmp ogt float %16, 0.000000e+00, !dbg !16
  %21 = fcmp ogt float %17, 0.000000e+00, !dbg !16
  %22 = fcmp ogt float %18, 0.000000e+00, !dbg !16
  %23 = fcmp ogt float %19, 0.000000e+00, !dbg !16
  %24 = fmul float %16, 0x3FC99999A0000000, !dbg !17
  %25 = fmul float %17, 0x3FC99999A0000000, !dbg !17
  %26 = fmul float %18, 0x3FC99999A0000000, !dbg !17
  %27 = fmul float %19, 0x3FC99999A0000000, !dbg !17
  %28 = select i1 %20, float %16, float %24, !dbg !18
  %29 = select i1 %21, float %17, float %25, !dbg !18
  %30 = select i1 %22, float %18, float %26, !dbg !18
  %31 = select i1 %23, float %19, float %27, !dbg !18
  %32 = bitcast float %28 to i32, !dbg !19
  %33 = bitcast float %29 to i32, !dbg !19
  %34 = bitcast float %30 to i32, !dbg !19
  %35 = bitcast float %31 to i32, !dbg !19
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %32, i32 %33, i32 %34, i32 %35, ptr addrspace(1) %10, i1 true) #1, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvz45vlan3fxdyy6yclwadll7ha7daf4ymylqqtxjfzxcofmkqxi.py", directory: "inductor_cache/vz")
!4 = !{ptr @triton_poi_fused_leaky_relu_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_leaky_relu_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_leaky_relu_11", linkageName: "triton_poi_fused_leaky_relu_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 27, column: 18, scope: !7)
!17 = !DILocation(line: 29, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 32, scope: !7)
!19 = !DILocation(line: 31, column: 39, scope: !7)
!20 = !DILocation(line: 31, column: 4, scope: !7)
