//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_masked_fill_mul_5 // -- Begin function triton_poi_fused__softmax_masked_fill_mul_5
                                        // @triton_poi_fused__softmax_masked_fill_mul_5
.visible .entry triton_poi_fused__softmax_masked_fill_mul_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_masked_fill_mul_5_param_7,
	.param .u32 triton_poi_fused__softmax_masked_fill_mul_5_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<46>;
	.reg .f32 	%f<14>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused__softmax_masked_fill_mul_5_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused__softmax_masked_fill_mul_5_param_1];
$L__tmp0:
	.loc	1 21 28                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:21:33
	shl.b32 	%r12, %r1, 7;
	ld.param.u64 	%rd11, [triton_poi_fused__softmax_masked_fill_mul_5_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused__softmax_masked_fill_mul_5_param_3];
	.loc	1 22 36                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:22:36
	mov.u32 	%r13, %tid.x;
	and.b32  	%r14, %r13, 127;
	ld.param.u64 	%rd13, [triton_poi_fused__softmax_masked_fill_mul_5_param_4];
	.loc	1 22 23                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:22:23
	or.b32  	%r15, %r12, %r14;
	ld.param.u64 	%rd14, [triton_poi_fused__softmax_masked_fill_mul_5_param_5];
	.loc	1 23 21                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:23:21
	setp.lt.s32 	%p1, %r15, 256;
	ld.param.u64 	%rd15, [triton_poi_fused__softmax_masked_fill_mul_5_param_6];
	ld.param.u64 	%rd16, [triton_poi_fused__softmax_masked_fill_mul_5_param_7];
	.loc	1 29 21                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:29:21
	shr.s32 	%r17, %r15, 31;
	shr.u32 	%r18, %r17, 28;
	add.s32 	%r19, %r15, %r18;
	shr.s32 	%r20, %r19, 4;
	.loc	1 24 19                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:24:19
	and.b32  	%r21, %r19, -16;
	sub.s32 	%r22, %r15, %r21;
	.loc	1 26 19                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:26:19
	bfe.s32 	%r23, %r1, 24, 1;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r15, %r24;
	shr.s32 	%r26, %r25, 2;
	.loc	1 28 26                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:28:26
	shr.s32 	%r27, %r25, 31;
	shr.u32 	%r28, %r27, 30;
	add.s32 	%r29, %r26, %r28;
	and.b32  	%r30, %r29, -4;
	sub.s32 	%r31, %r26, %r30;
	.loc	1 29 27                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:29:27
	shr.u32 	%r32, %r20, 30;
	add.s32 	%r33, %r20, %r32;
	and.b32  	%r34, %r33, -4;
	sub.s32 	%r35, %r20, %r34;
	and.b32  	%r36, %r25, -4;
	sub.s32 	%r37, %r15, %r36;
	.loc	1 30 26                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:30:26
	shr.u32 	%r38, %r27, 28;
	add.s32 	%r39, %r26, %r38;
	and.b32  	%r40, %r39, -16;
	sub.s32 	%r41, %r26, %r40;
	.loc	1 31 30                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:31:30
	cvt.s64.s32 	%rd17, %r22;
	add.s64 	%rd1, %rd9, %rd17;
	.loc	1 31 35                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:31:35
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p1 ld.global.L1::evict_last.b8 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16 	%p9, %rs2, 0;
	.loc	1 32 30                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:32:30
	mul.wide.s32 	%rd18, %r15, 4;
	add.s64 	%rd2, %rd10, %rd18;
	.loc	1 32 35                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:32:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r2;
	.loc	1 33 30                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:33:30
	mul.wide.s32 	%rd19, %r26, 4;
	add.s64 	%rd3, %rd11, %rd19;
	.loc	1 33 35                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:33:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r3;
	.loc	1 34 30                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:34:30
	add.s64 	%rd4, %rd12, %rd19;
	.loc	1 34 35                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:34:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 42                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:35:42
	mul.lo.s32 	%r42, %r31, 7;
	.loc	1 35 50                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:35:50
	shl.b32 	%r43, %r35, 5;
	.loc	1 35 31                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:35:31
	cvt.s64.s32 	%rd20, %r43;
	cvt.s64.s32 	%rd21, %r42;
	cvt.s64.s32 	%rd22, %r37;
	add.s64 	%rd23, %rd22, %rd21;
	add.s64 	%rd24, %rd23, %rd20;
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd26, %rd13, %rd25;
	add.s64 	%rd5, %rd26, 12;
	.loc	1 35 55                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:35:55
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 36 38                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:36:38
	shl.b32 	%r44, %r35, 2;
	.loc	1 36 36                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:36:36
	add.s32 	%r45, %r44, %r37;
	.loc	1 36 31                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:36:31
	mul.wide.s32 	%rd27, %r45, 4;
	add.s64 	%rd6, %rd14, %rd27;
	.loc	1 36 43                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:36:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 37 31                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:37:31
	mul.wide.s32 	%rd28, %r41, 4;
	add.s64 	%rd7, %rd15, %rd28;
	.loc	1 37 36                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:37:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 41 32                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:41:32
	selp.f32 	%f8, %f3, 0fFF800000, %p9;
	.loc	1 42 18                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:42:18
	sub.f32 	%f9, %f8, %f4;
	.loc	1 43 23                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:43:23
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	1 44 19                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:44:19
	mov.b32 	%r9, %f1;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f10, %r8;
	.loc	1 45 20                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:45:20
	mul.f32 	%f11, %f5, %f6;
	.loc	1 46 20                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:46:20
	mul.f32 	%f12, %f11, %f7;
	.loc	1 47 20                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:47:20
	mul.f32 	%f13, %f10, %f12;
	.loc	1 48 25                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:48:25
	add.s64 	%rd8, %rd16, %rd18;
	.loc	1 48 37                         // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:48:37
	mov.b32 	%r11, %f13;
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r11 };
	// end inline asm
	.loc	1 48 4                          // cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py:48:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/en/cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 110
.b8 103
.b8 101
.b8 108
.b8 103
.b8 117
.b8 113
.b8 119
.b8 54
.b8 98
.b8 122
.b8 106
.b8 121
.b8 107
.b8 119
.b8 114
.b8 105
.b8 100
.b8 52
.b8 103
.b8 98
.b8 114
.b8 55
.b8 118
.b8 122
.b8 98
.b8 50
.b8 107
.b8 106
.b8 107
.b8 109
.b8 101
.b8 54
.b8 119
.b8 97
.b8 117
.b8 99
.b8 55
.b8 119
.b8 110
.b8 105
.b8 97
.b8 97
.b8 121
.b8 112
.b8 106
.b8 108
.b8 114
.b8 55
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
