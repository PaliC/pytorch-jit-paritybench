; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_masked_fill_mul_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 256, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 16, !dbg !15
  %17 = mul i32 %16, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sdiv i32 %14, 4, !dbg !17
  %19 = srem i32 %18, 4, !dbg !18
  %20 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !19
  %21 = insertelement <2 x i32> %20, i32 %14, i64 1, !dbg !19
  %22 = srem <2 x i32> %21, splat (i32 4), !dbg !19
  %23 = srem i32 %18, 16, !dbg !20
  %24 = sext i32 %.decomposed to i64, !dbg !21
  %25 = getelementptr i1, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = tail call i8 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b8 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %25, i1 %15) #1, !dbg !22
  %.not = icmp eq i8 %26, 0, !dbg !22
  %27 = sext i32 %14 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %15) #1, !dbg !24
  %30 = bitcast i32 %29 to float, !dbg !24
  %31 = sext i32 %18 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !26
  %34 = bitcast i32 %33 to float, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %31, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %15) #1, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = extractelement <2 x i32> %22, i64 1, !dbg !29
  %39 = add nsw i32 %38, 3, !dbg !30
  %40 = mul nsw i32 %19, 7, !dbg !31
  %41 = add nsw i32 %39, %40, !dbg !32
  %42 = extractelement <2 x i32> %22, i64 0, !dbg !33
  %43 = shl nsw i32 %42, 5, !dbg !34
  %44 = add nsw i32 %41, %43, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %4, i64 %45, !dbg !36
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %15) #1, !dbg !37
  %48 = bitcast i32 %47 to float, !dbg !37
  %49 = shl nsw i32 %42, 2, !dbg !33
  %50 = add nsw i32 %49, %38, !dbg !29
  %51 = sext i32 %50 to i64, !dbg !38
  %52 = getelementptr float, ptr addrspace(1) %5, i64 %51, !dbg !38
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %15) #1, !dbg !39
  %54 = bitcast i32 %53 to float, !dbg !39
  %55 = sext i32 %23 to i64, !dbg !40
  %56 = getelementptr float, ptr addrspace(1) %6, i64 %55, !dbg !40
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %15) #1, !dbg !41
  %58 = bitcast i32 %57 to float, !dbg !41
  %59 = select i1 %.not, float %30, float 0xFFF0000000000000, !dbg !42
  %60 = fsub float %59, %34, !dbg !43
  %61 = fmul float %60, 0x3FF7154760000000, !dbg !44
  %62 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %61) #1, !dbg !44
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float %37) #1, !dbg !45
  %64 = fmul float %48, %54, !dbg !46
  %65 = fmul float %64, %58, !dbg !47
  %66 = fmul float %63, %65, !dbg !48
  %67 = getelementptr float, ptr addrspace(1) %7, i64 %27, !dbg !49
  %68 = bitcast float %66 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %67, i1 %15) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cengelguqw6bzjykwrid4gbr7vzb2kjkme6wauc7wniaaypjlr7t.py", directory: "inductor_cache/en")
!4 = !{ptr @triton_poi_fused__softmax_masked_fill_mul_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_masked_fill_mul_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_masked_fill_mul_5", linkageName: "triton_poi_fused__softmax_masked_fill_mul_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 29, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 26, scope: !7)
!19 = !DILocation(line: 29, column: 27, scope: !7)
!20 = !DILocation(line: 30, column: 26, scope: !7)
!21 = !DILocation(line: 31, column: 30, scope: !7)
!22 = !DILocation(line: 31, column: 35, scope: !7)
!23 = !DILocation(line: 32, column: 30, scope: !7)
!24 = !DILocation(line: 32, column: 35, scope: !7)
!25 = !DILocation(line: 33, column: 30, scope: !7)
!26 = !DILocation(line: 33, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 35, scope: !7)
!29 = !DILocation(line: 36, column: 36, scope: !7)
!30 = !DILocation(line: 35, column: 35, scope: !7)
!31 = !DILocation(line: 35, column: 42, scope: !7)
!32 = !DILocation(line: 35, column: 40, scope: !7)
!33 = !DILocation(line: 36, column: 38, scope: !7)
!34 = !DILocation(line: 35, column: 50, scope: !7)
!35 = !DILocation(line: 35, column: 47, scope: !7)
!36 = !DILocation(line: 35, column: 31, scope: !7)
!37 = !DILocation(line: 35, column: 55, scope: !7)
!38 = !DILocation(line: 36, column: 31, scope: !7)
!39 = !DILocation(line: 36, column: 43, scope: !7)
!40 = !DILocation(line: 37, column: 31, scope: !7)
!41 = !DILocation(line: 37, column: 36, scope: !7)
!42 = !DILocation(line: 41, column: 32, scope: !7)
!43 = !DILocation(line: 42, column: 18, scope: !7)
!44 = !DILocation(line: 43, column: 23, scope: !7)
!45 = !DILocation(line: 44, column: 19, scope: !7)
!46 = !DILocation(line: 45, column: 20, scope: !7)
!47 = !DILocation(line: 46, column: 20, scope: !7)
!48 = !DILocation(line: 47, column: 20, scope: !7)
!49 = !DILocation(line: 48, column: 25, scope: !7)
!50 = !DILocation(line: 48, column: 37, scope: !7)
!51 = !DILocation(line: 48, column: 4, scope: !7)
