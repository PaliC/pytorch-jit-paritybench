//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_clone_mean_view_33 // -- Begin function triton_per_fused_clone_mean_view_33
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_clone_mean_view_33
.visible .entry triton_per_fused_clone_mean_view_33(
	.param .u64 .ptr .global .align 1 triton_per_fused_clone_mean_view_33_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_clone_mean_view_33_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_clone_mean_view_33_param_2,
	.param .u32 triton_per_fused_clone_mean_view_33_param_3,
	.param .u32 triton_per_fused_clone_mean_view_33_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<128>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_clone_mean_view_33_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_clone_mean_view_33_param_1];
$L__tmp0:
	.loc	1 23 28                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:23:33
	shl.b32 	%r50, %r1, 5;
	ld.param.u64 	%rd8, [triton_per_fused_clone_mean_view_33_param_2];
	.loc	1 24 44                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:24:44
	mov.u32 	%r51, %tid.x;
	bfe.u32 	%r52, %r51, 4, 4;
	shl.b32 	%r53, %r51, 2;
	and.b32  	%r54, %r53, 28;
	and.b32  	%r55, %r51, 31;
	.loc	1 24 23                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:24:23
	or.b32  	%r56, %r50, %r52;
	or.b32  	%r57, %r56, 16;
	or.b32  	%r58, %r50, %r54;
	or.b32  	%r59, %r50, %r55;
	.loc	1 25 21                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:25:21
	setp.lt.s32 	%p1, %r56, 512;
	setp.lt.s32 	%p6, %r57, 512;
	setp.lt.s32 	%p21, %r58, 512;
	setp.lt.s32 	%p24, %r59, 512;
	.loc	1 26 34                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:26:34
	and.b32  	%r60, %r53, 60;
	.loc	1 32 19                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:32:19
	shr.s32 	%r62, %r58, 31;
	shr.u32 	%r63, %r62, 25;
	add.s32 	%r64, %r58, %r63;
	.loc	1 31 19                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:31:19
	and.b32  	%r65, %r64, -128;
	sub.s32 	%r66, %r58, %r65;
	.loc	1 33 38                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:33:38
	shl.b32 	%r67, %r56, 6;
	shl.b32 	%r68, %r57, 6;
	.loc	1 33 35                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:33:35
	or.b32  	%r69, %r67, %r60;
	or.b32  	%r70, %r68, %r60;
	.loc	1 33 30                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:33:30
	mul.wide.s32 	%rd9, %r69, 4;
	add.s64 	%rd1, %rd7, %rd9;
	mul.wide.s32 	%rd10, %r70, 4;
	add.s64 	%rd2, %rd7, %rd10;
	mov.b32 	%r6, 0;
	.loc	1 33 43                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:33:43
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r28, %r30, %r32 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r30, %r6;
	@!%p1 mov.u32 %r32, %r6;
	// end inline asm
	mov.b32 	%f1, %r26;
	mov.b32 	%f2, %r28;
	mov.b32 	%f3, %r30;
	mov.b32 	%f4, %r32;
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	@%p6 ld.global.v4.b32 { %r34, %r36, %r38, %r40 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r34, %r6;
	@!%p6 mov.u32 %r36, %r6;
	@!%p6 mov.u32 %r38, %r6;
	@!%p6 mov.u32 %r40, %r6;
	// end inline asm
	mov.b32 	%f5, %r34;
	mov.b32 	%f6, %r36;
	mov.b32 	%f7, %r38;
	mov.b32 	%f8, %r40;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f2;
	add.f32 	%f10, %f9, %f3;
	add.f32 	%f11, %f10, %f4;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	add.f32 	%f13, %f5, %f6;
	add.f32 	%f14, %f13, %f7;
	add.f32 	%f15, %f14, %f8;
	selp.f32 	%f16, %f15, 0f00000000, %p6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f12;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f17, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f12, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f18;
	shfl.sync.bfly.b32	%r74, %r73, 4, 31, -1;
	mov.b32 	%f19, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f20;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	mov.b32 	%f21, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f22;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f23, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f16;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f25, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f16, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f26;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f27, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f28;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f29, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f30;
	shfl.sync.bfly.b32	%r86, %r85, 1, 31, -1;
	mov.b32 	%f31, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
$L__tmp2:
	.loc	1 38 18                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:38:18
	shl.b32 	%r87, %r52, 2;
	mov.u32 	%r88, global_smem;
	add.s32 	%r18, %r88, %r87;
	mov.b32 	%r19, %f24;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 64;
	mov.b32 	%r21, %f32;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r89, %r55, 2;
	add.s32 	%r90, %r88, %r89;
	ld.shared.u32 	%r23, [%r90];
	mov.b32 	%r24, 1115684864;
	// begin inline asm
	div.full.f32 %r49, %r23, %r24;
	// end inline asm
	.loc	1 39 34                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:34
	shl.b32 	%r91, %r51, 4;
	and.b32  	%r92, %r91, 3968;
	.loc	1 39 44                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:44
	shl.b32 	%r93, %r64, 6;
	and.b32  	%r94, %r93, -8192;
	.loc	1 39 30                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:30
	add.s32 	%r95, %r94, %r66;
	.loc	1 39 39                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:39
	add.s32 	%r96, %r95, %r92;
	add.s32 	%r97, %r96, 4096;
	.loc	1 39 25                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:25
	mul.wide.s32 	%rd11, %r96, 4;
	add.s64 	%rd3, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r97, 4;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 39 55                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:39:55
	bar.sync 	0;
	shl.b32 	%r98, %r51, 7;
	and.b32  	%r99, %r98, 1920;
	or.b32  	%r100, %r99, %r52;
	and.b32  	%r101, %r53, 1020;
	shr.u32 	%r102, %r99, 3;
	add.s32 	%r103, %r88, %r102;
	shl.b32 	%r104, %r100, 2;
	add.s32 	%r25, %r103, %r104;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r105, %r99, 32;
	shr.u32 	%r106, %r105, 3;
	add.s32 	%r107, %r88, %r106;
	add.s32 	%r108, %r107, %r104;
	add.s32 	%r27, %r108, 128;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r109, %r99, 64;
	shr.u32 	%r110, %r109, 3;
	add.s32 	%r111, %r88, %r110;
	add.s32 	%r112, %r111, %r104;
	add.s32 	%r29, %r112, 256;
	// begin inline asm
	@%p11 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	or.b32  	%r113, %r99, 96;
	shr.u32 	%r114, %r113, 3;
	add.s32 	%r115, %r88, %r114;
	add.s32 	%r116, %r115, %r104;
	add.s32 	%r31, %r116, 384;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r25, 64;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r108, 192;
	// begin inline asm
	@%p11 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r112, 320;
	// begin inline asm
	@%p11 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r116, 448;
	// begin inline asm
	@%p11 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r117, %r51, 1;
	and.b32  	%r118, %r117, 124;
	add.s32 	%r119, %r88, %r118;
	shl.b32 	%r120, %r101, 2;
	add.s32 	%r121, %r119, %r120;
	ld.shared.u32 	%r41, [%r121];
	ld.shared.u32 	%r42, [%r121+4];
	ld.shared.u32 	%r43, [%r121+8];
	ld.shared.u32 	%r44, [%r121+12];
	or.b32  	%r122, %r101, 1024;
	shr.u32 	%r123, %r122, 3;
	and.b32  	%r124, %r123, 252;
	add.s32 	%r125, %r88, %r124;
	add.s32 	%r126, %r125, %r120;
	ld.shared.u32 	%r45, [%r126+4096];
	ld.shared.u32 	%r46, [%r126+4100];
	ld.shared.u32 	%r47, [%r126+4104];
	ld.shared.u32 	%r48, [%r126+4108];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd3 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd4 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 40 4                          // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:40:4
	bar.sync 	0;
	.loc	1 41 28                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:41:28
	mul.wide.s32 	%rd13, %r59, 4;
	add.s64 	%rd5, %rd6, %rd13;
	.loc	1 41 39                         // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:41:39
	and.b32  	%r127, %r51, 224;
	setp.eq.s32 	%p25, %r127, 0;
	and.pred  	%p23, %p25, %p24;
	// begin inline asm
	@%p23 st.global.b32 [ %rd5 + 0 ], { %r49 };
	// end inline asm
	.loc	1 41 4                          // cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/er/cerznj6yrsvfgv5jrh6kaww6ufm5dlap5ncgdd2fy2kac6edyxu7.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 114
.b8 122
.b8 110
.b8 106
.b8 54
.b8 121
.b8 114
.b8 115
.b8 118
.b8 102
.b8 103
.b8 118
.b8 53
.b8 106
.b8 114
.b8 104
.b8 54
.b8 107
.b8 97
.b8 119
.b8 119
.b8 54
.b8 117
.b8 102
.b8 109
.b8 53
.b8 100
.b8 108
.b8 97
.b8 112
.b8 53
.b8 110
.b8 99
.b8 103
.b8 100
.b8 100
.b8 50
.b8 102
.b8 121
.b8 50
.b8 107
.b8 97
.b8 99
.b8 54
.b8 101
.b8 100
.b8 121
.b8 120
.b8 117
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 118
.b8 105
.b8 101
.b8 119
.b8 95
.b8 51
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
