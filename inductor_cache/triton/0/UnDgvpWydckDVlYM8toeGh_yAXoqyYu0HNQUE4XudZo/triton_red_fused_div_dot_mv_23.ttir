#loc = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":37:25)
#loc38 = loc(callsite(#loc1 at #loc16))
module {
  tt.func public @triton_red_fused_div_dot_mv_23(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":19:0)) attributes {noinline = false} {
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c3072_i32 = arith.constant 3072 : i32 loc(#loc1)
    %cst = arith.constant dense<3072> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc5)
    %4 = scf.for %arg7 = %c0_i32 to %c3072_i32 step %c2048_i32 iter_args(%arg8 = %cst_0) -> (tensor<1x2048xf32>)  : i32 {
      %17 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc7)
      %18 = arith.addi %17, %1 : tensor<1x2048xi32> loc(#loc7)
      %19 = arith.cmpi slt, %18, %cst : tensor<1x2048xi32> loc(#loc8)
      %20 = tt.addptr %2, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc4)
      %21 = tt.load %20, %19, %cst_0 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc9)
      %22 = tt.addptr %3, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc5)
      %23 = tt.load %22, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc10)
      %24 = arith.mulf %21, %23 : tensor<1x2048xf32> loc(#loc11)
      %25 = arith.addf %arg8, %24 : tensor<1x2048xf32> loc(#loc12)
      %26 = arith.select %19, %25, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc13)
      scf.yield %26 : tensor<1x2048xf32> loc(#loc14)
    } loc(#loc6)
    %5 = "tt.reduce"(%4) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc16)), %arg8: f32 loc(callsite(#loc1 at #loc16))):
      %17 = arith.addf %arg7, %arg8 : f32 loc(#loc40)
      tt.reduce.return %17 : f32 loc(#loc37)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc37)
    %6 = tt.expand_dims %5 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %7 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %8 = tt.load %7 : !tt.ptr<f32> loc(#loc20)
    %9 = tt.splat %8 : f32 -> tensor<1x1xf32> loc(#loc21)
    %10 = arith.mulf %9, %6 : tensor<1x1xf32> loc(#loc22)
    gpu.barrier loc(#loc23)
    %11 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc24)
    %12 = tt.splat %11 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    tt.store %12, %10 : tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc26)
    %14 = tt.broadcast %10 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc27)
    %15 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc28)
    %16 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc29)
    scf.for %arg7 = %c0_i32 to %c3072_i32 step %c2048_i32  : i32 {
      %17 = tt.splat %arg7 : i32 -> tensor<1x2048xi32> loc(#loc31)
      %18 = arith.addi %17, %1 : tensor<1x2048xi32> loc(#loc31)
      %19 = arith.cmpi slt, %18, %cst : tensor<1x2048xi32> loc(#loc32)
      %20 = tt.addptr %13, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc26)
      %21 = tt.load %20, %19, %cst_0 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc33)
      %22 = arith.divf %21, %14 : tensor<1x2048xf32> loc(#loc27)
      %23 = tt.addptr %15, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc28)
      tt.store %23, %22, %19 : tensor<1x2048x!tt.ptr<f32>> loc(#loc34)
      %24 = tt.addptr %16, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc29)
      tt.store %24, %22, %19 : tensor<1x2048x!tt.ptr<f32>> loc(#loc35)
    } loc(#loc30)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":25:25)
#loc3 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":25:33)
#loc4 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":31:34)
#loc5 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":32:34)
#loc6 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":27:36)
#loc7 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":28:27)
#loc8 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":29:25)
#loc9 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":31:39)
#loc10 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":32:39)
#loc11 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":33:22)
#loc12 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":35:23)
#loc13 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":36:38)
#loc14 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":36:8)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":37:28)
#loc19 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":38:30)
#loc20 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":38:19)
#loc21 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":39:33)
#loc22 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":40:18)
#loc23 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":41:4)
#loc24 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":42:28)
#loc25 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":42:70)
#loc26 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":47:34)
#loc27 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":48:23)
#loc28 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":49:29)
#loc29 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":50:29)
#loc30 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":43:36)
#loc31 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":44:27)
#loc32 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":45:25)
#loc33 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":47:39)
#loc34 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":49:76)
#loc35 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":50:76)
#loc36 = loc("inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py":43:4)
#loc37 = loc(callsite(#loc15 at #loc16))
#loc39 = loc(callsite(#loc17 at #loc15))
#loc40 = loc(callsite(#loc39 at #loc16))
