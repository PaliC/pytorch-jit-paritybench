//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_div_dot_mv_23 // -- Begin function triton_red_fused_div_dot_mv_23
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_div_dot_mv_23
.visible .entry triton_red_fused_div_dot_mv_23(
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_div_dot_mv_23_param_5,
	.param .u32 triton_red_fused_div_dot_mv_23_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b32 	%r<123>;
	.reg .f32 	%f<54>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_red_fused_div_dot_mv_23_param_0];
	ld.param.u64 	%rd13, [triton_red_fused_div_dot_mv_23_param_1];
$L__tmp0:
	.loc	1 25 33                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:25:33
	mov.u32 	%r97, %tid.x;
	and.b32  	%r98, %r97, 31;
	ld.param.u64 	%rd14, [triton_red_fused_div_dot_mv_23_param_2];
	shl.b32 	%r99, %r97, 2;
	ld.param.u64 	%rd5, [triton_red_fused_div_dot_mv_23_param_3];
	and.b32  	%r100, %r99, 2044;
	ld.param.u64 	%rd15, [triton_red_fused_div_dot_mv_23_param_4];
	.loc	1 27 36                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:27:36
	cvt.u64.u32 	%rd16, %r100;
	ld.param.u64 	%rd17, [triton_red_fused_div_dot_mv_23_param_5];
	.loc	1 31 34                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:34
	mul.wide.u32 	%rd18, %r100, 4;
	add.s64 	%rd1, %rd13, %rd18;
	mov.b32 	%r5, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:39
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r5;
	@!%p1 mov.u32 %r2, %r5;
	@!%p1 mov.u32 %r3, %r5;
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 32 34                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:34
	add.s64 	%rd2, %rd14, %rd18;
	.loc	1 32 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r9, %r5;
	@!%p1 mov.u32 %r10, %r5;
	@!%p1 mov.u32 %r11, %r5;
	@!%p1 mov.u32 %r12, %r5;
	// end inline asm
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r12;
	.loc	1 35 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:35:23
	fma.rn.f32 	%f5, %f1, %f3, 0f00000000;
	fma.rn.f32 	%f6, %f2, %f4, 0f00000000;
	.loc	1 28 27                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:28:27
	or.b64  	%rd19, %rd16, 2048;
	.loc	1 29 25                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:29:25
	setp.lt.u64 	%p11, %rd19, 3072;
	.loc	1 31 34                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:34
	add.s64 	%rd3, %rd1, 8192;
	.loc	1 31 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:39
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r17, %r5;
	@!%p11 mov.u32 %r18, %r5;
	@!%p11 mov.u32 %r19, %r5;
	@!%p11 mov.u32 %r20, %r5;
	// end inline asm
	mov.b32 	%f7, %r19;
	mov.b32 	%f8, %r20;
	.loc	1 32 34                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:34
	add.s64 	%rd4, %rd2, 8192;
	.loc	1 32 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:39
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p11 ld.global.L1::evict_first.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd4 + 0 ];
	@!%p11 mov.u32 %r25, %r5;
	@!%p11 mov.u32 %r26, %r5;
	@!%p11 mov.u32 %r27, %r5;
	@!%p11 mov.u32 %r28, %r5;
	// end inline asm
	mov.b32 	%f9, %r27;
	mov.b32 	%f10, %r28;
	.loc	1 35 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:35:23
	fma.rn.f32 	%f11, %f7, %f9, %f5;
	fma.rn.f32 	%f12, %f8, %f10, %f6;
	.loc	1 31 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:39
	mov.b32 	%f13, %r1;
	mov.b32 	%f14, %r2;
	.loc	1 32 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:39
	mov.b32 	%f15, %r9;
	mov.b32 	%f16, %r10;
	.loc	1 35 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:35:23
	fma.rn.f32 	%f17, %f14, %f16, 0f00000000;
	fma.rn.f32 	%f18, %f13, %f15, 0f00000000;
	.loc	1 31 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:31:39
	mov.b32 	%f19, %r18;
	mov.b32 	%f20, %r17;
	.loc	1 32 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:32:39
	mov.b32 	%f21, %r26;
	mov.b32 	%f22, %r25;
	.loc	1 35 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:35:23
	fma.rn.f32 	%f23, %f20, %f22, %f18;
	fma.rn.f32 	%f24, %f19, %f21, %f17;
	.loc	1 36 38                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:36:38
	selp.f32 	%f25, %f24, %f17, %p11;
	selp.f32 	%f26, %f23, %f18, %p11;
	selp.f32 	%f27, %f11, %f5, %p11;
	selp.f32 	%f28, %f12, %f6, %p11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f26, %f25;
	add.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f28, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f31;
	shfl.sync.bfly.b32	%r102, %r101, 16, 31, -1;
	mov.b32 	%f32, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f33;
	shfl.sync.bfly.b32	%r104, %r103, 8, 31, -1;
	mov.b32 	%f34, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f35;
	shfl.sync.bfly.b32	%r106, %r105, 4, 31, -1;
	mov.b32 	%f36, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f37;
	shfl.sync.bfly.b32	%r108, %r107, 2, 31, -1;
	mov.b32 	%f38, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f39;
	shfl.sync.bfly.b32	%r110, %r109, 1, 31, -1;
	mov.b32 	%f40, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r98, 0;
	shr.u32 	%r111, %r97, 3;
	and.b32  	%r112, %r111, 60;
	mov.u32 	%r113, global_smem;
	add.s32 	%r33, %r113, %r112;
	mov.b32 	%r34, %f41;
	// begin inline asm
	@%p21 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r97, 16;
	add.s32 	%r36, %r113, %r99;
	// begin inline asm
	@%p22 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r35;
	shfl.sync.bfly.b32	%r114, %r35, 8, 31, -1;
	mov.b32 	%f43, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f44;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f45, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f46;
	shfl.sync.bfly.b32	%r118, %r117, 2, 31, -1;
	mov.b32 	%f47, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f48;
	shfl.sync.bfly.b32	%r120, %r119, 1, 31, -1;
	mov.b32 	%f49, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r121, %r97, 15;
	setp.eq.s32 	%p40, %r121, 0;
	and.pred  	%p23, %p22, %p40;
	mov.b32 	%r38, %f50;
	// begin inline asm
	@%p23 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f51, [global_smem];
$L__tmp2:
	.loc	1 38 19                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:38:19
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r39;
	.loc	1 40 18                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:40:18
	mul.f32 	%f53, %f51, %f52;
	.loc	1 41 4                          // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:41:4
	bar.sync 	0;
	.loc	1 42 70                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:42:70
	and.b32  	%r122, %r97, 511;
	setp.eq.s32 	%p25, %r122, 0;
	mov.b32 	%r40, %f53;
	// begin inline asm
	@%p25 st.global.b32 [ %rd6 + 0 ], { %r40 };
	// end inline asm
	.loc	1 47 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:47:39
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r59, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r50, %r53, %r56, %r59 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r50, %r5;
	@!%p1 mov.u32 %r53, %r5;
	@!%p1 mov.u32 %r56, %r5;
	@!%p1 mov.u32 %r59, %r5;
	// end inline asm
	.loc	1 48 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:48:23
	// begin inline asm
	div.full.f32 %r61, %r50, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r62, %r53, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r63, %r56, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r64, %r59, %r40;
	// end inline asm
	.loc	1 49 29                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:49:29
	add.s64 	%rd8, %rd15, %rd18;
	.loc	1 49 76                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:49:76
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r61, %r62, %r63, %r64 };
	// end inline asm
	.loc	1 50 29                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:50:29
	add.s64 	%rd9, %rd17, %rd18;
	.loc	1 50 76                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:50:76
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r61, %r62, %r63, %r64 };
	// end inline asm
	.loc	1 47 39                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:47:39
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r81, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r87, 0x0;
	@%p11 ld.global.L1::evict_first.v4.b32 { %r78, %r81, %r84, %r87 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r78, %r5;
	@!%p11 mov.u32 %r81, %r5;
	@!%p11 mov.u32 %r84, %r5;
	@!%p11 mov.u32 %r87, %r5;
	// end inline asm
	.loc	1 48 23                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:48:23
	// begin inline asm
	div.full.f32 %r89, %r78, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r90, %r81, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r91, %r84, %r40;
	// end inline asm
	// begin inline asm
	div.full.f32 %r92, %r87, %r40;
	// end inline asm
	.loc	1 49 29                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:49:29
	add.s64 	%rd11, %rd8, 8192;
	.loc	1 49 76                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:49:76
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd11 + 0 ], { %r89, %r90, %r91, %r92 };
	// end inline asm
	.loc	1 50 29                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:50:29
	add.s64 	%rd12, %rd9, 8192;
	.loc	1 50 76                         // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:50:76
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd12 + 0 ], { %r89, %r90, %r91, %r92 };
	// end inline asm
	.loc	1 43 4                          // cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wb/cwb4zqwmqidnzm4u3gl5zyttcs4epqb5kq366pyn6vrdnjf4amtg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 175                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 98
.b8 52
.b8 122
.b8 113
.b8 119
.b8 109
.b8 113
.b8 105
.b8 100
.b8 110
.b8 122
.b8 109
.b8 52
.b8 117
.b8 51
.b8 103
.b8 108
.b8 53
.b8 122
.b8 121
.b8 116
.b8 116
.b8 99
.b8 115
.b8 52
.b8 101
.b8 112
.b8 113
.b8 98
.b8 53
.b8 107
.b8 113
.b8 51
.b8 54
.b8 54
.b8 112
.b8 121
.b8 110
.b8 54
.b8 118
.b8 114
.b8 100
.b8 110
.b8 106
.b8 102
.b8 52
.b8 97
.b8 109
.b8 116
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 109
.b8 118
.b8 95
.b8 50
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
