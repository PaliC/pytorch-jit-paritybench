; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_convolution_relu_threshold_backward_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = and i32 %9, 127, !dbg !12
  %13 = or disjoint i32 %12, 128, !dbg !12
  %14 = or disjoint i32 %8, %11, !dbg !13
  %15 = or disjoint i32 %8, %12, !dbg !13
  %16 = or disjoint i32 %8, %13, !dbg !13
  %17 = icmp slt i32 %14, 768, !dbg !14
  %18 = icmp slt i32 %15, 768, !dbg !14
  %19 = icmp slt i32 %16, 768, !dbg !14
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %21 = icmp slt i32 %20, 9, !dbg !16
  %.frozen = freeze i32 %14, !dbg !17
  %22 = sdiv i32 %.frozen, 192, !dbg !17
  %23 = mul i32 %22, 192, !dbg !18
  %.decomposed = sub i32 %.frozen, %23, !dbg !18
  %24 = mul i32 %20, 192, !dbg !19
  %25 = add i32 %.decomposed, %24, !dbg !20
  %26 = mul i32 %22, 1728, !dbg !21
  %27 = add i32 %25, %26, !dbg !22
  %28 = sext i32 %27 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = and i1 %21, %17, !dbg !24
  %31 = and i1 %21, %18, !dbg !24
  %32 = and i1 %21, %19, !dbg !24
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %29, i1 %30) #2, !dbg !25
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !25
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !25
  %36 = sext i32 %.decomposed to i64, !dbg !26
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !26
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %17) #2, !dbg !27
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !27
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !27
  %41 = mul i32 %15, 9, !dbg !28
  %42 = mul i32 %16, 9, !dbg !28
  %43 = add i32 %41, %20, !dbg !29
  %44 = add i32 %42, %20, !dbg !29
  %45 = sext i32 %43 to i64, !dbg !30
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !30
  %47 = sext i32 %44 to i64, !dbg !30
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !30
  %.idx = shl nuw nsw i32 %11, 3, !dbg !31
  %49 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx, !dbg !31
  %50 = shl nuw nsw i32 %11, 1, !dbg !31
  %51 = or disjoint i32 %50, 2, !dbg !31
  %52 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %51, !dbg !31
  %.idx1 = shl nuw nsw i32 %12, 3, !dbg !31
  %53 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx1, !dbg !31
  %.idx2 = shl nuw nsw i32 %13, 3, !dbg !31
  %54 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %.idx2, !dbg !31
  %55 = getelementptr i1, ptr addrspace(1) %3, i64 %28, !dbg !32
  %56 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !25
  %57 = insertelement <2 x i32> %56, i32 %35, i64 1, !dbg !25
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !25
  %59 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !27
  %60 = insertelement <2 x i32> %59, i32 %40, i64 1, !dbg !27
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !27
  %62 = fadd <2 x float> %58, %61, !dbg !33
  %63 = fcmp olt <2 x float> %62, zeroinitializer, !dbg !34
  %64 = select <2 x i1> %63, <2 x float> zeroinitializer, <2 x float> %62, !dbg !38
  %65 = fcmp ole <2 x float> %64, zeroinitializer, !dbg !39
  %66 = extractelement <2 x float> %64, i64 0, !dbg !31
  %67 = bitcast float %66 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %49, <1 x i32> %67, i1 true) #2, !dbg !31
  %68 = extractelement <2 x float> %64, i64 1, !dbg !31
  %69 = bitcast float %68 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %52, <1 x i32> %69, i1 true) #2, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %70 = load i32, ptr addrspace(3) %53, align 8, !dbg !31
  %71 = load i32, ptr addrspace(3) %54, align 8, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %46, i1 %31) #2, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %71, ptr addrspace(1) %48, i1 %32) #2, !dbg !31
  %72 = zext <2 x i1> %65 to <2 x i8>, !dbg !40
  %73 = bitcast <2 x i8> %72 to i16, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %73, ptr addrspace(1) %55, i1 %30) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3bzpzr4ees7k2bgk45b5lxigoz26jhrycl7tzt3gwshkuexwkuv.py", directory: "inductor_cache/3b")
!4 = !{ptr @triton_poi_fused_convolution_relu_threshold_backward_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_threshold_backward_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_threshold_backward_8", linkageName: "triton_poi_fused_convolution_relu_threshold_backward_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 30, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 49, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 32, column: 30, scope: !7)
!24 = !DILocation(line: 32, column: 62, scope: !7)
!25 = !DILocation(line: 32, column: 54, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 35, scope: !7)
!28 = !DILocation(line: 39, column: 32, scope: !7)
!29 = !DILocation(line: 39, column: 30, scope: !7)
!30 = !DILocation(line: 39, column: 25, scope: !7)
!31 = !DILocation(line: 39, column: 43, scope: !7)
!32 = !DILocation(line: 40, column: 25, scope: !7)
!33 = !DILocation(line: 34, column: 18, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 36, column: 40, scope: !7)
!38 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 38, column: 19, scope: !7)
!40 = !DILocation(line: 40, column: 55, scope: !7)
!41 = !DILocation(line: 40, column: 4, scope: !7)
