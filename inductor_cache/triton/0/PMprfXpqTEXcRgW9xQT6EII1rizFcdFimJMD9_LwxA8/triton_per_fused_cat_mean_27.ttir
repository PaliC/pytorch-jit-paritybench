#loc = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0)
#loc1 = loc(unknown)
#loc41 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":58:26)
#loc54 = loc(callsite(#loc1 at #loc41))
module {
  tt.func public @triton_per_fused_cat_mean_27(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0), %arg6: i32 loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":19:0)) attributes {noinline = false} {
    %c-256_i32 = arith.constant -256 : i32 loc(#loc1)
    %c2304_i32 = arith.constant 2304 : i32 loc(#loc1)
    %c256_i64 = arith.constant 256 : i64 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %cst = arith.constant dense<9.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c2048_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.remsi %0, %c512_i32 : i32 loc(#loc7)
    %7 = arith.divsi %0, %c512_i32 : i32 loc(#loc8)
    %8 = arith.extsi %6 : i32 to i64 loc(#loc9)
    %9 = arith.cmpi slt, %8, %c256_i64 : i64 loc(#loc9)
    %10 = arith.muli %4, %cst_1 : tensor<1x16xi32> loc(#loc10)
    %11 = arith.muli %7, %c2304_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x16xi32> loc(#loc12)
    %13 = arith.addi %10, %12 : tensor<1x16xi32> loc(#loc12)
    %14 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc13)
    %15 = arith.addi %13, %14 : tensor<1x16xi32> loc(#loc13)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc14)
    %18 = tt.splat %9 : i1 -> tensor<1x16xi1> loc(#loc15)
    %19 = arith.andi %5, %18 : tensor<1x16xi1> loc(#loc15)
    %20 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc16)
    %21 = arith.andi %19, %20 : tensor<1x16xi1> loc(#loc16)
    %22 = tt.load %17, %21, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.addptr %arg2, %6 : !tt.ptr<f32>, i32 loc(#loc18)
    %24 = tt.splat %23 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %25 = tt.load %24, %21, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %26 = arith.addf %22, %25 : tensor<1x16xf32> loc(#loc20)
    %27 = arith.cmpf ogt, %cst_0, %26 : tensor<1x16xf32> loc(#loc49)
    %28 = arith.select %27, %cst_0, %26 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc50)
    %29 = arith.select %18, %28, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc24)
    %30 = arith.cmpi sge, %8, %c256_i64 : i64 loc(#loc25)
    %31 = arith.addi %6, %c-256_i32 : i32 loc(#loc26)
    %32 = tt.splat %31 : i32 -> tensor<1x16xi32> loc(#loc27)
    %33 = arith.addi %13, %32 : tensor<1x16xi32> loc(#loc27)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc28)
    %35 = tt.addptr %34, %33 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc28)
    %36 = tt.splat %30 : i1 -> tensor<1x16xi1> loc(#loc29)
    %37 = arith.andi %5, %36 : tensor<1x16xi1> loc(#loc29)
    %38 = arith.andi %37, %20 : tensor<1x16xi1> loc(#loc30)
    %39 = tt.load %35, %38, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc31)
    %40 = tt.addptr %arg4, %31 : !tt.ptr<f32>, i32 loc(#loc32)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc32)
    %42 = tt.load %41, %38, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc33)
    %43 = arith.addf %39, %42 : tensor<1x16xf32> loc(#loc34)
    %44 = arith.cmpf ogt, %cst_0, %43 : tensor<1x16xf32> loc(#loc51)
    %45 = arith.select %44, %cst_0, %43 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc52)
    %46 = arith.select %36, %45, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc36)
    %47 = arith.select %18, %29, %46 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc37)
    %48 = arith.andi %5, %20 : tensor<1x16xi1> loc(#loc38)
    %49 = arith.select %48, %47, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc39)
    %50 = "tt.reduce"(%49) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc41)), %arg8: f32 loc(callsite(#loc1 at #loc41))):
      %55 = arith.addf %arg7, %arg8 : f32 loc(#loc56)
      tt.reduce.return %55 : f32 loc(#loc53)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc53)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc43)
    %52 = arith.divf %51, %cst : tensor<1x1xf32> loc(#loc44)
    gpu.barrier loc(#loc45)
    %53 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc46)
    %54 = tt.splat %53 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    tt.store %54, %52, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":23:28)
#loc3 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":25:21)
#loc4 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":26:26)
#loc5 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":26:34)
#loc6 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":28:21)
#loc7 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":29:19)
#loc8 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":31:19)
#loc9 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":37:18)
#loc10 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:34)
#loc11 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:44)
#loc12 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:39)
#loc13 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:50)
#loc14 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:30)
#loc15 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:64)
#loc16 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:71)
#loc17 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":38:56)
#loc18 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":39:30)
#loc19 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":39:70)
#loc20 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":40:18)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc22 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":42:40)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc24 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":44:33)
#loc25 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":45:20)
#loc26 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:60)
#loc27 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:51)
#loc28 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:31)
#loc29 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:74)
#loc30 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:82)
#loc31 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":48:66)
#loc32 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":49:31)
#loc33 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":49:80)
#loc34 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":50:20)
#loc35 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":52:42)
#loc36 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":54:35)
#loc37 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":55:34)
#loc38 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":57:29)
#loc39 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":57:43)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc43 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":58:29)
#loc44 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":60:20)
#loc45 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":61:4)
#loc46 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":62:28)
#loc47 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":62:40)
#loc48 = loc("inductor_cache/5o/c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py":62:4)
#loc49 = loc(callsite(#loc21 at #loc22))
#loc50 = loc(callsite(#loc23 at #loc22))
#loc51 = loc(callsite(#loc21 at #loc35))
#loc52 = loc(callsite(#loc23 at #loc35))
#loc53 = loc(callsite(#loc40 at #loc41))
#loc55 = loc(callsite(#loc42 at #loc40))
#loc56 = loc(callsite(#loc55 at #loc41))
