; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_cat_mean_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = icmp slt i32 %8, 2048, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 15, !dbg !12
  %12 = icmp samesign ult i32 %11, 9, !dbg !13
  %.frozen = freeze i32 %8, !dbg !14
  %13 = sdiv i32 %.frozen, 512, !dbg !14
  %14 = mul i32 %13, 512, !dbg !15
  %.decomposed = sub i32 %.frozen, %14, !dbg !15
  %15 = icmp slt i32 %.decomposed, 256, !dbg !16
  %16 = shl nuw nsw i32 %11, 8, !dbg !17
  %17 = mul i32 %13, 2304, !dbg !18
  %18 = add i32 %17, %16, !dbg !19
  %19 = add i32 %18, %.decomposed, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !21
  %22 = and i1 %12, %15, !dbg !22
  %23 = and i1 %9, %22, !dbg !23
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %23, i32 0, i1 %23) #3, !dbg !24
  %25 = bitcast i32 %24 to float, !dbg !24
  %26 = sext i32 %.decomposed to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %23, i32 0, i1 %23) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = fadd float %25, %29, !dbg !27
  %31 = fcmp olt float %30, 0.000000e+00, !dbg !28
  %32 = select i1 %31, float 0.000000e+00, float %30, !dbg !32
  %33 = icmp sgt i32 %.decomposed, 255, !dbg !33
  %34 = add nsw i32 %.decomposed, -256, !dbg !34
  %35 = add i32 %18, %34, !dbg !35
  %36 = sext i32 %35 to i64, !dbg !36
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %36, !dbg !36
  %38 = and i1 %12, %33, !dbg !37
  %39 = and i1 %9, %38, !dbg !38
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %39, i32 0, i1 %39) #3, !dbg !39
  %41 = bitcast i32 %40 to float, !dbg !39
  %42 = sext i32 %34 to i64, !dbg !40
  %43 = getelementptr float, ptr addrspace(1) %4, i64 %42, !dbg !40
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %39, i32 0, i1 %39) #3, !dbg !41
  %45 = bitcast i32 %44 to float, !dbg !41
  %46 = fadd float %41, %45, !dbg !42
  %47 = fcmp olt float %46, 0.000000e+00, !dbg !43
  %48 = select i1 %47, float 0.000000e+00, float %46, !dbg !45
  %49 = select i1 %15, float %32, float %48, !dbg !46
  %50 = and i1 %12, %9, !dbg !47
  %51 = select i1 %50, float %49, float 0.000000e+00, !dbg !48
  %52 = bitcast float %51 to i32, !dbg !49
  %53 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %52, i32 8, i32 31), !dbg !49
  %54 = bitcast i32 %53 to float, !dbg !49
  %55 = fadd float %51, %54, !dbg !53
  %56 = bitcast float %55 to i32, !dbg !49
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %56, i32 4, i32 31), !dbg !49
  %58 = bitcast i32 %57 to float, !dbg !49
  %59 = fadd float %55, %58, !dbg !53
  %60 = bitcast float %59 to i32, !dbg !49
  %61 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %60, i32 2, i32 31), !dbg !49
  %62 = bitcast i32 %61 to float, !dbg !49
  %63 = fadd float %59, %62, !dbg !53
  %64 = bitcast float %63 to i32, !dbg !49
  %65 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %64, i32 1, i32 31), !dbg !49
  %66 = bitcast i32 %65 to float, !dbg !49
  %67 = fadd float %63, %66, !dbg !53
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float 9.000000e+00) #3, !dbg !55
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %69 = sext i32 %8 to i64, !dbg !57
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !57
  %71 = and i32 %10, 63, !dbg !58
  %72 = icmp eq i32 %71, 0, !dbg !58
  %73 = bitcast float %68 to i32, !dbg !58
  %74 = and i1 %72, %9, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %70, i1 %74) #3, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5oxaxwq2evzi3a7wstyf6jumsr7vikpdizrqzdle5fdk6ctpkfl.py", directory: "inductor_cache/5o")
!4 = !{ptr @triton_per_fused_cat_mean_27, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_cat_mean_27, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_cat_mean_27", linkageName: "triton_per_fused_cat_mean_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 29, column: 19, scope: !7)
!16 = !DILocation(line: 37, column: 18, scope: !7)
!17 = !DILocation(line: 38, column: 34, scope: !7)
!18 = !DILocation(line: 38, column: 44, scope: !7)
!19 = !DILocation(line: 38, column: 39, scope: !7)
!20 = !DILocation(line: 38, column: 50, scope: !7)
!21 = !DILocation(line: 38, column: 30, scope: !7)
!22 = !DILocation(line: 38, column: 64, scope: !7)
!23 = !DILocation(line: 38, column: 71, scope: !7)
!24 = !DILocation(line: 38, column: 56, scope: !7)
!25 = !DILocation(line: 39, column: 30, scope: !7)
!26 = !DILocation(line: 39, column: 70, scope: !7)
!27 = !DILocation(line: 40, column: 18, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 42, column: 40, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 45, column: 20, scope: !7)
!34 = !DILocation(line: 48, column: 60, scope: !7)
!35 = !DILocation(line: 48, column: 51, scope: !7)
!36 = !DILocation(line: 48, column: 31, scope: !7)
!37 = !DILocation(line: 48, column: 74, scope: !7)
!38 = !DILocation(line: 48, column: 82, scope: !7)
!39 = !DILocation(line: 48, column: 66, scope: !7)
!40 = !DILocation(line: 49, column: 31, scope: !7)
!41 = !DILocation(line: 49, column: 80, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !44)
!44 = !DILocation(line: 52, column: 42, scope: !7)
!45 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !44)
!46 = !DILocation(line: 0, scope: !7)
!47 = !DILocation(line: 57, column: 29, scope: !7)
!48 = !DILocation(line: 57, column: 43, scope: !7)
!49 = !DILocation(line: 267, column: 36, scope: !50, inlinedAt: !52)
!50 = distinct !DILexicalBlockFile(scope: !7, file: !51, discriminator: 0)
!51 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!52 = !DILocation(line: 58, column: 26, scope: !7)
!53 = !DILocation(line: 256, column: 15, scope: !54, inlinedAt: !52)
!54 = distinct !DILexicalBlockFile(scope: !50, file: !51, discriminator: 0)
!55 = !DILocation(line: 60, column: 20, scope: !7)
!56 = !DILocation(line: 61, column: 4, scope: !7)
!57 = !DILocation(line: 62, column: 28, scope: !7)
!58 = !DILocation(line: 62, column: 40, scope: !7)
!59 = !DILocation(line: 62, column: 4, scope: !7)
