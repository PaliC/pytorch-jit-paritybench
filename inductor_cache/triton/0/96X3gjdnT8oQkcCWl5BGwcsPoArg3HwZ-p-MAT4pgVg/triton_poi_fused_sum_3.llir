; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_sum_3(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 16, !dbg !12
  %8 = and i32 %6, 15, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 16, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = mul i32 %11, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl i32 %11, 6, !dbg !17
  %14 = add i32 %13, %.decomposed, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !20
  %18 = add i32 %14, 4, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %10) #1, !dbg !23
  %22 = add i32 %14, 8, !dbg !24
  %23 = sext i32 %22 to i64, !dbg !25
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !25
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !26
  %26 = add i32 %14, 12, !dbg !27
  %27 = sext i32 %26 to i64, !dbg !28
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !28
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !29
  %30 = add i32 %14, 16, !dbg !30
  %31 = sext i32 %30 to i64, !dbg !31
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !31
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !32
  %34 = add i32 %14, 20, !dbg !33
  %35 = sext i32 %34 to i64, !dbg !34
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !34
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %10) #1, !dbg !35
  %38 = add i32 %14, 24, !dbg !36
  %39 = sext i32 %38 to i64, !dbg !37
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !37
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !38
  %42 = add i32 %14, 28, !dbg !39
  %43 = sext i32 %42 to i64, !dbg !40
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !40
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %10) #1, !dbg !41
  %46 = add i32 %14, 32, !dbg !42
  %47 = sext i32 %46 to i64, !dbg !43
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !43
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %10) #1, !dbg !44
  %50 = add i32 %14, 36, !dbg !45
  %51 = sext i32 %50 to i64, !dbg !46
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !46
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %10) #1, !dbg !47
  %54 = add i32 %14, 40, !dbg !48
  %55 = sext i32 %54 to i64, !dbg !49
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !49
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %10) #1, !dbg !50
  %58 = add i32 %14, 44, !dbg !51
  %59 = sext i32 %58 to i64, !dbg !52
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !52
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %10) #1, !dbg !53
  %62 = add i32 %14, 48, !dbg !54
  %63 = sext i32 %62 to i64, !dbg !55
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !55
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %10) #1, !dbg !56
  %66 = add i32 %14, 52, !dbg !57
  %67 = sext i32 %66 to i64, !dbg !58
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !58
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %10) #1, !dbg !59
  %70 = add i32 %14, 56, !dbg !60
  %71 = sext i32 %70 to i64, !dbg !61
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !61
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %10) #1, !dbg !62
  %74 = add i32 %14, 60, !dbg !63
  %75 = sext i32 %74 to i64, !dbg !64
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !64
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 %10) #1, !dbg !65
  %78 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !20
  %79 = insertelement <2 x i32> %78, i32 %33, i64 1, !dbg !20
  %80 = bitcast <2 x i32> %79 to <2 x float>, !dbg !20
  %81 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !23
  %82 = insertelement <2 x i32> %81, i32 %37, i64 1, !dbg !23
  %83 = bitcast <2 x i32> %82 to <2 x float>, !dbg !23
  %84 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !26
  %85 = insertelement <2 x i32> %84, i32 %41, i64 1, !dbg !26
  %86 = bitcast <2 x i32> %85 to <2 x float>, !dbg !26
  %87 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !29
  %88 = insertelement <2 x i32> %87, i32 %45, i64 1, !dbg !29
  %89 = bitcast <2 x i32> %88 to <2 x float>, !dbg !29
  %90 = fadd <2 x float> %80, %83, !dbg !66
  %91 = fadd <2 x float> %90, %86, !dbg !67
  %92 = fadd <2 x float> %91, %89, !dbg !68
  %shift = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !69
  %93 = fadd <2 x float> %92, %shift, !dbg !69
  %94 = insertelement <2 x i32> poison, i32 %49, i64 0, !dbg !44
  %95 = insertelement <2 x i32> %94, i32 %65, i64 1, !dbg !44
  %96 = bitcast <2 x i32> %95 to <2 x float>, !dbg !44
  %97 = insertelement <2 x i32> poison, i32 %53, i64 0, !dbg !47
  %98 = insertelement <2 x i32> %97, i32 %69, i64 1, !dbg !47
  %99 = bitcast <2 x i32> %98 to <2 x float>, !dbg !47
  %100 = insertelement <2 x i32> poison, i32 %57, i64 0, !dbg !50
  %101 = insertelement <2 x i32> %100, i32 %73, i64 1, !dbg !50
  %102 = bitcast <2 x i32> %101 to <2 x float>, !dbg !50
  %103 = insertelement <2 x i32> poison, i32 %61, i64 0, !dbg !53
  %104 = insertelement <2 x i32> %103, i32 %77, i64 1, !dbg !53
  %105 = bitcast <2 x i32> %104 to <2 x float>, !dbg !53
  %106 = fadd <2 x float> %96, %99, !dbg !70
  %107 = fadd <2 x float> %106, %102, !dbg !71
  %108 = fadd <2 x float> %107, %105, !dbg !72
  %109 = fadd <2 x float> %93, %108, !dbg !73
  %shift1 = shufflevector <2 x float> %108, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !74
  %110 = fadd <2 x float> %109, %shift1, !dbg !74
  %111 = sext i32 %9 to i64, !dbg !75
  %112 = getelementptr float, ptr addrspace(1) %1, i64 %111, !dbg !75
  %113 = icmp eq i32 %7, 0, !dbg !76
  %bc = bitcast <2 x float> %110 to <2 x i32>, !dbg !76
  %114 = extractelement <2 x i32> %bc, i64 0, !dbg !76
  %115 = and i1 %113, %10, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %114, ptr addrspace(1) %112, i1 %115) #1, !dbg !76
  ret void, !dbg !77
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cixhd2rd2uwdoueftxhrkg7qc2ivu7mflotmwc4kfx7hecj4eaow.py", directory: "inductor_cache/ix")
!4 = !{ptr @triton_poi_fused_sum_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_sum_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_sum_3", linkageName: "triton_poi_fused_sum_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 39, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 47, scope: !7)
!24 = !DILocation(line: 29, column: 39, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 47, scope: !7)
!27 = !DILocation(line: 30, column: 40, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 48, scope: !7)
!30 = !DILocation(line: 31, column: 40, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 48, scope: !7)
!33 = !DILocation(line: 32, column: 40, scope: !7)
!34 = !DILocation(line: 32, column: 30, scope: !7)
!35 = !DILocation(line: 32, column: 48, scope: !7)
!36 = !DILocation(line: 33, column: 41, scope: !7)
!37 = !DILocation(line: 33, column: 31, scope: !7)
!38 = !DILocation(line: 33, column: 49, scope: !7)
!39 = !DILocation(line: 34, column: 41, scope: !7)
!40 = !DILocation(line: 34, column: 31, scope: !7)
!41 = !DILocation(line: 34, column: 49, scope: !7)
!42 = !DILocation(line: 35, column: 41, scope: !7)
!43 = !DILocation(line: 35, column: 31, scope: !7)
!44 = !DILocation(line: 35, column: 49, scope: !7)
!45 = !DILocation(line: 36, column: 41, scope: !7)
!46 = !DILocation(line: 36, column: 31, scope: !7)
!47 = !DILocation(line: 36, column: 49, scope: !7)
!48 = !DILocation(line: 37, column: 41, scope: !7)
!49 = !DILocation(line: 37, column: 31, scope: !7)
!50 = !DILocation(line: 37, column: 49, scope: !7)
!51 = !DILocation(line: 38, column: 41, scope: !7)
!52 = !DILocation(line: 38, column: 31, scope: !7)
!53 = !DILocation(line: 38, column: 49, scope: !7)
!54 = !DILocation(line: 39, column: 41, scope: !7)
!55 = !DILocation(line: 39, column: 31, scope: !7)
!56 = !DILocation(line: 39, column: 49, scope: !7)
!57 = !DILocation(line: 40, column: 41, scope: !7)
!58 = !DILocation(line: 40, column: 31, scope: !7)
!59 = !DILocation(line: 40, column: 49, scope: !7)
!60 = !DILocation(line: 41, column: 41, scope: !7)
!61 = !DILocation(line: 41, column: 31, scope: !7)
!62 = !DILocation(line: 41, column: 49, scope: !7)
!63 = !DILocation(line: 42, column: 41, scope: !7)
!64 = !DILocation(line: 42, column: 31, scope: !7)
!65 = !DILocation(line: 42, column: 49, scope: !7)
!66 = !DILocation(line: 43, column: 18, scope: !7)
!67 = !DILocation(line: 44, column: 18, scope: !7)
!68 = !DILocation(line: 45, column: 18, scope: !7)
!69 = !DILocation(line: 49, column: 19, scope: !7)
!70 = !DILocation(line: 50, column: 20, scope: !7)
!71 = !DILocation(line: 51, column: 20, scope: !7)
!72 = !DILocation(line: 52, column: 20, scope: !7)
!73 = !DILocation(line: 53, column: 20, scope: !7)
!74 = !DILocation(line: 57, column: 20, scope: !7)
!75 = !DILocation(line: 58, column: 25, scope: !7)
!76 = !DILocation(line: 58, column: 37, scope: !7)
!77 = !DILocation(line: 58, column: 4, scope: !7)
