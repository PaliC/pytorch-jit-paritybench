//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4 // -- Begin function triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4
.visible .entry triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_3,
	.param .u32 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_4,
	.param .u32 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<58>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_1];
$L__tmp0:
	.loc	1 23 28                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd9, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_2];
	.loc	1 26 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:26:34
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 31;
	ld.param.u64 	%rd10, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_3];
	and.b32  	%r28, %r26, 63;
	.loc	1 31 42                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:42
	shl.b32 	%r29, %r1, 6;
	.loc	1 31 39                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:39
	or.b32  	%r30, %r29, %r28;
	.loc	1 31 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:34
	mul.wide.s32 	%rd11, %r30, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 32 30                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:32:30
	mul.wide.u32 	%rd12, %r28, 4;
	add.s64 	%rd2, %rd9, %rd12;
	.loc	1 32 35                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:32:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 33 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:33:34
	add.s64 	%rd3, %rd8, %rd11;
	.loc	1 33 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:33:47
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 34 18                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:34:18
	add.f32 	%f4, %f1, %f2;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p13, %f4, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f5, 0f00000000, %f4, %p13;
$L__tmp2:
	.loc	1 37 18                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:37:18
	add.f32 	%f6, %f2, %f3;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p14, %f6, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f7, 0f00000000, %f6, %p14;
$L__tmp4:
	.loc	1 39 18                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:39:18
	mul.f32 	%f8, %f5, %f5;
$L__tmp5:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f8;
	shfl.sync.bfly.b32	%r32, %r31, 16, 31, -1;
	mov.b32 	%f9, %r32;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f10, %f5, %f5, %f9;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f10;
	shfl.sync.bfly.b32	%r34, %r33, 8, 31, -1;
	mov.b32 	%f11, %r34;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f12;
	shfl.sync.bfly.b32	%r36, %r35, 4, 31, -1;
	mov.b32 	%f13, %r36;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f14;
	shfl.sync.bfly.b32	%r38, %r37, 2, 31, -1;
	mov.b32 	%f15, %r38;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f16;
	shfl.sync.bfly.b32	%r40, %r39, 1, 31, -1;
	mov.b32 	%f17, %r40;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r27, 0;
	shr.u32 	%r41, %r26, 3;
	and.b32  	%r42, %r41, 4;
	mov.u32 	%r43, global_smem;
	add.s32 	%r5, %r43, %r42;
	mov.b32 	%r6, %f18;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r26, 2;
	shl.b32 	%r44, %r26, 2;
	add.s32 	%r8, %r43, %r44;
	// begin inline asm
	@%p5 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r7;
	shfl.sync.bfly.b32	%r45, %r7, 1, 31, -1;
	mov.b32 	%f20, %r45;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r46, %r26, 1;
	setp.eq.b32 	%p15, %r46, 1;
	not.pred 	%p16, %p15;
	and.pred  	%p6, %p5, %p16;
	mov.b32 	%r10, %f21;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f22, [global_smem];
$L__tmp6:
	.loc	1 42 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:42:19
	mul.f32 	%f23, %f7, %f7;
$L__tmp7:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r47, %f23;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f24, %r48;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f25, %f7, %f7, %f24;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f25;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f26, %r50;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f27;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f28, %r52;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f29;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f30, %r54;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f31;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f32, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r12, %f33;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r13, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r13;
	shfl.sync.bfly.b32	%r57, %r13, 1, 31, -1;
	mov.b32 	%f35, %r57;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f36;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f37, [global_smem];
$L__tmp8:
	.loc	1 45 27                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:45:27
	sqrt.approx.ftz.f32 	%f38, %f22;
	.loc	1 47 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:47:20
	add.f32 	%f39, %f38, 0f2EDBE6FF;
	.loc	1 48 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:48:19
	mov.b32 	%r18, %f5;
	mov.b32 	%r19, %f39;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f40, %r17;
	.loc	1 49 27                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:49:27
	sqrt.approx.ftz.f32 	%f41, %f37;
	.loc	1 50 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:50:20
	add.f32 	%f42, %f41, 0f2EDBE6FF;
	.loc	1 51 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:51:19
	mov.b32 	%r21, %f7;
	mov.b32 	%r22, %f42;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f43, %r20;
	.loc	1 52 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:52:20
	sub.f32 	%f44, %f40, %f43;
	.loc	1 53 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:53:20
	mul.f32 	%f45, %f44, %f44;
	.loc	1 54 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:54:47
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r18 };
	// end inline asm
	.loc	1 55 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:55:47
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r21 };
	// end inline asm
	.loc	1 56 25                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:25
	add.s64 	%rd6, %rd10, %rd11;
	.loc	1 56 45                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:45
	mov.b32 	%r25, %f45;
	// begin inline asm
	@%p1 st.global.b32 [ %rd6 + 0 ], { %r25 };
	// end inline asm
	.loc	1 56 4                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ik/cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 277                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 107
.b8 117
.b8 107
.b8 110
.b8 55
.b8 121
.b8 115
.b8 105
.b8 117
.b8 53
.b8 109
.b8 117
.b8 100
.b8 116
.b8 115
.b8 118
.b8 52
.b8 103
.b8 117
.b8 119
.b8 52
.b8 97
.b8 98
.b8 116
.b8 121
.b8 116
.b8 117
.b8 114
.b8 98
.b8 99
.b8 119
.b8 120
.b8 55
.b8 117
.b8 121
.b8 107
.b8 51
.b8 50
.b8 105
.b8 100
.b8 99
.b8 113
.b8 50
.b8 52
.b8 107
.b8 52
.b8 114
.b8 50
.b8 111
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xff:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
