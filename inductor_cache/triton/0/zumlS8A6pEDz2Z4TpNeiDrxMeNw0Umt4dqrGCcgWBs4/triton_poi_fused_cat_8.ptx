//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_8  // -- Begin function triton_poi_fused_cat_8
                                        // @triton_poi_fused_cat_8
.visible .entry triton_poi_fused_cat_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_2,
	.param .u32 triton_poi_fused_cat_8_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_cat_8_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_cat_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:21:33
	shl.b32 	%r22, %r1, 9;
	ld.param.u64 	%rd6, [triton_poi_fused_cat_8_param_2];
	.loc	1 22 36                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 2;
	and.b32  	%r25, %r24, 508;
	.loc	1 22 23                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:22:23
	or.b32  	%r26, %r22, %r25;
	.loc	1 24 21                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:24:21
	shr.s32 	%r28, %r26, 31;
	shr.u32 	%r29, %r28, 24;
	add.s32 	%r30, %r26, %r29;
	shr.s32 	%r31, %r30, 8;
	.loc	1 24 28                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:24:28
	mul.hi.s32 	%r32, %r31, 954437177;
	shr.u32 	%r33, %r32, 31;
	shr.s32 	%r34, %r32, 3;
	add.s32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, 36;
	sub.s32 	%r37, %r31, %r36;
	.loc	1 25 19                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:25:19
	and.b32  	%r38, %r30, -256;
	sub.s32 	%r39, %r26, %r38;
	.loc	1 26 19                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:26:19
	mul.hi.s32 	%r40, %r26, 954437177;
	shr.u32 	%r41, %r40, 31;
	shr.s32 	%r42, %r40, 11;
	add.s32 	%r43, %r42, %r41;
	.loc	1 32 18                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:32:18
	setp.lt.s32 	%p1, %r37, 12;
	.loc	1 33 35                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:33:35
	mul.lo.s32 	%r44, %r43, 9216;
	sub.s32 	%r45, %r26, %r44;
	.loc	1 33 46                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:33:46
	mad.lo.s32 	%r46, %r43, 3072, %r45;
	.loc	1 33 30                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:33:30
	mul.wide.s32 	%rd7, %r46, 4;
	add.s64 	%rd1, %rd4, %rd7;
	mov.b32 	%r6, 0;
	.loc	1 33 56                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 35 18                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:35:18
	setp.gt.f32 	%p12, %f1, 0f00000000;
	setp.gt.f32 	%p13, %f2, 0f00000000;
	setp.gt.f32 	%p14, %f3, 0f00000000;
	setp.gt.f32 	%p15, %f4, 0f00000000;
	.loc	1 37 18                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:37:18
	mul.f32 	%f5, %f1, 0f3E4CCCCD;
	mul.f32 	%f6, %f2, 0f3E4CCCCD;
	mul.f32 	%f7, %f3, 0f3E4CCCCD;
	mul.f32 	%f8, %f4, 0f3E4CCCCD;
	.loc	1 38 33                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:38:33
	selp.f32 	%f9, %f1, %f5, %p12;
	selp.f32 	%f10, %f2, %f6, %p13;
	selp.f32 	%f11, %f3, %f7, %p14;
	selp.f32 	%f12, %f4, %f8, %p15;
	.loc	1 41 20                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:41:20
	setp.gt.s32 	%p6, %r37, 11;
	.loc	1 44 41                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:44:41
	shl.b32 	%r47, %r37, 8;
	.loc	1 44 60                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:44:60
	mul.lo.s32 	%r48, %r43, 6144;
	.loc	1 44 31                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:44:31
	cvt.s64.s32 	%rd8, %r47;
	cvt.s64.s32 	%rd9, %r48;
	cvt.s64.s32 	%rd10, %r39;
	add.s64 	%rd11, %rd10, %rd9;
	add.s64 	%rd12, %rd11, %rd8;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd5, %rd13;
	add.s64 	%rd2, %rd14, -12288;
	.loc	1 44 65                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:44:65
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 46 25                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:25
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd3, %rd6, %rd15;
	.loc	1 46 37                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:37
	mov.b32 	%r49, %f9;
	.loc	1 0 0                           // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:0:0
	selp.b32 	%r18, %r49, %r10, %p1;
	.loc	1 46 37                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:37
	mov.b32 	%r50, %f10;
	.loc	1 0 0                           // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:0:0
	selp.b32 	%r19, %r50, %r11, %p1;
	.loc	1 46 37                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:37
	mov.b32 	%r51, %f11;
	.loc	1 0 0                           // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:0:0
	selp.b32 	%r20, %r51, %r12, %p1;
	.loc	1 46 37                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:37
	mov.b32 	%r52, %f12;
	.loc	1 0 0                           // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:0:0
	selp.b32 	%r21, %r52, %r13, %p1;
	mov.pred 	%p11, -1;
	.loc	1 46 37                         // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:37
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	.loc	1 46 4                          // cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b3/cb32i6bc2xvkuj3uenlduxuxbtcd64obni4birkd7rtbkmej5jnx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 51
.b8 50
.b8 105
.b8 54
.b8 98
.b8 99
.b8 50
.b8 120
.b8 118
.b8 107
.b8 117
.b8 106
.b8 51
.b8 117
.b8 101
.b8 110
.b8 108
.b8 100
.b8 117
.b8 120
.b8 117
.b8 120
.b8 98
.b8 116
.b8 99
.b8 100
.b8 54
.b8 52
.b8 111
.b8 98
.b8 110
.b8 105
.b8 52
.b8 98
.b8 105
.b8 114
.b8 107
.b8 100
.b8 55
.b8 114
.b8 116
.b8 98
.b8 107
.b8 109
.b8 101
.b8 106
.b8 53
.b8 106
.b8 110
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
