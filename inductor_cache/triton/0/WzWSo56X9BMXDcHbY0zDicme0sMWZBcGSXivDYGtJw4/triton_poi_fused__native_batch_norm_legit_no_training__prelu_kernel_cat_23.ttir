#loc = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_23(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-03> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-128> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<256xi64> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_5 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_5 : tensor<256xi32> loc(#loc7)
    %7 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %5 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc16)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.extsi %5 : tensor<256xi32> to tensor<256xi64> loc(#loc18)
    %23 = arith.cmpi slt, %22, %cst_4 : tensor<256xi64> loc(#loc18)
    %24 = arith.muli %6, %cst_3 : tensor<256xi32> loc(#loc19)
    %25 = arith.addi %24, %5 : tensor<256xi32> loc(#loc20)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.addptr %26, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %28 = tt.load %27, %23, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.cmpi sge, %22, %cst_4 : tensor<256xi64> loc(#loc23)
    %30 = arith.addi %5, %cst_1 : tensor<256xi32> loc(#loc24)
    %31 = arith.addi %24, %30 : tensor<256xi32> loc(#loc25)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc26)
    %33 = tt.addptr %32, %31 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc26)
    %34 = tt.load %33, %29, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc27)
    %35 = arith.select %23, %28, %34 : tensor<256xi1>, tensor<256xf32> loc(#loc28)
    %36 = arith.subf %35, %9 : tensor<256xf32> loc(#loc29)
    %37 = arith.addf %12, %cst_0 : tensor<256xf32> loc(#loc30)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc31)
    %39 = arith.divf %cst, %38 : tensor<256xf32> loc(#loc32)
    %40 = arith.mulf %36, %39 : tensor<256xf32> loc(#loc33)
    %41 = arith.mulf %40, %15 : tensor<256xf32> loc(#loc34)
    %42 = arith.addf %41, %18 : tensor<256xf32> loc(#loc35)
    %43 = arith.cmpf ogt, %42, %cst_2 : tensor<256xf32> loc(#loc36)
    %44 = arith.mulf %21, %42 : tensor<256xf32> loc(#loc37)
    %45 = arith.select %43, %42, %44 : tensor<256xi1>, tensor<256xf32> loc(#loc38)
    %46 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc39)
    %47 = tt.addptr %46, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc39)
    tt.store %47, %35 : tensor<256x!tt.ptr<f32>> loc(#loc40)
    %48 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc41)
    %49 = tt.addptr %48, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc41)
    tt.store %49, %45 : tensor<256x!tt.ptr<f32>> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":21:28)
#loc3 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":21:33)
#loc4 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":22:36)
#loc5 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":22:23)
#loc6 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":24:19)
#loc7 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":25:19)
#loc8 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":27:31)
#loc9 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":27:36)
#loc10 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":28:31)
#loc11 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":28:36)
#loc12 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":29:31)
#loc13 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":29:36)
#loc14 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":30:31)
#loc15 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":30:36)
#loc16 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":31:31)
#loc17 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":31:36)
#loc18 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":36:18)
#loc19 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":37:34)
#loc20 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":37:40)
#loc21 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":37:30)
#loc22 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":37:46)
#loc23 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":38:19)
#loc24 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":41:49)
#loc25 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":41:40)
#loc26 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":41:30)
#loc27 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":41:55)
#loc28 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":42:33)
#loc29 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":43:20)
#loc30 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":45:20)
#loc31 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":46:27)
#loc32 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":48:20)
#loc33 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":51:20)
#loc34 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":52:20)
#loc35 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":53:20)
#loc36 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":55:20)
#loc37 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":56:20)
#loc38 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":57:35)
#loc39 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":58:25)
#loc40 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":58:37)
#loc41 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":59:28)
#loc42 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":59:40)
#loc43 = loc("inductor_cache/de/cdeejvnbiiq5z7yz36glbz2f723ohxtuh5ovykm4hqcrlf3mtlgn.py":59:4)
