; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_75(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 4, !dbg !14
  %17 = srem i32 %16, 1024, !dbg !15
  %18 = mul i32 %16, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 4096, !dbg !17
  %20 = icmp slt i32 %17, 384, !dbg !18
  %21 = mul nsw i32 %.decomposed, 384, !dbg !19
  %22 = mul nsw i32 %19, 1536, !dbg !20
  %23 = add nsw i32 %21, %22, !dbg !21
  %24 = add nsw i32 %23, %17, !dbg !22
  %25 = sext i32 %24 to i64, !dbg !23
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %20, i32 0, i1 %20) #1, !dbg !24
  %28 = sext i32 %17 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %20, i32 0, i1 %20) #1, !dbg !26
  %31 = add nsw i32 %17, -384, !dbg !27
  %32 = icmp ult i32 %31, 384, !dbg !27
  %33 = add nsw i32 %23, %31, !dbg !28
  %34 = sext i32 %33 to i64, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %32, i32 0, i1 %32) #1, !dbg !30
  %37 = sext i32 %31 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %32, i32 0, i1 %32) #1, !dbg !32
  %40 = and i32 %17, -128, !dbg !33
  %41 = icmp eq i32 %40, 768, !dbg !33
  %42 = shl nsw i32 %.decomposed, 7, !dbg !34
  %43 = shl nsw i32 %19, 9, !dbg !35
  %44 = add nsw i32 %42, %43, !dbg !36
  %45 = add nsw i32 %17, -768, !dbg !37
  %46 = add nsw i32 %44, %45, !dbg !38
  %47 = sext i32 %46 to i64, !dbg !39
  %48 = getelementptr float, ptr addrspace(1) %4, i64 %47, !dbg !39
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %41, i32 0, i1 %41) #1, !dbg !40
  %50 = sext i32 %45 to i64, !dbg !41
  %51 = getelementptr float, ptr addrspace(1) %5, i64 %50, !dbg !41
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %41, i32 0, i1 %41) #1, !dbg !42
  %53 = icmp sgt i32 %17, 895, !dbg !43
  %54 = add nsw i32 %17, -896, !dbg !44
  %55 = add nsw i32 %44, %54, !dbg !45
  %56 = sext i32 %55 to i64, !dbg !46
  %57 = getelementptr float, ptr addrspace(1) %6, i64 %56, !dbg !46
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %53, i32 0, i1 %53) #1, !dbg !47
  %59 = sext i32 %54 to i64, !dbg !48
  %60 = getelementptr float, ptr addrspace(1) %7, i64 %59, !dbg !48
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %53, i32 0, i1 %53) #1, !dbg !49
  %62 = insertelement <4 x i32> poison, i32 %58, i64 0, !dbg !47
  %63 = insertelement <4 x i32> %62, i32 %49, i64 1, !dbg !47
  %64 = insertelement <4 x i32> %63, i32 %36, i64 2, !dbg !47
  %65 = insertelement <4 x i32> %64, i32 %27, i64 3, !dbg !47
  %66 = bitcast <4 x i32> %65 to <4 x float>, !dbg !47
  %67 = insertelement <4 x i32> poison, i32 %61, i64 0, !dbg !49
  %68 = insertelement <4 x i32> %67, i32 %52, i64 1, !dbg !49
  %69 = insertelement <4 x i32> %68, i32 %39, i64 2, !dbg !49
  %70 = insertelement <4 x i32> %69, i32 %30, i64 3, !dbg !49
  %71 = bitcast <4 x i32> %70 to <4 x float>, !dbg !49
  %72 = fadd <4 x float> %66, %71, !dbg !50
  %73 = fcmp olt <4 x float> %72, zeroinitializer, !dbg !51
  %74 = extractelement <4 x i1> %73, i64 3, !dbg !55
  %75 = extractelement <4 x float> %72, i64 3, !dbg !55
  %76 = select i1 %74, float 0.000000e+00, float %75, !dbg !55
  %77 = extractelement <4 x i1> %73, i64 2, !dbg !57
  %78 = extractelement <4 x float> %72, i64 2, !dbg !57
  %79 = select i1 %77, float 0.000000e+00, float %78, !dbg !57
  %80 = extractelement <4 x i1> %73, i64 1, !dbg !59
  %81 = extractelement <4 x float> %72, i64 1, !dbg !59
  %82 = select i1 %80, float 0.000000e+00, float %81, !dbg !59
  %83 = extractelement <4 x i1> %73, i64 0, !dbg !61
  %84 = extractelement <4 x float> %72, i64 0, !dbg !61
  %85 = select i1 %83, float 0.000000e+00, float %84, !dbg !61
  %86 = select i1 %53, float %85, float 0.000000e+00, !dbg !62
  %87 = select i1 %41, float %82, float %86, !dbg !63
  %88 = select i1 %32, float %79, float %87, !dbg !63
  %89 = select i1 %20, float %76, float %88, !dbg !63
  %90 = sext i32 %15 to i64, !dbg !64
  %91 = getelementptr float, ptr addrspace(1) %8, i64 %90, !dbg !64
  %92 = bitcast float %89 to i32, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %92, ptr addrspace(1) %91, i1 true) #1, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6lzozfmehhwjochpvoz5nvh3vytro7vnbgaeylnuih6uqrrhhb3.py", directory: "inductor_cache/6l")
!4 = !{ptr @triton_poi_fused_cat_75, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_75, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_75", linkageName: "triton_poi_fused_cat_75", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 34, scope: !7)
!20 = !DILocation(line: 33, column: 44, scope: !7)
!21 = !DILocation(line: 33, column: 39, scope: !7)
!22 = !DILocation(line: 33, column: 50, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 56, scope: !7)
!25 = !DILocation(line: 34, column: 30, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 43, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 51, scope: !7)
!29 = !DILocation(line: 44, column: 31, scope: !7)
!30 = !DILocation(line: 44, column: 66, scope: !7)
!31 = !DILocation(line: 45, column: 31, scope: !7)
!32 = !DILocation(line: 45, column: 45, scope: !7)
!33 = !DILocation(line: 54, column: 20, scope: !7)
!34 = !DILocation(line: 55, column: 35, scope: !7)
!35 = !DILocation(line: 55, column: 44, scope: !7)
!36 = !DILocation(line: 55, column: 40, scope: !7)
!37 = !DILocation(line: 55, column: 59, scope: !7)
!38 = !DILocation(line: 55, column: 50, scope: !7)
!39 = !DILocation(line: 55, column: 31, scope: !7)
!40 = !DILocation(line: 55, column: 65, scope: !7)
!41 = !DILocation(line: 56, column: 31, scope: !7)
!42 = !DILocation(line: 56, column: 45, scope: !7)
!43 = !DILocation(line: 62, column: 20, scope: !7)
!44 = !DILocation(line: 65, column: 59, scope: !7)
!45 = !DILocation(line: 65, column: 50, scope: !7)
!46 = !DILocation(line: 65, column: 31, scope: !7)
!47 = !DILocation(line: 65, column: 65, scope: !7)
!48 = !DILocation(line: 66, column: 31, scope: !7)
!49 = !DILocation(line: 66, column: 45, scope: !7)
!50 = !DILocation(line: 67, column: 20, scope: !7)
!51 = !DILocation(line: 118, column: 15, scope: !52, inlinedAt: !54)
!52 = distinct !DILexicalBlockFile(scope: !7, file: !53, discriminator: 0)
!53 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!54 = !DILocation(line: 69, column: 42, scope: !7)
!55 = !DILocation(line: 121, column: 29, scope: !52, inlinedAt: !56)
!56 = !DILocation(line: 37, column: 40, scope: !7)
!57 = !DILocation(line: 121, column: 29, scope: !52, inlinedAt: !58)
!58 = !DILocation(line: 48, column: 42, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !52, inlinedAt: !60)
!60 = !DILocation(line: 59, column: 42, scope: !7)
!61 = !DILocation(line: 121, column: 29, scope: !52, inlinedAt: !54)
!62 = !DILocation(line: 71, column: 35, scope: !7)
!63 = !DILocation(line: 0, scope: !7)
!64 = !DILocation(line: 75, column: 25, scope: !7)
!65 = !DILocation(line: 75, column: 37, scope: !7)
!66 = !DILocation(line: 75, column: 4, scope: !7)
