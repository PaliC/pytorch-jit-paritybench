; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_add_clamp_div_log_mul_neg_pow_sub_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #3, !dbg !10
  %4 = bitcast i32 %3 to float, !dbg !10
  %5 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !11
  %6 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #3, !dbg !12
  %7 = bitcast i32 %6 to float, !dbg !12
  %8 = fsub float 0.000000e+00, %4, !dbg !13
  %9 = fadd float %8, -7.000000e+00, !dbg !14
  %10 = fmul float %9, 5.000000e-01, !dbg !15
  %11 = fsub float 0.000000e+00, %7, !dbg !16
  %12 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not.i = icmp eq i32 %12, 0, !dbg !17
  %13 = tail call float @llvm.nvvm.fabs.ftz.f(float %11) #3, !dbg !17
  %14 = tail call float @llvm.nvvm.fabs.f(float %11) #3, !dbg !17
  %.01.i = select i1 %.not.i, float %14, float %13, !dbg !17
  %15 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !17
  br i1 %15, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !17

__internal_fmad.exit1.i:                          ; preds = %2
  %16 = fmul float %.01.i, 0x4007154760000000, !dbg !17
  %17 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %16) #3, !dbg !17
  %18 = fadd float %17, 1.000000e+00, !dbg !17
  %19 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %18) #4, !dbg !17, !srcloc !18
  %20 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not6.i = icmp eq i32 %20, 0, !dbg !17
  %21 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %19, float -2.000000e+00, float 1.000000e+00) #3, !dbg !17
  %22 = tail call float @llvm.nvvm.fma.rn.f(float %19, float -2.000000e+00, float 1.000000e+00) #3, !dbg !17
  %.03.i = select i1 %.not6.i, float %22, float %21, !dbg !17
  %23 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !17
  %s.0.i = select i1 %23, float 1.000000e+00, float %.03.i, !dbg !17
  %24 = bitcast float %s.0.i to i32, !dbg !17
  %25 = bitcast float %11 to i32, !dbg !17
  %26 = and i32 %25, -2147483648, !dbg !17
  %27 = or i32 %26, %24, !dbg !17
  %28 = bitcast i32 %27 to float, !dbg !17
  br label %__nv_tanhf.exit, !dbg !17

__internal_fmad.exit3.i:                          ; preds = %2
  %29 = fmul float %11, %11, !dbg !17
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not1.i = icmp eq i32 %30, 0, !dbg !17
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %29, float 0xBFAAC795C0000000) #3, !dbg !17
  %32 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %29, float 0xBFAAC795C0000000) #3, !dbg !17
  %.06.i = select i1 %.not1.i, float %32, float %31, !dbg !17
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not2.i = icmp eq i32 %33, 0, !dbg !17
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %29, float 0x3FC10B2820000000) #3, !dbg !17
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %29, float 0x3FC10B2820000000) #3, !dbg !17
  %.05.i = select i1 %.not2.i, float %35, float %34, !dbg !17
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not3.i = icmp eq i32 %36, 0, !dbg !17
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %29, float 0xBFD5553DA0000000) #3, !dbg !17
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %29, float 0xBFD5553DA0000000) #3, !dbg !17
  %.0.i = select i1 %.not3.i, float %38, float %37, !dbg !17
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not4.i = icmp eq i32 %39, 0, !dbg !17
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %29, float 0.000000e+00) #3, !dbg !17
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %29, float 0.000000e+00) #3, !dbg !17
  %.04.i = select i1 %.not4.i, float %41, float %40, !dbg !17
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not5.i = icmp eq i32 %42, 0, !dbg !17
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %11, float %11) #3, !dbg !17
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %11, float %11) #3, !dbg !17
  %.02.i = select i1 %.not5.i, float %44, float %43, !dbg !17
  br label %__nv_tanhf.exit, !dbg !17

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %28, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !17
  %45 = fsub float %10, %s.1.i, !dbg !19
  %46 = tail call float @llvm.fabs.f32(float %45), !dbg !20
  %47 = fcmp ogt float %46, 0x3ED4F8B580000000, !dbg !21
  %48 = fcmp uno float %45, 0.000000e+00, !dbg !25
  %49 = or i1 %48, %47, !dbg !26
  %50 = select i1 %49, float %46, float 0x3ED4F8B580000000, !dbg !27
  %51 = fcmp olt float %50, 0x3810000000000000, !dbg !28
  %52 = fmul float %50, 0x4160000000000000, !dbg !28
  %.02.i40 = select i1 %51, float %52, float %50, !dbg !28
  %i.i.0.i = select i1 %51, float -2.300000e+01, float 0.000000e+00, !dbg !28
  %53 = bitcast float %.02.i40 to i32, !dbg !28
  %54 = add i32 %53, -1059760811, !dbg !28
  %55 = and i32 %54, -8388608, !dbg !28
  %56 = sub i32 %53, %55, !dbg !28
  %57 = bitcast i32 %56 to float, !dbg !28
  %58 = sitofp i32 %55 to float, !dbg !28
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i41 = icmp eq i32 %59, 0, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %58, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !28
  %.08.i = select i1 %.not.i41, float %61, float %60, !dbg !28
  %62 = fadd float %57, -1.000000e+00, !dbg !28
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i42 = icmp eq i32 %63, 0, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %62, float 0x3FC2073EC0000000) #3, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %62, float 0x3FC2073EC0000000) #3, !dbg !28
  %.010.i = select i1 %.not1.i42, float %65, float %64, !dbg !28
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i43 = icmp eq i32 %66, 0, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %62, float 0xBFBF19B980000000) #3, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %62, float 0xBFBF19B980000000) #3, !dbg !28
  %.011.i = select i1 %.not2.i43, float %68, float %67, !dbg !28
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i44 = icmp eq i32 %69, 0, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %62, float 0x3FC1E52AA0000000) #3, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %62, float 0x3FC1E52AA0000000) #3, !dbg !28
  %.012.i = select i1 %.not3.i44, float %71, float %70, !dbg !28
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i45 = icmp eq i32 %72, 0, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %62, float 0xBFC55B1720000000) #3, !dbg !28
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %62, float 0xBFC55B1720000000) #3, !dbg !28
  %.09.i = select i1 %.not4.i45, float %74, float %73, !dbg !28
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i46 = icmp eq i32 %75, 0, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %62, float 0x3FC99DA160000000) #3, !dbg !28
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %62, float 0x3FC99DA160000000) #3, !dbg !28
  %.05.i47 = select i1 %.not5.i46, float %77, float %76, !dbg !28
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i48 = icmp eq i32 %78, 0, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i47, float %62, float 0xBFCFFFE440000000) #3, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i47, float %62, float 0xBFCFFFE440000000) #3, !dbg !28
  %.01.i49 = select i1 %.not6.i48, float %80, float %79, !dbg !28
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not7.i = icmp eq i32 %81, 0, !dbg !28
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i49, float %62, float 0x3FD5554F00000000) #3, !dbg !28
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i49, float %62, float 0x3FD5554F00000000) #3, !dbg !28
  %.0.i50 = select i1 %.not7.i, float %83, float %82, !dbg !28
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not8.i = icmp eq i32 %84, 0, !dbg !28
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %62, float -5.000000e-01) #3, !dbg !28
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %62, float -5.000000e-01) #3, !dbg !28
  %.07.i = select i1 %.not8.i, float %86, float %85, !dbg !28
  %87 = fmul float %62, %.07.i, !dbg !28
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not9.i = icmp eq i32 %88, 0, !dbg !28
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %87, float %62, float %62) #3, !dbg !28
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %87, float %62, float %62) #3, !dbg !28
  %.06.i51 = select i1 %.not9.i, float %90, float %89, !dbg !28
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not10.i = icmp eq i32 %91, 0, !dbg !28
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i51) #3, !dbg !28
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i51) #3, !dbg !28
  %.04.i52 = select i1 %.not10.i, float %93, float %92, !dbg !28
  %94 = icmp ugt i32 %53, 2139095039, !dbg !28
  br i1 %94, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !28

__nv_fmaf_rn.exit.i.i:                            ; preds = %__nv_tanhf.exit
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not11.i = icmp eq i32 %95, 0, !dbg !28
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i40, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i40, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !28
  %.03.i53 = select i1 %.not11.i, float %97, float %96, !dbg !28
  br label %__nv_logf.exit, !dbg !28

__nv_logf.exit:                                   ; preds = %__nv_tanhf.exit, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i53, %__nv_fmaf_rn.exit.i.i ], [ %.04.i52, %__nv_tanhf.exit ], !dbg !28
  %98 = fmul float %7, 5.000000e-01, !dbg !29
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i2 = icmp eq i32 %99, 0, !dbg !30
  %100 = tail call float @llvm.nvvm.fabs.ftz.f(float %98) #3, !dbg !30
  %101 = tail call float @llvm.nvvm.fabs.f(float %98) #3, !dbg !30
  %.01.i3 = select i1 %.not.i2, float %101, float %100, !dbg !30
  %102 = fcmp ult float %.01.i3, 0x3FE3333340000000, !dbg !30
  br i1 %102, label %__internal_fmad.exit3.i9, label %__internal_fmad.exit1.i4, !dbg !30

__internal_fmad.exit1.i4:                         ; preds = %__nv_logf.exit
  %103 = fmul float %.01.i3, 0x4007154760000000, !dbg !30
  %104 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %103) #3, !dbg !30
  %105 = fadd float %104, 1.000000e+00, !dbg !30
  %106 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %105) #4, !dbg !30, !srcloc !18
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i5 = icmp eq i32 %107, 0, !dbg !30
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %106, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i6 = select i1 %.not6.i5, float %109, float %108, !dbg !30
  %110 = fcmp oge float %.01.i3, 0x4022059680000000, !dbg !30
  %s.0.i7 = select i1 %110, float 1.000000e+00, float %.03.i6, !dbg !30
  %111 = bitcast float %s.0.i7 to i32, !dbg !30
  %112 = bitcast float %98 to i32, !dbg !30
  %113 = and i32 %112, -2147483648, !dbg !30
  %114 = or i32 %113, %111, !dbg !30
  %115 = bitcast i32 %114 to float, !dbg !30
  br label %__nv_tanhf.exit20, !dbg !30

__internal_fmad.exit3.i9:                         ; preds = %__nv_logf.exit
  %116 = fmul float %98, %98, !dbg !30
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i10 = icmp eq i32 %117, 0, !dbg !30
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %116, float 0xBFAAC795C0000000) #3, !dbg !30
  %119 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %116, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i11 = select i1 %.not1.i10, float %119, float %118, !dbg !30
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i12 = icmp eq i32 %120, 0, !dbg !30
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %116, float 0x3FC10B2820000000) #3, !dbg !30
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %116, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i13 = select i1 %.not2.i12, float %122, float %121, !dbg !30
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i14 = icmp eq i32 %123, 0, !dbg !30
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i13, float %116, float 0xBFD5553DA0000000) #3, !dbg !30
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i13, float %116, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i15 = select i1 %.not3.i14, float %125, float %124, !dbg !30
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i16 = icmp eq i32 %126, 0, !dbg !30
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %116, float 0.000000e+00) #3, !dbg !30
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %116, float 0.000000e+00) #3, !dbg !30
  %.04.i17 = select i1 %.not4.i16, float %128, float %127, !dbg !30
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i18 = icmp eq i32 %129, 0, !dbg !30
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i17, float %98, float %98) #3, !dbg !30
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i17, float %98, float %98) #3, !dbg !30
  %.02.i19 = select i1 %.not5.i18, float %131, float %130, !dbg !30
  br label %__nv_tanhf.exit20, !dbg !30

__nv_tanhf.exit20:                                ; preds = %__internal_fmad.exit1.i4, %__internal_fmad.exit3.i9
  %s.1.i8 = phi float [ %115, %__internal_fmad.exit1.i4 ], [ %.02.i19, %__internal_fmad.exit3.i9 ], !dbg !30
  %132 = fmul float %11, 5.000000e-01, !dbg !31
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i21 = icmp eq i32 %133, 0, !dbg !32
  %134 = tail call float @llvm.nvvm.fabs.ftz.f(float %132) #3, !dbg !32
  %135 = tail call float @llvm.nvvm.fabs.f(float %132) #3, !dbg !32
  %.01.i22 = select i1 %.not.i21, float %135, float %134, !dbg !32
  %136 = fcmp ult float %.01.i22, 0x3FE3333340000000, !dbg !32
  br i1 %136, label %__internal_fmad.exit3.i28, label %__internal_fmad.exit1.i23, !dbg !32

__internal_fmad.exit1.i23:                        ; preds = %__nv_tanhf.exit20
  %137 = fmul float %.01.i22, 0x4007154760000000, !dbg !32
  %138 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %137) #3, !dbg !32
  %139 = fadd float %138, 1.000000e+00, !dbg !32
  %140 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %139) #4, !dbg !32, !srcloc !18
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not6.i24 = icmp eq i32 %141, 0, !dbg !32
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float -2.000000e+00, float 1.000000e+00) #3, !dbg !32
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float -2.000000e+00, float 1.000000e+00) #3, !dbg !32
  %.03.i25 = select i1 %.not6.i24, float %143, float %142, !dbg !32
  %144 = fcmp oge float %.01.i22, 0x4022059680000000, !dbg !32
  %s.0.i26 = select i1 %144, float 1.000000e+00, float %.03.i25, !dbg !32
  %145 = bitcast float %s.0.i26 to i32, !dbg !32
  %146 = bitcast float %132 to i32, !dbg !32
  %147 = and i32 %146, -2147483648, !dbg !32
  %148 = or i32 %147, %145, !dbg !32
  %149 = bitcast i32 %148 to float, !dbg !32
  br label %__nv_tanhf.exit39, !dbg !32

__internal_fmad.exit3.i28:                        ; preds = %__nv_tanhf.exit20
  %150 = fmul float %132, %132, !dbg !32
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not1.i29 = icmp eq i32 %151, 0, !dbg !32
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %150, float 0xBFAAC795C0000000) #3, !dbg !32
  %153 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %150, float 0xBFAAC795C0000000) #3, !dbg !32
  %.06.i30 = select i1 %.not1.i29, float %153, float %152, !dbg !32
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not2.i31 = icmp eq i32 %154, 0, !dbg !32
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i30, float %150, float 0x3FC10B2820000000) #3, !dbg !32
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i30, float %150, float 0x3FC10B2820000000) #3, !dbg !32
  %.05.i32 = select i1 %.not2.i31, float %156, float %155, !dbg !32
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not3.i33 = icmp eq i32 %157, 0, !dbg !32
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i32, float %150, float 0xBFD5553DA0000000) #3, !dbg !32
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i32, float %150, float 0xBFD5553DA0000000) #3, !dbg !32
  %.0.i34 = select i1 %.not3.i33, float %159, float %158, !dbg !32
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not4.i35 = icmp eq i32 %160, 0, !dbg !32
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i34, float %150, float 0.000000e+00) #3, !dbg !32
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i34, float %150, float 0.000000e+00) #3, !dbg !32
  %.04.i36 = select i1 %.not4.i35, float %162, float %161, !dbg !32
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not5.i37 = icmp eq i32 %163, 0, !dbg !32
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i36, float %132, float %132) #3, !dbg !32
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i36, float %132, float %132) #3, !dbg !32
  %.02.i38 = select i1 %.not5.i37, float %165, float %164, !dbg !32
  br label %__nv_tanhf.exit39, !dbg !32

__nv_tanhf.exit39:                                ; preds = %__internal_fmad.exit1.i23, %__internal_fmad.exit3.i28
  %s.1.i27 = phi float [ %149, %__internal_fmad.exit1.i23 ], [ %.02.i38, %__internal_fmad.exit3.i28 ], !dbg !32
  %166 = fadd float %8, 7.000000e+00, !dbg !33
  %167 = fmul float %166, %166, !dbg !34
  %168 = fadd float %11, -8.000000e+00, !dbg !35
  %169 = fmul float %168, %168, !dbg !36
  %170 = fmul float %169, 0x3FB99999A0000000, !dbg !37
  %171 = fadd float %167, %170, !dbg !38
  %172 = fmul float %171, 0x3FB99999A0000000, !dbg !39
  %173 = fadd float %172, -2.000000e+01, !dbg !40
  %174 = fcmp oeq float %.02.i40, 0.000000e+00, !dbg !28
  %175 = fadd float %r.i.0.i, 6.000000e+00, !dbg !41
  %176 = select i1 %174, float 0xFFF0000000000000, float %175, !dbg !28
  %177 = insertelement <2 x float> poison, float %s.1.i8, i64 0, !dbg !42
  %178 = insertelement <2 x float> %177, float %s.1.i27, i64 1, !dbg !42
  %179 = fcmp ole <2 x float> %178, zeroinitializer, !dbg !42
  %180 = select <2 x i1> %179, <2 x float> zeroinitializer, <2 x float> %178, !dbg !42
  %181 = insertelement <2 x float> poison, float %176, i64 0, !dbg !44
  %182 = insertelement <2 x float> %181, float %173, i64 1, !dbg !44
  %183 = fmul <2 x float> %182, %180, !dbg !44
  %shift = shufflevector <2 x float> %183, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %184 = fadd <2 x float> %183, %shift, !dbg !45
  %185 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !46
  %186 = and i32 %185, 31, !dbg !46
  %187 = icmp eq i32 %186, 0, !dbg !46
  %bc = bitcast <2 x float> %184 to <2 x i32>, !dbg !46
  %188 = extractelement <2 x i32> %bc, i64 0, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %188, ptr addrspace(1) %1, i1 %187) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3jgqq5nhr4ewxgx7picbkqyw4443ggt65m5b72bsnpm2gne3w5q.py", directory: "inductor_cache/3j")
!4 = !{ptr @triton_poi_fused_abs_add_clamp_div_log_mul_neg_pow_sub_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_clamp_div_log_mul_neg_pow_sub_tanh_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_clamp_div_log_mul_neg_pow_sub_tanh_0", linkageName: "triton_poi_fused_abs_add_clamp_div_log_mul_neg_pow_sub_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 30, scope: !7)
!12 = !DILocation(line: 26, column: 19, scope: !7)
!13 = !DILocation(line: 28, column: 12, scope: !7)
!14 = !DILocation(line: 30, column: 18, scope: !7)
!15 = !DILocation(line: 32, column: 18, scope: !7)
!16 = !DILocation(line: 33, column: 12, scope: !7)
!17 = !DILocation(line: 34, column: 27, scope: !7)
!18 = !{i32 21046}
!19 = !DILocation(line: 35, column: 19, scope: !7)
!20 = !DILocation(line: 36, column: 24, scope: !7)
!21 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 38, column: 42, scope: !7)
!25 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 39, column: 24, scope: !7)
!29 = !DILocation(line: 42, column: 19, scope: !7)
!30 = !DILocation(line: 43, column: 27, scope: !7)
!31 = !DILocation(line: 58, column: 19, scope: !7)
!32 = !DILocation(line: 59, column: 27, scope: !7)
!33 = !DILocation(line: 47, column: 19, scope: !7)
!34 = !DILocation(line: 48, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 19, scope: !7)
!36 = !DILocation(line: 51, column: 20, scope: !7)
!37 = !DILocation(line: 53, column: 20, scope: !7)
!38 = !DILocation(line: 54, column: 20, scope: !7)
!39 = !DILocation(line: 55, column: 20, scope: !7)
!40 = !DILocation(line: 57, column: 20, scope: !7)
!41 = !DILocation(line: 41, column: 20, scope: !7)
!42 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !43)
!43 = !DILocation(line: 45, column: 42, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 62, column: 20, scope: !7)
!46 = !DILocation(line: 63, column: 65, scope: !7)
!47 = !DILocation(line: 63, column: 4, scope: !7)
