//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_31 // -- Begin function triton_poi_fused_cat_31
                                        // @triton_poi_fused_cat_31
.visible .entry triton_poi_fused_cat_31(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_31_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_31_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_31_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_31_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_31_param_4,
	.param .u32 triton_poi_fused_cat_31_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<21>;
	.reg .b32 	%r<30>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_cat_31_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_cat_31_param_1];
$L__tmp0:
	.loc	1 21 28                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:21:33
	shl.b32 	%r11, %r1, 7;
	ld.param.u64 	%rd8, [triton_poi_fused_cat_31_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_31_param_3];
	.loc	1 22 36                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_31_param_4];
	.loc	1 22 23                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:22:23
	or.b32  	%r14, %r11, %r13;
	.loc	1 23 21                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:23:21
	setp.lt.s32 	%p9, %r14, 896;
	.loc	1 25 19                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:25:19
	mul.hi.s32 	%r16, %r14, -1840700269;
	mad.lo.s32 	%r17, %r14, 1, %r16;
	shr.u32 	%r18, %r17, 31;
	shr.s32 	%r19, %r17, 7;
	add.s32 	%r20, %r19, %r18;
	.loc	1 24 19                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:24:19
	mul.lo.s32 	%r21, %r20, 224;
	sub.s32 	%r22, %r14, %r21;
	.loc	1 31 18                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:31:18
	setp.lt.s32 	%p10, %r22, 128;
	.loc	1 32 34                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:34
	shl.b32 	%r23, %r20, 7;
	.loc	1 32 48                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:48
	cvt.u16.u32 	%rs1, %r22;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 9;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -128;
	sub.s16 	%rs6, %rs1, %rs5;
	cvt.s32.s16 	%r24, %rs6;
	.loc	1 32 41                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:41
	add.s32 	%r25, %r23, %r24;
	.loc	1 32 30                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:30
	mul.wide.s32 	%rd11, %r25, 4;
	add.s64 	%rd1, %rd6, %rd11;
	.loc	1 32 63                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:63
	and.pred  	%p1, %p9, %p10;
	mov.b32 	%r3, 0;
	.loc	1 32 56                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:32:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 33 38                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:33:38
	shr.u16 	%rs7, %rs1, 15;
	add.s16 	%rs8, %rs1, %rs7;
	and.b16  	%rs9, %rs8, -2;
	sub.s16 	%rs10, %rs1, %rs9;
	.loc	1 33 31                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:33:31
	cvt.s32.s16 	%r26, %rs10;
	mul.wide.s32 	%rd12, %r26, 4;
	add.s64 	%rd2, %rd7, %rd12;
	.loc	1 33 43                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:33:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 18                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:34:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 37 20                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:37:20
	setp.gt.s32 	%p11, %r22, 127;
	.loc	1 40 57                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:40:57
	add.s16 	%rs11, %rs1, -128;
	mul.hi.s16 	%rs12, %rs11, 10923;
	shr.u16 	%rs13, %rs12, 4;
	shr.u16 	%rs14, %rs12, 15;
	add.s16 	%rs15, %rs13, %rs14;
	mul.lo.s16 	%rs16, %rs15, 96;
	sub.s16 	%rs17, %rs11, %rs16;
	cvt.s32.s16 	%r27, %rs17;
	.loc	1 40 41                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:40:41
	mad.lo.s32 	%r28, %r20, 96, %r27;
	.loc	1 40 31                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:40:31
	mul.wide.s32 	%rd13, %r28, 4;
	add.s64 	%rd3, %rd8, %rd13;
	.loc	1 40 72                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:40:72
	and.pred  	%p5, %p9, %p11;
	.loc	1 40 64                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:40:64
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 41 48                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:41:48
	add.s16 	%rs18, %rs12, %rs14;
	mul.lo.s16 	%rs19, %rs18, 6;
	sub.s16 	%rs20, %rs11, %rs19;
	.loc	1 41 32                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:41:32
	cvt.s32.s16 	%r29, %rs20;
	mul.wide.s32 	%rd14, %r29, 4;
	add.s64 	%rd4, %rd9, %rd14;
	.loc	1 41 53                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:41:53
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p5 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f5, %r8;
	.loc	1 42 20                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:42:20
	add.f32 	%f6, %f4, %f5;
	.loc	1 0 0                           // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:0:0
	selp.f32 	%f7, %f3, %f6, %p10;
	.loc	1 46 25                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:46:25
	mul.wide.s32 	%rd15, %r14, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 46 37                         // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:46:37
	mov.b32 	%r10, %f7;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r10 };
	// end inline asm
	.loc	1 46 4                          // cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mq/cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 113
.b8 99
.b8 54
.b8 107
.b8 117
.b8 113
.b8 117
.b8 110
.b8 107
.b8 116
.b8 53
.b8 104
.b8 120
.b8 104
.b8 114
.b8 107
.b8 105
.b8 111
.b8 98
.b8 118
.b8 51
.b8 50
.b8 104
.b8 103
.b8 102
.b8 103
.b8 111
.b8 117
.b8 52
.b8 54
.b8 113
.b8 102
.b8 113
.b8 105
.b8 52
.b8 119
.b8 104
.b8 120
.b8 101
.b8 122
.b8 103
.b8 103
.b8 121
.b8 99
.b8 106
.b8 122
.b8 51
.b8 100
.b8 98
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
