; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_49(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = add i32 %8, -3840, !dbg !14
  %10 = sext i32 %9 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = add i32 %8, -2560, !dbg !16
  %13 = sext i32 %12 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !17
  %15 = add i32 %8, -1280, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = sext i32 %8 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = add i32 %8, 1280, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = add i32 %8, 2560, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = add i32 %8, 3840, !dbg !25
  %27 = sext i32 %26 to i64, !dbg !26
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !26
  %29 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !27
  %30 = shufflevector <2 x i32> %29, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !27
  %31 = sdiv <2 x i32> %30, <i32 1280, i32 2560>, !dbg !27
  %32 = srem <2 x i32> %31, splat (i32 2), !dbg !28
  %33 = icmp sgt <2 x i32> %32, zeroinitializer, !dbg !29
  %34 = extractelement <2 x i1> %33, i64 0, !dbg !30
  %35 = extractelement <2 x i1> %33, i64 1, !dbg !30
  %36 = and i1 %35, %34, !dbg !30
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %11, i1 %36, i32 0, i1 %36) #1, !dbg !31
  %38 = bitcast i32 %37 to float, !dbg !31
  %39 = extractelement <2 x i32> %32, i64 0, !dbg !32
  %40 = icmp sgt i32 %39, -1, !dbg !33
  %41 = and i1 %35, %40, !dbg !34
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %41, i32 0, i1 %41) #1, !dbg !35
  %43 = bitcast i32 %42 to float, !dbg !35
  %44 = fadd float %38, %43, !dbg !36
  %45 = icmp slt i32 %39, 1, !dbg !37
  %46 = and i1 %35, %45, !dbg !38
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %46, i32 0, i1 %46) #1, !dbg !39
  %48 = bitcast i32 %47 to float, !dbg !39
  %49 = fadd float %44, %48, !dbg !40
  %50 = extractelement <2 x i32> %32, i64 1, !dbg !32
  %51 = icmp sgt i32 %50, -1, !dbg !41
  %52 = and i1 %51, %34, !dbg !42
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %52, i32 0, i1 %52) #1, !dbg !43
  %54 = bitcast i32 %53 to float, !dbg !43
  %55 = fadd float %49, %54, !dbg !44
  %56 = or i32 %50, %39, !dbg !45
  %57 = icmp sgt i32 %56, -1, !dbg !45
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %57, i32 0, i1 %57) #1, !dbg !46
  %59 = bitcast i32 %58 to float, !dbg !46
  %60 = fadd float %55, %59, !dbg !47
  %61 = and i1 %51, %45, !dbg !48
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %61, i32 0, i1 %61) #1, !dbg !49
  %63 = bitcast i32 %62 to float, !dbg !49
  %64 = fadd float %60, %63, !dbg !50
  %65 = icmp slt i32 %50, 1, !dbg !51
  %66 = and i1 %65, %34, !dbg !52
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %66, i32 0, i1 %66) #1, !dbg !53
  %68 = bitcast i32 %67 to float, !dbg !53
  %69 = fadd float %64, %68, !dbg !54
  %70 = and i1 %65, %40, !dbg !55
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %70, i32 0, i1 %70) #1, !dbg !56
  %72 = bitcast i32 %71 to float, !dbg !56
  %73 = fadd float %69, %72, !dbg !57
  %74 = and i1 %65, %45, !dbg !58
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %74, i32 0, i1 %74) #1, !dbg !59
  %76 = bitcast i32 %75 to float, !dbg !59
  %77 = fadd float %73, %76, !dbg !60
  %78 = mul nsw i32 %39, %50, !dbg !61
  %79 = add nsw <2 x i32> %32, splat (i32 2), !dbg !62
  %80 = select <2 x i1> %33, <2 x i32> splat (i32 3), <2 x i32> %79, !dbg !63
  %81 = extractelement <2 x i32> %80, i64 0, !dbg !64
  %82 = extractelement <2 x i32> %80, i64 1, !dbg !65
  %83 = mul nuw nsw i32 %81, %82, !dbg !66
  %84 = shufflevector <2 x i32> %32, <2 x i32> poison, <2 x i32> <i32 1, i32 0>, !dbg !65
  %85 = mul nsw <2 x i32> %80, %84, !dbg !65
  %shift = shufflevector <2 x i32> %85, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>
  %86 = add nsw <2 x i32> %shift, %85
  %reass.add = extractelement <2 x i32> %86, i64 0
  %87 = add nsw i32 %50, %39, !dbg !32
  %reass.sub7 = sub nsw i32 %78, %87, !dbg !32
  %88 = add nsw i32 %reass.sub7, 1, !dbg !32
  %89 = add nsw i32 %88, %81, !dbg !64
  %90 = add nsw i32 %89, %82, !dbg !65
  %91 = add nuw nsw i32 %90, %83, !dbg !67
  %92 = sub nsw i32 %91, %reass.add, !dbg !68
  %93 = sitofp i32 %92 to float, !dbg !69
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %77, float %93) #1, !dbg !69
  %95 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !70
  %96 = bitcast float %94 to i32, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %95, i1 true) #1, !dbg !71
  ret void, !dbg !72
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ck3p23boblwrjpj3jfdkpabhdgc4mtygf4mxc5ddlqp6fqu5v6y4.py", directory: "inductor_cache/k3")
!4 = !{ptr @triton_poi_fused_avg_pool2d_49, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_49, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_49", linkageName: "triton_poi_fused_avg_pool2d_49", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 38, column: 41, scope: !7)
!15 = !DILocation(line: 38, column: 31, scope: !7)
!16 = !DILocation(line: 44, column: 41, scope: !7)
!17 = !DILocation(line: 44, column: 31, scope: !7)
!18 = !DILocation(line: 51, column: 41, scope: !7)
!19 = !DILocation(line: 51, column: 31, scope: !7)
!20 = !DILocation(line: 61, column: 31, scope: !7)
!21 = !DILocation(line: 64, column: 38, scope: !7)
!22 = !DILocation(line: 64, column: 31, scope: !7)
!23 = !DILocation(line: 74, column: 38, scope: !7)
!24 = !DILocation(line: 74, column: 31, scope: !7)
!25 = !DILocation(line: 77, column: 38, scope: !7)
!26 = !DILocation(line: 77, column: 31, scope: !7)
!27 = !DILocation(line: 24, column: 21, scope: !7)
!28 = !DILocation(line: 24, column: 29, scope: !7)
!29 = !DILocation(line: 29, column: 19, scope: !7)
!30 = !DILocation(line: 37, column: 19, scope: !7)
!31 = !DILocation(line: 38, column: 46, scope: !7)
!32 = !DILocation(line: 79, column: 40, scope: !7)
!33 = !DILocation(line: 40, column: 21, scope: !7)
!34 = !DILocation(line: 43, column: 19, scope: !7)
!35 = !DILocation(line: 44, column: 46, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 50, column: 19, scope: !7)
!39 = !DILocation(line: 51, column: 46, scope: !7)
!40 = !DILocation(line: 52, column: 20, scope: !7)
!41 = !DILocation(line: 54, column: 21, scope: !7)
!42 = !DILocation(line: 57, column: 20, scope: !7)
!43 = !DILocation(line: 58, column: 46, scope: !7)
!44 = !DILocation(line: 59, column: 20, scope: !7)
!45 = !DILocation(line: 60, column: 20, scope: !7)
!46 = !DILocation(line: 61, column: 36, scope: !7)
!47 = !DILocation(line: 62, column: 20, scope: !7)
!48 = !DILocation(line: 63, column: 20, scope: !7)
!49 = !DILocation(line: 64, column: 43, scope: !7)
!50 = !DILocation(line: 65, column: 20, scope: !7)
!51 = !DILocation(line: 68, column: 20, scope: !7)
!52 = !DILocation(line: 70, column: 20, scope: !7)
!53 = !DILocation(line: 71, column: 43, scope: !7)
!54 = !DILocation(line: 72, column: 20, scope: !7)
!55 = !DILocation(line: 73, column: 20, scope: !7)
!56 = !DILocation(line: 74, column: 43, scope: !7)
!57 = !DILocation(line: 75, column: 20, scope: !7)
!58 = !DILocation(line: 76, column: 20, scope: !7)
!59 = !DILocation(line: 77, column: 43, scope: !7)
!60 = !DILocation(line: 78, column: 20, scope: !7)
!61 = !DILocation(line: 79, column: 43, scope: !7)
!62 = !DILocation(line: 79, column: 124, scope: !7)
!63 = !DILocation(line: 79, column: 131, scope: !7)
!64 = !DILocation(line: 79, column: 48, scope: !7)
!65 = !DILocation(line: 79, column: 231, scope: !7)
!66 = !DILocation(line: 79, column: 105, scope: !7)
!67 = !DILocation(line: 79, column: 299, scope: !7)
!68 = !DILocation(line: 79, column: 357, scope: !7)
!69 = !DILocation(line: 80, column: 20, scope: !7)
!70 = !DILocation(line: 81, column: 25, scope: !7)
!71 = !DILocation(line: 81, column: 37, scope: !7)
!72 = !DILocation(line: 81, column: 4, scope: !7)
