; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = add i32 %8, -10, !dbg !16
  %12 = sext i32 %11 to i64, !dbg !17
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !17
  %14 = add i32 %8, -9, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = add i32 %8, -8, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = add i32 %8, -7, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = add i32 %8, -6, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = add i32 %8, -5, !dbg !26
  %27 = sext i32 %26 to i64, !dbg !27
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !27
  %29 = add i32 %8, -4, !dbg !28
  %30 = sext i32 %29 to i64, !dbg !29
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !29
  %32 = add i32 %8, -3, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !31
  %35 = add i32 %8, -2, !dbg !32
  %36 = sext i32 %35 to i64, !dbg !33
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !33
  %38 = add i32 %8, -1, !dbg !34
  %39 = sext i32 %38 to i64, !dbg !35
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !35
  %41 = sext i32 %8 to i64, !dbg !36
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !36
  %43 = add i32 %8, 1, !dbg !37
  %44 = sext i32 %43 to i64, !dbg !38
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !38
  %46 = add i32 %8, 2, !dbg !39
  %47 = sext i32 %46 to i64, !dbg !40
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !40
  %49 = add i32 %8, 3, !dbg !41
  %50 = sext i32 %49 to i64, !dbg !42
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !42
  %52 = add i32 %8, 4, !dbg !43
  %53 = sext i32 %52 to i64, !dbg !44
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !44
  %55 = add i32 %8, 5, !dbg !45
  %56 = sext i32 %55 to i64, !dbg !46
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !46
  %58 = add i32 %8, 6, !dbg !47
  %59 = sext i32 %58 to i64, !dbg !48
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !48
  %61 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !49
  %62 = insertelement <2 x i32> %61, i32 %8, i64 1, !dbg !49
  %63 = srem <2 x i32> %62, splat (i32 4), !dbg !49
  %64 = extractelement <2 x i32> %63, i64 0, !dbg !50
  %65 = icmp sgt i32 %64, 1, !dbg !51
  %66 = extractelement <2 x i32> %63, i64 1, !dbg !52
  %67 = icmp sgt i32 %66, 1, !dbg !53
  %68 = and i1 %67, %65, !dbg !54
  %69 = and i1 %9, %68, !dbg !55
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %69, i32 -8388608, i1 %69) #1, !dbg !56
  %71 = bitcast i32 %70 to float, !dbg !56
  %72 = icmp sgt i32 %66, 0, !dbg !57
  %73 = and i1 %72, %65, !dbg !58
  %74 = and i1 %9, %73, !dbg !59
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %74, i32 -8388608, i1 %74) #1, !dbg !60
  %76 = bitcast i32 %75 to float, !dbg !60
  %77 = fcmp ogt float %76, %71, !dbg !61
  %78 = fcmp uno float %76, 0.000000e+00, !dbg !65
  %79 = or i1 %77, %78, !dbg !66
  %80 = select i1 %79, float %76, float %71, !dbg !67
  %81 = icmp sgt i32 %66, -1, !dbg !68
  %82 = and i1 %81, %65, !dbg !69
  %83 = and i1 %9, %82, !dbg !70
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %83, i32 -8388608, i1 %83) #1, !dbg !71
  %85 = bitcast i32 %84 to float, !dbg !71
  %86 = fcmp olt float %80, %85, !dbg !72
  %87 = fcmp uno float %85, 0.000000e+00, !dbg !74
  %88 = or i1 %87, %86, !dbg !75
  %89 = select i1 %88, float %85, float %80, !dbg !76
  %90 = add nsw i32 %66, 1, !dbg !77
  %91 = icmp ult i32 %90, 4, !dbg !77
  %92 = and i1 %65, %91, !dbg !78
  %93 = and i1 %9, %92, !dbg !79
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %93, i32 -8388608, i1 %93) #1, !dbg !80
  %95 = bitcast i32 %94 to float, !dbg !80
  %96 = fcmp olt float %89, %95, !dbg !81
  %97 = fcmp uno float %95, 0.000000e+00, !dbg !83
  %98 = or i1 %97, %96, !dbg !84
  %99 = select i1 %98, float %95, float %89, !dbg !85
  %100 = add nsw <2 x i32> %63, splat (i32 2), !dbg !86
  %101 = extractelement <2 x i32> %100, i64 1, !dbg !87
  %102 = icmp ult i32 %101, 4, !dbg !88
  %103 = and i1 %65, %102, !dbg !89
  %104 = and i1 %9, %103, !dbg !90
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %104, i32 -8388608, i1 %104) #1, !dbg !91
  %106 = bitcast i32 %105 to float, !dbg !91
  %107 = fcmp olt float %99, %106, !dbg !92
  %108 = fcmp uno float %106, 0.000000e+00, !dbg !94
  %109 = or i1 %108, %107, !dbg !95
  %110 = select i1 %109, float %106, float %99, !dbg !96
  %111 = icmp sgt i32 %64, 0, !dbg !97
  %112 = and i1 %67, %111, !dbg !98
  %113 = and i1 %9, %112, !dbg !99
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %113, i32 -8388608, i1 %113) #1, !dbg !100
  %115 = bitcast i32 %114 to float, !dbg !100
  %116 = fcmp olt float %110, %115, !dbg !101
  %117 = fcmp uno float %115, 0.000000e+00, !dbg !103
  %118 = or i1 %117, %116, !dbg !104
  %119 = select i1 %118, float %115, float %110, !dbg !105
  %120 = and i1 %72, %111, !dbg !106
  %121 = and i1 %9, %120, !dbg !107
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %121, i32 -8388608, i1 %121) #1, !dbg !108
  %123 = bitcast i32 %122 to float, !dbg !108
  %124 = fcmp olt float %119, %123, !dbg !109
  %125 = fcmp uno float %123, 0.000000e+00, !dbg !111
  %126 = or i1 %125, %124, !dbg !112
  %127 = select i1 %126, float %123, float %119, !dbg !113
  %128 = and i1 %81, %111, !dbg !114
  %129 = and i1 %9, %128, !dbg !115
  %130 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %129, i32 -8388608, i1 %129) #1, !dbg !116
  %131 = bitcast i32 %130 to float, !dbg !116
  %132 = fcmp olt float %127, %131, !dbg !117
  %133 = fcmp uno float %131, 0.000000e+00, !dbg !119
  %134 = or i1 %133, %132, !dbg !120
  %135 = select i1 %134, float %131, float %127, !dbg !121
  %136 = and i1 %111, %91, !dbg !122
  %137 = and i1 %9, %136, !dbg !123
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %137, i32 -8388608, i1 %137) #1, !dbg !124
  %139 = bitcast i32 %138 to float, !dbg !124
  %140 = fcmp olt float %135, %139, !dbg !125
  %141 = fcmp uno float %139, 0.000000e+00, !dbg !127
  %142 = or i1 %141, %140, !dbg !128
  %143 = select i1 %142, float %139, float %135, !dbg !129
  %144 = and i1 %111, %102, !dbg !130
  %145 = and i1 %9, %144, !dbg !131
  %146 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %145, i32 -8388608, i1 %145) #1, !dbg !132
  %147 = bitcast i32 %146 to float, !dbg !132
  %148 = fcmp olt float %143, %147, !dbg !133
  %149 = fcmp uno float %147, 0.000000e+00, !dbg !135
  %150 = or i1 %149, %148, !dbg !136
  %151 = select i1 %150, float %147, float %143, !dbg !137
  %152 = icmp sgt i32 %64, -1, !dbg !138
  %153 = and i1 %67, %152, !dbg !139
  %154 = and i1 %9, %153, !dbg !140
  %155 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %154, i32 -8388608, i1 %154) #1, !dbg !141
  %156 = bitcast i32 %155 to float, !dbg !141
  %157 = fcmp olt float %151, %156, !dbg !142
  %158 = fcmp uno float %156, 0.000000e+00, !dbg !144
  %159 = or i1 %158, %157, !dbg !145
  %160 = select i1 %159, float %156, float %151, !dbg !146
  %161 = and i1 %72, %152, !dbg !147
  %162 = and i1 %9, %161, !dbg !148
  %163 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %162, i32 -8388608, i1 %162) #1, !dbg !149
  %164 = bitcast i32 %163 to float, !dbg !149
  %165 = fcmp olt float %160, %164, !dbg !150
  %166 = fcmp uno float %164, 0.000000e+00, !dbg !152
  %167 = or i1 %166, %165, !dbg !153
  %168 = select i1 %167, float %164, float %160, !dbg !154
  %169 = or i32 %64, %66, !dbg !52
  %170 = icmp sgt i32 %169, -1, !dbg !52
  %171 = and i1 %9, %170, !dbg !155
  %172 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %171, i32 -8388608, i1 %171) #1, !dbg !156
  %173 = bitcast i32 %172 to float, !dbg !156
  %174 = fcmp olt float %168, %173, !dbg !157
  %175 = fcmp uno float %173, 0.000000e+00, !dbg !159
  %176 = or i1 %175, %174, !dbg !160
  %177 = select i1 %176, float %173, float %168, !dbg !161
  %178 = and i1 %152, %91, !dbg !162
  %179 = and i1 %9, %178, !dbg !163
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %179, i32 -8388608, i1 %179) #1, !dbg !164
  %181 = bitcast i32 %180 to float, !dbg !164
  %182 = fcmp olt float %177, %181, !dbg !165
  %183 = fcmp uno float %181, 0.000000e+00, !dbg !167
  %184 = or i1 %183, %182, !dbg !168
  %185 = select i1 %184, float %181, float %177, !dbg !169
  %186 = and i1 %152, %102, !dbg !170
  %187 = and i1 %9, %186, !dbg !171
  %188 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %187, i32 -8388608, i1 %187) #1, !dbg !172
  %189 = bitcast i32 %188 to float, !dbg !172
  %190 = fcmp olt float %185, %189, !dbg !173
  %191 = fcmp uno float %189, 0.000000e+00, !dbg !175
  %192 = or i1 %191, %190, !dbg !176
  %193 = select i1 %192, float %189, float %185, !dbg !177
  %194 = add nsw i32 %64, 1, !dbg !50
  %195 = icmp ult i32 %194, 4, !dbg !50
  %196 = and i1 %67, %195, !dbg !178
  %197 = and i1 %9, %196, !dbg !179
  %198 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %197, i32 -8388608, i1 %197) #1, !dbg !180
  %199 = bitcast i32 %198 to float, !dbg !180
  %200 = fcmp olt float %193, %199, !dbg !181
  %201 = fcmp uno float %199, 0.000000e+00, !dbg !183
  %202 = or i1 %201, %200, !dbg !184
  %203 = select i1 %202, float %199, float %193, !dbg !185
  %204 = and i1 %72, %195, !dbg !186
  %205 = and i1 %9, %204, !dbg !187
  %206 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %205, i32 -8388608, i1 %205) #1, !dbg !188
  %207 = bitcast i32 %206 to float, !dbg !188
  %208 = fcmp olt float %203, %207, !dbg !189
  %209 = fcmp uno float %207, 0.000000e+00, !dbg !191
  %210 = or i1 %209, %208, !dbg !192
  %211 = select i1 %210, float %207, float %203, !dbg !193
  %212 = and i1 %81, %195, !dbg !194
  %213 = and i1 %9, %212, !dbg !195
  %214 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %213, i32 -8388608, i1 %213) #1, !dbg !196
  %215 = bitcast i32 %214 to float, !dbg !196
  %216 = fcmp olt float %211, %215, !dbg !197
  %217 = fcmp uno float %215, 0.000000e+00, !dbg !199
  %218 = or i1 %217, %216, !dbg !200
  %219 = select i1 %218, float %215, float %211, !dbg !201
  %220 = or i32 %194, %90, !dbg !202
  %221 = icmp ult i32 %220, 4, !dbg !202
  %222 = and i1 %9, %221, !dbg !203
  %223 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %222, i32 -8388608, i1 %222) #1, !dbg !204
  %224 = bitcast i32 %223 to float, !dbg !204
  %225 = fcmp olt float %219, %224, !dbg !205
  %226 = fcmp uno float %224, 0.000000e+00, !dbg !207
  %227 = or i1 %226, %225, !dbg !208
  %228 = select i1 %227, float %224, float %219, !dbg !209
  %229 = or i32 %194, %101, !dbg !210
  %230 = icmp ult i32 %229, 4, !dbg !210
  %231 = and i1 %9, %230, !dbg !211
  %232 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %231, i32 -8388608, i1 %231) #1, !dbg !212
  %233 = bitcast i32 %232 to float, !dbg !212
  %234 = fcmp olt float %228, %233, !dbg !213
  %235 = fcmp uno float %233, 0.000000e+00, !dbg !215
  %236 = or i1 %235, %234, !dbg !216
  %237 = select i1 %236, float %233, float %228, !dbg !217
  %238 = extractelement <2 x i32> %100, i64 0, !dbg !87
  %239 = icmp ult i32 %238, 4, !dbg !86
  %240 = and i1 %67, %239, !dbg !218
  %241 = and i1 %9, %240, !dbg !219
  %242 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %241, i32 -8388608, i1 %241) #1, !dbg !220
  %243 = bitcast i32 %242 to float, !dbg !220
  %244 = fcmp olt float %237, %243, !dbg !221
  %245 = fcmp uno float %243, 0.000000e+00, !dbg !223
  %246 = or i1 %245, %244, !dbg !224
  %247 = select i1 %246, float %243, float %237, !dbg !225
  %248 = and i1 %72, %239, !dbg !226
  %249 = add i32 %8, 7, !dbg !227
  %250 = sext i32 %249 to i64, !dbg !228
  %251 = getelementptr float, ptr addrspace(1) %0, i64 %250, !dbg !228
  %252 = and i1 %9, %248, !dbg !229
  %253 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %251, i1 %252, i32 -8388608, i1 %252) #1, !dbg !230
  %254 = bitcast i32 %253 to float, !dbg !230
  %255 = fcmp olt float %247, %254, !dbg !231
  %256 = fcmp uno float %254, 0.000000e+00, !dbg !233
  %257 = or i1 %256, %255, !dbg !234
  %258 = select i1 %257, float %254, float %247, !dbg !235
  %259 = and i1 %81, %239, !dbg !236
  %260 = add i32 %8, 8, !dbg !237
  %261 = sext i32 %260 to i64, !dbg !238
  %262 = getelementptr float, ptr addrspace(1) %0, i64 %261, !dbg !238
  %263 = and i1 %9, %259, !dbg !239
  %264 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %262, i1 %263, i32 -8388608, i1 %263) #1, !dbg !240
  %265 = bitcast i32 %264 to float, !dbg !240
  %266 = fcmp olt float %258, %265, !dbg !241
  %267 = fcmp uno float %265, 0.000000e+00, !dbg !243
  %268 = or i1 %267, %266, !dbg !244
  %269 = select i1 %268, float %265, float %258, !dbg !245
  %270 = or i32 %238, %90, !dbg !246
  %271 = icmp ult i32 %270, 4, !dbg !246
  %272 = add i32 %8, 9, !dbg !247
  %273 = sext i32 %272 to i64, !dbg !248
  %274 = getelementptr float, ptr addrspace(1) %0, i64 %273, !dbg !248
  %275 = and i1 %9, %271, !dbg !249
  %276 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %274, i1 %275, i32 -8388608, i1 %275) #1, !dbg !250
  %277 = bitcast i32 %276 to float, !dbg !250
  %278 = fcmp olt float %269, %277, !dbg !251
  %279 = fcmp uno float %277, 0.000000e+00, !dbg !253
  %280 = or i1 %279, %278, !dbg !254
  %281 = select i1 %280, float %277, float %269, !dbg !255
  %282 = or i32 %238, %101, !dbg !87
  %283 = icmp ult i32 %282, 4, !dbg !87
  %284 = add i32 %8, 10, !dbg !256
  %285 = sext i32 %284 to i64, !dbg !257
  %286 = getelementptr float, ptr addrspace(1) %0, i64 %285, !dbg !257
  %287 = and i1 %9, %283, !dbg !258
  %288 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %286, i1 %287, i32 -8388608, i1 %287) #1, !dbg !259
  %289 = bitcast i32 %288 to float, !dbg !259
  %290 = fcmp olt float %281, %289, !dbg !260
  %291 = fcmp uno float %289, 0.000000e+00, !dbg !262
  %292 = or i1 %291, %290, !dbg !263
  %293 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !264
  %294 = bitcast float %281 to i32, !dbg !265
  %295 = select i1 %292, i32 %288, i32 %294, !dbg !266
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %295, ptr addrspace(1) %293, i1 %9) #1, !dbg !265
  ret void, !dbg !267
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cf2w4346vyr6r6iogaam62iqehahp5wy64kyfplhzjar5qaqxyx4.py", directory: "inductor_cache/f2")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 38, column: 39, scope: !7)
!17 = !DILocation(line: 38, column: 31, scope: !7)
!18 = !DILocation(line: 44, column: 38, scope: !7)
!19 = !DILocation(line: 44, column: 31, scope: !7)
!20 = !DILocation(line: 51, column: 38, scope: !7)
!21 = !DILocation(line: 51, column: 31, scope: !7)
!22 = !DILocation(line: 58, column: 38, scope: !7)
!23 = !DILocation(line: 58, column: 31, scope: !7)
!24 = !DILocation(line: 65, column: 38, scope: !7)
!25 = !DILocation(line: 65, column: 31, scope: !7)
!26 = !DILocation(line: 75, column: 38, scope: !7)
!27 = !DILocation(line: 75, column: 31, scope: !7)
!28 = !DILocation(line: 78, column: 38, scope: !7)
!29 = !DILocation(line: 78, column: 31, scope: !7)
!30 = !DILocation(line: 81, column: 38, scope: !7)
!31 = !DILocation(line: 81, column: 31, scope: !7)
!32 = !DILocation(line: 84, column: 38, scope: !7)
!33 = !DILocation(line: 84, column: 31, scope: !7)
!34 = !DILocation(line: 94, column: 38, scope: !7)
!35 = !DILocation(line: 94, column: 31, scope: !7)
!36 = !DILocation(line: 97, column: 31, scope: !7)
!37 = !DILocation(line: 100, column: 35, scope: !7)
!38 = !DILocation(line: 100, column: 31, scope: !7)
!39 = !DILocation(line: 103, column: 35, scope: !7)
!40 = !DILocation(line: 103, column: 31, scope: !7)
!41 = !DILocation(line: 113, column: 35, scope: !7)
!42 = !DILocation(line: 113, column: 31, scope: !7)
!43 = !DILocation(line: 116, column: 35, scope: !7)
!44 = !DILocation(line: 116, column: 31, scope: !7)
!45 = !DILocation(line: 119, column: 35, scope: !7)
!46 = !DILocation(line: 119, column: 31, scope: !7)
!47 = !DILocation(line: 122, column: 35, scope: !7)
!48 = !DILocation(line: 122, column: 31, scope: !7)
!49 = !DILocation(line: 24, column: 26, scope: !7)
!50 = !DILocation(line: 108, column: 20, scope: !7)
!51 = !DILocation(line: 29, column: 19, scope: !7)
!52 = !DILocation(line: 96, column: 20, scope: !7)
!53 = !DILocation(line: 34, column: 19, scope: !7)
!54 = !DILocation(line: 37, column: 19, scope: !7)
!55 = !DILocation(line: 38, column: 52, scope: !7)
!56 = !DILocation(line: 38, column: 44, scope: !7)
!57 = !DILocation(line: 40, column: 21, scope: !7)
!58 = !DILocation(line: 43, column: 19, scope: !7)
!59 = !DILocation(line: 44, column: 51, scope: !7)
!60 = !DILocation(line: 44, column: 43, scope: !7)
!61 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !64)
!62 = distinct !DILexicalBlockFile(scope: !7, file: !63, discriminator: 0)
!63 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!64 = !DILocation(line: 45, column: 42, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !64)
!68 = !DILocation(line: 47, column: 21, scope: !7)
!69 = !DILocation(line: 50, column: 19, scope: !7)
!70 = !DILocation(line: 51, column: 51, scope: !7)
!71 = !DILocation(line: 51, column: 43, scope: !7)
!72 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !73)
!73 = !DILocation(line: 52, column: 42, scope: !7)
!74 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !73)
!75 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !73)
!76 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !73)
!77 = !DILocation(line: 56, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 19, scope: !7)
!79 = !DILocation(line: 58, column: 51, scope: !7)
!80 = !DILocation(line: 58, column: 43, scope: !7)
!81 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !82)
!82 = !DILocation(line: 59, column: 42, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !82)
!86 = !DILocation(line: 127, column: 21, scope: !7)
!87 = !DILocation(line: 140, column: 22, scope: !7)
!88 = !DILocation(line: 63, column: 20, scope: !7)
!89 = !DILocation(line: 64, column: 19, scope: !7)
!90 = !DILocation(line: 65, column: 51, scope: !7)
!91 = !DILocation(line: 65, column: 43, scope: !7)
!92 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !93)
!93 = !DILocation(line: 66, column: 42, scope: !7)
!94 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !93)
!95 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !93)
!96 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !93)
!97 = !DILocation(line: 68, column: 21, scope: !7)
!98 = !DILocation(line: 71, column: 20, scope: !7)
!99 = !DILocation(line: 72, column: 51, scope: !7)
!100 = !DILocation(line: 72, column: 43, scope: !7)
!101 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !102)
!102 = !DILocation(line: 73, column: 42, scope: !7)
!103 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !102)
!104 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !102)
!105 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !102)
!106 = !DILocation(line: 74, column: 20, scope: !7)
!107 = !DILocation(line: 75, column: 51, scope: !7)
!108 = !DILocation(line: 75, column: 43, scope: !7)
!109 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !110)
!110 = !DILocation(line: 76, column: 42, scope: !7)
!111 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !110)
!114 = !DILocation(line: 77, column: 20, scope: !7)
!115 = !DILocation(line: 78, column: 51, scope: !7)
!116 = !DILocation(line: 78, column: 43, scope: !7)
!117 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !118)
!118 = !DILocation(line: 79, column: 42, scope: !7)
!119 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !118)
!120 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !118)
!121 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !118)
!122 = !DILocation(line: 80, column: 20, scope: !7)
!123 = !DILocation(line: 81, column: 51, scope: !7)
!124 = !DILocation(line: 81, column: 43, scope: !7)
!125 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !126)
!126 = !DILocation(line: 82, column: 42, scope: !7)
!127 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !126)
!128 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !126)
!129 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !126)
!130 = !DILocation(line: 83, column: 20, scope: !7)
!131 = !DILocation(line: 84, column: 51, scope: !7)
!132 = !DILocation(line: 84, column: 43, scope: !7)
!133 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !134)
!134 = !DILocation(line: 85, column: 42, scope: !7)
!135 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !134)
!136 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !134)
!137 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !134)
!138 = !DILocation(line: 87, column: 21, scope: !7)
!139 = !DILocation(line: 90, column: 20, scope: !7)
!140 = !DILocation(line: 91, column: 51, scope: !7)
!141 = !DILocation(line: 91, column: 43, scope: !7)
!142 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !143)
!143 = !DILocation(line: 92, column: 42, scope: !7)
!144 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !143)
!145 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !143)
!146 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !143)
!147 = !DILocation(line: 93, column: 20, scope: !7)
!148 = !DILocation(line: 94, column: 51, scope: !7)
!149 = !DILocation(line: 94, column: 43, scope: !7)
!150 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !151)
!151 = !DILocation(line: 95, column: 42, scope: !7)
!152 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !151)
!153 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !151)
!154 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !151)
!155 = !DILocation(line: 97, column: 44, scope: !7)
!156 = !DILocation(line: 97, column: 36, scope: !7)
!157 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !158)
!158 = !DILocation(line: 98, column: 42, scope: !7)
!159 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !158)
!160 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !158)
!161 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !158)
!162 = !DILocation(line: 99, column: 20, scope: !7)
!163 = !DILocation(line: 100, column: 48, scope: !7)
!164 = !DILocation(line: 100, column: 40, scope: !7)
!165 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !166)
!166 = !DILocation(line: 101, column: 42, scope: !7)
!167 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !166)
!168 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !166)
!169 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !166)
!170 = !DILocation(line: 102, column: 20, scope: !7)
!171 = !DILocation(line: 103, column: 48, scope: !7)
!172 = !DILocation(line: 103, column: 40, scope: !7)
!173 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !174)
!174 = !DILocation(line: 104, column: 42, scope: !7)
!175 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !174)
!176 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !174)
!177 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !174)
!178 = !DILocation(line: 109, column: 20, scope: !7)
!179 = !DILocation(line: 110, column: 48, scope: !7)
!180 = !DILocation(line: 110, column: 40, scope: !7)
!181 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !182)
!182 = !DILocation(line: 111, column: 42, scope: !7)
!183 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !182)
!184 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !182)
!185 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !182)
!186 = !DILocation(line: 112, column: 20, scope: !7)
!187 = !DILocation(line: 113, column: 48, scope: !7)
!188 = !DILocation(line: 113, column: 40, scope: !7)
!189 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !190)
!190 = !DILocation(line: 114, column: 42, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !190)
!194 = !DILocation(line: 115, column: 20, scope: !7)
!195 = !DILocation(line: 116, column: 48, scope: !7)
!196 = !DILocation(line: 116, column: 40, scope: !7)
!197 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !198)
!198 = !DILocation(line: 117, column: 42, scope: !7)
!199 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !198)
!200 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !198)
!201 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !198)
!202 = !DILocation(line: 118, column: 20, scope: !7)
!203 = !DILocation(line: 119, column: 48, scope: !7)
!204 = !DILocation(line: 119, column: 40, scope: !7)
!205 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !206)
!206 = !DILocation(line: 120, column: 42, scope: !7)
!207 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !206)
!208 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !206)
!209 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !206)
!210 = !DILocation(line: 121, column: 20, scope: !7)
!211 = !DILocation(line: 122, column: 48, scope: !7)
!212 = !DILocation(line: 122, column: 40, scope: !7)
!213 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !214)
!214 = !DILocation(line: 123, column: 42, scope: !7)
!215 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !214)
!216 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !214)
!217 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !214)
!218 = !DILocation(line: 128, column: 22, scope: !7)
!219 = !DILocation(line: 129, column: 50, scope: !7)
!220 = !DILocation(line: 129, column: 41, scope: !7)
!221 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !222)
!222 = !DILocation(line: 130, column: 44, scope: !7)
!223 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !222)
!224 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !222)
!225 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !222)
!226 = !DILocation(line: 131, column: 22, scope: !7)
!227 = !DILocation(line: 132, column: 36, scope: !7)
!228 = !DILocation(line: 132, column: 32, scope: !7)
!229 = !DILocation(line: 132, column: 50, scope: !7)
!230 = !DILocation(line: 132, column: 41, scope: !7)
!231 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !232)
!232 = !DILocation(line: 133, column: 44, scope: !7)
!233 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !232)
!234 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !232)
!235 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !232)
!236 = !DILocation(line: 134, column: 22, scope: !7)
!237 = !DILocation(line: 135, column: 36, scope: !7)
!238 = !DILocation(line: 135, column: 32, scope: !7)
!239 = !DILocation(line: 135, column: 50, scope: !7)
!240 = !DILocation(line: 135, column: 41, scope: !7)
!241 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !242)
!242 = !DILocation(line: 136, column: 44, scope: !7)
!243 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !242)
!244 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !242)
!245 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !242)
!246 = !DILocation(line: 137, column: 22, scope: !7)
!247 = !DILocation(line: 138, column: 36, scope: !7)
!248 = !DILocation(line: 138, column: 32, scope: !7)
!249 = !DILocation(line: 138, column: 50, scope: !7)
!250 = !DILocation(line: 138, column: 41, scope: !7)
!251 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !252)
!252 = !DILocation(line: 139, column: 44, scope: !7)
!253 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !252)
!254 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !252)
!255 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !252)
!256 = !DILocation(line: 141, column: 37, scope: !7)
!257 = !DILocation(line: 141, column: 32, scope: !7)
!258 = !DILocation(line: 141, column: 51, scope: !7)
!259 = !DILocation(line: 141, column: 42, scope: !7)
!260 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !261)
!261 = !DILocation(line: 142, column: 44, scope: !7)
!262 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !261)
!263 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !261)
!264 = !DILocation(line: 143, column: 25, scope: !7)
!265 = !DILocation(line: 143, column: 38, scope: !7)
!266 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !261)
!267 = !DILocation(line: 143, column: 4, scope: !7)
