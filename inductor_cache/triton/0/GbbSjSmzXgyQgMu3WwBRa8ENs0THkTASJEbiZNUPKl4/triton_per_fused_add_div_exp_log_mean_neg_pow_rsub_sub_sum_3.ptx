//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3 // -- Begin function triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3
.visible .entry triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_2,
	.param .u32 triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<69>;
	.reg .f32 	%f<165>;
	.reg .b64 	%rd<15>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd10, [triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_1];
	shl.b32 	%r26, %r1, 1;
	ld.param.u64 	%rd11, [triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_2];
	and.b32  	%r27, %r26, 14;
	.loc	1 32 38                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:32:38
	shl.b32 	%r28, %r1, 3;
	and.b32  	%r29, %r28, 448;
	.loc	1 32 35                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:32:35
	or.b32  	%r30, %r27, %r29;
	.loc	1 32 30                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:32:30
	mul.wide.u32 	%rd12, %r30, 4;
	add.s64 	%rd2, %rd10, %rd12;
	mov.pred 	%p1, -1;
	.loc	1 32 43                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:32:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r10;
	mov.b32 	%f27, %r11;
	.loc	1 33 30                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:33:30
	add.s64 	%rd3, %rd2, 64;
	.loc	1 33 48                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:33:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r12;
	mov.b32 	%f29, %r13;
	.loc	1 34 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:34:31
	add.s64 	%rd4, %rd2, 128;
	.loc	1 34 49                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:34:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r14;
	mov.b32 	%f31, %r15;
	.loc	1 35 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:35:31
	add.s64 	%rd5, %rd2, 192;
	.loc	1 35 49                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:35:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r16, %r17 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r16;
	mov.b32 	%f33, %r17;
	.loc	1 36 41                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:36:41
	and.b32  	%r31, %r28, 192;
	.loc	1 36 36                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:36:36
	or.b32  	%r32, %r27, %r31;
	.loc	1 36 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:36:31
	mul.wide.u32 	%rd13, %r32, 4;
	add.s64 	%rd6, %rd11, %rd13;
	.loc	1 36 52                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:36:52
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.v2.b32 { %r18, %r19 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:37:31
	add.s64 	%rd7, %rd6, 64;
	.loc	1 37 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:37:57
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v2.b32 { %r20, %r21 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:38:31
	add.s64 	%rd8, %rd6, 128;
	.loc	1 38 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:38:57
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.v2.b32 { %r22, %r23 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 31                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:39:31
	add.s64 	%rd9, %rd6, 192;
	.loc	1 39 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:39:57
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.v2.b32 { %r24, %r25 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 42 18                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:42:18
	neg.f32 	%f34, %f26;
	fma.rn.f32 	%f35, %f34, %f26, 0f40000000;
	neg.f32 	%f36, %f27;
	fma.rn.f32 	%f37, %f36, %f27, 0f40000000;
	.loc	1 44 18                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:44:18
	mul.f32 	%f38, %f35, 0f3F000000;
	mul.f32 	%f39, %f37, 0f3F000000;
	.loc	1 46 18                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:46:18
	mul.f32 	%f40, %f38, 0f3E800000;
	mul.f32 	%f41, %f39, 0f3E800000;
	.loc	1 47 23                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:47:23
	mul.f32 	%f11, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f10, %f11;
	// end inline asm
	mul.f32 	%f13, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f12, %f13;
	// end inline asm
	.loc	1 49 19                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:49:19
	neg.f32 	%f42, %f28;
	fma.rn.f32 	%f43, %f42, %f28, 0f40000000;
	neg.f32 	%f44, %f29;
	fma.rn.f32 	%f45, %f44, %f29, 0f40000000;
	.loc	1 50 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:50:20
	mul.f32 	%f46, %f43, 0f3F000000;
	mul.f32 	%f47, %f45, 0f3F000000;
	.loc	1 51 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:51:20
	mul.f32 	%f48, %f46, 0f3E800000;
	mul.f32 	%f49, %f47, 0f3E800000;
	.loc	1 52 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:52:24
	mul.f32 	%f15, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f14, %f15;
	// end inline asm
	mul.f32 	%f17, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f16, %f17;
	// end inline asm
	.loc	1 53 19                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:53:19
	add.f32 	%f50, %f10, %f14;
	add.f32 	%f51, %f12, %f16;
	.loc	1 55 19                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:55:19
	neg.f32 	%f52, %f30;
	fma.rn.f32 	%f53, %f52, %f30, 0f40000000;
	neg.f32 	%f54, %f31;
	fma.rn.f32 	%f55, %f54, %f31, 0f40000000;
	.loc	1 56 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:56:20
	mul.f32 	%f56, %f53, 0f3F000000;
	mul.f32 	%f57, %f55, 0f3F000000;
	.loc	1 57 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:57:20
	mul.f32 	%f58, %f56, 0f3E800000;
	mul.f32 	%f59, %f57, 0f3E800000;
	.loc	1 58 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:58:24
	mul.f32 	%f19, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f18, %f19;
	// end inline asm
	mul.f32 	%f21, %f59, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f20, %f21;
	// end inline asm
	.loc	1 59 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:59:20
	add.f32 	%f60, %f50, %f18;
	add.f32 	%f61, %f51, %f20;
	.loc	1 61 19                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:61:19
	neg.f32 	%f62, %f32;
	fma.rn.f32 	%f63, %f62, %f32, 0f40000000;
	neg.f32 	%f64, %f33;
	fma.rn.f32 	%f65, %f64, %f33, 0f40000000;
	.loc	1 62 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:62:20
	mul.f32 	%f66, %f63, 0f3F000000;
	mul.f32 	%f67, %f65, 0f3F000000;
	.loc	1 63 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:63:20
	mul.f32 	%f68, %f66, 0f3E800000;
	mul.f32 	%f69, %f67, 0f3E800000;
	.loc	1 64 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:64:24
	mul.f32 	%f23, %f68, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f22, %f23;
	// end inline asm
	mul.f32 	%f25, %f69, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f24, %f25;
	// end inline asm
	.loc	1 65 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:65:20
	add.f32 	%f70, %f60, %f22;
	add.f32 	%f71, %f61, %f24;
	.loc	1 67 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:67:20
	add.f32 	%f72, %f70, 0fBFA45AF2;
	add.f32 	%f1, %f71, 0fBFA45AF2;
	.loc	1 73 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:73:24
	setp.lt.f32 	%p9, %f72, 0f00800000;
	mul.f32 	%f73, %f72, 0f4B000000;
	selp.f32 	%f2, %f73, %f72, %p9;
	selp.f32 	%f74, 0fC1B80000, 0f00000000, %p9;
	mov.b32 	%r33, %f2;
	add.s32 	%r34, %r33, -1059760811;
	and.b32  	%r35, %r34, -8388608;
	sub.s32 	%r36, %r33, %r35;
	mov.b32 	%f75, %r36;
	cvt.rn.f32.s32 	%f76, %r35;
	mov.f32 	%f77, 0f34000000;
	fma.rn.ftz.f32 	%f78, %f76, %f77, %f74;
	add.f32 	%f79, %f75, 0fBF800000;
	mov.f32 	%f80, 0f3E1039F6;
	mov.f32 	%f81, 0fBE055027;
	fma.rn.ftz.f32 	%f82, %f81, %f79, %f80;
	mov.f32 	%f83, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f84, %f82, %f79, %f83;
	mov.f32 	%f85, 0f3E0F2955;
	fma.rn.ftz.f32 	%f86, %f84, %f79, %f85;
	mov.f32 	%f87, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f88, %f86, %f79, %f87;
	mov.f32 	%f89, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f90, %f88, %f79, %f89;
	mov.f32 	%f91, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f92, %f90, %f79, %f91;
	mov.f32 	%f93, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f94, %f92, %f79, %f93;
	mov.f32 	%f95, 0fBF000000;
	fma.rn.ftz.f32 	%f96, %f94, %f79, %f95;
	mul.f32 	%f97, %f79, %f96;
	fma.rn.ftz.f32 	%f98, %f97, %f79, %f79;
	mov.f32 	%f99, 0f3F317218;
	fma.rn.ftz.f32 	%f163, %f78, %f99, %f98;
	setp.lt.u32 	%p10, %r33, 2139095040;
	mov.f32 	%f100, 0f7F800000;
	@%p10 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:0:24
	fma.rn.ftz.f32 	%f163, %f2, %f100, %f100;
$L__BB0_2:                              // %__nv_logf.exit
	ld.param.u64 	%rd14, [triton_per_fused_add_div_exp_log_mean_neg_pow_rsub_sub_sum_3_param_0];
	.loc	1 73 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:73:24
	setp.lt.f32 	%p11, %f1, 0f00800000;
	mul.f32 	%f101, %f1, 0f4B000000;
	selp.f32 	%f6, %f101, %f1, %p11;
	selp.f32 	%f102, 0fC1B80000, 0f00000000, %p11;
	mov.b32 	%r37, %f6;
	add.s32 	%r38, %r37, -1059760811;
	and.b32  	%r39, %r38, -8388608;
	sub.s32 	%r40, %r37, %r39;
	mov.b32 	%f103, %r40;
	cvt.rn.f32.s32 	%f104, %r39;
	fma.rn.ftz.f32 	%f106, %f104, %f77, %f102;
	add.f32 	%f107, %f103, 0fBF800000;
	fma.rn.ftz.f32 	%f110, %f81, %f107, %f80;
	fma.rn.ftz.f32 	%f112, %f110, %f107, %f83;
	fma.rn.ftz.f32 	%f114, %f112, %f107, %f85;
	fma.rn.ftz.f32 	%f116, %f114, %f107, %f87;
	fma.rn.ftz.f32 	%f118, %f116, %f107, %f89;
	fma.rn.ftz.f32 	%f120, %f118, %f107, %f91;
	fma.rn.ftz.f32 	%f122, %f120, %f107, %f93;
	fma.rn.ftz.f32 	%f124, %f122, %f107, %f95;
	mul.f32 	%f125, %f107, %f124;
	fma.rn.ftz.f32 	%f126, %f125, %f107, %f107;
	fma.rn.ftz.f32 	%f164, %f106, %f99, %f126;
	setp.lt.u32 	%p12, %r37, 2139095040;
	@%p12 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i27
	.loc	1 0 24                          // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:0:24
	fma.rn.ftz.f32 	%f164, %f6, %f100, %f100;
$L__BB0_4:                              // %__nv_logf.exit30
	.loc	1 73 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:73:24
	setp.eq.f32 	%p17, %f2, 0f00000000;
	setp.eq.f32 	%p18, %f6, 0f00000000;
	.loc	1 26 34                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:26:34
	and.b32  	%r51, %r1, 31;
	.loc	1 36 52                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:36:52
	mov.b32 	%f129, %r19;
	mov.b32 	%f130, %r18;
	.loc	1 37 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:37:57
	mov.b32 	%f131, %r21;
	mov.b32 	%f132, %r20;
	.loc	1 68 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:68:20
	add.f32 	%f133, %f130, %f132;
	add.f32 	%f134, %f129, %f131;
	.loc	1 38 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:38:57
	mov.b32 	%f135, %r22;
	mov.b32 	%f136, %r23;
	.loc	1 69 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:69:20
	add.f32 	%f137, %f134, %f136;
	add.f32 	%f138, %f133, %f135;
	.loc	1 39 57                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:39:57
	mov.b32 	%f139, %r25;
	mov.b32 	%f140, %r24;
	.loc	1 70 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:70:20
	add.f32 	%f141, %f138, %f140;
	add.f32 	%f142, %f137, %f139;
	.loc	1 72 13                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:72:13
	fma.rn.f32 	%f143, %f142, 0fBE800000, 0f00000000;
	fma.rn.f32 	%f144, %f141, 0fBE800000, 0f00000000;
	.loc	1 73 24                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:73:24
	selp.f32 	%f145, 0fFF800000, %f164, %p18;
	selp.f32 	%f146, 0fFF800000, %f163, %p17;
	.loc	1 74 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:74:20
	add.f32 	%f147, %f144, %f146;
	add.f32 	%f148, %f143, %f145;
$L__tmp0:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f149, %f147, %f148;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f149;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f150, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f151, %f149, %f150;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f151;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f152, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f153, %f151, %f152;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f153;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f154, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f155, %f153, %f154;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f155;
	shfl.sync.bfly.b32	%r59, %r58, 2, 31, -1;
	mov.b32 	%f156, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f157, %f155, %f156;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f157;
	shfl.sync.bfly.b32	%r61, %r60, 1, 31, -1;
	mov.b32 	%f158, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f159, %f157, %f158;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p13, %r51, 0;
	shr.u32 	%r62, %r1, 3;
	and.b32  	%r63, %r62, 4;
	mov.u32 	%r64, global_smem;
	add.s32 	%r41, %r64, %r63;
	mov.b32 	%r42, %f159;
	// begin inline asm
	@%p13 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p14, %r1, 2;
	shl.b32 	%r65, %r1, 2;
	add.s32 	%r44, %r64, %r65;
	// begin inline asm
	@%p14 ld.shared.b32 %r43, [ %r44 + 0 ];
	// end inline asm
	mov.b32 	%f160, %r43;
	shfl.sync.bfly.b32	%r66, %r43, 1, 31, -1;
	mov.b32 	%f161, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f160, %f161;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r67, %r1, 1;
	setp.eq.b32 	%p19, %r67, 1;
	not.pred 	%p20, %p19;
	and.pred  	%p15, %p14, %p20;
	mov.b32 	%r46, %f162;
	// begin inline asm
	@%p15 st.shared.b32 [ %r44 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 78 20                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:78:20
	ld.shared.u32 	%r48, [global_smem];
	mov.b32 	%r49, 1124073472;
	// begin inline asm
	div.full.f32 %r50, %r48, %r49;
	// end inline asm
	.loc	1 79 4                          // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:79:4
	bar.sync 	0;
	.loc	1 80 71                         // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:80:71
	and.b32  	%r68, %r1, 63;
	setp.eq.s32 	%p16, %r68, 0;
	// begin inline asm
	@%p16 st.global.b32 [ %rd14 + 0 ], { %r50 };
	// end inline asm
	.loc	1 80 4                          // clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py:80:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ly/clynjrsxty36pfbzbhpplg4ze4s2qs3dwvvedpyupnk3zuid3r7e.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 121
.b8 110
.b8 106
.b8 114
.b8 115
.b8 120
.b8 116
.b8 121
.b8 51
.b8 54
.b8 112
.b8 102
.b8 98
.b8 122
.b8 98
.b8 104
.b8 112
.b8 112
.b8 108
.b8 103
.b8 52
.b8 122
.b8 101
.b8 52
.b8 115
.b8 50
.b8 113
.b8 115
.b8 51
.b8 100
.b8 119
.b8 118
.b8 118
.b8 101
.b8 100
.b8 112
.b8 121
.b8 117
.b8 112
.b8 110
.b8 107
.b8 51
.b8 122
.b8 117
.b8 105
.b8 100
.b8 51
.b8 114
.b8 55
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 76                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
