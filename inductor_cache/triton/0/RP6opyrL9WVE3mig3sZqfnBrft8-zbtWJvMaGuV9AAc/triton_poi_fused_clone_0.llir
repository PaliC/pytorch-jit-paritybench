; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 1024, !dbg !14
  %12 = srem i32 %10, 16, !dbg !15
  %13 = sdiv i32 %9, 64, !dbg !16
  %14 = srem i32 %13, 4, !dbg !17
  %15 = sdiv i32 %9, 256, !dbg !18
  %16 = sdiv i32 %9, 16, !dbg !19
  %17 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !20
  %18 = insertelement <2 x i32> %17, i32 %9, i64 1, !dbg !20
  %19 = srem <2 x i32> %18, <i32 4, i32 16>, !dbg !20
  %20 = extractelement <2 x i32> %19, i64 1, !dbg !21
  %.lhs.trunc = trunc nsw i32 %20 to i8, !dbg !21
  %21 = srem i8 %.lhs.trunc, 4, !dbg !21
  %.sext = sext i8 %21 to i32, !dbg !21
  %.lhs.trunc1 = trunc nsw i32 %12 to i8, !dbg !21
  %22 = srem i8 %.lhs.trunc1, 4, !dbg !21
  %.sext2 = sext i8 %22 to i32, !dbg !21
  %23 = shl nsw i32 %.sext, 2, !dbg !22
  %24 = shl nsw i32 %.sext2, 2, !dbg !22
  %25 = shl nsw i32 %15, 4, !dbg !23
  %26 = add nsw i32 %25, %14, !dbg !24
  %27 = add nsw i32 %26, %23, !dbg !25
  %28 = add nsw i32 %26, %24, !dbg !25
  %29 = sext i32 %27 to i64, !dbg !26
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !26
  %31 = sext i32 %28 to i64, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %11) #1, !dbg !27
  %34 = bitcast i32 %33 to float, !dbg !27
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %11) #1, !dbg !27
  %36 = bitcast i32 %35 to float, !dbg !27
  %37 = shl nsw i32 %20, 2, !dbg !28
  %38 = shl nsw i32 %12, 2, !dbg !28
  %39 = extractelement <2 x i32> %19, i64 0, !dbg !29
  %40 = add nsw i32 %39, %37, !dbg !29
  %41 = add nsw i32 %39, %38, !dbg !29
  %.lhs.trunc3 = trunc nsw i32 %40 to i8, !dbg !30
  %.lhs.trunc3.frozen = freeze i8 %.lhs.trunc3, !dbg !30
  %42 = sdiv i8 %.lhs.trunc3.frozen, 16, !dbg !30
  %.sext4 = sext i8 %42 to i32, !dbg !30
  %.lhs.trunc5 = trunc nsw i32 %41 to i8, !dbg !30
  %.lhs.trunc5.frozen = freeze i8 %.lhs.trunc5, !dbg !30
  %43 = sdiv i8 %.lhs.trunc5.frozen, 16, !dbg !30
  %.sext6 = sext i8 %43 to i32, !dbg !30
  %44 = shl nsw i32 %.sext4, 2, !dbg !31
  %45 = shl nsw i32 %.sext6, 2, !dbg !31
  %46 = add nsw i32 %44, %25, !dbg !32
  %47 = add nsw i32 %45, %25, !dbg !32
  %48 = mul i8 %42, 16, !dbg !33
  %.decomposed = sub i8 %.lhs.trunc3.frozen, %48, !dbg !33
  %49 = mul i8 %43, 16, !dbg !33
  %.decomposed15 = sub i8 %.lhs.trunc5.frozen, %49, !dbg !33
  %50 = srem i8 %.decomposed, 4, !dbg !34
  %.sext12 = sext i8 %50 to i32, !dbg !34
  %51 = srem i8 %.decomposed15, 4, !dbg !34
  %.sext14 = sext i8 %51 to i32, !dbg !34
  %52 = add nsw i32 %46, %.sext12, !dbg !35
  %53 = add nsw i32 %47, %.sext14, !dbg !35
  %54 = sext i32 %52 to i64, !dbg !36
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !36
  %56 = sext i32 %53 to i64, !dbg !36
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !36
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %11) #1, !dbg !37
  %59 = bitcast i32 %58 to float, !dbg !37
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %11) #1, !dbg !37
  %61 = bitcast i32 %60 to float, !dbg !37
  %62 = fmul float %34, %59, !dbg !38
  %63 = fmul float %36, %61, !dbg !38
  %64 = sext i32 %9 to i64, !dbg !39
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !39
  %66 = bitcast float %62 to i32, !dbg !40
  %67 = bitcast float %63 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %66, i32 %67, ptr addrspace(1) %65, i1 %11) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c66mgixsiepbv6ggf4onbplqvdpfu4g2oufbggpaf4f6gs2c4lim.py", directory: "inductor_cache/66")
!4 = !{ptr @triton_poi_fused_clone_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_0", linkageName: "triton_poi_fused_clone_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 27, column: 27, scope: !7)
!21 = !DILocation(line: 29, column: 44, scope: !7)
!22 = !DILocation(line: 29, column: 39, scope: !7)
!23 = !DILocation(line: 29, column: 53, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 29, column: 50, scope: !7)
!26 = !DILocation(line: 29, column: 30, scope: !7)
!27 = !DILocation(line: 29, column: 58, scope: !7)
!28 = !DILocation(line: 30, column: 41, scope: !7)
!29 = !DILocation(line: 30, column: 39, scope: !7)
!30 = !DILocation(line: 30, column: 48, scope: !7)
!31 = !DILocation(line: 30, column: 33, scope: !7)
!32 = !DILocation(line: 30, column: 54, scope: !7)
!33 = !DILocation(line: 30, column: 105, scope: !7)
!34 = !DILocation(line: 30, column: 112, scope: !7)
!35 = !DILocation(line: 30, column: 89, scope: !7)
!36 = !DILocation(line: 30, column: 30, scope: !7)
!37 = !DILocation(line: 30, column: 118, scope: !7)
!38 = !DILocation(line: 31, column: 18, scope: !7)
!39 = !DILocation(line: 32, column: 25, scope: !7)
!40 = !DILocation(line: 32, column: 36, scope: !7)
!41 = !DILocation(line: 32, column: 4, scope: !7)
