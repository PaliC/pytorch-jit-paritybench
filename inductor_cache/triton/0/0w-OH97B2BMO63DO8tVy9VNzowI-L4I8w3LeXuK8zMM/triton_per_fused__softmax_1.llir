; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 3, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = shl i32 %7, 1, !dbg !15
  %13 = and i32 %12, 14, !dbg !15
  %14 = shl i32 %10, 4, !dbg !16
  %15 = or disjoint i32 %14, %13, !dbg !17
  %16 = sext i32 %15 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %11, i32 0, i1 %11, i32 0, i1 %11) #2, !dbg !19
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !19
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %22 = bitcast i32 %20 to float, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !20
  %24 = bitcast i32 %23 to float, !dbg !20
  %25 = fcmp oge float %24, 0.000000e+00, !dbg !21
  %26 = select i1 %25, float 1.000000e+00, float -1.000000e+00, !dbg !22
  %27 = fmul float %26, %21, !dbg !23
  %28 = fmul float %26, %22, !dbg !23
  %29 = select i1 %11, float %27, float 0xFFF0000000000000, !dbg !24
  %30 = select i1 %11, float %28, float 0xFFF0000000000000, !dbg !24
  %31 = fcmp ogt float %29, %30, !dbg !25
  %32 = fcmp uno float %29, 0.000000e+00, !dbg !30
  %33 = or i1 %31, %32, !dbg !31
  %34 = select i1 %33, float %29, float %30, !dbg !32
  %35 = bitcast float %34 to i32, !dbg !33
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 4, i32 31), !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = fcmp ogt float %34, %37, !dbg !25
  %39 = fcmp uno float %34, 0.000000e+00, !dbg !30
  %40 = or i1 %38, %39, !dbg !31
  %41 = select i1 %40, float %34, float %37, !dbg !32
  %42 = bitcast float %41 to i32, !dbg !33
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !33
  %44 = bitcast i32 %43 to float, !dbg !33
  %45 = fcmp ogt float %41, %44, !dbg !25
  %46 = fcmp uno float %41, 0.000000e+00, !dbg !30
  %47 = or i1 %45, %46, !dbg !31
  %48 = select i1 %47, float %41, float %44, !dbg !32
  %49 = bitcast float %48 to i32, !dbg !33
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !33
  %51 = bitcast i32 %50 to float, !dbg !33
  %52 = fcmp ogt float %48, %51, !dbg !25
  %53 = fcmp uno float %48, 0.000000e+00, !dbg !30
  %54 = or i1 %52, %53, !dbg !31
  %55 = select i1 %54, float %48, float %51, !dbg !32
  %56 = fsub float %27, %55, !dbg !34
  %57 = fsub float %28, %55, !dbg !34
  %58 = fmul float %26, %24, !dbg !35
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float %58) #2, !dbg !36
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %57, float %58) #2, !dbg !36
  %61 = fmul float %59, 0x3FF7154760000000, !dbg !37
  %62 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %61) #2, !dbg !37
  %63 = fmul float %60, 0x3FF7154760000000, !dbg !37
  %64 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %63) #2, !dbg !37
  %65 = fadd float %62, %64, !dbg !38
  %66 = select i1 %11, float %65, float 0.000000e+00, !dbg !38
  %67 = bitcast float %66 to i32, !dbg !43
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 4, i32 31), !dbg !43
  %69 = bitcast i32 %68 to float, !dbg !43
  %70 = fadd float %66, %69, !dbg !38
  %71 = bitcast float %70 to i32, !dbg !43
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 2, i32 31), !dbg !43
  %73 = bitcast i32 %72 to float, !dbg !43
  %74 = fadd float %70, %73, !dbg !38
  %75 = bitcast float %74 to i32, !dbg !43
  %76 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %75, i32 1, i32 31), !dbg !43
  %77 = bitcast i32 %76 to float, !dbg !43
  %78 = fadd float %74, %77, !dbg !38
  %79 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float %78) #2, !dbg !44
  %80 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %64, float %78) #2, !dbg !44
  %81 = bitcast float %79 to i32, !dbg !45
  %82 = bitcast float %80 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %81, i32 %82, ptr addrspace(1) %17, i1 %11) #2, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py", directory: "inductor_cache/36")
!4 = !{ptr @triton_per_fused__softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_1", linkageName: "triton_per_fused__softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 42, scope: !7)
!17 = !DILocation(line: 31, column: 39, scope: !7)
!18 = !DILocation(line: 31, column: 34, scope: !7)
!19 = !DILocation(line: 31, column: 47, scope: !7)
!20 = !DILocation(line: 32, column: 19, scope: !7)
!21 = !DILocation(line: 35, column: 19, scope: !7)
!22 = !DILocation(line: 38, column: 32, scope: !7)
!23 = !DILocation(line: 39, column: 18, scope: !7)
!24 = !DILocation(line: 41, column: 34, scope: !7)
!25 = !DILocation(line: 118, column: 15, scope: !26, inlinedAt: !29)
!26 = distinct !DILexicalBlockFile(scope: !28, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!29 = !DILocation(line: 42, column: 39, scope: !7)
!30 = !DILocation(line: 120, column: 21, scope: !26, inlinedAt: !29)
!31 = !DILocation(line: 120, column: 16, scope: !26, inlinedAt: !29)
!32 = !DILocation(line: 121, column: 29, scope: !26, inlinedAt: !29)
!33 = !DILocation(line: 131, column: 29, scope: !28, inlinedAt: !29)
!34 = !DILocation(line: 43, column: 19, scope: !7)
!35 = !DILocation(line: 44, column: 19, scope: !7)
!36 = !DILocation(line: 45, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 24, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !42)
!39 = distinct !DILexicalBlockFile(scope: !41, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!41 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!42 = !DILocation(line: 49, column: 26, scope: !7)
!43 = !DILocation(line: 267, column: 36, scope: !41, inlinedAt: !42)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 48, scope: !7)
!46 = !DILocation(line: 51, column: 4, scope: !7)
