//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_convolution_native_layer_norm_12 // -- Begin function triton_red_fused_convolution_native_layer_norm_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_convolution_native_layer_norm_12
.visible .entry triton_red_fused_convolution_native_layer_norm_12(
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_12_param_6,
	.param .u32 triton_red_fused_convolution_native_layer_norm_12_param_7,
	.param .u32 triton_red_fused_convolution_native_layer_norm_12_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<41>;
	.reg .b32 	%r<111>;
	.reg .f32 	%f<70>;
	.reg .b64 	%rd<71>;
	.loc	1 19 0                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:19:0

// %bb.0:
	ld.param.u64 	%rd32, [triton_red_fused_convolution_native_layer_norm_12_param_5];
	ld.param.u64 	%rd31, [triton_red_fused_convolution_native_layer_norm_12_param_4];
	ld.param.u64 	%rd30, [triton_red_fused_convolution_native_layer_norm_12_param_3];
	ld.param.u64 	%rd29, [triton_red_fused_convolution_native_layer_norm_12_param_2];
	ld.param.u64 	%rd28, [triton_red_fused_convolution_native_layer_norm_12_param_1];
	ld.param.u64 	%rd27, [triton_red_fused_convolution_native_layer_norm_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:22:28
	// begin inline asm
	mov.u32 %r13, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:22:33
	shl.b32 	%r14, %r13, 6;
	.loc	1 23 44                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 2, 6;
	and.b32  	%r15, %r2, 3;
	and.b32  	%r4, %r2, 63;
	.loc	1 23 23                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:23:23
	or.b32  	%r5, %r14, %r3;
	or.b32  	%r6, %r14, %r4;
	.loc	1 24 21                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:24:21
	setp.lt.s32 	%p32, %r5, 256;
	.loc	1 31 21                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:31:21
	bfe.s32 	%r16, %r13, 25, 1;
	shr.u32 	%r17, %r16, 29;
	add.s32 	%r18, %r6, %r17;
	shr.s32 	%r19, %r18, 3;
	.loc	1 30 19                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:30:19
	and.b32  	%r20, %r18, -8;
	sub.s32 	%r7, %r6, %r20;
	.loc	1 31 26                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:31:26
	shr.u32 	%r21, %r19, 29;
	add.s32 	%r22, %r19, %r21;
	and.b32  	%r23, %r22, -8;
	sub.s32 	%r8, %r19, %r23;
	.loc	1 32 19                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:32:19
	shr.u32 	%r24, %r16, 26;
	add.s32 	%r25, %r6, %r24;
	shr.s32 	%r9, %r25, 6;
	.loc	1 37 47                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:47
	mul.lo.s32 	%r26, %r5, 192;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	cvt.u64.u32 	%rd1, %r15;
$L__tmp2:
	.loc	1 37 43                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:43
	or.b32  	%r27, %r15, %r26;
	.loc	1 37 38                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:38
	mul.wide.s32 	%rd34, %r27, 4;
	add.s64 	%rd2, %rd27, %rd34;
	mov.pred 	%p13, -1;
	mov.b32 	%r47, 0;
	@%p32 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %.split.us.peel.next
	.loc	1 0 38                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:0:38
	cvt.u32.u64 	%r51, %rd1;
	.loc	1 37 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:52
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p13 ld.global.L1::evict_first.b32 { %r46 }, [ %rd2 + 0 ];
	@!%p13 mov.u32 %r46, %r47;
	// end inline asm
	mov.b32 	%f22, %r46;
	.loc	1 38 34                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:34
	shl.b64 	%rd67, %rd1, 2;
$L__tmp3:
	.loc	2 178 7                         // triton_helpers.py:178:7
	add.s64 	%rd45, %rd67, %rd28;
$L__tmp4:
	.loc	1 38 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:39
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r48 }, [ %rd45 + 0 ];
	@!%p13 mov.u32 %r48, %r47;
	// end inline asm
	mov.b32 	%f23, %r48;
	.loc	1 39 22                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:39:22
	add.f32 	%f67, %f22, %f23;
	.loc	1 47 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:47:52
	mov.b32 	%r50, %f67;
	// begin inline asm
	@%p13 st.global.b32 [ %rd2 + 0 ], { %r50 };
	// end inline asm
$L__tmp5:
	.loc	2 178 7                         // triton_helpers.py:178:7
	add.s64 	%rd63, %rd45, 16;
	mul.lo.s32 	%r52, %r3, 192;
	mad.lo.s32 	%r53, %r13, 12288, %r52;
	or.b32  	%r110, %r53, %r51;
	or.b32  	%r54, %r110, 4;
	cvt.u64.u32 	%rd8, %r54;
	mov.f32 	%f68, 0f00000000;
	mov.f32 	%f69, 0f3F800000;
	mov.u64 	%rd64, 0;
$L__tmp6:
$L__BB0_4:                              // =>This Inner Loop Header: Depth=1
	.loc	1 37 38                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:38
	add.s64 	%rd51, %rd8, %rd64;
	cvt.u32.u64 	%r63, %rd51;
	mul.wide.s32 	%rd52, %r63, 4;
	add.s64 	%rd48, %rd27, %rd52;
	.loc	1 37 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:52
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p13 ld.global.L1::evict_first.b32 { %r55 }, [ %rd48 + 0 ];
	@!%p13 mov.u32 %r55, %r47;
	// end inline asm
	mov.b32 	%f24, %r55;
	.loc	1 38 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:39
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r57 }, [ %rd63 + 0 ];
	@!%p13 mov.u32 %r57, %r47;
	// end inline asm
	mov.b32 	%f25, %r57;
	.loc	1 39 22                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:39:22
	add.f32 	%f26, %f24, %f25;
$L__tmp7:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f27, %f26, %f67;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f69, %f69, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r60, %f27;
	mov.b32 	%r61, %f69;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f28, %r59;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f67, %f67, %f28;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f29, %f26, %f67;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f68, %f27, %f29, %f68;
$L__tmp8:
	.loc	1 47 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:47:52
	mov.b32 	%r62, %f26;
	// begin inline asm
	@%p13 st.global.b32 [ %rd48 + 0 ], { %r62 };
	// end inline asm
	.loc	1 33 36                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:33:36
	add.s64 	%rd64, %rd64, 4;
	add.s64 	%rd63, %rd63, 16;
	setp.lt.u64 	%p23, %rd64, 188;
	@%p23 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.split.peel.next
	.loc	1 0 36                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:0:36
	cvt.u32.u64 	%r33, %rd1;
	mov.pred 	%p6, 0;
	.loc	1 37 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:52
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p6 ld.global.L1::evict_first.b32 { %r28 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r28, %r47;
	// end inline asm
	.loc	1 38 34                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:34
	shl.b64 	%rd67, %rd1, 2;
$L__tmp9:
	.loc	2 178 7                         // triton_helpers.py:178:7
	add.s64 	%rd36, %rd67, %rd28;
$L__tmp10:
	.loc	1 38 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:39
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r30 }, [ %rd36 + 0 ];
	@!%p13 mov.u32 %r30, %r47;
	// end inline asm
	.loc	1 37 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:52
	mov.b32 	%f13, %r28;
	.loc	1 38 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:39
	mov.b32 	%f14, %r30;
	.loc	1 39 22                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:39:22
	add.f32 	%f15, %f13, %f14;
	.loc	1 47 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:47:52
	mov.b32 	%r32, %f15;
	// begin inline asm
	@%p6 st.global.b32 [ %rd2 + 0 ], { %r32 };
	// end inline asm
$L__tmp11:
	.loc	2 178 7                         // triton_helpers.py:178:7
	add.s64 	%rd65, %rd36, 16;
	mul.lo.s32 	%r34, %r3, 192;
	mad.lo.s32 	%r35, %r13, 12288, %r34;
	or.b32  	%r110, %r35, %r33;
	or.b32  	%r36, %r110, 4;
	cvt.u64.u32 	%rd5, %r36;
	mov.u64 	%rd66, 0;
	mov.f32 	%f67, 0f00000000;
$L__tmp12:
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 37 38                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:38
	add.s64 	%rd42, %rd5, %rd66;
	cvt.u32.u64 	%r45, %rd42;
	mul.wide.s32 	%rd43, %r45, 4;
	add.s64 	%rd39, %rd27, %rd43;
	.loc	1 37 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:37:52
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p6 ld.global.L1::evict_first.b32 { %r37 }, [ %rd39 + 0 ];
	@!%p6 mov.u32 %r37, %r47;
	// end inline asm
	mov.b32 	%f17, %r37;
	.loc	1 38 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:38:39
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r39 }, [ %rd65 + 0 ];
	@!%p13 mov.u32 %r39, %r47;
	// end inline asm
	mov.b32 	%f18, %r39;
	.loc	1 39 22                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:39:22
	add.f32 	%f19, %f17, %f18;
$L__tmp13:
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r44, %f19;
$L__tmp14:
	.loc	1 47 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:47:52
	// begin inline asm
	@%p6 st.global.b32 [ %rd39 + 0 ], { %r44 };
	// end inline asm
	.loc	1 33 36                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:33:36
	add.s64 	%rd66, %rd66, 4;
	add.s64 	%rd65, %rd65, 16;
	setp.lt.u64 	%p12, %rd66, 188;
	mov.f32 	%f68, %f67;
	mov.f32 	%f69, %f67;
	@%p12 bra 	$L__BB0_2;
$L__BB0_5:                              // %.split10.us
	.loc	1 0 36                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:0:36
	ld.param.u64 	%rd33, [triton_red_fused_convolution_native_layer_norm_12_param_6];
	.loc	1 24 21                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:24:21
	setp.lt.s32 	%p28, %r6, 256;
$L__tmp15:
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r82, %f67;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f30, %r83;
	mov.b32 	%r84, %f68;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f31, %r85;
	mov.b32 	%r86, %f69;
	shfl.sync.bfly.b32	%r65, %r86, 2, 31, -1;
	mov.b32 	%f32, %r65;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f33, %f30, %f67;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f34, %f69, %f32;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p29, %f34, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r66, %f34;
	// begin inline asm
	div.full.f32 %r64, %r65, %r66;
	// end inline asm
	mov.b32 	%f35, %r64;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f36, 0f00000000, %f35, %p29;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f37, %f33, %f36, %f67;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f38, %f68, %f31;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f39, %f33, %f33;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f40, %f69, %f39;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f41, %f40, %f36, %f38;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r87, %f37;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f42, %r88;
	mov.b32 	%r89, %f41;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	mov.b32 	%f43, %r90;
	shfl.sync.bfly.b32	%r68, %r66, 1, 31, -1;
	mov.b32 	%f44, %r68;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f45, %f42, %f37;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f46, %f34, %f44;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p30, %f46, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r69, %f46;
	// begin inline asm
	div.full.f32 %r67, %r68, %r69;
	// end inline asm
	mov.b32 	%f47, %r67;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f48, 0f00000000, %f47, %p30;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f11, %f45, %f48, %f37;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f49, %f41, %f43;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f50, %f45, %f45;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f51, %f34, %f50;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f52, %f48, %f51, %f49;
$L__tmp16:
	.loc	1 51 20                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:51:20
	shl.b32 	%r91, %r3, 2;
	mov.u32 	%r92, global_smem;
	add.s32 	%r70, %r92, %r91;
	mov.b32 	%r71, %f11;
	// begin inline asm
	@%p13 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r93, %r4, 2;
	add.s32 	%r94, %r92, %r93;
	ld.shared.u32 	%r74, [%r94];
	.loc	1 59 28                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:59:28
	bar.sync 	0;
	mov.b32 	%r73, %f52;
	// begin inline asm
	@%p13 st.shared.b32 [ %r70 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	.loc	1 54 32                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:32
	shl.b32 	%r95, %r7, 3;
	.loc	1 54 30                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:30
	add.s32 	%r96, %r8, %r95;
	.loc	1 54 40                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:40
	shl.b32 	%r97, %r9, 6;
	.loc	1 54 37                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:37
	add.s32 	%r98, %r96, %r97;
	.loc	1 54 25                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:25
	mul.wide.s32 	%rd56, %r98, 4;
	add.s64 	%rd53, %rd31, %rd56;
	.loc	1 54 51                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:51
	and.b32  	%r99, %r2, 192;
	setp.eq.s32 	%p31, %r99, 0;
	and.pred  	%p26, %p31, %p28;
	.loc	1 56 18                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:56:18
	ld.shared.u32 	%r76, [%r94];
	.loc	1 54 51                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:54:51
	// begin inline asm
	@%p26 st.global.b32 [ %rd53 + 0 ], { %r74 };
	// end inline asm
	mov.b32 	%r77, 1128267776;
	.loc	1 56 18                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:56:18
	// begin inline asm
	div.full.f32 %r75, %r76, %r77;
	// end inline asm
	mov.b32 	%f53, %r75;
	// begin inline asm
	div.full.f32 %r78, %r73, %r77;
	// end inline asm
	mov.b32 	%f54, %r78;
	.loc	1 58 19                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:58:19
	add.f32 	%f55, %f53, 0f358637BD;
	add.f32 	%f56, %f54, 0f358637BD;
	.loc	1 59 28                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:59:28
	rsqrt.approx.ftz.f32 	%f57, %f55;
	rsqrt.approx.ftz.f32 	%f12, %f56;
	.loc	1 60 25                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:60:25
	add.s64 	%rd54, %rd32, %rd56;
	.loc	1 60 52                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:60:52
	mov.b32 	%r81, %f57;
	// begin inline asm
	@%p26 st.global.b32 [ %rd54 + 0 ], { %r81 };
	// end inline asm
	.loc	1 61 36                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:61:36
	add.s64 	%rd69, %rd30, %rd67;
	add.s64 	%rd68, %rd29, %rd67;
	cvt.u64.u32 	%rd20, %r110;
	mov.u64 	%rd70, -4;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 65 39                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:65:39
	add.s64 	%rd61, %rd20, %rd70;
	cvt.u32.u64 	%r107, %rd61;
	add.s32 	%r108, %r107, 4;
	mul.wide.s32 	%rd62, %r108, 4;
	add.s64 	%rd57, %rd27, %rd62;
	.loc	1 65 53                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:65:53
	// begin inline asm
	mov.u32 %r100, 0x0;
	@%p32 ld.global.L1::evict_first.b32 { %r100 }, [ %rd57 + 0 ];
	@!%p32 mov.u32 %r100, %r47;
	// end inline asm
	mov.b32 	%f58, %r100;
	.loc	1 66 40                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:66:40
	// begin inline asm
	mov.u32 %r102, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r102 }, [ %rd68 + 0 ];
	@!%p13 mov.u32 %r102, %r47;
	// end inline asm
	mov.b32 	%f59, %r102;
	.loc	1 67 40                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:67:40
	// begin inline asm
	mov.u32 %r104, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r104 }, [ %rd69 + 0 ];
	@!%p13 mov.u32 %r104, %r47;
	// end inline asm
	mov.b32 	%f60, %r104;
	.loc	1 68 24                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:68:24
	sub.f32 	%f61, %f58, %f11;
	.loc	1 69 24                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:69:24
	mul.f32 	%f62, %f12, %f61;
	.loc	1 71 24                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:71:24
	fma.rn.f32 	%f63, %f62, %f59, %f60;
	.loc	1 72 29                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:72:29
	add.s64 	%rd60, %rd33, %rd62;
	.loc	1 72 50                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:72:50
	mov.b32 	%r106, %f63;
	// begin inline asm
	@%p32 st.global.b32 [ %rd60 + 0 ], { %r106 };
	// end inline asm
	.loc	1 61 36                         // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:61:36
	add.s64 	%rd70, %rd70, 4;
	add.s64 	%rd69, %rd69, 16;
	add.s64 	%rd68, %rd68, 16;
	setp.lt.u64 	%p39, %rd70, 188;
	@%p39 bra 	$L__BB0_6;
// %bb.7:
	.loc	1 61 4                          // c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py:61:4
	ret;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5n/c5ngepos6tyhoegx4agldkkaxh3ozy7ih6x7xbladud4npqoheos.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 110
.b8 103
.b8 101
.b8 112
.b8 111
.b8 115
.b8 54
.b8 116
.b8 121
.b8 104
.b8 111
.b8 101
.b8 103
.b8 120
.b8 52
.b8 97
.b8 103
.b8 108
.b8 100
.b8 107
.b8 107
.b8 97
.b8 120
.b8 104
.b8 51
.b8 111
.b8 122
.b8 121
.b8 55
.b8 105
.b8 104
.b8 54
.b8 120
.b8 55
.b8 120
.b8 98
.b8 108
.b8 97
.b8 100
.b8 117
.b8 100
.b8 52
.b8 110
.b8 112
.b8 113
.b8 111
.b8 104
.b8 101
.b8 111
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x34 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 51                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp15                          // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
