#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [16, 2], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#loc = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0), %arg4: i32 loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<16x64xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<16x64xi8, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<768> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<768> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<768> : tensor<1x64xi32, #blocked2> loc(#loc1)
    %cst_11 = arith.constant dense<9> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<9> : tensor<16x1xi32, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<9> : tensor<16x1xi32, #blocked2> loc(#loc1)
    %cst_14 = arith.constant dense<3> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<192> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_16 = arith.constant dense<192> : tensor<1x64xi32, #blocked2> loc(#loc1)
    %cst_17 = arith.constant dense<2> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<14> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<49> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<1> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<7> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<8> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<15> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<16> : tensor<16x1xi32, #blocked> loc(#loc1)
    %cst_25 = arith.constant dense<1728> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_26 = arith.constant dense<1728> : tensor<1x64xi32, #blocked2> loc(#loc1)
    %cst_27 = arith.constant dense<192> : tensor<16x1xi32, #blocked1> loc(#loc1)
    %cst_28 = arith.constant dense<192> : tensor<16x1xi32, #blocked2> loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> loc(#loc4)
    %5 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc4)
    %6 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc4)
    %7 = tt.expand_dims %4 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x64xi32, #blocked2> loc(#loc4)
    %8 = tt.splat %1 : i32 -> tensor<1x64xi32, #blocked> loc(#loc5)
    %9 = tt.splat %1 : i32 -> tensor<1x64xi32, #blocked1> loc(#loc5)
    %10 = tt.splat %1 : i32 -> tensor<1x64xi32, #blocked2> loc(#loc5)
    %11 = arith.addi %8, %5 : tensor<1x64xi32, #blocked> loc(#loc5)
    %12 = arith.addi %9, %6 : tensor<1x64xi32, #blocked1> loc(#loc5)
    %13 = arith.addi %10, %7 : tensor<1x64xi32, #blocked2> loc(#loc5)
    %14 = arith.cmpi slt, %11, %cst_8 : tensor<1x64xi32, #blocked> loc(#loc6)
    %15 = arith.cmpi slt, %12, %cst_9 : tensor<1x64xi32, #blocked1> loc(#loc6)
    %16 = arith.cmpi slt, %13, %cst_10 : tensor<1x64xi32, #blocked2> loc(#loc6)
    %17 = tt.get_program_id x : i32 loc(#loc7)
    %18 = arith.muli %17, %c16_i32 : i32 loc(#loc8)
    %19 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc9)
    %20 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc9)
    %21 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc9)
    %22 = tt.expand_dims %19 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi32, #blocked> loc(#loc9)
    %23 = tt.expand_dims %20 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1xi32, #blocked1> loc(#loc9)
    %24 = tt.expand_dims %21 {axis = 1 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<16x1xi32, #blocked2> loc(#loc9)
    %25 = tt.splat %18 : i32 -> tensor<16x1xi32, #blocked> loc(#loc10)
    %26 = tt.splat %18 : i32 -> tensor<16x1xi32, #blocked1> loc(#loc10)
    %27 = tt.splat %18 : i32 -> tensor<16x1xi32, #blocked2> loc(#loc10)
    %28 = arith.addi %25, %22 : tensor<16x1xi32, #blocked> loc(#loc10)
    %29 = arith.addi %26, %23 : tensor<16x1xi32, #blocked1> loc(#loc10)
    %30 = arith.addi %27, %24 : tensor<16x1xi32, #blocked2> loc(#loc10)
    %31 = arith.cmpi slt, %28, %cst_11 : tensor<16x1xi32, #blocked> loc(#loc11)
    %32 = arith.cmpi slt, %29, %cst_12 : tensor<16x1xi32, #blocked1> loc(#loc11)
    %33 = arith.cmpi slt, %30, %cst_13 : tensor<16x1xi32, #blocked2> loc(#loc11)
    %34 = arith.remsi %28, %cst_14 : tensor<16x1xi32, #blocked> loc(#loc12)
    %35 = arith.divsi %28, %cst_14 : tensor<16x1xi32, #blocked> loc(#loc13)
    %36 = arith.remsi %12, %cst_15 : tensor<1x64xi32, #blocked1> loc(#loc14)
    %37 = arith.remsi %13, %cst_16 : tensor<1x64xi32, #blocked2> loc(#loc14)
    %38 = arith.divsi %12, %cst_15 : tensor<1x64xi32, #blocked1> loc(#loc15)
    %39 = arith.divsi %13, %cst_16 : tensor<1x64xi32, #blocked2> loc(#loc15)
    %40 = arith.muli %34, %cst_17 : tensor<16x1xi32, #blocked> loc(#loc16)
    %41 = arith.muli %35, %cst_18 : tensor<16x1xi32, #blocked> loc(#loc17)
    %42 = arith.addi %40, %41 : tensor<16x1xi32, #blocked> loc(#loc18)
    %43 = arith.muli %11, %cst_19 : tensor<1x64xi32, #blocked> loc(#loc19)
    %44 = tt.broadcast %42 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc20)
    %45 = tt.broadcast %43 : tensor<1x64xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc20)
    %46 = arith.addi %44, %45 : tensor<16x64xi32, #blocked> loc(#loc20)
    %47 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc21)
    %48 = tt.addptr %47, %46 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc21)
    %49 = tt.broadcast %31 : tensor<16x1xi1, #blocked> -> tensor<16x64xi1, #blocked> loc(#loc22)
    %50 = tt.broadcast %32 : tensor<16x1xi1, #blocked1> -> tensor<16x64xi1, #blocked1> loc(#loc22)
    %51 = tt.broadcast %33 : tensor<16x1xi1, #blocked2> -> tensor<16x64xi1, #blocked2> loc(#loc22)
    %52 = tt.broadcast %14 : tensor<1x64xi1, #blocked> -> tensor<16x64xi1, #blocked> loc(#loc22)
    %53 = tt.broadcast %15 : tensor<1x64xi1, #blocked1> -> tensor<16x64xi1, #blocked1> loc(#loc22)
    %54 = tt.broadcast %16 : tensor<1x64xi1, #blocked2> -> tensor<16x64xi1, #blocked2> loc(#loc22)
    %55 = arith.andi %49, %52 : tensor<16x64xi1, #blocked> loc(#loc22)
    %56 = arith.andi %50, %53 : tensor<16x64xi1, #blocked1> loc(#loc22)
    %57 = arith.andi %51, %54 : tensor<16x64xi1, #blocked2> loc(#loc22)
    %58 = tt.load %48, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc23)
    %59 = arith.addi %40, %cst_20 : tensor<16x1xi32, #blocked> loc(#loc24)
    %60 = arith.addi %59, %41 : tensor<16x1xi32, #blocked> loc(#loc25)
    %61 = tt.broadcast %60 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc26)
    %62 = arith.addi %61, %45 : tensor<16x64xi32, #blocked> loc(#loc26)
    %63 = tt.addptr %47, %62 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc27)
    %64 = tt.load %63, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc28)
    %65 = arith.addi %40, %cst_17 : tensor<16x1xi32, #blocked> loc(#loc29)
    %66 = arith.addi %65, %41 : tensor<16x1xi32, #blocked> loc(#loc30)
    %67 = tt.broadcast %66 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc31)
    %68 = arith.addi %67, %45 : tensor<16x64xi32, #blocked> loc(#loc31)
    %69 = tt.addptr %47, %68 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc32)
    %70 = tt.load %69, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc33)
    %71 = arith.addi %40, %cst_21 : tensor<16x1xi32, #blocked> loc(#loc34)
    %72 = arith.addi %71, %41 : tensor<16x1xi32, #blocked> loc(#loc35)
    %73 = tt.broadcast %72 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc36)
    %74 = arith.addi %73, %45 : tensor<16x64xi32, #blocked> loc(#loc36)
    %75 = tt.addptr %47, %74 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc37)
    %76 = tt.load %75, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc38)
    %77 = arith.addi %40, %cst_22 : tensor<16x1xi32, #blocked> loc(#loc39)
    %78 = arith.addi %77, %41 : tensor<16x1xi32, #blocked> loc(#loc40)
    %79 = tt.broadcast %78 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc41)
    %80 = arith.addi %79, %45 : tensor<16x64xi32, #blocked> loc(#loc41)
    %81 = tt.addptr %47, %80 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc42)
    %82 = tt.load %81, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc43)
    %83 = arith.addi %40, %cst_11 : tensor<16x1xi32, #blocked> loc(#loc44)
    %84 = arith.addi %83, %41 : tensor<16x1xi32, #blocked> loc(#loc45)
    %85 = tt.broadcast %84 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc46)
    %86 = arith.addi %85, %45 : tensor<16x64xi32, #blocked> loc(#loc46)
    %87 = tt.addptr %47, %86 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc47)
    %88 = tt.load %87, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc48)
    %89 = arith.addi %40, %cst_18 : tensor<16x1xi32, #blocked> loc(#loc49)
    %90 = arith.addi %89, %41 : tensor<16x1xi32, #blocked> loc(#loc50)
    %91 = tt.broadcast %90 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc51)
    %92 = arith.addi %91, %45 : tensor<16x64xi32, #blocked> loc(#loc51)
    %93 = tt.addptr %47, %92 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc52)
    %94 = tt.load %93, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc53)
    %95 = arith.addi %40, %cst_23 : tensor<16x1xi32, #blocked> loc(#loc54)
    %96 = arith.addi %95, %41 : tensor<16x1xi32, #blocked> loc(#loc55)
    %97 = tt.broadcast %96 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc56)
    %98 = arith.addi %97, %45 : tensor<16x64xi32, #blocked> loc(#loc56)
    %99 = tt.addptr %47, %98 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc57)
    %100 = tt.load %99, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc58)
    %101 = arith.addi %40, %cst_24 : tensor<16x1xi32, #blocked> loc(#loc59)
    %102 = arith.addi %101, %41 : tensor<16x1xi32, #blocked> loc(#loc60)
    %103 = tt.broadcast %102 : tensor<16x1xi32, #blocked> -> tensor<16x64xi32, #blocked> loc(#loc61)
    %104 = arith.addi %103, %45 : tensor<16x64xi32, #blocked> loc(#loc61)
    %105 = tt.addptr %47, %104 : tensor<16x64x!tt.ptr<f32>, #blocked>, tensor<16x64xi32, #blocked> loc(#loc62)
    %106 = tt.load %105, %55 evictionPolicy = evict_last : tensor<16x64x!tt.ptr<f32>, #blocked> loc(#loc63)
    %107 = arith.cmpf ogt, %64, %58 : tensor<16x64xf32, #blocked> loc(#loc93)
    %108 = arith.cmpf une, %64, %64 : tensor<16x64xf32, #blocked> loc(#loc94)
    %109 = arith.ori %107, %108 : tensor<16x64xi1, #blocked> loc(#loc95)
    %110 = arith.select %109, %64, %58 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc96)
    %111 = arith.cmpf ogt, %70, %110 : tensor<16x64xf32, #blocked> loc(#loc97)
    %112 = arith.cmpf une, %70, %70 : tensor<16x64xf32, #blocked> loc(#loc98)
    %113 = arith.ori %111, %112 : tensor<16x64xi1, #blocked> loc(#loc99)
    %114 = arith.select %113, %70, %110 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc100)
    %115 = arith.cmpf ogt, %76, %114 : tensor<16x64xf32, #blocked> loc(#loc101)
    %116 = arith.cmpf une, %76, %76 : tensor<16x64xf32, #blocked> loc(#loc102)
    %117 = arith.ori %115, %116 : tensor<16x64xi1, #blocked> loc(#loc103)
    %118 = arith.select %117, %76, %114 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc104)
    %119 = arith.cmpf ogt, %82, %118 : tensor<16x64xf32, #blocked> loc(#loc105)
    %120 = arith.cmpf une, %82, %82 : tensor<16x64xf32, #blocked> loc(#loc106)
    %121 = arith.ori %119, %120 : tensor<16x64xi1, #blocked> loc(#loc107)
    %122 = arith.select %121, %82, %118 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc108)
    %123 = arith.cmpf ogt, %88, %122 : tensor<16x64xf32, #blocked> loc(#loc109)
    %124 = arith.cmpf une, %88, %88 : tensor<16x64xf32, #blocked> loc(#loc110)
    %125 = arith.ori %123, %124 : tensor<16x64xi1, #blocked> loc(#loc111)
    %126 = arith.select %125, %88, %122 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc112)
    %127 = arith.cmpf ogt, %94, %126 : tensor<16x64xf32, #blocked> loc(#loc113)
    %128 = arith.cmpf une, %94, %94 : tensor<16x64xf32, #blocked> loc(#loc114)
    %129 = arith.ori %127, %128 : tensor<16x64xi1, #blocked> loc(#loc115)
    %130 = arith.select %129, %94, %126 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc116)
    %131 = arith.cmpf ogt, %100, %130 : tensor<16x64xf32, #blocked> loc(#loc117)
    %132 = arith.cmpf une, %100, %100 : tensor<16x64xf32, #blocked> loc(#loc118)
    %133 = arith.ori %131, %132 : tensor<16x64xi1, #blocked> loc(#loc119)
    %134 = arith.select %133, %100, %130 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc120)
    %135 = arith.cmpf ogt, %106, %134 : tensor<16x64xf32, #blocked> loc(#loc121)
    %136 = arith.cmpf une, %106, %106 : tensor<16x64xf32, #blocked> loc(#loc122)
    %137 = arith.ori %135, %136 : tensor<16x64xi1, #blocked> loc(#loc123)
    %138 = arith.select %137, %106, %134 : tensor<16x64xi1, #blocked>, tensor<16x64xf32, #blocked> loc(#loc124)
    %139 = arith.select %107, %cst, %cst_0 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc76)
    %140 = arith.select %111, %cst_1, %139 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc77)
    %141 = arith.select %115, %cst_2, %140 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc78)
    %142 = arith.select %119, %cst_3, %141 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc79)
    %143 = arith.select %123, %cst_4, %142 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc80)
    %144 = arith.select %127, %cst_5, %143 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc81)
    %145 = arith.select %131, %cst_6, %144 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc82)
    %146 = arith.select %135, %cst_7, %145 : tensor<16x64xi1, #blocked>, tensor<16x64xi8, #blocked> loc(#loc83)
    %147 = arith.muli %29, %cst_27 : tensor<16x1xi32, #blocked1> loc(#loc84)
    %148 = arith.muli %30, %cst_28 : tensor<16x1xi32, #blocked2> loc(#loc84)
    %149 = tt.broadcast %36 : tensor<1x64xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc85)
    %150 = tt.broadcast %37 : tensor<1x64xi32, #blocked2> -> tensor<16x64xi32, #blocked2> loc(#loc85)
    %151 = tt.broadcast %147 : tensor<16x1xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc85)
    %152 = tt.broadcast %148 : tensor<16x1xi32, #blocked2> -> tensor<16x64xi32, #blocked2> loc(#loc85)
    %153 = arith.addi %149, %151 : tensor<16x64xi32, #blocked1> loc(#loc85)
    %154 = arith.addi %150, %152 : tensor<16x64xi32, #blocked2> loc(#loc85)
    %155 = arith.muli %38, %cst_25 : tensor<1x64xi32, #blocked1> loc(#loc86)
    %156 = arith.muli %39, %cst_26 : tensor<1x64xi32, #blocked2> loc(#loc86)
    %157 = tt.broadcast %155 : tensor<1x64xi32, #blocked1> -> tensor<16x64xi32, #blocked1> loc(#loc87)
    %158 = tt.broadcast %156 : tensor<1x64xi32, #blocked2> -> tensor<16x64xi32, #blocked2> loc(#loc87)
    %159 = arith.addi %153, %157 : tensor<16x64xi32, #blocked1> loc(#loc87)
    %160 = arith.addi %154, %158 : tensor<16x64xi32, #blocked2> loc(#loc87)
    %161 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x64x!tt.ptr<f32>, #blocked1> loc(#loc88)
    %162 = tt.addptr %161, %159 : tensor<16x64x!tt.ptr<f32>, #blocked1>, tensor<16x64xi32, #blocked1> loc(#loc88)
    %163 = triton_gpu.convert_layout %138 : tensor<16x64xf32, #blocked> -> tensor<16x64xf32, #blocked1> loc(#loc89)
    tt.store %162, %163, %56 : tensor<16x64x!tt.ptr<f32>, #blocked1> loc(#loc89)
    %164 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<16x64x!tt.ptr<i8>, #blocked2> loc(#loc90)
    %165 = tt.addptr %164, %160 : tensor<16x64x!tt.ptr<i8>, #blocked2>, tensor<16x64xi32, #blocked2> loc(#loc90)
    %166 = triton_gpu.convert_layout %146 : tensor<16x64xi8, #blocked> -> tensor<16x64xi8, #blocked2> loc(#loc91)
    tt.store %165, %166, %57 : tensor<16x64x!tt.ptr<i8>, #blocked2> loc(#loc91)
    tt.return loc(#loc92)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":22:28)
#loc3 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":22:33)
#loc4 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":23:44)
#loc5 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":23:23)
#loc6 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":24:21)
#loc7 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":25:28)
#loc8 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":25:33)
#loc9 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":26:44)
#loc10 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":26:23)
#loc11 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":27:21)
#loc12 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":28:19)
#loc13 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":29:19)
#loc14 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":32:19)
#loc15 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":33:19)
#loc16 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:32)
#loc17 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:40)
#loc18 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:37)
#loc19 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:48)
#loc20 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:45)
#loc21 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:30)
#loc22 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:61)
#loc23 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":34:53)
#loc24 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":35:34)
#loc25 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":35:41)
#loc26 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":35:49)
#loc27 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":35:30)
#loc28 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":35:57)
#loc29 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":36:34)
#loc30 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":36:41)
#loc31 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":36:49)
#loc32 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":36:30)
#loc33 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":36:57)
#loc34 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":37:34)
#loc35 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":37:41)
#loc36 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":37:49)
#loc37 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":37:30)
#loc38 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":37:57)
#loc39 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":38:34)
#loc40 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":38:41)
#loc41 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":38:49)
#loc42 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":38:30)
#loc43 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":38:57)
#loc44 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":39:34)
#loc45 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":39:41)
#loc46 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":39:49)
#loc47 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":39:30)
#loc48 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":39:57)
#loc49 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":40:36)
#loc50 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":40:43)
#loc51 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":40:51)
#loc52 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":40:31)
#loc53 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":40:59)
#loc54 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":41:36)
#loc55 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":41:43)
#loc56 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":41:51)
#loc57 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":41:31)
#loc58 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":41:59)
#loc59 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":42:36)
#loc60 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":42:43)
#loc61 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":42:51)
#loc62 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":42:31)
#loc63 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":42:59)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc65 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":43:40)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc69 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":44:40)
#loc70 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":45:40)
#loc71 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":46:40)
#loc72 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":47:41)
#loc73 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":48:42)
#loc74 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":49:42)
#loc75 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":50:42)
#loc76 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":54:35)
#loc77 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":57:35)
#loc78 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":60:35)
#loc79 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":63:35)
#loc80 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":66:35)
#loc81 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":69:35)
#loc82 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":72:35)
#loc83 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":75:35)
#loc84 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:34)
#loc85 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:30)
#loc86 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:44)
#loc87 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:39)
#loc88 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:25)
#loc89 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":76:56)
#loc90 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":77:25)
#loc91 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":77:56)
#loc92 = loc("inductor_cache/gi/cgiyd7flvdx64uxfrnhq62benwgftlzxpcp7bzhus5wnf2hhmka6.py":77:4)
#loc93 = loc(callsite(#loc64 at #loc65))
#loc94 = loc(callsite(#loc66 at #loc65))
#loc95 = loc(callsite(#loc67 at #loc65))
#loc96 = loc(callsite(#loc68 at #loc65))
#loc97 = loc(callsite(#loc64 at #loc69))
#loc98 = loc(callsite(#loc66 at #loc69))
#loc99 = loc(callsite(#loc67 at #loc69))
#loc100 = loc(callsite(#loc68 at #loc69))
#loc101 = loc(callsite(#loc64 at #loc70))
#loc102 = loc(callsite(#loc66 at #loc70))
#loc103 = loc(callsite(#loc67 at #loc70))
#loc104 = loc(callsite(#loc68 at #loc70))
#loc105 = loc(callsite(#loc64 at #loc71))
#loc106 = loc(callsite(#loc66 at #loc71))
#loc107 = loc(callsite(#loc67 at #loc71))
#loc108 = loc(callsite(#loc68 at #loc71))
#loc109 = loc(callsite(#loc64 at #loc72))
#loc110 = loc(callsite(#loc66 at #loc72))
#loc111 = loc(callsite(#loc67 at #loc72))
#loc112 = loc(callsite(#loc68 at #loc72))
#loc113 = loc(callsite(#loc64 at #loc73))
#loc114 = loc(callsite(#loc66 at #loc73))
#loc115 = loc(callsite(#loc67 at #loc73))
#loc116 = loc(callsite(#loc68 at #loc73))
#loc117 = loc(callsite(#loc64 at #loc74))
#loc118 = loc(callsite(#loc66 at #loc74))
#loc119 = loc(callsite(#loc67 at #loc74))
#loc120 = loc(callsite(#loc68 at #loc74))
#loc121 = loc(callsite(#loc64 at #loc75))
#loc122 = loc(callsite(#loc66 at #loc75))
#loc123 = loc(callsite(#loc67 at #loc75))
#loc124 = loc(callsite(#loc68 at #loc75))
