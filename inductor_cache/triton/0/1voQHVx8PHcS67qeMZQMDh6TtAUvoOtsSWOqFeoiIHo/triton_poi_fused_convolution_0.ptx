//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_0 // -- Begin function triton_poi_fused_convolution_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_0
.visible .entry triton_poi_fused_convolution_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_0_param_1,
	.param .u32 triton_poi_fused_convolution_0_param_2,
	.param .u32 triton_poi_fused_convolution_0_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_convolution_0_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_convolution_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:22:33
	shl.b32 	%r11, %r1, 4;
	.loc	1 23 44                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:23:44
	mov.u32 	%r12, %tid.x;
	shl.b32 	%r13, %r12, 1;
	and.b32  	%r14, %r13, 2;
	and.b32  	%r15, %r13, 14;
	bfe.u32 	%r16, %r12, 1, 4;
	.loc	1 23 23                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:23:23
	or.b32  	%r17, %r11, %r15;
	or.b32  	%r18, %r11, %r16;
	.loc	1 24 21                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:24:21
	setp.lt.s32 	%p5, %r17, 16;
	setp.lt.s32 	%p6, %r18, 16;
	.loc	1 25 28                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:25:33
	shl.b32 	%r19, %r2, 2;
	.loc	1 26 44                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:26:44
	bfe.u32 	%r20, %r12, 3, 2;
	.loc	1 26 23                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:26:23
	or.b32  	%r21, %r19, %r20;
	or.b32  	%r22, %r19, %r14;
	.loc	1 27 21                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:27:21
	setp.lt.s32 	%p7, %r21, 4;
	setp.lt.s32 	%p8, %r22, 4;
	.loc	1 30 38                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:30:38
	shl.b32 	%r23, %r21, 4;
	.loc	1 30 35                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:30:35
	add.s32 	%r24, %r23, %r17;
	.loc	1 30 30                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:30:30
	mul.wide.s32 	%rd5, %r24, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 30 51                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:30:51
	and.pred  	%p1, %p5, %p7;
	and.pred  	%p4, %p6, %p8;
	.loc	1 30 43                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:30:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 31 32                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:31:32
	shl.b32 	%r25, %r18, 2;
	.loc	1 31 30                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:31:30
	add.s32 	%r26, %r22, %r25;
	.loc	1 31 25                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:31:25
	mul.wide.s32 	%rd6, %r26, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 31 43                         // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:31:43
	shl.b32 	%r27, %r12, 3;
	and.b32  	%r28, %r27, 56;
	or.b32  	%r29, %r28, %r20;
	and.b32  	%r30, %r13, 62;
	shr.u32 	%r31, %r28, 2;
	add.s32 	%r32, %r31, %r29;
	shl.b32 	%r33, %r32, 2;
	mov.u32 	%r34, global_smem;
	add.s32 	%r5, %r34, %r33;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	or.b32  	%r35, %r28, 4;
	shr.u32 	%r36, %r35, 2;
	add.s32 	%r37, %r36, %r29;
	shl.b32 	%r38, %r37, 2;
	add.s32 	%r39, %r34, %r38;
	add.s32 	%r7, %r39, 16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r40, %r13, 2, 4;
	add.s32 	%r41, %r40, %r30;
	shl.b32 	%r42, %r41, 2;
	add.s32 	%r43, %r34, %r42;
	ld.shared.u32 	%r9, [%r43];
	ld.shared.u32 	%r10, [%r43+4];
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd2 + 0 ], { %r9, %r10 };
	// end inline asm
	.loc	1 31 4                          // coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py:31:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/oz/coztrag7ajtf3pqzwr635t7qwxfgxgj3thbyup2augjzibfy3a5h.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 122
.b8 116
.b8 114
.b8 97
.b8 103
.b8 55
.b8 97
.b8 106
.b8 116
.b8 102
.b8 51
.b8 112
.b8 113
.b8 122
.b8 119
.b8 114
.b8 54
.b8 51
.b8 53
.b8 116
.b8 55
.b8 113
.b8 119
.b8 120
.b8 102
.b8 103
.b8 120
.b8 103
.b8 106
.b8 51
.b8 116
.b8 104
.b8 98
.b8 121
.b8 117
.b8 112
.b8 50
.b8 97
.b8 117
.b8 103
.b8 106
.b8 122
.b8 105
.b8 98
.b8 102
.b8 121
.b8 51
.b8 97
.b8 53
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
