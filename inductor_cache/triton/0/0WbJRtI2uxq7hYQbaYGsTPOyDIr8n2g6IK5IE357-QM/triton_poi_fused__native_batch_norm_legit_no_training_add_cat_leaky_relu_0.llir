; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_leaky_relu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %16 = icmp slt i32 %15, 256, !dbg !14
  %.frozen = freeze i32 %15, !dbg !15
  %17 = sdiv i32 %.frozen, 16, !dbg !15
  %18 = srem i32 %17, 4, !dbg !16
  %19 = mul i32 %17, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %.frozen1 = freeze i32 %15, !dbg !18
  %20 = sdiv i32 %.frozen1, 64, !dbg !18
  %21 = sext i32 %18 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %3, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %16) #3, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %4, i64 %21, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %16) #3, !dbg !22
  %26 = bitcast i32 %25 to float, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %5, i64 %21, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %16) #3, !dbg !24
  %29 = getelementptr float, ptr addrspace(1) %6, i64 %21, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %16) #3, !dbg !26
  %31 = sext i32 %15 to i64, !dbg !27
  %32 = getelementptr float, ptr addrspace(1) %7, i64 %31, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #3, !dbg !28
  %34 = icmp slt i32 %18, 2, !dbg !29
  %35 = mul i32 %20, 64, !dbg !30
  %srem.decomposed = sub i32 %.frozen1, %35, !dbg !30
  %36 = shl nsw i32 %20, 5, !dbg !31
  %37 = add nsw i32 %36, %srem.decomposed, !dbg !32
  %38 = sext i32 %37 to i64, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !33
  %40 = and i1 %16, %34, !dbg !34
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40) #3, !dbg !35
  %42 = icmp sgt i32 %18, 1, !dbg !36
  %43 = shl nsw i32 %18, 4, !dbg !37
  %44 = add nsw i32 %.decomposed, -32, !dbg !37
  %45 = add nsw i32 %44, %36, !dbg !38
  %46 = add nsw i32 %45, %43, !dbg !39
  %47 = sext i32 %46 to i64, !dbg !40
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !40
  %49 = and i1 %16, %42, !dbg !41
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %49, i32 0, i1 %49) #3, !dbg !42
  %51 = fadd float %26, 0x3EE4F8B580000000, !dbg !43
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !44
  %.not.i = icmp eq i32 %52, 0, !dbg !44
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !44
  %.not1.i = icmp eq i32 %53, 0, !dbg !44
  br i1 %.not.i, label %59, label %54, !dbg !44

54:                                               ; preds = %10
  br i1 %.not1.i, label %57, label %55, !dbg !44

55:                                               ; preds = %54
  %56 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %51) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

57:                                               ; preds = %54
  %58 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %51) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

59:                                               ; preds = %10
  br i1 %.not1.i, label %62, label %60, !dbg !44

60:                                               ; preds = %59
  %61 = tail call float @llvm.nvvm.sqrt.rn.f(float %51) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

62:                                               ; preds = %59
  %63 = tail call float @llvm.nvvm.sqrt.approx.f(float %51) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

__nv_sqrtf.exit:                                  ; preds = %55, %57, %60, %62
  %.0.i = phi float [ %56, %55 ], [ %58, %57 ], [ %61, %60 ], [ %63, %62 ], !dbg !44
  %.v = select i1 %34, i32 %41, i32 %50, !dbg !45
  %64 = bitcast i32 %.v to float, !dbg !45
  %65 = bitcast i32 %23 to float, !dbg !20
  %66 = fsub float %64, %65, !dbg !46
  %67 = bitcast i32 %33 to float, !dbg !28
  %68 = bitcast i32 %30 to float, !dbg !26
  %69 = bitcast i32 %28 to float, !dbg !24
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !47
  %71 = fmul float %66, %70, !dbg !48
  %72 = fmul float %71, %69, !dbg !49
  %73 = fadd float %72, %68, !dbg !50
  %74 = fcmp ogt float %73, 0.000000e+00, !dbg !51
  %75 = fmul float %73, 0x3FB99999A0000000, !dbg !52
  %76 = select i1 %74, float %73, float %75, !dbg !53
  %77 = fadd float %76, %67, !dbg !54
  %78 = getelementptr float, ptr addrspace(1) %8, i64 %31, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v, ptr addrspace(1) %78, i1 %16) #3, !dbg !56
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !57
  %80 = bitcast float %77 to i32, !dbg !58
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %80, ptr addrspace(1) %79, i1 %16) #3, !dbg !58
  ret void, !dbg !59
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnqtw3dbnshwoioadb2qqb2vs6ghzywpmfxo254vsgnokpo5dft4.py", directory: "inductor_cache/nq")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_leaky_relu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_leaky_relu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_cat_leaky_relu_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_cat_leaky_relu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 37, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 35, scope: !7)
!31 = !DILocation(line: 38, column: 48, scope: !7)
!32 = !DILocation(line: 38, column: 45, scope: !7)
!33 = !DILocation(line: 38, column: 30, scope: !7)
!34 = !DILocation(line: 38, column: 60, scope: !7)
!35 = !DILocation(line: 38, column: 53, scope: !7)
!36 = !DILocation(line: 39, column: 19, scope: !7)
!37 = !DILocation(line: 42, column: 39, scope: !7)
!38 = !DILocation(line: 42, column: 35, scope: !7)
!39 = !DILocation(line: 42, column: 52, scope: !7)
!40 = !DILocation(line: 42, column: 30, scope: !7)
!41 = !DILocation(line: 42, column: 67, scope: !7)
!42 = !DILocation(line: 42, column: 60, scope: !7)
!43 = !DILocation(line: 46, column: 20, scope: !7)
!44 = !DILocation(line: 47, column: 27, scope: !7)
!45 = !DILocation(line: 43, column: 33, scope: !7)
!46 = !DILocation(line: 44, column: 20, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 20, scope: !7)
!49 = !DILocation(line: 53, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 59, column: 35, scope: !7)
!54 = !DILocation(line: 60, column: 20, scope: !7)
!55 = !DILocation(line: 61, column: 25, scope: !7)
!56 = !DILocation(line: 61, column: 37, scope: !7)
!57 = !DILocation(line: 62, column: 28, scope: !7)
!58 = !DILocation(line: 62, column: 40, scope: !7)
!59 = !DILocation(line: 62, column: 4, scope: !7)
