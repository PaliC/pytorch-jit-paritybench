; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_max_pool2d_with_indices_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 32, !dbg !14
  %13 = mul i32 %12, 32, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = srem i32 %11, 32, !dbg !15
  %.frozen2 = freeze i32 %10, !dbg !16
  %15 = sdiv i32 %.frozen2, 1024, !dbg !16
  %16 = srem i32 %15, 128, !dbg !17
  %17 = sdiv i32 %10, 131072, !dbg !18
  %.lhs.trunc = trunc nsw i32 %17 to i16, !dbg !19
  %18 = srem i16 %.lhs.trunc, 2, !dbg !19
  %.sext = sext i16 %18 to i32, !dbg !19
  %19 = sdiv i32 %10, 262144, !dbg !20
  %20 = mul i32 %15, 1024, !dbg !21
  %.decomposed3 = sub i32 %.frozen2, %20, !dbg !21
  %21 = shl nsw i32 %.decomposed, 1, !dbg !22
  %22 = shl nsw i32 %14, 1, !dbg !22
  %23 = shl i32 %12, 7, !dbg !23
  %24 = add i32 %21, %23, !dbg !24
  %25 = add i32 %23, %22, !dbg !24
  %26 = sext i32 %24 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = sext i32 %25 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !26
  %32 = or disjoint i32 %24, 1, !dbg !27
  %33 = or disjoint i32 %25, 1, !dbg !27
  %34 = sext i32 %32 to i64, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !28
  %36 = sext i32 %33 to i64, !dbg !28
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !29
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !29
  %40 = add i32 %24, 64, !dbg !30
  %41 = add i32 %25, 64, !dbg !30
  %42 = sext i32 %40 to i64, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !31
  %44 = sext i32 %41 to i64, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !31
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !32
  %48 = add i32 %24, 65, !dbg !33
  %49 = add i32 %25, 65, !dbg !33
  %50 = sext i32 %48 to i64, !dbg !34
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !34
  %52 = sext i32 %49 to i64, !dbg !34
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !34
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !35
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #1, !dbg !35
  %56 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !26
  %57 = insertelement <2 x i32> %56, i32 %31, i64 1, !dbg !26
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !26
  %59 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !29
  %60 = insertelement <2 x i32> %59, i32 %39, i64 1, !dbg !29
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !29
  %62 = insertelement <2 x i32> poison, i32 %46, i64 0, !dbg !32
  %63 = insertelement <2 x i32> %62, i32 %47, i64 1, !dbg !32
  %64 = bitcast <2 x i32> %63 to <2 x float>, !dbg !32
  %65 = insertelement <2 x i32> poison, i32 %54, i64 0, !dbg !35
  %66 = insertelement <2 x i32> %65, i32 %55, i64 1, !dbg !35
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !35
  %68 = fcmp ogt <2 x float> %61, %58, !dbg !36
  %69 = zext <2 x i1> %68 to <2 x i8>, !dbg !37
  %70 = fcmp uno <2 x float> %61, zeroinitializer, !dbg !38
  %71 = or <2 x i1> %68, %70, !dbg !42
  %.v = select <2 x i1> %71, <2 x i32> %60, <2 x i32> %57, !dbg !43
  %72 = bitcast <2 x i32> %.v to <2 x float>, !dbg !43
  %73 = fcmp olt <2 x float> %72, %64, !dbg !44
  %74 = select <2 x i1> %73, <2 x i8> splat (i8 2), <2 x i8> %69, !dbg !45
  %75 = fcmp uno <2 x float> %64, zeroinitializer, !dbg !46
  %76 = or <2 x i1> %75, %73, !dbg !48
  %.v1 = select <2 x i1> %76, <2 x i32> %63, <2 x i32> %.v, !dbg !49
  %77 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !49
  %78 = fcmp olt <2 x float> %77, %67, !dbg !50
  %79 = select <2 x i1> %78, <2 x i8> splat (i8 3), <2 x i8> %74, !dbg !51
  %80 = bitcast i32 %54 to float, !dbg !52
  %81 = fcmp uno float %80, 0.000000e+00, !dbg !52
  %82 = bitcast i32 %55 to float, !dbg !52
  %83 = fcmp uno float %82, 0.000000e+00, !dbg !52
  %84 = extractelement <2 x i1> %78, i64 0, !dbg !54
  %85 = or i1 %81, %84, !dbg !54
  %86 = extractelement <2 x i1> %78, i64 1, !dbg !54
  %87 = or i1 %83, %86, !dbg !54
  %88 = sext i32 %10 to i64, !dbg !55
  %89 = getelementptr i8, ptr addrspace(1) %1, i64 %88, !dbg !55
  %90 = bitcast <2 x i8> %79 to i16, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %90, ptr addrspace(1) %89, i1 true) #1, !dbg !56
  %91 = shl nsw i32 %.sext, 10, !dbg !57
  %92 = shl nsw i32 %16, 11, !dbg !58
  %93 = shl nsw i32 %19, 18, !dbg !59
  %94 = add i32 %93, %.decomposed3, !dbg !60
  %95 = add i32 %94, %92, !dbg !61
  %96 = add i32 %95, %91, !dbg !62
  %97 = sext i32 %96 to i64, !dbg !63
  %98 = getelementptr float, ptr addrspace(1) %2, i64 %97, !dbg !63
  %99 = extractelement <2 x i32> %.v1, i64 0, !dbg !64
  %100 = select i1 %85, i32 %54, i32 %99, !dbg !65
  %101 = extractelement <2 x i32> %.v1, i64 1, !dbg !64
  %102 = select i1 %87, i32 %55, i32 %101, !dbg !65
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %100, i32 %102, ptr addrspace(1) %98, i1 true) #1, !dbg !64
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csfxky7vo2tsmrn7v6wxhxwsparwriehj4g4khgbpngfwowucwc6.py", directory: "inductor_cache/sf")
!4 = !{ptr @triton_poi_fused_clone_max_pool2d_with_indices_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_max_pool2d_with_indices_2, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_max_pool2d_with_indices_2", linkageName: "triton_poi_fused_clone_max_pool2d_with_indices_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 27, column: 29, scope: !7)
!18 = !DILocation(line: 28, column: 21, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 32, scope: !7)
!23 = !DILocation(line: 31, column: 41, scope: !7)
!24 = !DILocation(line: 31, column: 37, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 46, scope: !7)
!27 = !DILocation(line: 32, column: 41, scope: !7)
!28 = !DILocation(line: 32, column: 30, scope: !7)
!29 = !DILocation(line: 32, column: 50, scope: !7)
!30 = !DILocation(line: 33, column: 42, scope: !7)
!31 = !DILocation(line: 33, column: 30, scope: !7)
!32 = !DILocation(line: 33, column: 51, scope: !7)
!33 = !DILocation(line: 34, column: 43, scope: !7)
!34 = !DILocation(line: 34, column: 31, scope: !7)
!35 = !DILocation(line: 34, column: 52, scope: !7)
!36 = !DILocation(line: 35, column: 18, scope: !7)
!37 = !DILocation(line: 38, column: 32, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 39, column: 40, scope: !7)
!42 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !41)
!44 = !DILocation(line: 40, column: 18, scope: !7)
!45 = !DILocation(line: 42, column: 33, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !47)
!47 = !DILocation(line: 43, column: 41, scope: !7)
!48 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !47)
!49 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !47)
!50 = !DILocation(line: 44, column: 20, scope: !7)
!51 = !DILocation(line: 46, column: 35, scope: !7)
!52 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !53)
!53 = !DILocation(line: 47, column: 42, scope: !7)
!54 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !53)
!55 = !DILocation(line: 48, column: 25, scope: !7)
!56 = !DILocation(line: 48, column: 37, scope: !7)
!57 = !DILocation(line: 49, column: 35, scope: !7)
!58 = !DILocation(line: 49, column: 45, scope: !7)
!59 = !DILocation(line: 49, column: 57, scope: !7)
!60 = !DILocation(line: 49, column: 30, scope: !7)
!61 = !DILocation(line: 49, column: 40, scope: !7)
!62 = !DILocation(line: 49, column: 50, scope: !7)
!63 = !DILocation(line: 49, column: 25, scope: !7)
!64 = !DILocation(line: 49, column: 69, scope: !7)
!65 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !53)
!66 = !DILocation(line: 49, column: 4, scope: !7)
