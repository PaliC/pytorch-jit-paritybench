//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__weight_norm_interface_36 // -- Begin function triton_red_fused__weight_norm_interface_36
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__weight_norm_interface_36
.visible .entry triton_red_fused__weight_norm_interface_36(
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_36_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_36_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_36_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_36_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__weight_norm_interface_36_param_4,
	.param .u32 triton_red_fused__weight_norm_interface_36_param_5,
	.param .u32 triton_red_fused__weight_norm_interface_36_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<64>;
	.reg .b32 	%r<154>;
	.reg .f32 	%f<81>;
	.reg .b64 	%rd<45>;
	.loc	1 19 0                          // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_red_fused__weight_norm_interface_36_param_4];
	ld.param.u64 	%rd12, [triton_red_fused__weight_norm_interface_36_param_3];
	ld.param.u64 	%rd11, [triton_red_fused__weight_norm_interface_36_param_2];
	ld.param.u64 	%rd10, [triton_red_fused__weight_norm_interface_36_param_1];
	ld.param.u64 	%rd9, [triton_red_fused__weight_norm_interface_36_param_0];
$L__tmp0:
	.loc	1 22 28                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:24:21
	setp.lt.s32 	%p36, %r10, 1024;
	.loc	1 25 33                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:25:33
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	shl.b32 	%r11, %r2, 2;
	and.b32  	%r5, %r11, 2044;
	.loc	1 32 44                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:44
	mul.lo.s32 	%r6, %r10, 5120;
	.loc	1 32 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:39
	add.s32 	%r12, %r5, %r6;
	.loc	1 32 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:34
	cvt.s64.s32 	%rd1, %r12;
	mul.wide.s32 	%rd14, %r12, 4;
	add.s64 	%rd30, %rd10, %rd14;
	mov.b32 	%r85, 0;
	@%p36 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.preheader
	.loc	1 0 34                          // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:0:34
	mov.pred 	%p17, -1;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd30 + 0 ];
	@!%p17 mov.u32 %r40, %r85;
	@!%p17 mov.u32 %r41, %r85;
	@!%p17 mov.u32 %r42, %r85;
	@!%p17 mov.u32 %r43, %r85;
	// end inline asm
	mov.b32 	%f4, %r42;
	mov.b32 	%f5, %r43;
	.loc	1 32 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:39
	add.s32 	%r64, %r6, %r5;
	add.s32 	%r65, %r64, 2048;
	.loc	1 32 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:34
	cvt.s64.s32 	%rd44, %r65;
	mul.wide.s32 	%rd23, %r65, 4;
	add.s64 	%rd21, %rd10, %rd23;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p17 ld.global.L1::evict_last.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd21 + 0 ];
	@!%p17 mov.u32 %r48, %r85;
	@!%p17 mov.u32 %r49, %r85;
	@!%p17 mov.u32 %r50, %r85;
	@!%p17 mov.u32 %r51, %r85;
	// end inline asm
	mov.b32 	%f6, %r50;
	mov.b32 	%f7, %r51;
	.loc	1 33 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:33:22
	mul.f32 	%f8, %f6, %f6;
	mul.f32 	%f9, %f7, %f7;
	.loc	1 35 23                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:35:23
	fma.rn.f32 	%f10, %f4, %f4, %f8;
	fma.rn.f32 	%f11, %f5, %f5, %f9;
	.loc	1 29 27                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:29:27
	or.b32  	%r153, %r5, 4096;
	.loc	1 30 25                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:30:25
	setp.lt.u32 	%p27, %r153, 5120;
	.loc	1 32 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:39
	add.s32 	%r66, %r153, %r6;
	.loc	1 32 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:34
	cvt.s64.s32 	%rd43, %r66;
	mul.wide.s32 	%rd24, %r66, 4;
	add.s64 	%rd22, %rd10, %rd24;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p27 ld.global.L1::evict_last.v4.b32 { %r56, %r57, %r58, %r59 }, [ %rd22 + 0 ];
	@!%p27 mov.u32 %r56, %r85;
	@!%p27 mov.u32 %r57, %r85;
	@!%p27 mov.u32 %r58, %r85;
	@!%p27 mov.u32 %r59, %r85;
	// end inline asm
	mov.b32 	%f12, %r58;
	mov.b32 	%f13, %r59;
	.loc	1 35 23                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:35:23
	fma.rn.f32 	%f14, %f12, %f12, %f10;
	fma.rn.f32 	%f15, %f13, %f13, %f11;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	mov.b32 	%f16, %r40;
	mov.b32 	%f17, %r41;
	mov.b32 	%f18, %r49;
	mov.b32 	%f19, %r48;
	.loc	1 33 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:33:22
	mul.f32 	%f20, %f19, %f19;
	mul.f32 	%f21, %f18, %f18;
	.loc	1 35 23                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:35:23
	fma.rn.f32 	%f22, %f17, %f17, %f21;
	fma.rn.f32 	%f23, %f16, %f16, %f20;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	mov.b32 	%f24, %r57;
	mov.b32 	%f25, %r56;
	.loc	1 35 23                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:35:23
	fma.rn.f32 	%f26, %f25, %f25, %f23;
	fma.rn.f32 	%f27, %f24, %f24, %f22;
	.loc	1 36 46                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:36:46
	selp.f32 	%f28, %f27, %f22, %p27;
	selp.f32 	%f29, %f26, %f23, %p27;
	selp.f32 	%f30, %f14, %f10, %p27;
	selp.f32 	%f31, %f15, %f11, %p27;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	add.f32 	%f32, %f29, %f28;
	add.f32 	%f33, %f30, %f32;
	add.f32 	%f80, %f31, %f33;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_1:                              // %.split.us.preheader
	.loc	2 0 36                          // standard.py:0:36
	mov.pred 	%p2, 0;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd30 + 0 ];
	@!%p2 mov.u32 %r13, %r85;
	@!%p2 mov.u32 %r14, %r85;
	@!%p2 mov.u32 %r15, %r85;
	@!%p2 mov.u32 %r16, %r85;
	// end inline asm
	.loc	1 32 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:39
	add.s32 	%r37, %r6, %r5;
	add.s32 	%r38, %r37, 2048;
	.loc	1 32 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:34
	cvt.s64.s32 	%rd44, %r38;
	mul.wide.s32 	%rd18, %r38, 4;
	add.s64 	%rd16, %rd10, %rd18;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd16 + 0 ];
	@!%p2 mov.u32 %r21, %r85;
	@!%p2 mov.u32 %r22, %r85;
	@!%p2 mov.u32 %r23, %r85;
	@!%p2 mov.u32 %r24, %r85;
	// end inline asm
	.loc	1 29 27                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:29:27
	or.b32  	%r153, %r5, 4096;
	.loc	1 32 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:39
	add.s32 	%r39, %r153, %r6;
	.loc	1 32 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:34
	cvt.s64.s32 	%rd43, %r39;
	mul.wide.s32 	%rd19, %r39, 4;
	add.s64 	%rd17, %rd10, %rd19;
	.loc	1 32 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:32:49
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd17 + 0 ];
	@!%p2 mov.u32 %r29, %r85;
	@!%p2 mov.u32 %r30, %r85;
	@!%p2 mov.u32 %r31, %r85;
	@!%p2 mov.u32 %r32, %r85;
	// end inline asm
	mov.f32 	%f80, 0f00000000;
$L__BB0_3:                              // %.split23.us
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f80;
	shfl.sync.bfly.b32	%r130, %r129, 16, 31, -1;
	mov.b32 	%f34, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f80, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f35;
	shfl.sync.bfly.b32	%r132, %r131, 8, 31, -1;
	mov.b32 	%f36, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f37;
	shfl.sync.bfly.b32	%r134, %r133, 4, 31, -1;
	mov.b32 	%f38, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f39;
	shfl.sync.bfly.b32	%r136, %r135, 2, 31, -1;
	mov.b32 	%f40, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f41;
	shfl.sync.bfly.b32	%r138, %r137, 1, 31, -1;
	mov.b32 	%f42, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p32, %r3, 0;
	and.b32  	%r139, %r4, 15;
	shl.b32 	%r140, %r139, 2;
	mov.u32 	%r141, global_smem;
	add.s32 	%r67, %r141, %r140;
	mov.b32 	%r68, %f43;
	// begin inline asm
	@%p32 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p33, %r2, 16;
	add.s32 	%r70, %r141, %r11;
	// begin inline asm
	@%p33 ld.shared.b32 %r69, [ %r70 + 0 ];
	// end inline asm
	mov.b32 	%f44, %r69;
	shfl.sync.bfly.b32	%r143, %r69, 8, 31, -1;
	mov.b32 	%f45, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f46;
	shfl.sync.bfly.b32	%r145, %r144, 4, 31, -1;
	mov.b32 	%f47, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f48;
	shfl.sync.bfly.b32	%r147, %r146, 2, 31, -1;
	mov.b32 	%f49, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r148, %f50;
	shfl.sync.bfly.b32	%r149, %r148, 1, 31, -1;
	mov.b32 	%f51, %r149;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r150, %r2, 15;
	setp.eq.s32 	%p61, %r150, 0;
	and.pred  	%p34, %p33, %p61;
	mov.b32 	%r72, %f52;
	// begin inline asm
	@%p34 st.shared.b32 [ %r70 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f53, [global_smem];
$L__tmp4:
	.loc	1 38 26                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:38:26
	sqrt.approx.ftz.f32 	%f54, %f53;
	.loc	1 39 4                          // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:39:4
	bar.sync 	0;
	.loc	1 40 28                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:40:28
	mul.wide.s32 	%rd39, %r10, 4;
	add.s64 	%rd25, %rd9, %rd39;
	.loc	1 40 39                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:40:39
	and.b32  	%r151, %r2, 511;
	setp.eq.s32 	%p62, %r151, 0;
	mov.b32 	%r73, %f54;
	and.pred  	%p35, %p62, %p36;
	// begin inline asm
	@%p35 st.global.b32 [ %rd25 + 0 ], { %r73 };
	// end inline asm
	.loc	1 41 30                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:41:30
	add.s64 	%rd26, %rd11, %rd39;
	.loc	1 41 35                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:41:35
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p36 ld.global.L1::evict_last.b32 { %r74 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r75, 0x0;
	@%p36 ld.global.L1::evict_last.b32 { %r75 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r76, 0x0;
	@%p36 ld.global.L1::evict_last.b32 { %r76 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r79, 0x0;
	@%p36 ld.global.L1::evict_last.b32 { %r79 }, [ %rd26 + 0 ];
	// end inline asm
	.loc	1 47 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:47:22
	// begin inline asm
	div.full.f32 %r78, %r79, %r73;
	// end inline asm
	mov.b32 	%f55, %r78;
	.loc	1 46 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:49
	// begin inline asm
	mov.u32 %r81, 0x0;
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	@%p36 ld.global.L1::evict_first.v4.b32 { %r81, %r82, %r83, %r84 }, [ %rd30 + 0 ];
	@!%p36 mov.u32 %r81, %r85;
	@!%p36 mov.u32 %r82, %r85;
	@!%p36 mov.u32 %r83, %r85;
	@!%p36 mov.u32 %r84, %r85;
	// end inline asm
	mov.b32 	%f56, %r81;
	mov.b32 	%f57, %r82;
	mov.b32 	%f58, %r83;
	mov.b32 	%f59, %r84;
	.loc	1 48 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:48:22
	mul.f32 	%f60, %f55, %f56;
	mul.f32 	%f61, %f55, %f57;
	mul.f32 	%f62, %f55, %f58;
	mul.f32 	%f63, %f55, %f59;
	.loc	1 49 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:29
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd31, %rd12, %rd40;
	.loc	1 49 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:50
	mov.b32 	%r89, %f60;
	mov.b32 	%r90, %f61;
	mov.b32 	%r91, %f62;
	mov.b32 	%r92, %f63;
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd31 + 0 ], { %r89, %r90, %r91, %r92 };
	// end inline asm
	.loc	1 50 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:29
	add.s64 	%rd32, %rd13, %rd40;
	.loc	1 50 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:50
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd32 + 0 ], { %r89, %r90, %r91, %r92 };
	// end inline asm
	.loc	1 46 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:34
	shl.b64 	%rd41, %rd44, 2;
	add.s64 	%rd33, %rd10, %rd41;
	.loc	1 46 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:49
	// begin inline asm
	mov.u32 %r97, 0x0;
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	@%p36 ld.global.L1::evict_first.v4.b32 { %r97, %r98, %r99, %r100 }, [ %rd33 + 0 ];
	@!%p36 mov.u32 %r97, %r85;
	@!%p36 mov.u32 %r98, %r85;
	@!%p36 mov.u32 %r99, %r85;
	@!%p36 mov.u32 %r100, %r85;
	// end inline asm
	mov.b32 	%f64, %r97;
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	.loc	1 48 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:48:22
	mul.f32 	%f68, %f55, %f64;
	mul.f32 	%f69, %f55, %f65;
	mul.f32 	%f70, %f55, %f66;
	mul.f32 	%f71, %f55, %f67;
	.loc	1 49 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:29
	add.s64 	%rd34, %rd12, %rd41;
	.loc	1 49 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:50
	mov.b32 	%r105, %f68;
	mov.b32 	%r106, %f69;
	mov.b32 	%r107, %f70;
	mov.b32 	%r108, %f71;
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd34 + 0 ], { %r105, %r106, %r107, %r108 };
	// end inline asm
	.loc	1 50 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:29
	add.s64 	%rd35, %rd13, %rd41;
	.loc	1 50 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:50
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd35 + 0 ], { %r105, %r106, %r107, %r108 };
	// end inline asm
	.loc	1 44 25                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:44:25
	setp.lt.u32 	%p63, %r153, 5120;
	.loc	1 46 34                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:34
	shl.b64 	%rd42, %rd43, 2;
	add.s64 	%rd36, %rd10, %rd42;
	.loc	1 46 57                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:57
	and.pred  	%p54, %p36, %p63;
	.loc	1 46 49                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:46:49
	// begin inline asm
	mov.u32 %r113, 0x0;
	mov.u32 %r114, 0x0;
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	@%p54 ld.global.L1::evict_first.v4.b32 { %r113, %r114, %r115, %r116 }, [ %rd36 + 0 ];
	@!%p54 mov.u32 %r113, %r85;
	@!%p54 mov.u32 %r114, %r85;
	@!%p54 mov.u32 %r115, %r85;
	@!%p54 mov.u32 %r116, %r85;
	// end inline asm
	mov.b32 	%f72, %r113;
	mov.b32 	%f73, %r114;
	mov.b32 	%f74, %r115;
	mov.b32 	%f75, %r116;
	.loc	1 48 22                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:48:22
	mul.f32 	%f76, %f55, %f72;
	mul.f32 	%f77, %f55, %f73;
	mul.f32 	%f78, %f55, %f74;
	mul.f32 	%f79, %f55, %f75;
	.loc	1 49 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:29
	add.s64 	%rd37, %rd12, %rd42;
	.loc	1 49 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:49:50
	mov.b32 	%r121, %f76;
	mov.b32 	%r122, %f77;
	mov.b32 	%r123, %f78;
	mov.b32 	%r124, %f79;
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd37 + 0 ], { %r121, %r122, %r123, %r124 };
	// end inline asm
	.loc	1 50 29                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:29
	add.s64 	%rd38, %rd13, %rd42;
	.loc	1 50 50                         // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:50:50
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd38 + 0 ], { %r121, %r122, %r123, %r124 };
	// end inline asm
	.loc	1 42 4                          // c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py:42:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/66/c665tsyetkkbcwdk7yajve4qw6fr3y26wjn4pfrzmbyt5o6ctsfs.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 54
.b8 53
.b8 116
.b8 115
.b8 121
.b8 101
.b8 116
.b8 107
.b8 107
.b8 98
.b8 99
.b8 119
.b8 100
.b8 107
.b8 55
.b8 121
.b8 97
.b8 106
.b8 118
.b8 101
.b8 52
.b8 113
.b8 119
.b8 54
.b8 102
.b8 114
.b8 51
.b8 121
.b8 50
.b8 54
.b8 119
.b8 106
.b8 110
.b8 52
.b8 112
.b8 102
.b8 114
.b8 122
.b8 109
.b8 98
.b8 121
.b8 116
.b8 53
.b8 111
.b8 54
.b8 99
.b8 116
.b8 115
.b8 102
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 119
.b8 101
.b8 105
.b8 103
.b8 104
.b8 116
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 102
.b8 97
.b8 99
.b8 101
.b8 95
.b8 51
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
