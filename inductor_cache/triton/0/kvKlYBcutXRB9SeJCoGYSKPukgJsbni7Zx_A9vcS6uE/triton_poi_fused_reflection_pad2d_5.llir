; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_reflection_pad2d_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = or disjoint i32 %13, 1, !dbg !13
  %15 = srem i32 %13, 256, !dbg !14
  %16 = srem i32 %14, 256, !dbg !14
  %17 = sdiv i32 %13, 9216, !dbg !15
  %18 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !16
  %19 = shufflevector <2 x i32> %18, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %20 = sdiv <2 x i32> %19, <i32 1536, i32 256>, !dbg !16
  %21 = srem <2 x i32> %20, splat (i32 6), !dbg !17
  %22 = add nsw <2 x i32> %21, splat (i32 -1), !dbg !18
  %23 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %22, i1 true), !dbg !19
  %24 = add nsw <2 x i32> %23, splat (i32 -3), !dbg !20
  %25 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %24, i1 true), !dbg !21
  %26 = mul nsw <2 x i32> %25, <i32 -1024, i32 -256>, !dbg !22
  %27 = shl nsw i32 %17, 12, !dbg !23
  %28 = or disjoint i32 %27, 3840, !dbg !24
  %29 = add nsw i32 %28, %15, !dbg !25
  %30 = extractelement <2 x i32> %26, i64 0, !dbg !26
  %31 = add i32 %29, %30, !dbg !26
  %32 = extractelement <2 x i32> %26, i64 1, !dbg !27
  %33 = add i32 %31, %32, !dbg !27
  %34 = add nsw i32 %28, %16, !dbg !25
  %35 = add i32 %34, %30, !dbg !26
  %36 = add i32 %35, %32, !dbg !27
  %37 = sext i32 %33 to i64, !dbg !28
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !28
  %39 = sext i32 %36 to i64, !dbg !28
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !28
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #2, !dbg !29
  %42 = bitcast i32 %41 to float, !dbg !29
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #2, !dbg !29
  %44 = bitcast i32 %43 to float, !dbg !29
  %45 = shl nsw i32 %17, 8, !dbg !30
  %46 = add nsw i32 %45, %15, !dbg !31
  %47 = sext i32 %46 to i64, !dbg !32
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !32
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %48, i1 true) #2, !dbg !33
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !33
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !33
  %52 = bitcast i32 %50 to float, !dbg !33
  %53 = bitcast i32 %51 to float, !dbg !33
  %54 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !34
  %55 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %54, i1 true) #2, !dbg !35
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !35
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !35
  %58 = bitcast i32 %56 to float, !dbg !35
  %59 = bitcast i32 %57 to float, !dbg !35
  %60 = getelementptr float, ptr addrspace(1) %3, i64 %47, !dbg !36
  %61 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %60, i1 true) #2, !dbg !37
  %62 = extractvalue { i32, i32 } %61, 0, !dbg !37
  %63 = extractvalue { i32, i32 } %61, 1, !dbg !37
  %64 = bitcast i32 %62 to float, !dbg !37
  %65 = bitcast i32 %63 to float, !dbg !37
  %66 = getelementptr float, ptr addrspace(1) %4, i64 %47, !dbg !38
  %67 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %66, i1 true) #2, !dbg !39
  %68 = extractvalue { i32, i32 } %67, 0, !dbg !39
  %69 = extractvalue { i32, i32 } %67, 1, !dbg !39
  %70 = bitcast i32 %68 to float, !dbg !39
  %71 = bitcast i32 %69 to float, !dbg !39
  %72 = fsub float %42, %52, !dbg !40
  %73 = fsub float %44, %53, !dbg !40
  %74 = fmul float %72, %58, !dbg !41
  %75 = fmul float %73, %59, !dbg !41
  %76 = fmul float %74, %64, !dbg !42
  %77 = fmul float %75, %65, !dbg !42
  %78 = fadd float %76, %70, !dbg !43
  %79 = fadd float %77, %71, !dbg !43
  %80 = fcmp olt float %78, 0.000000e+00, !dbg !44
  %81 = fcmp olt float %79, 0.000000e+00, !dbg !44
  %82 = select i1 %80, float 0.000000e+00, float %78, !dbg !48
  %83 = select i1 %81, float 0.000000e+00, float %79, !dbg !48
  %84 = sext i32 %13 to i64, !dbg !49
  %85 = getelementptr float, ptr addrspace(1) %5, i64 %84, !dbg !49
  %86 = bitcast float %82 to i32, !dbg !50
  %87 = bitcast float %83 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %86, i32 %87, ptr addrspace(1) %85, i1 true) #2, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuqvud2ameajmyqjspb33zd74huhoahfl3d6lnlhz7jhiuv32ar2.py", directory: "inductor_cache/uq")
!4 = !{ptr @triton_poi_fused_reflection_pad2d_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_reflection_pad2d_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_reflection_pad2d_5", linkageName: "triton_poi_fused_reflection_pad2d_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 29, scope: !7)
!18 = !DILocation(line: 29, column: 89, scope: !7)
!19 = !DILocation(line: 29, column: 82, scope: !7)
!20 = !DILocation(line: 29, column: 70, scope: !7)
!21 = !DILocation(line: 29, column: 63, scope: !7)
!22 = !DILocation(line: 29, column: 51, scope: !7)
!23 = !DILocation(line: 29, column: 156, scope: !7)
!24 = !DILocation(line: 29, column: 37, scope: !7)
!25 = !DILocation(line: 29, column: 43, scope: !7)
!26 = !DILocation(line: 29, column: 98, scope: !7)
!27 = !DILocation(line: 29, column: 151, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 161, scope: !7)
!30 = !DILocation(line: 30, column: 39, scope: !7)
!31 = !DILocation(line: 30, column: 35, scope: !7)
!32 = !DILocation(line: 30, column: 30, scope: !7)
!33 = !DILocation(line: 30, column: 44, scope: !7)
!34 = !DILocation(line: 31, column: 30, scope: !7)
!35 = !DILocation(line: 31, column: 44, scope: !7)
!36 = !DILocation(line: 32, column: 30, scope: !7)
!37 = !DILocation(line: 32, column: 44, scope: !7)
!38 = !DILocation(line: 33, column: 30, scope: !7)
!39 = !DILocation(line: 33, column: 44, scope: !7)
!40 = !DILocation(line: 34, column: 18, scope: !7)
!41 = !DILocation(line: 35, column: 18, scope: !7)
!42 = !DILocation(line: 36, column: 18, scope: !7)
!43 = !DILocation(line: 37, column: 18, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !45, inlinedAt: !47)
!45 = distinct !DILexicalBlockFile(scope: !7, file: !46, discriminator: 0)
!46 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!47 = !DILocation(line: 39, column: 41, scope: !7)
!48 = !DILocation(line: 121, column: 29, scope: !45, inlinedAt: !47)
!49 = !DILocation(line: 40, column: 25, scope: !7)
!50 = !DILocation(line: 40, column: 37, scope: !7)
!51 = !DILocation(line: 40, column: 4, scope: !7)
