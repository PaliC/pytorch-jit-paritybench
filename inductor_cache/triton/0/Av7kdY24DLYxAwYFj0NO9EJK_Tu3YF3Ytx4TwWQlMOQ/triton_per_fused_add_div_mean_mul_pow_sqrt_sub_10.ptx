//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10 // -- Begin function triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10
.visible .entry triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_7,
	.param .u32 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_8,
	.param .u32 triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<75>;
	.reg .b32 	%r<306>;
	.reg .f32 	%f<244>;
	.reg .b64 	%rd<35>;
	.loc	1 19 0                          // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_0];
	ld.param.u64 	%rd22, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:23:33
	shl.b32 	%r206, %r1, 5;
	ld.param.u64 	%rd23, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_2];
	ld.param.u64 	%rd24, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_3];
	.loc	1 24 44                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:24:44
	mov.u32 	%r207, %tid.x;
	ld.param.u64 	%rd25, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_4];
	bfe.u32 	%r208, %r207, 5, 3;
	ld.param.u64 	%rd26, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_5];
	ld.param.u64 	%rd27, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_6];
	ld.param.u64 	%rd28, [triton_per_fused_add_div_mean_mul_pow_sqrt_sub_10_param_7];
	and.b32  	%r209, %r207, 31;
	.loc	1 24 23                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:24:23
	or.b32  	%r210, %r206, %r208;
	or.b32  	%r211, %r210, 8;
	or.b32  	%r212, %r210, 16;
	or.b32  	%r213, %r210, 24;
	.loc	1 25 21                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:25:21
	setp.lt.s32 	%p69, %r210, 1024;
	setp.lt.s32 	%p70, %r211, 1024;
	setp.lt.s32 	%p71, %r212, 1024;
	setp.lt.s32 	%p72, %r213, 1024;
	.loc	1 26 34                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:26:34
	shl.b32 	%r214, %r207, 2;
	and.b32  	%r215, %r214, 124;
	.loc	1 28 21                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:28:21
	setp.lt.u32 	%p21, %r215, 96;
	.loc	1 31 35                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:31:35
	mad.lo.s32 	%r216, %r210, 96, %r215;
	mad.lo.s32 	%r217, %r211, 96, %r215;
	mad.lo.s32 	%r218, %r212, 96, %r215;
	mad.lo.s32 	%r219, %r213, 96, %r215;
	.loc	1 31 30                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:31:30
	mul.wide.s32 	%rd29, %r216, 4;
	add.s64 	%rd1, %rd22, %rd29;
	mul.wide.s32 	%rd30, %r217, 4;
	add.s64 	%rd2, %rd22, %rd30;
	mul.wide.s32 	%rd31, %r218, 4;
	add.s64 	%rd3, %rd22, %rd31;
	mul.wide.s32 	%rd32, %r219, 4;
	add.s64 	%rd4, %rd22, %rd32;
	.loc	1 31 51                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:31:51
	and.pred  	%p1, %p21, %p69;
	and.pred  	%p6, %p21, %p70;
	and.pred  	%p11, %p21, %p71;
	and.pred  	%p16, %p21, %p72;
	mov.b32 	%r6, 0;
	.loc	1 31 43                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 32 30                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:32:30
	mul.wide.u32 	%rd33, %r215, 4;
	add.s64 	%rd5, %rd23, %rd33;
	.loc	1 32 35                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:32:35
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p21 mov.u32 %r34, %r6;
	@!%p21 mov.u32 %r35, %r6;
	@!%p21 mov.u32 %r36, %r6;
	@!%p21 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r35;
	mov.b32 	%f19, %r36;
	mov.b32 	%f20, %r37;
	.loc	1 33 30                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:33:30
	add.s64 	%rd6, %rd24, %rd29;
	add.s64 	%rd7, %rd24, %rd30;
	add.s64 	%rd8, %rd24, %rd31;
	add.s64 	%rd9, %rd24, %rd32;
	.loc	1 33 43                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:33:43
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	%f21, %r42;
	mov.b32 	%f22, %r43;
	mov.b32 	%f23, %r44;
	mov.b32 	%f24, %r45;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p6 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r50, %r6;
	@!%p6 mov.u32 %r51, %r6;
	@!%p6 mov.u32 %r52, %r6;
	@!%p6 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f25, %r50;
	mov.b32 	%f26, %r51;
	mov.b32 	%f27, %r52;
	mov.b32 	%f28, %r53;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p11 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p11 mov.u32 %r58, %r6;
	@!%p11 mov.u32 %r59, %r6;
	@!%p11 mov.u32 %r60, %r6;
	@!%p11 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	%f29, %r58;
	mov.b32 	%f30, %r59;
	mov.b32 	%f31, %r60;
	mov.b32 	%f32, %r61;
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p16 ld.global.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd9 + 0 ];
	@!%p16 mov.u32 %r66, %r6;
	@!%p16 mov.u32 %r67, %r6;
	@!%p16 mov.u32 %r68, %r6;
	@!%p16 mov.u32 %r69, %r6;
	// end inline asm
	mov.b32 	%f33, %r66;
	mov.b32 	%f34, %r67;
	mov.b32 	%f35, %r68;
	mov.b32 	%f36, %r69;
	.loc	1 34 31                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:34:31
	add.s64 	%rd10, %rd25, %rd33;
	.loc	1 34 36                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:34:36
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd10 + 0 ];
	@!%p21 mov.u32 %r74, %r6;
	@!%p21 mov.u32 %r75, %r6;
	@!%p21 mov.u32 %r76, %r6;
	@!%p21 mov.u32 %r77, %r6;
	// end inline asm
	.loc	1 35 31                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:35:31
	add.s64 	%rd11, %rd26, %rd33;
	.loc	1 35 36                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:35:36
	// begin inline asm
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r82, %r83, %r84, %r85 }, [ %rd11 + 0 ];
	@!%p21 mov.u32 %r82, %r6;
	@!%p21 mov.u32 %r83, %r6;
	@!%p21 mov.u32 %r84, %r6;
	@!%p21 mov.u32 %r85, %r6;
	// end inline asm
	.loc	1 37 18                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:37:18
	fma.rn.f32 	%f37, %f17, %f21, %f1;
	fma.rn.f32 	%f38, %f18, %f22, %f2;
	fma.rn.f32 	%f39, %f19, %f23, %f3;
	fma.rn.f32 	%f40, %f20, %f24, %f4;
	fma.rn.f32 	%f41, %f17, %f25, %f5;
	fma.rn.f32 	%f42, %f18, %f26, %f6;
	fma.rn.f32 	%f43, %f19, %f27, %f7;
	fma.rn.f32 	%f44, %f20, %f28, %f8;
	fma.rn.f32 	%f45, %f17, %f29, %f9;
	fma.rn.f32 	%f46, %f18, %f30, %f10;
	fma.rn.f32 	%f47, %f19, %f31, %f11;
	fma.rn.f32 	%f48, %f20, %f32, %f12;
	fma.rn.f32 	%f49, %f17, %f33, %f13;
	fma.rn.f32 	%f50, %f18, %f34, %f14;
	fma.rn.f32 	%f51, %f19, %f35, %f15;
	fma.rn.f32 	%f52, %f20, %f36, %f16;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f37, %f38;
	add.f32 	%f54, %f39, %f53;
	add.f32 	%f55, %f40, %f54;
	selp.f32 	%f56, %f55, 0f00000000, %p1;
	add.f32 	%f57, %f41, %f42;
	add.f32 	%f58, %f43, %f57;
	add.f32 	%f59, %f44, %f58;
	selp.f32 	%f60, %f59, 0f00000000, %p6;
	add.f32 	%f61, %f45, %f46;
	add.f32 	%f62, %f47, %f61;
	add.f32 	%f63, %f48, %f62;
	selp.f32 	%f64, %f63, 0f00000000, %p11;
	add.f32 	%f65, %f49, %f50;
	add.f32 	%f66, %f51, %f65;
	add.f32 	%f67, %f52, %f66;
	selp.f32 	%f68, %f67, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r220, %f56;
	shfl.sync.bfly.b32	%r221, %r220, 16, 31, -1;
	mov.b32 	%f69, %r221;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f56, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r222, %f70;
	shfl.sync.bfly.b32	%r223, %r222, 8, 31, -1;
	mov.b32 	%f71, %r223;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r224, %f72;
	shfl.sync.bfly.b32	%r225, %r224, 4, 31, -1;
	mov.b32 	%f73, %r225;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r226, %f74;
	shfl.sync.bfly.b32	%r227, %r226, 2, 31, -1;
	mov.b32 	%f75, %r227;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r228, %f76;
	shfl.sync.bfly.b32	%r229, %r228, 1, 31, -1;
	mov.b32 	%f77, %r229;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r230, %f60;
	shfl.sync.bfly.b32	%r231, %r230, 16, 31, -1;
	mov.b32 	%f79, %r231;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f60, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r232, %f80;
	shfl.sync.bfly.b32	%r233, %r232, 8, 31, -1;
	mov.b32 	%f81, %r233;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f80, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r234, %f82;
	shfl.sync.bfly.b32	%r235, %r234, 4, 31, -1;
	mov.b32 	%f83, %r235;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r236, %f84;
	shfl.sync.bfly.b32	%r237, %r236, 2, 31, -1;
	mov.b32 	%f85, %r237;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r238, %f86;
	shfl.sync.bfly.b32	%r239, %r238, 1, 31, -1;
	mov.b32 	%f87, %r239;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r240, %f64;
	shfl.sync.bfly.b32	%r241, %r240, 16, 31, -1;
	mov.b32 	%f89, %r241;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f64, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r242, %f90;
	shfl.sync.bfly.b32	%r243, %r242, 8, 31, -1;
	mov.b32 	%f91, %r243;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r244, %f92;
	shfl.sync.bfly.b32	%r245, %r244, 4, 31, -1;
	mov.b32 	%f93, %r245;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r246, %f94;
	shfl.sync.bfly.b32	%r247, %r246, 2, 31, -1;
	mov.b32 	%f95, %r247;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r248, %f96;
	shfl.sync.bfly.b32	%r249, %r248, 1, 31, -1;
	mov.b32 	%f97, %r249;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r250, %f68;
	shfl.sync.bfly.b32	%r251, %r250, 16, 31, -1;
	mov.b32 	%f99, %r251;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f68, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r252, %f100;
	shfl.sync.bfly.b32	%r253, %r252, 8, 31, -1;
	mov.b32 	%f101, %r253;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r254, %f102;
	shfl.sync.bfly.b32	%r255, %r254, 4, 31, -1;
	mov.b32 	%f103, %r255;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r256, %f104;
	shfl.sync.bfly.b32	%r257, %r256, 2, 31, -1;
	mov.b32 	%f105, %r257;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r258, %f106;
	shfl.sync.bfly.b32	%r259, %r258, 1, 31, -1;
	mov.b32 	%f107, %r259;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
$L__tmp2:
	.loc	1 42 19                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:42:19
	mov.b32 	%r91, %f78;
	mov.b32 	%r92, 1119879168;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f109, %r90;
	mov.b32 	%r94, %f88;
	// begin inline asm
	div.full.f32 %r93, %r94, %r92;
	// end inline asm
	mov.b32 	%f110, %r93;
	mov.b32 	%r97, %f98;
	// begin inline asm
	div.full.f32 %r96, %r97, %r92;
	// end inline asm
	mov.b32 	%f111, %r96;
	mov.b32 	%r100, %f108;
	// begin inline asm
	div.full.f32 %r99, %r100, %r92;
	// end inline asm
	mov.b32 	%f112, %r99;
	.loc	1 43 19                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:43:19
	sub.f32 	%f113, %f37, %f109;
	sub.f32 	%f114, %f38, %f109;
	sub.f32 	%f115, %f39, %f109;
	sub.f32 	%f116, %f40, %f109;
	sub.f32 	%f117, %f41, %f110;
	sub.f32 	%f118, %f42, %f110;
	sub.f32 	%f119, %f43, %f110;
	sub.f32 	%f120, %f44, %f110;
	sub.f32 	%f121, %f45, %f111;
	sub.f32 	%f122, %f46, %f111;
	sub.f32 	%f123, %f47, %f111;
	sub.f32 	%f124, %f48, %f111;
	sub.f32 	%f125, %f49, %f112;
	sub.f32 	%f126, %f50, %f112;
	sub.f32 	%f127, %f51, %f112;
	sub.f32 	%f128, %f52, %f112;
	.loc	1 44 20                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:44:20
	mul.f32 	%f129, %f114, %f114;
	mul.f32 	%f130, %f118, %f118;
	mul.f32 	%f131, %f122, %f122;
	mul.f32 	%f132, %f126, %f126;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f133, %f113, %f113, %f129;
	fma.rn.f32 	%f134, %f115, %f115, %f133;
	fma.rn.f32 	%f135, %f116, %f116, %f134;
	selp.f32 	%f136, %f135, 0f00000000, %p1;
	fma.rn.f32 	%f137, %f117, %f117, %f130;
	fma.rn.f32 	%f138, %f119, %f119, %f137;
	fma.rn.f32 	%f139, %f120, %f120, %f138;
	selp.f32 	%f140, %f139, 0f00000000, %p6;
	fma.rn.f32 	%f141, %f121, %f121, %f131;
	fma.rn.f32 	%f142, %f123, %f123, %f141;
	fma.rn.f32 	%f143, %f124, %f124, %f142;
	selp.f32 	%f144, %f143, 0f00000000, %p11;
	fma.rn.f32 	%f145, %f125, %f125, %f132;
	fma.rn.f32 	%f146, %f127, %f127, %f145;
	fma.rn.f32 	%f147, %f128, %f128, %f146;
	selp.f32 	%f148, %f147, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r260, %f136;
	shfl.sync.bfly.b32	%r261, %r260, 16, 31, -1;
	mov.b32 	%f149, %r261;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f136, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r262, %f150;
	shfl.sync.bfly.b32	%r263, %r262, 8, 31, -1;
	mov.b32 	%f151, %r263;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r264, %f152;
	shfl.sync.bfly.b32	%r265, %r264, 4, 31, -1;
	mov.b32 	%f153, %r265;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r266, %f154;
	shfl.sync.bfly.b32	%r267, %r266, 2, 31, -1;
	mov.b32 	%f155, %r267;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r268, %f156;
	shfl.sync.bfly.b32	%r269, %r268, 1, 31, -1;
	mov.b32 	%f157, %r269;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r270, %f140;
	shfl.sync.bfly.b32	%r271, %r270, 16, 31, -1;
	mov.b32 	%f159, %r271;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f160, %f140, %f159;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r272, %f160;
	shfl.sync.bfly.b32	%r273, %r272, 8, 31, -1;
	mov.b32 	%f161, %r273;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f160, %f161;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r274, %f162;
	shfl.sync.bfly.b32	%r275, %r274, 4, 31, -1;
	mov.b32 	%f163, %r275;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f164, %f162, %f163;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r276, %f164;
	shfl.sync.bfly.b32	%r277, %r276, 2, 31, -1;
	mov.b32 	%f165, %r277;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f166, %f164, %f165;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r278, %f166;
	shfl.sync.bfly.b32	%r279, %r278, 1, 31, -1;
	mov.b32 	%f167, %r279;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f168, %f166, %f167;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r280, %f144;
	shfl.sync.bfly.b32	%r281, %r280, 16, 31, -1;
	mov.b32 	%f169, %r281;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f144, %f169;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r282, %f170;
	shfl.sync.bfly.b32	%r283, %r282, 8, 31, -1;
	mov.b32 	%f171, %r283;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r284, %f172;
	shfl.sync.bfly.b32	%r285, %r284, 4, 31, -1;
	mov.b32 	%f173, %r285;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f174, %f172, %f173;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r286, %f174;
	shfl.sync.bfly.b32	%r287, %r286, 2, 31, -1;
	mov.b32 	%f175, %r287;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f176, %f174, %f175;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r288, %f176;
	shfl.sync.bfly.b32	%r289, %r288, 1, 31, -1;
	mov.b32 	%f177, %r289;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f178, %f176, %f177;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r290, %f148;
	shfl.sync.bfly.b32	%r291, %r290, 16, 31, -1;
	mov.b32 	%f179, %r291;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f180, %f148, %f179;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r292, %f180;
	shfl.sync.bfly.b32	%r293, %r292, 8, 31, -1;
	mov.b32 	%f181, %r293;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f182, %f180, %f181;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r294, %f182;
	shfl.sync.bfly.b32	%r295, %r294, 4, 31, -1;
	mov.b32 	%f183, %r295;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r296, %f184;
	shfl.sync.bfly.b32	%r297, %r296, 2, 31, -1;
	mov.b32 	%f185, %r297;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f184, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r298, %f186;
	shfl.sync.bfly.b32	%r299, %r298, 1, 31, -1;
	mov.b32 	%f187, %r299;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f186, %f187;
$L__tmp4:
	.loc	1 51 27                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:51:27
	shl.b32 	%r300, %r208, 2;
	mov.u32 	%r301, global_smem;
	add.s32 	%r102, %r301, %r300;
	mov.b32 	%r103, %f158;
	mov.pred 	%p56, -1;
	// begin inline asm
	@%p56 st.shared.b32 [ %r102 + 0 ], %r103;
	// end inline asm
	add.s32 	%r104, %r102, 32;
	mov.b32 	%r105, %f168;
	// begin inline asm
	@%p56 st.shared.b32 [ %r104 + 0 ], %r105;
	// end inline asm
	add.s32 	%r106, %r102, 64;
	mov.b32 	%r107, %f178;
	// begin inline asm
	@%p56 st.shared.b32 [ %r106 + 0 ], %r107;
	// end inline asm
	add.s32 	%r108, %r102, 96;
	mov.b32 	%r109, %f188;
	// begin inline asm
	@%p56 st.shared.b32 [ %r108 + 0 ], %r109;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r302, %r209, 2;
	add.s32 	%r303, %r301, %r302;
	.loc	1 48 20                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:48:20
	ld.shared.u32 	%r111, [%r303];
	// begin inline asm
	div.full.f32 %r110, %r111, %r92;
	// end inline asm
	mov.b32 	%f189, %r110;
	// begin inline asm
	div.full.f32 %r113, %r103, %r92;
	// end inline asm
	mov.b32 	%f190, %r113;
	// begin inline asm
	div.full.f32 %r116, %r105, %r92;
	// end inline asm
	mov.b32 	%f191, %r116;
	// begin inline asm
	div.full.f32 %r119, %r107, %r92;
	// end inline asm
	mov.b32 	%f192, %r119;
	// begin inline asm
	div.full.f32 %r122, %r109, %r92;
	// end inline asm
	mov.b32 	%f193, %r122;
	.loc	1 50 20                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:50:20
	add.f32 	%f194, %f189, 0f358637BD;
	add.f32 	%f195, %f190, 0f358637BD;
	add.f32 	%f196, %f191, 0f358637BD;
	add.f32 	%f197, %f192, 0f358637BD;
	add.f32 	%f198, %f193, 0f358637BD;
	.loc	1 51 27                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:51:27
	sqrt.approx.ftz.f32 	%f199, %f194;
	sqrt.approx.ftz.f32 	%f200, %f195;
	sqrt.approx.ftz.f32 	%f201, %f196;
	sqrt.approx.ftz.f32 	%f202, %f197;
	sqrt.approx.ftz.f32 	%f203, %f198;
	.loc	1 35 36                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:35:36
	mov.b32 	%f204, %r85;
	mov.b32 	%f205, %r84;
	mov.b32 	%f206, %r83;
	mov.b32 	%f207, %r82;
	.loc	1 34 36                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:34:36
	mov.b32 	%f208, %r77;
	mov.b32 	%f209, %r76;
	mov.b32 	%f210, %r75;
	mov.b32 	%f211, %r74;
	.loc	1 24 23                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:24:23
	or.b32  	%r304, %r206, %r209;
	.loc	1 25 21                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:25:21
	setp.lt.s32 	%p73, %r304, 1024;
	.loc	1 52 20                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:52:20
	mov.b32 	%r127, %f200;
	mov.b32 	%r126, %f113;
	// begin inline asm
	div.full.f32 %r125, %r126, %r127;
	// end inline asm
	mov.b32 	%f212, %r125;
	mov.b32 	%r129, %f114;
	// begin inline asm
	div.full.f32 %r128, %r129, %r127;
	// end inline asm
	mov.b32 	%f213, %r128;
	mov.b32 	%r132, %f115;
	// begin inline asm
	div.full.f32 %r131, %r132, %r127;
	// end inline asm
	mov.b32 	%f214, %r131;
	mov.b32 	%r135, %f116;
	// begin inline asm
	div.full.f32 %r134, %r135, %r127;
	// end inline asm
	mov.b32 	%f215, %r134;
	mov.b32 	%r139, %f201;
	mov.b32 	%r138, %f117;
	// begin inline asm
	div.full.f32 %r137, %r138, %r139;
	// end inline asm
	mov.b32 	%f216, %r137;
	mov.b32 	%r141, %f118;
	// begin inline asm
	div.full.f32 %r140, %r141, %r139;
	// end inline asm
	mov.b32 	%f217, %r140;
	mov.b32 	%r144, %f119;
	// begin inline asm
	div.full.f32 %r143, %r144, %r139;
	// end inline asm
	mov.b32 	%f218, %r143;
	mov.b32 	%r147, %f120;
	// begin inline asm
	div.full.f32 %r146, %r147, %r139;
	// end inline asm
	mov.b32 	%f219, %r146;
	mov.b32 	%r151, %f202;
	mov.b32 	%r150, %f121;
	// begin inline asm
	div.full.f32 %r149, %r150, %r151;
	// end inline asm
	mov.b32 	%f220, %r149;
	mov.b32 	%r153, %f122;
	// begin inline asm
	div.full.f32 %r152, %r153, %r151;
	// end inline asm
	mov.b32 	%f221, %r152;
	mov.b32 	%r156, %f123;
	// begin inline asm
	div.full.f32 %r155, %r156, %r151;
	// end inline asm
	mov.b32 	%f222, %r155;
	mov.b32 	%r159, %f124;
	// begin inline asm
	div.full.f32 %r158, %r159, %r151;
	// end inline asm
	mov.b32 	%f223, %r158;
	mov.b32 	%r163, %f203;
	mov.b32 	%r162, %f125;
	// begin inline asm
	div.full.f32 %r161, %r162, %r163;
	// end inline asm
	mov.b32 	%f224, %r161;
	mov.b32 	%r165, %f126;
	// begin inline asm
	div.full.f32 %r164, %r165, %r163;
	// end inline asm
	mov.b32 	%f225, %r164;
	mov.b32 	%r168, %f127;
	// begin inline asm
	div.full.f32 %r167, %r168, %r163;
	// end inline asm
	mov.b32 	%f226, %r167;
	mov.b32 	%r171, %f128;
	// begin inline asm
	div.full.f32 %r170, %r171, %r163;
	// end inline asm
	mov.b32 	%f227, %r170;
	.loc	1 54 20                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:54:20
	fma.rn.f32 	%f228, %f212, %f211, %f207;
	fma.rn.f32 	%f229, %f213, %f210, %f206;
	fma.rn.f32 	%f230, %f214, %f209, %f205;
	fma.rn.f32 	%f231, %f215, %f208, %f204;
	fma.rn.f32 	%f232, %f216, %f211, %f207;
	fma.rn.f32 	%f233, %f217, %f210, %f206;
	fma.rn.f32 	%f234, %f218, %f209, %f205;
	fma.rn.f32 	%f235, %f219, %f208, %f204;
	fma.rn.f32 	%f236, %f220, %f211, %f207;
	fma.rn.f32 	%f237, %f221, %f210, %f206;
	fma.rn.f32 	%f238, %f222, %f209, %f205;
	fma.rn.f32 	%f239, %f223, %f208, %f204;
	fma.rn.f32 	%f240, %f224, %f211, %f207;
	fma.rn.f32 	%f241, %f225, %f210, %f206;
	fma.rn.f32 	%f242, %f226, %f209, %f205;
	fma.rn.f32 	%f243, %f227, %f208, %f204;
	.loc	1 55 25                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:55:25
	add.s64 	%rd12, %rd27, %rd29;
	add.s64 	%rd13, %rd27, %rd30;
	add.s64 	%rd14, %rd27, %rd31;
	add.s64 	%rd15, %rd27, %rd32;
	.loc	1 55 45                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:55:45
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r126, %r129, %r132, %r135 };
	// end inline asm
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd13 + 0 ], { %r138, %r141, %r144, %r147 };
	// end inline asm
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd14 + 0 ], { %r150, %r153, %r156, %r159 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd15 + 0 ], { %r162, %r165, %r168, %r171 };
	// end inline asm
	.loc	1 56 4                          // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:57:28
	mul.wide.s32 	%rd34, %r304, 4;
	add.s64 	%rd16, %rd21, %rd34;
	.loc	1 57 40                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:57:40
	and.b32  	%r305, %r207, 224;
	setp.eq.s32 	%p74, %r305, 0;
	mov.b32 	%r189, %f199;
	and.pred  	%p64, %p74, %p73;
	// begin inline asm
	@%p64 st.global.b32 [ %rd16 + 0 ], { %r189 };
	// end inline asm
	.loc	1 58 25                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:58:25
	add.s64 	%rd17, %rd28, %rd29;
	add.s64 	%rd18, %rd28, %rd30;
	add.s64 	%rd19, %rd28, %rd31;
	add.s64 	%rd20, %rd28, %rd32;
	.loc	1 58 45                         // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:58:45
	mov.b32 	%r190, %f228;
	mov.b32 	%r191, %f229;
	mov.b32 	%r192, %f230;
	mov.b32 	%r193, %f231;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r190, %r191, %r192, %r193 };
	// end inline asm
	mov.b32 	%r194, %f232;
	mov.b32 	%r195, %f233;
	mov.b32 	%r196, %f234;
	mov.b32 	%r197, %f235;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd18 + 0 ], { %r194, %r195, %r196, %r197 };
	// end inline asm
	mov.b32 	%r198, %f236;
	mov.b32 	%r199, %f237;
	mov.b32 	%r200, %f238;
	mov.b32 	%r201, %f239;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd19 + 0 ], { %r198, %r199, %r200, %r201 };
	// end inline asm
	mov.b32 	%r202, %f240;
	mov.b32 	%r203, %f241;
	mov.b32 	%r204, %f242;
	mov.b32 	%r205, %f243;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd20 + 0 ], { %r202, %r203, %r204, %r205 };
	// end inline asm
	.loc	1 58 4                          // cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py:58:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qk/cqkcoh5gyqyjbmhap2bhkfgmknetci5oj3g7nf4pskxyyn7w3daj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 107
.b8 99
.b8 111
.b8 104
.b8 53
.b8 103
.b8 121
.b8 113
.b8 121
.b8 106
.b8 98
.b8 109
.b8 104
.b8 97
.b8 112
.b8 50
.b8 98
.b8 104
.b8 107
.b8 102
.b8 103
.b8 109
.b8 107
.b8 110
.b8 101
.b8 116
.b8 99
.b8 105
.b8 53
.b8 111
.b8 106
.b8 51
.b8 103
.b8 55
.b8 110
.b8 102
.b8 52
.b8 112
.b8 115
.b8 107
.b8 120
.b8 121
.b8 121
.b8 110
.b8 55
.b8 119
.b8 51
.b8 100
.b8 97
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x34 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
