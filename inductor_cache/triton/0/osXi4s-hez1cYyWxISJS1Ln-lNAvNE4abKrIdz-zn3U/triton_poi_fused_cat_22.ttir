#loc = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-96> : tensor<1024xi32> loc(#loc1)
    %cst_0 = arith.constant dense<-64> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-32> : tensor<1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_3 = arith.constant dense<32768> : tensor<1024xi32> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<1024xi64> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1024xi64> loc(#loc1)
    %cst_6 = arith.constant dense<96> : tensor<1024xi64> loc(#loc1)
    %cst_7 = arith.constant dense<131072> : tensor<1024xi32> loc(#loc1)
    %cst_8 = arith.constant dense<128> : tensor<1024xi32> loc(#loc1)
    %cst_9 = arith.constant dense<1024> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_9 : tensor<1024xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_8 : tensor<1024xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_9 : tensor<1024xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_7 : tensor<1024xi32> loc(#loc9)
    %9 = arith.extsi %6 : tensor<1024xi32> to tensor<1024xi64> loc(#loc10)
    %10 = arith.cmpi slt, %9, %cst_6 : tensor<1024xi64> loc(#loc10)
    %11 = arith.cmpi slt, %9, %cst_5 : tensor<1024xi64> loc(#loc11)
    %12 = arith.andi %11, %10 : tensor<1024xi1> loc(#loc12)
    %13 = arith.cmpi slt, %9, %cst_4 : tensor<1024xi64> loc(#loc13)
    %14 = arith.andi %13, %12 : tensor<1024xi1> loc(#loc14)
    %15 = arith.muli %6, %cst_9 : tensor<1024xi32> loc(#loc15)
    %16 = arith.addi %7, %15 : tensor<1024xi32> loc(#loc16)
    %17 = arith.muli %8, %cst_3 : tensor<1024xi32> loc(#loc17)
    %18 = arith.addi %16, %17 : tensor<1024xi32> loc(#loc18)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc19)
    %20 = tt.addptr %19, %18 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc19)
    %21 = tt.load %20, %14, %cst_2 : tensor<1024x!tt.ptr<f32>> loc(#loc20)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc21)
    %23 = tt.addptr %22, %6 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc21)
    %24 = tt.load %23, %14, %cst_2 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc22)
    %25 = arith.addf %21, %24 : tensor<1024xf32> loc(#loc23)
    %26 = arith.select %14, %25, %cst_2 : tensor<1024xi1>, tensor<1024xf32> loc(#loc24)
    %27 = arith.cmpi sge, %9, %cst_4 : tensor<1024xi64> loc(#loc25)
    %28 = arith.andi %27, %12 : tensor<1024xi1> loc(#loc26)
    %29 = arith.addi %6, %cst_1 : tensor<1024xi32> loc(#loc27)
    %30 = arith.muli %29, %cst_9 : tensor<1024xi32> loc(#loc28)
    %31 = arith.addi %7, %30 : tensor<1024xi32> loc(#loc29)
    %32 = arith.addi %31, %17 : tensor<1024xi32> loc(#loc30)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc31)
    %34 = tt.addptr %33, %32 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc31)
    %35 = tt.load %34, %28, %cst_2 : tensor<1024x!tt.ptr<f32>> loc(#loc32)
    %36 = arith.select %13, %26, %35 : tensor<1024xi1>, tensor<1024xf32> loc(#loc33)
    %37 = arith.select %12, %36, %cst_2 : tensor<1024xi1>, tensor<1024xf32> loc(#loc34)
    %38 = arith.cmpi sge, %9, %cst_5 : tensor<1024xi64> loc(#loc35)
    %39 = arith.andi %38, %10 : tensor<1024xi1> loc(#loc36)
    %40 = arith.addi %6, %cst_0 : tensor<1024xi32> loc(#loc37)
    %41 = arith.muli %40, %cst_9 : tensor<1024xi32> loc(#loc38)
    %42 = arith.addi %7, %41 : tensor<1024xi32> loc(#loc39)
    %43 = arith.addi %42, %17 : tensor<1024xi32> loc(#loc40)
    %44 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc41)
    %45 = tt.addptr %44, %43 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc41)
    %46 = tt.load %45, %39, %cst_2 : tensor<1024x!tt.ptr<f32>> loc(#loc42)
    %47 = arith.select %11, %37, %46 : tensor<1024xi1>, tensor<1024xf32> loc(#loc43)
    %48 = arith.cmpi sge, %9, %cst_6 : tensor<1024xi64> loc(#loc44)
    %49 = arith.addi %6, %cst : tensor<1024xi32> loc(#loc45)
    %50 = arith.muli %49, %cst_9 : tensor<1024xi32> loc(#loc46)
    %51 = arith.addi %7, %50 : tensor<1024xi32> loc(#loc47)
    %52 = arith.addi %51, %17 : tensor<1024xi32> loc(#loc48)
    %53 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc49)
    %54 = tt.addptr %53, %52 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc49)
    %55 = tt.load %54, %48, %cst_2 : tensor<1024x!tt.ptr<f32>> loc(#loc50)
    %56 = arith.select %10, %47, %55 : tensor<1024xi1>, tensor<1024xf32> loc(#loc56)
    %57 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc53)
    %58 = tt.addptr %57, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc53)
    tt.store %58, %56 : tensor<1024x!tt.ptr<f32>> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":21:28)
#loc3 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":21:33)
#loc4 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":22:36)
#loc5 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":22:23)
#loc6 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":24:21)
#loc7 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":24:29)
#loc8 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":25:19)
#loc9 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":26:19)
#loc10 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":32:18)
#loc11 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":37:18)
#loc12 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":38:19)
#loc13 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":43:20)
#loc14 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":44:20)
#loc15 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:42)
#loc16 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:36)
#loc17 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:54)
#loc18 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:48)
#loc19 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:31)
#loc20 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":45:59)
#loc21 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":46:31)
#loc22 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":46:36)
#loc23 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":47:20)
#loc24 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":49:35)
#loc25 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":50:21)
#loc26 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":53:20)
#loc27 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:51)
#loc28 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:42)
#loc29 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:36)
#loc30 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:58)
#loc31 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:31)
#loc32 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":54:69)
#loc33 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":55:35)
#loc34 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":57:35)
#loc35 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":58:20)
#loc36 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":61:20)
#loc37 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:51)
#loc38 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:42)
#loc39 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:36)
#loc40 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:58)
#loc41 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:31)
#loc42 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":62:69)
#loc43 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":63:34)
#loc44 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":66:20)
#loc45 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:50)
#loc46 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:42)
#loc47 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:36)
#loc48 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:56)
#loc49 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:31)
#loc50 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":69:67)
#loc51 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":70:34)
#loc52 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":65:34)
#loc53 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":71:25)
#loc54 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":71:37)
#loc55 = loc("inductor_cache/hk/chked3yds32xv6dpb3a5rpzrkjhxe7phcebpvxzzaaorfyub4llg.py":71:4)
#loc56 = loc(fused[#loc51, #loc52])
