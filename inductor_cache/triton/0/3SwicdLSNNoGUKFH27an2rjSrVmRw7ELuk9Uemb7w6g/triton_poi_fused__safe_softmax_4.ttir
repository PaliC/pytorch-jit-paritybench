#loc = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":19:0)
module {
  tt.func public @triton_poi_fused__safe_softmax_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<128xf32> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<128xi32> loc(#loc7)
    %7 = arith.muli %6, %cst_6 : tensor<128xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc9)
    %10 = tt.load %9, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.addi %7, %cst_5 : tensor<128xi32> loc(#loc11)
    %12 = tt.addptr %8, %11 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc12)
    %13 = tt.load %12, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.addi %7, %cst_4 : tensor<128xi32> loc(#loc14)
    %15 = tt.addptr %8, %14 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc15)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %17 = arith.addi %7, %cst_3 : tensor<128xi32> loc(#loc17)
    %18 = tt.addptr %8, %17 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc18)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc19)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %20, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc20)
    %22 = tt.load %21, %5 : tensor<128x!tt.ptr<f32>> loc(#loc21)
    %23 = tt.addptr %20, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc22)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc23)
    %25 = tt.addptr %20, %11 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc24)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %20, %14 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc26)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc27)
    %29 = tt.addptr %20, %17 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc28)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc29)
    %31 = arith.cmpf oeq, %10, %cst_2 : tensor<128xf32> loc(#loc30)
    %32 = arith.extui %31 : tensor<128xi1> to tensor<128xi32> loc(#loc31)
    %33 = arith.cmpi eq, %32, %cst_1 : tensor<128xi32> loc(#loc31)
    %34 = arith.extui %33 : tensor<128xi1> to tensor<128xi64> loc(#loc32)
    %35 = arith.cmpi ne, %34, %cst : tensor<128xi64> loc(#loc33)
    %36 = arith.cmpf oeq, %13, %cst_2 : tensor<128xf32> loc(#loc34)
    %37 = arith.extui %36 : tensor<128xi1> to tensor<128xi32> loc(#loc35)
    %38 = arith.cmpi eq, %37, %cst_1 : tensor<128xi32> loc(#loc35)
    %39 = arith.extui %38 : tensor<128xi1> to tensor<128xi64> loc(#loc36)
    %40 = arith.cmpi ne, %39, %cst : tensor<128xi64> loc(#loc37)
    %41 = arith.ori %35, %40 : tensor<128xi1> loc(#loc38)
    %42 = arith.cmpf oeq, %16, %cst_2 : tensor<128xf32> loc(#loc39)
    %43 = arith.extui %42 : tensor<128xi1> to tensor<128xi32> loc(#loc40)
    %44 = arith.cmpi eq, %43, %cst_1 : tensor<128xi32> loc(#loc40)
    %45 = arith.extui %44 : tensor<128xi1> to tensor<128xi64> loc(#loc41)
    %46 = arith.cmpi ne, %45, %cst : tensor<128xi64> loc(#loc42)
    %47 = arith.ori %41, %46 : tensor<128xi1> loc(#loc43)
    %48 = arith.cmpf oeq, %19, %cst_2 : tensor<128xf32> loc(#loc44)
    %49 = arith.extui %48 : tensor<128xi1> to tensor<128xi32> loc(#loc45)
    %50 = arith.cmpi eq, %49, %cst_1 : tensor<128xi32> loc(#loc45)
    %51 = arith.extui %50 : tensor<128xi1> to tensor<128xi64> loc(#loc46)
    %52 = arith.cmpi ne, %51, %cst : tensor<128xi64> loc(#loc47)
    %53 = arith.ori %47, %52 : tensor<128xi1> loc(#loc48)
    %54 = arith.extui %53 : tensor<128xi1> to tensor<128xi32> loc(#loc49)
    %55 = arith.cmpi eq, %54, %cst_1 : tensor<128xi32> loc(#loc49)
    %56 = arith.addf %24, %26 : tensor<128xf32> loc(#loc50)
    %57 = arith.addf %56, %28 : tensor<128xf32> loc(#loc51)
    %58 = arith.addf %57, %30 : tensor<128xf32> loc(#loc52)
    %59 = arith.divf %22, %58 : tensor<128xf32> loc(#loc53)
    %60 = arith.select %55, %cst_0, %59 : tensor<128xi1>, tensor<128xf32> loc(#loc54)
    %61 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc55)
    %62 = tt.addptr %61, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc55)
    tt.store %62, %60, %5 : tensor<128x!tt.ptr<f32>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":21:28)
#loc3 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":21:33)
#loc4 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":22:36)
#loc5 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":22:23)
#loc6 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":23:21)
#loc7 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":24:19)
#loc8 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":26:32)
#loc9 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":26:30)
#loc10 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":26:37)
#loc11 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":27:34)
#loc12 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":27:30)
#loc13 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":27:41)
#loc14 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":28:35)
#loc15 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":28:31)
#loc16 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":28:42)
#loc17 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":29:35)
#loc18 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":29:31)
#loc19 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":29:42)
#loc20 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":30:31)
#loc21 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":30:36)
#loc22 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":31:31)
#loc23 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":31:38)
#loc24 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":32:31)
#loc25 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":32:42)
#loc26 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":33:31)
#loc27 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":33:42)
#loc28 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":34:31)
#loc29 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":34:42)
#loc30 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":36:19)
#loc31 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":37:19)
#loc32 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":38:19)
#loc33 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":39:20)
#loc34 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":40:19)
#loc35 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":41:19)
#loc36 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":42:19)
#loc37 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":43:21)
#loc38 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":44:19)
#loc39 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":45:21)
#loc40 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":46:21)
#loc41 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":47:21)
#loc42 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":48:22)
#loc43 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":49:20)
#loc44 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":50:21)
#loc45 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":51:21)
#loc46 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":52:21)
#loc47 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":53:22)
#loc48 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":54:20)
#loc49 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":55:21)
#loc50 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":56:20)
#loc51 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":57:20)
#loc52 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":58:20)
#loc53 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":59:20)
#loc54 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":61:35)
#loc55 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":62:25)
#loc56 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":62:37)
#loc57 = loc("inductor_cache/cw/ccwo2wh63cjn7cvmuwgfw5xwnkfggkoed7hakwhjpvykk6kmug7a.py":62:4)
