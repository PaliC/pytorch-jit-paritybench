#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<0xFF800000> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<33280> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<32768> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<-512> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<-32256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<-32768> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<65536> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<1024> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-33280> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<0> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<512> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<32> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<16384> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_16 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_15 : tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_14 : tensor<1024xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_15 : tensor<1024xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %4, %cst_14 : tensor<1024xi32, #blocked> loc(#loc10)
    %10 = arith.muli %6, %cst_13 : tensor<1024xi32, #blocked> loc(#loc11)
    %11 = arith.addi %10, %cst_12 : tensor<1024xi32, #blocked> loc(#loc12)
    %12 = arith.extsi %11 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc13)
    %13 = arith.cmpi sge, %12, %cst_11 : tensor<1024xi64, #blocked> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_10 : tensor<1024xi64, #blocked> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<1024xi1, #blocked> loc(#loc15)
    %16 = arith.muli %8, %cst_13 : tensor<1024xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %cst_12 : tensor<1024xi32, #blocked> loc(#loc17)
    %18 = arith.extsi %17 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc18)
    %19 = arith.cmpi sge, %18, %cst_11 : tensor<1024xi64, #blocked> loc(#loc18)
    %20 = arith.cmpi slt, %18, %cst_10 : tensor<1024xi64, #blocked> loc(#loc19)
    %21 = arith.andi %19, %20 : tensor<1024xi1, #blocked> loc(#loc20)
    %22 = arith.andi %15, %21 : tensor<1024xi1, #blocked> loc(#loc21)
    %23 = arith.addi %9, %cst_9 : tensor<1024xi32, #blocked> loc(#loc22)
    %24 = arith.muli %8, %cst_8 : tensor<1024xi32, #blocked> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<1024xi32, #blocked> loc(#loc24)
    %26 = arith.muli %5, %cst_7 : tensor<1024xi32, #blocked> loc(#loc25)
    %27 = arith.addi %25, %26 : tensor<1024xi32, #blocked> loc(#loc26)
    %28 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc27)
    %29 = tt.addptr %28, %27 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc27)
    %30 = tt.load %29, %22, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc28)
    %31 = arith.extsi %16 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc29)
    %32 = arith.cmpi sge, %31, %cst_11 : tensor<1024xi64, #blocked> loc(#loc29)
    %33 = arith.cmpi slt, %31, %cst_10 : tensor<1024xi64, #blocked> loc(#loc30)
    %34 = arith.andi %32, %33 : tensor<1024xi1, #blocked> loc(#loc31)
    %35 = arith.andi %15, %34 : tensor<1024xi1, #blocked> loc(#loc32)
    %36 = arith.addi %9, %cst_6 : tensor<1024xi32, #blocked> loc(#loc33)
    %37 = arith.addi %36, %24 : tensor<1024xi32, #blocked> loc(#loc34)
    %38 = arith.addi %37, %26 : tensor<1024xi32, #blocked> loc(#loc35)
    %39 = tt.addptr %28, %38 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc36)
    %40 = tt.load %39, %35, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc37)
    %41 = arith.cmpf ogt, %40, %30 : tensor<1024xf32, #blocked> loc(#loc105)
    %42 = arith.cmpf une, %40, %40 : tensor<1024xf32, #blocked> loc(#loc106)
    %43 = arith.ori %41, %42 : tensor<1024xi1, #blocked> loc(#loc107)
    %44 = arith.select %43, %40, %30 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc108)
    %45 = arith.addi %16, %cst_5 : tensor<1024xi32, #blocked> loc(#loc43)
    %46 = arith.extsi %45 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc44)
    %47 = arith.cmpi sge, %46, %cst_11 : tensor<1024xi64, #blocked> loc(#loc44)
    %48 = arith.cmpi slt, %46, %cst_10 : tensor<1024xi64, #blocked> loc(#loc45)
    %49 = arith.andi %47, %48 : tensor<1024xi1, #blocked> loc(#loc46)
    %50 = arith.andi %15, %49 : tensor<1024xi1, #blocked> loc(#loc47)
    %51 = arith.addi %9, %cst_4 : tensor<1024xi32, #blocked> loc(#loc48)
    %52 = arith.addi %51, %24 : tensor<1024xi32, #blocked> loc(#loc49)
    %53 = arith.addi %52, %26 : tensor<1024xi32, #blocked> loc(#loc50)
    %54 = tt.addptr %28, %53 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc51)
    %55 = tt.load %54, %50, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc52)
    %56 = arith.cmpf ogt, %55, %44 : tensor<1024xf32, #blocked> loc(#loc109)
    %57 = arith.cmpf une, %55, %55 : tensor<1024xf32, #blocked> loc(#loc110)
    %58 = arith.ori %56, %57 : tensor<1024xi1, #blocked> loc(#loc111)
    %59 = arith.select %58, %55, %44 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc112)
    %60 = arith.extsi %10 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc54)
    %61 = arith.cmpi sge, %60, %cst_11 : tensor<1024xi64, #blocked> loc(#loc54)
    %62 = arith.cmpi slt, %60, %cst_10 : tensor<1024xi64, #blocked> loc(#loc55)
    %63 = arith.andi %61, %62 : tensor<1024xi1, #blocked> loc(#loc56)
    %64 = arith.andi %63, %21 : tensor<1024xi1, #blocked> loc(#loc57)
    %65 = arith.addi %9, %cst_3 : tensor<1024xi32, #blocked> loc(#loc58)
    %66 = arith.addi %65, %24 : tensor<1024xi32, #blocked> loc(#loc59)
    %67 = arith.addi %66, %26 : tensor<1024xi32, #blocked> loc(#loc60)
    %68 = tt.addptr %28, %67 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc61)
    %69 = tt.load %68, %64, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc62)
    %70 = arith.cmpf ogt, %69, %59 : tensor<1024xf32, #blocked> loc(#loc113)
    %71 = arith.cmpf une, %69, %69 : tensor<1024xf32, #blocked> loc(#loc114)
    %72 = arith.ori %70, %71 : tensor<1024xi1, #blocked> loc(#loc115)
    %73 = arith.select %72, %69, %59 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc116)
    %74 = arith.andi %63, %34 : tensor<1024xi1, #blocked> loc(#loc64)
    %75 = arith.addi %9, %24 : tensor<1024xi32, #blocked> loc(#loc65)
    %76 = arith.addi %75, %26 : tensor<1024xi32, #blocked> loc(#loc66)
    %77 = tt.addptr %28, %76 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc67)
    %78 = tt.load %77, %74, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc68)
    %79 = arith.cmpf ogt, %78, %73 : tensor<1024xf32, #blocked> loc(#loc117)
    %80 = arith.cmpf une, %78, %78 : tensor<1024xf32, #blocked> loc(#loc118)
    %81 = arith.ori %79, %80 : tensor<1024xi1, #blocked> loc(#loc119)
    %82 = arith.select %81, %78, %73 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc120)
    %83 = arith.andi %63, %49 : tensor<1024xi1, #blocked> loc(#loc70)
    %84 = arith.addi %9, %cst_14 : tensor<1024xi32, #blocked> loc(#loc71)
    %85 = arith.addi %84, %24 : tensor<1024xi32, #blocked> loc(#loc72)
    %86 = arith.addi %85, %26 : tensor<1024xi32, #blocked> loc(#loc73)
    %87 = tt.addptr %28, %86 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc74)
    %88 = tt.load %87, %83, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc75)
    %89 = arith.cmpf ogt, %88, %82 : tensor<1024xf32, #blocked> loc(#loc121)
    %90 = arith.cmpf une, %88, %88 : tensor<1024xf32, #blocked> loc(#loc122)
    %91 = arith.ori %89, %90 : tensor<1024xi1, #blocked> loc(#loc123)
    %92 = arith.select %91, %88, %82 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc124)
    %93 = arith.addi %10, %cst_5 : tensor<1024xi32, #blocked> loc(#loc77)
    %94 = arith.extsi %93 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc78)
    %95 = arith.cmpi sge, %94, %cst_11 : tensor<1024xi64, #blocked> loc(#loc78)
    %96 = arith.cmpi slt, %94, %cst_10 : tensor<1024xi64, #blocked> loc(#loc79)
    %97 = arith.andi %95, %96 : tensor<1024xi1, #blocked> loc(#loc80)
    %98 = arith.andi %97, %21 : tensor<1024xi1, #blocked> loc(#loc81)
    %99 = arith.addi %9, %cst_2 : tensor<1024xi32, #blocked> loc(#loc82)
    %100 = arith.addi %99, %24 : tensor<1024xi32, #blocked> loc(#loc83)
    %101 = arith.addi %100, %26 : tensor<1024xi32, #blocked> loc(#loc84)
    %102 = tt.addptr %28, %101 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc85)
    %103 = tt.load %102, %98, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc86)
    %104 = arith.cmpf ogt, %103, %92 : tensor<1024xf32, #blocked> loc(#loc125)
    %105 = arith.cmpf une, %103, %103 : tensor<1024xf32, #blocked> loc(#loc126)
    %106 = arith.ori %104, %105 : tensor<1024xi1, #blocked> loc(#loc127)
    %107 = arith.select %106, %103, %92 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc128)
    %108 = arith.andi %97, %34 : tensor<1024xi1, #blocked> loc(#loc88)
    %109 = arith.addi %9, %cst_1 : tensor<1024xi32, #blocked> loc(#loc89)
    %110 = arith.addi %109, %24 : tensor<1024xi32, #blocked> loc(#loc90)
    %111 = arith.addi %110, %26 : tensor<1024xi32, #blocked> loc(#loc91)
    %112 = tt.addptr %28, %111 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc92)
    %113 = tt.load %112, %108, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc93)
    %114 = arith.cmpf ogt, %113, %107 : tensor<1024xf32, #blocked> loc(#loc129)
    %115 = arith.cmpf une, %113, %113 : tensor<1024xf32, #blocked> loc(#loc130)
    %116 = arith.ori %114, %115 : tensor<1024xi1, #blocked> loc(#loc131)
    %117 = arith.select %116, %113, %107 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc132)
    %118 = arith.andi %97, %49 : tensor<1024xi1, #blocked> loc(#loc95)
    %119 = arith.addi %9, %cst_0 : tensor<1024xi32, #blocked> loc(#loc96)
    %120 = arith.addi %119, %24 : tensor<1024xi32, #blocked> loc(#loc97)
    %121 = arith.addi %120, %26 : tensor<1024xi32, #blocked> loc(#loc98)
    %122 = tt.addptr %28, %121 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc99)
    %123 = tt.load %122, %118, %cst : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc100)
    %124 = arith.cmpf ogt, %123, %117 : tensor<1024xf32, #blocked> loc(#loc133)
    %125 = arith.cmpf une, %123, %123 : tensor<1024xf32, #blocked> loc(#loc134)
    %126 = arith.ori %124, %125 : tensor<1024xi1, #blocked> loc(#loc135)
    %127 = arith.select %126, %123, %117 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc136)
    %128 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc102)
    %129 = tt.addptr %128, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc102)
    tt.store %129, %127 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc103)
    tt.return loc(#loc104)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":21:28)
#loc3 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":21:33)
#loc4 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":22:36)
#loc5 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":22:23)
#loc6 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":24:21)
#loc7 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":24:30)
#loc8 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":25:21)
#loc9 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":25:28)
#loc10 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":26:19)
#loc11 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":29:20)
#loc12 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":29:18)
#loc13 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":31:19)
#loc14 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":33:18)
#loc15 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":34:18)
#loc16 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":35:20)
#loc17 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":35:18)
#loc18 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":36:19)
#loc19 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":37:18)
#loc20 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":38:18)
#loc21 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":39:19)
#loc22 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:42)
#loc23 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:52)
#loc24 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:47)
#loc25 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:63)
#loc26 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:57)
#loc27 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:31)
#loc28 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":40:68)
#loc29 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":42:21)
#loc30 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":43:20)
#loc31 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":44:20)
#loc32 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":45:19)
#loc33 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":46:42)
#loc34 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":46:47)
#loc35 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":46:57)
#loc36 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":46:31)
#loc37 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":46:68)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":47:42)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc43 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":48:16)
#loc44 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":49:21)
#loc45 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":50:20)
#loc46 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":51:20)
#loc47 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":52:19)
#loc48 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":53:42)
#loc49 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":53:47)
#loc50 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":53:57)
#loc51 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":53:31)
#loc52 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":53:68)
#loc53 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":54:42)
#loc54 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":56:21)
#loc55 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":57:20)
#loc56 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":58:20)
#loc57 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":59:20)
#loc58 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":60:40)
#loc59 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":60:45)
#loc60 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":60:55)
#loc61 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":60:31)
#loc62 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":60:66)
#loc63 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":61:42)
#loc64 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":62:20)
#loc65 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":63:36)
#loc66 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":63:46)
#loc67 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":63:31)
#loc68 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":63:57)
#loc69 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":64:42)
#loc70 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":65:20)
#loc71 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":66:37)
#loc72 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":66:42)
#loc73 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":66:52)
#loc74 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":66:31)
#loc75 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":66:63)
#loc76 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":67:42)
#loc77 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":68:16)
#loc78 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":69:21)
#loc79 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":70:20)
#loc80 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":71:20)
#loc81 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":72:20)
#loc82 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":73:39)
#loc83 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":73:44)
#loc84 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":73:54)
#loc85 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":73:31)
#loc86 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":73:65)
#loc87 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":74:42)
#loc88 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":75:20)
#loc89 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":76:39)
#loc90 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":76:44)
#loc91 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":76:54)
#loc92 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":76:31)
#loc93 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":76:65)
#loc94 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":77:42)
#loc95 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":78:20)
#loc96 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":79:39)
#loc97 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":79:44)
#loc98 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":79:54)
#loc99 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":79:31)
#loc100 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":79:65)
#loc101 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":80:42)
#loc102 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":81:25)
#loc103 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":81:37)
#loc104 = loc("inductor_cache/bt/cbt5dhejyt7mzl3qd2zp4fw5fqnkbuaemh3kxxzwpgx4qlsqsgp4.py":81:4)
#loc105 = loc(callsite(#loc38 at #loc39))
#loc106 = loc(callsite(#loc40 at #loc39))
#loc107 = loc(callsite(#loc41 at #loc39))
#loc108 = loc(callsite(#loc42 at #loc39))
#loc109 = loc(callsite(#loc38 at #loc53))
#loc110 = loc(callsite(#loc40 at #loc53))
#loc111 = loc(callsite(#loc41 at #loc53))
#loc112 = loc(callsite(#loc42 at #loc53))
#loc113 = loc(callsite(#loc38 at #loc63))
#loc114 = loc(callsite(#loc40 at #loc63))
#loc115 = loc(callsite(#loc41 at #loc63))
#loc116 = loc(callsite(#loc42 at #loc63))
#loc117 = loc(callsite(#loc38 at #loc69))
#loc118 = loc(callsite(#loc40 at #loc69))
#loc119 = loc(callsite(#loc41 at #loc69))
#loc120 = loc(callsite(#loc42 at #loc69))
#loc121 = loc(callsite(#loc38 at #loc76))
#loc122 = loc(callsite(#loc40 at #loc76))
#loc123 = loc(callsite(#loc41 at #loc76))
#loc124 = loc(callsite(#loc42 at #loc76))
#loc125 = loc(callsite(#loc38 at #loc87))
#loc126 = loc(callsite(#loc40 at #loc87))
#loc127 = loc(callsite(#loc41 at #loc87))
#loc128 = loc(callsite(#loc42 at #loc87))
#loc129 = loc(callsite(#loc38 at #loc94))
#loc130 = loc(callsite(#loc40 at #loc94))
#loc131 = loc(callsite(#loc41 at #loc94))
#loc132 = loc(callsite(#loc42 at #loc94))
#loc133 = loc(callsite(#loc38 at #loc101))
#loc134 = loc(callsite(#loc40 at #loc101))
#loc135 = loc(callsite(#loc41 at #loc101))
#loc136 = loc(callsite(#loc42 at #loc101))
