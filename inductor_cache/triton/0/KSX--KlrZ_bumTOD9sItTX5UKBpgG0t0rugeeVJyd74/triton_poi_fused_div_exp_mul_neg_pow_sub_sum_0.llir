; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_div_exp_mul_neg_pow_sub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 62, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 64, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = mul i32 %13, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 4, !dbg !17
  %16 = shl i32 %13, 6, !dbg !18
  %17 = add i32 %16, %.decomposed, !dbg !19
  %18 = sext i32 %17 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %12) #1, !dbg !21
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !21
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !21
  %23 = bitcast i32 %21 to float, !dbg !21
  %24 = bitcast i32 %22 to float, !dbg !21
  %25 = sext i32 %15 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !22
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !23
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !23
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !23
  %30 = bitcast i32 %28 to float, !dbg !23
  %31 = bitcast i32 %29 to float, !dbg !23
  %32 = add i32 %17, 16, !dbg !24
  %33 = sext i32 %32 to i64, !dbg !25
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 %12) #1, !dbg !26
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !26
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !26
  %38 = bitcast i32 %36 to float, !dbg !26
  %39 = bitcast i32 %37 to float, !dbg !26
  %40 = add i32 %17, 32, !dbg !27
  %41 = sext i32 %40 to i64, !dbg !28
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !28
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %12) #1, !dbg !29
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !29
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !29
  %46 = bitcast i32 %44 to float, !dbg !29
  %47 = bitcast i32 %45 to float, !dbg !29
  %48 = add i32 %17, 48, !dbg !30
  %49 = sext i32 %48 to i64, !dbg !31
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !31
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %50, i1 %12) #1, !dbg !32
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !32
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !32
  %54 = bitcast i32 %52 to float, !dbg !32
  %55 = bitcast i32 %53 to float, !dbg !32
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !33
  %57 = bitcast i32 %56 to float, !dbg !33
  %58 = fsub float %23, %30, !dbg !34
  %59 = fsub float %24, %31, !dbg !34
  %60 = fmul float %58, %58, !dbg !35
  %61 = fmul float %59, %59, !dbg !35
  %62 = fsub float %38, %30, !dbg !36
  %63 = fsub float %39, %31, !dbg !36
  %64 = fmul float %62, %62, !dbg !37
  %65 = fmul float %63, %63, !dbg !37
  %66 = fadd float %60, %64, !dbg !38
  %67 = fadd float %61, %65, !dbg !38
  %68 = fsub float %46, %30, !dbg !39
  %69 = fsub float %47, %31, !dbg !39
  %70 = fmul float %68, %68, !dbg !40
  %71 = fmul float %69, %69, !dbg !40
  %72 = fadd float %66, %70, !dbg !41
  %73 = fadd float %67, %71, !dbg !41
  %74 = fsub float %54, %30, !dbg !42
  %75 = fsub float %55, %31, !dbg !42
  %76 = fmul float %74, %74, !dbg !43
  %77 = fmul float %75, %75, !dbg !43
  %78 = fadd float %72, %76, !dbg !44
  %79 = fadd float %73, %77, !dbg !44
  %80 = fsub float 0.000000e+00, %78, !dbg !45
  %81 = fsub float 0.000000e+00, %79, !dbg !45
  %82 = fmul float %57, %57, !dbg !46
  %83 = fmul float %82, 2.000000e+00, !dbg !47
  %84 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %80, float %83) #1, !dbg !48
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %81, float %83) #1, !dbg !48
  %86 = fmul float %84, 0x3FF7154760000000, !dbg !49
  %87 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %86) #1, !dbg !49
  %88 = fmul float %85, 0x3FF7154760000000, !dbg !49
  %89 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %88) #1, !dbg !49
  %90 = sext i32 %11 to i64, !dbg !50
  %91 = getelementptr float, ptr addrspace(1) %3, i64 %90, !dbg !50
  %92 = bitcast float %87 to i32, !dbg !51
  %93 = bitcast float %89 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %92, i32 %93, ptr addrspace(1) %91, i1 %12) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cr2u3jofgt2cfcw2znpscdqfykrawpc4tvssy5tigcoc4nh53kjy.py", directory: "inductor_cache/r2")
!4 = !{ptr @triton_poi_fused_div_exp_mul_neg_pow_sub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_div_exp_mul_neg_pow_sub_sum_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_div_exp_mul_neg_pow_sub_sum_0", linkageName: "triton_poi_fused_div_exp_mul_neg_pow_sub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 38, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 43, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 40, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 48, scope: !7)
!27 = !DILocation(line: 31, column: 40, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 48, scope: !7)
!30 = !DILocation(line: 32, column: 41, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 49, scope: !7)
!33 = !DILocation(line: 33, column: 20, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 36, column: 18, scope: !7)
!36 = !DILocation(line: 37, column: 18, scope: !7)
!37 = !DILocation(line: 38, column: 18, scope: !7)
!38 = !DILocation(line: 39, column: 18, scope: !7)
!39 = !DILocation(line: 40, column: 18, scope: !7)
!40 = !DILocation(line: 41, column: 19, scope: !7)
!41 = !DILocation(line: 42, column: 19, scope: !7)
!42 = !DILocation(line: 43, column: 20, scope: !7)
!43 = !DILocation(line: 44, column: 20, scope: !7)
!44 = !DILocation(line: 45, column: 20, scope: !7)
!45 = !DILocation(line: 46, column: 13, scope: !7)
!46 = !DILocation(line: 47, column: 20, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 50, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 24, scope: !7)
!50 = !DILocation(line: 52, column: 25, scope: !7)
!51 = !DILocation(line: 52, column: 37, scope: !7)
!52 = !DILocation(line: 52, column: 4, scope: !7)
