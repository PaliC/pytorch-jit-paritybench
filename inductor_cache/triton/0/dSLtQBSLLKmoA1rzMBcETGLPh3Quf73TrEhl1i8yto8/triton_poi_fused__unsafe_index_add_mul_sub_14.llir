; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_14(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 256, !dbg !14
  %.frozen = freeze i32 %16, !dbg !15
  %18 = sdiv i32 %.frozen, 4, !dbg !15
  %19 = srem i32 %18, 4, !dbg !16
  %20 = mul i32 %18, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %20, !dbg !17
  %21 = sdiv i32 %16, 16, !dbg !18
  %.frozen1 = freeze i32 %16, !dbg !19
  %22 = sdiv i32 %.frozen1, 64, !dbg !19
  %23 = mul i32 %22, 64, !dbg !20
  %.decomposed2 = sub i32 %.frozen1, %23, !dbg !20
  %24 = sext i32 %19 to i64, !dbg !21
  %25 = getelementptr i64, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %25, i1 %17) #1, !dbg !22
  %27 = sext i32 %.decomposed to i64, !dbg !23
  %28 = getelementptr i64, ptr addrspace(1) %1, i64 %27, !dbg !23
  %29 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %28, i1 %17) #1, !dbg !24
  %30 = getelementptr i64, ptr addrspace(1) %3, i64 %27, !dbg !25
  %31 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %30, i1 %17) #1, !dbg !26
  %32 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %17) #1, !dbg !28
  %34 = getelementptr i64, ptr addrspace(1) %5, i64 %24, !dbg !29
  %35 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %34, i1 %17) #1, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !31
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %17) #1, !dbg !32
  %38 = bitcast i32 %37 to float, !dbg !32
  %39 = add i64 %26, 5, !dbg !33
  %40 = icmp slt i64 %26, 0, !dbg !34
  %41 = select i1 %40, i64 %39, i64 %26, !dbg !35
  %42 = add i64 %29, 5, !dbg !36
  %43 = icmp slt i64 %29, 0, !dbg !37
  %44 = select i1 %43, i64 %42, i64 %29, !dbg !38
  %45 = mul i64 %41, 5, !dbg !39
  %46 = mul i32 %21, 25, !dbg !40
  %47 = sext i32 %46 to i64, !dbg !41
  %48 = add i64 %45, %47, !dbg !42
  %49 = add i64 %48, %44, !dbg !41
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %49, !dbg !43
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %17) #1, !dbg !44
  %52 = add i64 %31, 5, !dbg !45
  %53 = icmp slt i64 %31, 0, !dbg !46
  %54 = select i1 %53, i64 %52, i64 %31, !dbg !47
  %55 = add i64 %48, %54, !dbg !48
  %56 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !49
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %17) #1, !dbg !50
  %58 = add i64 %35, 5, !dbg !51
  %59 = icmp slt i64 %35, 0, !dbg !52
  %60 = select i1 %59, i64 %58, i64 %35, !dbg !53
  %61 = mul i64 %60, 5, !dbg !54
  %62 = add i64 %44, %47, !dbg !55
  %63 = add i64 %62, %61, !dbg !56
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %63, !dbg !57
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %17) #1, !dbg !58
  %66 = add i64 %54, %47, !dbg !59
  %67 = add i64 %66, %61, !dbg !60
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %67, !dbg !61
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %17) #1, !dbg !62
  %70 = insertelement <2 x i32> poison, i32 %65, i64 0, !dbg !58
  %71 = insertelement <2 x i32> %70, i32 %51, i64 1, !dbg !58
  %72 = bitcast <2 x i32> %71 to <2 x float>, !dbg !58
  %73 = insertelement <2 x i32> poison, i32 %69, i64 0, !dbg !62
  %74 = insertelement <2 x i32> %73, i32 %57, i64 1, !dbg !62
  %75 = bitcast <2 x i32> %74 to <2 x float>, !dbg !62
  %76 = fsub <2 x float> %75, %72, !dbg !63
  %77 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !64
  %78 = bitcast <2 x i32> %77 to <2 x float>, !dbg !64
  %79 = shufflevector <2 x float> %78, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !64
  %80 = fmul <2 x float> %76, %79, !dbg !64
  %81 = fadd <2 x float> %80, %72, !dbg !65
  %82 = extractelement <2 x float> %81, i64 0, !dbg !66
  %83 = extractelement <2 x float> %81, i64 1, !dbg !67
  %84 = fsub float %82, %83, !dbg !66
  %85 = fmul float %84, %38, !dbg !68
  %86 = fadd float %83, %85, !dbg !67
  %87 = getelementptr float, ptr addrspace(1) %7, i64 %49, !dbg !69
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %87, i1 %17) #1, !dbg !70
  %89 = getelementptr float, ptr addrspace(1) %7, i64 %55, !dbg !71
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 %17) #1, !dbg !72
  %91 = getelementptr float, ptr addrspace(1) %7, i64 %63, !dbg !73
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 %17) #1, !dbg !74
  %93 = getelementptr float, ptr addrspace(1) %7, i64 %67, !dbg !75
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 %17) #1, !dbg !76
  %95 = insertelement <2 x i32> poison, i32 %92, i64 0, !dbg !74
  %96 = insertelement <2 x i32> %95, i32 %88, i64 1, !dbg !74
  %97 = bitcast <2 x i32> %96 to <2 x float>, !dbg !74
  %98 = insertelement <2 x i32> poison, i32 %94, i64 0, !dbg !76
  %99 = insertelement <2 x i32> %98, i32 %90, i64 1, !dbg !76
  %100 = bitcast <2 x i32> %99 to <2 x float>, !dbg !76
  %101 = fsub <2 x float> %100, %97, !dbg !77
  %102 = fmul <2 x float> %101, %79, !dbg !78
  %103 = fadd <2 x float> %102, %97, !dbg !79
  %104 = extractelement <2 x float> %103, i64 0, !dbg !80
  %105 = extractelement <2 x float> %103, i64 1, !dbg !81
  %106 = fsub float %104, %105, !dbg !80
  %107 = fmul float %106, %38, !dbg !82
  %108 = fadd float %105, %107, !dbg !81
  %109 = mul i32 %22, 320, !dbg !83
  %110 = add i32 %109, %.decomposed2, !dbg !84
  %111 = sext i32 %110 to i64, !dbg !85
  %112 = getelementptr float, ptr addrspace(1) %8, i64 %111, !dbg !85
  %113 = bitcast float %86 to i32, !dbg !86
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %113, ptr addrspace(1) %112, i1 %17) #1, !dbg !86
  %114 = getelementptr float, ptr addrspace(1) %9, i64 %111, !dbg !87
  %115 = bitcast float %108 to i32, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %115, ptr addrspace(1) %114, i1 %17) #1, !dbg !88
  ret void, !dbg !89
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3nc2hipm2dkuppzg74qphkiuzitmwmsyzn3cw3iszx7ylpwltc2.py", directory: "inductor_cache/3n")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_14", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 30, scope: !7)
!22 = !DILocation(line: 30, column: 35, scope: !7)
!23 = !DILocation(line: 31, column: 30, scope: !7)
!24 = !DILocation(line: 31, column: 35, scope: !7)
!25 = !DILocation(line: 32, column: 31, scope: !7)
!26 = !DILocation(line: 32, column: 36, scope: !7)
!27 = !DILocation(line: 33, column: 31, scope: !7)
!28 = !DILocation(line: 33, column: 36, scope: !7)
!29 = !DILocation(line: 34, column: 31, scope: !7)
!30 = !DILocation(line: 34, column: 36, scope: !7)
!31 = !DILocation(line: 35, column: 31, scope: !7)
!32 = !DILocation(line: 35, column: 36, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 18, scope: !7)
!35 = !DILocation(line: 39, column: 32, scope: !7)
!36 = !DILocation(line: 40, column: 18, scope: !7)
!37 = !DILocation(line: 41, column: 18, scope: !7)
!38 = !DILocation(line: 42, column: 32, scope: !7)
!39 = !DILocation(line: 43, column: 39, scope: !7)
!40 = !DILocation(line: 43, column: 49, scope: !7)
!41 = !DILocation(line: 43, column: 46, scope: !7)
!42 = !DILocation(line: 43, column: 37, scope: !7)
!43 = !DILocation(line: 43, column: 30, scope: !7)
!44 = !DILocation(line: 43, column: 54, scope: !7)
!45 = !DILocation(line: 44, column: 20, scope: !7)
!46 = !DILocation(line: 45, column: 20, scope: !7)
!47 = !DILocation(line: 46, column: 35, scope: !7)
!48 = !DILocation(line: 47, column: 48, scope: !7)
!49 = !DILocation(line: 47, column: 31, scope: !7)
!50 = !DILocation(line: 47, column: 56, scope: !7)
!51 = !DILocation(line: 51, column: 20, scope: !7)
!52 = !DILocation(line: 52, column: 20, scope: !7)
!53 = !DILocation(line: 53, column: 35, scope: !7)
!54 = !DILocation(line: 54, column: 40, scope: !7)
!55 = !DILocation(line: 54, column: 38, scope: !7)
!56 = !DILocation(line: 54, column: 48, scope: !7)
!57 = !DILocation(line: 54, column: 31, scope: !7)
!58 = !DILocation(line: 54, column: 56, scope: !7)
!59 = !DILocation(line: 55, column: 39, scope: !7)
!60 = !DILocation(line: 55, column: 49, scope: !7)
!61 = !DILocation(line: 55, column: 31, scope: !7)
!62 = !DILocation(line: 55, column: 57, scope: !7)
!63 = !DILocation(line: 56, column: 20, scope: !7)
!64 = !DILocation(line: 57, column: 20, scope: !7)
!65 = !DILocation(line: 58, column: 20, scope: !7)
!66 = !DILocation(line: 59, column: 20, scope: !7)
!67 = !DILocation(line: 61, column: 20, scope: !7)
!68 = !DILocation(line: 60, column: 20, scope: !7)
!69 = !DILocation(line: 62, column: 31, scope: !7)
!70 = !DILocation(line: 62, column: 55, scope: !7)
!71 = !DILocation(line: 63, column: 31, scope: !7)
!72 = !DILocation(line: 63, column: 56, scope: !7)
!73 = !DILocation(line: 67, column: 31, scope: !7)
!74 = !DILocation(line: 67, column: 56, scope: !7)
!75 = !DILocation(line: 68, column: 31, scope: !7)
!76 = !DILocation(line: 68, column: 57, scope: !7)
!77 = !DILocation(line: 69, column: 20, scope: !7)
!78 = !DILocation(line: 70, column: 20, scope: !7)
!79 = !DILocation(line: 71, column: 20, scope: !7)
!80 = !DILocation(line: 72, column: 20, scope: !7)
!81 = !DILocation(line: 74, column: 20, scope: !7)
!82 = !DILocation(line: 73, column: 20, scope: !7)
!83 = !DILocation(line: 75, column: 34, scope: !7)
!84 = !DILocation(line: 75, column: 30, scope: !7)
!85 = !DILocation(line: 75, column: 25, scope: !7)
!86 = !DILocation(line: 75, column: 46, scope: !7)
!87 = !DILocation(line: 76, column: 25, scope: !7)
!88 = !DILocation(line: 76, column: 46, scope: !7)
!89 = !DILocation(line: 76, column: 4, scope: !7)
