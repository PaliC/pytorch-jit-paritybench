//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_sqrt_16 // -- Begin function triton_poi_fused_add_div_sqrt_16
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_div_sqrt_16
.visible .entry triton_poi_fused_add_div_sqrt_16(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_sqrt_16_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_sqrt_16_param_1,
	.param .u32 triton_poi_fused_add_div_sqrt_16_param_2
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd5, [triton_poi_fused_add_div_sqrt_16_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_div_sqrt_16_param_1];
$L__tmp0:
	.loc	1 21 28                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:21:33
	shl.b32 	%r14, %r1, 9;
	.loc	1 22 36                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 1;
	and.b32  	%r17, %r16, 510;
	.loc	1 22 23                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:22:23
	or.b32  	%r18, %r14, %r17;
	or.b32  	%r19, %r18, 1;
	.loc	1 23 21                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:23:21
	setp.lt.s32 	%p1, %r18, 115200;
	.loc	1 25 19                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:25:19
	mul.hi.s32 	%r20, %r18, -1851608123;
	mad.lo.s32 	%r21, %r18, 1, %r20;
	shr.s32 	%r22, %r21, 7;
	.loc	1 26 19                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:26:19
	shr.u32 	%r23, %r21, 31;
	.loc	1 25 19                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:25:19
	add.s32 	%r24, %r22, %r23;
	mul.lo.s32 	%r25, %r24, 225;
	sub.s32 	%r26, %r18, %r25;
	mul.hi.s32 	%r27, %r19, -1851608123;
	mad.lo.s32 	%r28, %r19, 1, %r27;
	shr.u32 	%r29, %r28, 31;
	shr.s32 	%r30, %r28, 7;
	add.s32 	%r31, %r30, %r29;
	mul.lo.s32 	%r32, %r31, 225;
	sub.s32 	%r33, %r19, %r32;
	.loc	1 26 19                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:26:19
	shr.s32 	%r34, %r21, 14;
	add.s32 	%r35, %r34, %r23;
	.loc	1 27 34                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:27:34
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd1, %rd5, %rd7;
	.loc	1 27 39                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:27:39
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v2.b32 { %r7, %r10 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 39                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:28:39
	mul.lo.s32 	%r36, %r35, 225;
	.loc	1 28 35                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:28:35
	add.s32 	%r37, %r36, %r26;
	add.s32 	%r38, %r36, %r33;
	.loc	1 28 30                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:28:30
	mul.wide.s32 	%rd8, %r37, 4;
	add.s64 	%rd2, %rd6, %rd8;
	mul.wide.s32 	%rd9, %r38, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 28 44                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:28:44
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 29 26                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:29:26
	sqrt.approx.ftz.f32 	%f3, %f1;
	sqrt.approx.ftz.f32 	%f4, %f2;
	.loc	1 31 18                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:31:18
	add.f32 	%f5, %f3, 0f2EDBE6FF;
	add.f32 	%f6, %f4, 0f2EDBE6FF;
	.loc	1 32 18                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:32:18
	mov.b32 	%r8, %f5;
	// begin inline asm
	div.full.f32 %r12, %r7, %r8;
	// end inline asm
	mov.b32 	%r11, %f6;
	// begin inline asm
	div.full.f32 %r13, %r10, %r11;
	// end inline asm
	.loc	1 33 39                         // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:33:39
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r12, %r13 };
	// end inline asm
	.loc	1 33 4                          // cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xi/cxiwrrgxrz3piooc7hx5zisucchwgmmybzmvrrdrslzkhvghpgq5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 105
.b8 119
.b8 114
.b8 114
.b8 103
.b8 120
.b8 114
.b8 122
.b8 51
.b8 112
.b8 105
.b8 111
.b8 111
.b8 99
.b8 55
.b8 104
.b8 120
.b8 53
.b8 122
.b8 105
.b8 115
.b8 117
.b8 99
.b8 99
.b8 104
.b8 119
.b8 103
.b8 109
.b8 109
.b8 121
.b8 98
.b8 122
.b8 109
.b8 118
.b8 114
.b8 114
.b8 100
.b8 114
.b8 115
.b8 108
.b8 122
.b8 107
.b8 104
.b8 118
.b8 103
.b8 104
.b8 112
.b8 103
.b8 113
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
