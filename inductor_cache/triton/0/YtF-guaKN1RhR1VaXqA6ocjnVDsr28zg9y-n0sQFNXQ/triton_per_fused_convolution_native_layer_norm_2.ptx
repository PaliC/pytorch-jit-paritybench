//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_native_layer_norm_2 // -- Begin function triton_per_fused_convolution_native_layer_norm_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_native_layer_norm_2
.visible .entry triton_per_fused_convolution_native_layer_norm_2(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_layer_norm_2_param_6,
	.param .u32 triton_per_fused_convolution_native_layer_norm_2_param_7,
	.param .u32 triton_per_fused_convolution_native_layer_norm_2_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<102>;
	.reg .f32 	%f<84>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_convolution_native_layer_norm_2_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_convolution_native_layer_norm_2_param_1];
$L__tmp0:
	.loc	1 24 28                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd11, [triton_per_fused_convolution_native_layer_norm_2_param_2];
	.loc	1 27 26                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:27:26
	mov.u32 	%r62, %tid.x;
	and.b32  	%r63, %r62, 31;
	ld.param.u64 	%rd12, [triton_per_fused_convolution_native_layer_norm_2_param_3];
	ld.param.u64 	%rd13, [triton_per_fused_convolution_native_layer_norm_2_param_4];
	shl.b32 	%r64, %r62, 2;
	ld.param.u64 	%rd14, [triton_per_fused_convolution_native_layer_norm_2_param_5];
	and.b32  	%r65, %r64, 1020;
	ld.param.u64 	%rd15, [triton_per_fused_convolution_native_layer_norm_2_param_6];
	.loc	1 29 21                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:29:21
	setp.lt.u32 	%p1, %r65, 768;
	.loc	1 32 39                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:32:39
	mad.lo.s32 	%r66, %r1, 768, %r65;
	.loc	1 32 34                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:32:34
	mul.wide.s32 	%rd16, %r66, 4;
	add.s64 	%rd1, %rd9, %rd16;
	mov.b32 	%r6, 0;
	.loc	1 32 48                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:32:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:33:30
	mul.wide.u32 	%rd17, %r65, 4;
	add.s64 	%rd2, %rd11, %rd17;
	.loc	1 33 35                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 31                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:34:31
	add.s64 	%rd3, %rd12, %rd17;
	.loc	1 34 36                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:34:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 35 31                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:35:31
	add.s64 	%rd4, %rd13, %rd17;
	.loc	1 35 36                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:35:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 32 48                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:32:48
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 35                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:33:35
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 36 18                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:36:18
	add.f32 	%f5, %f2, %f4;
	mov.b32 	%r53, %f5;
	add.f32 	%f6, %f1, %f3;
	.loc	1 32 48                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:32:48
	mov.b32 	%f7, %r5;
	mov.b32 	%f8, %r4;
	.loc	1 33 35                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:33:35
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r12;
	.loc	1 36 18                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:36:18
	add.f32 	%f11, %f8, %f10;
	mov.b32 	%r54, %f11;
	add.f32 	%f12, %f7, %f9;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f6, %f5;
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f12, %f14;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f16;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f17, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f18;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f19, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f20;
	shfl.sync.bfly.b32	%r72, %r71, 4, 31, -1;
	mov.b32 	%f21, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f22;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f23, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f24;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f25, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r63, 0;
	shr.u32 	%r77, %r62, 3;
	and.b32  	%r78, %r77, 28;
	mov.u32 	%r79, global_smem;
	add.s32 	%r34, %r79, %r78;
	mov.b32 	%r35, %f26;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p22, %r62, 8;
	add.s32 	%r37, %r79, %r64;
	// begin inline asm
	@%p22 ld.shared.b32 %r36, [ %r37 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r36;
	shfl.sync.bfly.b32	%r80, %r36, 4, 31, -1;
	mov.b32 	%f28, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f29;
	shfl.sync.bfly.b32	%r82, %r81, 2, 31, -1;
	mov.b32 	%f30, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f31;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f32, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r85, %r62, 7;
	setp.eq.s32 	%p31, %r85, 0;
	and.pred  	%p23, %p22, %p31;
	mov.b32 	%r39, %f33;
	// begin inline asm
	@%p23 st.shared.b32 [ %r37 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f34, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f35, %f34, 0f00000000;
$L__tmp3:
	.loc	1 44 19                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:44:19
	mov.b32 	%r41, %f35;
	mov.b32 	%r42, 1145044992;
	// begin inline asm
	div.full.f32 %r61, %r41, %r42;
	// end inline asm
	mov.b32 	%f36, %r61;
	.loc	1 45 19                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:45:19
	sub.f32 	%f37, %f6, %f36;
	sub.f32 	%f38, %f5, %f36;
	sub.f32 	%f39, %f11, %f36;
	sub.f32 	%f40, %f12, %f36;
	.loc	1 46 20                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:46:20
	mul.f32 	%f41, %f38, %f38;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f42, %f37, %f37, %f41;
	fma.rn.f32 	%f43, %f39, %f39, %f42;
	fma.rn.f32 	%f44, %f40, %f40, %f43;
	selp.f32 	%f45, %f44, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f45;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f46, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f47;
	shfl.sync.bfly.b32	%r89, %r88, 8, 31, -1;
	mov.b32 	%f48, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f49;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f50, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f51;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f52, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f53;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f54, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f55;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p22 ld.shared.b32 %r45, [ %r37 + 0 ];
	// end inline asm
	mov.b32 	%f56, %r45;
	shfl.sync.bfly.b32	%r96, %r45, 4, 31, -1;
	mov.b32 	%f57, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f58;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f59, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f60;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f61, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f62;
	// begin inline asm
	@%p23 st.shared.b32 [ %r37 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f63, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f64, %f63, 0f00000000;
$L__tmp6:
	.loc	1 51 20                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:51:20
	mov.b32 	%r50, %f64;
	// begin inline asm
	div.full.f32 %r49, %r50, %r42;
	// end inline asm
	mov.b32 	%f65, %r49;
	.loc	1 53 20                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:53:20
	add.f32 	%f66, %f65, 0f3727C5AC;
	.loc	1 54 28                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:54:28
	rsqrt.approx.ftz.f32 	%f67, %f66;
	.loc	1 35 36                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:35:36
	mov.b32 	%f68, %r29;
	mov.b32 	%f69, %r28;
	mov.b32 	%f70, %r27;
	mov.b32 	%f71, %r26;
	.loc	1 34 36                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:34:36
	mov.b32 	%f72, %r21;
	mov.b32 	%f73, %r20;
	mov.b32 	%f74, %r19;
	mov.b32 	%f75, %r18;
	.loc	1 56 20                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:56:20
	mul.f32 	%f76, %f37, %f67;
	mul.f32 	%f77, %f38, %f67;
	mul.f32 	%f78, %f39, %f67;
	mul.f32 	%f79, %f40, %f67;
	.loc	1 58 20                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:58:20
	fma.rn.f32 	%f80, %f76, %f75, %f71;
	fma.rn.f32 	%f81, %f77, %f74, %f70;
	fma.rn.f32 	%f82, %f78, %f73, %f69;
	fma.rn.f32 	%f83, %f79, %f72, %f68;
	.loc	1 36 18                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:36:18
	mov.b32 	%r52, %f6;
	mov.b32 	%r55, %f12;
	.loc	1 59 48                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:59:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
	.loc	1 60 4                          // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:60:4
	bar.sync 	0;
	.loc	1 61 28                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:61:28
	mul.wide.s32 	%rd18, %r1, 4;
	add.s64 	%rd6, %rd10, %rd18;
	.loc	1 61 40                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:61:40
	and.b32  	%r101, %r62, 255;
	setp.eq.s32 	%p28, %r101, 0;
	mov.b32 	%r56, %f67;
	// begin inline asm
	@%p28 st.global.b32 [ %rd6 + 0 ], { %r56 };
	// end inline asm
	.loc	1 62 25                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:62:25
	add.s64 	%rd7, %rd15, %rd16;
	.loc	1 62 46                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:62:46
	mov.b32 	%r57, %f80;
	mov.b32 	%r58, %f81;
	mov.b32 	%r59, %f82;
	mov.b32 	%r60, %f83;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r57, %r58, %r59, %r60 };
	// end inline asm
	.loc	1 63 25                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:63:25
	add.s64 	%rd8, %rd14, %rd18;
	.loc	1 63 37                         // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:63:37
	// begin inline asm
	@%p28 st.global.b32 [ %rd8 + 0 ], { %r61 };
	// end inline asm
	.loc	1 63 4                          // cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py:63:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bp/cbpz6st5isdfa3lkob7h375gruemnkrvdx3hoh2aniv7e3z55gyt.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 265                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x102 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 112
.b8 122
.b8 54
.b8 115
.b8 116
.b8 53
.b8 105
.b8 115
.b8 100
.b8 102
.b8 97
.b8 51
.b8 108
.b8 107
.b8 111
.b8 98
.b8 55
.b8 104
.b8 51
.b8 55
.b8 53
.b8 103
.b8 114
.b8 117
.b8 101
.b8 109
.b8 110
.b8 107
.b8 114
.b8 118
.b8 100
.b8 120
.b8 51
.b8 104
.b8 111
.b8 104
.b8 50
.b8 97
.b8 110
.b8 105
.b8 118
.b8 55
.b8 101
.b8 51
.b8 122
.b8 53
.b8 53
.b8 103
.b8 121
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
