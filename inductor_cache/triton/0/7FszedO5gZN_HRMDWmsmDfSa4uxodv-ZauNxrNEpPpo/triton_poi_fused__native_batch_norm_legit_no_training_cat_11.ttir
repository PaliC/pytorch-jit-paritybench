#loc = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_cat_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-5> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_4 = arith.constant dense<80> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<5> : tensor<128xi64> loc(#loc1)
    %cst_6 = arith.constant dense<144> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<9> : tensor<128xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<576> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_7 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_8 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_6 : tensor<128xi32> loc(#loc10)
    %10 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc15)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %7 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc17)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc18)
    %22 = arith.extsi %7 : tensor<128xi32> to tensor<128xi64> loc(#loc19)
    %23 = arith.cmpi slt, %22, %cst_5 : tensor<128xi64> loc(#loc19)
    %24 = arith.muli %7, %cst_8 : tensor<128xi32> loc(#loc20)
    %25 = arith.addi %8, %24 : tensor<128xi32> loc(#loc21)
    %26 = arith.muli %9, %cst_4 : tensor<128xi32> loc(#loc22)
    %27 = arith.addi %25, %26 : tensor<128xi32> loc(#loc23)
    %28 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc24)
    %29 = tt.addptr %28, %27 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc24)
    %30 = arith.andi %23, %5 : tensor<128xi1> loc(#loc25)
    %31 = tt.load %29, %30, %cst_3 : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %32 = arith.cmpi sge, %22, %cst_5 : tensor<128xi64> loc(#loc27)
    %33 = arith.addi %7, %cst_2 : tensor<128xi32> loc(#loc28)
    %34 = arith.muli %33, %cst_8 : tensor<128xi32> loc(#loc29)
    %35 = arith.addi %8, %34 : tensor<128xi32> loc(#loc30)
    %36 = arith.muli %9, %cst_1 : tensor<128xi32> loc(#loc31)
    %37 = arith.addi %35, %36 : tensor<128xi32> loc(#loc32)
    %38 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc33)
    %39 = tt.addptr %38, %37 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc33)
    %40 = arith.andi %32, %5 : tensor<128xi1> loc(#loc34)
    %41 = tt.load %39, %40, %cst_3 : tensor<128x!tt.ptr<f32>> loc(#loc35)
    %42 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc36)
    %43 = tt.addptr %42, %33 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc36)
    %44 = tt.load %43, %40, %cst_3 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc37)
    %45 = arith.subf %41, %44 : tensor<128xf32> loc(#loc38)
    %46 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc39)
    %47 = tt.addptr %46, %33 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc39)
    %48 = tt.load %47, %40, %cst_3 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc40)
    %49 = arith.addf %48, %cst_0 : tensor<128xf32> loc(#loc41)
    %50 = tt.extern_elementwise %49 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc42)
    %51 = arith.divf %cst, %50 : tensor<128xf32> loc(#loc43)
    %52 = arith.mulf %45, %51 : tensor<128xf32> loc(#loc44)
    %53 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc45)
    %54 = tt.addptr %53, %33 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc45)
    %55 = tt.load %54, %40, %cst_3 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc46)
    %56 = arith.mulf %52, %55 : tensor<128xf32> loc(#loc47)
    %57 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc48)
    %58 = tt.addptr %57, %33 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc48)
    %59 = tt.load %58, %40, %cst_3 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc49)
    %60 = arith.addf %56, %59 : tensor<128xf32> loc(#loc50)
    %61 = arith.cmpf ogt, %cst_3, %60 : tensor<128xf32> loc(#loc68)
    %62 = arith.select %61, %cst_3, %60 : tensor<128xi1>, tensor<128xf32> loc(#loc69)
    %63 = arith.select %32, %62, %cst_3 : tensor<128xi1>, tensor<128xf32> loc(#loc54)
    %64 = arith.select %23, %31, %63 : tensor<128xi1>, tensor<128xf32> loc(#loc55)
    %65 = arith.subf %64, %12 : tensor<128xf32> loc(#loc56)
    %66 = arith.addf %15, %cst_0 : tensor<128xf32> loc(#loc57)
    %67 = tt.extern_elementwise %66 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc58)
    %68 = arith.divf %cst, %67 : tensor<128xf32> loc(#loc59)
    %69 = arith.mulf %65, %68 : tensor<128xf32> loc(#loc60)
    %70 = arith.mulf %69, %18 : tensor<128xf32> loc(#loc61)
    %71 = arith.addf %70, %21 : tensor<128xf32> loc(#loc62)
    %72 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc63)
    %73 = tt.addptr %72, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc63)
    tt.store %73, %64, %5 : tensor<128x!tt.ptr<f32>> loc(#loc64)
    %74 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc65)
    %75 = tt.addptr %74, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc65)
    tt.store %75, %71, %5 : tensor<128x!tt.ptr<f32>> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":21:28)
#loc3 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":21:33)
#loc4 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":22:36)
#loc5 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":22:23)
#loc6 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":23:21)
#loc7 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":24:21)
#loc8 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":24:27)
#loc9 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":25:19)
#loc10 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":26:19)
#loc11 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":28:31)
#loc12 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":28:36)
#loc13 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":29:31)
#loc14 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":29:36)
#loc15 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":30:31)
#loc16 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":30:36)
#loc17 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":31:31)
#loc18 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":31:36)
#loc19 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":36:18)
#loc20 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:39)
#loc21 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:35)
#loc22 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:48)
#loc23 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:45)
#loc24 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:30)
#loc25 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:60)
#loc26 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":37:53)
#loc27 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":38:19)
#loc28 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:46)
#loc29 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:39)
#loc30 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:35)
#loc31 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:55)
#loc32 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:52)
#loc33 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:30)
#loc34 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:67)
#loc35 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":41:60)
#loc36 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":42:31)
#loc37 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":42:43)
#loc38 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":43:19)
#loc39 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":44:31)
#loc40 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":44:43)
#loc41 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":46:20)
#loc42 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":47:27)
#loc43 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":49:20)
#loc44 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":52:20)
#loc45 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":53:31)
#loc46 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":53:43)
#loc47 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":54:20)
#loc48 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":55:31)
#loc49 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":55:43)
#loc50 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":56:20)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc52 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":58:42)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc54 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":60:34)
#loc55 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":61:33)
#loc56 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":62:20)
#loc57 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":64:20)
#loc58 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":65:27)
#loc59 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":67:20)
#loc60 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":70:20)
#loc61 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":71:20)
#loc62 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":72:20)
#loc63 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":73:25)
#loc64 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":73:37)
#loc65 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":74:25)
#loc66 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":74:37)
#loc67 = loc("inductor_cache/ql/cqlkfbvfjjgm6x73e43foner3i3uccmn5ckecqftwmjkqfabhzs3.py":74:4)
#loc68 = loc(callsite(#loc51 at #loc52))
#loc69 = loc(callsite(#loc53 at #loc52))
