//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_21 // -- Begin function triton_per_fused_native_group_norm_21
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_21
.visible .entry triton_per_fused_native_group_norm_21(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_21_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_21_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_21_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_21_param_3,
	.param .u32 triton_per_fused_native_group_norm_21_param_4,
	.param .u32 triton_per_fused_native_group_norm_21_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<183>;
	.reg .f32 	%f<156>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused_native_group_norm_21_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_native_group_norm_21_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:23:33
	shl.b32 	%r79, %r1, 5;
	ld.param.u64 	%rd10, [triton_per_fused_native_group_norm_21_param_2];
	ld.param.u64 	%rd11, [triton_per_fused_native_group_norm_21_param_3];
	.loc	1 24 44                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:24:44
	mov.u32 	%r80, %tid.x;
	bfe.u32 	%r81, %r80, 5, 3;
	and.b32  	%r82, %r80, 31;
	.loc	1 24 23                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:24:23
	or.b32  	%r83, %r79, %r81;
	or.b32  	%r84, %r83, 8;
	or.b32  	%r85, %r83, 16;
	or.b32  	%r86, %r83, 24;
	.loc	1 25 21                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:25:21
	setp.lt.s32 	%p1, %r83, 128;
	setp.lt.s32 	%p6, %r84, 128;
	setp.lt.s32 	%p11, %r85, 128;
	setp.lt.s32 	%p16, %r86, 128;
	.loc	1 26 34                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:26:34
	shl.b32 	%r87, %r80, 2;
	and.b32  	%r88, %r87, 124;
	.loc	1 31 39                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:31:39
	shl.b32 	%r89, %r83, 7;
	shl.b32 	%r90, %r84, 7;
	shl.b32 	%r91, %r85, 7;
	shl.b32 	%r92, %r86, 7;
	.loc	1 31 35                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:31:35
	or.b32  	%r93, %r89, %r88;
	or.b32  	%r94, %r90, %r88;
	or.b32  	%r95, %r91, %r88;
	or.b32  	%r96, %r92, %r88;
	.loc	1 31 30                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:31:30
	mul.wide.s32 	%rd12, %r93, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r94, 4;
	add.s64 	%rd2, %rd8, %rd13;
	mul.wide.s32 	%rd14, %r95, 4;
	add.s64 	%rd3, %rd8, %rd14;
	mul.wide.s32 	%rd15, %r96, 4;
	add.s64 	%rd4, %rd8, %rd15;
	mov.b32 	%r6, 0;
	.loc	1 31 44                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:31:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f1, %f2;
	add.f32 	%f18, %f17, %f3;
	add.f32 	%f19, %f18, %f4;
	selp.f32 	%f20, %f19, 0f00000000, %p1;
	add.f32 	%f21, %f5, %f6;
	add.f32 	%f22, %f21, %f7;
	add.f32 	%f23, %f22, %f8;
	selp.f32 	%f24, %f23, 0f00000000, %p6;
	add.f32 	%f25, %f9, %f10;
	add.f32 	%f26, %f25, %f11;
	add.f32 	%f27, %f26, %f12;
	selp.f32 	%f28, %f27, 0f00000000, %p11;
	add.f32 	%f29, %f13, %f14;
	add.f32 	%f30, %f29, %f15;
	add.f32 	%f31, %f30, %f16;
	selp.f32 	%f32, %f31, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f20;
	shfl.sync.bfly.b32	%r98, %r97, 16, 31, -1;
	mov.b32 	%f33, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f20, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f34;
	shfl.sync.bfly.b32	%r100, %r99, 8, 31, -1;
	mov.b32 	%f35, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f36;
	shfl.sync.bfly.b32	%r102, %r101, 4, 31, -1;
	mov.b32 	%f37, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f38;
	shfl.sync.bfly.b32	%r104, %r103, 2, 31, -1;
	mov.b32 	%f39, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f40;
	shfl.sync.bfly.b32	%r106, %r105, 1, 31, -1;
	mov.b32 	%f41, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f24;
	shfl.sync.bfly.b32	%r108, %r107, 16, 31, -1;
	mov.b32 	%f43, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f24, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f44;
	shfl.sync.bfly.b32	%r110, %r109, 8, 31, -1;
	mov.b32 	%f45, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f46;
	shfl.sync.bfly.b32	%r112, %r111, 4, 31, -1;
	mov.b32 	%f47, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f48;
	shfl.sync.bfly.b32	%r114, %r113, 2, 31, -1;
	mov.b32 	%f49, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f50;
	shfl.sync.bfly.b32	%r116, %r115, 1, 31, -1;
	mov.b32 	%f51, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f28;
	shfl.sync.bfly.b32	%r118, %r117, 16, 31, -1;
	mov.b32 	%f53, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f28, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f54;
	shfl.sync.bfly.b32	%r120, %r119, 8, 31, -1;
	mov.b32 	%f55, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f56;
	shfl.sync.bfly.b32	%r122, %r121, 4, 31, -1;
	mov.b32 	%f57, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f58;
	shfl.sync.bfly.b32	%r124, %r123, 2, 31, -1;
	mov.b32 	%f59, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f60;
	shfl.sync.bfly.b32	%r126, %r125, 1, 31, -1;
	mov.b32 	%f61, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r127, %f32;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f63, %r128;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f32, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f64;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f65, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f66;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f67, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f68;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f69, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r135, %f70;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f71, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
$L__tmp2:
	.loc	1 39 19                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:39:19
	shl.b32 	%r137, %r81, 2;
	mov.u32 	%r138, global_smem;
	add.s32 	%r34, %r138, %r137;
	mov.b32 	%r35, %f42;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 32;
	mov.b32 	%r37, %f52;
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	add.s32 	%r38, %r34, 64;
	mov.b32 	%r39, %f62;
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r34, 96;
	mov.b32 	%r41, %f72;
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r139, %r82, 2;
	add.s32 	%r140, %r138, %r139;
	ld.shared.u32 	%r43, [%r140];
	mov.b32 	%r44, 1124073472;
	// begin inline asm
	div.full.f32 %r77, %r43, %r44;
	// end inline asm
	// begin inline asm
	div.full.f32 %r45, %r35, %r44;
	// end inline asm
	mov.b32 	%f73, %r45;
	// begin inline asm
	div.full.f32 %r48, %r37, %r44;
	// end inline asm
	mov.b32 	%f74, %r48;
	// begin inline asm
	div.full.f32 %r51, %r39, %r44;
	// end inline asm
	mov.b32 	%f75, %r51;
	// begin inline asm
	div.full.f32 %r54, %r41, %r44;
	// end inline asm
	mov.b32 	%f76, %r54;
	.loc	1 40 19                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:40:19
	sub.f32 	%f77, %f1, %f73;
	sub.f32 	%f78, %f2, %f73;
	sub.f32 	%f79, %f3, %f73;
	sub.f32 	%f80, %f4, %f73;
	sub.f32 	%f81, %f5, %f74;
	sub.f32 	%f82, %f6, %f74;
	sub.f32 	%f83, %f7, %f74;
	sub.f32 	%f84, %f8, %f74;
	sub.f32 	%f85, %f9, %f75;
	sub.f32 	%f86, %f10, %f75;
	sub.f32 	%f87, %f11, %f75;
	sub.f32 	%f88, %f12, %f75;
	sub.f32 	%f89, %f13, %f76;
	sub.f32 	%f90, %f14, %f76;
	sub.f32 	%f91, %f15, %f76;
	sub.f32 	%f92, %f16, %f76;
	.loc	1 41 20                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:41:20
	mul.f32 	%f93, %f78, %f78;
	mul.f32 	%f94, %f82, %f82;
	mul.f32 	%f95, %f86, %f86;
	mul.f32 	%f96, %f90, %f90;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f97, %f77, %f77, %f93;
	fma.rn.f32 	%f98, %f79, %f79, %f97;
	fma.rn.f32 	%f99, %f80, %f80, %f98;
	selp.f32 	%f100, %f99, 0f00000000, %p1;
	fma.rn.f32 	%f101, %f81, %f81, %f94;
	fma.rn.f32 	%f102, %f83, %f83, %f101;
	fma.rn.f32 	%f103, %f84, %f84, %f102;
	selp.f32 	%f104, %f103, 0f00000000, %p6;
	fma.rn.f32 	%f105, %f85, %f85, %f95;
	fma.rn.f32 	%f106, %f87, %f87, %f105;
	fma.rn.f32 	%f107, %f88, %f88, %f106;
	selp.f32 	%f108, %f107, 0f00000000, %p11;
	fma.rn.f32 	%f109, %f89, %f89, %f96;
	fma.rn.f32 	%f110, %f91, %f91, %f109;
	fma.rn.f32 	%f111, %f92, %f92, %f110;
	selp.f32 	%f112, %f111, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r141, %f100;
	shfl.sync.bfly.b32	%r142, %r141, 16, 31, -1;
	mov.b32 	%f113, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f100, %f113;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f114;
	shfl.sync.bfly.b32	%r144, %r143, 8, 31, -1;
	mov.b32 	%f115, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f114, %f115;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f116;
	shfl.sync.bfly.b32	%r146, %r145, 4, 31, -1;
	mov.b32 	%f117, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f118;
	shfl.sync.bfly.b32	%r148, %r147, 2, 31, -1;
	mov.b32 	%f119, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r149, %f120;
	shfl.sync.bfly.b32	%r150, %r149, 1, 31, -1;
	mov.b32 	%f121, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r151, %f104;
	shfl.sync.bfly.b32	%r152, %r151, 16, 31, -1;
	mov.b32 	%f123, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f104, %f123;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f124;
	shfl.sync.bfly.b32	%r154, %r153, 8, 31, -1;
	mov.b32 	%f125, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f126;
	shfl.sync.bfly.b32	%r156, %r155, 4, 31, -1;
	mov.b32 	%f127, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f128;
	shfl.sync.bfly.b32	%r158, %r157, 2, 31, -1;
	mov.b32 	%f129, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f130;
	shfl.sync.bfly.b32	%r160, %r159, 1, 31, -1;
	mov.b32 	%f131, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f108;
	shfl.sync.bfly.b32	%r162, %r161, 16, 31, -1;
	mov.b32 	%f133, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f108, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f134;
	shfl.sync.bfly.b32	%r164, %r163, 8, 31, -1;
	mov.b32 	%f135, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f136;
	shfl.sync.bfly.b32	%r166, %r165, 4, 31, -1;
	mov.b32 	%f137, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f138;
	shfl.sync.bfly.b32	%r168, %r167, 2, 31, -1;
	mov.b32 	%f139, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f140;
	shfl.sync.bfly.b32	%r170, %r169, 1, 31, -1;
	mov.b32 	%f141, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f112;
	shfl.sync.bfly.b32	%r172, %r171, 16, 31, -1;
	mov.b32 	%f143, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f112, %f143;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r173, %f144;
	shfl.sync.bfly.b32	%r174, %r173, 8, 31, -1;
	mov.b32 	%f145, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r175, %f146;
	shfl.sync.bfly.b32	%r176, %r175, 4, 31, -1;
	mov.b32 	%f147, %r176;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f146, %f147;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r177, %f148;
	shfl.sync.bfly.b32	%r178, %r177, 2, 31, -1;
	mov.b32 	%f149, %r178;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f148, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f150;
	shfl.sync.bfly.b32	%r180, %r179, 1, 31, -1;
	mov.b32 	%f151, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
$L__tmp4:
	.loc	1 49 28                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:49:28
	bar.sync 	0;
	mov.b32 	%r58, %f122;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r58;
	// end inline asm
	mov.b32 	%r60, %f132;
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r60;
	// end inline asm
	mov.b32 	%r62, %f142;
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r62;
	// end inline asm
	mov.b32 	%r64, %f152;
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:46:20
	ld.shared.u32 	%r74, [%r140];
	.loc	1 44 29                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:44:29
	bar.sync 	0;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r58;
	// end inline asm
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r60;
	// end inline asm
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r62;
	// end inline asm
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r78, [%r140];
	.loc	1 46 20                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:46:20
	// begin inline asm
	div.full.f32 %r73, %r74, %r44;
	// end inline asm
	mov.b32 	%f153, %r73;
	.loc	1 48 20                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:48:20
	add.f32 	%f154, %f153, 0f3727C5AC;
	.loc	1 49 28                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:49:28
	rsqrt.approx.ftz.f32 	%f155, %f154;
	.loc	1 24 23                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:24:23
	or.b32  	%r181, %r79, %r82;
	.loc	1 25 21                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:25:21
	setp.lt.s32 	%p36, %r181, 128;
	.loc	1 50 25                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:50:25
	mul.wide.s32 	%rd16, %r181, 4;
	add.s64 	%rd5, %rd11, %rd16;
	.loc	1 50 37                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:50:37
	and.b32  	%r182, %r80, 224;
	setp.eq.s32 	%p37, %r182, 0;
	mov.b32 	%r76, %f155;
	and.pred  	%p33, %p37, %p36;
	// begin inline asm
	@%p33 st.global.b32 [ %rd5 + 0 ], { %r76 };
	// end inline asm
	.loc	1 51 25                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:51:25
	add.s64 	%rd6, %rd9, %rd16;
	.loc	1 51 37                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:51:37
	// begin inline asm
	@%p33 st.global.b32 [ %rd6 + 0 ], { %r77 };
	// end inline asm
	.loc	1 52 25                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:52:25
	add.s64 	%rd7, %rd10, %rd16;
	.loc	1 52 37                         // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:52:37
	// begin inline asm
	@%p33 st.global.b32 [ %rd7 + 0 ], { %r78 };
	// end inline asm
	.loc	1 52 4                          // cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uv/cuvzyfr2qrymhrmvet5wjktj7vhg5hvhyx5at5qgjgpvhi5nlryi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 118
.b8 122
.b8 121
.b8 102
.b8 114
.b8 50
.b8 113
.b8 114
.b8 121
.b8 109
.b8 104
.b8 114
.b8 109
.b8 118
.b8 101
.b8 116
.b8 53
.b8 119
.b8 106
.b8 107
.b8 116
.b8 106
.b8 55
.b8 118
.b8 104
.b8 103
.b8 53
.b8 104
.b8 118
.b8 104
.b8 121
.b8 120
.b8 53
.b8 97
.b8 116
.b8 53
.b8 113
.b8 103
.b8 106
.b8 103
.b8 112
.b8 118
.b8 104
.b8 105
.b8 53
.b8 110
.b8 108
.b8 114
.b8 121
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
