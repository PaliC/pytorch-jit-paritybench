; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_bmm_transpose_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 4, !dbg !15
  %14 = mul i32 %13, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %13, 16, !dbg !17
  %.frozen3 = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen3, 64, !dbg !18
  %.lhs.trunc = trunc nsw i32 %15 to i8, !dbg !19
  %17 = srem i8 %.lhs.trunc, 4, !dbg !19
  %18 = mul i32 %16, 64, !dbg !20
  %srem.decomposed = sub i32 %.frozen3, %18, !dbg !20
  %.lhs.trunc1 = trunc nsw i32 %srem.decomposed to i8, !dbg !21
  %19 = sdiv i8 %.lhs.trunc1, 16, !dbg !21
  %20 = insertelement <2 x i8> poison, i8 %19, i64 0, !dbg !21
  %21 = insertelement <2 x i8> %20, i8 %17, i64 1, !dbg !21
  %22 = shl <2 x i8> %21, <i8 4, i8 2>, !dbg !22
  %23 = shl nsw i32 %16, 6, !dbg !23
  %24 = add i32 %23, %.decomposed, !dbg !24
  %25 = extractelement <2 x i8> %22, i64 0, !dbg !25
  %26 = sext i8 %25 to i32, !dbg !25
  %27 = add i32 %24, %26, !dbg !25
  %28 = extractelement <2 x i8> %22, i64 1, !dbg !26
  %29 = sext i8 %28 to i32, !dbg !26
  %30 = add i32 %27, %29, !dbg !26
  %31 = sext i32 %30 to i64, !dbg !27
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %12) #1, !dbg !28
  %34 = sext i32 %11 to i64, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !29
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %33, ptr addrspace(1) %35, i1 %12) #1, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %33, ptr addrspace(1) %36, i1 %12) #1, !dbg !32
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %33, ptr addrspace(1) %37, i1 %12) #1, !dbg !34
  %38 = getelementptr float, ptr addrspace(1) %4, i64 %34, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %33, ptr addrspace(1) %38, i1 %12) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgesai5oxgxpkx7jg6e6ppuufdp2o2o2kdi6djicsjglkp2rxl2e.py", directory: "inductor_cache/ge")
!4 = !{ptr @triton_poi_fused_bmm_transpose_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_bmm_transpose_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_bmm_transpose_1", linkageName: "triton_poi_fused_bmm_transpose_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 44, scope: !7)
!20 = !DILocation(line: 28, column: 60, scope: !7)
!21 = !DILocation(line: 28, column: 69, scope: !7)
!22 = !DILocation(line: 28, column: 54, scope: !7)
!23 = !DILocation(line: 28, column: 78, scope: !7)
!24 = !DILocation(line: 28, column: 35, scope: !7)
!25 = !DILocation(line: 28, column: 50, scope: !7)
!26 = !DILocation(line: 28, column: 75, scope: !7)
!27 = !DILocation(line: 28, column: 30, scope: !7)
!28 = !DILocation(line: 28, column: 83, scope: !7)
!29 = !DILocation(line: 29, column: 25, scope: !7)
!30 = !DILocation(line: 29, column: 36, scope: !7)
!31 = !DILocation(line: 30, column: 25, scope: !7)
!32 = !DILocation(line: 30, column: 36, scope: !7)
!33 = !DILocation(line: 31, column: 25, scope: !7)
!34 = !DILocation(line: 31, column: 36, scope: !7)
!35 = !DILocation(line: 32, column: 25, scope: !7)
!36 = !DILocation(line: 32, column: 36, scope: !7)
!37 = !DILocation(line: 32, column: 4, scope: !7)
