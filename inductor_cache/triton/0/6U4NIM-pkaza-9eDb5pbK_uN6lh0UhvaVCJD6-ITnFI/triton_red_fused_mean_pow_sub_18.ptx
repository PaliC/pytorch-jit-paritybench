//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_pow_sub_18 // -- Begin function triton_red_fused_mean_pow_sub_18
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_pow_sub_18
.visible .entry triton_red_fused_mean_pow_sub_18(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_18_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_18_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_18_param_2,
	.param .u32 triton_red_fused_mean_pow_sub_18_param_3,
	.param .u32 triton_red_fused_mean_pow_sub_18_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<83>;
	.reg .b32 	%r<196>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<40>;
	.loc	1 19 0                          // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_mean_pow_sub_18_param_2];
	ld.param.u64 	%rd3, [triton_red_fused_mean_pow_sub_18_param_0];
	ld.param.u64 	%rd6, [triton_red_fused_mean_pow_sub_18_param_1];
$L__tmp0:
	.loc	1 22 28                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:22:33
	shl.b32 	%r1, %r10, 6;
	.loc	1 23 44                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r15, %r2, 2;
	and.b32  	%r3, %r15, 60;
	.loc	1 23 23                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:23:23
	or.b32  	%r16, %r1, %r3;
	.loc	1 24 21                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:24:21
	setp.gt.s32 	%p2, %r16, 511;
	setp.lt.s32 	%p1, %r16, 512;
	.loc	1 25 33                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:25:33
	bfe.u32 	%r4, %r2, 4, 3;
	.loc	1 27 19                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:27:19
	bfe.s32 	%r17, %r10, 25, 1;
	shr.u32 	%r18, %r17, 26;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r5, %r19, 6;
	.loc	1 26 19                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:26:19
	and.b32  	%r20, %r19, -64;
	sub.s32 	%r21, %r16, %r20;
	.loc	1 28 19                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:28:19
	shr.u32 	%r22, %r17, 25;
	add.s32 	%r23, %r16, %r22;
	shr.s32 	%r24, %r23, 7;
	.loc	1 29 38                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:29:38
	shl.b32 	%r25, %r24, 6;
	.loc	1 29 35                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:29:35
	add.s32 	%r26, %r25, %r21;
	.loc	1 29 30                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:29:30
	mul.wide.s32 	%rd7, %r26, 4;
	add.s64 	%rd5, %rd6, %rd7;
	.loc	1 29 43                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:29:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd5 + 0 ];
	// end inline asm
	mov.pred 	%p63, -1;
	@%p2 bra 	$L__BB0_4;
// %bb.1:                               // %.split.us.preheader
	.loc	1 0 0                           // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:0:0
	mov.b32 	%f4, %r14;
	mov.b32 	%f3, %r13;
	mov.b32 	%f2, %r12;
	mov.b32 	%f1, %r11;
	.loc	1 32 36                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:32:36
	mad.lo.s32 	%r134, %r5, 6080, %r1;
	shl.b32 	%r135, %r4, 6;
	add.s32 	%r136, %r134, %r135;
	add.s32 	%r195, %r136, %r3;
	mov.f32 	%f55, 0f00000000;
	mov.u64 	%rd39, -8;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_2:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd36, %r195, 4;
	add.s64 	%rd35, %rd3, %rd36;
	mov.b32 	%r141, 0;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r137, 0x0;
	mov.u32 %r138, 0x0;
	mov.u32 %r139, 0x0;
	mov.u32 %r140, 0x0;
	@%p63 ld.global.L1::evict_first.v4.b32 { %r137, %r138, %r139, %r140 }, [ %rd35 + 0 ];
	@!%p63 mov.u32 %r137, %r141;
	@!%p63 mov.u32 %r138, %r141;
	@!%p63 mov.u32 %r139, %r141;
	@!%p63 mov.u32 %r140, %r141;
	// end inline asm
	mov.b32 	%f25, %r140;
	mov.b32 	%f26, %r139;
	mov.b32 	%f27, %r138;
	mov.b32 	%f28, %r137;
	.loc	1 37 22                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:37:22
	sub.f32 	%f29, %f28, %f1;
	sub.f32 	%f30, %f27, %f2;
	sub.f32 	%f31, %f26, %f3;
	sub.f32 	%f32, %f25, %f4;
	.loc	1 40 23                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:40:23
	fma.rn.f32 	%f58, %f32, %f32, %f58;
	fma.rn.f32 	%f57, %f31, %f31, %f57;
	fma.rn.f32 	%f56, %f30, %f30, %f56;
	fma.rn.f32 	%f55, %f29, %f29, %f55;
	.loc	1 32 36                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:32:36
	add.s64 	%rd39, %rd39, 8;
	add.s32 	%r195, %r195, 512;
	setp.lt.u64 	%p68, %rd39, 88;
	@%p68 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %.split.preheader
	.loc	1 0 36                          // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:0:36
	mad.lo.s32 	%r6, %r5, 6144, %r21;
	.loc	1 36 42                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:42
	shl.b32 	%r123, %r4, 6;
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	or.b32  	%r124, %r6, %r123;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd20, %r124, 4;
	add.s64 	%rd8, %rd3, %rd20;
	mov.b32 	%r31, 0;
	mov.pred 	%p3, 0;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd8 + 0 ];
	@!%p3 mov.u32 %r27, %r31;
	@!%p3 mov.u32 %r28, %r31;
	@!%p3 mov.u32 %r29, %r31;
	@!%p3 mov.u32 %r30, %r31;
	// end inline asm
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	cvt.s64.s32 	%rd21, %r6;
	cvt.u64.u32 	%rd22, %r123;
	add.s64 	%rd23, %rd21, %rd22;
	shl.b64 	%rd24, %rd23, 2;
	add.s64 	%rd25, %rd3, %rd24;
	add.s64 	%rd9, %rd25, 2048;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	@!%p3 mov.u32 %r35, %r31;
	@!%p3 mov.u32 %r36, %r31;
	@!%p3 mov.u32 %r37, %r31;
	@!%p3 mov.u32 %r38, %r31;
	// end inline asm
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	add.s64 	%rd10, %rd25, 4096;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd10 + 0 ];
	@!%p3 mov.u32 %r43, %r31;
	@!%p3 mov.u32 %r44, %r31;
	@!%p3 mov.u32 %r45, %r31;
	@!%p3 mov.u32 %r46, %r31;
	// end inline asm
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	add.s64 	%rd11, %rd25, 6144;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd11 + 0 ];
	@!%p3 mov.u32 %r51, %r31;
	@!%p3 mov.u32 %r52, %r31;
	@!%p3 mov.u32 %r53, %r31;
	@!%p3 mov.u32 %r54, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r125, %r6, %r123;
	add.s32 	%r126, %r125, 2048;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd26, %r126, 4;
	add.s64 	%rd12, %rd3, %rd26;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r59, %r60, %r61, %r62 }, [ %rd12 + 0 ];
	@!%p3 mov.u32 %r59, %r31;
	@!%p3 mov.u32 %r60, %r31;
	@!%p3 mov.u32 %r61, %r31;
	@!%p3 mov.u32 %r62, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r127, %r125, 2560;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd27, %r127, 4;
	add.s64 	%rd13, %rd3, %rd27;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r67, %r68, %r69, %r70 }, [ %rd13 + 0 ];
	@!%p3 mov.u32 %r67, %r31;
	@!%p3 mov.u32 %r68, %r31;
	@!%p3 mov.u32 %r69, %r31;
	@!%p3 mov.u32 %r70, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r128, %r125, 3072;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd28, %r128, 4;
	add.s64 	%rd14, %rd3, %rd28;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r75, %r76, %r77, %r78 }, [ %rd14 + 0 ];
	@!%p3 mov.u32 %r75, %r31;
	@!%p3 mov.u32 %r76, %r31;
	@!%p3 mov.u32 %r77, %r31;
	@!%p3 mov.u32 %r78, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r129, %r125, 3584;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd29, %r129, 4;
	add.s64 	%rd15, %rd3, %rd29;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r83, %r84, %r85, %r86 }, [ %rd15 + 0 ];
	@!%p3 mov.u32 %r83, %r31;
	@!%p3 mov.u32 %r84, %r31;
	@!%p3 mov.u32 %r85, %r31;
	@!%p3 mov.u32 %r86, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r130, %r125, 4096;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd30, %r130, 4;
	add.s64 	%rd16, %rd3, %rd30;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r91, 0x0;
	mov.u32 %r92, 0x0;
	mov.u32 %r93, 0x0;
	mov.u32 %r94, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r91, %r92, %r93, %r94 }, [ %rd16 + 0 ];
	@!%p3 mov.u32 %r91, %r31;
	@!%p3 mov.u32 %r92, %r31;
	@!%p3 mov.u32 %r93, %r31;
	@!%p3 mov.u32 %r94, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r131, %r125, 4608;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd31, %r131, 4;
	add.s64 	%rd17, %rd3, %rd31;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	mov.u32 %r102, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r99, %r100, %r101, %r102 }, [ %rd17 + 0 ];
	@!%p3 mov.u32 %r99, %r31;
	@!%p3 mov.u32 %r100, %r31;
	@!%p3 mov.u32 %r101, %r31;
	@!%p3 mov.u32 %r102, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r132, %r125, 5120;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd32, %r132, 4;
	add.s64 	%rd18, %rd3, %rd32;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	mov.u32 %r110, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r107, %r108, %r109, %r110 }, [ %rd18 + 0 ];
	@!%p3 mov.u32 %r107, %r31;
	@!%p3 mov.u32 %r108, %r31;
	@!%p3 mov.u32 %r109, %r31;
	@!%p3 mov.u32 %r110, %r31;
	// end inline asm
	.loc	1 36 47                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:47
	add.s32 	%r133, %r125, 5632;
	.loc	1 36 34                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:34
	mul.wide.s32 	%rd33, %r133, 4;
	add.s64 	%rd19, %rd3, %rd33;
	.loc	1 36 57                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:36:57
	// begin inline asm
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	mov.u32 %r117, 0x0;
	mov.u32 %r118, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r115, %r116, %r117, %r118 }, [ %rd19 + 0 ];
	@!%p3 mov.u32 %r115, %r31;
	@!%p3 mov.u32 %r116, %r31;
	@!%p3 mov.u32 %r117, %r31;
	@!%p3 mov.u32 %r118, %r31;
	// end inline asm
	mov.f32 	%f55, 0f00000000;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_3:                              // %.split2.us
	.loc	1 23 44                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:23:44
	and.b32  	%r167, %r2, 63;
	.loc	1 23 23                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:23:23
	or.b32  	%r168, %r1, %r167;
	.loc	1 24 21                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:24:21
	setp.lt.s32 	%p79, %r168, 512;
	.loc	1 23 44                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:23:44
	and.b32  	%r169, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f55;
	shfl.sync.bfly.b32	%r171, %r170, 16, 31, -1;
	mov.b32 	%f33, %r171;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f55, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r172, %f56;
	shfl.sync.bfly.b32	%r173, %r172, 16, 31, -1;
	mov.b32 	%f35, %r173;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f56, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r174, %f57;
	shfl.sync.bfly.b32	%r175, %r174, 16, 31, -1;
	mov.b32 	%f37, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f57, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f58;
	shfl.sync.bfly.b32	%r177, %r176, 16, 31, -1;
	mov.b32 	%f39, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f58, %f39;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p69, %r169, 0;
	shr.u32 	%r178, %r2, 3;
	and.b32  	%r179, %r178, 12;
	shl.b32 	%r180, %r3, 4;
	or.b32  	%r181, %r180, %r179;
	mov.u32 	%r182, global_smem;
	add.s32 	%r145, %r182, %r181;
	mov.b32 	%r146, %f34;
	// begin inline asm
	@%p69 st.shared.b32 [ %r145 + 0 ], %r146;
	// end inline asm
	add.s32 	%r147, %r145, 16;
	mov.b32 	%r148, %f36;
	// begin inline asm
	@%p69 st.shared.b32 [ %r147 + 0 ], %r148;
	// end inline asm
	add.s32 	%r149, %r145, 32;
	mov.b32 	%r150, %f38;
	// begin inline asm
	@%p69 st.shared.b32 [ %r149 + 0 ], %r150;
	// end inline asm
	add.s32 	%r151, %r145, 48;
	mov.b32 	%r152, %f40;
	// begin inline asm
	@%p69 st.shared.b32 [ %r151 + 0 ], %r152;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p73, %r2, 256;
	add.s32 	%r154, %r182, %r15;
	// begin inline asm
	@%p73 ld.shared.b32 %r153, [ %r154 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r153;
	shfl.sync.bfly.b32	%r184, %r153, 2, 31, -1;
	mov.b32 	%f42, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r185, %f43;
	shfl.sync.bfly.b32	%r186, %r185, 1, 31, -1;
	mov.b32 	%f44, %r186;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r187, %r2, 3;
	setp.eq.s32 	%p80, %r187, 0;
	and.pred  	%p74, %p73, %p80;
	mov.b32 	%r156, %f45;
	// begin inline asm
	@%p74 st.shared.b32 [ %r154 + 0 ], %r156;
	// end inline asm
	add.s32 	%r158, %r154, 512;
	// begin inline asm
	@%p73 ld.shared.b32 %r157, [ %r158 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r157;
	shfl.sync.bfly.b32	%r188, %r157, 2, 31, -1;
	mov.b32 	%f47, %r188;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r189, %f48;
	shfl.sync.bfly.b32	%r190, %r189, 1, 31, -1;
	mov.b32 	%f49, %r190;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f50;
	// begin inline asm
	@%p74 st.shared.b32 [ %r158 + 0 ], %r160;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r191, %r182, %r180;
	ld.shared.u32 	%r162, [%r191];
	ld.shared.u32 	%r163, [%r191+16];
	ld.shared.u32 	%r164, [%r191+32];
	ld.shared.u32 	%r165, [%r191+48];
$L__tmp2:
	.loc	1 42 28                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:42:28
	bar.sync 	0;
	mad.lo.s32 	%r161, %r3, -12, %r191;
	// begin inline asm
	@%p63 st.shared.v4.b32 [ %r161 + 0 ], { %r162, %r163, %r164, %r165 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r192, %r167, 2;
	add.s32 	%r193, %r182, %r192;
	ld.shared.u32 	%r166, [%r193];
	.loc	1 43 25                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:43:25
	mul.wide.s32 	%rd38, %r168, 4;
	add.s64 	%rd37, %rd4, %rd38;
	.loc	1 43 36                         // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:43:36
	and.b32  	%r194, %r2, 64;
	setp.eq.s32 	%p81, %r194, 0;
	and.pred  	%p78, %p81, %p79;
	// begin inline asm
	@%p78 st.global.b32 [ %rd37 + 0 ], { %r166 };
	// end inline asm
	.loc	1 43 4                          // c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6j/c6jujydpqqqkytigdqi7zy5r3dtdir2i62npl4c74v6twkvrjzs6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 106
.b8 117
.b8 106
.b8 121
.b8 100
.b8 112
.b8 113
.b8 113
.b8 113
.b8 107
.b8 121
.b8 116
.b8 105
.b8 103
.b8 100
.b8 113
.b8 105
.b8 55
.b8 122
.b8 121
.b8 53
.b8 114
.b8 51
.b8 100
.b8 116
.b8 100
.b8 105
.b8 114
.b8 50
.b8 105
.b8 54
.b8 50
.b8 110
.b8 112
.b8 108
.b8 52
.b8 99
.b8 55
.b8 52
.b8 118
.b8 54
.b8 116
.b8 119
.b8 107
.b8 118
.b8 114
.b8 106
.b8 122
.b8 115
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
