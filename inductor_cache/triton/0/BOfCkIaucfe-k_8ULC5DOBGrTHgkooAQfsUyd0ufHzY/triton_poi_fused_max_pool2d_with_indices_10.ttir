#loc = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":19:0), %arg1: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<256xi8> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<256xi8> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<256xi8> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<256xi8> loc(#loc1)
    %cst_3 = arith.constant dense<544> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<17424> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<528> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16384> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_9 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_9 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_8 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_7 : tensor<256xi32> loc(#loc9)
    %9 = arith.muli %7, %cst_6 : tensor<256xi32> loc(#loc10)
    %10 = arith.addi %5, %9 : tensor<256xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_5 : tensor<256xi32> loc(#loc12)
    %12 = arith.addi %10, %11 : tensor<256xi32> loc(#loc13)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %14 = tt.addptr %13, %12 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %5, %cst_4 : tensor<256xi32> loc(#loc16)
    %17 = arith.addi %16, %9 : tensor<256xi32> loc(#loc17)
    %18 = arith.addi %17, %11 : tensor<256xi32> loc(#loc18)
    %19 = tt.addptr %13, %18 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %20 = tt.load %19 : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %5, %cst_6 : tensor<256xi32> loc(#loc21)
    %22 = arith.addi %21, %9 : tensor<256xi32> loc(#loc22)
    %23 = arith.addi %22, %11 : tensor<256xi32> loc(#loc23)
    %24 = tt.addptr %13, %23 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc24)
    %25 = tt.load %24 : tensor<256x!tt.ptr<f32>> loc(#loc25)
    %26 = arith.addi %5, %cst_3 : tensor<256xi32> loc(#loc26)
    %27 = arith.addi %26, %9 : tensor<256xi32> loc(#loc27)
    %28 = arith.addi %27, %11 : tensor<256xi32> loc(#loc28)
    %29 = tt.addptr %13, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %30 = tt.load %29 : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %31 = arith.cmpf ogt, %20, %15 : tensor<256xf32> loc(#loc31)
    %32 = arith.select %31, %cst_2, %cst_1 : tensor<256xi1>, tensor<256xi8> loc(#loc32)
    %33 = arith.cmpf une, %20, %20 : tensor<256xf32> loc(#loc45)
    %34 = arith.ori %31, %33 : tensor<256xi1> loc(#loc46)
    %35 = arith.select %34, %20, %15 : tensor<256xi1>, tensor<256xf32> loc(#loc47)
    %36 = arith.cmpf ogt, %25, %35 : tensor<256xf32> loc(#loc37)
    %37 = arith.select %36, %cst_0, %32 : tensor<256xi1>, tensor<256xi8> loc(#loc38)
    %38 = arith.cmpf une, %25, %25 : tensor<256xf32> loc(#loc48)
    %39 = arith.ori %36, %38 : tensor<256xi1> loc(#loc49)
    %40 = arith.select %39, %25, %35 : tensor<256xi1>, tensor<256xf32> loc(#loc50)
    %41 = arith.cmpf ogt, %30, %40 : tensor<256xf32> loc(#loc40)
    %42 = arith.select %41, %cst, %37 : tensor<256xi1>, tensor<256xi8> loc(#loc41)
    %43 = tt.splat %arg1 : !tt.ptr<i8> -> tensor<256x!tt.ptr<i8>> loc(#loc42)
    %44 = tt.addptr %43, %4 : tensor<256x!tt.ptr<i8>>, tensor<256xi32> loc(#loc42)
    tt.store %44, %42 : tensor<256x!tt.ptr<i8>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":21:28)
#loc3 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":21:33)
#loc4 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":22:36)
#loc5 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":22:23)
#loc6 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":24:19)
#loc7 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":25:21)
#loc8 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":25:28)
#loc9 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":26:19)
#loc10 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:39)
#loc11 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:35)
#loc12 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:50)
#loc13 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:44)
#loc14 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:30)
#loc15 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":28:55)
#loc16 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":29:35)
#loc17 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":29:40)
#loc18 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":29:49)
#loc19 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":29:30)
#loc20 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":29:60)
#loc21 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":30:36)
#loc22 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":30:41)
#loc23 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":30:50)
#loc24 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":30:30)
#loc25 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":30:61)
#loc26 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":31:37)
#loc27 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":31:42)
#loc28 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":31:51)
#loc29 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":31:31)
#loc30 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":31:62)
#loc31 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":32:18)
#loc32 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":35:32)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":36:40)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":37:18)
#loc38 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":39:33)
#loc39 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":40:41)
#loc40 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":41:20)
#loc41 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":43:35)
#loc42 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":45:25)
#loc43 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":45:37)
#loc44 = loc("inductor_cache/wt/cwt6aynfm6wjrahid2jra5pfcpm2mptwb44tyrh4j6ypo6ucrwwv.py":45:4)
#loc45 = loc(callsite(#loc33 at #loc34))
#loc46 = loc(callsite(#loc35 at #loc34))
#loc47 = loc(callsite(#loc36 at #loc34))
#loc48 = loc(callsite(#loc33 at #loc39))
#loc49 = loc(callsite(#loc35 at #loc39))
#loc50 = loc(callsite(#loc36 at #loc39))
