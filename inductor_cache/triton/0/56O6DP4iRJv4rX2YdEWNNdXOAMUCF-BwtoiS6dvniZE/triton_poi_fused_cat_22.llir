; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_22(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = sdiv i32 %10, 32, !dbg !14
  %12 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !15
  %13 = insertelement <2 x i32> %12, i32 %10, i64 1, !dbg !15
  %14 = srem <2 x i32> %13, <i32 64, i32 32>, !dbg !15
  %15 = sdiv i32 %10, 2048, !dbg !16
  %16 = extractelement <2 x i32> %14, i64 1, !dbg !17
  %17 = icmp slt i32 %16, 8, !dbg !18
  %18 = shl nsw i32 %16, 6, !dbg !17
  %19 = extractelement <2 x i32> %14, i64 0, !dbg !19
  %20 = add nsw i32 %19, %18, !dbg !20
  %21 = shl nsw i32 %15, 10, !dbg !21
  %22 = add nsw i32 %20, %21, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %17, i32 0, i1 %17) #1, !dbg !24
  %26 = and i32 %16, -8, !dbg !25
  %27 = icmp eq i32 %26, 8, !dbg !25
  %28 = add nsw i32 %19, 512, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %27, i32 0, i1 %27) #1, !dbg !26
  %30 = icmp eq i32 %26, 16, !dbg !27
  %31 = add nsw i32 %16, -16, !dbg !28
  %32 = shl nsw i32 %31, 6, !dbg !29
  %33 = add nsw i32 %28, %21, !dbg !30
  %34 = add nsw i32 %33, %32, !dbg !31
  %35 = sext i32 %34 to i64, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !32
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %30, i32 0, i1 %30) #1, !dbg !33
  %38 = bitcast i32 %37 to float, !dbg !33
  %39 = shl nsw i32 %11, 3, !dbg !34
  %40 = add nsw i32 %39, %31, !dbg !35
  %41 = sext i32 %40 to i64, !dbg !36
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !36
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %30, i32 0, i1 %30) #1, !dbg !37
  %44 = bitcast i32 %43 to float, !dbg !37
  %45 = fsub float 0.000000e+00, %44, !dbg !38
  %46 = fmul float %45, 0x3FF7154760000000, !dbg !42
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #1, !dbg !42
  %48 = fadd float %47, 1.000000e+00, !dbg !43
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %48) #1, !dbg !44
  %50 = fmul float %49, %44, !dbg !45
  %51 = fadd float %50, %38, !dbg !46
  %52 = icmp sgt i32 %16, 23, !dbg !47
  %53 = add nsw i32 %16, -24, !dbg !48
  %54 = shl nsw i32 %53, 6, !dbg !49
  %55 = add nsw i32 %33, %54, !dbg !50
  %56 = sext i32 %55 to i64, !dbg !51
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !51
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %52, i32 0, i1 %52) #1, !dbg !52
  %59 = bitcast i32 %58 to float, !dbg !52
  %60 = add nsw i32 %39, %53, !dbg !53
  %61 = sext i32 %60 to i64, !dbg !54
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !54
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %52, i32 0, i1 %52) #1, !dbg !55
  %64 = bitcast i32 %63 to float, !dbg !55
  %65 = fsub float 0.000000e+00, %64, !dbg !56
  %66 = fmul float %65, 0x3FF7154760000000, !dbg !58
  %67 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %66) #1, !dbg !58
  %68 = fadd float %67, 1.000000e+00, !dbg !59
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %68) #1, !dbg !60
  %70 = fmul float %69, %64, !dbg !61
  %71 = fadd float %70, %59, !dbg !62
  %72 = select i1 %52, float %71, float 0.000000e+00, !dbg !63
  %73 = select i1 %30, float %51, float %72, !dbg !64
  %74 = sext i32 %10 to i64, !dbg !65
  %75 = getelementptr float, ptr addrspace(1) %3, i64 %74, !dbg !65
  %76 = bitcast float %73 to i32, !dbg !66
  %77 = select i1 %27, i32 %29, i32 %76, !dbg !67
  %78 = select i1 %17, i32 %25, i32 %77, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %78, ptr addrspace(1) %75, i1 true) #1, !dbg !66
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cj6wodjdname3dsuz4basiwxhfis2mu6ytxxtx4xrmap6c5uftgn.py", directory: "inductor_cache/j6")
!4 = !{ptr @triton_poi_fused_cat_22, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_22, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_22", linkageName: "triton_poi_fused_cat_22", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 34, column: 39, scope: !7)
!18 = !DILocation(line: 33, column: 18, scope: !7)
!19 = !DILocation(line: 39, column: 37, scope: !7)
!20 = !DILocation(line: 34, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 50, scope: !7)
!22 = !DILocation(line: 34, column: 45, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 55, scope: !7)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 69, scope: !7)
!27 = !DILocation(line: 43, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 54, scope: !7)
!29 = !DILocation(line: 44, column: 46, scope: !7)
!30 = !DILocation(line: 44, column: 42, scope: !7)
!31 = !DILocation(line: 44, column: 60, scope: !7)
!32 = !DILocation(line: 44, column: 31, scope: !7)
!33 = !DILocation(line: 44, column: 70, scope: !7)
!34 = !DILocation(line: 45, column: 33, scope: !7)
!35 = !DILocation(line: 45, column: 39, scope: !7)
!36 = !DILocation(line: 45, column: 31, scope: !7)
!37 = !DILocation(line: 45, column: 53, scope: !7)
!38 = !DILocation(line: 47, column: 30, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!41 = !DILocation(line: 46, column: 23, scope: !7)
!42 = !DILocation(line: 47, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 47, column: 20, scope: !39, inlinedAt: !41)
!44 = !DILocation(line: 47, column: 16, scope: !39, inlinedAt: !41)
!45 = !DILocation(line: 47, column: 20, scope: !7)
!46 = !DILocation(line: 48, column: 20, scope: !7)
!47 = !DILocation(line: 51, column: 20, scope: !7)
!48 = !DILocation(line: 54, column: 54, scope: !7)
!49 = !DILocation(line: 54, column: 46, scope: !7)
!50 = !DILocation(line: 54, column: 60, scope: !7)
!51 = !DILocation(line: 54, column: 31, scope: !7)
!52 = !DILocation(line: 54, column: 70, scope: !7)
!53 = !DILocation(line: 55, column: 39, scope: !7)
!54 = !DILocation(line: 55, column: 31, scope: !7)
!55 = !DILocation(line: 55, column: 53, scope: !7)
!56 = !DILocation(line: 47, column: 30, scope: !39, inlinedAt: !57)
!57 = !DILocation(line: 56, column: 23, scope: !7)
!58 = !DILocation(line: 47, column: 29, scope: !39, inlinedAt: !57)
!59 = !DILocation(line: 47, column: 20, scope: !39, inlinedAt: !57)
!60 = !DILocation(line: 47, column: 16, scope: !39, inlinedAt: !57)
!61 = !DILocation(line: 57, column: 20, scope: !7)
!62 = !DILocation(line: 58, column: 20, scope: !7)
!63 = !DILocation(line: 60, column: 35, scope: !7)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 64, column: 25, scope: !7)
!66 = !DILocation(line: 64, column: 37, scope: !7)
!67 = !DILocation(line: 62, column: 34, scope: !7)
!68 = !DILocation(line: 63, column: 33, scope: !7)
!69 = !DILocation(line: 64, column: 4, scope: !7)
