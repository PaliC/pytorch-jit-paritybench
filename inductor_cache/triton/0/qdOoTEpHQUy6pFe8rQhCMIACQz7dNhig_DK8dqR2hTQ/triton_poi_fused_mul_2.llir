; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sdiv i32 %10, 16, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = sext i32 %10 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !18
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %11) #1, !dbg !19
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !19
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !19
  %24 = bitcast i32 %22 to float, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = fadd float %16, 3.000000e+00, !dbg !20
  %27 = fadd float %18, 3.000000e+00, !dbg !20
  %.inv = fcmp ole float %26, 0.000000e+00, !dbg !21
  %28 = select i1 %.inv, float 0.000000e+00, float %26, !dbg !21
  %.inv1 = fcmp ole float %27, 0.000000e+00, !dbg !21
  %29 = select i1 %.inv1, float 0.000000e+00, float %27, !dbg !21
  %30 = fcmp olt float %28, 6.000000e+00, !dbg !25
  %31 = fcmp olt float %29, 6.000000e+00, !dbg !25
  %32 = fcmp uno float %28, 0.000000e+00, !dbg !27
  %33 = fcmp uno float %29, 0.000000e+00, !dbg !27
  %34 = or i1 %30, %32, !dbg !28
  %35 = or i1 %31, %33, !dbg !28
  %36 = select i1 %34, float %28, float 6.000000e+00, !dbg !29
  %37 = select i1 %35, float %29, float 6.000000e+00, !dbg !29
  %38 = fmul float %36, %16, !dbg !30
  %39 = fmul float %37, %18, !dbg !30
  %40 = fmul float %38, 0x3FC5555560000000, !dbg !31
  %41 = fmul float %39, 0x3FC5555560000000, !dbg !31
  %42 = fmul float %40, %24, !dbg !32
  %43 = fmul float %41, %25, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !33
  %45 = bitcast float %42 to i32, !dbg !34
  %46 = bitcast float %43 to i32, !dbg !34
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %45, i32 %46, ptr addrspace(1) %44, i1 %11) #1, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5irunbcyunpul65yyg6cdjygbvd5kfwd5slyjvg4kkychdxowxa.py", directory: "inductor_cache/5i")
!4 = !{ptr @triton_poi_fused_mul_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_2", linkageName: "triton_poi_fused_mul_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 31, scope: !7)
!19 = !DILocation(line: 27, column: 36, scope: !7)
!20 = !DILocation(line: 29, column: 18, scope: !7)
!21 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 31, column: 40, scope: !7)
!25 = !DILocation(line: 110, column: 15, scope: !22, inlinedAt: !26)
!26 = !DILocation(line: 33, column: 40, scope: !7)
!27 = !DILocation(line: 112, column: 21, scope: !22, inlinedAt: !26)
!28 = !DILocation(line: 112, column: 16, scope: !22, inlinedAt: !26)
!29 = !DILocation(line: 113, column: 29, scope: !22, inlinedAt: !26)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 37, column: 19, scope: !7)
!33 = !DILocation(line: 38, column: 25, scope: !7)
!34 = !DILocation(line: 38, column: 37, scope: !7)
!35 = !DILocation(line: 38, column: 4, scope: !7)
