; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_7(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = srem i32 %9, 16, !dbg !14
  %11 = sdiv i32 %9, 4096, !dbg !15
  %12 = sext i32 %9 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 true) #1, !dbg !17
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !17
  %17 = bitcast i32 %15 to float, !dbg !17
  %18 = bitcast i32 %16 to float, !dbg !17
  %19 = shl nsw i32 %11, 4, !dbg !18
  %20 = add nsw i32 %19, %10, !dbg !19
  %21 = sext i32 %20 to i64, !dbg !20
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !20
  %23 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !21
  %24 = extractvalue { i32, i32 } %23, 0, !dbg !21
  %25 = extractvalue { i32, i32 } %23, 1, !dbg !21
  %26 = bitcast i32 %24 to float, !dbg !21
  %27 = bitcast i32 %25 to float, !dbg !21
  %28 = fadd float %26, 3.000000e+00, !dbg !22
  %29 = fadd float %27, 3.000000e+00, !dbg !22
  %.inv = fcmp ole float %28, 0.000000e+00, !dbg !23
  %30 = select i1 %.inv, float 0.000000e+00, float %28, !dbg !23
  %.inv1 = fcmp ole float %29, 0.000000e+00, !dbg !23
  %31 = select i1 %.inv1, float 0.000000e+00, float %29, !dbg !23
  %32 = fcmp olt float %30, 6.000000e+00, !dbg !27
  %33 = fcmp olt float %31, 6.000000e+00, !dbg !27
  %34 = fcmp uno float %30, 0.000000e+00, !dbg !29
  %35 = fcmp uno float %31, 0.000000e+00, !dbg !29
  %36 = or i1 %32, %34, !dbg !30
  %37 = or i1 %33, %35, !dbg !30
  %38 = fmul float %30, 0x3FC5555560000000, !dbg !31
  %39 = select i1 %36, float %38, float 1.000000e+00, !dbg !32
  %40 = fmul float %31, 0x3FC5555560000000, !dbg !31
  %41 = select i1 %37, float %40, float 1.000000e+00, !dbg !32
  %42 = fmul float %39, %17, !dbg !33
  %43 = fmul float %41, %18, !dbg !33
  %44 = bitcast float %42 to i32, !dbg !34
  %45 = bitcast float %43 to i32, !dbg !34
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %44, i32 %45, ptr addrspace(1) %13, i1 true) #1, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbsh2j3uuyy6y25tz3sbogllfztkpune75u2mq7p3og546ztpafd.py", directory: "inductor_cache/bs")
!4 = !{ptr @triton_poi_fused_mul_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_7", linkageName: "triton_poi_fused_mul_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 34, scope: !7)
!17 = !DILocation(line: 27, column: 39, scope: !7)
!18 = !DILocation(line: 28, column: 38, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 43, scope: !7)
!22 = !DILocation(line: 30, column: 18, scope: !7)
!23 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 32, column: 40, scope: !7)
!27 = !DILocation(line: 110, column: 15, scope: !24, inlinedAt: !28)
!28 = !DILocation(line: 34, column: 40, scope: !7)
!29 = !DILocation(line: 112, column: 21, scope: !24, inlinedAt: !28)
!30 = !DILocation(line: 112, column: 16, scope: !24, inlinedAt: !28)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 113, column: 29, scope: !24, inlinedAt: !28)
!33 = !DILocation(line: 37, column: 19, scope: !7)
!34 = !DILocation(line: 38, column: 40, scope: !7)
!35 = !DILocation(line: 38, column: 4, scope: !7)
