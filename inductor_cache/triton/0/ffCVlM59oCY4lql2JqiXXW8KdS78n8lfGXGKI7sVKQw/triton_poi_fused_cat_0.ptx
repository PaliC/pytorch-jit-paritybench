//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_0  // -- Begin function triton_poi_fused_cat_0
                                        // @triton_poi_fused_cat_0
.visible .entry triton_poi_fused_cat_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_0_param_1,
	.param .u32 triton_poi_fused_cat_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_0_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:21:33
	shl.b32 	%r20, %r1, 6;
	.loc	1 22 36                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:22:36
	mov.u32 	%r21, %tid.x;
	shl.b32 	%r22, %r21, 1;
	and.b32  	%r23, %r22, 2;
	and.b32  	%r24, %r22, 62;
	.loc	1 22 23                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:22:23
	or.b32  	%r25, %r20, %r24;
	or.b32  	%r26, %r23, %r20;
	or.b32  	%r27, %r26, 1;
	.loc	1 23 21                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:23:21
	setp.lt.s32 	%p17, %r25, 64;
	.loc	1 24 19                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:24:19
	shr.s32 	%r29, %r25, 31;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r25, %r30;
	.loc	1 25 19                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:25:19
	and.b32  	%r32, %r31, 1073741820;
	sub.s32 	%r33, %r25, %r32;
	bfe.s32 	%r34, %r1, 25, 1;
	shr.u32 	%r35, %r34, 30;
	add.s32 	%r36, %r27, %r35;
	and.b32  	%r37, %r36, 1073741764;
	sub.s32 	%r38, %r27, %r37;
	.loc	1 31 18                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:31:18
	setp.lt.s32 	%p1, %r25, 16;
	.loc	1 32 32                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:32:32
	shl.b32 	%r39, %r33, 2;
	shl.b32 	%r40, %r38, 2;
	.loc	1 32 41                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:32:41
	shl.b32 	%r41, %r31, 2;
	and.b32  	%r42, %r41, -16;
	.loc	1 32 37                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:32:37
	add.s32 	%r43, %r39, %r42;
	add.s32 	%r44, %r40, %r42;
	.loc	1 32 30                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:32:30
	mul.wide.s32 	%rd12, %r43, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mul.wide.s32 	%rd13, %r44, 4;
	add.s64 	%rd2, %rd10, %rd13;
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 36 18                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:36:18
	and.b32  	%r45, %r25, -16;
	setp.eq.s32 	%p18, %r45, 16;
	.loc	1 37 46                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:37:46
	add.s32 	%r46, %r42, -64;
	.loc	1 37 42                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:37:42
	add.s32 	%r47, %r46, %r39;
	or.b32  	%r48, %r47, 1;
	add.s32 	%r49, %r46, %r40;
	or.b32  	%r50, %r49, 1;
	.loc	1 37 31                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:37:31
	mul.wide.s32 	%rd14, %r48, 4;
	add.s64 	%rd3, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r50, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 37 66                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:37:66
	and.pred  	%p5, %p17, %p18;
	.loc	1 37 59                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:37:59
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p5 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 41 20                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:41:20
	setp.eq.s32 	%p19, %r45, 32;
	.loc	1 42 46                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:42:46
	add.s32 	%r51, %r42, -128;
	.loc	1 42 42                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:42:42
	add.s32 	%r52, %r51, %r39;
	or.b32  	%r53, %r52, 2;
	add.s32 	%r54, %r51, %r40;
	or.b32  	%r55, %r54, 2;
	.loc	1 42 31                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:42:31
	mul.wide.s32 	%rd16, %r53, 4;
	add.s64 	%rd5, %rd10, %rd16;
	mul.wide.s32 	%rd17, %r55, 4;
	add.s64 	%rd6, %rd10, %rd17;
	.loc	1 42 67                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:42:67
	and.pred  	%p9, %p17, %p19;
	.loc	1 42 59                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:42:59
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p9 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 46 46                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:46:46
	add.s32 	%r56, %r42, -192;
	.loc	1 46 42                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:46:42
	add.s32 	%r57, %r56, %r39;
	or.b32  	%r58, %r57, 3;
	add.s32 	%r59, %r56, %r40;
	or.b32  	%r60, %r59, 3;
	.loc	1 46 31                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:46:31
	mul.wide.s32 	%rd18, %r58, 4;
	add.s64 	%rd7, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r60, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 46 68                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:46:68
	setp.eq.s32 	%p13, %r45, 48;
	.loc	1 46 60                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:46:60
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p13 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 47 35                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:47:35
	selp.b32 	%r61, %r10, %r14, %p19;
	selp.b32 	%r62, %r12, %r16, %p19;
	.loc	1 48 34                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:48:34
	selp.b32 	%r63, %r6, %r61, %p18;
	selp.b32 	%r64, %r8, %r62, %p18;
	.loc	1 49 33                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:49:33
	selp.b32 	%r18, %r2, %r63, %p1;
	selp.b32 	%r19, %r4, %r64, %p1;
	.loc	1 50 25                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:50:25
	mul.wide.s32 	%rd20, %r25, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 50 37                         // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:50:37
	// begin inline asm
	@%p17 st.global.v2.b32 [ %rd9 + 0 ], { %r18, %r19 };
	// end inline asm
	.loc	1 50 4                          // culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py:50:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ul/culns7sadr3kxsg4mii475rrkulcbffqrc46liklpybwpf3ysx7n.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 108
.b8 110
.b8 115
.b8 55
.b8 115
.b8 97
.b8 100
.b8 114
.b8 51
.b8 107
.b8 120
.b8 115
.b8 103
.b8 52
.b8 109
.b8 105
.b8 105
.b8 52
.b8 55
.b8 53
.b8 114
.b8 114
.b8 107
.b8 117
.b8 108
.b8 99
.b8 98
.b8 102
.b8 102
.b8 113
.b8 114
.b8 99
.b8 52
.b8 54
.b8 108
.b8 105
.b8 107
.b8 108
.b8 112
.b8 121
.b8 98
.b8 119
.b8 112
.b8 102
.b8 51
.b8 121
.b8 115
.b8 120
.b8 55
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
