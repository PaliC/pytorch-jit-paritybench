; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_relu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 128, !dbg !14
  %10 = srem i32 %8, 2, !dbg !15
  %11 = sdiv i32 %8, 32, !dbg !16
  %12 = shl nsw i32 %10, 1, !dbg !17
  %13 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !18
  %14 = shufflevector <2 x i32> %13, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !18
  %15 = sdiv <2 x i32> %14, <i32 2, i32 4>, !dbg !18
  %16 = srem <2 x i32> %15, <i32 2, i32 8>, !dbg !19
  %17 = extractelement <2 x i32> %16, i64 1, !dbg !20
  %18 = icmp slt i32 %17, 4, !dbg !21
  %19 = shl nsw <2 x i32> %16, <i32 3, i32 4>, !dbg !22
  %20 = shl i32 %11, 6, !dbg !23
  %21 = add i32 %20, %12, !dbg !24
  %22 = extractelement <2 x i32> %19, i64 0, !dbg !25
  %23 = add i32 %21, %22, !dbg !26
  %24 = extractelement <2 x i32> %19, i64 1, !dbg !27
  %25 = add i32 %23, %24, !dbg !28
  %26 = sext i32 %25 to i64, !dbg !29
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !29
  %28 = and i1 %9, %18, !dbg !30
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !31
  %30 = icmp sgt i32 %17, 3, !dbg !20
  %31 = add i32 %21, -59, !dbg !32
  %32 = add i32 %31, %22, !dbg !25
  %33 = add i32 %32, %24, !dbg !27
  %34 = sext i32 %33 to i64, !dbg !33
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !33
  %36 = and i1 %9, %30, !dbg !34
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #1, !dbg !35
  %.v = select i1 %18, i32 %29, i32 %37, !dbg !36
  %38 = bitcast i32 %.v to float, !dbg !36
  %39 = fcmp olt float %38, 0.000000e+00, !dbg !37
  %40 = select i1 %39, float 0.000000e+00, float %38, !dbg !41
  %41 = sext i32 %8 to i64, !dbg !42
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !42
  %43 = bitcast float %40 to i32, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %43, ptr addrspace(1) %42, i1 %9) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cetvos5pnvsz55nyb6bplr5dnmk6yxjmfyzfyc6shvvjkc6wkxbl.py", directory: "inductor_cache/et")
!4 = !{ptr @triton_poi_fused_cat_relu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_relu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_relu_0", linkageName: "triton_poi_fused_cat_relu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 34, column: 32, scope: !7)
!18 = !DILocation(line: 26, column: 21, scope: !7)
!19 = !DILocation(line: 26, column: 26, scope: !7)
!20 = !DILocation(line: 35, column: 19, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 39, scope: !7)
!23 = !DILocation(line: 34, column: 57, scope: !7)
!24 = !DILocation(line: 34, column: 37, scope: !7)
!25 = !DILocation(line: 38, column: 48, scope: !7)
!26 = !DILocation(line: 34, column: 44, scope: !7)
!27 = !DILocation(line: 38, column: 65, scope: !7)
!28 = !DILocation(line: 34, column: 54, scope: !7)
!29 = !DILocation(line: 34, column: 30, scope: !7)
!30 = !DILocation(line: 34, column: 69, scope: !7)
!31 = !DILocation(line: 34, column: 62, scope: !7)
!32 = !DILocation(line: 38, column: 41, scope: !7)
!33 = !DILocation(line: 38, column: 30, scope: !7)
!34 = !DILocation(line: 38, column: 80, scope: !7)
!35 = !DILocation(line: 38, column: 73, scope: !7)
!36 = !DILocation(line: 39, column: 33, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 41, column: 42, scope: !7)
!41 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 42, column: 25, scope: !7)
!43 = !DILocation(line: 42, column: 37, scope: !7)
!44 = !DILocation(line: 42, column: 4, scope: !7)
