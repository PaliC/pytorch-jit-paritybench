//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_convolution_leaky_relu_12 // -- Begin function triton_poi_fused__unsafe_index_convolution_leaky_relu_12
                                        // @triton_poi_fused__unsafe_index_convolution_leaky_relu_12
.visible .entry triton_poi_fused__unsafe_index_convolution_leaky_relu_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_3,
	.param .u32 triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<62>;
	.loc	1 19 0                          // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:19:0

// %bb.0:
	ld.param.u64 	%rd24, [triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_0];
	ld.param.u64 	%rd25, [triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:21:33
	shl.b32 	%r14, %r1, 9;
	ld.param.u64 	%rd26, [triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_2];
	ld.param.u64 	%rd27, [triton_poi_fused__unsafe_index_convolution_leaky_relu_12_param_3];
	.loc	1 22 36                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 2;
	and.b32  	%r17, %r16, 508;
	.loc	1 22 23                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:22:23
	or.b32  	%r18, %r14, %r17;
	or.b32  	%r19, %r18, 2;
	.loc	1 24 21                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:24:21
	shr.s32 	%r21, %r18, 31;
	shr.u32 	%r22, %r21, 28;
	add.s32 	%r23, %r18, %r22;
	shr.s32 	%r24, %r23, 4;
	.loc	1 24 27                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:24:27
	shr.u32 	%r25, %r24, 28;
	add.s32 	%r26, %r24, %r25;
	and.b32  	%r27, %r26, -16;
	sub.s32 	%r28, %r24, %r27;
	.loc	1 25 19                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:25:19
	and.b32  	%r29, %r23, -16;
	sub.s32 	%r30, %r18, %r29;
	bfe.s32 	%r31, %r1, 22, 1;
	shr.u32 	%r32, %r31, 28;
	add.s32 	%r33, %r19, %r32;
	and.b32  	%r34, %r33, -16;
	sub.s32 	%r35, %r19, %r34;
	.loc	1 26 19                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:26:19
	shr.u32 	%r36, %r31, 24;
	add.s32 	%r37, %r18, %r36;
	shr.s32 	%r38, %r37, 8;
	.loc	1 27 28                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:27:28
	shr.u32 	%r39, %r38, 26;
	add.s32 	%r40, %r38, %r39;
	and.b32  	%r41, %r40, -64;
	sub.s32 	%r42, %r38, %r41;
	.loc	1 29 30                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:29:30
	mul.wide.s32 	%rd28, %r28, 8;
	add.s64 	%rd2, %rd24, %rd28;
	mov.pred 	%p1, -1;
	.loc	1 29 35                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:29:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:30:30
	mul.wide.s32 	%rd29, %r30, 8;
	add.s64 	%rd11, %rd24, %rd29;
	mul.wide.s32 	%rd30, %r35, 8;
	add.s64 	%rd14, %rd24, %rd30;
	.loc	1 30 35                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:30:35
	// begin inline asm
	mov.u64 %rd9, 0x0;
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd9, %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	mov.u64 %rd13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd12, %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:31:31
	mul.wide.s32 	%rd31, %r42, 4;
	add.s64 	%rd15, %rd26, %rd31;
	.loc	1 31 36                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:31:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 35 32                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:35:32
	shr.u64 	%rd32, %rd1, 60;
	and.b64  	%rd33, %rd32, 8;
	add.s64 	%rd34, %rd33, %rd1;
	.loc	1 39 49                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:39:49
	shl.b32 	%r43, %r38, 6;
	.loc	1 39 30                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:39:30
	shl.b64 	%rd35, %rd9, 2;
	add.s64 	%rd36, %rd25, %rd35;
	shr.u64 	%rd37, %rd9, 58;
	and.b64  	%rd38, %rd37, 32;
	add.s64 	%rd39, %rd36, %rd38;
	shl.b64 	%rd40, %rd34, 5;
	add.s64 	%rd41, %rd39, %rd40;
	mul.wide.s32 	%rd42, %r43, 4;
	add.s64 	%rd19, %rd41, %rd42;
	shl.b64 	%rd43, %rd10, 2;
	add.s64 	%rd44, %rd25, %rd43;
	shr.u64 	%rd45, %rd10, 58;
	and.b64  	%rd46, %rd45, 32;
	add.s64 	%rd47, %rd44, %rd46;
	add.s64 	%rd48, %rd47, %rd40;
	add.s64 	%rd20, %rd48, %rd42;
	shl.b64 	%rd49, %rd12, 2;
	add.s64 	%rd50, %rd25, %rd49;
	shr.u64 	%rd51, %rd12, 58;
	and.b64  	%rd52, %rd51, 32;
	add.s64 	%rd53, %rd50, %rd52;
	add.s64 	%rd54, %rd53, %rd40;
	add.s64 	%rd21, %rd54, %rd42;
	shl.b64 	%rd55, %rd13, 2;
	add.s64 	%rd56, %rd25, %rd55;
	shr.u64 	%rd57, %rd13, 58;
	and.b64  	%rd58, %rd57, 32;
	add.s64 	%rd59, %rd56, %rd58;
	add.s64 	%rd60, %rd59, %rd40;
	add.s64 	%rd22, %rd60, %rd42;
	.loc	1 39 54                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:39:54
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 31 36                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:31:36
	mov.b32 	%f1, %r5;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r3;
	mov.b32 	%f4, %r2;
	.loc	1 39 54                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:39:54
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r6;
	.loc	1 40 19                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:40:19
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
	.loc	1 42 20                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:42:20
	setp.gt.f32 	%p16, %f12, 0f00000000;
	setp.gt.f32 	%p17, %f11, 0f00000000;
	setp.gt.f32 	%p18, %f10, 0f00000000;
	setp.gt.f32 	%p19, %f9, 0f00000000;
	.loc	1 44 20                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:44:20
	mul.f32 	%f13, %f9, 0f3E4CCCCD;
	mul.f32 	%f14, %f10, 0f3E4CCCCD;
	mul.f32 	%f15, %f11, 0f3E4CCCCD;
	mul.f32 	%f16, %f12, 0f3E4CCCCD;
	.loc	1 45 35                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:45:35
	selp.f32 	%f17, %f9, %f13, %p19;
	selp.f32 	%f18, %f10, %f14, %p18;
	selp.f32 	%f19, %f11, %f15, %p17;
	selp.f32 	%f20, %f12, %f16, %p16;
	.loc	1 46 25                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:46:25
	mul.wide.s32 	%rd61, %r18, 4;
	add.s64 	%rd23, %rd27, %rd61;
	.loc	1 46 37                         // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:46:37
	mov.b32 	%r10, %f17;
	mov.b32 	%r11, %f18;
	mov.b32 	%r12, %f19;
	mov.b32 	%r13, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd23 + 0 ], { %r10, %r11, %r12, %r13 };
	// end inline asm
	.loc	1 46 4                          // cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fu/cfufvq5yq3jkihj5zkm4d4kgatmuwziupaw2ztu74kjm5hp4n7df.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 117
.b8 102
.b8 118
.b8 113
.b8 53
.b8 121
.b8 113
.b8 51
.b8 106
.b8 107
.b8 105
.b8 104
.b8 106
.b8 53
.b8 122
.b8 107
.b8 109
.b8 52
.b8 100
.b8 52
.b8 107
.b8 103
.b8 97
.b8 116
.b8 109
.b8 117
.b8 119
.b8 122
.b8 105
.b8 117
.b8 112
.b8 97
.b8 119
.b8 50
.b8 122
.b8 116
.b8 117
.b8 55
.b8 52
.b8 107
.b8 106
.b8 109
.b8 53
.b8 104
.b8 112
.b8 52
.b8 110
.b8 55
.b8 100
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
