//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<44>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_1];
$L__tmp0:
	.loc	1 21 28                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:21:33
	shl.b32 	%r30, %r1, 9;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_2];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_3];
	.loc	1 22 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:22:36
	mov.u32 	%r31, %tid.x;
	shl.b32 	%r32, %r31, 1;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_4];
	and.b32  	%r33, %r32, 510;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_5];
	.loc	1 22 23                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:22:23
	or.b32  	%r34, %r30, %r33;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_6];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_7];
	.loc	1 25 19                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:25:19
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 25;
	add.s32 	%r38, %r34, %r37;
	shr.s32 	%r39, %r38, 7;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_cat_12_param_8];
	.loc	1 24 19                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:24:19
	and.b32  	%r40, %r38, -128;
	sub.s32 	%r41, %r34, %r40;
	.loc	1 27 31                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:27:31
	mul.wide.s32 	%rd19, %r41, 4;
	add.s64 	%rd1, %rd13, %rd19;
	mov.pred 	%p1, -1;
	.loc	1 27 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:27:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 31                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:28:31
	add.s64 	%rd2, %rd14, %rd19;
	.loc	1 28 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:28:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 29 31                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:29:31
	add.s64 	%rd3, %rd15, %rd19;
	.loc	1 29 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:29:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 31                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:30:31
	add.s64 	%rd4, %rd16, %rd19;
	.loc	1 30 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:30:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 31                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:31:31
	add.s64 	%rd5, %rd17, %rd19;
	.loc	1 31 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:31:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 18                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:36:18
	setp.lt.s32 	%p6, %r41, 64;
	.loc	1 37 33                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:37:33
	shl.b32 	%r42, %r39, 6;
	.loc	1 37 39                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:37:39
	add.s32 	%r43, %r42, %r41;
	.loc	1 37 30                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:37:30
	mul.wide.s32 	%rd20, %r43, 4;
	add.s64 	%rd6, %rd11, %rd20;
	mov.b32 	%r14, 0;
	.loc	1 37 45                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:37:45
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	@!%p6 mov.u32 %r12, %r14;
	@!%p6 mov.u32 %r13, %r14;
	// end inline asm
	.loc	1 38 19                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:38:19
	setp.gt.s32 	%p9, %r41, 63;
	.loc	1 41 30                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:41:30
	add.s64 	%rd21, %rd12, %rd20;
	add.s64 	%rd7, %rd21, -256;
	.loc	1 41 53                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:41:53
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd7 + 0 ];
	@!%p9 mov.u32 %r16, %r14;
	@!%p9 mov.u32 %r17, %r14;
	// end inline asm
	.loc	1 45 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:45:20
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 46 27                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:46:27
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 42 33                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:42:33
	selp.b32 	%r27, %r13, %r17, %p6;
	mov.b32 	%f7, %r27;
	.loc	1 27 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:27:36
	mov.b32 	%f8, %r3;
	.loc	1 43 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:43:20
	sub.f32 	%f9, %f7, %f8;
	.loc	1 42 33                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:42:33
	selp.b32 	%r26, %r12, %r16, %p6;
	mov.b32 	%f10, %r26;
	.loc	1 27 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:27:36
	mov.b32 	%f11, %r2;
	.loc	1 43 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:43:20
	sub.f32 	%f12, %f10, %f11;
	.loc	1 31 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:31:36
	mov.b32 	%f13, %r11;
	mov.b32 	%f14, %r10;
	.loc	1 30 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:30:36
	mov.b32 	%f15, %r9;
	mov.b32 	%f16, %r8;
	.loc	1 29 36                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:29:36
	mov.b32 	%f17, %r7;
	mov.b32 	%f18, %r6;
	.loc	1 48 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:48:20
	mov.b32 	%r22, %f5;
	mov.b32 	%r21, 1065353216;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f19, %r20;
	mov.b32 	%r25, %f6;
	// begin inline asm
	div.full.f32 %r23, %r21, %r25;
	// end inline asm
	mov.b32 	%f20, %r23;
	.loc	1 51 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:51:20
	mul.f32 	%f21, %f12, %f19;
	mul.f32 	%f22, %f9, %f20;
	.loc	1 53 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:53:20
	fma.rn.f32 	%f23, %f21, %f18, %f16;
	fma.rn.f32 	%f24, %f22, %f17, %f15;
	.loc	1 55 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:55:20
	setp.gt.f32 	%p14, %f23, 0f00000000;
	setp.gt.f32 	%p15, %f24, 0f00000000;
	.loc	1 56 20                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:56:20
	mul.f32 	%f25, %f23, %f14;
	mul.f32 	%f26, %f24, %f13;
	.loc	1 57 35                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:57:35
	selp.f32 	%f27, %f23, %f25, %p14;
	selp.f32 	%f28, %f24, %f26, %p15;
	.loc	1 58 25                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:58:25
	mul.wide.s32 	%rd22, %r34, 4;
	add.s64 	%rd8, %rd18, %rd22;
	.loc	1 58 37                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:58:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd8 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 59 28                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:59:28
	add.s64 	%rd9, %rd10, %rd22;
	.loc	1 59 40                         // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:59:40
	mov.b32 	%r28, %f27;
	mov.b32 	%r29, %f28;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd9 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 59 4                          // ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py:59:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ij/ciju3j664ebtu4vwkhlmton5cgxpwl7awbvdd4aycsvi3s7chuvz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 106
.b8 117
.b8 51
.b8 106
.b8 54
.b8 54
.b8 52
.b8 101
.b8 98
.b8 116
.b8 117
.b8 52
.b8 118
.b8 119
.b8 107
.b8 104
.b8 108
.b8 109
.b8 116
.b8 111
.b8 110
.b8 53
.b8 99
.b8 103
.b8 120
.b8 112
.b8 119
.b8 108
.b8 55
.b8 97
.b8 119
.b8 98
.b8 118
.b8 100
.b8 100
.b8 52
.b8 97
.b8 121
.b8 99
.b8 115
.b8 118
.b8 105
.b8 51
.b8 115
.b8 55
.b8 99
.b8 104
.b8 117
.b8 118
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
