; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_36(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 6144, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 384, !dbg !15
  %12 = mul i32 %11, 384, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = srem i32 %11, 4, !dbg !17
  %14 = sdiv i32 %9, 1536, !dbg !18
  %15 = icmp slt i32 %.decomposed, 128, !dbg !19
  %16 = shl nsw i32 %.decomposed, 2, !dbg !20
  %17 = shl nsw i32 %14, 10, !dbg !21
  %18 = add nsw i32 %17, %13, !dbg !22
  %19 = add nsw i32 %18, %16, !dbg !23
  %20 = sext i32 %19 to i64, !dbg !24
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !24
  %22 = and i1 %10, %15, !dbg !25
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %22, i32 0, i1 %22) #1, !dbg !26
  %24 = and i32 %.decomposed, -128, !dbg !27
  %25 = icmp eq i32 %24, 128, !dbg !27
  %26 = and i1 %10, %25, !dbg !28
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %26, i32 0, i1 %26) #1, !dbg !29
  %28 = icmp sgt i32 %.decomposed, 255, !dbg !30
  %29 = add nsw i32 %.decomposed, -256, !dbg !31
  %30 = shl nsw i32 %29, 2, !dbg !32
  %31 = add nsw i32 %18, 512, !dbg !33
  %32 = add nsw i32 %31, %30, !dbg !34
  %33 = sext i32 %32 to i64, !dbg !35
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !35
  %35 = and i1 %10, %28, !dbg !36
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #1, !dbg !37
  %37 = bitcast i32 %36 to float, !dbg !37
  %38 = shl nsw i32 %11, 7, !dbg !38
  %39 = add nsw i32 %38, %29, !dbg !39
  %40 = sext i32 %39 to i64, !dbg !40
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !40
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %35, i32 0, i1 %35) #1, !dbg !41
  %43 = bitcast i32 %42 to float, !dbg !41
  %44 = fsub float 0.000000e+00, %43, !dbg !42
  %45 = fmul float %44, 0x3FF7154760000000, !dbg !46
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %45) #1, !dbg !46
  %47 = fadd float %46, 1.000000e+00, !dbg !47
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %47) #1, !dbg !48
  %49 = fmul float %48, %43, !dbg !49
  %50 = fadd float %49, %37, !dbg !50
  %51 = sext i32 %9 to i64, !dbg !51
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !51
  %53 = bitcast float %50 to i32, !dbg !52
  %54 = select i1 %28, i32 %53, i32 0, !dbg !53
  %55 = select i1 %25, i32 %27, i32 %54, !dbg !54
  %56 = select i1 %15, i32 %23, i32 %55, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %56, ptr addrspace(1) %52, i1 %10) #1, !dbg !52
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cy3u4musq6i5523paub7lmbevtdrtbhpui3nbvupowwhuzvjvzhv.py", directory: "inductor_cache/y3")
!4 = !{ptr @triton_poi_fused_cat_36, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_36, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_36", linkageName: "triton_poi_fused_cat_36", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 28, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 34, column: 38, scope: !7)
!21 = !DILocation(line: 34, column: 49, scope: !7)
!22 = !DILocation(line: 34, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 44, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 61, scope: !7)
!26 = !DILocation(line: 34, column: 54, scope: !7)
!27 = !DILocation(line: 38, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 77, scope: !7)
!29 = !DILocation(line: 39, column: 70, scope: !7)
!30 = !DILocation(line: 40, column: 20, scope: !7)
!31 = !DILocation(line: 43, column: 54, scope: !7)
!32 = !DILocation(line: 43, column: 45, scope: !7)
!33 = !DILocation(line: 43, column: 42, scope: !7)
!34 = !DILocation(line: 43, column: 60, scope: !7)
!35 = !DILocation(line: 43, column: 31, scope: !7)
!36 = !DILocation(line: 43, column: 78, scope: !7)
!37 = !DILocation(line: 43, column: 70, scope: !7)
!38 = !DILocation(line: 44, column: 35, scope: !7)
!39 = !DILocation(line: 44, column: 41, scope: !7)
!40 = !DILocation(line: 44, column: 31, scope: !7)
!41 = !DILocation(line: 44, column: 56, scope: !7)
!42 = !DILocation(line: 47, column: 30, scope: !43, inlinedAt: !45)
!43 = distinct !DILexicalBlockFile(scope: !7, file: !44, discriminator: 0)
!44 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!45 = !DILocation(line: 45, column: 23, scope: !7)
!46 = !DILocation(line: 47, column: 29, scope: !43, inlinedAt: !45)
!47 = !DILocation(line: 47, column: 20, scope: !43, inlinedAt: !45)
!48 = !DILocation(line: 47, column: 16, scope: !43, inlinedAt: !45)
!49 = !DILocation(line: 46, column: 20, scope: !7)
!50 = !DILocation(line: 47, column: 20, scope: !7)
!51 = !DILocation(line: 52, column: 25, scope: !7)
!52 = !DILocation(line: 52, column: 37, scope: !7)
!53 = !DILocation(line: 49, column: 35, scope: !7)
!54 = !DILocation(line: 50, column: 34, scope: !7)
!55 = !DILocation(line: 51, column: 33, scope: !7)
!56 = !DILocation(line: 52, column: 4, scope: !7)
