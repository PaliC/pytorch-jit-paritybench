//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__weight_norm_interface_convolution_9 // -- Begin function triton_poi_fused__weight_norm_interface_convolution_9
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__weight_norm_interface_convolution_9
.visible .entry triton_poi_fused__weight_norm_interface_convolution_9(
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_4,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_9_param_5,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_9_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<70>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused__weight_norm_interface_convolution_9_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused__weight_norm_interface_convolution_9_param_1];
$L__tmp0:
	.loc	1 22 28                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:22:33
	shl.b32 	%r23, %r1, 3;
	ld.param.u64 	%rd11, [triton_poi_fused__weight_norm_interface_convolution_9_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused__weight_norm_interface_convolution_9_param_3];
	.loc	1 23 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:23:44
	mov.u32 	%r24, %tid.x;
	shl.b32 	%r25, %r24, 1;
	ld.param.u64 	%rd13, [triton_poi_fused__weight_norm_interface_convolution_9_param_4];
	and.b32  	%r26, %r25, 6;
	bfe.u32 	%r27, %r24, 5, 2;
	.loc	1 23 23                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:23:23
	or.b32  	%r28, %r23, %r26;
	or.b32  	%r29, %r23, %r27;
	or.b32  	%r30, %r29, 4;
	.loc	1 24 21                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:24:21
	setp.lt.s32 	%p2, %r28, 512;
	setp.lt.s32 	%p11, %r29, 512;
	setp.lt.s32 	%p12, %r30, 512;
	.loc	1 25 28                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:25:33
	shl.b32 	%r31, %r2, 5;
	.loc	1 26 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:26:44
	bfe.u32 	%r32, %r24, 2, 5;
	and.b32  	%r33, %r24, 31;
	.loc	1 26 23                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:26:23
	or.b32  	%r34, %r31, %r32;
	or.b32  	%r35, %r31, %r33;
	.loc	1 27 21                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:27:21
	setp.lt.s32 	%p13, %r34, 25;
	setp.lt.s32 	%p14, %r35, 25;
	.loc	1 30 19                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:30:19
	shr.s32 	%r37, %r28, 31;
	shr.u32 	%r38, %r37, 28;
	add.s32 	%r39, %r28, %r38;
	shr.s32 	%r40, %r39, 4;
	.loc	1 29 19                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:29:19
	and.b32  	%r41, %r39, -16;
	sub.s32 	%r42, %r28, %r41;
	.loc	1 32 38                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:38
	shl.b32 	%r43, %r34, 4;
	.loc	1 32 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:35
	add.s32 	%r44, %r43, %r42;
	.loc	1 32 43                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:43
	mad.lo.s32 	%r45, %r40, 400, %r44;
	.loc	1 32 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:30
	mul.wide.s32 	%rd14, %r45, 4;
	add.s64 	%rd1, %rd9, %rd14;
	.loc	1 32 60                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:60
	and.pred  	%p1, %p2, %p13;
	and.pred  	%p8, %p11, %p14;
	and.pred  	%p9, %p12, %p14;
	.loc	1 32 52                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:52
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:33:30
	mul.wide.s32 	%rd15, %r40, 4;
	add.s64 	%rd2, %rd10, %rd15;
	.loc	1 33 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:34:30
	add.s64 	%rd4, %rd11, %rd15;
	.loc	1 34 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:34:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r11 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:35:18
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f3, %r9;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f4, %r12;
	.loc	1 36 18                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:36:18
	mul.f32 	%f5, %f3, %f1;
	mul.f32 	%f6, %f4, %f2;
	.loc	1 37 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:30
	mad.lo.s32 	%r46, %r29, 25, %r35;
	add.s32 	%r47, %r46, 100;
	.loc	1 37 25                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:25
	mul.wide.s32 	%rd16, %r46, 4;
	add.s64 	%rd6, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r47, 4;
	add.s64 	%rd7, %rd12, %rd17;
	.loc	1 37 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:44
	shl.b32 	%r48, %r24, 6;
	and.b32  	%r49, %r48, 192;
	or.b32  	%r50, %r49, %r32;
	and.b32  	%r51, %r24, 127;
	shr.u32 	%r52, %r49, 3;
	mov.u32 	%r53, global_smem;
	add.s32 	%r54, %r53, %r52;
	shl.b32 	%r55, %r50, 2;
	add.s32 	%r15, %r54, %r55;
	mov.b32 	%r16, %f5;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r56, %r49, 32;
	shr.u32 	%r57, %r56, 3;
	add.s32 	%r58, %r53, %r57;
	add.s32 	%r59, %r58, %r55;
	add.s32 	%r17, %r59, 128;
	mov.b32 	%r18, %f6;
	// begin inline asm
	@%p6 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r60, %r24, 3;
	and.b32  	%r61, %r60, 12;
	add.s32 	%r62, %r53, %r61;
	shl.b32 	%r63, %r51, 2;
	add.s32 	%r64, %r62, %r63;
	ld.shared.u32 	%r19, [%r64];
	or.b32  	%r65, %r51, 128;
	shr.u32 	%r66, %r65, 3;
	and.b32  	%r67, %r66, 28;
	add.s32 	%r68, %r53, %r67;
	add.s32 	%r69, %r68, %r63;
	ld.shared.u32 	%r20, [%r69+512];
	// begin inline asm
	@%p8 st.global.b32 [ %rd6 + 0 ], { %r19 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.b32 [ %rd7 + 0 ], { %r20 };
	// end inline asm
	.loc	1 38 25                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:25
	add.s64 	%rd8, %rd13, %rd14;
	.loc	1 38 53                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:53
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd8 + 0 ], { %r16, %r18 };
	// end inline asm
	.loc	1 38 4                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/c7/cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 55
.b8 99
.b8 52
.b8 120
.b8 107
.b8 102
.b8 105
.b8 101
.b8 110
.b8 110
.b8 112
.b8 119
.b8 111
.b8 119
.b8 118
.b8 119
.b8 50
.b8 120
.b8 101
.b8 54
.b8 103
.b8 116
.b8 109
.b8 103
.b8 121
.b8 116
.b8 108
.b8 55
.b8 115
.b8 107
.b8 101
.b8 55
.b8 102
.b8 102
.b8 55
.b8 108
.b8 120
.b8 108
.b8 98
.b8 108
.b8 110
.b8 54
.b8 50
.b8 55
.b8 102
.b8 55
.b8 122
.b8 101
.b8 122
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
