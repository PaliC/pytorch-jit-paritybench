; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 1024, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 16, !dbg !15
  %13 = srem i32 %12, 16, !dbg !16
  %14 = mul i32 %12, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %.frozen1 = freeze i32 %10, !dbg !18
  %15 = sdiv i32 %.frozen1, 256, !dbg !18
  %16 = icmp slt i32 %13, 4, !dbg !19
  %17 = mul i32 %15, 256, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %17, !dbg !20
  %18 = shl nsw i32 %15, 6, !dbg !21
  %19 = add nsw i32 %18, %srem.decomposed, !dbg !22
  %20 = sext i32 %19 to i64, !dbg !23
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !23
  %22 = and i1 %11, %16, !dbg !24
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %22, i32 0, i1 %22) #1, !dbg !25
  %24 = bitcast i32 %23 to float, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !26
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %22, i32 0, i1 %22) #1, !dbg !27
  %27 = bitcast i32 %26 to float, !dbg !27
  %28 = fsub float %24, %27, !dbg !28
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !29
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %22, i32 0, i1 %22) #1, !dbg !30
  %31 = bitcast i32 %30 to float, !dbg !30
  %32 = fsub float %28, %31, !dbg !31
  %33 = and i32 %13, -4, !dbg !32
  %34 = icmp eq i32 %33, 4, !dbg !32
  %35 = shl nsw i32 %13, 4, !dbg !33
  %36 = add nsw i32 %18, %.decomposed, !dbg !33
  %37 = add nsw i32 %36, -64, !dbg !34
  %38 = add nsw i32 %37, %35, !dbg !35
  %39 = sext i32 %38 to i64, !dbg !36
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !36
  %41 = and i1 %11, %34, !dbg !37
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !38
  %43 = bitcast i32 %42 to float, !dbg !38
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !39
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %41, i32 0, i1 %41) #1, !dbg !40
  %46 = bitcast i32 %45 to float, !dbg !40
  %47 = fsub float %43, %46, !dbg !41
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !42
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %41, i32 0, i1 %41) #1, !dbg !43
  %50 = bitcast i32 %49 to float, !dbg !43
  %51 = fadd float %47, %50, !dbg !44
  %52 = icmp eq i32 %33, 8, !dbg !45
  %53 = add nsw i32 %36, -128, !dbg !46
  %54 = add nsw i32 %53, %35, !dbg !47
  %55 = sext i32 %54 to i64, !dbg !48
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !48
  %57 = and i1 %11, %52, !dbg !49
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %57, i32 0, i1 %57) #1, !dbg !50
  %59 = bitcast i32 %58 to float, !dbg !50
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !51
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %57, i32 0, i1 %57) #1, !dbg !52
  %62 = bitcast i32 %61 to float, !dbg !52
  %63 = fadd float %59, %62, !dbg !53
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !54
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %57, i32 0, i1 %57) #1, !dbg !55
  %66 = bitcast i32 %65 to float, !dbg !55
  %67 = fsub float %63, %66, !dbg !56
  %68 = icmp sgt i32 %13, 11, !dbg !57
  %69 = add nsw i32 %36, -192, !dbg !58
  %70 = add nsw i32 %69, %35, !dbg !59
  %71 = sext i32 %70 to i64, !dbg !60
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !60
  %73 = and i1 %11, %68, !dbg !61
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %73, i32 0, i1 %73) #1, !dbg !62
  %75 = bitcast i32 %74 to float, !dbg !62
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !63
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %73, i32 0, i1 %73) #1, !dbg !64
  %78 = bitcast i32 %77 to float, !dbg !64
  %79 = fadd float %75, %78, !dbg !65
  %80 = getelementptr float, ptr addrspace(1) %2, i64 %71, !dbg !66
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %73, i32 0, i1 %73) #1, !dbg !67
  %82 = bitcast i32 %81 to float, !dbg !67
  %83 = fadd float %79, %82, !dbg !68
  %84 = select i1 %68, float %83, float 0.000000e+00, !dbg !69
  %85 = select i1 %52, float %67, float %84, !dbg !70
  %86 = select i1 %34, float %51, float %85, !dbg !70
  %87 = select i1 %16, float %32, float %86, !dbg !70
  %88 = sext i32 %10 to i64, !dbg !71
  %89 = getelementptr float, ptr addrspace(1) %3, i64 %88, !dbg !71
  %90 = bitcast float %87 to i32, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %89, i1 %11) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c67imslvsv35yb4tcfef22w6asufjgq7snufhjya63q752kzwlas.py", directory: "inductor_cache/67")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 48, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 34, column: 30, scope: !7)
!27 = !DILocation(line: 34, column: 53, scope: !7)
!28 = !DILocation(line: 37, column: 18, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 54, scope: !7)
!31 = !DILocation(line: 40, column: 19, scope: !7)
!32 = !DILocation(line: 46, column: 20, scope: !7)
!33 = !DILocation(line: 47, column: 40, scope: !7)
!34 = !DILocation(line: 47, column: 36, scope: !7)
!35 = !DILocation(line: 47, column: 53, scope: !7)
!36 = !DILocation(line: 47, column: 31, scope: !7)
!37 = !DILocation(line: 47, column: 69, scope: !7)
!38 = !DILocation(line: 47, column: 61, scope: !7)
!39 = !DILocation(line: 48, column: 31, scope: !7)
!40 = !DILocation(line: 48, column: 61, scope: !7)
!41 = !DILocation(line: 51, column: 20, scope: !7)
!42 = !DILocation(line: 52, column: 31, scope: !7)
!43 = !DILocation(line: 52, column: 61, scope: !7)
!44 = !DILocation(line: 55, column: 20, scope: !7)
!45 = !DILocation(line: 61, column: 20, scope: !7)
!46 = !DILocation(line: 62, column: 36, scope: !7)
!47 = !DILocation(line: 62, column: 53, scope: !7)
!48 = !DILocation(line: 62, column: 31, scope: !7)
!49 = !DILocation(line: 62, column: 69, scope: !7)
!50 = !DILocation(line: 62, column: 61, scope: !7)
!51 = !DILocation(line: 63, column: 31, scope: !7)
!52 = !DILocation(line: 63, column: 61, scope: !7)
!53 = !DILocation(line: 66, column: 20, scope: !7)
!54 = !DILocation(line: 67, column: 31, scope: !7)
!55 = !DILocation(line: 67, column: 61, scope: !7)
!56 = !DILocation(line: 70, column: 20, scope: !7)
!57 = !DILocation(line: 73, column: 20, scope: !7)
!58 = !DILocation(line: 76, column: 36, scope: !7)
!59 = !DILocation(line: 76, column: 54, scope: !7)
!60 = !DILocation(line: 76, column: 31, scope: !7)
!61 = !DILocation(line: 76, column: 70, scope: !7)
!62 = !DILocation(line: 76, column: 62, scope: !7)
!63 = !DILocation(line: 77, column: 31, scope: !7)
!64 = !DILocation(line: 77, column: 62, scope: !7)
!65 = !DILocation(line: 80, column: 20, scope: !7)
!66 = !DILocation(line: 81, column: 31, scope: !7)
!67 = !DILocation(line: 81, column: 62, scope: !7)
!68 = !DILocation(line: 83, column: 20, scope: !7)
!69 = !DILocation(line: 85, column: 35, scope: !7)
!70 = !DILocation(line: 0, scope: !7)
!71 = !DILocation(line: 89, column: 25, scope: !7)
!72 = !DILocation(line: 89, column: 37, scope: !7)
!73 = !DILocation(line: 89, column: 4, scope: !7)
