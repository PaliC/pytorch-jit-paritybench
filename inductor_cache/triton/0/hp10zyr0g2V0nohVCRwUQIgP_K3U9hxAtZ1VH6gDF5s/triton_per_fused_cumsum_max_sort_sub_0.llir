; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_cumsum_max_sort_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = icmp slt i32 %7, 64, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 1, !dbg !12
  %11 = and i32 %9, 3, !dbg !12
  %12 = shl i32 %7, 2, !dbg !13
  %13 = or disjoint i32 %12, %11, !dbg !14
  %14 = sext i32 %13 to i64, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !15
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %8, i32 0, i1 %8) #2, !dbg !16
  %17 = bitcast i32 %16 to float, !dbg !16
  %18 = sext i32 %12 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %8) #2, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = or disjoint i32 %12, 1, !dbg !19
  %23 = sext i32 %22 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %8) #2, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = or disjoint i32 %12, 2, !dbg !22
  %28 = sext i32 %27 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %8) #2, !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = or disjoint i32 %12, 3, !dbg !25
  %33 = sext i32 %32 to i64, !dbg !26
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !26
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %8) #2, !dbg !27
  %36 = bitcast i32 %35 to float, !dbg !27
  %37 = fcmp ogt float %21, %26, !dbg !28
  %38 = fcmp uno float %21, 0.000000e+00, !dbg !32
  %39 = or i1 %38, %37, !dbg !33
  %40 = select i1 %39, float %21, float %26, !dbg !34
  %41 = fcmp ogt float %40, %31, !dbg !35
  %42 = fcmp uno float %40, 0.000000e+00, !dbg !37
  %43 = or i1 %41, %42, !dbg !38
  %44 = select i1 %43, float %40, float %31, !dbg !39
  %45 = fcmp ogt float %44, %36, !dbg !40
  %46 = fcmp uno float %44, 0.000000e+00, !dbg !42
  %47 = or i1 %45, %46, !dbg !43
  %48 = select i1 %47, float %44, float %36, !dbg !44
  %49 = fsub float %17, %48, !dbg !45
  %50 = lshr i32 %9, 1, !dbg !46
  %.lobit = and i32 %50, 1, !dbg !46
  %51 = bitcast float %49 to i32, !dbg !49
  %52 = xor i32 %.lobit, 1, !dbg !51
  %53 = xor i32 %10, 1, !dbg !51
  %54 = mul nuw nsw i32 %53, %51, !dbg !52
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 1, i32 31), !dbg !53
  %56 = add i32 %54, %55, !dbg !56
  %57 = mul nuw nsw i32 %10, %51, !dbg !58
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 1, i32 31), !dbg !53
  %59 = add i32 %57, %58, !dbg !56
  %60 = bitcast i32 %56 to float, !dbg !59
  %61 = bitcast i32 %59 to float, !dbg !60
  %62 = trunc i32 %50 to i1, !dbg !61
  %63 = fcmp uge float %60, %61, !dbg !61
  %.not = xor i1 %63, %62, !dbg !61
  %64 = xor i32 %56, %59, !dbg !62
  %65 = select i1 %.not, i32 0, i32 %64, !dbg !63
  %66 = xor i32 %65, %51, !dbg !64
  %67 = mul nuw nsw i32 %66, %52, !dbg !52
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 2, i32 31), !dbg !53
  %69 = add i32 %67, %68, !dbg !56
  %70 = mul nuw nsw i32 %66, %.lobit, !dbg !58
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 2, i32 31), !dbg !53
  %72 = add i32 %70, %71, !dbg !56
  %73 = bitcast i32 %69 to float, !dbg !59
  %74 = bitcast i32 %72 to float, !dbg !60
  %75 = fcmp olt float %73, %74, !dbg !65
  %76 = xor i32 %69, %72, !dbg !62
  %77 = select i1 %75, i32 %76, i32 0, !dbg !63
  %78 = xor i32 %77, %66, !dbg !64
  %79 = mul nuw nsw i32 %78, %53, !dbg !52
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 1, i32 31), !dbg !53
  %81 = add i32 %79, %80, !dbg !56
  %82 = mul nuw nsw i32 %78, %10, !dbg !58
  %83 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 1, i32 31), !dbg !53
  %84 = add i32 %82, %83, !dbg !56
  %85 = bitcast i32 %81 to float, !dbg !59
  %86 = bitcast i32 %84 to float, !dbg !60
  %87 = fcmp olt float %85, %86, !dbg !65
  %88 = xor i32 %81, %84, !dbg !62
  %89 = select i1 %87, i32 %88, i32 0, !dbg !63
  %90 = xor i32 %89, %78, !dbg !64
  %91 = bitcast i32 %90 to float, !dbg !66
  %92 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %90, i32 1, i32 0), !dbg !67
  %93 = bitcast i32 %92 to float, !dbg !67
  %.not1 = icmp eq i32 %11, 0, !dbg !67
  %94 = fadd float %93, %91, !dbg !68
  %95 = select i1 %.not1, float %91, float %94, !dbg !67
  %96 = bitcast float %95 to i32, !dbg !67
  %97 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %96, i32 2, i32 0), !dbg !67
  %98 = bitcast i32 %97 to float, !dbg !67
  %99 = icmp samesign ugt i32 %11, 1, !dbg !67
  %100 = fadd float %95, %98, !dbg !68
  %101 = select i1 %99, float %100, float %95, !dbg !67
  %102 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !70
  %103 = and i32 %9, 60, !dbg !71
  %104 = icmp eq i32 %103, 0, !dbg !71
  %105 = and i1 %104, %8, !dbg !71
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %102, i1 %105) #2, !dbg !71
  %106 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %106, i1 %105) #2, !dbg !73
  %107 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !74
  %108 = bitcast float %101 to i32, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %108, ptr addrspace(1) %107, i1 %105) #2, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py", directory: "inductor_cache/oy")
!4 = !{ptr @triton_per_fused_cumsum_max_sort_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_cumsum_max_sort_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_cumsum_max_sort_sub_0", linkageName: "triton_per_fused_cumsum_max_sort_sub_0", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 28, column: 28, scope: !7)
!11 = !DILocation(line: 30, column: 21, scope: !7)
!12 = !DILocation(line: 31, column: 34, scope: !7)
!13 = !DILocation(line: 36, column: 37, scope: !7)
!14 = !DILocation(line: 36, column: 35, scope: !7)
!15 = !DILocation(line: 36, column: 30, scope: !7)
!16 = !DILocation(line: 36, column: 42, scope: !7)
!17 = !DILocation(line: 37, column: 30, scope: !7)
!18 = !DILocation(line: 37, column: 37, scope: !7)
!19 = !DILocation(line: 38, column: 34, scope: !7)
!20 = !DILocation(line: 38, column: 30, scope: !7)
!21 = !DILocation(line: 38, column: 41, scope: !7)
!22 = !DILocation(line: 39, column: 34, scope: !7)
!23 = !DILocation(line: 39, column: 30, scope: !7)
!24 = !DILocation(line: 39, column: 41, scope: !7)
!25 = !DILocation(line: 40, column: 34, scope: !7)
!26 = !DILocation(line: 40, column: 30, scope: !7)
!27 = !DILocation(line: 40, column: 41, scope: !7)
!28 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 41, column: 40, scope: !7)
!32 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !31)
!34 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!35 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !36)
!36 = !DILocation(line: 42, column: 40, scope: !7)
!37 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !36)
!38 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !36)
!39 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !36)
!40 = !DILocation(line: 118, column: 15, scope: !29, inlinedAt: !41)
!41 = !DILocation(line: 43, column: 40, scope: !7)
!42 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !41)
!43 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !41)
!44 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !41)
!45 = !DILocation(line: 44, column: 18, scope: !7)
!46 = !DILocation(line: 575, column: 44, scope: !47, inlinedAt: !48)
!47 = distinct !DILexicalBlockFile(scope: !29, file: !30, discriminator: 0)
!48 = !DILocation(line: 49, column: 71, scope: !7)
!49 = !DILocation(line: 502, column: 14, scope: !50, inlinedAt: !48)
!50 = distinct !DILexicalBlockFile(scope: !47, file: !30, discriminator: 0)
!51 = !DILocation(line: 505, column: 21, scope: !50, inlinedAt: !48)
!52 = !DILocation(line: 506, column: 40, scope: !50, inlinedAt: !48)
!53 = !DILocation(line: 267, column: 36, scope: !54, inlinedAt: !48)
!54 = distinct !DILexicalBlockFile(scope: !50, file: !55, discriminator: 0)
!55 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!56 = !DILocation(line: 256, column: 15, scope: !57, inlinedAt: !48)
!57 = distinct !DILexicalBlockFile(scope: !54, file: !55, discriminator: 0)
!58 = !DILocation(line: 507, column: 41, scope: !50, inlinedAt: !48)
!59 = !DILocation(line: 510, column: 20, scope: !50, inlinedAt: !48)
!60 = !DILocation(line: 511, column: 22, scope: !50, inlinedAt: !48)
!61 = !DILocation(line: 547, column: 28, scope: !50, inlinedAt: !48)
!62 = !DILocation(line: 548, column: 38, scope: !50, inlinedAt: !48)
!63 = !DILocation(line: 548, column: 46, scope: !50, inlinedAt: !48)
!64 = !DILocation(line: 548, column: 15, scope: !50, inlinedAt: !48)
!65 = !DILocation(line: 536, column: 22, scope: !50, inlinedAt: !48)
!66 = !DILocation(line: 551, column: 18, scope: !50, inlinedAt: !48)
!67 = !DILocation(line: 52, column: 46, scope: !7)
!68 = !DILocation(line: 13, column: 20, scope: !69, inlinedAt: !67)
!69 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!70 = !DILocation(line: 53, column: 25, scope: !7)
!71 = !DILocation(line: 53, column: 43, scope: !7)
!72 = !DILocation(line: 54, column: 25, scope: !7)
!73 = !DILocation(line: 54, column: 44, scope: !7)
!74 = !DILocation(line: 55, column: 25, scope: !7)
!75 = !DILocation(line: 55, column: 44, scope: !7)
!76 = !DILocation(line: 55, column: 4, scope: !7)
