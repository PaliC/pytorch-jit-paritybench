#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [16, 2, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [8, 2, 2], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#loc = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0)
#loc1 = loc(unknown)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc30 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":49:71)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc88 = loc(callsite(#loc1 at #loc39))
#loc94 = loc(callsite(#loc1 at #loc44))
#loc118 = loc(callsite(#loc88 at #loc34))
#loc124 = loc(callsite(#loc94 at #loc34))
#loc145 = loc(callsite(#loc118 at #loc29))
#loc151 = loc(callsite(#loc124 at #loc29))
#loc168 = loc(callsite(#loc145 at #loc30))
#loc171 = loc(callsite(#loc151 at #loc30))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_cumsum_max_sort_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg5: i32 loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked1> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x4xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked2> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c4_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x4xi32, #blocked> loc(#loc6)
    %6 = arith.addi %3, %5 : tensor<1x4xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x4xi1, #blocked> loc(#loc8)
    %10 = tt.load %8, %9, %cst : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc8)
    %11 = tt.addptr %arg0, %4 : !tt.ptr<f32>, i32 loc(#loc9)
    %12 = tt.splat %11 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc10)
    %13 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc10)
    %14 = tt.load %12, %13 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc10)
    %15 = arith.addi %4, %c1_i32 : i32 loc(#loc11)
    %16 = tt.addptr %arg0, %15 : !tt.ptr<f32>, i32 loc(#loc12)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %18 = tt.load %17, %13 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %19 = arith.addi %4, %c2_i32 : i32 loc(#loc14)
    %20 = tt.addptr %arg0, %19 : !tt.ptr<f32>, i32 loc(#loc15)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc16)
    %22 = tt.load %21, %13 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc16)
    %23 = arith.addi %4, %c3_i32 : i32 loc(#loc17)
    %24 = tt.addptr %arg0, %23 : !tt.ptr<f32>, i32 loc(#loc18)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %26 = tt.load %25, %13 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %27 = arith.cmpf ogt, %14, %18 : tensor<1x1xf32, #blocked> loc(#loc68)
    %28 = arith.cmpf une, %14, %14 : tensor<1x1xf32, #blocked> loc(#loc69)
    %29 = arith.ori %27, %28 : tensor<1x1xi1, #blocked> loc(#loc70)
    %30 = arith.select %29, %14, %18 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc71)
    %31 = arith.cmpf ogt, %30, %22 : tensor<1x1xf32, #blocked> loc(#loc72)
    %32 = arith.cmpf une, %30, %30 : tensor<1x1xf32, #blocked> loc(#loc73)
    %33 = arith.ori %31, %32 : tensor<1x1xi1, #blocked> loc(#loc74)
    %34 = arith.select %33, %30, %22 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc75)
    %35 = arith.cmpf ogt, %34, %26 : tensor<1x1xf32, #blocked> loc(#loc76)
    %36 = arith.cmpf une, %34, %34 : tensor<1x1xf32, #blocked> loc(#loc77)
    %37 = arith.ori %35, %36 : tensor<1x1xi1, #blocked> loc(#loc78)
    %38 = arith.select %37, %34, %26 : tensor<1x1xi1, #blocked>, tensor<1x1xf32, #blocked> loc(#loc79)
    %39 = tt.broadcast %38 : tensor<1x1xf32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc27)
    %40 = arith.subf %10, %39 : tensor<1x4xf32, #blocked> loc(#loc27)
    %41 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> loc(#loc110)
    %42 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc110)
    %43 = tt.expand_dims %41 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> loc(#loc110)
    %44 = tt.expand_dims %42 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc110)
    %45 = tt.expand_dims %43 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> -> tensor<1x2x1xi32, #blocked2> loc(#loc110)
    %46 = tt.expand_dims %44 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<1x2x1xi32, #blocked1> loc(#loc110)
    %47 = tt.broadcast %45 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc111)
    %48 = tt.reshape %47 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc112)
    %49 = tt.reshape %40 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc140)
    %50 = tt.bitcast %49 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc141)
    %51 = arith.subi %cst_2, %45 : tensor<1x2x1xi32, #blocked2> loc(#loc142)
    %52 = arith.subi %cst_0, %46 : tensor<1x2x1xi32, #blocked1> loc(#loc142)
    %53 = tt.broadcast %52 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc143)
    %54 = arith.muli %50, %53 : tensor<2x2x1xi32, #blocked1> loc(#loc143)
    %55 = "tt.reduce"(%54) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc145 at #loc30)), %arg7: i32 loc(callsite(#loc145 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc173)
      tt.reduce.return %124 : i32 loc(#loc167)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc167)
    %56 = tt.expand_dims %55 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc147)
    %57 = tt.broadcast %56 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc148)
    %58 = tt.broadcast %46 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc149)
    %59 = arith.muli %50, %58 : tensor<2x2x1xi32, #blocked1> loc(#loc149)
    %60 = "tt.reduce"(%59) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc151 at #loc30)), %arg7: i32 loc(callsite(#loc151 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc174)
      tt.reduce.return %124 : i32 loc(#loc170)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc170)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc153)
    %62 = tt.broadcast %61 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc154)
    %63 = tt.reshape %57 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc155)
    %64 = tt.reshape %62 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc156)
    %65 = tt.bitcast %63 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc157)
    %66 = tt.bitcast %64 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc158)
    %67 = tt.bitcast %40 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc159)
    %68 = arith.cmpf olt, %65, %66 : tensor<1x4xf32, #blocked> loc(#loc160)
    %69 = arith.extui %68 : tensor<1x4xi1, #blocked> to tensor<1x4xi32, #blocked> loc(#loc161)
    %70 = arith.xori %69, %48 : tensor<1x4xi32, #blocked> loc(#loc161)
    %71 = arith.cmpi ne, %70, %cst_1 : tensor<1x4xi32, #blocked> loc(#loc162)
    %72 = arith.xori %63, %64 : tensor<1x4xi32, #blocked> loc(#loc163)
    %73 = arith.select %71, %72, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc164)
    %74 = arith.xori %67, %73 : tensor<1x4xi32, #blocked> loc(#loc165)
    %75 = tt.bitcast %74 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc166)
    %76 = tt.reshape %75 : tensor<1x4xf32, #blocked> -> tensor<1x2x2xf32, #blocked2> loc(#loc140)
    %77 = tt.bitcast %76 : tensor<1x2x2xf32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc141)
    %78 = tt.broadcast %51 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc143)
    %79 = arith.muli %77, %78 : tensor<1x2x2xi32, #blocked2> loc(#loc143)
    %80 = "tt.reduce"(%79) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc145 at #loc30)), %arg7: i32 loc(callsite(#loc145 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc173)
      tt.reduce.return %124 : i32 loc(#loc167)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc167)
    %81 = tt.expand_dims %80 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc147)
    %82 = tt.broadcast %81 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc148)
    %83 = arith.muli %77, %47 : tensor<1x2x2xi32, #blocked2> loc(#loc149)
    %84 = "tt.reduce"(%83) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc151 at #loc30)), %arg7: i32 loc(callsite(#loc151 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc174)
      tt.reduce.return %124 : i32 loc(#loc170)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc170)
    %85 = tt.expand_dims %84 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc153)
    %86 = tt.broadcast %85 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc154)
    %87 = tt.reshape %82 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc155)
    %88 = tt.reshape %86 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc156)
    %89 = tt.bitcast %87 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc157)
    %90 = tt.bitcast %88 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc158)
    %91 = tt.bitcast %75 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc159)
    %92 = arith.cmpf olt, %89, %90 : tensor<1x4xf32, #blocked> loc(#loc160)
    %93 = arith.xori %87, %88 : tensor<1x4xi32, #blocked> loc(#loc163)
    %94 = arith.select %92, %93, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc164)
    %95 = arith.xori %91, %94 : tensor<1x4xi32, #blocked> loc(#loc165)
    %96 = tt.bitcast %95 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc166)
    %97 = tt.reshape %96 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc140)
    %98 = tt.bitcast %97 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc141)
    %99 = arith.muli %98, %53 : tensor<2x2x1xi32, #blocked1> loc(#loc143)
    %100 = "tt.reduce"(%99) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc145 at #loc30)), %arg7: i32 loc(callsite(#loc145 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc173)
      tt.reduce.return %124 : i32 loc(#loc167)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc167)
    %101 = tt.expand_dims %100 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc147)
    %102 = tt.broadcast %101 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc148)
    %103 = arith.muli %98, %58 : tensor<2x2x1xi32, #blocked1> loc(#loc149)
    %104 = "tt.reduce"(%103) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc151 at #loc30)), %arg7: i32 loc(callsite(#loc151 at #loc30))):
      %124 = arith.addi %arg6, %arg7 : i32 loc(#loc174)
      tt.reduce.return %124 : i32 loc(#loc170)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc170)
    %105 = tt.expand_dims %104 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc153)
    %106 = tt.broadcast %105 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc154)
    %107 = tt.reshape %102 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc155)
    %108 = tt.reshape %106 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc156)
    %109 = tt.bitcast %107 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc157)
    %110 = tt.bitcast %108 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc158)
    %111 = tt.bitcast %96 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc159)
    %112 = arith.cmpf olt, %109, %110 : tensor<1x4xf32, #blocked> loc(#loc160)
    %113 = arith.xori %107, %108 : tensor<1x4xi32, #blocked> loc(#loc163)
    %114 = arith.select %112, %113, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc164)
    %115 = arith.xori %111, %114 : tensor<1x4xi32, #blocked> loc(#loc165)
    %116 = tt.bitcast %115 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc166)
    %117 = "tt.scan"(%116) <{axis = 1 : i32, reverse = false}> ({
    ^bb0(%arg6: f32 loc(unknown), %arg7: f32 loc(unknown)):
      %124 = arith.addf %arg6, %arg7 : f32 loc(#loc109)
      tt.scan.return %124 : f32 loc(#loc59)
    }) : (tensor<1x4xf32, #blocked>) -> tensor<1x4xf32, #blocked> loc(#loc59)
    %118 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc61)
    %119 = tt.addptr %118, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc61)
    tt.store %119, %40, %9 : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc62)
    %120 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc63)
    %121 = tt.addptr %120, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc63)
    tt.store %121, %116, %9 : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc64)
    %122 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc65)
    %123 = tt.addptr %122, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc65)
    tt.store %123, %117, %9 : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc66)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":28:28)
#loc3 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":30:21)
#loc4 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":31:34)
#loc5 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:37)
#loc6 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:35)
#loc7 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:30)
#loc8 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:42)
#loc9 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":37:30)
#loc10 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":37:37)
#loc11 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:34)
#loc12 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:30)
#loc13 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:41)
#loc14 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:34)
#loc15 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:30)
#loc16 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:41)
#loc17 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:34)
#loc18 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:30)
#loc19 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:41)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc21 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":41:40)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":42:40)
#loc26 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":43:40)
#loc27 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":44:18)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":536:22)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc59 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":52:46)
#loc60 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":13:20)
#loc61 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":53:25)
#loc62 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":53:43)
#loc63 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":54:25)
#loc64 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":54:44)
#loc65 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:25)
#loc66 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:44)
#loc67 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:4)
#loc68 = loc(callsite(#loc20 at #loc21))
#loc69 = loc(callsite(#loc22 at #loc21))
#loc70 = loc(callsite(#loc23 at #loc21))
#loc71 = loc(callsite(#loc24 at #loc21))
#loc72 = loc(callsite(#loc20 at #loc25))
#loc73 = loc(callsite(#loc22 at #loc25))
#loc74 = loc(callsite(#loc23 at #loc25))
#loc75 = loc(callsite(#loc24 at #loc25))
#loc76 = loc(callsite(#loc20 at #loc26))
#loc77 = loc(callsite(#loc22 at #loc26))
#loc78 = loc(callsite(#loc23 at #loc26))
#loc79 = loc(callsite(#loc24 at #loc26))
#loc80 = loc(callsite(#loc28 at #loc29))
#loc81 = loc(callsite(#loc31 at #loc29))
#loc82 = loc(callsite(#loc32 at #loc29))
#loc83 = loc(callsite(#loc33 at #loc34))
#loc84 = loc(callsite(#loc35 at #loc34))
#loc85 = loc(callsite(#loc36 at #loc34))
#loc86 = loc(callsite(#loc37 at #loc34))
#loc87 = loc(callsite(#loc38 at #loc39))
#loc89 = loc(callsite(#loc40 at #loc38))
#loc90 = loc(callsite(#loc41 at #loc34))
#loc91 = loc(callsite(#loc42 at #loc34))
#loc92 = loc(callsite(#loc43 at #loc34))
#loc93 = loc(callsite(#loc38 at #loc44))
#loc95 = loc(callsite(#loc45 at #loc34))
#loc96 = loc(callsite(#loc46 at #loc34))
#loc97 = loc(callsite(#loc47 at #loc34))
#loc98 = loc(callsite(#loc48 at #loc34))
#loc99 = loc(callsite(#loc49 at #loc34))
#loc100 = loc(callsite(#loc50 at #loc34))
#loc101 = loc(callsite(#loc51 at #loc34))
#loc102 = loc(callsite(#loc52 at #loc34))
#loc103 = loc(callsite(#loc53 at #loc34))
#loc104 = loc(callsite(#loc54 at #loc34))
#loc105 = loc(callsite(#loc55 at #loc34))
#loc106 = loc(callsite(#loc56 at #loc34))
#loc107 = loc(callsite(#loc57 at #loc34))
#loc108 = loc(callsite(#loc58 at #loc34))
#loc109 = loc(callsite(#loc60 at #loc59))
#loc110 = loc(callsite(#loc80 at #loc30))
#loc111 = loc(callsite(#loc81 at #loc30))
#loc112 = loc(callsite(#loc82 at #loc30))
#loc113 = loc(callsite(#loc83 at #loc29))
#loc114 = loc(callsite(#loc84 at #loc29))
#loc115 = loc(callsite(#loc85 at #loc29))
#loc116 = loc(callsite(#loc86 at #loc29))
#loc117 = loc(callsite(#loc87 at #loc34))
#loc119 = loc(callsite(#loc89 at #loc39))
#loc120 = loc(callsite(#loc90 at #loc29))
#loc121 = loc(callsite(#loc91 at #loc29))
#loc122 = loc(callsite(#loc92 at #loc29))
#loc123 = loc(callsite(#loc93 at #loc34))
#loc125 = loc(callsite(#loc89 at #loc44))
#loc126 = loc(callsite(#loc95 at #loc29))
#loc127 = loc(callsite(#loc96 at #loc29))
#loc128 = loc(callsite(#loc97 at #loc29))
#loc129 = loc(callsite(#loc98 at #loc29))
#loc130 = loc(callsite(#loc99 at #loc29))
#loc131 = loc(callsite(#loc100 at #loc29))
#loc132 = loc(callsite(#loc101 at #loc29))
#loc133 = loc(callsite(#loc102 at #loc29))
#loc134 = loc(callsite(#loc103 at #loc29))
#loc135 = loc(callsite(#loc104 at #loc29))
#loc136 = loc(callsite(#loc105 at #loc29))
#loc137 = loc(callsite(#loc106 at #loc29))
#loc138 = loc(callsite(#loc107 at #loc29))
#loc139 = loc(callsite(#loc108 at #loc29))
#loc140 = loc(callsite(#loc113 at #loc30))
#loc141 = loc(callsite(#loc114 at #loc30))
#loc142 = loc(callsite(#loc115 at #loc30))
#loc143 = loc(callsite(#loc116 at #loc30))
#loc144 = loc(callsite(#loc117 at #loc29))
#loc146 = loc(callsite(#loc119 at #loc34))
#loc147 = loc(callsite(#loc120 at #loc30))
#loc148 = loc(callsite(#loc121 at #loc30))
#loc149 = loc(callsite(#loc122 at #loc30))
#loc150 = loc(callsite(#loc123 at #loc29))
#loc152 = loc(callsite(#loc125 at #loc34))
#loc153 = loc(callsite(#loc126 at #loc30))
#loc154 = loc(callsite(#loc127 at #loc30))
#loc155 = loc(callsite(#loc128 at #loc30))
#loc156 = loc(callsite(#loc129 at #loc30))
#loc157 = loc(callsite(#loc130 at #loc30))
#loc158 = loc(callsite(#loc131 at #loc30))
#loc159 = loc(callsite(#loc132 at #loc30))
#loc160 = loc(callsite(#loc133 at #loc30))
#loc161 = loc(callsite(#loc134 at #loc30))
#loc162 = loc(callsite(#loc135 at #loc30))
#loc163 = loc(callsite(#loc136 at #loc30))
#loc164 = loc(callsite(#loc137 at #loc30))
#loc165 = loc(callsite(#loc138 at #loc30))
#loc166 = loc(callsite(#loc139 at #loc30))
#loc167 = loc(callsite(#loc144 at #loc30))
#loc169 = loc(callsite(#loc146 at #loc29))
#loc170 = loc(callsite(#loc150 at #loc30))
#loc172 = loc(callsite(#loc152 at #loc29))
#loc173 = loc(callsite(#loc169 at #loc30))
#loc174 = loc(callsite(#loc172 at #loc30))
