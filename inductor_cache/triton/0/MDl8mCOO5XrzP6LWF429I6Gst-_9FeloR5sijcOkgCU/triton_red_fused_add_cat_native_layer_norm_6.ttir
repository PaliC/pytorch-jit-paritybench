#loc = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)
#loc1 = loc(unknown)
#loc61 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":62:44)
#loc118 = loc(callsite(#loc1 at #loc61))
module {
  tt.func public @triton_red_fused_add_cat_native_layer_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg10: i32 loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<7.680000e+02> : tensor<64x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<64x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<-1> : tensor<64x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<12288> : tensor<64x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<1> : tensor<64x1xi64> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_10 = arith.constant dense<768> : tensor<64x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<768> : tensor<1x64xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<17> : tensor<64x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<68> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_13 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8 = arith.remsi %5, %cst_12 : tensor<64x1xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_12 : tensor<64x1xi32> loc(#loc10)
    %10 = arith.muli %8, %cst_10 : tensor<64x1xi32> loc(#loc11)
    %11 = tt.broadcast %10 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc12)
    %12 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc14)
    %14 = arith.extsi %8 : tensor<64x1xi32> to tensor<64x1xi64> loc(#loc15)
    %15 = arith.cmpi slt, %14, %cst_8 : tensor<64x1xi64> loc(#loc15)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.broadcast %15 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc17)
    %18 = arith.cmpi sge, %14, %cst_8 : tensor<64x1xi64> loc(#loc18)
    %19 = arith.muli %9, %cst_6 : tensor<64x1xi32> loc(#loc19)
    %20 = tt.broadcast %19 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc20)
    %21 = arith.addi %8, %cst_5 : tensor<64x1xi32> loc(#loc21)
    %22 = arith.remsi %21, %cst_4 : tensor<64x1xi32> loc(#loc22)
    %23 = tt.broadcast %22 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc23)
    %24 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.broadcast %18 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc25)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc26)
    %27 = arith.muli %5, %cst_10 : tensor<64x1xi32> loc(#loc27)
    %28 = tt.broadcast %27 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc28)
    %29 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc29)
    %30:3 = scf.for %arg12 = %c0_i32 to %c768_i32 step %c64_i32 iter_args(%arg13 = %cst_9, %arg14 = %cst_9, %arg15 = %cst_9) -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %53 = tt.splat %arg12 : i32 -> tensor<1x64xi32> loc(#loc31)
      %54 = arith.addi %53, %7 : tensor<1x64xi32> loc(#loc31)
      %55 = arith.cmpi slt, %54, %cst_11 : tensor<1x64xi32> loc(#loc32)
      %56 = tt.broadcast %54 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc12)
      %57 = arith.addi %56, %11 : tensor<64x64xi32> loc(#loc12)
      %58 = tt.addptr %12, %57 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc13)
      %59 = tt.broadcast %55 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc14)
      %60 = arith.andi %59, %13 : tensor<64x64xi1> loc(#loc14)
      %61 = tt.load %58, %60, %cst_9 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc33)
      %62 = tt.addptr %16, %54 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
      %63 = tt.broadcast %62 : tensor<1x64x!tt.ptr<f32>> -> tensor<64x64x!tt.ptr<f32>> loc(#loc16)
      %64 = arith.andi %59, %17 : tensor<64x64xi1> loc(#loc17)
      %65 = arith.andi %64, %13 : tensor<64x64xi1> loc(#loc34)
      %66 = tt.load %63, %65, %cst_9 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc35)
      %67 = arith.muli %54, %cst_7 : tensor<1x64xi32> loc(#loc36)
      %68 = tt.broadcast %67 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc20)
      %69 = arith.addi %68, %20 : tensor<64x64xi32> loc(#loc20)
      %70 = arith.addi %69, %23 : tensor<64x64xi32> loc(#loc23)
      %71 = tt.addptr %24, %70 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc24)
      %72 = arith.andi %59, %25 : tensor<64x64xi1> loc(#loc25)
      %73 = arith.andi %72, %13 : tensor<64x64xi1> loc(#loc37)
      %74 = tt.load %71, %73, %cst_9 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc38)
      %75 = tt.addptr %26, %54 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc26)
      %76 = tt.broadcast %75 : tensor<1x64x!tt.ptr<f32>> -> tensor<64x64x!tt.ptr<f32>> loc(#loc26)
      %77 = tt.load %76, %73, %cst_9 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc39)
      %78 = arith.addf %74, %77 : tensor<64x64xf32> loc(#loc40)
      %79 = arith.select %25, %78, %cst_9 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc41)
      %80 = arith.select %17, %66, %79 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc42)
      %81 = arith.addf %80, %61 : tensor<64x64xf32> loc(#loc43)
      %82 = arith.cmpi eq, %arg12, %c0_i32 : i32 loc(#loc44)
      %83:3 = scf.if %82 -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) {
        scf.yield %cst_9, %81, %cst_0 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc109)
      } else {
        %89 = arith.subf %81, %arg13 : tensor<64x64xf32> loc(#loc110)
        %90 = arith.addf %arg15, %cst_0 : tensor<64x64xf32> loc(#loc111)
        %91 = arith.divf %89, %90 : tensor<64x64xf32> loc(#loc112)
        %92 = arith.addf %arg13, %91 : tensor<64x64xf32> loc(#loc113)
        %93 = arith.subf %81, %92 : tensor<64x64xf32> loc(#loc114)
        %94 = arith.mulf %89, %93 : tensor<64x64xf32> loc(#loc115)
        %95 = arith.addf %arg14, %94 : tensor<64x64xf32> loc(#loc116)
        scf.yield %95, %92, %90 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc116)
      } loc(#loc108)
      %84 = arith.select %60, %83#1, %arg13 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc55)
      %85 = arith.select %60, %83#0, %arg14 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc56)
      %86 = arith.select %60, %83#2, %arg15 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc57)
      %87 = arith.addi %56, %28 : tensor<64x64xi32> loc(#loc28)
      %88 = tt.addptr %29, %87 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc29)
      tt.store %88, %80, %60 : tensor<64x64x!tt.ptr<f32>> loc(#loc58)
      scf.yield %84, %85, %86 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc59)
    } loc(#loc30)
    %31:3 = "tt.reduce"(%30#0, %30#1, %30#2) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc61)), %arg13: f32 loc(callsite(#loc1 at #loc61)), %arg14: f32 loc(callsite(#loc1 at #loc61)), %arg15: f32 loc(callsite(#loc1 at #loc61)), %arg16: f32 loc(callsite(#loc1 at #loc61)), %arg17: f32 loc(callsite(#loc1 at #loc61))):
      %53 = arith.subf %arg15, %arg12 : f32 loc(#loc131)
      %54 = arith.addf %arg14, %arg17 : f32 loc(#loc132)
      %55 = arith.cmpf oeq, %54, %cst : f32 loc(#loc133)
      %56 = arith.divf %arg17, %54 : f32 loc(#loc134)
      %57 = arith.select %55, %cst, %56 : f32 loc(#loc135)
      %58 = arith.mulf %53, %57 : f32 loc(#loc136)
      %59 = arith.addf %arg12, %58 : f32 loc(#loc137)
      %60 = arith.addf %arg13, %arg16 : f32 loc(#loc138)
      %61 = arith.mulf %53, %53 : f32 loc(#loc139)
      %62 = arith.mulf %61, %arg14 : f32 loc(#loc140)
      %63 = arith.mulf %62, %57 : f32 loc(#loc141)
      %64 = arith.addf %60, %63 : f32 loc(#loc142)
      tt.reduce.return %59, %64, %54 : f32, f32, f32 loc(#loc117)
    }) : (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc117)
    %32 = tt.expand_dims %31#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc74)
    %33 = tt.expand_dims %31#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc75)
    %34 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc76)
    %35 = tt.addptr %34, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc76)
    tt.store %35, %32, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc77)
    %36 = arith.divf %33, %cst_3 : tensor<64x1xf32> loc(#loc78)
    %37 = arith.addf %36, %cst_2 : tensor<64x1xf32> loc(#loc79)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc80)
    gpu.barrier loc(#loc81)
    %39 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc82)
    %40 = tt.addptr %39, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc82)
    tt.store %40, %38, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc83)
    %41 = arith.muli %5, %cst_10 : tensor<64x1xi32> loc(#loc84)
    %42 = tt.broadcast %41 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc85)
    %43 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc86)
    %44 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc87)
    %45 = arith.muli %8, %cst_10 : tensor<64x1xi32> loc(#loc88)
    %46 = tt.broadcast %45 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc89)
    %47 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc90)
    %48 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc91)
    %49 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc92)
    %50 = tt.broadcast %32 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc93)
    %51 = tt.broadcast %38 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc94)
    %52 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc95)
    scf.for %arg12 = %c0_i32 to %c768_i32 step %c64_i32  : i32 {
      %53 = tt.splat %arg12 : i32 -> tensor<1x64xi32> loc(#loc97)
      %54 = arith.addi %53, %7 : tensor<1x64xi32> loc(#loc97)
      %55 = arith.cmpi slt, %54, %cst_11 : tensor<1x64xi32> loc(#loc98)
      %56 = tt.broadcast %54 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc85)
      %57 = arith.addi %56, %42 : tensor<64x64xi32> loc(#loc85)
      %58 = tt.addptr %43, %57 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc86)
      %59 = tt.broadcast %55 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc87)
      %60 = arith.andi %59, %44 : tensor<64x64xi1> loc(#loc87)
      %61 = tt.load %58, %60, %cst_9 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<f32>> loc(#loc99)
      %62 = arith.addi %56, %46 : tensor<64x64xi32> loc(#loc89)
      %63 = tt.addptr %47, %62 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc90)
      %64 = tt.load %63, %60, %cst_9 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc100)
      %65 = tt.addptr %48, %54 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc91)
      %66 = tt.load %65, %55, %cst_1 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc101)
      %67 = tt.addptr %49, %54 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc92)
      %68 = tt.load %67, %55, %cst_1 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc102)
      %69 = arith.addf %61, %64 : tensor<64x64xf32> loc(#loc103)
      %70 = arith.subf %69, %50 : tensor<64x64xf32> loc(#loc93)
      %71 = arith.mulf %70, %51 : tensor<64x64xf32> loc(#loc94)
      %72 = tt.broadcast %66 : tensor<1x64xf32> -> tensor<64x64xf32> loc(#loc104)
      %73 = arith.mulf %71, %72 : tensor<64x64xf32> loc(#loc104)
      %74 = tt.broadcast %68 : tensor<1x64xf32> -> tensor<64x64xf32> loc(#loc105)
      %75 = arith.addf %73, %74 : tensor<64x64xf32> loc(#loc105)
      %76 = tt.addptr %52, %57 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc95)
      tt.store %76, %75, %60 : tensor<64x64x!tt.ptr<f32>> loc(#loc106)
    } loc(#loc96)
    tt.return loc(#loc107)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":22:28)
#loc3 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":22:33)
#loc4 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":23:36)
#loc5 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":23:44)
#loc6 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":23:23)
#loc7 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":24:21)
#loc8 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":25:33)
#loc9 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":26:19)
#loc10 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":27:19)
#loc11 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:44)
#loc12 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:40)
#loc13 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:35)
#loc14 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:57)
#loc15 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":41:22)
#loc16 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:34)
#loc17 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:82)
#loc18 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":43:23)
#loc19 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:48)
#loc20 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:42)
#loc21 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:63)
#loc22 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:69)
#loc23 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:55)
#loc24 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:34)
#loc25 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:84)
#loc26 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:35)
#loc27 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:38)
#loc28 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:34)
#loc29 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:29)
#loc30 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":32:36)
#loc31 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":33:27)
#loc32 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":34:25)
#loc33 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":36:49)
#loc34 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:89)
#loc35 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":42:74)
#loc36 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:37)
#loc37 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:91)
#loc38 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":46:76)
#loc39 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":47:75)
#loc40 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":48:23)
#loc41 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":50:38)
#loc42 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":51:37)
#loc43 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":52:24)
#loc44 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":55:66)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc46 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":55:55)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc55 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":57:62)
#loc56 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":58:58)
#loc57 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":59:66)
#loc58 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:50)
#loc59 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":60:8)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc74 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":64:22)
#loc75 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":65:22)
#loc76 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:25)
#loc77 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":67:37)
#loc78 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":69:20)
#loc79 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":71:20)
#loc80 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":72:28)
#loc81 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":73:4)
#loc82 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:28)
#loc83 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":74:40)
#loc84 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:45)
#loc85 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:41)
#loc86 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:36)
#loc87 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:58)
#loc88 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:44)
#loc89 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:40)
#loc90 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:35)
#loc91 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:35)
#loc92 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:35)
#loc93 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":84:24)
#loc94 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":85:24)
#loc95 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:29)
#loc96 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":75:36)
#loc97 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":76:27)
#loc98 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":77:25)
#loc99 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":79:50)
#loc100 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":80:49)
#loc101 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":81:40)
#loc102 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":82:40)
#loc103 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":83:24)
#loc104 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":86:24)
#loc105 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":87:24)
#loc106 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":88:50)
#loc107 = loc("inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py":75:4)
#loc108 = loc(callsite(#loc45 at #loc46))
#loc109 = loc(callsite(#loc47 at #loc46))
#loc110 = loc(callsite(#loc48 at #loc46))
#loc111 = loc(callsite(#loc49 at #loc46))
#loc112 = loc(callsite(#loc50 at #loc46))
#loc113 = loc(callsite(#loc51 at #loc46))
#loc114 = loc(callsite(#loc52 at #loc46))
#loc115 = loc(callsite(#loc53 at #loc46))
#loc116 = loc(callsite(#loc54 at #loc46))
#loc117 = loc(callsite(#loc60 at #loc61))
#loc119 = loc(callsite(#loc62 at #loc60))
#loc120 = loc(callsite(#loc63 at #loc60))
#loc121 = loc(callsite(#loc64 at #loc60))
#loc122 = loc(callsite(#loc65 at #loc60))
#loc123 = loc(callsite(#loc66 at #loc60))
#loc124 = loc(callsite(#loc67 at #loc60))
#loc125 = loc(callsite(#loc68 at #loc60))
#loc126 = loc(callsite(#loc69 at #loc60))
#loc127 = loc(callsite(#loc70 at #loc60))
#loc128 = loc(callsite(#loc71 at #loc60))
#loc129 = loc(callsite(#loc72 at #loc60))
#loc130 = loc(callsite(#loc73 at #loc60))
#loc131 = loc(callsite(#loc119 at #loc61))
#loc132 = loc(callsite(#loc120 at #loc61))
#loc133 = loc(callsite(#loc121 at #loc61))
#loc134 = loc(callsite(#loc122 at #loc61))
#loc135 = loc(callsite(#loc123 at #loc61))
#loc136 = loc(callsite(#loc124 at #loc61))
#loc137 = loc(callsite(#loc125 at #loc61))
#loc138 = loc(callsite(#loc126 at #loc61))
#loc139 = loc(callsite(#loc127 at #loc61))
#loc140 = loc(callsite(#loc128 at #loc61))
#loc141 = loc(callsite(#loc129 at #loc61))
#loc142 = loc(callsite(#loc130 at #loc61))
