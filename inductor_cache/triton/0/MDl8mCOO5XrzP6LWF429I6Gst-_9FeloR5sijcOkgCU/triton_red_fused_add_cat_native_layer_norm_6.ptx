//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_cat_native_layer_norm_6 // -- Begin function triton_red_fused_add_cat_native_layer_norm_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_cat_native_layer_norm_6
.visible .entry triton_red_fused_add_cat_native_layer_norm_6(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_9,
	.param .u32 triton_red_fused_add_cat_native_layer_norm_6_param_10,
	.param .u32 triton_red_fused_add_cat_native_layer_norm_6_param_11
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<141>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<347>;
	.reg .f32 	%f<458>;
	.reg .b64 	%rd<98>;
	.loc	1 19 0                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:19:0

// %bb.0:
	ld.param.u64 	%rd37, [triton_red_fused_add_cat_native_layer_norm_6_param_9];
	ld.param.u64 	%rd36, [triton_red_fused_add_cat_native_layer_norm_6_param_8];
	ld.param.u64 	%rd35, [triton_red_fused_add_cat_native_layer_norm_6_param_7];
	ld.param.u64 	%rd96, [triton_red_fused_add_cat_native_layer_norm_6_param_6];
	ld.param.u64 	%rd95, [triton_red_fused_add_cat_native_layer_norm_6_param_5];
	ld.param.u64 	%rd90, [triton_red_fused_add_cat_native_layer_norm_6_param_3];
	ld.param.u64 	%rd31, [triton_red_fused_add_cat_native_layer_norm_6_param_2];
	ld.param.u64 	%rd89, [triton_red_fused_add_cat_native_layer_norm_6_param_1];
	ld.param.u64 	%rd29, [triton_red_fused_add_cat_native_layer_norm_6_param_0];
$L__tmp0:
	.loc	1 22 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:22:28
	// begin inline asm
	mov.u32 %r15, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:22:33
	shl.b32 	%r16, %r15, 6;
	.loc	1 23 44                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd39, [triton_red_fused_add_cat_native_layer_norm_6_param_4];
	bfe.u32 	%r2, %r1, 4, 5;
	and.b32  	%r3, %r1, 63;
	.loc	1 23 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:23:23
	or.b32  	%r4, %r16, %r3;
	.loc	1 24 21                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:24:21
	setp.lt.s32 	%p24, %r4, 68;
	.loc	1 25 33                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:25:33
	shl.b32 	%r17, %r1, 2;
	and.b32  	%r18, %r17, 60;
	bfe.u32 	%r19, %r1, 6, 3;
	.loc	1 27 19                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:27:19
	mul.hi.s32 	%r21, %r4, 2021161081;
	shr.u32 	%r22, %r21, 31;
	shr.s32 	%r23, %r21, 3;
	add.s32 	%r24, %r23, %r22;
	.loc	1 26 19                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:26:19
	mul.lo.s32 	%r25, %r24, 17;
	sub.s32 	%r26, %r4, %r25;
	.loc	1 23 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:23:23
	or.b32  	%r27, %r16, %r2;
	or.b32  	%r28, %r27, 32;
	.loc	1 24 21                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:24:21
	setp.lt.s32 	%p113, %r28, 68;
	setp.lt.s32 	%p108, %r27, 68;
	.loc	1 26 19                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:26:19
	mul.hi.s32 	%r29, %r28, 2021161081;
	shr.u32 	%r30, %r29, 31;
	shr.s32 	%r31, %r29, 3;
	add.s32 	%r32, %r31, %r30;
	mul.lo.s32 	%r33, %r32, 17;
	sub.s32 	%r34, %r28, %r33;
	mul.hi.s32 	%r35, %r27, 2021161081;
	shr.u32 	%r36, %r35, 31;
	shr.s32 	%r37, %r35, 3;
	add.s32 	%r38, %r37, %r36;
	mul.lo.s32 	%r39, %r38, 17;
	sub.s32 	%r40, %r27, %r39;
	.loc	1 36 44                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:44
	mul.lo.s32 	%r41, %r40, 768;
	mul.lo.s32 	%r42, %r34, 768;
	.loc	1 41 22                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:41:22
	setp.lt.s32 	%p16, %r34, 1;
	setp.lt.s32 	%p12, %r40, 1;
	.loc	1 43 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:43:23
	setp.gt.s32 	%p25, %r26, 0;
	setp.gt.s32 	%p26, %r40, 0;
	setp.gt.s32 	%p27, %r34, 0;
	.loc	1 46 48                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:48
	mul.lo.s32 	%r43, %r24, 12288;
	.loc	1 46 69                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:69
	cvt.u16.u32 	%rs1, %r26;
	add.s16 	%rs2, %rs1, -1;
	cvt.s16.s8 	%rs3, %rs2;
	shr.u16 	%rs4, %rs3, 11;
	and.b16  	%rs5, %rs4, 15;
	add.s16 	%rs6, %rs2, %rs5;
	and.b16  	%rs7, %rs6, 240;
	sub.s16 	%rs8, %rs2, %rs7;
	cvt.u32.u16 	%r44, %rs8;
	cvt.s32.s8 	%r45, %r44;
	.loc	1 60 38                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:38
	mul.lo.s32 	%r46, %r27, 768;
	mul.lo.s32 	%r47, %r28, 768;
	and.pred  	%p38, %p108, %p12;
	and.pred  	%p43, %p113, %p16;
	and.pred  	%p48, %p24, %p25;
	and.pred  	%p72, %p108, %p26;
	and.pred  	%p77, %p113, %p27;
	shl.b32 	%r48, %r1, 6;
	and.b32  	%r49, %r48, 4032;
	or.b32  	%r50, %r49, %r19;
	and.b32  	%r51, %r17, 2044;
	shr.u32 	%r52, %r49, 2;
	mov.u32 	%r53, global_smem;
	add.s32 	%r54, %r53, %r52;
	shl.b32 	%r55, %r50, 2;
	add.s32 	%r117, %r54, %r55;
	add.s32 	%r119, %r117, 32;
	add.s32 	%r121, %r117, 64;
	add.s32 	%r123, %r117, 96;
	add.s32 	%r125, %r117, 128;
	add.s32 	%r127, %r117, 160;
	add.s32 	%r129, %r117, 192;
	add.s32 	%r131, %r117, 224;
	and.b32  	%r56, %r1, 496;
	add.s32 	%r57, %r53, %r56;
	shl.b32 	%r58, %r51, 2;
	add.s32 	%r13, %r57, %r58;
	or.b32  	%r59, %r51, 2048;
	shr.u32 	%r60, %r59, 2;
	and.b32  	%r61, %r60, 1008;
	add.s32 	%r62, %r53, %r61;
	add.s32 	%r14, %r62, %r58;
	.loc	1 32 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:32:36
	mul.wide.s32 	%rd40, %r41, 4;
	add.s64 	%rd93, %rd39, %rd40;
	mul.wide.s32 	%rd41, %r42, 4;
	add.s64 	%rd94, %rd39, %rd41;
	shl.b32 	%r63, %r19, 4;
	or.b32  	%r64, %r43, %r63;
	add.s32 	%r65, %r64, %r45;
	cvt.u64.u32 	%rd3, %r65;
	or.b32  	%r66, %r47, %r18;
	cvt.u64.u32 	%rd4, %r66;
	or.b32  	%r67, %r46, %r18;
	cvt.u64.u32 	%rd5, %r67;
	and.b32  	%r68, %r1, 15;
	mul.wide.u32 	%rd6, %r68, 16;
	mov.f32 	%f124, 0f00000000;
	mov.u64 	%rd91, 0;
	mov.u64 	%rd87, %rd93;
	mov.u64 	%rd88, %rd94;
	mov.u64 	%rd92, %rd91;
	mov.f32 	%f410, %f124;
	mov.f32 	%f411, %f124;
	mov.f32 	%f412, %f124;
	mov.f32 	%f413, %f124;
	mov.f32 	%f414, %f124;
	mov.f32 	%f415, %f124;
	mov.f32 	%f416, %f124;
	mov.f32 	%f417, %f124;
	mov.f32 	%f418, %f124;
	mov.f32 	%f419, %f124;
	mov.f32 	%f420, %f124;
	mov.f32 	%f421, %f124;
	mov.f32 	%f422, %f124;
	mov.f32 	%f423, %f124;
	mov.f32 	%f424, %f124;
	mov.f32 	%f425, %f124;
	mov.f32 	%f426, %f124;
	mov.f32 	%f427, %f124;
	mov.f32 	%f428, %f124;
	mov.f32 	%f429, %f124;
	mov.f32 	%f430, %f124;
	mov.f32 	%f431, %f124;
	mov.f32 	%f432, %f124;
	mov.f32 	%f433, %f124;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 57 62                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:57:62
	selp.f32 	%f418, %f442, %f418, %p108;
	selp.f32 	%f419, %f443, %f419, %p108;
	selp.f32 	%f420, %f444, %f420, %p108;
	selp.f32 	%f421, %f445, %f421, %p108;
	selp.f32 	%f422, %f446, %f422, %p113;
	selp.f32 	%f423, %f447, %f423, %p113;
	selp.f32 	%f424, %f448, %f424, %p113;
	selp.f32 	%f425, %f449, %f425, %p113;
	.loc	1 58 58                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:58:58
	selp.f32 	%f426, %f450, %f426, %p108;
	selp.f32 	%f427, %f451, %f427, %p108;
	selp.f32 	%f428, %f452, %f428, %p108;
	selp.f32 	%f429, %f453, %f429, %p108;
	selp.f32 	%f430, %f454, %f430, %p113;
	selp.f32 	%f431, %f455, %f431, %p113;
	selp.f32 	%f432, %f456, %f432, %p113;
	selp.f32 	%f433, %f457, %f433, %p113;
	.loc	1 59 66                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:59:66
	selp.f32 	%f410, %f434, %f410, %p108;
	selp.f32 	%f411, %f435, %f411, %p108;
	selp.f32 	%f412, %f436, %f412, %p108;
	selp.f32 	%f413, %f437, %f413, %p108;
	selp.f32 	%f414, %f438, %f414, %p113;
	selp.f32 	%f415, %f439, %f415, %p113;
	selp.f32 	%f416, %f440, %f416, %p113;
	selp.f32 	%f417, %f441, %f417, %p113;
	.loc	1 60 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:34
	add.s64 	%rd67, %rd5, %rd92;
	.loc	1 60 29                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:29
	add.s64 	%rd68, %rd4, %rd92;
	cvt.u32.u64 	%r189, %rd67;
	mul.wide.s32 	%rd69, %r189, 4;
	add.s64 	%rd65, %rd35, %rd69;
	cvt.u32.u64 	%r190, %rd68;
	mul.wide.s32 	%rd70, %r190, 4;
	add.s64 	%rd66, %rd35, %rd70;
	.loc	1 60 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:50
	mov.b32 	%r185, %f29;
	mov.b32 	%r186, %f30;
	mov.b32 	%r187, %f31;
	mov.b32 	%r188, %f32;
	mov.b32 	%r181, %f25;
	mov.b32 	%r182, %f26;
	mov.b32 	%r183, %f27;
	mov.b32 	%r184, %f28;
	// begin inline asm
	@%p108 st.global.v4.b32 [ %rd65 + 0 ], { %r181, %r182, %r183, %r184 };
	// end inline asm
	// begin inline asm
	@%p113 st.global.v4.b32 [ %rd66 + 0 ], { %r185, %r186, %r187, %r188 };
	// end inline asm
	.loc	1 32 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:32:36
	add.s64 	%rd13, %rd92, 64;
	add.s64 	%rd91, %rd91, 1024;
	add.s64 	%rd90, %rd90, 256;
	add.s64 	%rd89, %rd89, 256;
	add.s64 	%rd88, %rd88, 256;
	add.s64 	%rd87, %rd87, 256;
	setp.lt.u64 	%p85, %rd92, 704;
	mov.u64 	%rd92, %rd13;
	@%p85 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 36 35                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:35
	add.s64 	%rd42, %rd87, %rd6;
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	add.s64 	%rd43, %rd88, %rd6;
	mov.b32 	%r293, 0;
	// begin inline asm
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	@%p108 ld.global.L1::evict_last.v4.b32 { %r69, %r70, %r71, %r72 }, [ %rd42 + 0 ];
	@!%p108 mov.u32 %r69, %r293;
	@!%p108 mov.u32 %r70, %r293;
	@!%p108 mov.u32 %r71, %r293;
	@!%p108 mov.u32 %r72, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	@%p113 ld.global.L1::evict_last.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd43 + 0 ];
	@!%p113 mov.u32 %r77, %r293;
	@!%p113 mov.u32 %r78, %r293;
	@!%p113 mov.u32 %r79, %r293;
	@!%p113 mov.u32 %r80, %r293;
	// end inline asm
	.loc	1 42 74                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:74
	add.s64 	%rd44, %rd89, %rd6;
	// begin inline asm
	mov.u32 %r85, 0x0;
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	@%p38 ld.global.L1::evict_last.v4.b32 { %r85, %r86, %r87, %r88 }, [ %rd44 + 0 ];
	@!%p38 mov.u32 %r85, %r293;
	@!%p38 mov.u32 %r86, %r293;
	@!%p38 mov.u32 %r87, %r293;
	@!%p38 mov.u32 %r88, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r93, 0x0;
	mov.u32 %r94, 0x0;
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	@%p43 ld.global.L1::evict_last.v4.b32 { %r93, %r94, %r95, %r96 }, [ %rd44 + 0 ];
	@!%p43 mov.u32 %r93, %r293;
	@!%p43 mov.u32 %r94, %r293;
	@!%p43 mov.u32 %r95, %r293;
	@!%p43 mov.u32 %r96, %r293;
	// end inline asm
	.loc	1 46 55                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:55
	add.s64 	%rd56, %rd3, %rd91;
	cvt.u32.u64 	%r149, %rd56;
	.loc	1 46 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:34
	mul.wide.s32 	%rd57, %r149, 4;
	add.s64 	%rd46, %rd31, %rd57;
	add.s32 	%r150, %r149, 128;
	mul.wide.s32 	%rd58, %r150, 4;
	add.s64 	%rd47, %rd31, %rd58;
	add.s32 	%r151, %r149, 256;
	mul.wide.s32 	%rd59, %r151, 4;
	add.s64 	%rd48, %rd31, %rd59;
	add.s32 	%r152, %r149, 384;
	mul.wide.s32 	%rd60, %r152, 4;
	add.s64 	%rd49, %rd31, %rd60;
	add.s32 	%r153, %r149, 512;
	mul.wide.s32 	%rd61, %r153, 4;
	add.s64 	%rd50, %rd31, %rd61;
	add.s32 	%r154, %r149, 640;
	mul.wide.s32 	%rd62, %r154, 4;
	add.s64 	%rd51, %rd31, %rd62;
	add.s32 	%r155, %r149, 768;
	mul.wide.s32 	%rd63, %r155, 4;
	add.s64 	%rd52, %rd31, %rd63;
	add.s32 	%r156, %r149, 896;
	mul.wide.s32 	%rd64, %r156, 4;
	add.s64 	%rd53, %rd31, %rd64;
	.loc	1 46 76                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:76
	// begin inline asm
	mov.u32 %r101, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r101 }, [ %rd46 + 0 ];
	@!%p48 mov.u32 %r101, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r103, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r103 }, [ %rd47 + 0 ];
	@!%p48 mov.u32 %r103, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r105, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r105 }, [ %rd48 + 0 ];
	@!%p48 mov.u32 %r105, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r107, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r107 }, [ %rd49 + 0 ];
	@!%p48 mov.u32 %r107, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r109, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r109 }, [ %rd50 + 0 ];
	@!%p48 mov.u32 %r109, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r111, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r111 }, [ %rd51 + 0 ];
	@!%p48 mov.u32 %r111, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r113, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r113 }, [ %rd52 + 0 ];
	@!%p48 mov.u32 %r113, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r115, 0x0;
	@%p48 ld.global.L1::evict_last.b32 { %r115 }, [ %rd53 + 0 ];
	@!%p48 mov.u32 %r115, %r293;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p86, -1;
	// begin inline asm
	@%p86 st.shared.b32 [ %r117 + 0 ], %r101;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r119 + 0 ], %r103;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r121 + 0 ], %r105;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r123 + 0 ], %r107;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r125 + 0 ], %r109;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r127 + 0 ], %r111;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r129 + 0 ], %r113;
	// end inline asm
	// begin inline asm
	@%p86 st.shared.b32 [ %r131 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	add.s64 	%rd54, %rd90, %rd6;
	mov.b32 	%f135, %r77;
	mov.b32 	%f136, %r78;
	mov.b32 	%f137, %r79;
	mov.b32 	%f138, %r80;
	mov.b32 	%f139, %r69;
	mov.b32 	%f140, %r70;
	mov.b32 	%f141, %r71;
	mov.b32 	%f142, %r72;
	.loc	1 42 74                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:74
	mov.b32 	%f143, %r88;
	mov.b32 	%f144, %r87;
	mov.b32 	%f145, %r86;
	mov.b32 	%f146, %r85;
	mov.b32 	%f147, %r96;
	mov.b32 	%f148, %r95;
	mov.b32 	%f149, %r94;
	mov.b32 	%f150, %r93;
	.loc	1 46 76                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:76
	ld.shared.v4.f32 	{%f151, %f152, %f153, %f154}, [%r13];
	ld.shared.v4.f32 	{%f155, %f156, %f157, %f158}, [%r14+8192];
	.loc	1 47 75                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:47:75
	// begin inline asm
	mov.u32 %r133, 0x0;
	mov.u32 %r134, 0x0;
	mov.u32 %r135, 0x0;
	mov.u32 %r136, 0x0;
	@%p72 ld.global.L1::evict_last.v4.b32 { %r133, %r134, %r135, %r136 }, [ %rd54 + 0 ];
	@!%p72 mov.u32 %r133, %r293;
	@!%p72 mov.u32 %r134, %r293;
	@!%p72 mov.u32 %r135, %r293;
	@!%p72 mov.u32 %r136, %r293;
	// end inline asm
	// begin inline asm
	mov.u32 %r141, 0x0;
	mov.u32 %r142, 0x0;
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	@%p77 ld.global.L1::evict_last.v4.b32 { %r141, %r142, %r143, %r144 }, [ %rd54 + 0 ];
	@!%p77 mov.u32 %r141, %r293;
	@!%p77 mov.u32 %r142, %r293;
	@!%p77 mov.u32 %r143, %r293;
	@!%p77 mov.u32 %r144, %r293;
	// end inline asm
	mov.b32 	%f159, %r141;
	mov.b32 	%f160, %r142;
	mov.b32 	%f161, %r143;
	mov.b32 	%f162, %r144;
	mov.b32 	%f163, %r133;
	mov.b32 	%f164, %r134;
	mov.b32 	%f165, %r135;
	mov.b32 	%f166, %r136;
	.loc	1 48 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:48:23
	add.f32 	%f167, %f154, %f166;
	add.f32 	%f168, %f153, %f165;
	add.f32 	%f169, %f152, %f164;
	add.f32 	%f170, %f151, %f163;
	add.f32 	%f171, %f158, %f162;
	add.f32 	%f172, %f157, %f161;
	add.f32 	%f173, %f156, %f160;
	add.f32 	%f174, %f155, %f159;
	.loc	1 51 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:51:37
	selp.f32 	%f29, %f150, %f174, %p16;
	selp.f32 	%f30, %f149, %f173, %p16;
	selp.f32 	%f31, %f148, %f172, %p16;
	selp.f32 	%f32, %f147, %f171, %p16;
	selp.f32 	%f25, %f146, %f170, %p12;
	selp.f32 	%f26, %f145, %f169, %p12;
	selp.f32 	%f27, %f144, %f168, %p12;
	selp.f32 	%f28, %f143, %f167, %p12;
	.loc	1 52 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:52:24
	add.f32 	%f445, %f28, %f142;
	add.f32 	%f444, %f27, %f141;
	add.f32 	%f443, %f26, %f140;
	add.f32 	%f442, %f25, %f139;
	add.f32 	%f449, %f32, %f138;
	add.f32 	%f448, %f31, %f137;
	add.f32 	%f447, %f30, %f136;
	add.f32 	%f446, %f29, %f135;
	.loc	1 55 66                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:55:66
	setp.eq.s64 	%p82, %rd91, 0;
	mov.f32 	%f434, 0f3F800000;
	mov.f32 	%f435, %f434;
	mov.f32 	%f436, %f434;
	mov.f32 	%f437, %f434;
	mov.f32 	%f438, %f434;
	mov.f32 	%f439, %f434;
	mov.f32 	%f440, %f434;
	mov.f32 	%f441, %f434;
	mov.f32 	%f450, %f124;
	mov.f32 	%f451, %f124;
	mov.f32 	%f452, %f124;
	mov.f32 	%f453, %f124;
	mov.f32 	%f454, %f124;
	mov.f32 	%f455, %f124;
	mov.f32 	%f456, %f124;
	mov.f32 	%f457, %f124;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p82 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f434, %f410, 0f3F800000;
	add.f32 	%f435, %f411, 0f3F800000;
	add.f32 	%f436, %f412, 0f3F800000;
	add.f32 	%f437, %f413, 0f3F800000;
	add.f32 	%f438, %f414, 0f3F800000;
	add.f32 	%f439, %f415, 0f3F800000;
	add.f32 	%f440, %f416, 0f3F800000;
	add.f32 	%f441, %f417, 0f3F800000;
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f175, %f449, %f425;
	sub.f32 	%f176, %f448, %f424;
	sub.f32 	%f177, %f447, %f423;
	sub.f32 	%f178, %f446, %f422;
	sub.f32 	%f179, %f445, %f421;
	sub.f32 	%f180, %f444, %f420;
	sub.f32 	%f181, %f443, %f419;
	sub.f32 	%f182, %f442, %f418;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r158, %f182;
	mov.b32 	%r159, %f434;
	// begin inline asm
	div.full.f32 %r157, %r158, %r159;
	// end inline asm
	mov.b32 	%f183, %r157;
	mov.b32 	%r161, %f181;
	mov.b32 	%r162, %f435;
	// begin inline asm
	div.full.f32 %r160, %r161, %r162;
	// end inline asm
	mov.b32 	%f184, %r160;
	mov.b32 	%r164, %f180;
	mov.b32 	%r165, %f436;
	// begin inline asm
	div.full.f32 %r163, %r164, %r165;
	// end inline asm
	mov.b32 	%f185, %r163;
	mov.b32 	%r167, %f179;
	mov.b32 	%r168, %f437;
	// begin inline asm
	div.full.f32 %r166, %r167, %r168;
	// end inline asm
	mov.b32 	%f186, %r166;
	mov.b32 	%r170, %f178;
	mov.b32 	%r171, %f438;
	// begin inline asm
	div.full.f32 %r169, %r170, %r171;
	// end inline asm
	mov.b32 	%f187, %r169;
	mov.b32 	%r173, %f177;
	mov.b32 	%r174, %f439;
	// begin inline asm
	div.full.f32 %r172, %r173, %r174;
	// end inline asm
	mov.b32 	%f188, %r172;
	mov.b32 	%r176, %f176;
	mov.b32 	%r177, %f440;
	// begin inline asm
	div.full.f32 %r175, %r176, %r177;
	// end inline asm
	mov.b32 	%f189, %r175;
	mov.b32 	%r179, %f175;
	mov.b32 	%r180, %f441;
	// begin inline asm
	div.full.f32 %r178, %r179, %r180;
	// end inline asm
	mov.b32 	%f190, %r178;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f49, %f418, %f183;
	add.f32 	%f50, %f419, %f184;
	add.f32 	%f51, %f420, %f185;
	add.f32 	%f52, %f421, %f186;
	add.f32 	%f53, %f422, %f187;
	add.f32 	%f54, %f423, %f188;
	add.f32 	%f55, %f424, %f189;
	add.f32 	%f56, %f425, %f190;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f191, %f449, %f56;
	sub.f32 	%f192, %f448, %f55;
	sub.f32 	%f193, %f447, %f54;
	sub.f32 	%f194, %f446, %f53;
	sub.f32 	%f195, %f445, %f52;
	sub.f32 	%f196, %f444, %f51;
	sub.f32 	%f197, %f443, %f50;
	sub.f32 	%f198, %f442, %f49;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f450, %f182, %f198, %f426;
	fma.rn.f32 	%f451, %f181, %f197, %f427;
	fma.rn.f32 	%f452, %f180, %f196, %f428;
	fma.rn.f32 	%f453, %f179, %f195, %f429;
	fma.rn.f32 	%f454, %f178, %f194, %f430;
	fma.rn.f32 	%f455, %f177, %f193, %f431;
	fma.rn.f32 	%f456, %f176, %f192, %f432;
	fma.rn.f32 	%f457, %f175, %f191, %f433;
	mov.f32 	%f442, %f49;
	mov.f32 	%f443, %f50;
	mov.f32 	%f444, %f51;
	mov.f32 	%f445, %f52;
	mov.f32 	%f446, %f53;
	mov.f32 	%f447, %f54;
	mov.f32 	%f448, %f55;
	mov.f32 	%f449, %f56;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f199, %f419, %f418;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f200, %f410, %f411;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p93, %f200, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r193, %f200;
	mov.b32 	%r192, %f411;
	// begin inline asm
	div.full.f32 %r191, %r192, %r193;
	// end inline asm
	mov.b32 	%f201, %r191;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f202, 0f00000000, %f201, %p93;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f203, %f199, %f202, %f418;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f204, %f426, %f427;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f205, %f199, %f199;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f206, %f205, %f410;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f207, %f206, %f202, %f204;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f208, %f420, %f203;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f209, %f412, %f200;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p94, %f209, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r196, %f209;
	mov.b32 	%r195, %f412;
	// begin inline asm
	div.full.f32 %r194, %r195, %r196;
	// end inline asm
	mov.b32 	%f210, %r194;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f211, 0f00000000, %f210, %p94;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f212, %f211, %f208, %f203;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f213, %f428, %f207;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f214, %f208, %f208;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f215, %f200, %f214;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f216, %f211, %f215, %f213;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f217, %f421, %f212;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f218, %f413, %f209;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p95, %f218, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r199, %f218;
	mov.b32 	%r198, %f413;
	// begin inline asm
	div.full.f32 %r197, %r198, %r199;
	// end inline asm
	mov.b32 	%f219, %r197;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f220, 0f00000000, %f219, %p95;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f221, %f220, %f217, %f212;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f222, %f429, %f216;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f223, %f217, %f217;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f224, %f209, %f223;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f225, %f220, %f224, %f222;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f226, %f423, %f422;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f227, %f414, %f415;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p96, %f227, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r202, %f227;
	mov.b32 	%r201, %f415;
	// begin inline asm
	div.full.f32 %r200, %r201, %r202;
	// end inline asm
	mov.b32 	%f228, %r200;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f229, 0f00000000, %f228, %p96;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f230, %f226, %f229, %f422;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f231, %f430, %f431;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f232, %f226, %f226;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f233, %f232, %f414;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f234, %f233, %f229, %f231;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f235, %f424, %f230;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f236, %f416, %f227;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p97, %f236, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r205, %f236;
	mov.b32 	%r204, %f416;
	// begin inline asm
	div.full.f32 %r203, %r204, %r205;
	// end inline asm
	mov.b32 	%f237, %r203;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f238, 0f00000000, %f237, %p97;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f239, %f238, %f235, %f230;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f240, %f432, %f234;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f241, %f235, %f235;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f242, %f227, %f241;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f243, %f238, %f242, %f240;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f244, %f425, %f239;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f245, %f417, %f236;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p98, %f245, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r208, %f245;
	mov.b32 	%r207, %f417;
	// begin inline asm
	div.full.f32 %r206, %r207, %r208;
	// end inline asm
	mov.b32 	%f246, %r206;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f247, 0f00000000, %f246, %p98;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f248, %f247, %f244, %f239;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f249, %f433, %f243;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f250, %f244, %f244;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f251, %f236, %f250;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f252, %f247, %f251, %f249;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r252, %f221;
	shfl.sync.bfly.b32	%r253, %r252, 8, 31, -1;
	mov.b32 	%f253, %r253;
	mov.b32 	%r254, %f225;
	shfl.sync.bfly.b32	%r255, %r254, 8, 31, -1;
	mov.b32 	%f254, %r255;
	shfl.sync.bfly.b32	%r210, %r199, 8, 31, -1;
	mov.b32 	%f255, %r210;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f256, %f253, %f221;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f257, %f218, %f255;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p99, %f257, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r211, %f257;
	// begin inline asm
	div.full.f32 %r209, %r210, %r211;
	// end inline asm
	mov.b32 	%f258, %r209;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f259, 0f00000000, %f258, %p99;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f260, %f256, %f259, %f221;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f261, %f225, %f254;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f262, %f256, %f256;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f263, %f218, %f262;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f264, %f263, %f259, %f261;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r256, %f260;
	shfl.sync.bfly.b32	%r257, %r256, 4, 31, -1;
	mov.b32 	%f265, %r257;
	mov.b32 	%r258, %f264;
	shfl.sync.bfly.b32	%r259, %r258, 4, 31, -1;
	mov.b32 	%f266, %r259;
	shfl.sync.bfly.b32	%r213, %r211, 4, 31, -1;
	mov.b32 	%f267, %r213;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f268, %f265, %f260;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f269, %f257, %f267;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p100, %f269, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r214, %f269;
	// begin inline asm
	div.full.f32 %r212, %r213, %r214;
	// end inline asm
	mov.b32 	%f270, %r212;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f271, 0f00000000, %f270, %p100;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f272, %f268, %f271, %f260;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f273, %f264, %f266;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f274, %f268, %f268;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f275, %f257, %f274;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f276, %f271, %f275, %f273;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r260, %f272;
	shfl.sync.bfly.b32	%r261, %r260, 2, 31, -1;
	mov.b32 	%f277, %r261;
	mov.b32 	%r262, %f276;
	shfl.sync.bfly.b32	%r263, %r262, 2, 31, -1;
	mov.b32 	%f278, %r263;
	shfl.sync.bfly.b32	%r216, %r214, 2, 31, -1;
	mov.b32 	%f279, %r216;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f280, %f277, %f272;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f281, %f269, %f279;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p101, %f281, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r217, %f281;
	// begin inline asm
	div.full.f32 %r215, %r216, %r217;
	// end inline asm
	mov.b32 	%f282, %r215;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f283, 0f00000000, %f282, %p101;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f284, %f280, %f283, %f272;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f285, %f276, %f278;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f286, %f280, %f280;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f287, %f269, %f286;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f288, %f283, %f287, %f285;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r264, %f284;
	shfl.sync.bfly.b32	%r265, %r264, 1, 31, -1;
	mov.b32 	%f289, %r265;
	mov.b32 	%r266, %f288;
	shfl.sync.bfly.b32	%r267, %r266, 1, 31, -1;
	mov.b32 	%f290, %r267;
	shfl.sync.bfly.b32	%r219, %r217, 1, 31, -1;
	mov.b32 	%f291, %r219;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f292, %f289, %f284;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f293, %f281, %f291;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p102, %f293, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r220, %f293;
	// begin inline asm
	div.full.f32 %r218, %r219, %r220;
	// end inline asm
	mov.b32 	%f294, %r218;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f295, 0f00000000, %f294, %p102;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f113, %f292, %f295, %f284;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f296, %f288, %f290;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f297, %f292, %f292;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f298, %f281, %f297;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f299, %f295, %f298, %f296;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r268, %f248;
	shfl.sync.bfly.b32	%r269, %r268, 8, 31, -1;
	mov.b32 	%f300, %r269;
	mov.b32 	%r270, %f252;
	shfl.sync.bfly.b32	%r271, %r270, 8, 31, -1;
	mov.b32 	%f301, %r271;
	shfl.sync.bfly.b32	%r222, %r208, 8, 31, -1;
	mov.b32 	%f302, %r222;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f303, %f300, %f248;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f304, %f245, %f302;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p103, %f304, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r223, %f304;
	// begin inline asm
	div.full.f32 %r221, %r222, %r223;
	// end inline asm
	mov.b32 	%f305, %r221;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f306, 0f00000000, %f305, %p103;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f307, %f303, %f306, %f248;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f308, %f252, %f301;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f309, %f303, %f303;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f310, %f245, %f309;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f311, %f310, %f306, %f308;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r272, %f307;
	shfl.sync.bfly.b32	%r273, %r272, 4, 31, -1;
	mov.b32 	%f312, %r273;
	mov.b32 	%r274, %f311;
	shfl.sync.bfly.b32	%r275, %r274, 4, 31, -1;
	mov.b32 	%f313, %r275;
	shfl.sync.bfly.b32	%r225, %r223, 4, 31, -1;
	mov.b32 	%f314, %r225;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f315, %f312, %f307;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f316, %f304, %f314;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p104, %f316, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r226, %f316;
	// begin inline asm
	div.full.f32 %r224, %r225, %r226;
	// end inline asm
	mov.b32 	%f317, %r224;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f318, 0f00000000, %f317, %p104;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f319, %f315, %f318, %f307;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f320, %f311, %f313;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f321, %f315, %f315;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f322, %f304, %f321;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f323, %f318, %f322, %f320;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r276, %f319;
	shfl.sync.bfly.b32	%r277, %r276, 2, 31, -1;
	mov.b32 	%f324, %r277;
	mov.b32 	%r278, %f323;
	shfl.sync.bfly.b32	%r279, %r278, 2, 31, -1;
	mov.b32 	%f325, %r279;
	shfl.sync.bfly.b32	%r228, %r226, 2, 31, -1;
	mov.b32 	%f326, %r228;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f327, %f324, %f319;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f328, %f316, %f326;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p105, %f328, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r229, %f328;
	// begin inline asm
	div.full.f32 %r227, %r228, %r229;
	// end inline asm
	mov.b32 	%f329, %r227;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f330, 0f00000000, %f329, %p105;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f331, %f327, %f330, %f319;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f332, %f323, %f325;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f333, %f327, %f327;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f334, %f316, %f333;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f335, %f330, %f334, %f332;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r280, %f331;
	shfl.sync.bfly.b32	%r281, %r280, 1, 31, -1;
	mov.b32 	%f336, %r281;
	mov.b32 	%r282, %f335;
	shfl.sync.bfly.b32	%r283, %r282, 1, 31, -1;
	mov.b32 	%f337, %r283;
	shfl.sync.bfly.b32	%r231, %r229, 1, 31, -1;
	mov.b32 	%f338, %r231;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f339, %f336, %f331;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f340, %f328, %f338;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p106, %f340, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r232, %f340;
	// begin inline asm
	div.full.f32 %r230, %r231, %r232;
	// end inline asm
	mov.b32 	%f341, %r230;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f342, 0f00000000, %f341, %p106;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f114, %f339, %f342, %f331;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f343, %f335, %f337;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f344, %f339, %f339;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f345, %f328, %f344;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f346, %f342, %f345, %f343;
$L__tmp3:
	.loc	1 64 22                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:64:22
	bar.sync 	0;
	shl.b32 	%r284, %r2, 2;
	add.s32 	%r233, %r53, %r284;
	mov.b32 	%r234, %f113;
	// begin inline asm
	@%p86 st.shared.b32 [ %r233 + 0 ], %r234;
	// end inline asm
	add.s32 	%r235, %r233, 128;
	mov.b32 	%r236, %f114;
	// begin inline asm
	@%p86 st.shared.b32 [ %r235 + 0 ], %r236;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r286, %r3, 2;
	add.s32 	%r287, %r53, %r286;
	ld.shared.u32 	%r241, [%r287];
	.loc	1 72 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:72:28
	bar.sync 	0;
	mov.b32 	%r238, %f299;
	// begin inline asm
	@%p86 st.shared.b32 [ %r233 + 0 ], %r238;
	// end inline asm
	mov.b32 	%r240, %f346;
	// begin inline asm
	@%p86 st.shared.b32 [ %r235 + 0 ], %r240;
	// end inline asm
	bar.sync 	0;
	.loc	1 67 25                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:25
	mul.wide.s32 	%rd74, %r4, 4;
	add.s64 	%rd71, %rd36, %rd74;
	.loc	1 67 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:37
	and.b32  	%r288, %r1, 448;
	setp.eq.s32 	%p107, %r288, 0;
	and.pred  	%p90, %p107, %p24;
	.loc	1 69 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:69:20
	ld.shared.u32 	%r243, [%r287];
	.loc	1 67 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:37
	// begin inline asm
	@%p90 st.global.b32 [ %rd71 + 0 ], { %r241 };
	// end inline asm
	mov.b32 	%r244, 1145044992;
	.loc	1 69 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:69:20
	// begin inline asm
	div.full.f32 %r242, %r243, %r244;
	// end inline asm
	mov.b32 	%f347, %r242;
	// begin inline asm
	div.full.f32 %r245, %r238, %r244;
	// end inline asm
	mov.b32 	%f348, %r245;
	// begin inline asm
	div.full.f32 %r248, %r240, %r244;
	// end inline asm
	mov.b32 	%f349, %r248;
	.loc	1 71 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:71:20
	add.f32 	%f350, %f347, 0f3727C5AC;
	add.f32 	%f351, %f348, 0f3727C5AC;
	add.f32 	%f352, %f349, 0f3727C5AC;
	.loc	1 72 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:72:28
	rsqrt.approx.ftz.f32 	%f353, %f350;
	rsqrt.approx.ftz.f32 	%f115, %f351;
	rsqrt.approx.ftz.f32 	%f116, %f352;
	.loc	1 73 4                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:73:4
	bar.sync 	0;
	.loc	1 74 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:74:28
	add.s64 	%rd72, %rd29, %rd74;
	.loc	1 74 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:74:40
	mov.b32 	%r251, %f353;
	// begin inline asm
	@%p90 st.global.b32 [ %rd72 + 0 ], { %r251 };
	// end inline asm
	mov.u64 	%rd97, 0;
$L__BB0_5:                              // =>This Inner Loop Header: Depth=1
	.loc	1 79 41                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:79:41
	add.s64 	%rd83, %rd5, %rd97;
	.loc	1 79 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:79:36
	add.s64 	%rd84, %rd4, %rd97;
	cvt.u32.u64 	%r345, %rd83;
	mul.wide.s32 	%rd85, %r345, 4;
	add.s64 	%rd75, %rd35, %rd85;
	cvt.u32.u64 	%r346, %rd84;
	mul.wide.s32 	%rd86, %r346, 4;
	add.s64 	%rd76, %rd35, %rd86;
	.loc	1 79 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:79:50
	// begin inline asm
	mov.u32 %r289, 0x0;
	mov.u32 %r290, 0x0;
	mov.u32 %r291, 0x0;
	mov.u32 %r292, 0x0;
	@%p108 ld.global.L1::evict_first.v4.b32 { %r289, %r290, %r291, %r292 }, [ %rd75 + 0 ];
	@!%p108 mov.u32 %r289, %r293;
	@!%p108 mov.u32 %r290, %r293;
	@!%p108 mov.u32 %r291, %r293;
	@!%p108 mov.u32 %r292, %r293;
	// end inline asm
	mov.b32 	%f354, %r289;
	mov.b32 	%f355, %r290;
	mov.b32 	%f356, %r291;
	mov.b32 	%f357, %r292;
	// begin inline asm
	mov.u32 %r297, 0x0;
	mov.u32 %r298, 0x0;
	mov.u32 %r299, 0x0;
	mov.u32 %r300, 0x0;
	@%p113 ld.global.L1::evict_first.v4.b32 { %r297, %r298, %r299, %r300 }, [ %rd76 + 0 ];
	@!%p113 mov.u32 %r297, %r293;
	@!%p113 mov.u32 %r298, %r293;
	@!%p113 mov.u32 %r299, %r293;
	@!%p113 mov.u32 %r300, %r293;
	// end inline asm
	mov.b32 	%f358, %r297;
	mov.b32 	%f359, %r298;
	mov.b32 	%f360, %r299;
	mov.b32 	%f361, %r300;
	.loc	1 80 35                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:80:35
	add.s64 	%rd77, %rd93, %rd6;
	.loc	1 80 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:80:49
	add.s64 	%rd78, %rd94, %rd6;
	// begin inline asm
	mov.u32 %r305, 0x0;
	mov.u32 %r306, 0x0;
	mov.u32 %r307, 0x0;
	mov.u32 %r308, 0x0;
	@%p108 ld.global.L1::evict_last.v4.b32 { %r305, %r306, %r307, %r308 }, [ %rd77 + 0 ];
	@!%p108 mov.u32 %r305, %r293;
	@!%p108 mov.u32 %r306, %r293;
	@!%p108 mov.u32 %r307, %r293;
	@!%p108 mov.u32 %r308, %r293;
	// end inline asm
	mov.b32 	%f362, %r305;
	mov.b32 	%f363, %r306;
	mov.b32 	%f364, %r307;
	mov.b32 	%f365, %r308;
	// begin inline asm
	mov.u32 %r313, 0x0;
	mov.u32 %r314, 0x0;
	mov.u32 %r315, 0x0;
	mov.u32 %r316, 0x0;
	@%p113 ld.global.L1::evict_last.v4.b32 { %r313, %r314, %r315, %r316 }, [ %rd78 + 0 ];
	@!%p113 mov.u32 %r313, %r293;
	@!%p113 mov.u32 %r314, %r293;
	@!%p113 mov.u32 %r315, %r293;
	@!%p113 mov.u32 %r316, %r293;
	// end inline asm
	mov.b32 	%f366, %r313;
	mov.b32 	%f367, %r314;
	mov.b32 	%f368, %r315;
	mov.b32 	%f369, %r316;
	.loc	1 81 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:81:40
	add.s64 	%rd79, %rd95, %rd6;
	// begin inline asm
	mov.u32 %r321, 0x0;
	mov.u32 %r322, 0x0;
	mov.u32 %r323, 0x0;
	mov.u32 %r324, 0x0;
	@%p86 ld.global.L1::evict_last.v4.b32 { %r321, %r322, %r323, %r324 }, [ %rd79 + 0 ];
	@!%p86 mov.u32 %r321, %r293;
	@!%p86 mov.u32 %r322, %r293;
	@!%p86 mov.u32 %r323, %r293;
	@!%p86 mov.u32 %r324, %r293;
	// end inline asm
	mov.b32 	%f370, %r321;
	mov.b32 	%f371, %r322;
	mov.b32 	%f372, %r323;
	mov.b32 	%f373, %r324;
	.loc	1 82 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:82:40
	add.s64 	%rd80, %rd96, %rd6;
	// begin inline asm
	mov.u32 %r329, 0x0;
	mov.u32 %r330, 0x0;
	mov.u32 %r331, 0x0;
	mov.u32 %r332, 0x0;
	@%p86 ld.global.L1::evict_last.v4.b32 { %r329, %r330, %r331, %r332 }, [ %rd80 + 0 ];
	@!%p86 mov.u32 %r329, %r293;
	@!%p86 mov.u32 %r330, %r293;
	@!%p86 mov.u32 %r331, %r293;
	@!%p86 mov.u32 %r332, %r293;
	// end inline asm
	mov.b32 	%f374, %r329;
	mov.b32 	%f375, %r330;
	mov.b32 	%f376, %r331;
	mov.b32 	%f377, %r332;
	.loc	1 83 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:83:24
	add.f32 	%f378, %f354, %f362;
	add.f32 	%f379, %f355, %f363;
	add.f32 	%f380, %f356, %f364;
	add.f32 	%f381, %f357, %f365;
	add.f32 	%f382, %f358, %f366;
	add.f32 	%f383, %f359, %f367;
	add.f32 	%f384, %f360, %f368;
	add.f32 	%f385, %f361, %f369;
	.loc	1 84 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:84:24
	sub.f32 	%f386, %f378, %f113;
	sub.f32 	%f387, %f379, %f113;
	sub.f32 	%f388, %f380, %f113;
	sub.f32 	%f389, %f381, %f113;
	sub.f32 	%f390, %f382, %f114;
	sub.f32 	%f391, %f383, %f114;
	sub.f32 	%f392, %f384, %f114;
	sub.f32 	%f393, %f385, %f114;
	.loc	1 85 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:85:24
	mul.f32 	%f394, %f115, %f386;
	mul.f32 	%f395, %f115, %f387;
	mul.f32 	%f396, %f115, %f388;
	mul.f32 	%f397, %f115, %f389;
	mul.f32 	%f398, %f116, %f390;
	mul.f32 	%f399, %f116, %f391;
	mul.f32 	%f400, %f116, %f392;
	mul.f32 	%f401, %f116, %f393;
	.loc	1 87 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:87:24
	fma.rn.f32 	%f402, %f394, %f370, %f374;
	fma.rn.f32 	%f403, %f395, %f371, %f375;
	fma.rn.f32 	%f404, %f396, %f372, %f376;
	fma.rn.f32 	%f405, %f397, %f373, %f377;
	fma.rn.f32 	%f406, %f398, %f370, %f374;
	fma.rn.f32 	%f407, %f399, %f371, %f375;
	fma.rn.f32 	%f408, %f400, %f372, %f376;
	fma.rn.f32 	%f409, %f401, %f373, %f377;
	.loc	1 88 29                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:88:29
	add.s64 	%rd81, %rd37, %rd85;
	add.s64 	%rd82, %rd37, %rd86;
	.loc	1 88 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:88:50
	mov.b32 	%r337, %f402;
	mov.b32 	%r338, %f403;
	mov.b32 	%r339, %f404;
	mov.b32 	%r340, %f405;
	// begin inline asm
	@%p108 st.global.v4.b32 [ %rd81 + 0 ], { %r337, %r338, %r339, %r340 };
	// end inline asm
	mov.b32 	%r341, %f406;
	mov.b32 	%r342, %f407;
	mov.b32 	%r343, %f408;
	mov.b32 	%r344, %f409;
	// begin inline asm
	@%p113 st.global.v4.b32 [ %rd82 + 0 ], { %r341, %r342, %r343, %r344 };
	// end inline asm
	.loc	1 75 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:75:36
	add.s64 	%rd24, %rd97, 64;
	add.s64 	%rd96, %rd96, 256;
	add.s64 	%rd95, %rd95, 256;
	add.s64 	%rd94, %rd94, 256;
	add.s64 	%rd93, %rd93, 256;
	setp.lt.u64 	%p140, %rd97, 704;
	mov.u64 	%rd97, %rd24;
	@%p140 bra 	$L__BB0_5;
// %bb.6:
	.loc	1 75 4                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:75:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 52
.b8 108
.b8 102
.b8 53
.b8 50
.b8 116
.b8 106
.b8 105
.b8 108
.b8 112
.b8 110
.b8 115
.b8 53
.b8 118
.b8 50
.b8 54
.b8 111
.b8 54
.b8 112
.b8 106
.b8 50
.b8 52
.b8 119
.b8 51
.b8 55
.b8 103
.b8 120
.b8 119
.b8 50
.b8 109
.b8 55
.b8 122
.b8 107
.b8 119
.b8 114
.b8 118
.b8 112
.b8 106
.b8 97
.b8 105
.b8 109
.b8 50
.b8 121
.b8 114
.b8 104
.b8 103
.b8 106
.b8 101
.b8 119
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
