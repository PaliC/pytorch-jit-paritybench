; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = add i32 %8, -5, !dbg !16
  %12 = sext i32 %11 to i64, !dbg !17
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !17
  %14 = add i32 %8, -4, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = add i32 %8, -3, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !22
  %21 = insertelement <2 x i32> %20, i32 %10, i64 1, !dbg !22
  %22 = srem <2 x i32> %21, splat (i32 4), !dbg !22
  %23 = extractelement <2 x i32> %22, i64 1, !dbg !23
  %24 = icmp sgt i32 %23, 0, !dbg !24
  %25 = icmp sgt <2 x i32> %22, <i32 0, i32 -1>, !dbg !25
  %26 = extractelement <2 x i1> %25, i64 0, !dbg !26
  %27 = and i1 %26, %24, !dbg !26
  %28 = and i1 %9, %27, !dbg !27
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %28, i32 -8388608, i1 %28) #1, !dbg !28
  %30 = bitcast i32 %29 to float, !dbg !28
  %31 = extractelement <2 x i32> %22, i64 0, !dbg !29
  %32 = icmp sgt i32 %31, -1, !dbg !30
  %33 = and i1 %32, %24, !dbg !31
  %34 = and i1 %9, %33, !dbg !32
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %34, i32 -8388608, i1 %34) #1, !dbg !33
  %36 = bitcast i32 %35 to float, !dbg !33
  %37 = fcmp ogt float %36, %30, !dbg !34
  %38 = fcmp uno float %36, 0.000000e+00, !dbg !38
  %39 = or i1 %37, %38, !dbg !39
  %40 = select i1 %39, float %36, float %30, !dbg !40
  %41 = add nsw i32 %31, 1, !dbg !41
  %42 = icmp ult i32 %41, 4, !dbg !41
  %43 = and i1 %24, %42, !dbg !42
  %44 = and i1 %9, %43, !dbg !43
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %44, i32 -8388608, i1 %44) #1, !dbg !44
  %46 = bitcast i32 %45 to float, !dbg !44
  %47 = fcmp olt float %40, %46, !dbg !45
  %48 = fcmp uno float %46, 0.000000e+00, !dbg !47
  %49 = or i1 %48, %47, !dbg !48
  %50 = select i1 %49, float %46, float %40, !dbg !49
  %51 = extractelement <2 x i1> %25, i64 1, !dbg !50
  %52 = and i1 %26, %51, !dbg !50
  %53 = add i32 %8, -1, !dbg !51
  %54 = sext i32 %53 to i64, !dbg !52
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !52
  %56 = and i1 %9, %52, !dbg !53
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 -8388608, i1 %56) #1, !dbg !54
  %58 = bitcast i32 %57 to float, !dbg !54
  %59 = fcmp olt float %50, %58, !dbg !55
  %60 = fcmp uno float %58, 0.000000e+00, !dbg !57
  %61 = or i1 %60, %59, !dbg !58
  %62 = select i1 %61, float %58, float %50, !dbg !59
  %63 = or i32 %23, %31, !dbg !29
  %64 = icmp sgt i32 %63, -1, !dbg !29
  %65 = sext i32 %8 to i64, !dbg !60
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !60
  %67 = and i1 %9, %64, !dbg !61
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %67, i32 -8388608, i1 %67) #1, !dbg !62
  %69 = bitcast i32 %68 to float, !dbg !62
  %70 = fcmp olt float %62, %69, !dbg !63
  %71 = fcmp uno float %69, 0.000000e+00, !dbg !65
  %72 = or i1 %71, %70, !dbg !66
  %73 = select i1 %72, float %69, float %62, !dbg !67
  %74 = and i1 %51, %42, !dbg !68
  %75 = add i32 %8, 1, !dbg !69
  %76 = sext i32 %75 to i64, !dbg !70
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !70
  %78 = and i1 %9, %74, !dbg !71
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %77, i1 %78, i32 -8388608, i1 %78) #1, !dbg !72
  %80 = bitcast i32 %79 to float, !dbg !72
  %81 = fcmp olt float %73, %80, !dbg !73
  %82 = fcmp uno float %80, 0.000000e+00, !dbg !75
  %83 = or i1 %82, %81, !dbg !76
  %84 = select i1 %83, float %80, float %73, !dbg !77
  %85 = add nsw i32 %23, 1, !dbg !23
  %86 = icmp ult i32 %85, 4, !dbg !23
  %87 = and i1 %26, %86, !dbg !78
  %88 = add i32 %8, 3, !dbg !79
  %89 = sext i32 %88 to i64, !dbg !80
  %90 = getelementptr float, ptr addrspace(1) %0, i64 %89, !dbg !80
  %91 = and i1 %9, %87, !dbg !81
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %90, i1 %91, i32 -8388608, i1 %91) #1, !dbg !82
  %93 = bitcast i32 %92 to float, !dbg !82
  %94 = fcmp olt float %84, %93, !dbg !83
  %95 = fcmp uno float %93, 0.000000e+00, !dbg !85
  %96 = or i1 %95, %94, !dbg !86
  %97 = select i1 %96, float %93, float %84, !dbg !87
  %98 = and i1 %32, %86, !dbg !88
  %99 = add i32 %8, 4, !dbg !89
  %100 = sext i32 %99 to i64, !dbg !90
  %101 = getelementptr float, ptr addrspace(1) %0, i64 %100, !dbg !90
  %102 = and i1 %9, %98, !dbg !91
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %101, i1 %102, i32 -8388608, i1 %102) #1, !dbg !92
  %104 = bitcast i32 %103 to float, !dbg !92
  %105 = fcmp olt float %97, %104, !dbg !93
  %106 = fcmp uno float %104, 0.000000e+00, !dbg !95
  %107 = or i1 %106, %105, !dbg !96
  %108 = select i1 %107, float %104, float %97, !dbg !97
  %109 = or i32 %85, %41, !dbg !98
  %110 = icmp ult i32 %109, 4, !dbg !98
  %111 = add i32 %8, 5, !dbg !99
  %112 = sext i32 %111 to i64, !dbg !100
  %113 = getelementptr float, ptr addrspace(1) %0, i64 %112, !dbg !100
  %114 = and i1 %9, %110, !dbg !101
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %113, i1 %114, i32 -8388608, i1 %114) #1, !dbg !102
  %116 = bitcast i32 %115 to float, !dbg !102
  %117 = fcmp olt float %108, %116, !dbg !103
  %118 = fcmp uno float %116, 0.000000e+00, !dbg !105
  %119 = or i1 %118, %117, !dbg !106
  %120 = getelementptr float, ptr addrspace(1) %1, i64 %65, !dbg !107
  %121 = bitcast float %108 to i32, !dbg !108
  %122 = select i1 %119, i32 %115, i32 %121, !dbg !109
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %122, ptr addrspace(1) %120, i1 %9) #1, !dbg !108
  ret void, !dbg !110
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czjcptdf23uze23wacbj56z73abemk3dkcmgjqagmxaufsfmx6cl.py", directory: "inductor_cache/zj")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_2", linkageName: "triton_poi_fused_max_pool2d_with_indices_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 38, column: 38, scope: !7)
!17 = !DILocation(line: 38, column: 31, scope: !7)
!18 = !DILocation(line: 44, column: 38, scope: !7)
!19 = !DILocation(line: 44, column: 31, scope: !7)
!20 = !DILocation(line: 51, column: 38, scope: !7)
!21 = !DILocation(line: 51, column: 31, scope: !7)
!22 = !DILocation(line: 25, column: 19, scope: !7)
!23 = !DILocation(line: 69, column: 20, scope: !7)
!24 = !DILocation(line: 29, column: 19, scope: !7)
!25 = !DILocation(line: 34, column: 19, scope: !7)
!26 = !DILocation(line: 37, column: 19, scope: !7)
!27 = !DILocation(line: 38, column: 51, scope: !7)
!28 = !DILocation(line: 38, column: 43, scope: !7)
!29 = !DILocation(line: 60, column: 20, scope: !7)
!30 = !DILocation(line: 40, column: 21, scope: !7)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 51, scope: !7)
!33 = !DILocation(line: 44, column: 43, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 45, column: 42, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 49, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 19, scope: !7)
!43 = !DILocation(line: 51, column: 51, scope: !7)
!44 = !DILocation(line: 51, column: 43, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !46)
!46 = !DILocation(line: 52, column: 42, scope: !7)
!47 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !46)
!48 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !46)
!49 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !46)
!50 = !DILocation(line: 57, column: 20, scope: !7)
!51 = !DILocation(line: 58, column: 38, scope: !7)
!52 = !DILocation(line: 58, column: 31, scope: !7)
!53 = !DILocation(line: 58, column: 51, scope: !7)
!54 = !DILocation(line: 58, column: 43, scope: !7)
!55 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !56)
!56 = !DILocation(line: 59, column: 42, scope: !7)
!57 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !56)
!58 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !56)
!59 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !56)
!60 = !DILocation(line: 61, column: 31, scope: !7)
!61 = !DILocation(line: 61, column: 44, scope: !7)
!62 = !DILocation(line: 61, column: 36, scope: !7)
!63 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !64)
!64 = !DILocation(line: 62, column: 42, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !64)
!68 = !DILocation(line: 63, column: 20, scope: !7)
!69 = !DILocation(line: 64, column: 35, scope: !7)
!70 = !DILocation(line: 64, column: 31, scope: !7)
!71 = !DILocation(line: 64, column: 48, scope: !7)
!72 = !DILocation(line: 64, column: 40, scope: !7)
!73 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !74)
!74 = !DILocation(line: 65, column: 42, scope: !7)
!75 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !74)
!76 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !74)
!77 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !74)
!78 = !DILocation(line: 70, column: 20, scope: !7)
!79 = !DILocation(line: 71, column: 35, scope: !7)
!80 = !DILocation(line: 71, column: 31, scope: !7)
!81 = !DILocation(line: 71, column: 48, scope: !7)
!82 = !DILocation(line: 71, column: 40, scope: !7)
!83 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !84)
!84 = !DILocation(line: 72, column: 42, scope: !7)
!85 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !84)
!86 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !84)
!87 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !84)
!88 = !DILocation(line: 73, column: 20, scope: !7)
!89 = !DILocation(line: 74, column: 35, scope: !7)
!90 = !DILocation(line: 74, column: 31, scope: !7)
!91 = !DILocation(line: 74, column: 48, scope: !7)
!92 = !DILocation(line: 74, column: 40, scope: !7)
!93 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !94)
!94 = !DILocation(line: 75, column: 42, scope: !7)
!95 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !94)
!96 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !94)
!97 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !94)
!98 = !DILocation(line: 76, column: 20, scope: !7)
!99 = !DILocation(line: 77, column: 35, scope: !7)
!100 = !DILocation(line: 77, column: 31, scope: !7)
!101 = !DILocation(line: 77, column: 48, scope: !7)
!102 = !DILocation(line: 77, column: 40, scope: !7)
!103 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !104)
!104 = !DILocation(line: 78, column: 42, scope: !7)
!105 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !104)
!106 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !104)
!107 = !DILocation(line: 79, column: 25, scope: !7)
!108 = !DILocation(line: 79, column: 37, scope: !7)
!109 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !104)
!110 = !DILocation(line: 79, column: 4, scope: !7)
