#loc = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0)
module {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0), %arg4: i32 loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2352> : tensor<1x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<48> : tensor<64x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<8> : tensor<64x64xi8> loc(#loc1)
    %cst_2 = arith.constant dense<7> : tensor<64x64xi8> loc(#loc1)
    %cst_3 = arith.constant dense<6> : tensor<64x64xi8> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<64x64xi8> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<64x64xi8> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<64x64xi8> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<64x64xi8> loc(#loc1)
    %cst_8 = arith.constant dense<0> : tensor<64x64xi8> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<64x64xi8> loc(#loc1)
    %cst_10 = arith.constant dense<32> : tensor<64x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<31> : tensor<64x1xi32> loc(#loc1)
    %cst_12 = arith.constant dense<17> : tensor<64x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<16> : tensor<64x1xi32> loc(#loc1)
    %cst_14 = arith.constant dense<15> : tensor<64x1xi32> loc(#loc1)
    %cst_15 = arith.constant dense<1> : tensor<64x1xi32> loc(#loc1)
    %cst_16 = arith.constant dense<225> : tensor<1x64xi32> loc(#loc1)
    %cst_17 = arith.constant dense<30> : tensor<64x1xi32> loc(#loc1)
    %cst_18 = arith.constant dense<2> : tensor<64x1xi32> loc(#loc1)
    %cst_19 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_20 = arith.constant dense<7> : tensor<64x1xi32> loc(#loc1)
    %cst_21 = arith.constant dense<49> : tensor<64x1xi32> loc(#loc1)
    %cst_22 = arith.constant dense<192> : tensor<1x64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_22 : tensor<1x64xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c64_i32 : i32 loc(#loc9)
    %9 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc10)
    %10 = tt.splat %8 : i32 -> tensor<64x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<64x1xi32> loc(#loc11)
    %12 = arith.cmpi slt, %11, %cst_21 : tensor<64x1xi32> loc(#loc12)
    %13 = arith.remsi %11, %cst_20 : tensor<64x1xi32> loc(#loc13)
    %14 = arith.divsi %11, %cst_20 : tensor<64x1xi32> loc(#loc14)
    %15 = arith.remsi %5, %cst_19 : tensor<1x64xi32> loc(#loc15)
    %16 = arith.divsi %5, %cst_19 : tensor<1x64xi32> loc(#loc16)
    %17 = arith.muli %13, %cst_18 : tensor<64x1xi32> loc(#loc17)
    %18 = arith.muli %14, %cst_17 : tensor<64x1xi32> loc(#loc18)
    %19 = arith.addi %17, %18 : tensor<64x1xi32> loc(#loc19)
    %20 = arith.muli %5, %cst_16 : tensor<1x64xi32> loc(#loc20)
    %21 = tt.broadcast %19 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc21)
    %22 = tt.broadcast %20 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc21)
    %23 = arith.addi %21, %22 : tensor<64x64xi32> loc(#loc21)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc22)
    %25 = tt.addptr %24, %23 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc22)
    %26 = tt.broadcast %12 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc23)
    %27 = tt.broadcast %6 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc23)
    %28 = arith.andi %26, %27 : tensor<64x64xi1> loc(#loc23)
    %29 = tt.load %25, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc24)
    %30 = arith.addi %17, %cst_15 : tensor<64x1xi32> loc(#loc25)
    %31 = arith.addi %30, %18 : tensor<64x1xi32> loc(#loc26)
    %32 = tt.broadcast %31 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc27)
    %33 = arith.addi %32, %22 : tensor<64x64xi32> loc(#loc27)
    %34 = tt.addptr %24, %33 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc28)
    %35 = tt.load %34, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc29)
    %36 = arith.addi %17, %cst_18 : tensor<64x1xi32> loc(#loc30)
    %37 = arith.addi %36, %18 : tensor<64x1xi32> loc(#loc31)
    %38 = tt.broadcast %37 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc32)
    %39 = arith.addi %38, %22 : tensor<64x64xi32> loc(#loc32)
    %40 = tt.addptr %24, %39 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc33)
    %41 = tt.load %40, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc34)
    %42 = arith.addi %17, %cst_14 : tensor<64x1xi32> loc(#loc35)
    %43 = arith.addi %42, %18 : tensor<64x1xi32> loc(#loc36)
    %44 = tt.broadcast %43 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc37)
    %45 = arith.addi %44, %22 : tensor<64x64xi32> loc(#loc37)
    %46 = tt.addptr %24, %45 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc38)
    %47 = tt.load %46, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc39)
    %48 = arith.addi %17, %cst_13 : tensor<64x1xi32> loc(#loc40)
    %49 = arith.addi %48, %18 : tensor<64x1xi32> loc(#loc41)
    %50 = tt.broadcast %49 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc42)
    %51 = arith.addi %50, %22 : tensor<64x64xi32> loc(#loc42)
    %52 = tt.addptr %24, %51 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc43)
    %53 = tt.load %52, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc44)
    %54 = arith.addi %17, %cst_12 : tensor<64x1xi32> loc(#loc45)
    %55 = arith.addi %54, %18 : tensor<64x1xi32> loc(#loc46)
    %56 = tt.broadcast %55 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc47)
    %57 = arith.addi %56, %22 : tensor<64x64xi32> loc(#loc47)
    %58 = tt.addptr %24, %57 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc48)
    %59 = tt.load %58, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc49)
    %60 = arith.addi %17, %cst_17 : tensor<64x1xi32> loc(#loc50)
    %61 = arith.addi %60, %18 : tensor<64x1xi32> loc(#loc51)
    %62 = tt.broadcast %61 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc52)
    %63 = arith.addi %62, %22 : tensor<64x64xi32> loc(#loc52)
    %64 = tt.addptr %24, %63 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc53)
    %65 = tt.load %64, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc54)
    %66 = arith.addi %17, %cst_11 : tensor<64x1xi32> loc(#loc55)
    %67 = arith.addi %66, %18 : tensor<64x1xi32> loc(#loc56)
    %68 = tt.broadcast %67 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc57)
    %69 = arith.addi %68, %22 : tensor<64x64xi32> loc(#loc57)
    %70 = tt.addptr %24, %69 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc58)
    %71 = tt.load %70, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc59)
    %72 = arith.addi %17, %cst_10 : tensor<64x1xi32> loc(#loc60)
    %73 = arith.addi %72, %18 : tensor<64x1xi32> loc(#loc61)
    %74 = tt.broadcast %73 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc62)
    %75 = arith.addi %74, %22 : tensor<64x64xi32> loc(#loc62)
    %76 = tt.addptr %24, %75 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc63)
    %77 = tt.load %76, %28 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc64)
    %78 = arith.cmpf ogt, %35, %29 : tensor<64x64xf32> loc(#loc94)
    %79 = arith.cmpf une, %35, %35 : tensor<64x64xf32> loc(#loc95)
    %80 = arith.ori %78, %79 : tensor<64x64xi1> loc(#loc96)
    %81 = arith.select %80, %35, %29 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc97)
    %82 = arith.cmpf ogt, %41, %81 : tensor<64x64xf32> loc(#loc98)
    %83 = arith.cmpf une, %41, %41 : tensor<64x64xf32> loc(#loc99)
    %84 = arith.ori %82, %83 : tensor<64x64xi1> loc(#loc100)
    %85 = arith.select %84, %41, %81 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc101)
    %86 = arith.cmpf ogt, %47, %85 : tensor<64x64xf32> loc(#loc102)
    %87 = arith.cmpf une, %47, %47 : tensor<64x64xf32> loc(#loc103)
    %88 = arith.ori %86, %87 : tensor<64x64xi1> loc(#loc104)
    %89 = arith.select %88, %47, %85 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc105)
    %90 = arith.cmpf ogt, %53, %89 : tensor<64x64xf32> loc(#loc106)
    %91 = arith.cmpf une, %53, %53 : tensor<64x64xf32> loc(#loc107)
    %92 = arith.ori %90, %91 : tensor<64x64xi1> loc(#loc108)
    %93 = arith.select %92, %53, %89 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc109)
    %94 = arith.cmpf ogt, %59, %93 : tensor<64x64xf32> loc(#loc110)
    %95 = arith.cmpf une, %59, %59 : tensor<64x64xf32> loc(#loc111)
    %96 = arith.ori %94, %95 : tensor<64x64xi1> loc(#loc112)
    %97 = arith.select %96, %59, %93 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc113)
    %98 = arith.cmpf ogt, %65, %97 : tensor<64x64xf32> loc(#loc114)
    %99 = arith.cmpf une, %65, %65 : tensor<64x64xf32> loc(#loc115)
    %100 = arith.ori %98, %99 : tensor<64x64xi1> loc(#loc116)
    %101 = arith.select %100, %65, %97 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc117)
    %102 = arith.cmpf ogt, %71, %101 : tensor<64x64xf32> loc(#loc118)
    %103 = arith.cmpf une, %71, %71 : tensor<64x64xf32> loc(#loc119)
    %104 = arith.ori %102, %103 : tensor<64x64xi1> loc(#loc120)
    %105 = arith.select %104, %71, %101 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc121)
    %106 = arith.cmpf ogt, %77, %105 : tensor<64x64xf32> loc(#loc122)
    %107 = arith.cmpf une, %77, %77 : tensor<64x64xf32> loc(#loc123)
    %108 = arith.ori %106, %107 : tensor<64x64xi1> loc(#loc124)
    %109 = arith.select %108, %77, %105 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc125)
    %110 = arith.select %78, %cst_9, %cst_8 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc77)
    %111 = arith.select %82, %cst_7, %110 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc78)
    %112 = arith.select %86, %cst_6, %111 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc79)
    %113 = arith.select %90, %cst_5, %112 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc80)
    %114 = arith.select %94, %cst_4, %113 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc81)
    %115 = arith.select %98, %cst_3, %114 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc82)
    %116 = arith.select %102, %cst_2, %115 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc83)
    %117 = arith.select %106, %cst_1, %116 : tensor<64x64xi1>, tensor<64x64xi8> loc(#loc84)
    %118 = arith.muli %11, %cst_0 : tensor<64x1xi32> loc(#loc85)
    %119 = tt.broadcast %15 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc86)
    %120 = tt.broadcast %118 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc86)
    %121 = arith.addi %119, %120 : tensor<64x64xi32> loc(#loc86)
    %122 = arith.muli %16, %cst : tensor<1x64xi32> loc(#loc87)
    %123 = tt.broadcast %122 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc88)
    %124 = arith.addi %121, %123 : tensor<64x64xi32> loc(#loc88)
    %125 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc89)
    %126 = tt.addptr %125, %124 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc89)
    tt.store %126, %109, %28 : tensor<64x64x!tt.ptr<f32>> loc(#loc90)
    %127 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<64x64x!tt.ptr<i8>> loc(#loc91)
    %128 = tt.addptr %127, %124 : tensor<64x64x!tt.ptr<i8>>, tensor<64x64xi32> loc(#loc91)
    tt.store %128, %117, %28 : tensor<64x64x!tt.ptr<i8>> loc(#loc92)
    tt.return loc(#loc93)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":22:28)
#loc3 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":22:33)
#loc4 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":23:36)
#loc5 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":23:44)
#loc6 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":23:23)
#loc7 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":24:21)
#loc8 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":25:28)
#loc9 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":25:33)
#loc10 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":26:44)
#loc11 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":26:23)
#loc12 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":27:21)
#loc13 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":28:19)
#loc14 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":29:19)
#loc15 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":32:19)
#loc16 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":33:19)
#loc17 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:32)
#loc18 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:40)
#loc19 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:37)
#loc20 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:49)
#loc21 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:45)
#loc22 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:30)
#loc23 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:62)
#loc24 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":34:54)
#loc25 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":35:34)
#loc26 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":35:41)
#loc27 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":35:49)
#loc28 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":35:30)
#loc29 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":35:58)
#loc30 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":36:34)
#loc31 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":36:41)
#loc32 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":36:49)
#loc33 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":36:30)
#loc34 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":36:58)
#loc35 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":37:35)
#loc36 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":37:42)
#loc37 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":37:50)
#loc38 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":37:30)
#loc39 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":37:59)
#loc40 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":38:35)
#loc41 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":38:42)
#loc42 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":38:50)
#loc43 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":38:30)
#loc44 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":38:59)
#loc45 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":39:35)
#loc46 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":39:42)
#loc47 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":39:50)
#loc48 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":39:30)
#loc49 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":39:59)
#loc50 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":40:36)
#loc51 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":40:43)
#loc52 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":40:51)
#loc53 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":40:31)
#loc54 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":40:60)
#loc55 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":41:36)
#loc56 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":41:43)
#loc57 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":41:51)
#loc58 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":41:31)
#loc59 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":41:60)
#loc60 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":42:36)
#loc61 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":42:43)
#loc62 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":42:51)
#loc63 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":42:31)
#loc64 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":42:60)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc66 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":43:40)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc70 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":44:40)
#loc71 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":45:40)
#loc72 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":46:40)
#loc73 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":47:41)
#loc74 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":48:42)
#loc75 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":49:42)
#loc76 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":50:42)
#loc77 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":54:35)
#loc78 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":57:35)
#loc79 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":60:35)
#loc80 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":63:35)
#loc81 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":66:35)
#loc82 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":69:35)
#loc83 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":72:35)
#loc84 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":75:35)
#loc85 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:33)
#loc86 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:30)
#loc87 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:43)
#loc88 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:38)
#loc89 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:25)
#loc90 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":76:55)
#loc91 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":77:25)
#loc92 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":77:55)
#loc93 = loc("inductor_cache/3h/c3hs6rh7aupdypacpm4uybtbu5zct5c2nh7b7s4damq4rwryzrxl.py":77:4)
#loc94 = loc(callsite(#loc65 at #loc66))
#loc95 = loc(callsite(#loc67 at #loc66))
#loc96 = loc(callsite(#loc68 at #loc66))
#loc97 = loc(callsite(#loc69 at #loc66))
#loc98 = loc(callsite(#loc65 at #loc70))
#loc99 = loc(callsite(#loc67 at #loc70))
#loc100 = loc(callsite(#loc68 at #loc70))
#loc101 = loc(callsite(#loc69 at #loc70))
#loc102 = loc(callsite(#loc65 at #loc71))
#loc103 = loc(callsite(#loc67 at #loc71))
#loc104 = loc(callsite(#loc68 at #loc71))
#loc105 = loc(callsite(#loc69 at #loc71))
#loc106 = loc(callsite(#loc65 at #loc72))
#loc107 = loc(callsite(#loc67 at #loc72))
#loc108 = loc(callsite(#loc68 at #loc72))
#loc109 = loc(callsite(#loc69 at #loc72))
#loc110 = loc(callsite(#loc65 at #loc73))
#loc111 = loc(callsite(#loc67 at #loc73))
#loc112 = loc(callsite(#loc68 at #loc73))
#loc113 = loc(callsite(#loc69 at #loc73))
#loc114 = loc(callsite(#loc65 at #loc74))
#loc115 = loc(callsite(#loc67 at #loc74))
#loc116 = loc(callsite(#loc68 at #loc74))
#loc117 = loc(callsite(#loc69 at #loc74))
#loc118 = loc(callsite(#loc65 at #loc75))
#loc119 = loc(callsite(#loc67 at #loc75))
#loc120 = loc(callsite(#loc68 at #loc75))
#loc121 = loc(callsite(#loc69 at #loc75))
#loc122 = loc(callsite(#loc65 at #loc76))
#loc123 = loc(callsite(#loc67 at #loc76))
#loc124 = loc(callsite(#loc68 at #loc76))
#loc125 = loc(callsite(#loc69 at #loc76))
