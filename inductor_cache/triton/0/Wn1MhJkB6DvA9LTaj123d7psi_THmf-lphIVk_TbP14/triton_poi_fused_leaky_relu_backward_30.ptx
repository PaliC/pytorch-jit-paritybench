//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_leaky_relu_backward_30 // -- Begin function triton_poi_fused_leaky_relu_backward_30
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_leaky_relu_backward_30
.visible .entry triton_poi_fused_leaky_relu_backward_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_backward_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_backward_30_param_1,
	.param .u32 triton_poi_fused_leaky_relu_backward_30_param_2,
	.param .u32 triton_poi_fused_leaky_relu_backward_30_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<38>;
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_leaky_relu_backward_30_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_leaky_relu_backward_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:22:33
	shl.b32 	%r5, %r1, 5;
	.loc	1 23 44                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:23:44
	mov.u32 	%r6, %tid.x;
	bfe.u32 	%r7, %r6, 2, 5;
	and.b32  	%r8, %r6, 3;
	and.b32  	%r9, %r6, 31;
	.loc	1 23 23                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:23:23
	or.b32  	%r10, %r5, %r7;
	or.b32  	%r11, %r5, %r9;
	.loc	1 24 21                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:24:21
	setp.lt.s32 	%p4, %r10, 128;
	setp.lt.s32 	%p5, %r11, 128;
	.loc	1 25 28                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:25:33
	shl.b32 	%r12, %r2, 2;
	.loc	1 26 44                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:26:44
	bfe.u32 	%r13, %r6, 5, 2;
	.loc	1 26 23                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:26:23
	or.b32  	%r14, %r12, %r8;
	or.b32  	%r15, %r12, %r13;
	.loc	1 27 21                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:27:21
	setp.lt.s32 	%p6, %r14, 4;
	setp.lt.s32 	%p7, %r15, 4;
	.loc	1 31 19                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:31:19
	shr.s32 	%r17, %r11, 31;
	shr.u32 	%r18, %r17, 27;
	add.s32 	%r19, %r11, %r18;
	.loc	1 30 19                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:30:19
	and.b32  	%r20, %r19, -32;
	sub.s32 	%r21, %r11, %r20;
	.loc	1 32 37                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:32:37
	shl.b32 	%r22, %r10, 2;
	.loc	1 32 35                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:32:35
	add.s32 	%r23, %r14, %r22;
	.loc	1 32 30                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:32:30
	mul.wide.s32 	%rd5, %r23, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 32 50                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:32:50
	and.pred  	%p1, %p4, %p6;
	and.pred  	%p3, %p5, %p7;
	.loc	1 32 42                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 34 18                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:34:18
	setp.gt.f32 	%p8, %f1, 0f00000000;
	.loc	1 35 33                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:33
	shl.b32 	%r24, %r15, 5;
	.loc	1 35 30                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:30
	add.s32 	%r25, %r24, %r21;
	.loc	1 35 42                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:42
	shl.b32 	%r26, %r19, 2;
	and.b32  	%r27, %r26, -128;
	.loc	1 35 38                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:38
	add.s32 	%r28, %r25, %r27;
	.loc	1 35 25                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:25
	cvt.s64.s32 	%rd6, %r28;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 35 53                         // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:53
	shl.b32 	%r29, %r6, 5;
	and.b32  	%r30, %r29, 96;
	or.b32  	%r31, %r30, %r7;
	and.b32  	%r32, %r6, 127;
	bfe.u32 	%r33, %r29, 5, 2;
	mov.u32 	%r34, global_smem;
	add.s32 	%r35, %r34, %r33;
	add.s32 	%r4, %r35, %r31;
	selp.u16 	%rs1, 1, 0, %p8;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b8 [ %r4 + 0 ], %rs1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r36, %r34, %r13;
	add.s32 	%r37, %r36, %r32;
	ld.shared.u8 	%rs3, [%r37];
	and.b16  	%rs2, %rs3, 1;
	// begin inline asm
	@%p3 st.global.b8 [ %rd2 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 35 4                          // cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fa/cfajlkgf2fopzkf5vus76bniuv2emykmgiasgyewnm4qs7thx6rh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 97
.b8 106
.b8 108
.b8 107
.b8 103
.b8 102
.b8 50
.b8 102
.b8 111
.b8 112
.b8 122
.b8 107
.b8 102
.b8 53
.b8 118
.b8 117
.b8 115
.b8 55
.b8 54
.b8 98
.b8 110
.b8 105
.b8 117
.b8 118
.b8 50
.b8 101
.b8 109
.b8 121
.b8 107
.b8 109
.b8 103
.b8 105
.b8 97
.b8 115
.b8 103
.b8 121
.b8 101
.b8 119
.b8 110
.b8 109
.b8 52
.b8 113
.b8 115
.b8 55
.b8 116
.b8 104
.b8 120
.b8 54
.b8 114
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
