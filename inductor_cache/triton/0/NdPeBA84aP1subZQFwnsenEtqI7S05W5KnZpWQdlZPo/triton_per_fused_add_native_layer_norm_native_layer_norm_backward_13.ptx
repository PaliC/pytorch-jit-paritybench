//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<79>;
	.reg .b32 	%r<274>;
	.reg .f32 	%f<261>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd25, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_0];
	ld.param.u64 	%rd26, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_1];
$L__tmp0:
	.loc	1 23 28                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:23:33
	shl.b32 	%r174, %r1, 5;
	ld.param.u64 	%rd27, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_2];
	ld.param.u64 	%rd28, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_3];
	.loc	1 24 44                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:24:44
	mov.u32 	%r175, %tid.x;
	ld.param.u64 	%rd29, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_4];
	bfe.u32 	%r176, %r175, 5, 3;
	ld.param.u64 	%rd30, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_5];
	ld.param.u64 	%rd31, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_6];
	ld.param.u64 	%rd32, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_13_param_7];
	and.b32  	%r177, %r175, 31;
	.loc	1 24 23                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:24:23
	or.b32  	%r178, %r174, %r176;
	or.b32  	%r179, %r178, 8;
	or.b32  	%r180, %r178, 16;
	or.b32  	%r181, %r178, 24;
	.loc	1 25 21                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:25:21
	setp.lt.s32 	%p73, %r178, 1024;
	setp.lt.s32 	%p74, %r179, 1024;
	setp.lt.s32 	%p75, %r180, 1024;
	setp.lt.s32 	%p76, %r181, 1024;
	.loc	1 26 34                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:26:34
	shl.b32 	%r182, %r175, 2;
	and.b32  	%r183, %r182, 124;
	.loc	1 28 21                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:28:21
	setp.lt.u32 	%p41, %r183, 96;
	.loc	1 31 39                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:31:39
	mad.lo.s32 	%r184, %r178, 96, %r183;
	mad.lo.s32 	%r185, %r179, 96, %r183;
	mad.lo.s32 	%r186, %r180, 96, %r183;
	mad.lo.s32 	%r187, %r181, 96, %r183;
	.loc	1 31 34                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:31:34
	mul.wide.s32 	%rd33, %r184, 4;
	add.s64 	%rd1, %rd25, %rd33;
	mul.wide.s32 	%rd34, %r185, 4;
	add.s64 	%rd2, %rd25, %rd34;
	mul.wide.s32 	%rd35, %r186, 4;
	add.s64 	%rd3, %rd25, %rd35;
	mul.wide.s32 	%rd36, %r187, 4;
	add.s64 	%rd4, %rd25, %rd36;
	.loc	1 31 55                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:31:55
	and.pred  	%p1, %p41, %p73;
	and.pred  	%p6, %p41, %p74;
	and.pred  	%p11, %p41, %p75;
	and.pred  	%p16, %p41, %p76;
	mov.b32 	%r6, 0;
	.loc	1 31 47                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:31:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 32 30                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:32:30
	add.s64 	%rd5, %rd26, %rd33;
	add.s64 	%rd6, %rd26, %rd34;
	add.s64 	%rd7, %rd26, %rd35;
	add.s64 	%rd8, %rd26, %rd36;
	.loc	1 32 43                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:32:43
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r35;
	mov.b32 	%f19, %r36;
	mov.b32 	%f20, %r37;
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p6 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p6 mov.u32 %r42, %r6;
	@!%p6 mov.u32 %r43, %r6;
	@!%p6 mov.u32 %r44, %r6;
	@!%p6 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	%f21, %r42;
	mov.b32 	%f22, %r43;
	mov.b32 	%f23, %r44;
	mov.b32 	%f24, %r45;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p11 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p11 mov.u32 %r50, %r6;
	@!%p11 mov.u32 %r51, %r6;
	@!%p11 mov.u32 %r52, %r6;
	@!%p11 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f25, %r50;
	mov.b32 	%f26, %r51;
	mov.b32 	%f27, %r52;
	mov.b32 	%f28, %r53;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p16 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p16 mov.u32 %r58, %r6;
	@!%p16 mov.u32 %r59, %r6;
	@!%p16 mov.u32 %r60, %r6;
	@!%p16 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	%f29, %r58;
	mov.b32 	%f30, %r59;
	mov.b32 	%f31, %r60;
	mov.b32 	%f32, %r61;
	.loc	1 33 30                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:33:30
	mul.wide.u32 	%rd37, %r183, 4;
	add.s64 	%rd9, %rd27, %rd37;
	.loc	1 33 35                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:33:35
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p41 ld.global.L1::evict_last.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd9 + 0 ];
	@!%p41 mov.u32 %r66, %r6;
	@!%p41 mov.u32 %r67, %r6;
	@!%p41 mov.u32 %r68, %r6;
	@!%p41 mov.u32 %r69, %r6;
	// end inline asm
	mov.b32 	%f33, %r66;
	mov.b32 	%f34, %r67;
	mov.b32 	%f35, %r68;
	mov.b32 	%f36, %r69;
	.loc	1 34 31                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:34:31
	add.s64 	%rd10, %rd28, %rd37;
	.loc	1 34 36                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:34:36
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p41 ld.global.L1::evict_last.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd10 + 0 ];
	@!%p41 mov.u32 %r74, %r6;
	@!%p41 mov.u32 %r75, %r6;
	@!%p41 mov.u32 %r76, %r6;
	@!%p41 mov.u32 %r77, %r6;
	// end inline asm
	.loc	1 35 31                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:35:31
	add.s64 	%rd11, %rd29, %rd37;
	.loc	1 35 36                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:35:36
	// begin inline asm
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	@%p41 ld.global.L1::evict_last.v4.b32 { %r82, %r83, %r84, %r85 }, [ %rd11 + 0 ];
	@!%p41 mov.u32 %r82, %r6;
	@!%p41 mov.u32 %r83, %r6;
	@!%p41 mov.u32 %r84, %r6;
	@!%p41 mov.u32 %r85, %r6;
	// end inline asm
	.loc	1 36 18                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:36:18
	add.f32 	%f37, %f17, %f33;
	add.f32 	%f38, %f18, %f34;
	add.f32 	%f39, %f19, %f35;
	add.f32 	%f40, %f20, %f36;
	add.f32 	%f41, %f21, %f33;
	add.f32 	%f42, %f22, %f34;
	add.f32 	%f43, %f23, %f35;
	add.f32 	%f44, %f24, %f36;
	add.f32 	%f45, %f25, %f33;
	add.f32 	%f46, %f26, %f34;
	add.f32 	%f47, %f27, %f35;
	add.f32 	%f48, %f28, %f36;
	add.f32 	%f49, %f29, %f33;
	add.f32 	%f50, %f30, %f34;
	add.f32 	%f51, %f31, %f35;
	add.f32 	%f52, %f32, %f36;
	.loc	1 37 18                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:37:18
	add.f32 	%f53, %f37, %f1;
	add.f32 	%f54, %f38, %f2;
	add.f32 	%f55, %f39, %f3;
	add.f32 	%f56, %f40, %f4;
	add.f32 	%f57, %f41, %f5;
	add.f32 	%f58, %f42, %f6;
	add.f32 	%f59, %f43, %f7;
	add.f32 	%f60, %f44, %f8;
	add.f32 	%f61, %f45, %f9;
	add.f32 	%f62, %f46, %f10;
	add.f32 	%f63, %f47, %f11;
	add.f32 	%f64, %f48, %f12;
	add.f32 	%f65, %f49, %f13;
	add.f32 	%f66, %f50, %f14;
	add.f32 	%f67, %f51, %f15;
	add.f32 	%f68, %f52, %f16;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f53, %f54;
	add.f32 	%f70, %f55, %f69;
	add.f32 	%f71, %f56, %f70;
	selp.f32 	%f72, %f71, 0f00000000, %p1;
	add.f32 	%f73, %f57, %f58;
	add.f32 	%f74, %f59, %f73;
	add.f32 	%f75, %f60, %f74;
	selp.f32 	%f76, %f75, 0f00000000, %p6;
	add.f32 	%f77, %f61, %f62;
	add.f32 	%f78, %f63, %f77;
	add.f32 	%f79, %f64, %f78;
	selp.f32 	%f80, %f79, 0f00000000, %p11;
	add.f32 	%f81, %f65, %f66;
	add.f32 	%f82, %f67, %f81;
	add.f32 	%f83, %f68, %f82;
	selp.f32 	%f84, %f83, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r188, %f72;
	shfl.sync.bfly.b32	%r189, %r188, 16, 31, -1;
	mov.b32 	%f85, %r189;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f72, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r190, %f86;
	shfl.sync.bfly.b32	%r191, %r190, 8, 31, -1;
	mov.b32 	%f87, %r191;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r192, %f88;
	shfl.sync.bfly.b32	%r193, %r192, 4, 31, -1;
	mov.b32 	%f89, %r193;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r194, %f90;
	shfl.sync.bfly.b32	%r195, %r194, 2, 31, -1;
	mov.b32 	%f91, %r195;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r196, %f92;
	shfl.sync.bfly.b32	%r197, %r196, 1, 31, -1;
	mov.b32 	%f93, %r197;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r198, %f76;
	shfl.sync.bfly.b32	%r199, %r198, 16, 31, -1;
	mov.b32 	%f95, %r199;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f76, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r200, %f96;
	shfl.sync.bfly.b32	%r201, %r200, 8, 31, -1;
	mov.b32 	%f97, %r201;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r202, %f98;
	shfl.sync.bfly.b32	%r203, %r202, 4, 31, -1;
	mov.b32 	%f99, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r204, %f100;
	shfl.sync.bfly.b32	%r205, %r204, 2, 31, -1;
	mov.b32 	%f101, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f102, %f100, %f101;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r206, %f102;
	shfl.sync.bfly.b32	%r207, %r206, 1, 31, -1;
	mov.b32 	%f103, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r208, %f80;
	shfl.sync.bfly.b32	%r209, %r208, 16, 31, -1;
	mov.b32 	%f105, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f80, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r210, %f106;
	shfl.sync.bfly.b32	%r211, %r210, 8, 31, -1;
	mov.b32 	%f107, %r211;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r212, %f108;
	shfl.sync.bfly.b32	%r213, %r212, 4, 31, -1;
	mov.b32 	%f109, %r213;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r214, %f110;
	shfl.sync.bfly.b32	%r215, %r214, 2, 31, -1;
	mov.b32 	%f111, %r215;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r216, %f112;
	shfl.sync.bfly.b32	%r217, %r216, 1, 31, -1;
	mov.b32 	%f113, %r217;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r218, %f84;
	shfl.sync.bfly.b32	%r219, %r218, 16, 31, -1;
	mov.b32 	%f115, %r219;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f84, %f115;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r220, %f116;
	shfl.sync.bfly.b32	%r221, %r220, 8, 31, -1;
	mov.b32 	%f117, %r221;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r222, %f118;
	shfl.sync.bfly.b32	%r223, %r222, 4, 31, -1;
	mov.b32 	%f119, %r223;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f118, %f119;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r224, %f120;
	shfl.sync.bfly.b32	%r225, %r224, 2, 31, -1;
	mov.b32 	%f121, %r225;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r226, %f122;
	shfl.sync.bfly.b32	%r227, %r226, 1, 31, -1;
	mov.b32 	%f123, %r227;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
$L__tmp2:
	.loc	1 45 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:45:20
	mov.b32 	%r91, %f94;
	mov.b32 	%r92, 1119879168;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f125, %r90;
	mov.b32 	%r94, %f104;
	// begin inline asm
	div.full.f32 %r93, %r94, %r92;
	// end inline asm
	mov.b32 	%f126, %r93;
	mov.b32 	%r97, %f114;
	// begin inline asm
	div.full.f32 %r96, %r97, %r92;
	// end inline asm
	mov.b32 	%f127, %r96;
	mov.b32 	%r100, %f124;
	// begin inline asm
	div.full.f32 %r99, %r100, %r92;
	// end inline asm
	mov.b32 	%f128, %r99;
	.loc	1 46 19                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:46:19
	sub.f32 	%f129, %f53, %f125;
	sub.f32 	%f130, %f54, %f125;
	sub.f32 	%f131, %f55, %f125;
	sub.f32 	%f132, %f56, %f125;
	sub.f32 	%f133, %f57, %f126;
	sub.f32 	%f134, %f58, %f126;
	sub.f32 	%f135, %f59, %f126;
	sub.f32 	%f136, %f60, %f126;
	sub.f32 	%f137, %f61, %f127;
	sub.f32 	%f138, %f62, %f127;
	sub.f32 	%f139, %f63, %f127;
	sub.f32 	%f140, %f64, %f127;
	sub.f32 	%f141, %f65, %f128;
	sub.f32 	%f142, %f66, %f128;
	sub.f32 	%f143, %f67, %f128;
	sub.f32 	%f144, %f68, %f128;
	.loc	1 47 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:47:20
	mul.f32 	%f145, %f130, %f130;
	mul.f32 	%f146, %f134, %f134;
	mul.f32 	%f147, %f138, %f138;
	mul.f32 	%f148, %f142, %f142;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f149, %f129, %f129, %f145;
	fma.rn.f32 	%f150, %f131, %f131, %f149;
	fma.rn.f32 	%f151, %f132, %f132, %f150;
	selp.f32 	%f152, %f151, 0f00000000, %p1;
	fma.rn.f32 	%f153, %f133, %f133, %f146;
	fma.rn.f32 	%f154, %f135, %f135, %f153;
	fma.rn.f32 	%f155, %f136, %f136, %f154;
	selp.f32 	%f156, %f155, 0f00000000, %p6;
	fma.rn.f32 	%f157, %f137, %f137, %f147;
	fma.rn.f32 	%f158, %f139, %f139, %f157;
	fma.rn.f32 	%f159, %f140, %f140, %f158;
	selp.f32 	%f160, %f159, 0f00000000, %p11;
	fma.rn.f32 	%f161, %f141, %f141, %f148;
	fma.rn.f32 	%f162, %f143, %f143, %f161;
	fma.rn.f32 	%f163, %f144, %f144, %f162;
	selp.f32 	%f164, %f163, 0f00000000, %p16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r228, %f152;
	shfl.sync.bfly.b32	%r229, %r228, 16, 31, -1;
	mov.b32 	%f165, %r229;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f166, %f152, %f165;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r230, %f166;
	shfl.sync.bfly.b32	%r231, %r230, 8, 31, -1;
	mov.b32 	%f167, %r231;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f168, %f166, %f167;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r232, %f168;
	shfl.sync.bfly.b32	%r233, %r232, 4, 31, -1;
	mov.b32 	%f169, %r233;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f168, %f169;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r234, %f170;
	shfl.sync.bfly.b32	%r235, %r234, 2, 31, -1;
	mov.b32 	%f171, %r235;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r236, %f172;
	shfl.sync.bfly.b32	%r237, %r236, 1, 31, -1;
	mov.b32 	%f173, %r237;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f174, %f172, %f173;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r238, %f156;
	shfl.sync.bfly.b32	%r239, %r238, 16, 31, -1;
	mov.b32 	%f175, %r239;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f176, %f156, %f175;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r240, %f176;
	shfl.sync.bfly.b32	%r241, %r240, 8, 31, -1;
	mov.b32 	%f177, %r241;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f178, %f176, %f177;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r242, %f178;
	shfl.sync.bfly.b32	%r243, %r242, 4, 31, -1;
	mov.b32 	%f179, %r243;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f180, %f178, %f179;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r244, %f180;
	shfl.sync.bfly.b32	%r245, %r244, 2, 31, -1;
	mov.b32 	%f181, %r245;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f182, %f180, %f181;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r246, %f182;
	shfl.sync.bfly.b32	%r247, %r246, 1, 31, -1;
	mov.b32 	%f183, %r247;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r248, %f160;
	shfl.sync.bfly.b32	%r249, %r248, 16, 31, -1;
	mov.b32 	%f185, %r249;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f160, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r250, %f186;
	shfl.sync.bfly.b32	%r251, %r250, 8, 31, -1;
	mov.b32 	%f187, %r251;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f186, %f187;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r252, %f188;
	shfl.sync.bfly.b32	%r253, %r252, 4, 31, -1;
	mov.b32 	%f189, %r253;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f190, %f188, %f189;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r254, %f190;
	shfl.sync.bfly.b32	%r255, %r254, 2, 31, -1;
	mov.b32 	%f191, %r255;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f192, %f190, %f191;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r256, %f192;
	shfl.sync.bfly.b32	%r257, %r256, 1, 31, -1;
	mov.b32 	%f193, %r257;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f194, %f192, %f193;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r258, %f164;
	shfl.sync.bfly.b32	%r259, %r258, 16, 31, -1;
	mov.b32 	%f195, %r259;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f196, %f164, %f195;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r260, %f196;
	shfl.sync.bfly.b32	%r261, %r260, 8, 31, -1;
	mov.b32 	%f197, %r261;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f198, %f196, %f197;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r262, %f198;
	shfl.sync.bfly.b32	%r263, %r262, 4, 31, -1;
	mov.b32 	%f199, %r263;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f200, %f198, %f199;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r264, %f200;
	shfl.sync.bfly.b32	%r265, %r264, 2, 31, -1;
	mov.b32 	%f201, %r265;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f202, %f200, %f201;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r266, %f202;
	shfl.sync.bfly.b32	%r267, %r266, 1, 31, -1;
	mov.b32 	%f203, %r267;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f204, %f202, %f203;
$L__tmp4:
	.loc	1 61 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:61:20
	shl.b32 	%r268, %r176, 2;
	mov.u32 	%r269, global_smem;
	add.s32 	%r102, %r269, %r268;
	mov.b32 	%r103, %f174;
	mov.pred 	%p56, -1;
	// begin inline asm
	@%p56 st.shared.b32 [ %r102 + 0 ], %r103;
	// end inline asm
	add.s32 	%r104, %r102, 32;
	mov.b32 	%r105, %f184;
	// begin inline asm
	@%p56 st.shared.b32 [ %r104 + 0 ], %r105;
	// end inline asm
	add.s32 	%r106, %r102, 64;
	mov.b32 	%r107, %f194;
	// begin inline asm
	@%p56 st.shared.b32 [ %r106 + 0 ], %r107;
	// end inline asm
	add.s32 	%r108, %r102, 96;
	mov.b32 	%r109, %f204;
	// begin inline asm
	@%p56 st.shared.b32 [ %r108 + 0 ], %r109;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r270, %r177, 2;
	add.s32 	%r271, %r269, %r270;
	.loc	1 53 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:53:20
	ld.shared.u32 	%r111, [%r271];
	// begin inline asm
	div.full.f32 %r110, %r111, %r92;
	// end inline asm
	mov.b32 	%f205, %r110;
	// begin inline asm
	div.full.f32 %r113, %r103, %r92;
	// end inline asm
	mov.b32 	%f206, %r113;
	// begin inline asm
	div.full.f32 %r116, %r105, %r92;
	// end inline asm
	mov.b32 	%f207, %r116;
	// begin inline asm
	div.full.f32 %r119, %r107, %r92;
	// end inline asm
	mov.b32 	%f208, %r119;
	// begin inline asm
	div.full.f32 %r122, %r109, %r92;
	// end inline asm
	mov.b32 	%f209, %r122;
	.loc	1 55 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:55:20
	add.f32 	%f210, %f205, 0f358637BD;
	add.f32 	%f211, %f206, 0f358637BD;
	add.f32 	%f212, %f207, 0f358637BD;
	add.f32 	%f213, %f208, 0f358637BD;
	add.f32 	%f214, %f209, 0f358637BD;
	.loc	1 56 28                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:56:28
	rsqrt.approx.ftz.f32 	%f215, %f210;
	rsqrt.approx.ftz.f32 	%f216, %f211;
	rsqrt.approx.ftz.f32 	%f217, %f212;
	rsqrt.approx.ftz.f32 	%f218, %f213;
	rsqrt.approx.ftz.f32 	%f219, %f214;
	.loc	1 35 36                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:35:36
	mov.b32 	%f220, %r85;
	mov.b32 	%f221, %r84;
	mov.b32 	%f222, %r83;
	mov.b32 	%f223, %r82;
	.loc	1 34 36                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:34:36
	mov.b32 	%f224, %r77;
	mov.b32 	%f225, %r76;
	mov.b32 	%f226, %r75;
	mov.b32 	%f227, %r74;
	.loc	1 24 23                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:24:23
	or.b32  	%r272, %r174, %r177;
	.loc	1 25 21                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:25:21
	setp.lt.s32 	%p77, %r272, 1024;
	.loc	1 57 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:57:20
	mul.f32 	%f228, %f129, %f216;
	mul.f32 	%f229, %f130, %f216;
	mul.f32 	%f230, %f131, %f216;
	mul.f32 	%f231, %f132, %f216;
	mul.f32 	%f232, %f133, %f217;
	mul.f32 	%f233, %f134, %f217;
	mul.f32 	%f234, %f135, %f217;
	mul.f32 	%f235, %f136, %f217;
	mul.f32 	%f236, %f137, %f218;
	mul.f32 	%f237, %f138, %f218;
	mul.f32 	%f238, %f139, %f218;
	mul.f32 	%f239, %f140, %f218;
	mul.f32 	%f240, %f141, %f219;
	mul.f32 	%f241, %f142, %f219;
	mul.f32 	%f242, %f143, %f219;
	mul.f32 	%f243, %f144, %f219;
	.loc	1 59 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:59:20
	fma.rn.f32 	%f244, %f228, %f227, %f223;
	fma.rn.f32 	%f245, %f229, %f226, %f222;
	fma.rn.f32 	%f246, %f230, %f225, %f221;
	fma.rn.f32 	%f247, %f231, %f224, %f220;
	fma.rn.f32 	%f248, %f232, %f227, %f223;
	fma.rn.f32 	%f249, %f233, %f226, %f222;
	fma.rn.f32 	%f250, %f234, %f225, %f221;
	fma.rn.f32 	%f251, %f235, %f224, %f220;
	fma.rn.f32 	%f252, %f236, %f227, %f223;
	fma.rn.f32 	%f253, %f237, %f226, %f222;
	fma.rn.f32 	%f254, %f238, %f225, %f221;
	fma.rn.f32 	%f255, %f239, %f224, %f220;
	fma.rn.f32 	%f256, %f240, %f227, %f223;
	fma.rn.f32 	%f257, %f241, %f226, %f222;
	fma.rn.f32 	%f258, %f242, %f225, %f221;
	fma.rn.f32 	%f259, %f243, %f224, %f220;
	.loc	1 61 20                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:61:20
	mul.f32 	%f260, %f215, 0f3C2AAAAB;
	.loc	1 62 47                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:62:47
	mov.b32 	%r125, %f53;
	mov.b32 	%r126, %f54;
	mov.b32 	%r127, %f55;
	mov.b32 	%r128, %f56;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r125, %r126, %r127, %r128 };
	// end inline asm
	mov.b32 	%r129, %f57;
	mov.b32 	%r130, %f58;
	mov.b32 	%r131, %f59;
	mov.b32 	%r132, %f60;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd2 + 0 ], { %r129, %r130, %r131, %r132 };
	// end inline asm
	mov.b32 	%r133, %f61;
	mov.b32 	%r134, %f62;
	mov.b32 	%r135, %f63;
	mov.b32 	%r136, %f64;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r133, %r134, %r135, %r136 };
	// end inline asm
	mov.b32 	%r137, %f65;
	mov.b32 	%r138, %f66;
	mov.b32 	%r139, %f67;
	mov.b32 	%r140, %f68;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd4 + 0 ], { %r137, %r138, %r139, %r140 };
	// end inline asm
	.loc	1 63 25                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:63:25
	add.s64 	%rd16, %rd30, %rd33;
	add.s64 	%rd17, %rd30, %rd34;
	add.s64 	%rd18, %rd30, %rd35;
	add.s64 	%rd19, %rd30, %rd36;
	.loc	1 63 45                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:63:45
	mov.b32 	%r141, %f228;
	mov.b32 	%r142, %f229;
	mov.b32 	%r143, %f230;
	mov.b32 	%r144, %f231;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd16 + 0 ], { %r141, %r142, %r143, %r144 };
	// end inline asm
	mov.b32 	%r145, %f232;
	mov.b32 	%r146, %f233;
	mov.b32 	%r147, %f234;
	mov.b32 	%r148, %f235;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd17 + 0 ], { %r145, %r146, %r147, %r148 };
	// end inline asm
	mov.b32 	%r149, %f236;
	mov.b32 	%r150, %f237;
	mov.b32 	%r151, %f238;
	mov.b32 	%r152, %f239;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd18 + 0 ], { %r149, %r150, %r151, %r152 };
	// end inline asm
	mov.b32 	%r153, %f240;
	mov.b32 	%r154, %f241;
	mov.b32 	%r155, %f242;
	mov.b32 	%r156, %f243;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd19 + 0 ], { %r153, %r154, %r155, %r156 };
	// end inline asm
	.loc	1 64 25                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:64:25
	add.s64 	%rd20, %rd31, %rd33;
	add.s64 	%rd21, %rd31, %rd34;
	add.s64 	%rd22, %rd31, %rd35;
	add.s64 	%rd23, %rd31, %rd36;
	.loc	1 64 45                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:64:45
	mov.b32 	%r157, %f244;
	mov.b32 	%r158, %f245;
	mov.b32 	%r159, %f246;
	mov.b32 	%r160, %f247;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd20 + 0 ], { %r157, %r158, %r159, %r160 };
	// end inline asm
	mov.b32 	%r161, %f248;
	mov.b32 	%r162, %f249;
	mov.b32 	%r163, %f250;
	mov.b32 	%r164, %f251;
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd21 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, %f252;
	mov.b32 	%r166, %f253;
	mov.b32 	%r167, %f254;
	mov.b32 	%r168, %f255;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd22 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	mov.b32 	%r169, %f256;
	mov.b32 	%r170, %f257;
	mov.b32 	%r171, %f258;
	mov.b32 	%r172, %f259;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd23 + 0 ], { %r169, %r170, %r171, %r172 };
	// end inline asm
	.loc	1 65 25                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:65:25
	mul.wide.s32 	%rd38, %r272, 4;
	add.s64 	%rd24, %rd32, %rd38;
	.loc	1 65 37                         // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:65:37
	and.b32  	%r273, %r175, 224;
	setp.eq.s32 	%p78, %r273, 0;
	mov.b32 	%r173, %f260;
	and.pred  	%p72, %p78, %p77;
	// begin inline asm
	@%p72 st.global.b32 [ %rd24 + 0 ], { %r173 };
	// end inline asm
	.loc	1 65 4                          // c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py:65:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7d/c7dea26b4zzczuuaqlsgwhj7eloag26ymcuissvjp564xtccycgp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 237                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 100
.b8 101
.b8 97
.b8 50
.b8 54
.b8 98
.b8 52
.b8 122
.b8 122
.b8 99
.b8 122
.b8 117
.b8 117
.b8 97
.b8 113
.b8 108
.b8 115
.b8 103
.b8 119
.b8 104
.b8 106
.b8 55
.b8 101
.b8 108
.b8 111
.b8 97
.b8 103
.b8 50
.b8 54
.b8 121
.b8 109
.b8 99
.b8 117
.b8 105
.b8 115
.b8 115
.b8 118
.b8 106
.b8 112
.b8 53
.b8 54
.b8 52
.b8 120
.b8 116
.b8 99
.b8 99
.b8 121
.b8 99
.b8 103
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
