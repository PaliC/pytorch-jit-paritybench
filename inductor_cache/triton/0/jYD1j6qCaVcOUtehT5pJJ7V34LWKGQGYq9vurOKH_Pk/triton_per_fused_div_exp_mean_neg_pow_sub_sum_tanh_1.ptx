//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1 // -- Begin function triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1
.visible .entry triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_4,
	.param .u32 triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<94>;
	.reg .f32 	%f<191>;
	.reg .b64 	%rd<24>;
$L__func_begin0:

// %bb.0:
	.loc	1 26 34                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd18, [triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_1];
	.loc	1 30 32                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:30:32
	shl.b32 	%r28, %r1, 2;
	ld.param.u64 	%rd19, [triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_2];
	and.b32  	%r29, %r28, 252;
	ld.param.u64 	%rd20, [triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_3];
	ld.param.u64 	%rd21, [triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_4];
	.loc	1 30 30                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:30:30
	mul.wide.u32 	%rd22, %r29, 4;
	add.s64 	%rd2, %rd18, %rd22;
	mov.pred 	%p1, -1;
	.loc	1 30 37                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:30:37
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	.loc	1 31 30                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:31:30
	add.s64 	%rd3, %rd19, %rd22;
	.loc	1 31 37                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:31:37
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r13;
	.loc	1 32 30                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:32:30
	add.s64 	%rd4, %rd20, %rd22;
	.loc	1 32 37                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:32:37
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r14;
	.loc	1 33 30                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:33:30
	add.s64 	%rd5, %rd2, 4;
	.loc	1 33 41                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:33:41
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r15;
	.loc	1 34 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:34:31
	add.s64 	%rd6, %rd3, 4;
	.loc	1 34 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:34:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r16;
	.loc	1 35 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:35:31
	add.s64 	%rd7, %rd4, 4;
	.loc	1 35 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:35:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r17;
	.loc	1 36 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:36:31
	add.s64 	%rd8, %rd2, 8;
	.loc	1 36 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:36:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:37:31
	add.s64 	%rd9, %rd3, 8;
	.loc	1 37 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:37:42
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:38:31
	add.s64 	%rd10, %rd4, 8;
	.loc	1 38 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:38:42
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:39:31
	add.s64 	%rd11, %rd2, 12;
	.loc	1 39 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:39:42
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:40:31
	add.s64 	%rd12, %rd3, 12;
	.loc	1 40 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:40:42
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 41 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:41:31
	add.s64 	%rd13, %rd4, 12;
	.loc	1 41 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:41:42
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 42 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:42:31
	add.s64 	%rd14, %rd21, %rd22;
	.loc	1 42 38                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:42:38
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 43 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:43:31
	add.s64 	%rd15, %rd14, 4;
	.loc	1 43 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:43:42
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 44 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:44:31
	add.s64 	%rd16, %rd14, 8;
	.loc	1 44 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:44:42
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 45 31                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:45:31
	add.s64 	%rd17, %rd14, 12;
	.loc	1 45 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:45:42
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 46 18                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:46:18
	sub.f32 	%f36, %f1, %f35;
	.loc	1 48 12                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:48:12
	neg.f32 	%f37, %f36;
	fma.rn.f32 	%f10, %f37, %f36, 0f00000000;
	.loc	1 49 26                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:49:26
	abs.ftz.f32 	%f11, %f2;
	setp.ltu.f32 	%p17, %f11, 0f3F19999A;
	mov.f32 	%f170, 0f3F800000;
	mov.f32 	%f171, 0fC0000000;
	mov.f32 	%f182, 0fBD563CAE;
	mov.f32 	%f183, 0f3C80F082;
	mov.f32 	%f184, 0f3E085941;
	mov.f32 	%f185, 0fBEAAA9ED;
	mov.f32 	%f186, 0f00000000;
	@%p17 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f46, %f2, %f2;
	fma.rn.ftz.f32 	%f49, %f183, %f46, %f182;
	fma.rn.ftz.f32 	%f51, %f49, %f46, %f184;
	fma.rn.ftz.f32 	%f53, %f51, %f46, %f185;
	fma.rn.ftz.f32 	%f55, %f53, %f46, %f186;
	fma.rn.ftz.f32 	%f187, %f55, %f2, %f2;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f40, %f11, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f41, %f40;
	add.f32 	%f39, %f41, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f38,%f39;
	// end inline asm
	fma.rn.ftz.f32 	%f44, %f38, %f171, %f170;
	setp.ge.f32 	%p18, %f11, 0f41102CB4;
	selp.f32 	%f45, 0f3F800000, %f44, %p18;
	mov.b32 	%r30, %f45;
	and.b32  	%r31, %r14, -2147483648;
	or.b32  	%r32, %r31, %r30;
	mov.b32 	%f187, %r32;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:0:0
	mov.b32 	%f6, %r18;
	mov.b32 	%f7, %r19;
	mov.b32 	%f8, %r20;
	.loc	1 50 23                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:50:23
	mul.f32 	%f57, %f187, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f56, %f57;
	// end inline asm
	.loc	1 51 18                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:51:18
	mov.b32 	%r34, %f10;
	mov.b32 	%r35, %f56;
	.loc	1 52 19                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:52:19
	sub.f32 	%f58, %f3, %f4;
	.loc	1 54 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:54:13
	neg.f32 	%f59, %f58;
	fma.rn.f32 	%f17, %f59, %f58, 0f00000000;
	.loc	1 55 27                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:55:27
	abs.ftz.f32 	%f18, %f5;
	setp.ltu.f32 	%p19, %f18, 0f3F19999A;
	@%p19 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f68, %f5, %f5;
	fma.rn.ftz.f32 	%f71, %f183, %f68, %f182;
	fma.rn.ftz.f32 	%f73, %f71, %f68, %f184;
	fma.rn.ftz.f32 	%f75, %f73, %f68, %f185;
	fma.rn.ftz.f32 	%f77, %f75, %f68, %f186;
	fma.rn.ftz.f32 	%f188, %f77, %f5, %f5;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f62, %f18, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f63, %f62;
	add.f32 	%f61, %f63, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f60,%f61;
	// end inline asm
	fma.rn.ftz.f32 	%f66, %f60, %f171, %f170;
	setp.ge.f32 	%p20, %f18, 0f41102CB4;
	selp.f32 	%f67, 0f3F800000, %f66, %p20;
	mov.b32 	%r36, %f67;
	and.b32  	%r37, %r17, -2147483648;
	or.b32  	%r38, %r37, %r36;
	mov.b32 	%f188, %r38;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 0                           // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:0:0
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f9, %r23;
	.loc	1 56 24                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:56:24
	mul.f32 	%f79, %f188, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f78, %f79;
	// end inline asm
	.loc	1 57 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:57:20
	mov.b32 	%r40, %f17;
	mov.b32 	%r41, %f78;
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	.loc	1 59 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:59:20
	sub.f32 	%f80, %f6, %f7;
	.loc	1 61 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:61:13
	neg.f32 	%f81, %f80;
	fma.rn.f32 	%f24, %f81, %f80, 0f00000000;
	.loc	1 62 27                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:62:27
	abs.ftz.f32 	%f25, %f8;
	setp.ltu.f32 	%p21, %f25, 0f3F19999A;
	@%p21 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f90, %f8, %f8;
	fma.rn.ftz.f32 	%f93, %f183, %f90, %f182;
	fma.rn.ftz.f32 	%f95, %f93, %f90, %f184;
	fma.rn.ftz.f32 	%f97, %f95, %f90, %f185;
	fma.rn.ftz.f32 	%f99, %f97, %f90, %f186;
	fma.rn.ftz.f32 	%f189, %f99, %f8, %f8;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f84, %f25, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f85, %f84;
	add.f32 	%f83, %f85, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f82,%f83;
	// end inline asm
	fma.rn.ftz.f32 	%f88, %f82, %f171, %f170;
	setp.ge.f32 	%p22, %f25, 0f41102CB4;
	selp.f32 	%f89, 0f3F800000, %f88, %p22;
	mov.b32 	%r42, %f89;
	and.b32  	%r43, %r20, -2147483648;
	or.b32  	%r44, %r43, %r42;
	mov.b32 	%f189, %r44;
$L__BB0_9:                              // %__nv_tanhf.exit38
	.loc	1 0 27                          // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:0:27
	ld.param.u64 	%rd23, [triton_per_fused_div_exp_mean_neg_pow_sub_sum_tanh_1_param_0];
	mov.b32 	%f16, %r33;
	mov.b32 	%f23, %r39;
	.loc	1 63 24                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:63:24
	mul.f32 	%f101, %f189, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f100, %f101;
	// end inline asm
	.loc	1 64 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:64:20
	mov.b32 	%r46, %f24;
	mov.b32 	%r47, %f100;
	// begin inline asm
	div.full.f32 %r45, %r46, %r47;
	// end inline asm
	mov.b32 	%f30, %r45;
	.loc	1 69 27                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:69:27
	abs.ftz.f32 	%f31, %f9;
	setp.ltu.f32 	%p23, %f31, 0f3F19999A;
	@%p23 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f110, %f9, %f9;
	fma.rn.ftz.f32 	%f113, %f183, %f110, %f182;
	fma.rn.ftz.f32 	%f115, %f113, %f110, %f184;
	fma.rn.ftz.f32 	%f117, %f115, %f110, %f185;
	fma.rn.ftz.f32 	%f119, %f117, %f110, %f186;
	fma.rn.ftz.f32 	%f190, %f119, %f9, %f9;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	mul.f32 	%f104, %f31, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f105, %f104;
	add.f32 	%f103, %f105, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f102,%f103;
	// end inline asm
	fma.rn.ftz.f32 	%f108, %f102, %f171, %f170;
	setp.ge.f32 	%p24, %f31, 0f41102CB4;
	selp.f32 	%f109, 0f3F800000, %f108, %p24;
	mov.b32 	%r48, %f109;
	and.b32  	%r49, %r23, -2147483648;
	or.b32  	%r50, %r49, %r48;
	mov.b32 	%f190, %r50;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 39 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:39:42
	mov.b32 	%f122, %r21;
	.loc	1 40 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:40:42
	mov.b32 	%f123, %r22;
	.loc	1 66 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:66:20
	sub.f32 	%f124, %f122, %f123;
	.loc	1 68 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:68:13
	neg.f32 	%f125, %f124;
	fma.rn.f32 	%f126, %f125, %f124, 0f00000000;
	.loc	1 45 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:45:42
	mov.b32 	%f127, %r27;
	.loc	1 44 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:44:42
	mov.b32 	%f128, %r26;
	.loc	1 43 42                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:43:42
	mov.b32 	%f129, %r25;
	.loc	1 42 38                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:42:38
	mov.b32 	%f130, %r24;
	.loc	1 26 34                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:26:34
	and.b32  	%r76, %r1, 31;
	.loc	1 70 24                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:70:24
	mul.f32 	%f121, %f190, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f120, %f121;
	// end inline asm
	.loc	1 71 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:71:20
	mov.b32 	%r52, %f126;
	mov.b32 	%r53, %f120;
	// begin inline asm
	div.full.f32 %r51, %r52, %r53;
	// end inline asm
	mov.b32 	%f131, %r51;
	.loc	1 73 19                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:73:19
	sub.f32 	%f132, %f1, %f130;
	.loc	1 75 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:75:13
	neg.f32 	%f133, %f132;
	fma.rn.f32 	%f134, %f133, %f132, 0f00000000;
	.loc	1 76 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:76:20
	mov.b32 	%r55, %f134;
	// begin inline asm
	div.full.f32 %r54, %r55, %r35;
	// end inline asm
	mov.b32 	%f135, %r54;
	.loc	1 77 19                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:77:19
	sub.f32 	%f136, %f3, %f129;
	.loc	1 79 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:79:13
	neg.f32 	%f137, %f136;
	fma.rn.f32 	%f138, %f137, %f136, 0f00000000;
	.loc	1 80 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:80:20
	mov.b32 	%r58, %f138;
	// begin inline asm
	div.full.f32 %r57, %r58, %r41;
	// end inline asm
	mov.b32 	%f139, %r57;
	.loc	1 82 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:82:20
	sub.f32 	%f140, %f6, %f128;
	.loc	1 84 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:84:13
	neg.f32 	%f141, %f140;
	fma.rn.f32 	%f142, %f141, %f140, 0f00000000;
	.loc	1 85 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:85:20
	mov.b32 	%r61, %f142;
	// begin inline asm
	div.full.f32 %r60, %r61, %r47;
	// end inline asm
	mov.b32 	%f143, %r60;
	.loc	1 87 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:87:20
	sub.f32 	%f144, %f122, %f127;
	.loc	1 89 13                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:89:13
	neg.f32 	%f145, %f144;
	fma.rn.f32 	%f146, %f145, %f144, 0f00000000;
	.loc	1 90 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:90:20
	mov.b32 	%r64, %f146;
	// begin inline asm
	div.full.f32 %r63, %r64, %r53;
	// end inline asm
	mov.b32 	%f147, %r63;
	.loc	1 58 19                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:58:19
	add.f32 	%f148, %f135, %f139;
	add.f32 	%f149, %f16, %f23;
	.loc	1 65 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:65:20
	add.f32 	%f150, %f148, %f143;
	add.f32 	%f151, %f149, %f30;
	.loc	1 72 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:72:20
	add.f32 	%f152, %f150, %f147;
	add.f32 	%f153, %f151, %f131;
	.loc	1 92 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:92:20
	sub.f32 	%f154, %f153, %f152;
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f154;
	shfl.sync.bfly.b32	%r78, %r77, 16, 31, -1;
	mov.b32 	%f155, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f156;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f157, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f158;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f159, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f160, %f158, %f159;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f160;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f161, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f160, %f161;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f162;
	shfl.sync.bfly.b32	%r86, %r85, 1, 31, -1;
	mov.b32 	%f163, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f164, %f162, %f163;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p25, %r76, 0;
	shr.u32 	%r87, %r1, 3;
	and.b32  	%r88, %r87, 4;
	mov.u32 	%r89, global_smem;
	add.s32 	%r66, %r89, %r88;
	mov.b32 	%r67, %f164;
	// begin inline asm
	@%p25 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r1, 2;
	add.s32 	%r69, %r89, %r28;
	// begin inline asm
	@%p26 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f165, %r68;
	shfl.sync.bfly.b32	%r91, %r68, 1, 31, -1;
	mov.b32 	%f166, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r92, %r1, 1;
	setp.eq.b32 	%p29, %r92, 1;
	not.pred 	%p30, %p29;
	and.pred  	%p27, %p26, %p30;
	mov.b32 	%r71, %f167;
	// begin inline asm
	@%p27 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 96 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:96:20
	ld.shared.u32 	%r73, [global_smem];
	mov.b32 	%r74, 1115684864;
	// begin inline asm
	div.full.f32 %r72, %r73, %r74;
	// end inline asm
	mov.b32 	%f168, %r72;
	.loc	1 98 20                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:98:20
	mul.f32 	%f169, %f168, 0f3F000000;
	.loc	1 99 4                          // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:99:4
	bar.sync 	0;
	.loc	1 100 71                        // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:100:71
	and.b32  	%r93, %r1, 63;
	setp.eq.s32 	%p28, %r93, 0;
	mov.b32 	%r75, %f169;
	// begin inline asm
	@%p28 st.global.b32 [ %rd23 + 0 ], { %r75 };
	// end inline asm
	.loc	1 100 4                         // cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py:100:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gl/cglrkfeiqad3ujtq4uoa3wylbw7fhy6kf7t2nzx7xegsxjkkkam2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 197                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbe DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 108
.b8 114
.b8 107
.b8 102
.b8 101
.b8 105
.b8 113
.b8 97
.b8 100
.b8 51
.b8 117
.b8 106
.b8 116
.b8 113
.b8 52
.b8 117
.b8 111
.b8 97
.b8 51
.b8 119
.b8 121
.b8 108
.b8 98
.b8 119
.b8 55
.b8 102
.b8 104
.b8 121
.b8 54
.b8 107
.b8 102
.b8 55
.b8 116
.b8 50
.b8 110
.b8 122
.b8 120
.b8 55
.b8 120
.b8 101
.b8 103
.b8 115
.b8 120
.b8 106
.b8 107
.b8 107
.b8 107
.b8 97
.b8 109
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x37 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 116
.b8 97
.b8 110
.b8 104
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9a:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 94                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
