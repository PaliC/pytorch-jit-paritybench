#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_constant_pad_nd_max_pool2d_with_indices_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<144> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<9> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<-1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<5> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-10> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<-5> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<-6> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<-8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<-9> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_2 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_2 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_3 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = arith.muli %7, %cst_4 : tensor<256xi32, #blocked> loc(#loc11)
    %11 = arith.addi %10, %cst_5 : tensor<256xi32, #blocked> loc(#loc12)
    %12 = arith.extsi %11 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc13)
    %13 = arith.cmpi sge, %12, %cst_6 : tensor<256xi64, #blocked> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_7 : tensor<256xi64, #blocked> loc(#loc14)
    %15 = arith.andi %13, %14 : tensor<256xi1, #blocked> loc(#loc15)
    %16 = arith.muli %8, %cst_4 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %cst_5 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = arith.extsi %17 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc18)
    %19 = arith.cmpi sge, %18, %cst_6 : tensor<256xi64, #blocked> loc(#loc18)
    %20 = arith.cmpi slt, %18, %cst_7 : tensor<256xi64, #blocked> loc(#loc19)
    %21 = arith.andi %19, %20 : tensor<256xi1, #blocked> loc(#loc20)
    %22 = arith.andi %15, %21 : tensor<256xi1, #blocked> loc(#loc21)
    %23 = arith.addi %10, %cst_8 : tensor<256xi32, #blocked> loc(#loc22)
    %24 = arith.extsi %23 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc23)
    %25 = arith.cmpi sge, %24, %cst_6 : tensor<256xi64, #blocked> loc(#loc23)
    %26 = arith.addi %16, %cst_8 : tensor<256xi32, #blocked> loc(#loc24)
    %27 = arith.extsi %26 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc25)
    %28 = arith.cmpi sge, %27, %cst_6 : tensor<256xi64, #blocked> loc(#loc25)
    %29 = arith.andi %25, %28 : tensor<256xi1, #blocked> loc(#loc26)
    %30 = arith.andi %29, %22 : tensor<256xi1, #blocked> loc(#loc27)
    %31 = arith.addi %16, %cst_9 : tensor<256xi32, #blocked> loc(#loc28)
    %32 = arith.muli %7, %cst_10 : tensor<256xi32, #blocked> loc(#loc29)
    %33 = arith.addi %31, %32 : tensor<256xi32, #blocked> loc(#loc30)
    %34 = arith.muli %9, %cst_11 : tensor<256xi32, #blocked> loc(#loc31)
    %35 = arith.addi %33, %34 : tensor<256xi32, #blocked> loc(#loc32)
    %36 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc33)
    %37 = tt.addptr %36, %35 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc33)
    %38 = arith.andi %30, %5 : tensor<256xi1, #blocked> loc(#loc34)
    %39 = tt.load %37, %38, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %40 = arith.select %22, %39, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc36)
    %41 = arith.extsi %16 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc37)
    %42 = arith.cmpi sge, %41, %cst_6 : tensor<256xi64, #blocked> loc(#loc37)
    %43 = arith.cmpi slt, %41, %cst_7 : tensor<256xi64, #blocked> loc(#loc38)
    %44 = arith.andi %42, %43 : tensor<256xi1, #blocked> loc(#loc39)
    %45 = arith.andi %15, %44 : tensor<256xi1, #blocked> loc(#loc40)
    %46 = arith.andi %25, %19 : tensor<256xi1, #blocked> loc(#loc41)
    %47 = arith.andi %46, %45 : tensor<256xi1, #blocked> loc(#loc42)
    %48 = arith.addi %16, %cst_17 : tensor<256xi32, #blocked> loc(#loc43)
    %49 = arith.addi %48, %32 : tensor<256xi32, #blocked> loc(#loc44)
    %50 = arith.addi %49, %34 : tensor<256xi32, #blocked> loc(#loc45)
    %51 = tt.addptr %36, %50 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc46)
    %52 = arith.andi %47, %5 : tensor<256xi1, #blocked> loc(#loc47)
    %53 = tt.load %51, %52, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc48)
    %54 = arith.select %45, %53, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc49)
    %55 = arith.cmpf ogt, %54, %40 : tensor<256xf32, #blocked> loc(#loc143)
    %56 = arith.cmpf une, %54, %54 : tensor<256xf32, #blocked> loc(#loc144)
    %57 = arith.ori %55, %56 : tensor<256xi1, #blocked> loc(#loc145)
    %58 = arith.select %57, %54, %40 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc146)
    %59 = arith.addi %16, %cst_16 : tensor<256xi32, #blocked> loc(#loc55)
    %60 = arith.extsi %59 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc56)
    %61 = arith.cmpi sge, %60, %cst_6 : tensor<256xi64, #blocked> loc(#loc56)
    %62 = arith.cmpi slt, %60, %cst_7 : tensor<256xi64, #blocked> loc(#loc57)
    %63 = arith.andi %61, %62 : tensor<256xi1, #blocked> loc(#loc58)
    %64 = arith.andi %15, %63 : tensor<256xi1, #blocked> loc(#loc59)
    %65 = arith.andi %25, %42 : tensor<256xi1, #blocked> loc(#loc60)
    %66 = arith.andi %65, %64 : tensor<256xi1, #blocked> loc(#loc61)
    %67 = arith.addi %16, %cst_15 : tensor<256xi32, #blocked> loc(#loc62)
    %68 = arith.addi %67, %32 : tensor<256xi32, #blocked> loc(#loc63)
    %69 = arith.addi %68, %34 : tensor<256xi32, #blocked> loc(#loc64)
    %70 = tt.addptr %36, %69 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc65)
    %71 = arith.andi %66, %5 : tensor<256xi1, #blocked> loc(#loc66)
    %72 = tt.load %70, %71, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc67)
    %73 = arith.select %64, %72, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc68)
    %74 = arith.cmpf ogt, %73, %58 : tensor<256xf32, #blocked> loc(#loc147)
    %75 = arith.cmpf une, %73, %73 : tensor<256xf32, #blocked> loc(#loc148)
    %76 = arith.ori %74, %75 : tensor<256xi1, #blocked> loc(#loc149)
    %77 = arith.select %76, %73, %58 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc150)
    %78 = arith.extsi %10 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc70)
    %79 = arith.cmpi sge, %78, %cst_6 : tensor<256xi64, #blocked> loc(#loc70)
    %80 = arith.cmpi slt, %78, %cst_7 : tensor<256xi64, #blocked> loc(#loc71)
    %81 = arith.andi %79, %80 : tensor<256xi1, #blocked> loc(#loc72)
    %82 = arith.andi %81, %21 : tensor<256xi1, #blocked> loc(#loc73)
    %83 = arith.andi %13, %28 : tensor<256xi1, #blocked> loc(#loc74)
    %84 = arith.andi %83, %82 : tensor<256xi1, #blocked> loc(#loc75)
    %85 = arith.addi %16, %cst_14 : tensor<256xi32, #blocked> loc(#loc76)
    %86 = arith.addi %85, %32 : tensor<256xi32, #blocked> loc(#loc77)
    %87 = arith.addi %86, %34 : tensor<256xi32, #blocked> loc(#loc78)
    %88 = tt.addptr %36, %87 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc79)
    %89 = arith.andi %84, %5 : tensor<256xi1, #blocked> loc(#loc80)
    %90 = tt.load %88, %89, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc81)
    %91 = arith.select %82, %90, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc82)
    %92 = arith.cmpf ogt, %91, %77 : tensor<256xf32, #blocked> loc(#loc151)
    %93 = arith.cmpf une, %91, %91 : tensor<256xf32, #blocked> loc(#loc152)
    %94 = arith.ori %92, %93 : tensor<256xi1, #blocked> loc(#loc153)
    %95 = arith.select %94, %91, %77 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc154)
    %96 = arith.andi %81, %44 : tensor<256xi1, #blocked> loc(#loc84)
    %97 = arith.andi %13, %19 : tensor<256xi1, #blocked> loc(#loc85)
    %98 = arith.andi %97, %96 : tensor<256xi1, #blocked> loc(#loc86)
    %99 = arith.addi %16, %cst_13 : tensor<256xi32, #blocked> loc(#loc87)
    %100 = arith.addi %99, %32 : tensor<256xi32, #blocked> loc(#loc88)
    %101 = arith.addi %100, %34 : tensor<256xi32, #blocked> loc(#loc89)
    %102 = tt.addptr %36, %101 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc90)
    %103 = arith.andi %98, %5 : tensor<256xi1, #blocked> loc(#loc91)
    %104 = tt.load %102, %103, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc92)
    %105 = arith.select %96, %104, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc93)
    %106 = arith.cmpf ogt, %105, %95 : tensor<256xf32, #blocked> loc(#loc155)
    %107 = arith.cmpf une, %105, %105 : tensor<256xf32, #blocked> loc(#loc156)
    %108 = arith.ori %106, %107 : tensor<256xi1, #blocked> loc(#loc157)
    %109 = arith.select %108, %105, %95 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc158)
    %110 = arith.andi %81, %63 : tensor<256xi1, #blocked> loc(#loc95)
    %111 = arith.andi %13, %42 : tensor<256xi1, #blocked> loc(#loc96)
    %112 = arith.andi %111, %110 : tensor<256xi1, #blocked> loc(#loc97)
    %113 = arith.addi %16, %cst_12 : tensor<256xi32, #blocked> loc(#loc98)
    %114 = arith.addi %113, %32 : tensor<256xi32, #blocked> loc(#loc99)
    %115 = arith.addi %114, %34 : tensor<256xi32, #blocked> loc(#loc100)
    %116 = tt.addptr %36, %115 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc101)
    %117 = arith.andi %112, %5 : tensor<256xi1, #blocked> loc(#loc102)
    %118 = tt.load %116, %117, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc103)
    %119 = arith.select %110, %118, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc104)
    %120 = arith.cmpf ogt, %119, %109 : tensor<256xf32, #blocked> loc(#loc159)
    %121 = arith.cmpf une, %119, %119 : tensor<256xf32, #blocked> loc(#loc160)
    %122 = arith.ori %120, %121 : tensor<256xi1, #blocked> loc(#loc161)
    %123 = arith.select %122, %119, %109 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc162)
    %124 = arith.addi %10, %cst_16 : tensor<256xi32, #blocked> loc(#loc106)
    %125 = arith.extsi %124 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc107)
    %126 = arith.cmpi sge, %125, %cst_6 : tensor<256xi64, #blocked> loc(#loc107)
    %127 = arith.cmpi slt, %125, %cst_7 : tensor<256xi64, #blocked> loc(#loc108)
    %128 = arith.andi %126, %127 : tensor<256xi1, #blocked> loc(#loc109)
    %129 = arith.andi %128, %21 : tensor<256xi1, #blocked> loc(#loc110)
    %130 = arith.andi %79, %28 : tensor<256xi1, #blocked> loc(#loc111)
    %131 = arith.andi %130, %129 : tensor<256xi1, #blocked> loc(#loc112)
    %132 = arith.addi %26, %32 : tensor<256xi32, #blocked> loc(#loc113)
    %133 = arith.addi %132, %34 : tensor<256xi32, #blocked> loc(#loc114)
    %134 = tt.addptr %36, %133 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc115)
    %135 = arith.andi %131, %5 : tensor<256xi1, #blocked> loc(#loc116)
    %136 = tt.load %134, %135, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc117)
    %137 = arith.select %129, %136, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc118)
    %138 = arith.cmpf ogt, %137, %123 : tensor<256xf32, #blocked> loc(#loc163)
    %139 = arith.cmpf une, %137, %137 : tensor<256xf32, #blocked> loc(#loc164)
    %140 = arith.ori %138, %139 : tensor<256xi1, #blocked> loc(#loc165)
    %141 = arith.select %140, %137, %123 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc166)
    %142 = arith.andi %128, %44 : tensor<256xi1, #blocked> loc(#loc120)
    %143 = arith.andi %79, %19 : tensor<256xi1, #blocked> loc(#loc121)
    %144 = arith.andi %143, %142 : tensor<256xi1, #blocked> loc(#loc122)
    %145 = arith.addi %17, %32 : tensor<256xi32, #blocked> loc(#loc123)
    %146 = arith.addi %145, %34 : tensor<256xi32, #blocked> loc(#loc124)
    %147 = tt.addptr %36, %146 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc125)
    %148 = arith.andi %144, %5 : tensor<256xi1, #blocked> loc(#loc126)
    %149 = tt.load %147, %148, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc127)
    %150 = arith.select %142, %149, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc128)
    %151 = arith.cmpf ogt, %150, %141 : tensor<256xf32, #blocked> loc(#loc167)
    %152 = arith.cmpf une, %150, %150 : tensor<256xf32, #blocked> loc(#loc168)
    %153 = arith.ori %151, %152 : tensor<256xi1, #blocked> loc(#loc169)
    %154 = arith.select %153, %150, %141 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc170)
    %155 = arith.andi %128, %63 : tensor<256xi1, #blocked> loc(#loc130)
    %156 = arith.andi %79, %42 : tensor<256xi1, #blocked> loc(#loc131)
    %157 = arith.andi %156, %155 : tensor<256xi1, #blocked> loc(#loc132)
    %158 = arith.addi %16, %32 : tensor<256xi32, #blocked> loc(#loc133)
    %159 = arith.addi %158, %34 : tensor<256xi32, #blocked> loc(#loc134)
    %160 = tt.addptr %36, %159 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc135)
    %161 = arith.andi %157, %5 : tensor<256xi1, #blocked> loc(#loc136)
    %162 = tt.load %160, %161, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc137)
    %163 = arith.select %155, %162, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc138)
    %164 = arith.cmpf ogt, %163, %154 : tensor<256xf32, #blocked> loc(#loc171)
    %165 = arith.cmpf une, %163, %163 : tensor<256xf32, #blocked> loc(#loc172)
    %166 = arith.ori %164, %165 : tensor<256xi1, #blocked> loc(#loc173)
    %167 = arith.select %166, %163, %154 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc174)
    %168 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc140)
    %169 = tt.addptr %168, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc140)
    tt.store %169, %167, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc141)
    tt.return loc(#loc142)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":21:28)
#loc3 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":21:33)
#loc4 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":22:36)
#loc5 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":22:23)
#loc6 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":23:21)
#loc7 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":24:21)
#loc8 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":24:26)
#loc9 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":25:19)
#loc10 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":26:19)
#loc11 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":28:20)
#loc12 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":28:18)
#loc13 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":30:19)
#loc14 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":32:18)
#loc15 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":33:18)
#loc16 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":34:20)
#loc17 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":34:18)
#loc18 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":35:19)
#loc19 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":36:18)
#loc20 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":37:18)
#loc21 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":38:19)
#loc22 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":39:19)
#loc23 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":41:21)
#loc24 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":42:19)
#loc25 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":43:21)
#loc26 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":44:20)
#loc27 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":45:20)
#loc28 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:39)
#loc29 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:48)
#loc30 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:46)
#loc31 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:56)
#loc32 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:53)
#loc33 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:31)
#loc34 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:69)
#loc35 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":46:61)
#loc36 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":48:35)
#loc37 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":50:21)
#loc38 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":51:20)
#loc39 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":52:20)
#loc40 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":53:19)
#loc41 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":59:20)
#loc42 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":60:20)
#loc43 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:38)
#loc44 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:45)
#loc45 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:52)
#loc46 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:31)
#loc47 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:68)
#loc48 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":61:60)
#loc49 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":63:35)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc51 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":64:42)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc55 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":65:16)
#loc56 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":66:21)
#loc57 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":67:20)
#loc58 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":68:20)
#loc59 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":69:19)
#loc60 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":75:20)
#loc61 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":76:20)
#loc62 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:38)
#loc63 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:45)
#loc64 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:52)
#loc65 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:31)
#loc66 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:68)
#loc67 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":77:60)
#loc68 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":79:35)
#loc69 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":80:42)
#loc70 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":82:21)
#loc71 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":83:20)
#loc72 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":84:20)
#loc73 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":85:20)
#loc74 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":91:20)
#loc75 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":92:20)
#loc76 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:38)
#loc77 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:45)
#loc78 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:52)
#loc79 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:31)
#loc80 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:68)
#loc81 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":93:60)
#loc82 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":95:35)
#loc83 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":96:42)
#loc84 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":97:20)
#loc85 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":103:20)
#loc86 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":104:20)
#loc87 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:38)
#loc88 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:45)
#loc89 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:52)
#loc90 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:31)
#loc91 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:68)
#loc92 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":105:60)
#loc93 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":107:35)
#loc94 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":108:42)
#loc95 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":109:20)
#loc96 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":115:20)
#loc97 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":116:20)
#loc98 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:38)
#loc99 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:45)
#loc100 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:52)
#loc101 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:31)
#loc102 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:68)
#loc103 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":117:60)
#loc104 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":119:35)
#loc105 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":120:42)
#loc106 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":121:16)
#loc107 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":122:21)
#loc108 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":123:20)
#loc109 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":124:20)
#loc110 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":125:20)
#loc111 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":131:22)
#loc112 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":132:22)
#loc113 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":133:46)
#loc114 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":133:53)
#loc115 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":133:32)
#loc116 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":133:70)
#loc117 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":133:61)
#loc118 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":135:37)
#loc119 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":136:44)
#loc120 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":137:21)
#loc121 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":143:22)
#loc122 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":144:22)
#loc123 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":145:46)
#loc124 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":145:53)
#loc125 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":145:32)
#loc126 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":145:70)
#loc127 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":145:61)
#loc128 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":147:38)
#loc129 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":148:44)
#loc130 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":149:21)
#loc131 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":155:22)
#loc132 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":156:22)
#loc133 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":157:39)
#loc134 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":157:46)
#loc135 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":157:32)
#loc136 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":157:63)
#loc137 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":157:54)
#loc138 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":159:38)
#loc139 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":160:44)
#loc140 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":161:25)
#loc141 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":161:38)
#loc142 = loc("inductor_cache/yx/cyx4udwwas2dyrjvfkx3mawczgsutaoopvpavitr7hbcigmzc5ft.py":161:4)
#loc143 = loc(callsite(#loc50 at #loc51))
#loc144 = loc(callsite(#loc52 at #loc51))
#loc145 = loc(callsite(#loc53 at #loc51))
#loc146 = loc(callsite(#loc54 at #loc51))
#loc147 = loc(callsite(#loc50 at #loc69))
#loc148 = loc(callsite(#loc52 at #loc69))
#loc149 = loc(callsite(#loc53 at #loc69))
#loc150 = loc(callsite(#loc54 at #loc69))
#loc151 = loc(callsite(#loc50 at #loc83))
#loc152 = loc(callsite(#loc52 at #loc83))
#loc153 = loc(callsite(#loc53 at #loc83))
#loc154 = loc(callsite(#loc54 at #loc83))
#loc155 = loc(callsite(#loc50 at #loc94))
#loc156 = loc(callsite(#loc52 at #loc94))
#loc157 = loc(callsite(#loc53 at #loc94))
#loc158 = loc(callsite(#loc54 at #loc94))
#loc159 = loc(callsite(#loc50 at #loc105))
#loc160 = loc(callsite(#loc52 at #loc105))
#loc161 = loc(callsite(#loc53 at #loc105))
#loc162 = loc(callsite(#loc54 at #loc105))
#loc163 = loc(callsite(#loc50 at #loc119))
#loc164 = loc(callsite(#loc52 at #loc119))
#loc165 = loc(callsite(#loc53 at #loc119))
#loc166 = loc(callsite(#loc54 at #loc119))
#loc167 = loc(callsite(#loc50 at #loc129))
#loc168 = loc(callsite(#loc52 at #loc129))
#loc169 = loc(callsite(#loc53 at #loc129))
#loc170 = loc(callsite(#loc54 at #loc129))
#loc171 = loc(callsite(#loc50 at #loc139))
#loc172 = loc(callsite(#loc52 at #loc139))
#loc173 = loc(callsite(#loc53 at #loc139))
#loc174 = loc(callsite(#loc54 at #loc139))
