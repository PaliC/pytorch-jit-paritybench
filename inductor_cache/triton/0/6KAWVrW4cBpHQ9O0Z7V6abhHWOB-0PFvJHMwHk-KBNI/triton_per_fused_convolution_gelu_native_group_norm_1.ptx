//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_gelu_native_group_norm_1 // -- Begin function triton_per_fused_convolution_gelu_native_group_norm_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_gelu_native_group_norm_1
.visible .entry triton_per_fused_convolution_gelu_native_group_norm_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_gelu_native_group_norm_1_param_6,
	.param .u32 triton_per_fused_convolution_gelu_native_group_norm_1_param_7,
	.param .u32 triton_per_fused_convolution_gelu_native_group_norm_1_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<110>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd12, [triton_per_fused_convolution_gelu_native_group_norm_1_param_0];
$L__tmp0:
	.loc	1 23 28                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:23:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:25:21
	setp.lt.s32 	%p1, %r3, 4;
	.loc	1 26 34                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:26:34
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused_convolution_gelu_native_group_norm_1_param_3];
	and.b32  	%r24, %r2, 15;
	ld.param.u64 	%rd14, [triton_per_fused_convolution_gelu_native_group_norm_1_param_4];
	ld.param.u64 	%rd15, [triton_per_fused_convolution_gelu_native_group_norm_1_param_5];
	.loc	1 32 42                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:32:42
	shl.b32 	%r25, %r3, 4;
	.loc	1 32 39                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:32:39
	or.b32  	%r26, %r25, %r24;
	.loc	1 32 34                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:32:34
	mul.wide.s32 	%rd16, %r26, 4;
	add.s64 	%rd18, %rd12, %rd16;
	mov.b32 	%r5, 0;
	.loc	1 32 47                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:32:47
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd18 + 0 ];
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f26, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd18 + 0 ];
	@!%p1 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f27, %r6;
	.loc	1 33 30                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:33:30
	and.b32  	%r27, %r2, 12;
	cvt.u64.u32 	%rd17, %r27;
	add.s64 	%rd8, %rd13, %rd17;
	mov.pred 	%p5, -1;
	.loc	1 33 35                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:33:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r9;
	.loc	1 34 31                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:34:31
	add.s64 	%rd10, %rd14, %rd17;
	.loc	1 34 36                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:34:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r10;
	.loc	1 35 31                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:35:31
	add.s64 	%rd11, %rd15, %rd17;
	.loc	1 35 36                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:35:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r11 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r11;
	.loc	1 36 18                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:36:18
	add.f32 	%f1, %f26, %f28;
	add.f32 	%f32, %f27, %f29;
	.loc	1 40 33                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:40:33
	selp.f32 	%f33, %f1, 0f00000000, %p1;
	selp.f32 	%f34, %f32, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f33;
	shfl.sync.bfly.b32	%r29, %r28, 8, 31, -1;
	mov.b32 	%f35, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f33, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f36;
	shfl.sync.bfly.b32	%r31, %r30, 4, 31, -1;
	mov.b32 	%f37, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f38;
	shfl.sync.bfly.b32	%r33, %r32, 2, 31, -1;
	mov.b32 	%f39, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f40;
	shfl.sync.bfly.b32	%r35, %r34, 1, 31, -1;
	mov.b32 	%f41, %r35;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f34;
	shfl.sync.bfly.b32	%r37, %r36, 8, 31, -1;
	mov.b32 	%f43, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f34, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f44;
	shfl.sync.bfly.b32	%r39, %r38, 4, 31, -1;
	mov.b32 	%f45, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f46;
	shfl.sync.bfly.b32	%r41, %r40, 2, 31, -1;
	mov.b32 	%f47, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f48;
	shfl.sync.bfly.b32	%r43, %r42, 1, 31, -1;
	mov.b32 	%f49, %r43;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
$L__tmp2:
	.loc	1 44 19                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:44:19
	mov.b32 	%r13, %f42;
	mov.b32 	%r14, 1098907648;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f51, %r12;
	mov.b32 	%r16, %f50;
	// begin inline asm
	div.full.f32 %r70, %r16, %r14;
	// end inline asm
	mov.b32 	%f2, %r70;
	.loc	1 45 19                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:45:19
	sub.f32 	%f52, %f1, %f51;
	sub.f32 	%f53, %f32, %f2;
	.loc	1 46 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:46:20
	mul.f32 	%f54, %f52, %f52;
	mul.f32 	%f55, %f53, %f53;
	.loc	1 48 35                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:48:35
	selp.f32 	%f56, %f54, 0f00000000, %p1;
	selp.f32 	%f57, %f55, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f56;
	shfl.sync.bfly.b32	%r45, %r44, 8, 31, -1;
	mov.b32 	%f58, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f56, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f59;
	shfl.sync.bfly.b32	%r47, %r46, 4, 31, -1;
	mov.b32 	%f60, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f61;
	shfl.sync.bfly.b32	%r49, %r48, 2, 31, -1;
	mov.b32 	%f62, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f63;
	shfl.sync.bfly.b32	%r51, %r50, 1, 31, -1;
	mov.b32 	%f64, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f57;
	shfl.sync.bfly.b32	%r53, %r52, 8, 31, -1;
	mov.b32 	%f66, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f57, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f67;
	shfl.sync.bfly.b32	%r55, %r54, 4, 31, -1;
	mov.b32 	%f68, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f69;
	shfl.sync.bfly.b32	%r57, %r56, 2, 31, -1;
	mov.b32 	%f70, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f71;
	shfl.sync.bfly.b32	%r59, %r58, 1, 31, -1;
	mov.b32 	%f72, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
$L__tmp4:
	.loc	1 51 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:51:20
	mov.b32 	%r19, %f65;
	// begin inline asm
	div.full.f32 %r18, %r19, %r14;
	// end inline asm
	mov.b32 	%f74, %r18;
	mov.b32 	%r22, %f73;
	// begin inline asm
	div.full.f32 %r21, %r22, %r14;
	// end inline asm
	mov.b32 	%f75, %r21;
	.loc	1 53 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:53:20
	add.f32 	%f76, %f74, 0f3727C5AC;
	add.f32 	%f77, %f75, 0f3727C5AC;
	.loc	1 54 28                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:54:28
	rsqrt.approx.ftz.f32 	%f78, %f76;
	.loc	1 56 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:56:20
	mul.f32 	%f79, %f52, %f78;
	.loc	1 58 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:58:20
	fma.rn.f32 	%f4, %f79, %f30, %f31;
	.loc	1 62 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:62:20
	mul.f32 	%f5, %f4, 0f3F3504F3;
	.loc	1 63 26                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:63:26
	abs.ftz.f32 	%f6, %f5;
	setp.ge.f32 	%p9, %f6, 0f3F8060FE;
	mov.f32 	%f107, 0f3789CA3C;
	mov.f32 	%f106, 0fB9F560B9;
	mov.f32 	%f105, 0f3BAC840B;
	mov.f32 	%f104, 0fBD0C8162;
	mov.f32 	%f103, 0f3E1CF906;
	mov.f32 	%f102, 0f3F6A937E;
	mov.f32 	%f101, 0f3F20D842;
	mov.f32 	%f108, %f6;
	@%p9 bra 	$L__BB0_2;
// %bb.1:
	mul.f32 	%f108, %f5, %f5;
	mov.f32 	%f107, 0f38B1E96A;
	mov.f32 	%f106, 0fBA574D20;
	mov.f32 	%f105, 0f3BAAD5EA;
	mov.f32 	%f104, 0fBCDC1BE7;
	mov.f32 	%f103, 0f3DE718AF;
	mov.f32 	%f102, 0fBEC093AC;
	mov.f32 	%f101, 0f3E0375D3;
$L__BB0_2:                              // %__internal_fmad.exit.i
	.loc	1 0 26                          // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:0:26
	ld.param.u64 	%rd5, [triton_per_fused_convolution_gelu_native_group_norm_1_param_6];
	ld.param.u64 	%rd4, [triton_per_fused_convolution_gelu_native_group_norm_1_param_2];
	ld.param.u64 	%rd3, [triton_per_fused_convolution_gelu_native_group_norm_1_param_1];
	cvt.s64.s32 	%rd1, %r26;
	rsqrt.approx.ftz.f32 	%f3, %f77;
	.loc	1 63 26                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:63:26
	setp.ltu.f32 	%p10, %f6, 0f3F8060FE;
	fma.rn.ftz.f32 	%f87, %f107, %f108, %f106;
	fma.rn.ftz.f32 	%f88, %f87, %f108, %f105;
	fma.rn.ftz.f32 	%f89, %f88, %f108, %f104;
	fma.rn.ftz.f32 	%f90, %f89, %f108, %f103;
	fma.rn.ftz.f32 	%f91, %f90, %f108, %f102;
	fma.rn.ftz.f32 	%f92, %f91, %f108, %f101;
	neg.f32 	%f93, %f108;
	selp.f32 	%f94, %f93, %f5, %p9;
	fma.rn.ftz.f32 	%f109, %f92, %f94, %f94;
	@%p10 bra 	$L__BB0_4;
// %bb.3:
	ex2.approx.ftz.f32 	%f95, %f109;
	mov.f32 	%f96, 0f3F800000;
	sub.f32 	%f97, %f96, %f95;
	mov.b32 	%r60, %f97;
	mov.b32 	%r61, %f5;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r62, %r60;
	mov.b32 	%f109, %r63;
$L__BB0_4:                              // %__nv_erff.exit
	.loc	1 60 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:60:20
	mul.f32 	%f98, %f4, 0f3F000000;
	.loc	1 65 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:65:20
	add.f32 	%f99, %f109, 0f3F800000;
	.loc	1 66 20                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:66:20
	mul.f32 	%f100, %f98, %f99;
	.loc	1 67 47                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:67:47
	and.b32  	%r68, %r2, 48;
	setp.eq.s32 	%p17, %r68, 0;
	mov.b32 	%r64, %f1;
	and.pred  	%p12, %p17, %p1;
	// begin inline asm
	@%p12 st.global.b32 [ %rd18 + 0 ], { %r64 };
	// end inline asm
	.loc	1 68 4                          // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:68:4
	bar.sync 	0;
	.loc	1 69 28                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:69:28
	mul.wide.s32 	%rd22, %r3, 4;
	add.s64 	%rd19, %rd3, %rd22;
	.loc	1 69 40                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:69:40
	and.b32  	%r69, %r2, 63;
	setp.eq.s32 	%p18, %r69, 0;
	mov.b32 	%r65, %f3;
	and.pred  	%p13, %p18, %p1;
	// begin inline asm
	@%p13 st.global.b32 [ %rd19 + 0 ], { %r65 };
	// end inline asm
	.loc	1 70 28                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:70:28
	shl.b64 	%rd23, %rd1, 2;
	add.s64 	%rd20, %rd4, %rd23;
	.loc	1 70 48                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:70:48
	mov.b32 	%r66, %f100;
	// begin inline asm
	@%p12 st.global.b32 [ %rd20 + 0 ], { %r66 };
	// end inline asm
	.loc	1 71 25                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:71:25
	add.s64 	%rd21, %rd5, %rd22;
	.loc	1 71 37                         // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:71:37
	// begin inline asm
	@%p13 st.global.b32 [ %rd21 + 0 ], { %r70 };
	// end inline asm
	.loc	1 71 4                          // c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py:71:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/56/c56ly42o5crbpbjdwpmlxw5eecxjq2zg5fkedtpqrycuy3alvxq5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 54
.b8 108
.b8 121
.b8 52
.b8 50
.b8 111
.b8 53
.b8 99
.b8 114
.b8 98
.b8 112
.b8 98
.b8 106
.b8 100
.b8 119
.b8 112
.b8 109
.b8 108
.b8 120
.b8 119
.b8 53
.b8 101
.b8 101
.b8 99
.b8 120
.b8 106
.b8 113
.b8 50
.b8 122
.b8 103
.b8 53
.b8 102
.b8 107
.b8 101
.b8 100
.b8 116
.b8 112
.b8 113
.b8 114
.b8 121
.b8 99
.b8 117
.b8 121
.b8 51
.b8 97
.b8 108
.b8 118
.b8 120
.b8 113
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 103
.b8 101
.b8 108
.b8 117
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
