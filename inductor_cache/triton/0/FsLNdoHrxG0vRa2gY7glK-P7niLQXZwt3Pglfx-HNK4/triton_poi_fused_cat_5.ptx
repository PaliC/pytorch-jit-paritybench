//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_5  // -- Begin function triton_poi_fused_cat_5
                                        // @triton_poi_fused_cat_5
.visible .entry triton_poi_fused_cat_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_5_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_5_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_5_param_4,
	.param .u32 triton_poi_fused_cat_5_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<42>;
	.reg .f32 	%f<22>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_cat_5_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_cat_5_param_1];
$L__tmp0:
	.loc	1 21 28                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:21:33
	shl.b32 	%r17, %r1, 7;
	ld.param.u64 	%rd8, [triton_poi_fused_cat_5_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_5_param_3];
	.loc	1 22 36                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:22:36
	mov.u32 	%r18, %tid.x;
	and.b32  	%r19, %r18, 127;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_5_param_4];
	.loc	1 22 23                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:22:23
	or.b32  	%r20, %r17, %r19;
	.loc	1 23 21                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:23:21
	setp.lt.s32 	%p9, %r20, 512;
	.loc	1 24 21                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:24:21
	shr.s32 	%r22, %r20, 31;
	shr.u32 	%r23, %r22, 28;
	add.s32 	%r24, %r20, %r23;
	shr.s32 	%r25, %r24, 4;
	.loc	1 24 27                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:24:27
	shr.u32 	%r26, %r25, 29;
	add.s32 	%r27, %r25, %r26;
	and.b32  	%r28, %r27, -8;
	sub.s32 	%r29, %r25, %r28;
	.loc	1 25 19                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:25:19
	and.b32  	%r30, %r24, -16;
	sub.s32 	%r31, %r20, %r30;
	.loc	1 26 19                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:26:19
	shr.u32 	%r32, %r22, 25;
	add.s32 	%r33, %r20, %r32;
	shr.s32 	%r34, %r33, 7;
	.loc	1 32 18                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:32:18
	setp.lt.s32 	%p10, %r29, 4;
	.loc	1 37 18                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:37:18
	setp.lt.s32 	%p11, %r29, 2;
	.loc	1 39 36                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:36
	and.b32  	%r35, %r33, -128;
	sub.s32 	%r36, %r20, %r35;
	.loc	1 39 49                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:49
	shl.b32 	%r37, %r34, 5;
	.loc	1 39 46                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:46
	add.s32 	%r38, %r37, %r36;
	.loc	1 39 31                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:31
	mul.wide.s32 	%rd11, %r38, 4;
	add.s64 	%rd1, %rd6, %rd11;
	.loc	1 39 62                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:62
	and.pred  	%p1, %p9, %p11;
	mov.b32 	%r3, 0;
	.loc	1 39 54                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:39:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f5, %r2;
	.loc	1 43 20                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:43:20
	and.b32  	%r39, %r29, -2;
	setp.eq.s32 	%p12, %r39, 2;
	.loc	1 44 40                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:44:40
	shl.b32 	%r40, %r29, 4;
	add.s32 	%r41, %r37, %r31;
	.loc	1 44 31                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:44:31
	cvt.s64.s32 	%rd12, %r40;
	cvt.s64.s32 	%rd13, %r41;
	add.s64 	%rd14, %rd13, %rd12;
	shl.b64 	%rd15, %rd14, 2;
	add.s64 	%rd16, %rd7, %rd15;
	add.s64 	%rd2, %rd16, -128;
	.loc	1 44 71                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:44:71
	and.pred  	%p3, %p9, %p12;
	.loc	1 44 63                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:44:63
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f6, %r4;
	mov.f32 	%f7, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f8, %f7, %f6;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f8, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f9, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r8, %f9;
	mov.b32 	%r7, 1065353216;
	// begin inline asm
	div.full.f32 %r6, %r7, %r8;
	// end inline asm
	mov.b32 	%f10, %r6;
$L__tmp2:
	.loc	1 46 20                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:46:20
	mul.f32 	%f11, %f10, %f6;
	.loc	1 48 35                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:48:35
	selp.f32 	%f12, %f11, 0f00000000, %p12;
	.loc	1 49 34                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:49:34
	selp.f32 	%f13, %f5, %f12, %p11;
	.loc	1 59 20                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:59:20
	setp.lt.s32 	%p13, %r29, 6;
	.loc	1 60 20                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:60:20
	setp.eq.s32 	%p14, %r39, 4;
	.loc	1 61 31                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:61:31
	add.s64 	%rd17, %rd8, %rd15;
	add.s64 	%rd3, %rd17, -256;
	.loc	1 61 69                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:61:69
	and.pred  	%p5, %p9, %p14;
	.loc	1 61 61                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:61:61
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.b32 { %r9 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r9, %r3;
	// end inline asm
	mov.b32 	%f14, %r9;
	.loc	1 62 21                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:62:21
	setp.gt.s32 	%p15, %r29, 5;
	.loc	1 66 31                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:66:31
	add.s64 	%rd18, %rd9, %rd15;
	add.s64 	%rd4, %rd18, -384;
	.loc	1 66 78                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:66:78
	and.pred  	%p7, %p9, %p15;
	.loc	1 66 70                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:66:70
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p7 ld.global.b32 { %r11 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r11, %r3;
	// end inline asm
	mov.b32 	%f15, %r11;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f16, %f7, %f15;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f16, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f17, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r15, %f17;
	// begin inline asm
	div.full.f32 %r13, %r7, %r15;
	// end inline asm
	mov.b32 	%f18, %r13;
$L__tmp4:
	.loc	1 68 20                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:68:20
	mul.f32 	%f19, %f18, %f15;
	.loc	1 71 35                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:71:35
	selp.f32 	%f20, %f14, %f19, %p13;
	.loc	1 0 0                           // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:0:0
	selp.f32 	%f21, %f13, %f20, %p10;
	.loc	1 75 25                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:75:25
	mul.wide.s32 	%rd19, %r20, 4;
	add.s64 	%rd5, %rd10, %rd19;
	.loc	1 75 37                         // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:75:37
	mov.b32 	%r16, %f21;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r16 };
	// end inline asm
	.loc	1 75 4                          // cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py:75:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bm/cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 191                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 109
.b8 103
.b8 111
.b8 114
.b8 121
.b8 101
.b8 101
.b8 107
.b8 53
.b8 97
.b8 51
.b8 54
.b8 120
.b8 98
.b8 102
.b8 104
.b8 98
.b8 53
.b8 97
.b8 113
.b8 101
.b8 50
.b8 53
.b8 52
.b8 120
.b8 117
.b8 100
.b8 53
.b8 97
.b8 117
.b8 114
.b8 53
.b8 104
.b8 114
.b8 97
.b8 103
.b8 105
.b8 97
.b8 106
.b8 118
.b8 120
.b8 122
.b8 120
.b8 53
.b8 99
.b8 118
.b8 113
.b8 109
.b8 114
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
