; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 512, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = srem i32 %13, 8, !dbg !16
  %15 = mul i32 %13, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %15, !dbg !17
  %.frozen1 = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen1, 128, !dbg !18
  %17 = icmp slt i32 %14, 4, !dbg !19
  %18 = icmp slt i32 %14, 2, !dbg !20
  %19 = mul i32 %16, 128, !dbg !21
  %srem.decomposed = sub i32 %.frozen1, %19, !dbg !21
  %20 = shl nsw i32 %16, 5, !dbg !22
  %21 = add nsw i32 %20, %srem.decomposed, !dbg !23
  %22 = sext i32 %21 to i64, !dbg !24
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !24
  %24 = and i1 %12, %18, !dbg !25
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %24, i32 0, i1 %24) #1, !dbg !26
  %26 = bitcast i32 %25 to float, !dbg !26
  %27 = and i32 %14, -2, !dbg !27
  %28 = icmp eq i32 %27, 2, !dbg !27
  %29 = shl nsw i32 %14, 4, !dbg !28
  %30 = add nsw i32 %20, %.decomposed, !dbg !28
  %31 = add nsw i32 %30, -32, !dbg !29
  %32 = add nsw i32 %31, %29, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !31
  %35 = and i1 %12, %28, !dbg !32
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #1, !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = fsub float 0.000000e+00, %37, !dbg !34
  %39 = fmul float %38, 0x3FF7154760000000, !dbg !38
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #1, !dbg !38
  %41 = fadd float %40, 1.000000e+00, !dbg !39
  %42 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %41) #1, !dbg !40
  %43 = fmul float %42, %37, !dbg !41
  %44 = select i1 %28, float %43, float 0.000000e+00, !dbg !42
  %45 = select i1 %18, float %26, float %44, !dbg !43
  %46 = icmp slt i32 %14, 6, !dbg !44
  %47 = icmp eq i32 %27, 4, !dbg !45
  %48 = add nsw i32 %30, -64, !dbg !46
  %49 = add nsw i32 %48, %29, !dbg !47
  %50 = sext i32 %49 to i64, !dbg !48
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !48
  %52 = and i1 %12, %47, !dbg !49
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %52, i32 0, i1 %52) #1, !dbg !50
  %54 = bitcast i32 %53 to float, !dbg !50
  %55 = icmp sgt i32 %14, 5, !dbg !51
  %56 = add nsw i32 %30, -96, !dbg !52
  %57 = add nsw i32 %56, %29, !dbg !53
  %58 = sext i32 %57 to i64, !dbg !54
  %59 = getelementptr float, ptr addrspace(1) %3, i64 %58, !dbg !54
  %60 = and i1 %12, %55, !dbg !55
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %60, i32 0, i1 %60) #1, !dbg !56
  %62 = bitcast i32 %61 to float, !dbg !56
  %63 = fsub float 0.000000e+00, %62, !dbg !57
  %64 = fmul float %63, 0x3FF7154760000000, !dbg !59
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #1, !dbg !59
  %66 = fadd float %65, 1.000000e+00, !dbg !60
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %66) #1, !dbg !61
  %68 = fmul float %67, %62, !dbg !62
  %69 = select i1 %46, float %54, float %68, !dbg !63
  %70 = select i1 %17, float %45, float %69, !dbg !64
  %71 = sext i32 %11 to i64, !dbg !65
  %72 = getelementptr float, ptr addrspace(1) %4, i64 %71, !dbg !65
  %73 = bitcast float %70 to i32, !dbg !66
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %73, ptr addrspace(1) %72, i1 %12) #1, !dbg !66
  ret void, !dbg !67
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbmgoryeek5a36xbfhb5aqe254xud5aur5hragiajvxzx5cvqmrw.py", directory: "inductor_cache/bm")
!4 = !{ptr @triton_poi_fused_cat_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_5", linkageName: "triton_poi_fused_cat_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 37, column: 18, scope: !7)
!21 = !DILocation(line: 39, column: 36, scope: !7)
!22 = !DILocation(line: 39, column: 49, scope: !7)
!23 = !DILocation(line: 39, column: 46, scope: !7)
!24 = !DILocation(line: 39, column: 31, scope: !7)
!25 = !DILocation(line: 39, column: 62, scope: !7)
!26 = !DILocation(line: 39, column: 54, scope: !7)
!27 = !DILocation(line: 43, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 40, scope: !7)
!29 = !DILocation(line: 44, column: 36, scope: !7)
!30 = !DILocation(line: 44, column: 55, scope: !7)
!31 = !DILocation(line: 44, column: 31, scope: !7)
!32 = !DILocation(line: 44, column: 71, scope: !7)
!33 = !DILocation(line: 44, column: 63, scope: !7)
!34 = !DILocation(line: 47, column: 30, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = !DILocation(line: 45, column: 23, scope: !7)
!38 = !DILocation(line: 47, column: 29, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 47, column: 20, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 47, column: 16, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 46, column: 20, scope: !7)
!42 = !DILocation(line: 48, column: 35, scope: !7)
!43 = !DILocation(line: 49, column: 34, scope: !7)
!44 = !DILocation(line: 59, column: 20, scope: !7)
!45 = !DILocation(line: 60, column: 20, scope: !7)
!46 = !DILocation(line: 61, column: 36, scope: !7)
!47 = !DILocation(line: 61, column: 53, scope: !7)
!48 = !DILocation(line: 61, column: 31, scope: !7)
!49 = !DILocation(line: 61, column: 69, scope: !7)
!50 = !DILocation(line: 61, column: 61, scope: !7)
!51 = !DILocation(line: 62, column: 21, scope: !7)
!52 = !DILocation(line: 66, column: 36, scope: !7)
!53 = !DILocation(line: 66, column: 62, scope: !7)
!54 = !DILocation(line: 66, column: 31, scope: !7)
!55 = !DILocation(line: 66, column: 78, scope: !7)
!56 = !DILocation(line: 66, column: 70, scope: !7)
!57 = !DILocation(line: 47, column: 30, scope: !35, inlinedAt: !58)
!58 = !DILocation(line: 67, column: 23, scope: !7)
!59 = !DILocation(line: 47, column: 29, scope: !35, inlinedAt: !58)
!60 = !DILocation(line: 47, column: 20, scope: !35, inlinedAt: !58)
!61 = !DILocation(line: 47, column: 16, scope: !35, inlinedAt: !58)
!62 = !DILocation(line: 68, column: 20, scope: !7)
!63 = !DILocation(line: 71, column: 35, scope: !7)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 75, column: 25, scope: !7)
!66 = !DILocation(line: 75, column: 37, scope: !7)
!67 = !DILocation(line: 75, column: 4, scope: !7)
