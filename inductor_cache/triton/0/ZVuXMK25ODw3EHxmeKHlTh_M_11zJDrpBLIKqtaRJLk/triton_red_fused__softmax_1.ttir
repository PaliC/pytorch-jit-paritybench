#loc = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":19:0)
#loc1 = loc(unknown)
#loc26 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":39:38)
#loc43 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":54:27)
#loc65 = loc(callsite(#loc1 at #loc26))
#loc71 = loc(callsite(#loc1 at #loc43))
module {
  tt.func public @triton_red_fused__softmax_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":19:0), %arg2: i32 loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x2048xf32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %4 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc6)
    %5 = tt.load %4 : !tt.ptr<f32> loc(#loc7)
    %6 = tt.splat %5 : f32 -> tensor<1x2048xf32> loc(#loc8)
    %7 = arith.muli %0, %c4096_i32 : i32 loc(#loc9)
    %8 = tt.splat %7 : i32 -> tensor<1x2048xi32> loc(#loc10)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
    %10 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc12)
    %11 = scf.for %arg4 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg5 = %cst_1) -> (tensor<1x2048xf32>)  : i32 {
      %28 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc14)
      %29 = arith.addi %28, %3 : tensor<1x2048xi32> loc(#loc14)
      %30 = arith.cmpi slt, %29, %cst_0 : tensor<1x2048xi32> loc(#loc15)
      %31 = arith.addi %29, %8 : tensor<1x2048xi32> loc(#loc10)
      %32 = tt.addptr %9, %31 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc11)
      %33 = arith.andi %30, %10 : tensor<1x2048xi1> loc(#loc12)
      %34 = tt.load %32, %33, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc16)
      %35 = arith.addf %34, %6 : tensor<1x2048xf32> loc(#loc17)
      %36 = arith.cmpf ogt, %arg5, %35 : tensor<1x2048xf32> loc(#loc60)
      %37 = arith.cmpf une, %arg5, %arg5 : tensor<1x2048xf32> loc(#loc61)
      %38 = arith.ori %36, %37 : tensor<1x2048xi1> loc(#loc62)
      %39 = arith.select %38, %arg5, %35 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc63)
      %40 = arith.select %33, %39, %arg5 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc23)
      scf.yield %40 : tensor<1x2048xf32> loc(#loc24)
    } loc(#loc13)
    %12 = "tt.reduce"(%11) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc26)), %arg5: f32 loc(callsite(#loc1 at #loc26))):
      %28 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc73)
      %29 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc74)
      %30 = arith.ori %28, %29 : i1 loc(#loc75)
      %31 = arith.select %30, %arg4, %arg5 : f32 loc(#loc76)
      tt.reduce.return %31 : f32 loc(#loc64)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc64)
    %13 = tt.expand_dims %12 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc27)
    %14 = arith.muli %0, %c4096_i32 : i32 loc(#loc28)
    %15 = tt.splat %14 : i32 -> tensor<1x2048xi32> loc(#loc29)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc30)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc31)
    %18 = tt.broadcast %13 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc32)
    %19 = scf.for %arg4 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg5 = %cst) -> (tensor<1x2048xf32>)  : i32 {
      %28 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc34)
      %29 = arith.addi %28, %3 : tensor<1x2048xi32> loc(#loc34)
      %30 = arith.cmpi slt, %29, %cst_0 : tensor<1x2048xi32> loc(#loc35)
      %31 = arith.addi %29, %15 : tensor<1x2048xi32> loc(#loc29)
      %32 = tt.addptr %16, %31 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc30)
      %33 = arith.andi %30, %17 : tensor<1x2048xi1> loc(#loc31)
      %34 = tt.load %32, %33, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc36)
      %35 = arith.addf %34, %6 : tensor<1x2048xf32> loc(#loc37)
      %36 = arith.subf %35, %18 : tensor<1x2048xf32> loc(#loc32)
      %37 = math.exp %36 : tensor<1x2048xf32> loc(#loc38)
      %38 = arith.addf %arg5, %37 : tensor<1x2048xf32> loc(#loc39)
      %39 = arith.select %33, %38, %arg5 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc40)
      scf.yield %39 : tensor<1x2048xf32> loc(#loc41)
    } loc(#loc33)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc43)), %arg5: f32 loc(callsite(#loc1 at #loc43))):
      %28 = arith.addf %arg4, %arg5 : f32 loc(#loc77)
      tt.reduce.return %28 : f32 loc(#loc70)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc70)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc45)
    %22 = arith.muli %0, %c4096_i32 : i32 loc(#loc46)
    %23 = tt.splat %22 : i32 -> tensor<1x2048xi32> loc(#loc47)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc48)
    %25 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc49)
    %26 = tt.broadcast %13 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc50)
    %27 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc51)
    scf.for %arg4 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %28 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc53)
      %29 = arith.addi %28, %3 : tensor<1x2048xi32> loc(#loc53)
      %30 = arith.cmpi slt, %29, %cst_0 : tensor<1x2048xi32> loc(#loc54)
      %31 = arith.addi %29, %23 : tensor<1x2048xi32> loc(#loc47)
      %32 = tt.addptr %24, %31 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc48)
      %33 = arith.andi %30, %25 : tensor<1x2048xi1> loc(#loc49)
      %34 = tt.load %32, %33, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc55)
      %35 = arith.addf %34, %6 : tensor<1x2048xf32> loc(#loc56)
      %36 = arith.subf %35, %26 : tensor<1x2048xf32> loc(#loc50)
      %37 = math.exp %36 : tensor<1x2048xf32> loc(#loc57)
      %38 = arith.divf %37, %27 : tensor<1x2048xf32> loc(#loc51)
      tt.store %32, %38, %33 : tensor<1x2048x!tt.ptr<f32>> loc(#loc58)
    } loc(#loc52)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":22:28)
#loc3 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":24:21)
#loc4 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":25:25)
#loc5 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":25:33)
#loc6 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":27:30)
#loc7 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":27:19)
#loc8 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":28:33)
#loc9 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":34:48)
#loc10 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":34:43)
#loc11 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":34:38)
#loc12 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":34:61)
#loc13 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":30:36)
#loc14 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":31:27)
#loc15 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":32:25)
#loc16 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":34:53)
#loc17 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":35:22)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":37:45)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":38:46)
#loc24 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":38:8)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc27 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":39:41)
#loc28 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":47:48)
#loc29 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":47:43)
#loc30 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":47:38)
#loc31 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":47:61)
#loc32 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":49:24)
#loc33 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":43:36)
#loc34 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":44:27)
#loc35 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":45:25)
#loc36 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":47:53)
#loc37 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":48:23)
#loc38 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":50:28)
#loc39 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":52:25)
#loc40 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":53:48)
#loc41 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":53:8)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc45 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":54:30)
#loc46 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":61:49)
#loc47 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":61:44)
#loc48 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":61:39)
#loc49 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":61:62)
#loc50 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":63:24)
#loc51 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":65:24)
#loc52 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":57:36)
#loc53 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":58:27)
#loc54 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":59:25)
#loc55 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":61:54)
#loc56 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":62:24)
#loc57 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":64:28)
#loc58 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":66:54)
#loc59 = loc("inductor_cache/cl/cclrjhlbsetxydd4ihu4j7swqa7npio6t2krfwylosvjrkdw2vy3.py":57:4)
#loc60 = loc(callsite(#loc18 at #loc19))
#loc61 = loc(callsite(#loc20 at #loc19))
#loc62 = loc(callsite(#loc21 at #loc19))
#loc63 = loc(callsite(#loc22 at #loc19))
#loc64 = loc(callsite(#loc25 at #loc26))
#loc66 = loc(callsite(#loc18 at #loc25))
#loc67 = loc(callsite(#loc20 at #loc25))
#loc68 = loc(callsite(#loc21 at #loc25))
#loc69 = loc(callsite(#loc22 at #loc25))
#loc70 = loc(callsite(#loc42 at #loc43))
#loc72 = loc(callsite(#loc44 at #loc42))
#loc73 = loc(callsite(#loc66 at #loc26))
#loc74 = loc(callsite(#loc67 at #loc26))
#loc75 = loc(callsite(#loc68 at #loc26))
#loc76 = loc(callsite(#loc69 at #loc26))
#loc77 = loc(callsite(#loc72 at #loc43))
