; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_copy_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 31, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 24, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 6, !dbg !15
  %11 = mul i32 %10, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = icmp sgt i32 %.decomposed, 4, !dbg !17
  %13 = add nsw i32 %.decomposed, -1, !dbg !18
  %14 = icmp ult i32 %13, 4, !dbg !18
  %15 = shl nsw i32 %10, 2, !dbg !19
  %16 = add nsw i32 %13, %15, !dbg !20
  %17 = sext i32 %16 to i64, !dbg !21
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !21
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 false, i32 0, i1 false) #1, !dbg !22
  %20 = bitcast i32 %19 to float, !dbg !22
  %21 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %20, float 1.600000e+01) #1, !dbg !23
  %22 = add nsw i32 %.decomposed, -5, !dbg !24
  %23 = add nsw i32 %22, %15, !dbg !25
  %24 = sext i32 %23 to i64, !dbg !26
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !26
  %26 = and i1 %9, %12, !dbg !27
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26) #1, !dbg !28
  %28 = bitcast i32 %27 to float, !dbg !28
  %29 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %28, float 1.600000e+01) #1, !dbg !29
  %30 = icmp slt i32 %.decomposed, 1, !dbg !30
  %31 = add nsw i32 %.decomposed, 3, !dbg !31
  %32 = icmp ult i32 %31, 4, !dbg !31
  %33 = add nsw i32 %31, %15, !dbg !32
  %34 = sext i32 %33 to i64, !dbg !33
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !33
  %36 = and i1 %9, %32, !dbg !34
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #1, !dbg !35
  %38 = bitcast i32 %37 to float, !dbg !35
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %38, float 1.600000e+01) #1, !dbg !36
  %40 = select i1 %32, float %39, float 0x7FF8000000000000, !dbg !37
  %41 = and i1 %9, %14, !dbg !38
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %41, i32 0, i1 %41) #1, !dbg !39
  %43 = bitcast i32 %42 to float, !dbg !39
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %43, float 1.600000e+01) #1, !dbg !40
  %45 = select i1 %14, float %44, float 0x7FF8000000000000, !dbg !41
  %46 = select i1 %30, float %40, float %45, !dbg !41
  %47 = select i1 %12, float %29, float %46, !dbg !41
  %48 = sext i32 %8 to i64, !dbg !42
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !42
  %50 = bitcast float %47 to i32, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %50, ptr addrspace(1) %49, i1 %9) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py", directory: "inductor_cache/sy")
!4 = !{ptr @triton_poi_fused_copy_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_copy_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_copy_1", linkageName: "triton_poi_fused_copy_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 19, scope: !7)
!18 = !DILocation(line: 39, column: 19, scope: !7)
!19 = !DILocation(line: 41, column: 45, scope: !7)
!20 = !DILocation(line: 41, column: 43, scope: !7)
!21 = !DILocation(line: 41, column: 31, scope: !7)
!22 = !DILocation(line: 41, column: 50, scope: !7)
!23 = !DILocation(line: 43, column: 20, scope: !7)
!24 = !DILocation(line: 55, column: 38, scope: !7)
!25 = !DILocation(line: 55, column: 43, scope: !7)
!26 = !DILocation(line: 55, column: 31, scope: !7)
!27 = !DILocation(line: 55, column: 58, scope: !7)
!28 = !DILocation(line: 55, column: 50, scope: !7)
!29 = !DILocation(line: 57, column: 20, scope: !7)
!30 = !DILocation(line: 66, column: 19, scope: !7)
!31 = !DILocation(line: 72, column: 20, scope: !7)
!32 = !DILocation(line: 74, column: 40, scope: !7)
!33 = !DILocation(line: 74, column: 31, scope: !7)
!34 = !DILocation(line: 74, column: 55, scope: !7)
!35 = !DILocation(line: 74, column: 47, scope: !7)
!36 = !DILocation(line: 76, column: 20, scope: !7)
!37 = !DILocation(line: 80, column: 35, scope: !7)
!38 = !DILocation(line: 86, column: 58, scope: !7)
!39 = !DILocation(line: 86, column: 50, scope: !7)
!40 = !DILocation(line: 88, column: 20, scope: !7)
!41 = !DILocation(line: 0, scope: !7)
!42 = !DILocation(line: 95, column: 25, scope: !7)
!43 = !DILocation(line: 95, column: 37, scope: !7)
!44 = !DILocation(line: 95, column: 4, scope: !7)
