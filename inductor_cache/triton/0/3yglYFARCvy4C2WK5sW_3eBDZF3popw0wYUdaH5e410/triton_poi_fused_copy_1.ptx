//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_copy_1 // -- Begin function triton_poi_fused_copy_1
                                        // @triton_poi_fused_copy_1
.visible .entry triton_poi_fused_copy_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_copy_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_copy_1_param_1,
	.param .u32 triton_poi_fused_copy_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<36>;
	.reg .f32 	%f<8>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_copy_1_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_copy_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:21:33
	shl.b32 	%r23, %r1, 5;
	.loc	1 22 36                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:22:36
	mov.u32 	%r24, %tid.x;
	and.b32  	%r25, %r24, 31;
	.loc	1 22 23                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:22:23
	or.b32  	%r26, %r23, %r25;
	.loc	1 23 21                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:23:21
	setp.lt.s32 	%p9, %r26, 24;
	.loc	1 25 19                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:25:19
	mul.hi.s32 	%r28, %r26, 715827883;
	shr.u32 	%r29, %r28, 31;
	add.s32 	%r30, %r28, %r29;
	.loc	1 24 19                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:24:19
	mul.lo.s32 	%r31, %r30, 6;
	sub.s32 	%r32, %r26, %r31;
	.loc	1 29 19                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:29:19
	setp.gt.s32 	%p10, %r32, 4;
	.loc	1 39 19                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:39:19
	add.s32 	%r33, %r32, -1;
	setp.lt.u32 	%p11, %r33, 4;
	.loc	1 41 45                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:41:45
	shl.b32 	%r34, %r30, 2;
	.loc	1 41 31                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:41:31
	cvt.s64.s32 	%rd8, %r34;
	cvt.s64.s32 	%rd9, %r32;
	add.s64 	%rd10, %rd9, %rd8;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd6, %rd11;
	add.s64 	%rd1, %rd12, -4;
	mov.b32 	%r3, 0;
	mov.pred 	%p1, 0;
	.loc	1 41 50                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:41:50
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 55 31                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:55:31
	add.s64 	%rd2, %rd12, -20;
	.loc	1 55 58                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:55:58
	and.pred  	%p3, %p9, %p10;
	.loc	1 55 50                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:55:50
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p3 ld.global.b32 { %r10 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%r11, 1098907648;
	.loc	1 57 20                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:57:20
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f1, %r9;
	.loc	1 66 19                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:66:19
	setp.lt.s32 	%p12, %r32, 1;
	.loc	1 72 20                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:72:20
	add.s32 	%r35, %r32, 3;
	setp.lt.u32 	%p13, %r35, 4;
	.loc	1 74 31                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:74:31
	add.s64 	%rd3, %rd12, 12;
	.loc	1 74 55                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:74:55
	and.pred  	%p5, %p9, %p13;
	.loc	1 74 47                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:74:47
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.b32 { %r15 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r15, %r3;
	// end inline asm
	.loc	1 76 20                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:76:20
	// begin inline asm
	div.full.f32 %r14, %r15, %r11;
	// end inline asm
	mov.b32 	%f2, %r14;
	.loc	1 80 35                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:80:35
	selp.f32 	%f3, %f2, 0f7FC00000, %p13;
	.loc	1 86 58                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:86:58
	and.pred  	%p7, %p9, %p11;
	.loc	1 86 50                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:86:50
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p7 ld.global.b32 { %r20 }, [ %rd1 + 0 ];
	@!%p7 mov.u32 %r20, %r3;
	// end inline asm
	.loc	1 88 20                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:88:20
	// begin inline asm
	div.full.f32 %r19, %r20, %r11;
	// end inline asm
	mov.b32 	%f4, %r19;
	.loc	1 0 0                           // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:0:0
	selp.f32 	%f5, %f4, 0f7FC00000, %p11;
	selp.f32 	%f6, %f3, %f5, %p12;
	selp.f32 	%f7, %f1, %f6, %p10;
	.loc	1 95 25                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:95:25
	mul.wide.s32 	%rd13, %r26, 4;
	add.s64 	%rd5, %rd7, %rd13;
	.loc	1 95 37                         // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:95:37
	mov.b32 	%r22, %f7;
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r22 };
	// end inline asm
	.loc	1 95 4                          // csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py:95:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sy/csyn3juvkbb5kualuhorcgjffz56p3qnqoowkayrgpomphybvic4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 121
.b8 110
.b8 51
.b8 106
.b8 117
.b8 118
.b8 107
.b8 98
.b8 98
.b8 53
.b8 107
.b8 117
.b8 97
.b8 108
.b8 117
.b8 104
.b8 111
.b8 114
.b8 99
.b8 103
.b8 106
.b8 102
.b8 102
.b8 122
.b8 53
.b8 54
.b8 112
.b8 51
.b8 113
.b8 110
.b8 113
.b8 111
.b8 111
.b8 119
.b8 107
.b8 97
.b8 121
.b8 114
.b8 103
.b8 112
.b8 111
.b8 109
.b8 112
.b8 104
.b8 121
.b8 98
.b8 118
.b8 105
.b8 99
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
