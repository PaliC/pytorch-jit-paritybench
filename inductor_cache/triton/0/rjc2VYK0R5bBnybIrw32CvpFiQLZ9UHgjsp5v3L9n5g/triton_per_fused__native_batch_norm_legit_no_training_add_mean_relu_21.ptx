//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_10,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_11,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_12,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_13
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<62>;
	.reg .f32 	%f<44>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_0];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_1];
$L__tmp0:
	.loc	1 23 28                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:23:33
	shl.b32 	%r36, %r1, 3;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_2];
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_3];
	.loc	1 24 44                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:24:44
	mov.u32 	%r37, %tid.x;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_4];
	bfe.u32 	%r38, %r37, 3, 3;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_5];
	.loc	1 24 23                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:24:23
	or.b32  	%r39, %r36, %r38;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_6];
	.loc	1 26 34                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:26:34
	shl.b32 	%r40, %r37, 1;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_7];
	and.b32  	%r41, %r40, 14;
	ld.param.u64 	%rd29, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_8];
	.loc	1 31 19                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:31:19
	bfe.s32 	%r42, %r1, 28, 1;
	shr.u32 	%r43, %r42, 22;
	add.s32 	%r44, %r39, %r43;
	and.b32  	%r45, %r44, -1024;
	sub.s32 	%r46, %r39, %r45;
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_9];
	.loc	1 32 38                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:38
	shl.b32 	%r47, %r39, 4;
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_10];
	.loc	1 32 35                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:35
	or.b32  	%r48, %r47, %r41;
	ld.param.u64 	%rd32, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_21_param_11];
	.loc	1 32 30                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:30
	mul.wide.s32 	%rd33, %r48, 4;
	add.s64 	%rd1, %rd23, %rd33;
	mov.pred 	%p1, -1;
	.loc	1 32 43                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:33:30
	mul.wide.s32 	%rd34, %r46, 4;
	add.s64 	%rd2, %rd24, %rd34;
	.loc	1 33 35                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:33:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:34:30
	add.s64 	%rd4, %rd25, %rd34;
	.loc	1 34 35                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	.loc	1 35 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:35:31
	add.s64 	%rd6, %rd26, %rd34;
	.loc	1 35 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:35:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:36:31
	add.s64 	%rd8, %rd27, %rd34;
	.loc	1 36 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:37:31
	add.s64 	%rd10, %rd28, %rd33;
	.loc	1 37 44                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:37:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:38:31
	add.s64 	%rd11, %rd29, %rd34;
	.loc	1 38 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:38:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:39:31
	add.s64 	%rd13, %rd30, %rd34;
	.loc	1 39 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:39:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r17;
	.loc	1 40 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:40:31
	add.s64 	%rd15, %rd31, %rd34;
	.loc	1 40 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:40:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 41 31                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:41:31
	add.s64 	%rd17, %rd32, %rd34;
	.loc	1 41 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:41:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:44:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	.loc	1 45 26                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:45:26
	sqrt.approx.ftz.f32 	%f4, %f3;
	.loc	1 47 18                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:47:18
	mov.b32 	%r24, %f4;
	mov.b32 	%r23, 1065353216;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f5, %r22;
	.loc	1 54 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:54:20
	add.f32 	%f6, %f2, 0f3727C5AC;
	.loc	1 55 27                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:55:27
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 37 44                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:37:44
	mov.b32 	%f8, %r13;
	.loc	1 38 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:38:36
	mov.b32 	%f9, %r15;
	.loc	1 53 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:53:20
	sub.f32 	%f10, %f8, %f9;
	.loc	1 37 44                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:37:44
	mov.b32 	%f11, %r12;
	.loc	1 53 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:53:20
	sub.f32 	%f12, %f11, %f9;
	.loc	1 32 43                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:43
	mov.b32 	%f13, %r3;
	.loc	1 33 35                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:33:35
	mov.b32 	%f14, %r5;
	.loc	1 42 18                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:42:18
	sub.f32 	%f15, %f13, %f14;
	.loc	1 50 19                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:50:19
	mul.f32 	%f16, %f15, %f5;
	.loc	1 35 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:35:36
	mov.b32 	%f17, %r9;
	.loc	1 36 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:36:36
	mov.b32 	%f18, %r11;
	.loc	1 52 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:52:20
	fma.rn.f32 	%f19, %f16, %f17, %f18;
	.loc	1 32 43                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:32:43
	mov.b32 	%f20, %r2;
	.loc	1 42 18                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:42:18
	sub.f32 	%f21, %f20, %f14;
	.loc	1 50 19                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:50:19
	mul.f32 	%f22, %f21, %f5;
	.loc	1 52 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:52:20
	fma.rn.f32 	%f23, %f22, %f17, %f18;
	.loc	1 41 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:41:36
	mov.b32 	%f24, %r21;
	.loc	1 40 36                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:40:36
	mov.b32 	%f25, %r19;
	.loc	1 24 44                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:24:44
	and.b32  	%r49, %r37, 7;
	.loc	1 24 23                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:24:23
	or.b32  	%r50, %r36, %r49;
	.loc	1 56 19                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:56:19
	mov.b32 	%r27, %f7;
	// begin inline asm
	div.full.f32 %r25, %r23, %r27;
	// end inline asm
	mov.b32 	%f26, %r25;
	.loc	1 58 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:58:20
	mul.f32 	%f27, %f12, %f26;
	mul.f32 	%f28, %f10, %f26;
	.loc	1 60 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:60:20
	fma.rn.f32 	%f29, %f27, %f25, %f24;
	fma.rn.f32 	%f30, %f28, %f25, %f24;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p22, %f29, 0f00000000;
	setp.lt.f32 	%p23, %f30, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f31, 0f00000000, %f29, %p22;
	selp.f32 	%f32, 0f00000000, %f30, %p23;
$L__tmp2:
	.loc	1 63 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:63:20
	add.f32 	%f33, %f23, %f31;
	add.f32 	%f34, %f19, %f32;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p24, %f33, 0f00000000;
	setp.lt.f32 	%p25, %f34, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, 0f00000000, %f33, %p24;
	selp.f32 	%f36, 0f00000000, %f34, %p25;
$L__tmp4:
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f37;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f38, %r52;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f39;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f40, %r54;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f41;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f42, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
$L__tmp5:
	.loc	1 68 20                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:68:20
	shl.b32 	%r57, %r38, 2;
	mov.u32 	%r58, global_smem;
	add.s32 	%r28, %r58, %r57;
	mov.b32 	%r29, %f43;
	// begin inline asm
	@%p1 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r59, %r49, 2;
	add.s32 	%r60, %r58, %r59;
	ld.shared.u32 	%r31, [%r60];
	mov.b32 	%r32, 1098907648;
	// begin inline asm
	div.full.f32 %r35, %r31, %r32;
	// end inline asm
	.loc	1 69 28                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:69:28
	add.s64 	%rd19, %rd21, %rd33;
	.loc	1 69 48                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:69:48
	mov.b32 	%r33, %f35;
	mov.b32 	%r34, %f36;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd19 + 0 ], { %r33, %r34 };
	// end inline asm
	.loc	1 70 4                          // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:70:4
	bar.sync 	0;
	.loc	1 71 28                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:71:28
	mul.wide.s32 	%rd35, %r50, 4;
	add.s64 	%rd20, %rd22, %rd35;
	.loc	1 71 40                         // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:71:40
	and.b32  	%r61, %r37, 56;
	setp.eq.s32 	%p21, %r61, 0;
	// begin inline asm
	@%p21 st.global.b32 [ %rd20 + 0 ], { %r35 };
	// end inline asm
	.loc	1 71 4                          // cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py:71:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yu/cyu4atiykzi647y2yvxigjg2trl64tllwmkerpksx7wbee3qzbec.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 263                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x100 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 117
.b8 52
.b8 97
.b8 116
.b8 105
.b8 121
.b8 107
.b8 122
.b8 105
.b8 54
.b8 52
.b8 55
.b8 121
.b8 50
.b8 121
.b8 118
.b8 120
.b8 105
.b8 103
.b8 106
.b8 103
.b8 50
.b8 116
.b8 114
.b8 108
.b8 54
.b8 52
.b8 116
.b8 108
.b8 108
.b8 119
.b8 109
.b8 107
.b8 101
.b8 114
.b8 112
.b8 107
.b8 115
.b8 120
.b8 55
.b8 119
.b8 98
.b8 101
.b8 101
.b8 51
.b8 113
.b8 122
.b8 98
.b8 101
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x49 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xac:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 66                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
