; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_mul_pow_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sext i32 %8 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 %9) #4, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = fmul float %13, %13, !dbg !17
  %15 = fadd float %14, 1.000000e+00, !dbg !18
  %16 = tail call float @llvm.nvvm.trunc.f(float 3.750000e-01) #4, !dbg !19
  %17 = fmul float %16, 2.000000e+00, !dbg !19
  %18 = fsub float 7.500000e-01, %17, !dbg !19
  %19 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not.i = icmp eq i32 %19, 0, !dbg !19
  %20 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #4, !dbg !19
  %21 = tail call float @llvm.nvvm.fabs.f(float %18) #4, !dbg !19
  %.08.i = select i1 %.not.i, float %21, float %20, !dbg !19
  %22 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !19
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not12.i = icmp eq i32 %23, 0, !dbg !19
  %24 = tail call float @llvm.nvvm.fabs.ftz.f(float %15) #4, !dbg !19
  %25 = tail call float @llvm.nvvm.fabs.f(float %15) #4, !dbg !19
  %.09.i = select i1 %.not12.i, float %25, float %24, !dbg !19
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not13.i = icmp eq i32 %26, 0, !dbg !19
  %27 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !19
  %28 = fmul float %.09.i, 0x4170000000000000, !dbg !19
  %29 = select i1 %.not13.i, i1 %27, i1 false, !dbg !19
  %.116.i = select i1 %29, float %28, float %.09.i, !dbg !19
  %expo.i.i.1.i = select i1 %29, float -1.510000e+02, float -1.270000e+02, !dbg !19
  %30 = bitcast float %.116.i to i32, !dbg !19
  %31 = and i32 %30, 8388607, !dbg !19
  %32 = or disjoint i32 %31, 1065353216, !dbg !19
  %33 = bitcast i32 %32 to float, !dbg !19
  %34 = lshr i32 %30, 23, !dbg !19
  %35 = uitofp nneg i32 %34 to float, !dbg !19
  %36 = fadd float %expo.i.i.1.i, %35, !dbg !19
  %37 = fcmp ogt float %33, 0x3FF6A09E60000000, !dbg !19
  %38 = fmul float %33, 5.000000e-01, !dbg !19
  %39 = fadd float %36, 1.000000e+00, !dbg !19
  %expo.i.i.2.i = select i1 %37, float %39, float %36, !dbg !19
  %m.i.i.0.i = select i1 %37, float %38, float %33, !dbg !19
  %40 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !19
  %41 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !19
  %42 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %41) #5, !dbg !19, !srcloc !20
  %43 = fmul float %40, 2.000000e+00, !dbg !19
  %44 = fmul float %42, %43, !dbg !19
  %45 = fmul float %44, %44, !dbg !19
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not14.i = icmp eq i32 %46, 0, !dbg !19
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %45, float 0x3F8995EC60000000) #4, !dbg !19
  %48 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %45, float 0x3F8995EC60000000) #4, !dbg !19
  %.020.i = select i1 %.not14.i, float %48, float %47, !dbg !19
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not15.i = icmp eq i32 %49, 0, !dbg !19
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %45, float 0x3FB55557A0000000) #4, !dbg !19
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %45, float 0x3FB55557A0000000) #4, !dbg !19
  %.021.i = select i1 %.not15.i, float %51, float %50, !dbg !19
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not16.i = icmp eq i32 %52, 0, !dbg !19
  %53 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %45) #4, !dbg !19
  %54 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %45) #4, !dbg !19
  %.022.i = select i1 %.not16.i, float %54, float %53, !dbg !19
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not17.i = icmp eq i32 %55, 0, !dbg !19
  %56 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %44) #4, !dbg !19
  %57 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %44) #4, !dbg !19
  %.024.i = select i1 %.not17.i, float %57, float %56, !dbg !19
  %58 = fsub float %40, %44, !dbg !19
  %59 = fmul float %58, 2.000000e+00, !dbg !19
  %60 = fneg float %44, !dbg !19
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not18.i = icmp eq i32 %61, 0, !dbg !19
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %60, float %40, float %59) #4, !dbg !19
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %60, float %40, float %59) #4, !dbg !19
  %.025.i = select i1 %.not18.i, float %63, float %62, !dbg !19
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not19.i = icmp eq i32 %64, 0, !dbg !19
  %65 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %42, float %.025.i) #4, !dbg !19
  %66 = tail call float @llvm.nvvm.mul.rn.f(float %42, float %.025.i) #4, !dbg !19
  %.026.i = select i1 %.not19.i, float %66, float %65, !dbg !19
  %67 = fadd float %44, %.024.i, !dbg !19
  %68 = fsub float %44, %67, !dbg !19
  %69 = fadd float %.024.i, %68, !dbg !19
  %70 = fadd float %.026.i, %69, !dbg !19
  %71 = fadd float %67, %70, !dbg !19
  %72 = fsub float %67, %71, !dbg !19
  %73 = fadd float %70, %72, !dbg !19
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not20.i = icmp eq i32 %74, 0, !dbg !19
  %75 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !19
  %76 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !19
  %.019.i = select i1 %.not20.i, float %76, float %75, !dbg !19
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not21.i = icmp eq i32 %77, 0, !dbg !19
  %78 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !19
  %79 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !19
  %.018.i = select i1 %.not21.i, float %79, float %78, !dbg !19
  %80 = fadd float %.019.i, %71, !dbg !19
  %81 = fsub float %.019.i, %80, !dbg !19
  %82 = fadd float %71, %81, !dbg !19
  %83 = fadd float %73, %82, !dbg !19
  %84 = fadd float %.018.i, %83, !dbg !19
  %85 = fadd float %80, %84, !dbg !19
  %86 = fsub float %80, %85, !dbg !19
  %87 = fadd float %84, %86, !dbg !19
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not22.i = icmp eq i32 %88, 0, !dbg !19
  %89 = tail call float @llvm.nvvm.fabs.ftz.f(float 7.500000e-01) #4, !dbg !19
  %90 = tail call float @llvm.nvvm.fabs.f(float 7.500000e-01) #4, !dbg !19
  %.027.i = select i1 %.not22.i, float %90, float %89, !dbg !19
  %91 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !19
  %.013.i = select i1 %91, float 0x3F18000000000000, float 7.500000e-01, !dbg !19
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not23.i = icmp eq i32 %92, 0, !dbg !19
  %93 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %85) #4, !dbg !19
  %94 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %85) #4, !dbg !19
  %.028.i = select i1 %.not23.i, float %94, float %93, !dbg !19
  %95 = fneg float %.028.i, !dbg !19
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not24.i = icmp eq i32 %96, 0, !dbg !19
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %85, float %95) #4, !dbg !19
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %85, float %95) #4, !dbg !19
  %.029.i = select i1 %.not24.i, float %98, float %97, !dbg !19
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not25.i = icmp eq i32 %99, 0, !dbg !19
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %87, float %.029.i) #4, !dbg !19
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %87, float %.029.i) #4, !dbg !19
  %.030.i = select i1 %.not25.i, float %101, float %100, !dbg !19
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not26.i = icmp eq i32 %102, 0, !dbg !19
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %85, float %.030.i) #4, !dbg !19
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %85, float %.030.i) #4, !dbg !19
  %.031.i = select i1 %.not26.i, float %104, float %103, !dbg !19
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not27.i = icmp eq i32 %105, 0, !dbg !19
  %106 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !19
  %107 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !19
  %.032.i = select i1 %.not27.i, float %107, float %106, !dbg !19
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %110 = bitcast float %.032.i to i32, !dbg !19
  %111 = icmp eq i32 %110, 1118925336, !dbg !19
  %prod.i.145.0.i = select i1 %111, float 0x40562E42E0000000, float %.032.i, !dbg !19
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not30.i = icmp eq i32 %112, 0, !dbg !19
  %113 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !19
  %114 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !19
  %.017.i = select i1 %.not30.i, float %114, float %113, !dbg !19
  %115 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !19
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not31.i = icmp eq i32 %116, 0, !dbg !19
  %117 = tail call float @llvm.nvvm.fabs.ftz.f(float %115) #4, !dbg !19
  %118 = tail call float @llvm.nvvm.fabs.f(float %115) #4, !dbg !19
  %.023.i = select i1 %.not31.i, float %118, float %117, !dbg !19
  %119 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !19
  %120 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %115), !dbg !19
  %j.i.i.0.i = select i1 %119, float %120, float %115, !dbg !19
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not32.i = icmp eq i32 %121, 0, !dbg !19
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !19
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !19
  %.035.i = select i1 %.not32.i, float %123, float %122, !dbg !19
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not33.i = icmp eq i32 %124, 0, !dbg !19
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !19
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !19
  %.036.i = select i1 %.not33.i, float %126, float %125, !dbg !19
  %127 = fmul float %.036.i, 0x3FF7154760000000, !dbg !19
  %128 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !19
  %129 = bitcast float %128 to i32, !dbg !19
  %130 = shl i32 %129, 23, !dbg !19
  %131 = bitcast i32 %130 to float, !dbg !19
  %132 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %127) #4, !dbg !19
  %133 = fmul float %132, %131, !dbg !19
  %134 = fcmp une float %133, 0x7FF0000000000000, !dbg !19
  br i1 %134, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !19

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not29.i = icmp eq i32 %109, 0, !dbg !19
  %.not28.i = icmp eq i32 %108, 0, !dbg !19
  %135 = fneg float %.032.i, !dbg !19
  %136 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %135) #4, !dbg !19
  %137 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %135) #4, !dbg !19
  %.033.i = select i1 %.not28.i, float %136, float %137, !dbg !19
  %138 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !19
  %139 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !19
  %.034.i = select i1 %.not29.i, float %138, float %139, !dbg !19
  %140 = fadd float %.034.i, 0x3EE0000000000000, !dbg !19
  %prod.i.044.0.i = select i1 %111, float %140, float %.034.i, !dbg !19
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not34.i = icmp eq i32 %141, 0, !dbg !19
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %133, float %prod.i.044.0.i, float %133) #4, !dbg !19
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %133, float %prod.i.044.0.i, float %133) #4, !dbg !19
  %.014.i = select i1 %.not34.i, float %143, float %142, !dbg !19
  br label %__internal_accurate_powf.exit.i, !dbg !19

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !19
  %144 = fcmp oeq float %15, 0.000000e+00, !dbg !19
  %145 = fadd float %15, %15, !dbg !19
  %146 = select i1 %22, float %145, float 0.000000e+00, !dbg !19
  %.212.i = select i1 %144, float %146, float %t.i.0.i, !dbg !19
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not35.i = icmp eq i32 %147, 0, !dbg !19
  %.01.i = select i1 %.not35.i, float %25, float %24, !dbg !19
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not36.i = icmp eq i32 %148, 0, !dbg !19
  %.02.i = select i1 %.not36.i, float %90, float %89, !dbg !19
  %149 = fadd float %.01.i, %.02.i, !dbg !19
  %150 = bitcast float %149 to i32, !dbg !19
  %151 = icmp sgt i32 %150, 2139095039, !dbg !19
  br i1 %151, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !19

__nv_isnanf.exit.i.i:                             ; preds = %__internal_accurate_powf.exit.i
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not37.i = icmp eq i32 %152, 0, !dbg !19
  %.06.i = select i1 %.not37.i, float %25, float %24, !dbg !19
  %153 = fcmp uno float %.06.i, 0.000000e+00, !dbg !19
  br i1 %153, label %156, label %__nv_isnanf.exit11.i.i, !dbg !19

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not38.i = icmp eq i32 %154, 0, !dbg !19
  %.07.i = select i1 %.not38.i, float %90, float %89, !dbg !19
  %155 = fcmp uno float %.07.i, 0.000000e+00, !dbg !19
  br i1 %155, label %156, label %__nv_isinff.exit8.i.i, !dbg !19

156:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %157 = fadd float %15, 7.500000e-01, !dbg !19
  br label %__nv_powf.exit, !dbg !19

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not39.i = icmp eq i32 %158, 0, !dbg !19
  %.05.i = select i1 %.not39.i, float %90, float %89, !dbg !19
  %159 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !19
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !19
  %.not41.i = icmp eq i32 %160, 0, !dbg !19
  %.04.i = select i1 %.not41.i, float %25, float %24, !dbg !19
  br i1 %159, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !19

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %161 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !19
  %162 = select i1 %161, float 0x7FF0000000000000, float 0.000000e+00, !dbg !19
  br label %__nv_powf.exit, !dbg !19

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %163 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !19
  br i1 %163, label %164, label %__nv_powf.exit, !dbg !19

164:                                              ; preds = %__nv_isinff.exit.i.i
  br label %__nv_powf.exit, !dbg !19

__nv_powf.exit:                                   ; preds = %__internal_accurate_powf.exit.i, %156, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %164
  %.3.i = phi float [ %.212.i, %__internal_accurate_powf.exit.i ], [ %157, %156 ], [ %162, %__nv_fabsf.exit5.i.i ], [ 0x7FF0000000000000, %164 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !19
  %165 = fcmp oeq float %15, 1.000000e+00, !dbg !19
  %t.0.i = select i1 %165, float 1.000000e+00, float %.3.i, !dbg !19
  %166 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %13, float %t.0.i) #4, !dbg !21
  %167 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !22
  %168 = bitcast float %166 to i32, !dbg !23
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %168, ptr addrspace(1) %167, i1 %9) #4, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py", directory: "inductor_cache/nm")
!4 = !{ptr @triton_poi_fused_add_div_mul_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mul_pow_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mul_pow_0", linkageName: "triton_poi_fused_add_div_mul_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 18, scope: !7)
!19 = !DILocation(line: 32, column: 31, scope: !7)
!20 = !{i32 21046}
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 25, scope: !7)
!23 = !DILocation(line: 34, column: 36, scope: !7)
!24 = !DILocation(line: 34, column: 4, scope: !7)
