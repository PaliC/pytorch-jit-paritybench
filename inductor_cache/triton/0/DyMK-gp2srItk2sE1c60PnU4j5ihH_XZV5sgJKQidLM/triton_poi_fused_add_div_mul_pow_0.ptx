//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mul_pow_0 // -- Begin function triton_poi_fused_add_div_mul_pow_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_div_mul_pow_0
.visible .entry triton_poi_fused_add_div_mul_pow_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_pow_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mul_pow_0_param_1,
	.param .u32 triton_poi_fused_add_div_mul_pow_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<21>;
	.reg .f32 	%f<100>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_add_div_mul_pow_0_param_0];
$L__tmp0:
	.loc	1 21 28                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:21:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:21:33
	shl.b32 	%r4, %r2, 7;
	.loc	1 22 36                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:22:36
	mov.u32 	%r5, %tid.x;
	and.b32  	%r6, %r5, 127;
	.loc	1 22 23                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:22:23
	or.b32  	%r7, %r4, %r6;
	.loc	1 23 21                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:23:21
	setp.lt.s32 	%p1, %r7, 256;
	.loc	1 25 30                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:25:30
	mul.wide.s32 	%rd5, %r7, 4;
	add.s64 	%rd3, %rd4, %rd5;
	.loc	1 25 35                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:25:35
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.b32 { %r20 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r20;
	.loc	1 30 18                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:30:18
	fma.rn.f32 	%f2, %f1, %f1, 0f3F800000;
	mov.f32 	%f19, 0f3EC00000;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	cvt.rzi.f32.f32 	%f20, %f19;
	fma.rn.f32 	%f21, %f20, 0fC0000000, 0f3F400000;
	abs.ftz.f32 	%f3, %f21;
	abs.ftz.f32 	%f4, %f2;
	mov.b32 	%r8, %f4;
	and.b32  	%r9, %r8, 8388607;
	or.b32  	%r10, %r9, 1065353216;
	mov.b32 	%f22, %r10;
	shr.u32 	%r11, %r8, 23;
	cvt.rn.f32.u32 	%f23, %r11;
	add.f32 	%f24, %f23, 0fC2FE0000;
	setp.gt.f32 	%p2, %f22, 0f3FB504F3;
	mul.f32 	%f25, %f22, 0f3F000000;
	add.f32 	%f26, %f24, 0f3F800000;
	selp.f32 	%f27, %f26, %f24, %p2;
	selp.f32 	%f28, %f25, %f22, %p2;
	add.f32 	%f29, %f28, 0fBF800000;
	add.f32 	%f17, %f28, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// end inline asm
	add.f32 	%f30, %f29, %f29;
	mul.f32 	%f31, %f16, %f30;
	mul.f32 	%f32, %f31, %f31;
	mov.f32 	%f33, 0f3C4CAF63;
	mov.f32 	%f34, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f35, %f34, %f32, %f33;
	mov.f32 	%f36, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f37, %f35, %f32, %f36;
	mul.rn.ftz.f32 	%f38, %f37, %f32;
	mul.rn.ftz.f32 	%f39, %f38, %f31;
	neg.f32 	%f40, %f16;
	fma.rn.f32 	%f41, %f40, %f30, %f29;
	add.f32 	%f42, %f41, %f41;
	neg.f32 	%f43, %f31;
	fma.rn.ftz.f32 	%f44, %f43, %f29, %f42;
	mul.rn.ftz.f32 	%f45, %f16, %f44;
	fma.rn.f32 	%f46, %f16, %f30, %f39;
	neg.f32 	%f47, %f46;
	fma.rn.f32 	%f48, %f16, %f30, %f47;
	add.f32 	%f49, %f39, %f48;
	add.f32 	%f50, %f45, %f49;
	add.f32 	%f51, %f46, %f50;
	sub.f32 	%f52, %f46, %f51;
	add.f32 	%f53, %f50, %f52;
	mov.f32 	%f54, 0f3F317200;
	mul.rn.ftz.f32 	%f55, %f27, %f54;
	mov.f32 	%f56, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f57, %f27, %f56;
	add.f32 	%f58, %f55, %f51;
	sub.f32 	%f59, %f55, %f58;
	add.f32 	%f60, %f51, %f59;
	add.f32 	%f61, %f53, %f60;
	add.f32 	%f62, %f57, %f61;
	add.f32 	%f63, %f58, %f62;
	sub.f32 	%f64, %f58, %f63;
	add.f32 	%f65, %f62, %f64;
	mov.f32 	%f66, 0f3F400000;
	abs.ftz.f32 	%f5, %f66;
	setp.gt.f32 	%p3, %f5, 0f77F684DF;
	selp.f32 	%f67, 0f38C00000, 0f3F400000, %p3;
	mul.rn.ftz.f32 	%f6, %f67, %f63;
	neg.f32 	%f68, %f6;
	fma.rn.ftz.f32 	%f69, %f67, %f63, %f68;
	fma.rn.ftz.f32 	%f70, %f67, %f65, %f69;
	mov.f32 	%f71, 0f00000000;
	fma.rn.ftz.f32 	%f7, %f71, %f63, %f70;
	add.rn.ftz.f32 	%f8, %f6, %f7;
	mov.b32 	%r1, %f8;
	setp.eq.s32 	%p4, %r1, 1118925336;
	selp.f32 	%f72, 0f42B17217, %f8, %p4;
	mov.f32 	%f73, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f74, %f72, %f73;
	cvt.rzi.f32.f32 	%f75, %f74;
	abs.ftz.f32 	%f76, %f75;
	setp.gt.f32 	%p5, %f76, 0f42FC0000;
	mov.f32 	%f77, 0f42FC0000;
	copysign.f32 	%f78, %f75, %f77;
	selp.f32 	%f79, %f78, %f75, %p5;
	mov.f32 	%f80, 0fBF317218;
	fma.rn.ftz.f32 	%f81, %f79, %f80, %f72;
	mov.f32 	%f82, 0f3102E308;
	fma.rn.ftz.f32 	%f83, %f79, %f82, %f81;
	mul.f32 	%f84, %f83, 0f3FB8AA3B;
	add.f32 	%f85, %f79, 0f4B40007F;
	mov.b32 	%r12, %f85;
	shl.b32 	%r13, %r12, 23;
	mov.b32 	%f86, %r13;
	ex2.approx.ftz.f32 	%f87, %f84;
	mul.f32 	%f9, %f87, %f86;
	setp.eq.f32 	%p6, %f9, 0f7F800000;
	mov.f32 	%f98, 0f7F800000;
	@%p6 bra 	$L__BB0_2;
// %bb.1:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f88, %f8;
	add.rn.ftz.f32 	%f89, %f6, %f88;
	add.rn.ftz.f32 	%f90, %f89, %f7;
	add.f32 	%f91, %f90, 0f37000000;
	selp.f32 	%f92, %f91, %f90, %p4;
	fma.rn.ftz.f32 	%f98, %f9, %f92, %f9;
$L__BB0_2:                              // %__internal_accurate_powf.exit.i
	.loc	1 0 31                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:31
	ld.param.u64 	%rd2, [triton_poi_fused_add_div_mul_pow_0_param_1];
	cvt.s64.s32 	%rd1, %r7;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	setp.eq.f32 	%p8, %f3, 0f3F800000;
	setp.eq.f32 	%p9, %f2, 0f00000000;
	add.f32 	%f93, %f2, %f2;
	selp.f32 	%f94, %f93, 0f00000000, %p8;
	selp.f32 	%f99, %f94, %f98, %p9;
	add.f32 	%f95, %f4, %f5;
	mov.b32 	%r14, %f95;
	setp.lt.s32 	%p10, %r14, 2139095040;
	@%p10 bra 	$L__BB0_10;
// %bb.3:                               // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p11, %f4, %f4;
	@%p11 bra 	$L__BB0_5;
// %bb.4:                               // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p12, %f5, %f5;
	@%p12 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:                              // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p13, %f5, 0f7F800000;
	@%p13 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p15, %f4, 0f3F800000;
	selp.f32 	%f99, 0f7F800000, 0f00000000, %p15;
	bra.uni 	$L__BB0_10;
$L__BB0_8:                              // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p14, %f4, 0f7F800000;
	@%p14 bra 	$L__BB0_10;
// %bb.9:
	.loc	1 0 31                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:0:31
	mov.f32 	%f99, 0f7F800000;
$L__BB0_10:                             // %__nv_powf.exit
	cvt.u32.u64 	%r19, %rd1;
	.loc	1 23 21                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:23:21
	setp.lt.s32 	%p16, %r19, 256;
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	setp.eq.f32 	%p17, %f2, 0f3F800000;
	selp.f32 	%f97, 0f3F800000, %f99, %p17;
	.loc	1 33 18                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:33:18
	mov.b32 	%r17, %f97;
	// begin inline asm
	div.full.f32 %r18, %r20, %r17;
	// end inline asm
	.loc	1 34 25                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:25
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd6, %rd2, %rd7;
	.loc	1 34 36                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:36
	// begin inline asm
	@%p16 st.global.b32 [ %rd6 + 0 ], { %r18 };
	// end inline asm
	.loc	1 34 4                          // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:34:4
	ret;
$L__BB0_5:
	.loc	1 32 31                         // cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py:32:31
	add.f32 	%f99, %f2, 0f3F400000;
	bra.uni 	$L__BB0_10;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nm/cnm4rw2nsln5q5vmhfv5tiayi4vtrms67pib2qb623tlhdrhafa2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 109
.b8 52
.b8 114
.b8 119
.b8 50
.b8 110
.b8 115
.b8 108
.b8 110
.b8 53
.b8 113
.b8 53
.b8 118
.b8 109
.b8 104
.b8 102
.b8 118
.b8 53
.b8 116
.b8 105
.b8 97
.b8 121
.b8 105
.b8 52
.b8 118
.b8 116
.b8 114
.b8 109
.b8 115
.b8 54
.b8 55
.b8 112
.b8 105
.b8 98
.b8 50
.b8 113
.b8 98
.b8 54
.b8 50
.b8 51
.b8 116
.b8 108
.b8 104
.b8 100
.b8 114
.b8 104
.b8 97
.b8 102
.b8 97
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 109
.b8 0
	}
	.section	.debug_macinfo	{	}
