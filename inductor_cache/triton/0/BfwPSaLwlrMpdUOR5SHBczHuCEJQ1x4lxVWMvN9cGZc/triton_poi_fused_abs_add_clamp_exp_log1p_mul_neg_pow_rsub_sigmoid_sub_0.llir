; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %11) #2, !dbg !18
  %17 = bitcast i32 %16 to float, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %11) #2, !dbg !20
  %20 = fsub float 0.000000e+00, %17, !dbg !21
  %21 = fmul float %20, 0x3FF7154760000000, !dbg !25
  %22 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %21) #2, !dbg !25
  %23 = fadd float %22, 1.000000e+00, !dbg !26
  %24 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %23) #2, !dbg !27
  %25 = tail call float @llvm.fabs.f32(float %17), !dbg !28
  %26 = fsub float 0.000000e+00, %25, !dbg !29
  %27 = fmul float %26, 0x3FF7154760000000, !dbg !30
  %28 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %27) #2, !dbg !30
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not.i = icmp eq i32 %29, 0, !dbg !31
  %30 = tail call float @llvm.nvvm.add.rz.ftz.f(float %28, float 1.000000e+00) #2, !dbg !31
  %31 = tail call float @llvm.nvvm.add.rz.f(float %28, float 1.000000e+00) #2, !dbg !31
  %.01.i = select i1 %.not.i, float %31, float %30, !dbg !31
  %32 = bitcast float %.01.i to i32, !dbg !31
  %33 = add i32 %32, -1061158912, !dbg !31
  %34 = and i32 %33, -8388608, !dbg !31
  %35 = bitcast float %28 to i32, !dbg !31
  %36 = sub i32 %35, %34, !dbg !31
  %37 = bitcast i32 %36 to float, !dbg !31
  %38 = sub i32 1082130432, %34, !dbg !31
  %39 = bitcast i32 %38 to float, !dbg !31
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not14.i = icmp eq i32 %40, 0, !dbg !31
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %39, float -1.000000e+00) #2, !dbg !31
  %42 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %39, float -1.000000e+00) #2, !dbg !31
  %.09.i = select i1 %.not14.i, float %42, float %41, !dbg !31
  %43 = fadd float %.09.i, %37, !dbg !31
  %44 = sitofp i32 %34 to float, !dbg !31
  %45 = fmul float %44, 0x3E80000000000000, !dbg !31
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not15.i = icmp eq i32 %46, 0, !dbg !31
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %43, float 0x3FBB000240000000) #2, !dbg !31
  %48 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %43, float 0x3FBB000240000000) #2, !dbg !31
  %.012.i = select i1 %.not15.i, float %48, float %47, !dbg !31
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not16.i = icmp eq i32 %49, 0, !dbg !31
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %43, float 0xBFC0EF1C00000000) #2, !dbg !31
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %43, float 0xBFC0EF1C00000000) #2, !dbg !31
  %.010.i = select i1 %.not16.i, float %51, float %50, !dbg !31
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not17.i = icmp eq i32 %52, 0, !dbg !31
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %43, float 0x3FC28C8EA0000000) #2, !dbg !31
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %43, float 0x3FC28C8EA0000000) #2, !dbg !31
  %.06.i = select i1 %.not17.i, float %54, float %53, !dbg !31
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not18.i = icmp eq i32 %55, 0, !dbg !31
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %43, float 0xBFC54D1BA0000000) #2, !dbg !31
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %43, float 0xBFC54D1BA0000000) #2, !dbg !31
  %.02.i = select i1 %.not18.i, float %57, float %56, !dbg !31
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not19.i = icmp eq i32 %58, 0, !dbg !31
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %43, float 0x3FC995F3C0000000) #2, !dbg !31
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %43, float 0x3FC995F3C0000000) #2, !dbg !31
  %.0.i = select i1 %.not19.i, float %60, float %59, !dbg !31
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not20.i = icmp eq i32 %61, 0, !dbg !31
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %43, float 0xBFD0000840000000) #2, !dbg !31
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %43, float 0xBFD0000840000000) #2, !dbg !31
  %.011.i = select i1 %.not20.i, float %63, float %62, !dbg !31
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not21.i = icmp eq i32 %64, 0, !dbg !31
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %43, float 0x3FD5555CC0000000) #2, !dbg !31
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %43, float 0x3FD5555CC0000000) #2, !dbg !31
  %.08.i = select i1 %.not21.i, float %66, float %65, !dbg !31
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not22.i = icmp eq i32 %67, 0, !dbg !31
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %43, float -5.000000e-01) #2, !dbg !31
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %43, float -5.000000e-01) #2, !dbg !31
  %.07.i = select i1 %.not22.i, float %69, float %68, !dbg !31
  %70 = fmul float %43, %.07.i, !dbg !31
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not23.i = icmp eq i32 %71, 0, !dbg !31
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float %43, float %43) #2, !dbg !31
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %70, float %43, float %43) #2, !dbg !31
  %.05.i = select i1 %.not23.i, float %73, float %72, !dbg !31
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not24.i = icmp eq i32 %74, 0, !dbg !31
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !31
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %45, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !31
  %.04.i = select i1 %.not24.i, float %76, float %75, !dbg !31
  %77 = icmp ugt i32 %35, 2139095039, !dbg !31
  br i1 %77, label %78, label %__nv_log1pf.exit, !dbg !31

78:                                               ; preds = %5
  %79 = icmp sgt i32 %35, -1082130432, !dbg !31
  br i1 %79, label %__nv_fmaf_rn.exit.i, label %83, !dbg !31

__nv_fmaf_rn.exit.i:                              ; preds = %78
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not25.i = icmp eq i32 %80, 0, !dbg !31
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %28, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %28, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %.03.i = select i1 %.not25.i, float %82, float %81, !dbg !31
  br label %83, !dbg !31

83:                                               ; preds = %__nv_fmaf_rn.exit.i, %78
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %78 ], !dbg !31
  %84 = fcmp oeq float %28, 0.000000e+00, !dbg !31
  %r.1.i = select i1 %84, float -0.000000e+00, float %r.0.i, !dbg !31
  br label %__nv_log1pf.exit, !dbg !31

__nv_log1pf.exit:                                 ; preds = %5, %83
  %r.2.i = phi float [ %r.1.i, %83 ], [ %.04.i, %5 ], !dbg !31
  %.inv = fcmp ole float %17, 0.000000e+00, !dbg !32
  %85 = select i1 %.inv, float 0.000000e+00, float %17, !dbg !32
  %86 = bitcast i32 %14 to float, !dbg !16
  %87 = fmul float %86, %17, !dbg !36
  %88 = fsub float %85, %87, !dbg !37
  %89 = fmul float %24, %86, !dbg !38
  %90 = fsub float 1.000000e+00, %86, !dbg !39
  %91 = fsub float 1.000000e+00, %24, !dbg !40
  %92 = fmul float %90, %91, !dbg !41
  %93 = fadd float %89, %92, !dbg !42
  %94 = fsub float 1.000000e+00, %93, !dbg !43
  %95 = fmul float %94, %94, !dbg !44
  %96 = fmul float %86, 2.500000e-01, !dbg !45
  %97 = fmul float %90, 7.500000e-01, !dbg !46
  %98 = fadd float %96, %97, !dbg !47
  %99 = fmul float %98, %95, !dbg !48
  %100 = bitcast i32 %19 to float, !dbg !20
  %101 = fadd float %88, %r.2.i, !dbg !49
  %102 = fmul float %99, %101, !dbg !50
  %103 = fmul float %102, %100, !dbg !51
  %104 = getelementptr float, ptr addrspace(1) %3, i64 %12, !dbg !52
  %105 = bitcast float %103 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %105, ptr addrspace(1) %104, i1 %11) #2, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cilawbwt4nflnmpcdlzjxq6fmqp72ok2nkyntgntvgtbqsibw2kx.py", directory: "inductor_cache/il")
!4 = !{ptr @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0", linkageName: "triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 31, scope: !7)
!20 = !DILocation(line: 27, column: 36, scope: !7)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 28, column: 22, scope: !7)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 47, column: 24, scope: !7)
!29 = !DILocation(line: 48, column: 13, scope: !7)
!30 = !DILocation(line: 49, column: 24, scope: !7)
!31 = !DILocation(line: 50, column: 28, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 44, column: 41, scope: !7)
!36 = !DILocation(line: 45, column: 19, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 29, column: 18, scope: !7)
!39 = !DILocation(line: 31, column: 18, scope: !7)
!40 = !DILocation(line: 32, column: 18, scope: !7)
!41 = !DILocation(line: 33, column: 18, scope: !7)
!42 = !DILocation(line: 34, column: 18, scope: !7)
!43 = !DILocation(line: 35, column: 18, scope: !7)
!44 = !DILocation(line: 36, column: 19, scope: !7)
!45 = !DILocation(line: 38, column: 19, scope: !7)
!46 = !DILocation(line: 40, column: 19, scope: !7)
!47 = !DILocation(line: 41, column: 20, scope: !7)
!48 = !DILocation(line: 42, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 20, scope: !7)
!50 = !DILocation(line: 52, column: 20, scope: !7)
!51 = !DILocation(line: 53, column: 20, scope: !7)
!52 = !DILocation(line: 54, column: 25, scope: !7)
!53 = !DILocation(line: 54, column: 37, scope: !7)
!54 = !DILocation(line: 54, column: 4, scope: !7)
