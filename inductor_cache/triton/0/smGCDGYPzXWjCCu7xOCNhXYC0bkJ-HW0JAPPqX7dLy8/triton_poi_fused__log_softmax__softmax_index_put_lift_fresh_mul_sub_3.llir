; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = sext i32 %10 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #2, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = shl nsw i32 %12, 2, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #2, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = or disjoint i32 %17, 1, !dbg !21
  %23 = sext i32 %22 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !22
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #2, !dbg !23
  %26 = bitcast i32 %25 to float, !dbg !23
  %27 = or disjoint i32 %17, 2, !dbg !24
  %28 = sext i32 %27 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #2, !dbg !26
  %31 = bitcast i32 %30 to float, !dbg !26
  %32 = or disjoint i32 %17, 3, !dbg !27
  %33 = sext i32 %32 to i64, !dbg !28
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !28
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %11) #2, !dbg !29
  %36 = bitcast i32 %35 to float, !dbg !29
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !30
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #2, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !32
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #2, !dbg !33
  %41 = bitcast i32 %40 to float, !dbg !33
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %23, !dbg !34
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %11) #2, !dbg !35
  %44 = bitcast i32 %43 to float, !dbg !35
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !36
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %11) #2, !dbg !37
  %47 = bitcast i32 %46 to float, !dbg !37
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !38
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %11) #2, !dbg !39
  %50 = bitcast i32 %49 to float, !dbg !39
  %51 = sext i32 %12 to i64, !dbg !40
  %52 = getelementptr i64, ptr addrspace(1) %3, i64 %51, !dbg !40
  %53 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %52, i1 %11) #2, !dbg !41
  %54 = fadd float %21, %26, !dbg !42
  %55 = fadd float %54, %31, !dbg !43
  %56 = fadd float %55, %36, !dbg !44
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %16, float %56) #2, !dbg !45
  %58 = fmul float %41, 0x3FF7154760000000, !dbg !46
  %59 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %58) #2, !dbg !46
  %60 = fmul float %44, 0x3FF7154760000000, !dbg !47
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #2, !dbg !47
  %62 = fadd float %59, %61, !dbg !48
  %63 = fmul float %47, 0x3FF7154760000000, !dbg !49
  %64 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %63) #2, !dbg !49
  %65 = fadd float %62, %64, !dbg !50
  %66 = fmul float %50, 0x3FF7154760000000, !dbg !51
  %67 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %66) #2, !dbg !51
  %68 = fadd float %65, %67, !dbg !52
  %69 = fcmp olt float %68, 0x3810000000000000, !dbg !53
  %70 = fmul float %68, 0x4160000000000000, !dbg !53
  %.02.i = select i1 %69, float %70, float %68, !dbg !53
  %i.i.0.i = select i1 %69, float -2.300000e+01, float 0.000000e+00, !dbg !53
  %71 = bitcast float %.02.i to i32, !dbg !53
  %72 = add i32 %71, -1059760811, !dbg !53
  %73 = and i32 %72, -8388608, !dbg !53
  %74 = sub i32 %71, %73, !dbg !53
  %75 = bitcast i32 %74 to float, !dbg !53
  %76 = sitofp i32 %73 to float, !dbg !53
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not.i = icmp eq i32 %77, 0, !dbg !53
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %76, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !53
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %76, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !53
  %.08.i = select i1 %.not.i, float %79, float %78, !dbg !53
  %80 = fadd float %75, -1.000000e+00, !dbg !53
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not1.i = icmp eq i32 %81, 0, !dbg !53
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %80, float 0x3FC2073EC0000000) #2, !dbg !53
  %83 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %80, float 0x3FC2073EC0000000) #2, !dbg !53
  %.010.i = select i1 %.not1.i, float %83, float %82, !dbg !53
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not2.i = icmp eq i32 %84, 0, !dbg !53
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %80, float 0xBFBF19B980000000) #2, !dbg !53
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %80, float 0xBFBF19B980000000) #2, !dbg !53
  %.011.i = select i1 %.not2.i, float %86, float %85, !dbg !53
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not3.i = icmp eq i32 %87, 0, !dbg !53
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %80, float 0x3FC1E52AA0000000) #2, !dbg !53
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %80, float 0x3FC1E52AA0000000) #2, !dbg !53
  %.012.i = select i1 %.not3.i, float %89, float %88, !dbg !53
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not4.i = icmp eq i32 %90, 0, !dbg !53
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %80, float 0xBFC55B1720000000) #2, !dbg !53
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %80, float 0xBFC55B1720000000) #2, !dbg !53
  %.09.i = select i1 %.not4.i, float %92, float %91, !dbg !53
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not5.i = icmp eq i32 %93, 0, !dbg !53
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %80, float 0x3FC99DA160000000) #2, !dbg !53
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %80, float 0x3FC99DA160000000) #2, !dbg !53
  %.05.i = select i1 %.not5.i, float %95, float %94, !dbg !53
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not6.i = icmp eq i32 %96, 0, !dbg !53
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %80, float 0xBFCFFFE440000000) #2, !dbg !53
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %80, float 0xBFCFFFE440000000) #2, !dbg !53
  %.01.i = select i1 %.not6.i, float %98, float %97, !dbg !53
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not7.i = icmp eq i32 %99, 0, !dbg !53
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %80, float 0x3FD5554F00000000) #2, !dbg !53
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %80, float 0x3FD5554F00000000) #2, !dbg !53
  %.0.i = select i1 %.not7.i, float %101, float %100, !dbg !53
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not8.i = icmp eq i32 %102, 0, !dbg !53
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %80, float -5.000000e-01) #2, !dbg !53
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %80, float -5.000000e-01) #2, !dbg !53
  %.07.i = select i1 %.not8.i, float %104, float %103, !dbg !53
  %105 = fmul float %80, %.07.i, !dbg !53
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not9.i = icmp eq i32 %106, 0, !dbg !53
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float %80, float %80) #2, !dbg !53
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %105, float %80, float %80) #2, !dbg !53
  %.06.i = select i1 %.not9.i, float %108, float %107, !dbg !53
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not10.i = icmp eq i32 %109, 0, !dbg !53
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !53
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !53
  %.04.i = select i1 %.not10.i, float %111, float %110, !dbg !53
  %112 = icmp ugt i32 %71, 2139095039, !dbg !53
  br i1 %112, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !53

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !53
  %.not11.i = icmp eq i32 %113, 0, !dbg !53
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !53
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !53
  %.03.i = select i1 %.not11.i, float %115, float %114, !dbg !53
  br label %__nv_logf.exit, !dbg !53

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !53
  %116 = fadd float %57, 0xBFD5555560000000, !dbg !54
  %117 = bitcast i32 %38 to float, !dbg !31
  %118 = mul i32 %12, 4, !dbg !55
  %.decomposed = sub i32 %.frozen, %118, !dbg !55
  %119 = and i32 %8, 16, !dbg !12
  %120 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !53
  %r.i.1.i = select i1 %120, float 0xFFF0000000000000, float %r.i.0.i, !dbg !53
  %121 = fsub float %117, %r.i.1.i, !dbg !56
  %122 = fmul float %116, %121, !dbg !57
  %123 = sext i32 %.decomposed to i64, !dbg !58
  %124 = icmp eq i64 %53, %123, !dbg !58
  %125 = fmul float %122, 0x3FC3333340000000, !dbg !59
  %126 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !60
  %127 = icmp eq i32 %119, 0, !dbg !61
  %128 = bitcast float %125 to i32, !dbg !61
  %129 = select i1 %124, i32 0, i32 %128, !dbg !62
  %130 = and i1 %127, %11, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %129, ptr addrspace(1) %126, i1 %130) #2, !dbg !61
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuz37itdn43h4za53elasixosjvd5g3zglm3y6gfoo57gmxcfeb2.py", directory: "inductor_cache/uz")
!4 = !{ptr @triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3", linkageName: "triton_poi_fused__log_softmax__softmax_index_put_lift_fresh_mul_sub_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 30, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 28, column: 32, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 37, scope: !7)
!21 = !DILocation(line: 29, column: 34, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 34, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 41, scope: !7)
!27 = !DILocation(line: 31, column: 34, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 32, column: 31, scope: !7)
!31 = !DILocation(line: 32, column: 36, scope: !7)
!32 = !DILocation(line: 33, column: 31, scope: !7)
!33 = !DILocation(line: 33, column: 38, scope: !7)
!34 = !DILocation(line: 34, column: 31, scope: !7)
!35 = !DILocation(line: 34, column: 42, scope: !7)
!36 = !DILocation(line: 35, column: 31, scope: !7)
!37 = !DILocation(line: 35, column: 42, scope: !7)
!38 = !DILocation(line: 36, column: 31, scope: !7)
!39 = !DILocation(line: 36, column: 42, scope: !7)
!40 = !DILocation(line: 37, column: 31, scope: !7)
!41 = !DILocation(line: 37, column: 36, scope: !7)
!42 = !DILocation(line: 38, column: 18, scope: !7)
!43 = !DILocation(line: 39, column: 18, scope: !7)
!44 = !DILocation(line: 40, column: 18, scope: !7)
!45 = !DILocation(line: 41, column: 18, scope: !7)
!46 = !DILocation(line: 44, column: 24, scope: !7)
!47 = !DILocation(line: 45, column: 24, scope: !7)
!48 = !DILocation(line: 46, column: 20, scope: !7)
!49 = !DILocation(line: 47, column: 24, scope: !7)
!50 = !DILocation(line: 48, column: 20, scope: !7)
!51 = !DILocation(line: 49, column: 24, scope: !7)
!52 = !DILocation(line: 50, column: 20, scope: !7)
!53 = !DILocation(line: 51, column: 24, scope: !7)
!54 = !DILocation(line: 43, column: 19, scope: !7)
!55 = !DILocation(line: 26, column: 19, scope: !7)
!56 = !DILocation(line: 52, column: 20, scope: !7)
!57 = !DILocation(line: 53, column: 20, scope: !7)
!58 = !DILocation(line: 55, column: 21, scope: !7)
!59 = !DILocation(line: 61, column: 20, scope: !7)
!60 = !DILocation(line: 63, column: 28, scope: !7)
!61 = !DILocation(line: 63, column: 40, scope: !7)
!62 = !DILocation(line: 62, column: 35, scope: !7)
!63 = !DILocation(line: 63, column: 4, scope: !7)
