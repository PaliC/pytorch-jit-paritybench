//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_embedding_mean_pow_sub_3 // -- Begin function triton_red_fused_add_embedding_mean_pow_sub_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 121, 110, 47, 99, 121, 110, 115, 55, 106, 105, 103, 120, 97, 54, 112, 103, 117, 115, 122, 103, 101, 55, 108, 120, 121, 117, 51, 108, 102, 120, 116, 104, 97, 109, 122, 98, 109, 112, 105, 97, 115, 117, 122, 108, 111, 107, 101, 114, 119, 103, 114, 53, 122, 121, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_add_embedding_mean_pow_sub_3
.visible .entry triton_red_fused_add_embedding_mean_pow_sub_3(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_4,
	.param .u32 triton_red_fused_add_embedding_mean_pow_sub_3_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<43>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<28>;
$L__func_begin0:

// %bb.0:
	.loc	1 25 33                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:25:33
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd9, [triton_red_fused_add_embedding_mean_pow_sub_3_param_1];
	and.b32  	%r5, %r1, 255;
	ld.param.u64 	%rd10, [triton_red_fused_add_embedding_mean_pow_sub_3_param_2];
	.loc	1 31 23                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:31:23
	bfe.u32 	%r6, %r1, 2, 6;
	.loc	1 33 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:34
	mul.wide.u32 	%rd11, %r5, 4;
	add.s64 	%rd6, %rd9, %rd11;
	mov.b32 	%r4, 0;
	mov.pred 	%p4, -1;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r3 }, [ %rd6 + 0 ];
	@!%p4 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 34 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:34
	mul.wide.u32 	%rd12, %r6, 8;
	add.s64 	%rd8, %rd10, %rd12;
	.loc	1 34 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:39
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	@!%p4 mov.u64 %rd7, 0x0;
	// end inline asm
	.loc	1 38 36                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:38:36
	shr.u64 	%rd13, %rd7, 61;
	and.b64  	%rd14, %rd13, 4;
	add.s64 	%rd2, %rd14, %rd7;
	.loc	1 39 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:41
	setp.lt.u64 	%p5, %rd2, 4;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 64                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:0:64
	ld.param.u64 	%rd5, [triton_red_fused_add_embedding_mean_pow_sub_3_param_4];
	ld.param.u64 	%rd4, [triton_red_fused_add_embedding_mean_pow_sub_3_param_3];
	ld.param.u64 	%rd17, [triton_red_fused_add_embedding_mean_pow_sub_3_param_0];
	cvt.u64.u32 	%rd1, %r5;
	cvt.u32.u64 	%r20, %rd1;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	mov.b32 	%f1, %r3;
	.loc	1 25 33                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:25:33
	and.b32  	%r21, %r1, 31;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	bar.sync 	0;
	.loc	1 40 43                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:43
	shl.b32 	%r22, %r1, 2;
	and.b32  	%r23, %r22, 12;
	.loc	1 40 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:41
	cvt.u64.u32 	%rd18, %r23;
	or.b64  	%rd19, %rd2, %rd18;
	.loc	1 40 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:34
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd15, %rd4, %rd20;
	.loc	1 40 48                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:48
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r7 }, [ %rd15 + 0 ];
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f2, %r7;
	.loc	1 41 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:41:22
	sub.f32 	%f3, %f2, %f1;
	.loc	1 42 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:42:22
	add.f32 	%f4, %f3, %f1;
	.loc	1 43 23                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:43:23
	mul.f32 	%f5, %f3, %f3;
	.loc	1 47 29                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:29
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd16, %rd5, %rd21;
	.loc	1 47 75                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:75
	mov.b32 	%r9, %f4;
	// begin inline asm
	@%p4 st.global.b32 [ %rd16 + 0 ], { %r9 };
	// end inline asm
$L__tmp0:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f5;
	shfl.sync.bfly.b32	%r25, %r24, 16, 31, -1;
	mov.b32 	%f6, %r25;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f7, %f3, %f3, %f6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f7;
	shfl.sync.bfly.b32	%r27, %r26, 8, 31, -1;
	mov.b32 	%f8, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f9;
	shfl.sync.bfly.b32	%r29, %r28, 4, 31, -1;
	mov.b32 	%f10, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f11;
	shfl.sync.bfly.b32	%r31, %r30, 2, 31, -1;
	mov.b32 	%f12, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f13;
	shfl.sync.bfly.b32	%r33, %r32, 1, 31, -1;
	mov.b32 	%f14, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r21, 0;
	shr.u32 	%r34, %r1, 3;
	and.b32  	%r35, %r34, 28;
	mov.u32 	%r36, global_smem;
	add.s32 	%r10, %r36, %r35;
	mov.b32 	%r11, %f15;
	// begin inline asm
	@%p9 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r1, 8;
	add.s32 	%r13, %r36, %r22;
	// begin inline asm
	@%p10 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r12;
	shfl.sync.bfly.b32	%r37, %r12, 4, 31, -1;
	mov.b32 	%f17, %r37;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f18;
	shfl.sync.bfly.b32	%r39, %r38, 2, 31, -1;
	mov.b32 	%f19, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f20;
	shfl.sync.bfly.b32	%r41, %r40, 1, 31, -1;
	mov.b32 	%f21, %r41;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r42, %r1, 7;
	setp.eq.s32 	%p13, %r42, 0;
	and.pred  	%p11, %p10, %p13;
	mov.b32 	%r15, %f22;
	// begin inline asm
	@%p11 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
$L__tmp1:
	.loc	1 50 20                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:50:20
	ld.shared.u32 	%r17, [global_smem];
	mov.b32 	%r18, 1132462080;
	// begin inline asm
	div.full.f32 %r19, %r17, %r18;
	// end inline asm
	.loc	1 51 4                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:51:4
	bar.sync 	0;
	.loc	1 52 71                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:52:71
	setp.eq.s32 	%p12, %r20, 0;
	// begin inline asm
	@%p12 st.global.b32 [ %rd17 + 0 ], { %r19 };
	// end inline asm
	.loc	1 52 4                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:52:4
	ret;
$L__BB0_1:
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	mov.u64 	%rd22, assertMessage_0;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, assertFile_0;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, assertFunc_0;
	cvta.global.u64 	%rd27, %rd26;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd23;
	.param .b64 param1;
	st.param.b64 	[param1], %rd25;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd27;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 190                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 110
.b8 115
.b8 55
.b8 106
.b8 105
.b8 103
.b8 120
.b8 97
.b8 54
.b8 112
.b8 103
.b8 117
.b8 115
.b8 122
.b8 103
.b8 101
.b8 55
.b8 108
.b8 120
.b8 121
.b8 117
.b8 51
.b8 108
.b8 102
.b8 120
.b8 116
.b8 104
.b8 97
.b8 109
.b8 122
.b8 98
.b8 109
.b8 112
.b8 105
.b8 97
.b8 115
.b8 117
.b8 122
.b8 108
.b8 111
.b8 107
.b8 101
.b8 114
.b8 119
.b8 103
.b8 114
.b8 53
.b8 122
.b8 121
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x30 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x93:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
