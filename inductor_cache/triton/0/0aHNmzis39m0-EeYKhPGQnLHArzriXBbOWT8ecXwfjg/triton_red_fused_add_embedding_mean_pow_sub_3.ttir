#loc = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0)
#loc1 = loc(unknown)
#loc32 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":48:27)
#loc41 = loc(callsite(#loc1 at #loc32))
module {
  tt.func public @triton_red_fused_add_embedding_mean_pow_sub_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<4> : tensor<1x256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<2.560000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<1x256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<256> : tensor<1x256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<true> : tensor<1x256xi1> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_3 : tensor<1x256xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_2 : tensor<1x256xi32> loc(#loc5)
    %4 = arith.remsi %1, %cst_2 : tensor<1x256xi32> loc(#loc6)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc7)
    %6 = tt.addptr %5, %1 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc7)
    %7 = tt.load %6, %2, %cst_4 evictionPolicy = evict_first : tensor<1x256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<1x256x!tt.ptr<i64>> loc(#loc9)
    %9 = tt.addptr %8, %3 : tensor<1x256x!tt.ptr<i64>>, tensor<1x256xi32> loc(#loc9)
    %10 = tt.load %9, %2, %cst_0 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<i64>> loc(#loc10)
    %11 = arith.addi %10, %cst : tensor<1x256xi64> loc(#loc11)
    %12 = arith.cmpi slt, %10, %cst_0 : tensor<1x256xi64> loc(#loc12)
    %13 = arith.select %12, %11, %10 : tensor<1x256xi1>, tensor<1x256xi64> loc(#loc13)
    %14 = arith.cmpi sge, %13, %cst_0 : tensor<1x256xi64> loc(#loc14)
    %15 = arith.cmpi slt, %13, %cst : tensor<1x256xi64> loc(#loc15)
    %16 = arith.andi %14, %15 : tensor<1x256xi1> loc(#loc16)
    %17 = arith.xori %2, %cst_5 : tensor<1x256xi1> loc(#loc17)
    %18 = arith.ori %16, %17 : tensor<1x256xi1> loc(#loc18)
    tt.assert %18, "index out of bounds: 0 <= tmp5 < 4" : tensor<1x256xi1> loc(#loc19)
    %19 = arith.muli %4, %cst_2 : tensor<1x256xi32> loc(#loc20)
    %20 = arith.extsi %19 : tensor<1x256xi32> to tensor<1x256xi64> loc(#loc21)
    %21 = arith.addi %13, %20 : tensor<1x256xi64> loc(#loc21)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc22)
    %23 = tt.addptr %22, %21 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi64> loc(#loc22)
    %24 = tt.load %23, %2, %cst_4 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc23)
    %25 = arith.subf %24, %7 : tensor<1x256xf32> loc(#loc24)
    %26 = arith.addf %7, %25 : tensor<1x256xf32> loc(#loc25)
    %27 = arith.mulf %25, %25 : tensor<1x256xf32> loc(#loc26)
    %28 = arith.addf %27, %cst_4 : tensor<1x256xf32> loc(#loc27)
    %29 = arith.select %2, %28, %cst_4 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc28)
    %30 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc29)
    %31 = tt.addptr %30, %1 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc29)
    tt.store %31, %26, %2 : tensor<1x256x!tt.ptr<f32>> loc(#loc30)
    %32 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc32)), %arg7: f32 loc(callsite(#loc1 at #loc32))):
      %37 = arith.addf %arg6, %arg7 : f32 loc(#loc43)
      tt.reduce.return %37 : f32 loc(#loc40)
    }) : (tensor<1x256xf32>) -> tensor<1xf32> loc(#loc40)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc34)
    %34 = arith.divf %33, %cst_1 : tensor<1x1xf32> loc(#loc35)
    gpu.barrier loc(#loc36)
    %35 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc37)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    tt.store %36, %34 : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":25:25)
#loc3 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":25:33)
#loc4 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":29:25)
#loc5 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":31:23)
#loc6 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":32:23)
#loc7 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":33:34)
#loc8 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":33:39)
#loc9 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":34:34)
#loc10 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":34:39)
#loc11 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":36:22)
#loc12 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":37:22)
#loc13 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":38:36)
#loc14 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:32)
#loc15 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:48)
#loc16 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:41)
#loc17 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:56)
#loc18 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:54)
#loc19 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":39:64)
#loc20 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":40:43)
#loc21 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":40:41)
#loc22 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":40:34)
#loc23 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":40:48)
#loc24 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":41:22)
#loc25 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":42:22)
#loc26 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":43:23)
#loc27 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":45:25)
#loc28 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":46:40)
#loc29 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":47:29)
#loc30 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":47:75)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc34 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":48:30)
#loc35 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":50:20)
#loc36 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":51:4)
#loc37 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":52:28)
#loc38 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":52:71)
#loc39 = loc("inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py":52:4)
#loc40 = loc(callsite(#loc31 at #loc32))
#loc42 = loc(callsite(#loc33 at #loc31))
#loc43 = loc(callsite(#loc42 at #loc32))
