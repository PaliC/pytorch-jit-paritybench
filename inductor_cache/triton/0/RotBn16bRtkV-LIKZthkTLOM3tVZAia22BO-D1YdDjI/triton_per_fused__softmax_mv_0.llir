; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = icmp slt i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = icmp samesign ult i32 %9, 17, !dbg !13
  %11 = mul i32 %6, 17, !dbg !14
  %12 = add i32 %11, %9, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !16
  %15 = and i1 %10, %7, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %15, i32 0, i1 %15) #2, !dbg !18
  %17 = bitcast i32 %16 to float, !dbg !18
  %18 = zext nneg i32 %9 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %10, i32 0, i1 %10) #2, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = select i1 %15, float %17, float 0xFFF0000000000000, !dbg !21
  %23 = bitcast float %22 to i32, !dbg !22
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 16, i32 31), !dbg !22
  %25 = bitcast i32 %24 to float, !dbg !22
  %26 = fcmp ogt float %22, %25, !dbg !26
  %27 = fcmp uno float %22, 0.000000e+00, !dbg !28
  %28 = or i1 %27, %26, !dbg !29
  %29 = select i1 %28, float %22, float %25, !dbg !30
  %30 = bitcast float %29 to i32, !dbg !22
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 8, i32 31), !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = fcmp ogt float %29, %32, !dbg !26
  %34 = fcmp uno float %29, 0.000000e+00, !dbg !28
  %35 = or i1 %33, %34, !dbg !29
  %36 = select i1 %35, float %29, float %32, !dbg !30
  %37 = bitcast float %36 to i32, !dbg !22
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 4, i32 31), !dbg !22
  %39 = bitcast i32 %38 to float, !dbg !22
  %40 = fcmp ogt float %36, %39, !dbg !26
  %41 = fcmp uno float %36, 0.000000e+00, !dbg !28
  %42 = or i1 %40, %41, !dbg !29
  %43 = select i1 %42, float %36, float %39, !dbg !30
  %44 = bitcast float %43 to i32, !dbg !22
  %45 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %44, i32 2, i32 31), !dbg !22
  %46 = bitcast i32 %45 to float, !dbg !22
  %47 = fcmp ogt float %43, %46, !dbg !26
  %48 = fcmp uno float %43, 0.000000e+00, !dbg !28
  %49 = or i1 %47, %48, !dbg !29
  %50 = select i1 %49, float %43, float %46, !dbg !30
  %51 = bitcast float %50 to i32, !dbg !22
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 1, i32 31), !dbg !22
  %53 = bitcast i32 %52 to float, !dbg !22
  %54 = fcmp ogt float %50, %53, !dbg !26
  %55 = fcmp uno float %50, 0.000000e+00, !dbg !28
  %56 = or i1 %54, %55, !dbg !29
  %57 = select i1 %56, float %50, float %53, !dbg !30
  %58 = fsub float %17, %57, !dbg !31
  %59 = fmul float %58, 0x3FF7154760000000, !dbg !32
  %60 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %59) #2, !dbg !32
  %61 = select i1 %15, float %60, float 0.000000e+00, !dbg !33
  %62 = bitcast float %61 to i32, !dbg !34
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 16, i32 31), !dbg !34
  %64 = bitcast i32 %63 to float, !dbg !34
  %65 = fadd float %61, %64, !dbg !38
  %66 = bitcast float %65 to i32, !dbg !34
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 8, i32 31), !dbg !34
  %68 = bitcast i32 %67 to float, !dbg !34
  %69 = fadd float %65, %68, !dbg !38
  %70 = bitcast float %69 to i32, !dbg !34
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 4, i32 31), !dbg !34
  %72 = bitcast i32 %71 to float, !dbg !34
  %73 = fadd float %69, %72, !dbg !38
  %74 = bitcast float %73 to i32, !dbg !34
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 2, i32 31), !dbg !34
  %76 = bitcast i32 %75 to float, !dbg !34
  %77 = fadd float %73, %76, !dbg !38
  %78 = bitcast float %77 to i32, !dbg !34
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 1, i32 31), !dbg !34
  %80 = bitcast i32 %79 to float, !dbg !34
  %81 = fadd float %77, %80, !dbg !38
  %82 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float %81) #2, !dbg !40
  %83 = fmul float %82, %21, !dbg !41
  %84 = select i1 %15, float %83, float 0.000000e+00, !dbg !42
  %85 = bitcast float %84 to i32, !dbg !43
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 16, i32 31), !dbg !43
  %87 = bitcast i32 %86 to float, !dbg !43
  %88 = fadd float %84, %87, !dbg !45
  %89 = bitcast float %88 to i32, !dbg !43
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 8, i32 31), !dbg !43
  %91 = bitcast i32 %90 to float, !dbg !43
  %92 = fadd float %88, %91, !dbg !45
  %93 = bitcast float %92 to i32, !dbg !43
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 4, i32 31), !dbg !43
  %95 = bitcast i32 %94 to float, !dbg !43
  %96 = fadd float %92, %95, !dbg !45
  %97 = bitcast float %96 to i32, !dbg !43
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 2, i32 31), !dbg !43
  %99 = bitcast i32 %98 to float, !dbg !43
  %100 = fadd float %96, %99, !dbg !45
  %101 = bitcast float %100 to i32, !dbg !43
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 1, i32 31), !dbg !43
  %103 = bitcast i32 %102 to float, !dbg !43
  %104 = fadd float %100, %103, !dbg !45
  %105 = sext i32 %6 to i64, !dbg !46
  %106 = getelementptr float, ptr addrspace(1) %0, i64 %105, !dbg !46
  %107 = and i32 %8, 63, !dbg !47
  %108 = icmp eq i32 %107, 0, !dbg !47
  %109 = bitcast float %104 to i32, !dbg !47
  %110 = and i1 %108, %7, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %109, ptr addrspace(1) %106, i1 %110) #2, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coobivytj7uukgsibhv4xns7olhfqah5ptzikvqhu6qhqigia5h7.py", directory: "inductor_cache/oo")
!4 = !{ptr @triton_per_fused__softmax_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_mv_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_mv_0", linkageName: "triton_per_fused__softmax_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 38, scope: !7)
!15 = !DILocation(line: 31, column: 35, scope: !7)
!16 = !DILocation(line: 31, column: 30, scope: !7)
!17 = !DILocation(line: 31, column: 51, scope: !7)
!18 = !DILocation(line: 31, column: 43, scope: !7)
!19 = !DILocation(line: 32, column: 31, scope: !7)
!20 = !DILocation(line: 32, column: 36, scope: !7)
!21 = !DILocation(line: 34, column: 41, scope: !7)
!22 = !DILocation(line: 131, column: 29, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 35, column: 37, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !25)
!27 = distinct !DILexicalBlockFile(scope: !23, file: !24, discriminator: 0)
!28 = !DILocation(line: 120, column: 21, scope: !27, inlinedAt: !25)
!29 = !DILocation(line: 120, column: 16, scope: !27, inlinedAt: !25)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !25)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 37, column: 23, scope: !7)
!33 = !DILocation(line: 39, column: 41, scope: !7)
!34 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = !DILocation(line: 40, column: 25, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !37)
!39 = distinct !DILexicalBlockFile(scope: !35, file: !36, discriminator: 0)
!40 = !DILocation(line: 41, column: 19, scope: !7)
!41 = !DILocation(line: 42, column: 20, scope: !7)
!42 = !DILocation(line: 44, column: 43, scope: !7)
!43 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !44)
!44 = !DILocation(line: 45, column: 26, scope: !7)
!45 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !44)
!46 = !DILocation(line: 46, column: 28, scope: !7)
!47 = !DILocation(line: 46, column: 40, scope: !7)
!48 = !DILocation(line: 46, column: 4, scope: !7)
