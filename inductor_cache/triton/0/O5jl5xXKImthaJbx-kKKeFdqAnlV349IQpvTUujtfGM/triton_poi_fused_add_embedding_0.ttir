#loc = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0)
module {
  tt.func public @triton_poi_fused_add_embedding_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<13> : tensor<256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<7> : tensor<256xi64> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_3 = arith.constant dense<24> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %cst_6 = arith.constant dense<true> : tensor<256xi1> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<12> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_11 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_10 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_9 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %4, %cst_10 : tensor<256xi32> loc(#loc10)
    %10 = arith.addi %7, %cst_8 : tensor<256xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_9 : tensor<256xi32> loc(#loc12)
    %12 = arith.addi %10, %11 : tensor<256xi32> loc(#loc13)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %14 = tt.addptr %13, %12 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %7, %cst_7 : tensor<256xi32> loc(#loc16)
    %17 = arith.addi %16, %11 : tensor<256xi32> loc(#loc17)
    %18 = tt.addptr %13, %17 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %20 = arith.addi %7, %cst_10 : tensor<256xi32> loc(#loc20)
    %21 = arith.addi %20, %11 : tensor<256xi32> loc(#loc21)
    %22 = tt.addptr %13, %21 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc22)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.addi %7, %11 : tensor<256xi32> loc(#loc24)
    %25 = tt.addptr %13, %24 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %27 = arith.fptosi %15 : tensor<256xf32> to tensor<256xi64> loc(#loc27)
    %28 = arith.addi %27, %cst_3 : tensor<256xi64> loc(#loc28)
    %29 = arith.cmpi slt, %27, %cst_2 : tensor<256xi64> loc(#loc29)
    %30 = arith.select %29, %28, %27 : tensor<256xi1>, tensor<256xi64> loc(#loc30)
    %31 = arith.cmpi sge, %30, %cst_2 : tensor<256xi64> loc(#loc31)
    %32 = arith.cmpi slt, %30, %cst_3 : tensor<256xi64> loc(#loc32)
    %33 = arith.andi %31, %32 : tensor<256xi1> loc(#loc33)
    %34 = arith.xori %5, %cst_6 : tensor<256xi1> loc(#loc34)
    %35 = arith.ori %33, %34 : tensor<256xi1> loc(#loc35)
    tt.assert %35, "index out of bounds: 0 <= tmp5 < 24" : tensor<256xi1> loc(#loc36)
    %36 = arith.muli %30, %cst_5 : tensor<256xi64> loc(#loc37)
    %37 = arith.extsi %9 : tensor<256xi32> to tensor<256xi64> loc(#loc38)
    %38 = arith.addi %37, %36 : tensor<256xi64> loc(#loc38)
    %39 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc39)
    %40 = tt.addptr %39, %38 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc39)
    %41 = tt.load %40, %5 : tensor<256x!tt.ptr<f32>> loc(#loc40)
    %42 = arith.fptosi %19 : tensor<256xf32> to tensor<256xi64> loc(#loc41)
    %43 = arith.addi %42, %cst_1 : tensor<256xi64> loc(#loc42)
    %44 = arith.cmpi slt, %42, %cst_2 : tensor<256xi64> loc(#loc43)
    %45 = arith.select %44, %43, %42 : tensor<256xi1>, tensor<256xi64> loc(#loc44)
    %46 = arith.cmpi sge, %45, %cst_2 : tensor<256xi64> loc(#loc45)
    %47 = arith.cmpi slt, %45, %cst_1 : tensor<256xi64> loc(#loc46)
    %48 = arith.andi %46, %47 : tensor<256xi1> loc(#loc47)
    %49 = arith.ori %48, %34 : tensor<256xi1> loc(#loc48)
    tt.assert %49, "index out of bounds: 0 <= tmp13 < 7" : tensor<256xi1> loc(#loc49)
    %50 = arith.muli %45, %cst_5 : tensor<256xi64> loc(#loc50)
    %51 = arith.addi %37, %50 : tensor<256xi64> loc(#loc51)
    %52 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc52)
    %53 = tt.addptr %52, %51 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc52)
    %54 = tt.load %53, %5 : tensor<256x!tt.ptr<f32>> loc(#loc53)
    %55 = arith.addf %41, %54 : tensor<256xf32> loc(#loc54)
    %56 = arith.fptosi %23 : tensor<256xf32> to tensor<256xi64> loc(#loc55)
    %57 = arith.addi %56, %cst_0 : tensor<256xi64> loc(#loc56)
    %58 = arith.cmpi slt, %56, %cst_2 : tensor<256xi64> loc(#loc57)
    %59 = arith.select %58, %57, %56 : tensor<256xi1>, tensor<256xi64> loc(#loc58)
    %60 = arith.cmpi sge, %59, %cst_2 : tensor<256xi64> loc(#loc59)
    %61 = arith.cmpi slt, %59, %cst_0 : tensor<256xi64> loc(#loc60)
    %62 = arith.andi %60, %61 : tensor<256xi1> loc(#loc61)
    %63 = arith.ori %62, %34 : tensor<256xi1> loc(#loc62)
    tt.assert %63, "index out of bounds: 0 <= tmp22 < 32" : tensor<256xi1> loc(#loc63)
    %64 = arith.muli %59, %cst_5 : tensor<256xi64> loc(#loc64)
    %65 = arith.addi %37, %64 : tensor<256xi64> loc(#loc65)
    %66 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc66)
    %67 = tt.addptr %66, %65 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc66)
    %68 = tt.load %67, %5 : tensor<256x!tt.ptr<f32>> loc(#loc67)
    %69 = arith.addf %55, %68 : tensor<256xf32> loc(#loc68)
    %70 = arith.fptosi %26 : tensor<256xf32> to tensor<256xi64> loc(#loc69)
    %71 = arith.addi %70, %cst : tensor<256xi64> loc(#loc70)
    %72 = arith.cmpi slt, %70, %cst_2 : tensor<256xi64> loc(#loc71)
    %73 = arith.select %72, %71, %70 : tensor<256xi1>, tensor<256xi64> loc(#loc72)
    %74 = arith.cmpi sge, %73, %cst_2 : tensor<256xi64> loc(#loc73)
    %75 = arith.cmpi slt, %73, %cst : tensor<256xi64> loc(#loc74)
    %76 = arith.andi %74, %75 : tensor<256xi1> loc(#loc75)
    %77 = arith.ori %76, %34 : tensor<256xi1> loc(#loc76)
    tt.assert %77, "index out of bounds: 0 <= tmp31 < 13" : tensor<256xi1> loc(#loc77)
    %78 = arith.muli %73, %cst_5 : tensor<256xi64> loc(#loc78)
    %79 = arith.addi %37, %78 : tensor<256xi64> loc(#loc79)
    %80 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc80)
    %81 = tt.addptr %80, %79 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc80)
    %82 = tt.load %81, %5 : tensor<256x!tt.ptr<f32>> loc(#loc81)
    %83 = arith.addf %69, %82 : tensor<256xf32> loc(#loc82)
    %84 = arith.addf %83, %cst_4 : tensor<256xf32> loc(#loc83)
    %85 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc84)
    %86 = tt.addptr %85, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc84)
    tt.store %86, %84, %5 : tensor<256x!tt.ptr<f32>> loc(#loc85)
    tt.return loc(#loc86)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":21:28)
#loc3 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":21:33)
#loc4 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":22:36)
#loc5 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":22:23)
#loc6 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":23:21)
#loc7 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":24:21)
#loc8 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":24:26)
#loc9 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":25:19)
#loc10 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":26:19)
#loc11 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":28:35)
#loc12 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":28:43)
#loc13 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":28:40)
#loc14 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":28:30)
#loc15 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":28:48)
#loc16 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":29:34)
#loc17 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":29:39)
#loc18 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":29:30)
#loc19 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":29:47)
#loc20 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":30:35)
#loc21 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":30:40)
#loc22 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":30:31)
#loc23 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":30:48)
#loc24 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":31:36)
#loc25 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":31:31)
#loc26 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":31:44)
#loc27 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":32:19)
#loc28 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":34:18)
#loc29 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":35:18)
#loc30 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":36:32)
#loc31 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:28)
#loc32 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:44)
#loc33 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:37)
#loc34 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:53)
#loc35 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:51)
#loc36 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":37:61)
#loc37 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":38:37)
#loc38 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":38:35)
#loc39 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":38:30)
#loc40 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":38:44)
#loc41 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":39:19)
#loc42 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":41:19)
#loc43 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":42:19)
#loc44 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":43:35)
#loc45 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":44:28)
#loc46 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":44:46)
#loc47 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":44:38)
#loc48 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":44:52)
#loc49 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":44:62)
#loc50 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":45:38)
#loc51 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":45:36)
#loc52 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":45:31)
#loc53 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":45:46)
#loc54 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":46:19)
#loc55 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":47:21)
#loc56 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":49:20)
#loc57 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":50:20)
#loc58 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":51:35)
#loc59 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":52:28)
#loc60 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":52:46)
#loc61 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":52:38)
#loc62 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":52:53)
#loc63 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":52:63)
#loc64 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":53:38)
#loc65 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":53:36)
#loc66 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":53:31)
#loc67 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":53:46)
#loc68 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":54:20)
#loc69 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":55:21)
#loc70 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":57:20)
#loc71 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":58:20)
#loc72 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":59:35)
#loc73 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":60:28)
#loc74 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":60:46)
#loc75 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":60:38)
#loc76 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":60:53)
#loc77 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":60:63)
#loc78 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":61:38)
#loc79 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":61:36)
#loc80 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":61:31)
#loc81 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":61:46)
#loc82 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":62:20)
#loc83 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":64:20)
#loc84 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":65:25)
#loc85 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":65:37)
#loc86 = loc("inductor_cache/bs/cbsicsqji23fdxzjlziry3a6hhdh64kajei6ficiqtypdite3foo.py":65:4)
