//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_div_sqrt_25 // -- Begin function triton_poi_fused_add_convolution_div_sqrt_25
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_convolution_div_sqrt_25
.visible .entry triton_poi_fused_add_convolution_div_sqrt_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_sqrt_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_sqrt_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_sqrt_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_div_sqrt_25_param_3,
	.param .u32 triton_poi_fused_add_convolution_div_sqrt_25_param_4,
	.param .u32 triton_poi_fused_add_convolution_div_sqrt_25_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused_add_convolution_div_sqrt_25_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_convolution_div_sqrt_25_param_1];
$L__tmp0:
	.loc	1 22 28                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:22:33
	shl.b32 	%r21, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_div_sqrt_25_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_div_sqrt_25_param_3];
	.loc	1 23 44                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:23:44
	mov.u32 	%r22, %tid.x;
	and.b32  	%r23, %r22, 127;
	.loc	1 23 23                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:23:23
	or.b32  	%r24, %r21, %r23;
	or.b32  	%r25, %r24, 128;
	.loc	1 24 21                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:24:21
	setp.lt.s32 	%p10, %r24, 1536;
	setp.lt.s32 	%p11, %r25, 1536;
	.loc	1 25 28                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:27:21
	setp.lt.s32 	%p12, %r2, 9;
	.loc	1 30 19                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:30:19
	mul.hi.s32 	%r26, %r24, 715827883;
	shr.u32 	%r27, %r26, 31;
	shr.s32 	%r28, %r26, 6;
	add.s32 	%r29, %r28, %r27;
	mul.hi.s32 	%r30, %r25, 715827883;
	shr.u32 	%r31, %r30, 31;
	shr.s32 	%r32, %r30, 6;
	add.s32 	%r33, %r32, %r31;
	.loc	1 32 35                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:32:35
	mad.lo.s32 	%r34, %r24, 9, %r2;
	mad.lo.s32 	%r35, %r25, 9, %r2;
	.loc	1 32 30                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:32:30
	mul.wide.s32 	%rd12, %r34, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r35, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 32 50                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:32:50
	and.pred  	%p1, %p12, %p10;
	and.pred  	%p2, %p12, %p11;
	.loc	1 32 42                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:32:42
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 35                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:33:35
	mad.lo.s32 	%r36, %r29, 9, %r2;
	mad.lo.s32 	%r37, %r33, 9, %r2;
	.loc	1 33 30                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:33:30
	mul.wide.s32 	%rd14, %r36, 4;
	add.s64 	%rd3, %rd9, %rd14;
	mul.wide.s32 	%rd15, %r37, 4;
	add.s64 	%rd4, %rd9, %rd15;
	.loc	1 33 42                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:33:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 34 26                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:34:26
	sqrt.approx.ftz.f32 	%f3, %f1;
	sqrt.approx.ftz.f32 	%f4, %f2;
	.loc	1 23 44                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:23:44
	shl.b32 	%r38, %r22, 1;
	and.b32  	%r39, %r38, 254;
	.loc	1 23 23                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:23:23
	or.b32  	%r40, %r21, %r39;
	.loc	1 24 21                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:24:21
	setp.lt.s32 	%p13, %r40, 1536;
	.loc	1 32 50                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:32:50
	and.pred  	%p9, %p12, %p13;
	.loc	1 30 19                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:30:19
	mul.hi.s32 	%r42, %r40, 715827883;
	shr.u32 	%r43, %r42, 31;
	shr.s32 	%r44, %r42, 6;
	add.s32 	%r45, %r44, %r43;
	.loc	1 31 19                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:31:19
	mul.lo.s32 	%r46, %r45, 384;
	sub.s32 	%r47, %r40, %r46;
	.loc	1 36 18                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:36:18
	add.f32 	%f5, %f3, 0f2EDBE6FF;
	add.f32 	%f6, %f4, 0f2EDBE6FF;
	.loc	1 37 18                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:37:18
	mov.b32 	%r9, %f5;
	// begin inline asm
	div.full.f32 %r13, %r8, %r9;
	// end inline asm
	mov.b32 	%r12, %f6;
	// begin inline asm
	div.full.f32 %r14, %r11, %r12;
	// end inline asm
	.loc	1 38 25                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:38:25
	add.s64 	%rd5, %rd10, %rd12;
	add.s64 	%rd6, %rd10, %rd13;
	.loc	1 38 43                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:38:43
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r13 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.b32 [ %rd6 + 0 ], { %r14 };
	// end inline asm
	.loc	1 39 30                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:39:30
	mad.lo.s32 	%r48, %r2, 384, %r47;
	.loc	1 39 39                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:39:39
	mad.lo.s32 	%r49, %r45, 3456, %r48;
	.loc	1 39 25                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:39:25
	mul.wide.s32 	%rd16, %r49, 4;
	add.s64 	%rd7, %rd11, %rd16;
	.loc	1 39 55                         // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:39:55
	shl.b32 	%r50, %r23, 2;
	mov.u32 	%r51, global_smem;
	add.s32 	%r15, %r51, %r50;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.b32 [ %r15 + 0 ], %r8;
	// end inline asm
	add.s32 	%r17, %r15, 512;
	// begin inline asm
	@%p7 st.shared.b32 [ %r17 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r52, %r39, 2;
	add.s32 	%r53, %r51, %r52;
	ld.shared.v2.u32 	{%r19, %r20}, [%r53];
	// begin inline asm
	@%p9 st.global.v2.b32 [ %rd7 + 0 ], { %r19, %r20 };
	// end inline asm
	.loc	1 39 4                          // c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py:39:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/64/c64pks6ob33pe2zjcaufj7p5xqt7yfuc47vtf6ndy3mcxe7kq3qm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 52
.b8 112
.b8 107
.b8 115
.b8 54
.b8 111
.b8 98
.b8 51
.b8 51
.b8 112
.b8 101
.b8 50
.b8 122
.b8 106
.b8 99
.b8 97
.b8 117
.b8 102
.b8 106
.b8 55
.b8 112
.b8 53
.b8 120
.b8 113
.b8 116
.b8 55
.b8 121
.b8 102
.b8 117
.b8 99
.b8 52
.b8 55
.b8 118
.b8 116
.b8 102
.b8 54
.b8 110
.b8 100
.b8 121
.b8 51
.b8 109
.b8 99
.b8 120
.b8 101
.b8 55
.b8 107
.b8 113
.b8 51
.b8 113
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
